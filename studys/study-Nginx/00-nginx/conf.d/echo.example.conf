upstream echo_upstream{
    server  echoserver:8080;
    keepalive 1;
}

upstream record_upstream {
    server  httprecord:8080;
}

server {
    listen       8080;
    listen       [::]:8080;
    server_name  echo.example;                        
    keepalive_requests  2000;
    keepalive_timeout 60s;

    location / {
        proxy_pass  http://echo_upstream;
    }

    location /basic/ {
        secure_link_secret 12345;
        if ($secure_link = "") { return 403; }
        rewrite ^ /$secure_link;

        # $ echo -n 'hls/bunny.m3u812345' | openssl md5 -hex 
        # (stdin)= 5d626a1fb79396e46a65333e89b3bf04
        # $ curl 127.0.0.1:9000/basic/5d626a1fb79396e46a65333e89b3bf04/hls/bunny.m3u8
    }

    location /tmp/ {
        secure_link $arg_md5,$arg_expires;
        secure_link_md5 "$secure_link_expires$uri 12345";
        if ($secure_link = "") { return 403; }
        if ($secure_link = "0") { return 410; }

        rewrite ^/tmp/(.*)$  /$1 last;

        # 假设要访问 /tmp/files/pricelist.html，超时时间为 300 秒
        # 根据 secure_link_md5 指定格式计算 md5
        # expires=$((`date +%s` + 300))
        # md5=`echo -n "$expires/tmp/files/pricelist.html 12345" |openssl md5 -binary | openssl base64 | tr +/ -_ | tr -d = `
        # curl "127.0.0.1:9000/tmp/files/pricelist.html?md5=$md5&expires=$expires"
    }
}
