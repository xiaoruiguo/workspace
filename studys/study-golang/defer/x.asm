
defer:	file format ELF64-x86-64

Disassembly of section .text:
runtime.text:
  401000:	48 8b 44 24 10 	movq	16(%rsp), %rax
  401005:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  40100a:	c3 	retq
  40100b:	cc 	int3
  40100c:	cc 	int3
  40100d:	cc 	int3
  40100e:	cc 	int3
  40100f:	cc 	int3

runtime.memhash8:
  401010:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  401019:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40101d:	76 43 	jbe	67 <runtime.memhash8+0x52>
  40101f:	48 83 ec 28 	subq	$40, %rsp
  401023:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  401028:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  40102d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  401032:	48 89 04 24 	movq	%rax, (%rsp)
  401036:	48 8b 44 24 38 	movq	56(%rsp), %rax
  40103b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  401040:	48 c7 44 24 10 01 00 00 00 	movq	$1, 16(%rsp)
  401049:	e8 c2 4a 00 00 	callq	19138 <runtime.memhash>
  40104e:	48 8b 44 24 18 	movq	24(%rsp), %rax
  401053:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  401058:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  40105d:	48 83 c4 28 	addq	$40, %rsp
  401061:	c3 	retq
  401062:	e8 09 35 04 00 	callq	275721 <runtime.morestack_noctxt>
  401067:	eb a7 	jmp	-89 <runtime.memhash8>
  401069:	cc 	int3
  40106a:	cc 	int3
  40106b:	cc 	int3
  40106c:	cc 	int3
  40106d:	cc 	int3
  40106e:	cc 	int3
  40106f:	cc 	int3

runtime.memhash16:
  401070:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  401079:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40107d:	76 43 	jbe	67 <runtime.memhash16+0x52>
  40107f:	48 83 ec 28 	subq	$40, %rsp
  401083:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  401088:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  40108d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  401092:	48 89 04 24 	movq	%rax, (%rsp)
  401096:	48 8b 44 24 38 	movq	56(%rsp), %rax
  40109b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4010a0:	48 c7 44 24 10 02 00 00 00 	movq	$2, 16(%rsp)
  4010a9:	e8 62 4a 00 00 	callq	19042 <runtime.memhash>
  4010ae:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4010b3:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  4010b8:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4010bd:	48 83 c4 28 	addq	$40, %rsp
  4010c1:	c3 	retq
  4010c2:	e8 a9 34 04 00 	callq	275625 <runtime.morestack_noctxt>
  4010c7:	eb a7 	jmp	-89 <runtime.memhash16>
  4010c9:	cc 	int3
  4010ca:	cc 	int3
  4010cb:	cc 	int3
  4010cc:	cc 	int3
  4010cd:	cc 	int3
  4010ce:	cc 	int3
  4010cf:	cc 	int3

runtime.memhash128:
  4010d0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4010d9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4010dd:	76 43 	jbe	67 <runtime.memhash128+0x52>
  4010df:	48 83 ec 28 	subq	$40, %rsp
  4010e3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  4010e8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  4010ed:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4010f2:	48 89 04 24 	movq	%rax, (%rsp)
  4010f6:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4010fb:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  401100:	48 c7 44 24 10 10 00 00 00 	movq	$16, 16(%rsp)
  401109:	e8 02 4a 00 00 	callq	18946 <runtime.memhash>
  40110e:	48 8b 44 24 18 	movq	24(%rsp), %rax
  401113:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  401118:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  40111d:	48 83 c4 28 	addq	$40, %rsp
  401121:	c3 	retq
  401122:	e8 49 34 04 00 	callq	275529 <runtime.morestack_noctxt>
  401127:	eb a7 	jmp	-89 <runtime.memhash128>
  401129:	cc 	int3
  40112a:	cc 	int3
  40112b:	cc 	int3
  40112c:	cc 	int3
  40112d:	cc 	int3
  40112e:	cc 	int3
  40112f:	cc 	int3

runtime.memhash_varlen:
  401130:	48 83 ec 28 	subq	$40, %rsp
  401134:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  401139:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  40113e:	48 8d 42 08 	leaq	8(%rdx), %rax
  401142:	48 8b 00 	movq	(%rax), %rax
  401145:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  40114a:	48 89 0c 24 	movq	%rcx, (%rsp)
  40114e:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  401153:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  401158:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40115d:	e8 ae 49 00 00 	callq	18862 <runtime.memhash>
  401162:	48 8b 44 24 18 	movq	24(%rsp), %rax
  401167:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  40116c:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  401171:	48 83 c4 28 	addq	$40, %rsp
  401175:	c3 	retq
  401176:	cc 	int3
  401177:	cc 	int3
  401178:	cc 	int3
  401179:	cc 	int3
  40117a:	cc 	int3
  40117b:	cc 	int3
  40117c:	cc 	int3
  40117d:	cc 	int3
  40117e:	cc 	int3
  40117f:	cc 	int3

runtime.strhash:
  401180:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  401189:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40118d:	76 46 	jbe	70 <runtime.strhash+0x55>
  40118f:	48 83 ec 28 	subq	$40, %rsp
  401193:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  401198:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  40119d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4011a2:	48 8b 08 	movq	(%rax), %rcx
  4011a5:	48 8b 40 08 	movq	8(%rax), %rax
  4011a9:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  4011ae:	48 89 0c 24 	movq	%rcx, (%rsp)
  4011b2:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4011b7:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4011bc:	e8 4f 49 00 00 	callq	18767 <runtime.memhash>
  4011c1:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4011c6:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  4011cb:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4011d0:	48 83 c4 28 	addq	$40, %rsp
  4011d4:	c3 	retq
  4011d5:	e8 96 33 04 00 	callq	275350 <runtime.morestack_noctxt>
  4011da:	eb a4 	jmp	-92 <runtime.strhash>
  4011dc:	cc 	int3
  4011dd:	cc 	int3
  4011de:	cc 	int3
  4011df:	cc 	int3

runtime.f32hash:
  4011e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4011e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4011ed:	0f 86 fc 00 00 00 	jbe	252 <runtime.f32hash+0x10f>
  4011f3:	48 83 ec 28 	subq	$40, %rsp
  4011f7:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  4011fc:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  401201:	48 8b 44 24 30 	movq	48(%rsp), %rax
  401206:	f3 0f 10 00 	movss	(%rax), %xmm0
  40120a:	0f 57 c9 	xorps	%xmm1, %xmm1
  40120d:	0f 2e c1 	ucomiss	%xmm1, %xmm0
  401210:	75 06 	jne	6 <runtime.f32hash+0x38>
  401212:	0f 8b a8 00 00 00 	jnp	168 <runtime.f32hash+0xe0>
  401218:	0f 2e c0 	ucomiss	%xmm0, %xmm0
  40121b:	75 02 	jne	2 <runtime.f32hash+0x3f>
  40121d:	7b 71 	jnp	113 <runtime.f32hash+0xb0>
  40121f:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  401228:	48 8b 40 30 	movq	48(%rax), %rax
  40122c:	8b 88 20 01 00 00 	movl	288(%rax), %ecx
  401232:	8b 90 24 01 00 00 	movl	292(%rax), %edx
  401238:	89 90 20 01 00 00 	movl	%edx, 288(%rax)
  40123e:	89 cb 	movl	%ecx, %ebx
  401240:	c1 e1 11 	shll	$17, %ecx
  401243:	31 cb 	xorl	%ecx, %ebx
  401245:	89 d1 	movl	%edx, %ecx
  401247:	31 da 	xorl	%ebx, %edx
  401249:	c1 eb 07 	shrl	$7, %ebx
  40124c:	31 d3 	xorl	%edx, %ebx
  40124e:	89 ca 	movl	%ecx, %edx
  401250:	c1 e9 10 	shrl	$16, %ecx
  401253:	31 d9 	xorl	%ebx, %ecx
  401255:	89 88 24 01 00 00 	movl	%ecx, 292(%rax)
  40125b:	8d 04 0a 	leal	(%rdx,%rcx), %eax
  40125e:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  401263:	48 31 c8 	xorq	%rcx, %rax
  401266:	48 b9 21 a6 56 6a a1 6e 75 00 	movabsq	$33054211828000289, %rcx
  401270:	48 31 c1 	xorq	%rax, %rcx
  401273:	48 b8 bf 63 8f bb 6b ef 52 00 	movabsq	$23344194077549503, %rax
  40127d:	48 0f af c8 	imulq	%rax, %rcx
  401281:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  401286:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  40128b:	48 83 c4 28 	addq	$40, %rsp
  40128f:	c3 	retq
  401290:	48 89 04 24 	movq	%rax, (%rsp)
  401294:	48 8b 44 24 38 	movq	56(%rsp), %rax
  401299:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40129e:	48 c7 44 24 10 04 00 00 00 	movq	$4, 16(%rsp)
  4012a7:	e8 64 48 00 00 	callq	18532 <runtime.memhash>
  4012ac:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4012b1:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  4012b6:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4012bb:	48 83 c4 28 	addq	$40, %rsp
  4012bf:	c3 	retq
  4012c0:	48 b8 21 a6 56 6a a1 6e 75 00 	movabsq	$33054211828000289, %rax
  4012ca:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  4012cf:	48 31 c8 	xorq	%rcx, %rax
  4012d2:	48 b9 bf 63 8f bb 6b ef 52 00 	movabsq	$23344194077549503, %rcx
  4012dc:	48 0f af c1 	imulq	%rcx, %rax
  4012e0:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  4012e5:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4012ea:	48 83 c4 28 	addq	$40, %rsp
  4012ee:	c3 	retq
  4012ef:	e8 7c 32 04 00 	callq	275068 <runtime.morestack_noctxt>
  4012f4:	e9 e7 fe ff ff 	jmp	-281 <runtime.f32hash>
  4012f9:	cc 	int3
  4012fa:	cc 	int3
  4012fb:	cc 	int3
  4012fc:	cc 	int3
  4012fd:	cc 	int3
  4012fe:	cc 	int3
  4012ff:	cc 	int3

runtime.f64hash:
  401300:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  401309:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40130d:	0f 86 fe 00 00 00 	jbe	254 <runtime.f64hash+0x111>
  401313:	48 83 ec 28 	subq	$40, %rsp
  401317:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  40131c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  401321:	48 8b 44 24 30 	movq	48(%rsp), %rax
  401326:	f2 0f 10 00 	movsd	(%rax), %xmm0
  40132a:	0f 57 c9 	xorps	%xmm1, %xmm1
  40132d:	66 0f 2e c1 	ucomisd	%xmm1, %xmm0
  401331:	75 06 	jne	6 <runtime.f64hash+0x39>
  401333:	0f 8b a9 00 00 00 	jnp	169 <runtime.f64hash+0xe2>
  401339:	66 0f 2e c0 	ucomisd	%xmm0, %xmm0
  40133d:	75 02 	jne	2 <runtime.f64hash+0x41>
  40133f:	7b 71 	jnp	113 <runtime.f64hash+0xb2>
  401341:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  40134a:	48 8b 40 30 	movq	48(%rax), %rax
  40134e:	8b 88 20 01 00 00 	movl	288(%rax), %ecx
  401354:	8b 90 24 01 00 00 	movl	292(%rax), %edx
  40135a:	89 90 20 01 00 00 	movl	%edx, 288(%rax)
  401360:	89 cb 	movl	%ecx, %ebx
  401362:	c1 e1 11 	shll	$17, %ecx
  401365:	31 cb 	xorl	%ecx, %ebx
  401367:	89 d1 	movl	%edx, %ecx
  401369:	31 da 	xorl	%ebx, %edx
  40136b:	c1 eb 07 	shrl	$7, %ebx
  40136e:	31 d3 	xorl	%edx, %ebx
  401370:	89 ca 	movl	%ecx, %edx
  401372:	c1 e9 10 	shrl	$16, %ecx
  401375:	31 d9 	xorl	%ebx, %ecx
  401377:	89 88 24 01 00 00 	movl	%ecx, 292(%rax)
  40137d:	8d 04 0a 	leal	(%rdx,%rcx), %eax
  401380:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  401385:	48 31 c8 	xorq	%rcx, %rax
  401388:	48 b9 21 a6 56 6a a1 6e 75 00 	movabsq	$33054211828000289, %rcx
  401392:	48 31 c1 	xorq	%rax, %rcx
  401395:	48 b8 bf 63 8f bb 6b ef 52 00 	movabsq	$23344194077549503, %rax
  40139f:	48 0f af c8 	imulq	%rax, %rcx
  4013a3:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  4013a8:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4013ad:	48 83 c4 28 	addq	$40, %rsp
  4013b1:	c3 	retq
  4013b2:	48 89 04 24 	movq	%rax, (%rsp)
  4013b6:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4013bb:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4013c0:	48 c7 44 24 10 08 00 00 00 	movq	$8, 16(%rsp)
  4013c9:	e8 42 47 00 00 	callq	18242 <runtime.memhash>
  4013ce:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4013d3:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  4013d8:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4013dd:	48 83 c4 28 	addq	$40, %rsp
  4013e1:	c3 	retq
  4013e2:	48 b8 21 a6 56 6a a1 6e 75 00 	movabsq	$33054211828000289, %rax
  4013ec:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  4013f1:	48 31 c8 	xorq	%rcx, %rax
  4013f4:	48 b9 bf 63 8f bb 6b ef 52 00 	movabsq	$23344194077549503, %rcx
  4013fe:	48 0f af c1 	imulq	%rcx, %rax
  401402:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  401407:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  40140c:	48 83 c4 28 	addq	$40, %rsp
  401410:	c3 	retq
  401411:	e8 5a 31 04 00 	callq	274778 <runtime.morestack_noctxt>
  401416:	e9 e5 fe ff ff 	jmp	-283 <runtime.f64hash>
  40141b:	cc 	int3
  40141c:	cc 	int3
  40141d:	cc 	int3
  40141e:	cc 	int3
  40141f:	cc 	int3

runtime.c64hash:
  401420:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  401429:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40142d:	76 58 	jbe	88 <runtime.c64hash+0x67>
  40142f:	48 83 ec 20 	subq	$32, %rsp
  401433:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  401438:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  40143d:	48 8b 44 24 28 	movq	40(%rsp), %rax
  401442:	84 00 	testb	%al, (%rax)
  401444:	48 89 04 24 	movq	%rax, (%rsp)
  401448:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  40144d:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  401452:	e8 89 fd ff ff 	callq	-631 <runtime.f32hash>
  401457:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40145c:	48 83 c0 04 	addq	$4, %rax
  401460:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  401465:	48 89 04 24 	movq	%rax, (%rsp)
  401469:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40146e:	e8 6d fd ff ff 	callq	-659 <runtime.f32hash>
  401473:	48 8b 44 24 10 	movq	16(%rsp), %rax
  401478:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  40147d:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  401482:	48 83 c4 20 	addq	$32, %rsp
  401486:	c3 	retq
  401487:	e8 e4 30 04 00 	callq	274660 <runtime.morestack_noctxt>
  40148c:	eb 92 	jmp	-110 <runtime.c64hash>
  40148e:	cc 	int3
  40148f:	cc 	int3

runtime.c128hash:
  401490:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  401499:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40149d:	76 58 	jbe	88 <runtime.c128hash+0x67>
  40149f:	48 83 ec 20 	subq	$32, %rsp
  4014a3:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  4014a8:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  4014ad:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4014b2:	84 00 	testb	%al, (%rax)
  4014b4:	48 89 04 24 	movq	%rax, (%rsp)
  4014b8:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4014bd:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4014c2:	e8 39 fe ff ff 	callq	-455 <runtime.f64hash>
  4014c7:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4014cc:	48 83 c0 08 	addq	$8, %rax
  4014d0:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  4014d5:	48 89 04 24 	movq	%rax, (%rsp)
  4014d9:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4014de:	e8 1d fe ff ff 	callq	-483 <runtime.f64hash>
  4014e3:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4014e8:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  4014ed:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  4014f2:	48 83 c4 20 	addq	$32, %rsp
  4014f6:	c3 	retq
  4014f7:	e8 74 30 04 00 	callq	274548 <runtime.morestack_noctxt>
  4014fc:	eb 92 	jmp	-110 <runtime.c128hash>
  4014fe:	cc 	int3
  4014ff:	cc 	int3

runtime.interhash:
  401500:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  401509:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40150d:	0f 86 63 01 00 00 	jbe	355 <runtime.interhash+0x176>
  401513:	48 83 ec 50 	subq	$80, %rsp
  401517:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  40151c:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  401521:	48 8b 44 24 58 	movq	88(%rsp), %rax
  401526:	48 8b 08 	movq	(%rax), %rcx
  401529:	48 85 c9 	testq	%rcx, %rcx
  40152c:	0f 84 a9 00 00 00 	je	169 <runtime.interhash+0xdb>
  401532:	48 8b 49 08 	movq	8(%rcx), %rcx
  401536:	48 8b 59 18 	movq	24(%rcx), %rbx
  40153a:	48 8b 13 	movq	(%rbx), %rdx
  40153d:	48 85 d2 	testq	%rdx, %rdx
  401540:	0f 84 a9 00 00 00 	je	169 <runtime.interhash+0xef>
  401546:	0f b6 49 17 	movzbl	23(%rcx), %ecx
  40154a:	f6 c1 20 	testb	$32, %cl
  40154d:	74 46 	je	70 <runtime.interhash+0x95>
  40154f:	48 83 c0 08 	addq	$8, %rax
  401553:	48 89 04 24 	movq	%rax, (%rsp)
  401557:	48 b8 21 a6 56 6a a1 6e 75 00 	movabsq	$33054211828000289, %rax
  401561:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  401566:	48 31 c8 	xorq	%rcx, %rax
  401569:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40156e:	48 8b 02 	movq	(%rdx), %rax
  401571:	ff d0 	callq	*%rax
  401573:	48 8b 44 24 10 	movq	16(%rsp), %rax
  401578:	48 b9 bf 63 8f bb 6b ef 52 00 	movabsq	$23344194077549503, %rcx
  401582:	48 0f af c8 	imulq	%rax, %rcx
  401586:	48 89 4c 24 68 	movq	%rcx, 104(%rsp)
  40158b:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  401590:	48 83 c4 50 	addq	$80, %rsp
  401594:	c3 	retq
  401595:	48 8b 40 08 	movq	8(%rax), %rax
  401599:	48 89 04 24 	movq	%rax, (%rsp)
  40159d:	48 b8 21 a6 56 6a a1 6e 75 00 	movabsq	$33054211828000289, %rax
  4015a7:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  4015ac:	48 31 c8 	xorq	%rcx, %rax
  4015af:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4015b4:	48 8b 02 	movq	(%rdx), %rax
  4015b7:	ff d0 	callq	*%rax
  4015b9:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4015be:	48 b9 bf 63 8f bb 6b ef 52 00 	movabsq	$23344194077549503, %rcx
  4015c8:	48 0f af c1 	imulq	%rcx, %rax
  4015cc:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  4015d1:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  4015d6:	48 83 c4 50 	addq	$80, %rsp
  4015da:	c3 	retq
  4015db:	48 8b 44 24 60 	movq	96(%rsp), %rax
  4015e0:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  4015e5:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  4015ea:	48 83 c4 50 	addq	$80, %rsp
  4015ee:	c3 	retq
  4015ef:	48 89 0c 24 	movq	%rcx, (%rsp)
  4015f3:	e8 78 d3 03 00 	callq	250744 <runtime.(*_type).string>
  4015f8:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4015fd:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  401602:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  40160a:	48 8d 15 c5 a2 06 00 	leaq	434885(%rip), %rdx
  401611:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  401616:	48 c7 44 24 10 18 00 00 00 	movq	$24, 16(%rsp)
  40161f:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  401624:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  401629:	e8 b2 59 03 00 	callq	219570 <runtime.concatstring2>
  40162e:	48 8b 44 24 30 	movq	48(%rsp), %rax
  401633:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  401638:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  40163d:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  401642:	48 8d 05 77 98 05 00 	leaq	366711(%rip), %rax
  401649:	48 89 04 24 	movq	%rax, (%rsp)
  40164d:	48 8d 44 24 38 	leaq	56(%rsp), %rax
  401652:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  401657:	e8 44 7b 00 00 	callq	31556 <runtime.convT2Estring>
  40165c:	48 8b 44 24 18 	movq	24(%rsp), %rax
  401661:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  401666:	48 89 0c 24 	movq	%rcx, (%rsp)
  40166a:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40166f:	e8 bc f3 01 00 	callq	127932 <runtime.gopanic>
  401674:	0f 0b 	ud2
  401676:	e8 f5 2e 04 00 	callq	274165 <runtime.morestack_noctxt>
  40167b:	e9 80 fe ff ff 	jmp	-384 <runtime.interhash>

runtime.nilinterhash:
  401680:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  401689:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40168d:	0f 86 5f 01 00 00 	jbe	351 <runtime.nilinterhash+0x172>
  401693:	48 83 ec 50 	subq	$80, %rsp
  401697:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  40169c:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  4016a1:	48 8b 44 24 58 	movq	88(%rsp), %rax
  4016a6:	48 8b 08 	movq	(%rax), %rcx
  4016a9:	48 85 c9 	testq	%rcx, %rcx
  4016ac:	0f 84 a5 00 00 00 	je	165 <runtime.nilinterhash+0xd7>
  4016b2:	48 8b 59 18 	movq	24(%rcx), %rbx
  4016b6:	48 8b 13 	movq	(%rbx), %rdx
  4016b9:	48 85 d2 	testq	%rdx, %rdx
  4016bc:	0f 84 a9 00 00 00 	je	169 <runtime.nilinterhash+0xeb>
  4016c2:	0f b6 49 17 	movzbl	23(%rcx), %ecx
  4016c6:	f6 c1 20 	testb	$32, %cl
  4016c9:	74 46 	je	70 <runtime.nilinterhash+0x91>
  4016cb:	48 83 c0 08 	addq	$8, %rax
  4016cf:	48 89 04 24 	movq	%rax, (%rsp)
  4016d3:	48 b8 21 a6 56 6a a1 6e 75 00 	movabsq	$33054211828000289, %rax
  4016dd:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  4016e2:	48 31 c8 	xorq	%rcx, %rax
  4016e5:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4016ea:	48 8b 02 	movq	(%rdx), %rax
  4016ed:	ff d0 	callq	*%rax
  4016ef:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4016f4:	48 b9 bf 63 8f bb 6b ef 52 00 	movabsq	$23344194077549503, %rcx
  4016fe:	48 0f af c8 	imulq	%rax, %rcx
  401702:	48 89 4c 24 68 	movq	%rcx, 104(%rsp)
  401707:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  40170c:	48 83 c4 50 	addq	$80, %rsp
  401710:	c3 	retq
  401711:	48 8b 40 08 	movq	8(%rax), %rax
  401715:	48 89 04 24 	movq	%rax, (%rsp)
  401719:	48 b8 21 a6 56 6a a1 6e 75 00 	movabsq	$33054211828000289, %rax
  401723:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  401728:	48 31 c8 	xorq	%rcx, %rax
  40172b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  401730:	48 8b 02 	movq	(%rdx), %rax
  401733:	ff d0 	callq	*%rax
  401735:	48 8b 44 24 10 	movq	16(%rsp), %rax
  40173a:	48 b9 bf 63 8f bb 6b ef 52 00 	movabsq	$23344194077549503, %rcx
  401744:	48 0f af c1 	imulq	%rcx, %rax
  401748:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  40174d:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  401752:	48 83 c4 50 	addq	$80, %rsp
  401756:	c3 	retq
  401757:	48 8b 44 24 60 	movq	96(%rsp), %rax
  40175c:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  401761:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  401766:	48 83 c4 50 	addq	$80, %rsp
  40176a:	c3 	retq
  40176b:	48 89 0c 24 	movq	%rcx, (%rsp)
  40176f:	e8 fc d1 03 00 	callq	250364 <runtime.(*_type).string>
  401774:	48 8b 44 24 10 	movq	16(%rsp), %rax
  401779:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  40177e:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  401786:	48 8d 15 49 a1 06 00 	leaq	434505(%rip), %rdx
  40178d:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  401792:	48 c7 44 24 10 18 00 00 00 	movq	$24, 16(%rsp)
  40179b:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  4017a0:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  4017a5:	e8 36 58 03 00 	callq	219190 <runtime.concatstring2>
  4017aa:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4017af:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  4017b4:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  4017b9:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  4017be:	48 8d 05 fb 96 05 00 	leaq	366331(%rip), %rax
  4017c5:	48 89 04 24 	movq	%rax, (%rsp)
  4017c9:	48 8d 44 24 38 	leaq	56(%rsp), %rax
  4017ce:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4017d3:	e8 c8 79 00 00 	callq	31176 <runtime.convT2Estring>
  4017d8:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4017dd:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  4017e2:	48 89 0c 24 	movq	%rcx, (%rsp)
  4017e6:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4017eb:	e8 40 f2 01 00 	callq	127552 <runtime.gopanic>
  4017f0:	0f 0b 	ud2
  4017f2:	e8 79 2d 04 00 	callq	273785 <runtime.morestack_noctxt>
  4017f7:	e9 84 fe ff ff 	jmp	-380 <runtime.nilinterhash>
  4017fc:	cc 	int3
  4017fd:	cc 	int3
  4017fe:	cc 	int3
  4017ff:	cc 	int3

runtime.memequal0:
  401800:	c6 44 24 18 01 	movb	$1, 24(%rsp)
  401805:	c3 	retq
  401806:	cc 	int3
  401807:	cc 	int3
  401808:	cc 	int3
  401809:	cc 	int3
  40180a:	cc 	int3
  40180b:	cc 	int3
  40180c:	cc 	int3
  40180d:	cc 	int3
  40180e:	cc 	int3
  40180f:	cc 	int3

runtime.memequal8:
  401810:	48 8b 44 24 08 	movq	8(%rsp), %rax
  401815:	0f b6 00 	movzbl	(%rax), %eax
  401818:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  40181d:	0f b6 09 	movzbl	(%rcx), %ecx
  401820:	38 c8 	cmpb	%cl, %al
  401822:	48 8d 44 24 18 	leaq	24(%rsp), %rax
  401827:	0f 94 00 	sete	(%rax)
  40182a:	c3 	retq
  40182b:	cc 	int3
  40182c:	cc 	int3
  40182d:	cc 	int3
  40182e:	cc 	int3
  40182f:	cc 	int3

runtime.memequal16:
  401830:	48 8b 44 24 08 	movq	8(%rsp), %rax
  401835:	0f b7 00 	movzwl	(%rax), %eax
  401838:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  40183d:	0f b7 09 	movzwl	(%rcx), %ecx
  401840:	66 39 c8 	cmpw	%cx, %ax
  401843:	48 8d 44 24 18 	leaq	24(%rsp), %rax
  401848:	0f 94 00 	sete	(%rax)
  40184b:	c3 	retq
  40184c:	cc 	int3
  40184d:	cc 	int3
  40184e:	cc 	int3
  40184f:	cc 	int3

runtime.memequal32:
  401850:	48 8b 44 24 08 	movq	8(%rsp), %rax
  401855:	8b 00 	movl	(%rax), %eax
  401857:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  40185c:	8b 09 	movl	(%rcx), %ecx
  40185e:	39 c8 	cmpl	%ecx, %eax
  401860:	48 8d 44 24 18 	leaq	24(%rsp), %rax
  401865:	0f 94 00 	sete	(%rax)
  401868:	c3 	retq
  401869:	cc 	int3
  40186a:	cc 	int3
  40186b:	cc 	int3
  40186c:	cc 	int3
  40186d:	cc 	int3
  40186e:	cc 	int3
  40186f:	cc 	int3

runtime.memequal64:
  401870:	48 8b 44 24 08 	movq	8(%rsp), %rax
  401875:	48 8b 00 	movq	(%rax), %rax
  401878:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  40187d:	48 8b 09 	movq	(%rcx), %rcx
  401880:	48 39 c8 	cmpq	%rcx, %rax
  401883:	48 8d 44 24 18 	leaq	24(%rsp), %rax
  401888:	0f 94 00 	sete	(%rax)
  40188b:	c3 	retq
  40188c:	cc 	int3
  40188d:	cc 	int3
  40188e:	cc 	int3
  40188f:	cc 	int3

runtime.memequal128:
  401890:	48 8b 44 24 08 	movq	8(%rsp), %rax
  401895:	48 8b 08 	movq	(%rax), %rcx
  401898:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  40189d:	48 8b 1a 	movq	(%rdx), %rbx
  4018a0:	48 39 d9 	cmpq	%rbx, %rcx
  4018a3:	75 13 	jne	19 <runtime.memequal128+0x28>
  4018a5:	48 8b 40 08 	movq	8(%rax), %rax
  4018a9:	48 8b 4a 08 	movq	8(%rdx), %rcx
  4018ad:	48 39 c1 	cmpq	%rax, %rcx
  4018b0:	0f 94 c0 	sete	%al
  4018b3:	88 44 24 18 	movb	%al, 24(%rsp)
  4018b7:	c3 	retq
  4018b8:	31 c0 	xorl	%eax, %eax
  4018ba:	eb f7 	jmp	-9 <runtime.memequal128+0x23>
  4018bc:	cc 	int3
  4018bd:	cc 	int3
  4018be:	cc 	int3
  4018bf:	cc 	int3

runtime.f32equal:
  4018c0:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4018c5:	f3 0f 10 00 	movss	(%rax), %xmm0
  4018c9:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4018ce:	f3 0f 10 08 	movss	(%rax), %xmm1
  4018d2:	0f 2e c1 	ucomiss	%xmm1, %xmm0
  4018d5:	0f 94 c1 	sete	%cl
  4018d8:	0f 9b c0 	setnp	%al
  4018db:	21 c1 	andl	%eax, %ecx
  4018dd:	88 4c 24 18 	movb	%cl, 24(%rsp)
  4018e1:	c3 	retq
  4018e2:	cc 	int3
  4018e3:	cc 	int3
  4018e4:	cc 	int3
  4018e5:	cc 	int3
  4018e6:	cc 	int3
  4018e7:	cc 	int3
  4018e8:	cc 	int3
  4018e9:	cc 	int3
  4018ea:	cc 	int3
  4018eb:	cc 	int3
  4018ec:	cc 	int3
  4018ed:	cc 	int3
  4018ee:	cc 	int3
  4018ef:	cc 	int3

runtime.f64equal:
  4018f0:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4018f5:	f2 0f 10 00 	movsd	(%rax), %xmm0
  4018f9:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4018fe:	f2 0f 10 08 	movsd	(%rax), %xmm1
  401902:	66 0f 2e c1 	ucomisd	%xmm1, %xmm0
  401906:	0f 94 c1 	sete	%cl
  401909:	0f 9b c0 	setnp	%al
  40190c:	21 c1 	andl	%eax, %ecx
  40190e:	88 4c 24 18 	movb	%cl, 24(%rsp)
  401912:	c3 	retq
  401913:	cc 	int3
  401914:	cc 	int3
  401915:	cc 	int3
  401916:	cc 	int3
  401917:	cc 	int3
  401918:	cc 	int3
  401919:	cc 	int3
  40191a:	cc 	int3
  40191b:	cc 	int3
  40191c:	cc 	int3
  40191d:	cc 	int3
  40191e:	cc 	int3
  40191f:	cc 	int3

runtime.c64equal:
  401920:	48 8b 44 24 08 	movq	8(%rsp), %rax
  401925:	f3 0f 10 40 04 	movss	4(%rax), %xmm0
  40192a:	f3 0f 10 08 	movss	(%rax), %xmm1
  40192e:	48 8b 44 24 10 	movq	16(%rsp), %rax
  401933:	f3 0f 10 50 04 	movss	4(%rax), %xmm2
  401938:	f3 0f 10 18 	movss	(%rax), %xmm3
  40193c:	0f 2e cb 	ucomiss	%xmm3, %xmm1
  40193f:	0f 94 c1 	sete	%cl
  401942:	0f 9b c0 	setnp	%al
  401945:	21 c1 	andl	%eax, %ecx
  401947:	0f 2e c2 	ucomiss	%xmm2, %xmm0
  40194a:	0f 94 c2 	sete	%dl
  40194d:	0f 9b c0 	setnp	%al
  401950:	21 c2 	andl	%eax, %edx
  401952:	21 d1 	andl	%edx, %ecx
  401954:	88 4c 24 18 	movb	%cl, 24(%rsp)
  401958:	c3 	retq
  401959:	cc 	int3
  40195a:	cc 	int3
  40195b:	cc 	int3
  40195c:	cc 	int3
  40195d:	cc 	int3
  40195e:	cc 	int3
  40195f:	cc 	int3

runtime.c128equal:
  401960:	48 8b 44 24 08 	movq	8(%rsp), %rax
  401965:	f2 0f 10 40 08 	movsd	8(%rax), %xmm0
  40196a:	f2 0f 10 08 	movsd	(%rax), %xmm1
  40196e:	48 8b 44 24 10 	movq	16(%rsp), %rax
  401973:	f2 0f 10 50 08 	movsd	8(%rax), %xmm2
  401978:	f2 0f 10 18 	movsd	(%rax), %xmm3
  40197c:	66 0f 2e cb 	ucomisd	%xmm3, %xmm1
  401980:	0f 94 c1 	sete	%cl
  401983:	0f 9b c0 	setnp	%al
  401986:	21 c1 	andl	%eax, %ecx
  401988:	66 0f 2e c2 	ucomisd	%xmm2, %xmm0
  40198c:	0f 94 c2 	sete	%dl
  40198f:	0f 9b c0 	setnp	%al
  401992:	21 c2 	andl	%eax, %edx
  401994:	21 d1 	andl	%edx, %ecx
  401996:	88 4c 24 18 	movb	%cl, 24(%rsp)
  40199a:	c3 	retq
  40199b:	cc 	int3
  40199c:	cc 	int3
  40199d:	cc 	int3
  40199e:	cc 	int3
  40199f:	cc 	int3

runtime.strequal:
  4019a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4019a9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4019ad:	76 55 	jbe	85 <runtime.strequal+0x64>
  4019af:	48 83 ec 28 	subq	$40, %rsp
  4019b3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  4019b8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  4019bd:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4019c2:	48 8b 48 08 	movq	8(%rax), %rcx
  4019c6:	48 8b 00 	movq	(%rax), %rax
  4019c9:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  4019ce:	48 8b 5a 08 	movq	8(%rdx), %rbx
  4019d2:	48 8b 12 	movq	(%rdx), %rdx
  4019d5:	48 39 d9 	cmpq	%rbx, %rcx
  4019d8:	74 10 	je	16 <runtime.strequal+0x4a>
  4019da:	31 c0 	xorl	%eax, %eax
  4019dc:	88 44 24 40 	movb	%al, 64(%rsp)
  4019e0:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4019e5:	48 83 c4 28 	addq	$40, %rsp
  4019e9:	c3 	retq
  4019ea:	48 89 04 24 	movq	%rax, (%rsp)
  4019ee:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  4019f3:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  4019f8:	e8 43 49 04 00 	callq	280899 <runtime.memequal>
  4019fd:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  401a02:	eb d8 	jmp	-40 <runtime.strequal+0x3c>
  401a04:	e8 67 2b 04 00 	callq	273255 <runtime.morestack_noctxt>
  401a09:	eb 95 	jmp	-107 <runtime.strequal>
  401a0b:	cc 	int3
  401a0c:	cc 	int3
  401a0d:	cc 	int3
  401a0e:	cc 	int3
  401a0f:	cc 	int3

runtime.interequal:
  401a10:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  401a19:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  401a1d:	76 55 	jbe	85 <runtime.interequal+0x64>
  401a1f:	48 83 ec 28 	subq	$40, %rsp
  401a23:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  401a28:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  401a2d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  401a32:	48 8b 48 08 	movq	8(%rax), %rcx
  401a36:	48 8b 00 	movq	(%rax), %rax
  401a39:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  401a3e:	48 8b 5a 08 	movq	8(%rdx), %rbx
  401a42:	48 8b 12 	movq	(%rdx), %rdx
  401a45:	48 39 d0 	cmpq	%rdx, %rax
  401a48:	74 10 	je	16 <runtime.interequal+0x4a>
  401a4a:	31 c0 	xorl	%eax, %eax
  401a4c:	88 44 24 40 	movb	%al, 64(%rsp)
  401a50:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  401a55:	48 83 c4 28 	addq	$40, %rsp
  401a59:	c3 	retq
  401a5a:	48 89 04 24 	movq	%rax, (%rsp)
  401a5e:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  401a63:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  401a68:	e8 c3 01 00 00 	callq	451 <runtime.ifaceeq>
  401a6d:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  401a72:	eb d8 	jmp	-40 <runtime.interequal+0x3c>
  401a74:	e8 f7 2a 04 00 	callq	273143 <runtime.morestack_noctxt>
  401a79:	eb 95 	jmp	-107 <runtime.interequal>
  401a7b:	cc 	int3
  401a7c:	cc 	int3
  401a7d:	cc 	int3
  401a7e:	cc 	int3
  401a7f:	cc 	int3

runtime.nilinterequal:
  401a80:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  401a89:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  401a8d:	76 55 	jbe	85 <runtime.nilinterequal+0x64>
  401a8f:	48 83 ec 28 	subq	$40, %rsp
  401a93:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  401a98:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  401a9d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  401aa2:	48 8b 48 08 	movq	8(%rax), %rcx
  401aa6:	48 8b 00 	movq	(%rax), %rax
  401aa9:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  401aae:	48 8b 5a 08 	movq	8(%rdx), %rbx
  401ab2:	48 8b 12 	movq	(%rdx), %rdx
  401ab5:	48 39 d0 	cmpq	%rdx, %rax
  401ab8:	74 10 	je	16 <runtime.nilinterequal+0x4a>
  401aba:	31 c0 	xorl	%eax, %eax
  401abc:	88 44 24 40 	movb	%al, 64(%rsp)
  401ac0:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  401ac5:	48 83 c4 28 	addq	$40, %rsp
  401ac9:	c3 	retq
  401aca:	48 89 04 24 	movq	%rax, (%rsp)
  401ace:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  401ad3:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  401ad8:	e8 13 00 00 00 	callq	19 <runtime.efaceeq>
  401add:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  401ae2:	eb d8 	jmp	-40 <runtime.nilinterequal+0x3c>
  401ae4:	e8 87 2a 04 00 	callq	273031 <runtime.morestack_noctxt>
  401ae9:	eb 95 	jmp	-107 <runtime.nilinterequal>
  401aeb:	cc 	int3
  401aec:	cc 	int3
  401aed:	cc 	int3
  401aee:	cc 	int3
  401aef:	cc 	int3

runtime.efaceeq:
  401af0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  401af9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  401afd:	0f 86 19 01 00 00 	jbe	281 <runtime.efaceeq+0x12c>
  401b03:	48 83 ec 50 	subq	$80, %rsp
  401b07:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  401b0c:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  401b11:	48 8b 44 24 58 	movq	88(%rsp), %rax
  401b16:	48 85 c0 	testq	%rax, %rax
  401b19:	74 6b 	je	107 <runtime.efaceeq+0x96>
  401b1b:	48 8b 48 18 	movq	24(%rax), %rcx
  401b1f:	48 8b 51 08 	movq	8(%rcx), %rdx
  401b23:	48 85 d2 	testq	%rdx, %rdx
  401b26:	74 6d 	je	109 <runtime.efaceeq+0xa5>
  401b28:	0f b6 40 17 	movzbl	23(%rax), %eax
  401b2c:	a8 20 	testb	$32, %al
  401b2e:	74 2b 	je	43 <runtime.efaceeq+0x6b>
  401b30:	48 8d 44 24 60 	leaq	96(%rsp), %rax
  401b35:	48 89 04 24 	movq	%rax, (%rsp)
  401b39:	48 8d 44 24 68 	leaq	104(%rsp), %rax
  401b3e:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  401b43:	48 8b 02 	movq	(%rdx), %rax
  401b46:	ff d0 	callq	*%rax
  401b48:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  401b4d:	88 44 24 70 	movb	%al, 112(%rsp)
  401b51:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  401b56:	48 83 c4 50 	addq	$80, %rsp
  401b5a:	c3 	retq
  401b5b:	48 8b 44 24 60 	movq	96(%rsp), %rax
  401b60:	48 89 04 24 	movq	%rax, (%rsp)
  401b64:	48 8b 44 24 68 	movq	104(%rsp), %rax
  401b69:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  401b6e:	48 8b 02 	movq	(%rdx), %rax
  401b71:	ff d0 	callq	*%rax
  401b73:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  401b78:	88 44 24 70 	movb	%al, 112(%rsp)
  401b7c:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  401b81:	48 83 c4 50 	addq	$80, %rsp
  401b85:	c3 	retq
  401b86:	c6 44 24 70 01 	movb	$1, 112(%rsp)
  401b8b:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  401b90:	48 83 c4 50 	addq	$80, %rsp
  401b94:	c3 	retq
  401b95:	48 89 04 24 	movq	%rax, (%rsp)
  401b99:	e8 d2 cd 03 00 	callq	249298 <runtime.(*_type).string>
  401b9e:	48 8b 44 24 10 	movq	16(%rsp), %rax
  401ba3:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  401ba8:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  401bb0:	48 8d 15 c7 a4 06 00 	leaq	435399(%rip), %rdx
  401bb7:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  401bbc:	48 c7 44 24 10 1c 00 00 00 	movq	$28, 16(%rsp)
  401bc5:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  401bca:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  401bcf:	e8 0c 54 03 00 	callq	218124 <runtime.concatstring2>
  401bd4:	48 8b 44 24 30 	movq	48(%rsp), %rax
  401bd9:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  401bde:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  401be3:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  401be8:	48 8d 05 d1 92 05 00 	leaq	365265(%rip), %rax
  401bef:	48 89 04 24 	movq	%rax, (%rsp)
  401bf3:	48 8d 44 24 38 	leaq	56(%rsp), %rax
  401bf8:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  401bfd:	e8 9e 75 00 00 	callq	30110 <runtime.convT2Estring>
  401c02:	48 8b 44 24 18 	movq	24(%rsp), %rax
  401c07:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  401c0c:	48 89 0c 24 	movq	%rcx, (%rsp)
  401c10:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  401c15:	e8 16 ee 01 00 	callq	126486 <runtime.gopanic>
  401c1a:	0f 0b 	ud2
  401c1c:	e8 4f 29 04 00 	callq	272719 <runtime.morestack_noctxt>
  401c21:	e9 ca fe ff ff 	jmp	-310 <runtime.efaceeq>
  401c26:	cc 	int3
  401c27:	cc 	int3
  401c28:	cc 	int3
  401c29:	cc 	int3
  401c2a:	cc 	int3
  401c2b:	cc 	int3
  401c2c:	cc 	int3
  401c2d:	cc 	int3
  401c2e:	cc 	int3
  401c2f:	cc 	int3

runtime.ifaceeq:
  401c30:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  401c39:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  401c3d:	0f 86 1d 01 00 00 	jbe	285 <runtime.ifaceeq+0x130>
  401c43:	48 83 ec 50 	subq	$80, %rsp
  401c47:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  401c4c:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  401c51:	48 8b 44 24 58 	movq	88(%rsp), %rax
  401c56:	48 85 c0 	testq	%rax, %rax
  401c59:	74 6f 	je	111 <runtime.ifaceeq+0x9a>
  401c5b:	48 8b 40 08 	movq	8(%rax), %rax
  401c5f:	48 8b 48 18 	movq	24(%rax), %rcx
  401c63:	48 8b 51 08 	movq	8(%rcx), %rdx
  401c67:	48 85 d2 	testq	%rdx, %rdx
  401c6a:	74 6d 	je	109 <runtime.ifaceeq+0xa9>
  401c6c:	0f b6 40 17 	movzbl	23(%rax), %eax
  401c70:	a8 20 	testb	$32, %al
  401c72:	74 2b 	je	43 <runtime.ifaceeq+0x6f>
  401c74:	48 8d 44 24 60 	leaq	96(%rsp), %rax
  401c79:	48 89 04 24 	movq	%rax, (%rsp)
  401c7d:	48 8d 44 24 68 	leaq	104(%rsp), %rax
  401c82:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  401c87:	48 8b 02 	movq	(%rdx), %rax
  401c8a:	ff d0 	callq	*%rax
  401c8c:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  401c91:	88 44 24 70 	movb	%al, 112(%rsp)
  401c95:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  401c9a:	48 83 c4 50 	addq	$80, %rsp
  401c9e:	c3 	retq
  401c9f:	48 8b 44 24 60 	movq	96(%rsp), %rax
  401ca4:	48 89 04 24 	movq	%rax, (%rsp)
  401ca8:	48 8b 44 24 68 	movq	104(%rsp), %rax
  401cad:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  401cb2:	48 8b 02 	movq	(%rdx), %rax
  401cb5:	ff d0 	callq	*%rax
  401cb7:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  401cbc:	88 44 24 70 	movb	%al, 112(%rsp)
  401cc0:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  401cc5:	48 83 c4 50 	addq	$80, %rsp
  401cc9:	c3 	retq
  401cca:	c6 44 24 70 01 	movb	$1, 112(%rsp)
  401ccf:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  401cd4:	48 83 c4 50 	addq	$80, %rsp
  401cd8:	c3 	retq
  401cd9:	48 89 04 24 	movq	%rax, (%rsp)
  401cdd:	e8 8e cc 03 00 	callq	248974 <runtime.(*_type).string>
  401ce2:	48 8b 44 24 10 	movq	16(%rsp), %rax
  401ce7:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  401cec:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  401cf4:	48 8d 15 83 a3 06 00 	leaq	435075(%rip), %rdx
  401cfb:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  401d00:	48 c7 44 24 10 1c 00 00 00 	movq	$28, 16(%rsp)
  401d09:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  401d0e:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  401d13:	e8 c8 52 03 00 	callq	217800 <runtime.concatstring2>
  401d18:	48 8b 44 24 30 	movq	48(%rsp), %rax
  401d1d:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  401d22:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  401d27:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  401d2c:	48 8d 05 8d 91 05 00 	leaq	364941(%rip), %rax
  401d33:	48 89 04 24 	movq	%rax, (%rsp)
  401d37:	48 8d 44 24 38 	leaq	56(%rsp), %rax
  401d3c:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  401d41:	e8 5a 74 00 00 	callq	29786 <runtime.convT2Estring>
  401d46:	48 8b 44 24 18 	movq	24(%rsp), %rax
  401d4b:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  401d50:	48 89 0c 24 	movq	%rcx, (%rsp)
  401d54:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  401d59:	e8 d2 ec 01 00 	callq	126162 <runtime.gopanic>
  401d5e:	0f 0b 	ud2
  401d60:	e8 0b 28 04 00 	callq	272395 <runtime.morestack_noctxt>
  401d65:	e9 c6 fe ff ff 	jmp	-314 <runtime.ifaceeq>
  401d6a:	cc 	int3
  401d6b:	cc 	int3
  401d6c:	cc 	int3
  401d6d:	cc 	int3
  401d6e:	cc 	int3
  401d6f:	cc 	int3

runtime.alginit:
  401d70:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  401d79:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  401d7d:	0f 86 51 01 00 00 	jbe	337 <runtime.alginit+0x164>
  401d83:	48 83 ec 20 	subq	$32, %rsp
  401d87:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  401d8c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  401d91:	0f b6 0d 19 1b 0c 00 	movzbl	793369(%rip), %ecx
  401d98:	84 c9 	testb	%cl, %cl
  401d9a:	0f 84 c0 00 00 00 	je	192 <runtime.alginit+0xf0>
  401da0:	0f b6 0d 15 1b 0c 00 	movzbl	793365(%rip), %ecx
  401da7:	84 c9 	testb	%cl, %cl
  401da9:	0f 84 b1 00 00 00 	je	177 <runtime.alginit+0xf0>
  401daf:	0f b6 0d 04 1b 0c 00 	movzbl	793348(%rip), %ecx
  401db6:	84 c9 	testb	%cl, %cl
  401db8:	0f 84 a2 00 00 00 	je	162 <runtime.alginit+0xf0>
  401dbe:	c6 05 f9 1a 0c 00 01 	movb	$1, 793337(%rip)
  401dc5:	8b 0d 45 1c 0c 00 	movl	793669(%rip), %ecx
  401dcb:	85 c9 	testl	%ecx, %ecx
  401dcd:	75 56 	jne	86 <runtime.alginit+0xb5>
  401dcf:	48 8d 05 b2 c1 06 00 	leaq	442802(%rip), %rax
  401dd6:	48 89 05 a3 3f 0a 00 	movq	%rax, 671651(%rip)
  401ddd:	48 8d 05 ac c1 06 00 	leaq	442796(%rip), %rax
  401de4:	48 89 05 a5 3f 0a 00 	movq	%rax, 671653(%rip)
  401deb:	48 8d 05 a6 c1 06 00 	leaq	442790(%rip), %rax
  401df2:	48 89 05 b7 3f 0a 00 	movq	%rax, 671671(%rip)
  401df9:	48 8d 05 a0 1d 0c 00 	leaq	794016(%rip), %rax
  401e00:	48 89 04 24 	movq	%rax, (%rsp)
  401e04:	48 c7 44 24 08 80 00 00 00 	movq	$128, 8(%rsp)
  401e0d:	48 c7 44 24 10 80 00 00 00 	movq	$128, 16(%rsp)
  401e16:	e8 35 d6 01 00 	callq	120373 <runtime.getRandomData>
  401e1b:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  401e20:	48 83 c4 20 	addq	$32, %rsp
  401e24:	c3 	retq
  401e25:	48 8d 3d 54 3f 0a 00 	leaq	671572(%rip), %rdi
  401e2c:	48 8d 05 55 c1 06 00 	leaq	442709(%rip), %rax
  401e33:	e8 68 4a 04 00 	callq	281192 <runtime.gcWriteBarrier>
  401e38:	48 8d 3d 51 3f 0a 00 	leaq	671569(%rip), %rdi
  401e3f:	48 8d 05 4a c1 06 00 	leaq	442698(%rip), %rax
  401e46:	e8 55 4a 04 00 	callq	281173 <runtime.gcWriteBarrier>
  401e4b:	48 8d 3d 5e 3f 0a 00 	leaq	671582(%rip), %rdi
  401e52:	48 8d 05 3f c1 06 00 	leaq	442687(%rip), %rax
  401e59:	e8 42 4a 04 00 	callq	281154 <runtime.gcWriteBarrier>
  401e5e:	eb 99 	jmp	-103 <runtime.alginit+0x89>
  401e60:	48 8d 05 b9 1b 0c 00 	leaq	793529(%rip), %rax
  401e67:	48 89 04 24 	movq	%rax, (%rsp)
  401e6b:	48 c7 44 24 08 20 00 00 00 	movq	$32, 8(%rsp)
  401e74:	48 c7 44 24 10 20 00 00 00 	movq	$32, 16(%rsp)
  401e7d:	e8 ce d5 01 00 	callq	120270 <runtime.getRandomData>
  401e82:	48 8b 05 97 1b 0c 00 	movq	793495(%rip), %rax
  401e89:	48 83 c8 01 	orq	$1, %rax
  401e8d:	48 89 05 8c 1b 0c 00 	movq	%rax, 793484(%rip)
  401e94:	48 8b 05 8d 1b 0c 00 	movq	793485(%rip), %rax
  401e9b:	48 83 c8 01 	orq	$1, %rax
  401e9f:	48 89 05 82 1b 0c 00 	movq	%rax, 793474(%rip)
  401ea6:	48 8b 05 83 1b 0c 00 	movq	793475(%rip), %rax
  401ead:	48 83 c8 01 	orq	$1, %rax
  401eb1:	48 89 05 78 1b 0c 00 	movq	%rax, 793464(%rip)
  401eb8:	48 8b 05 79 1b 0c 00 	movq	793465(%rip), %rax
  401ebf:	48 83 c8 01 	orq	$1, %rax
  401ec3:	48 89 05 6e 1b 0c 00 	movq	%rax, 793454(%rip)
  401eca:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  401ecf:	48 83 c4 20 	addq	$32, %rsp
  401ed3:	c3 	retq
  401ed4:	e8 97 26 04 00 	callq	272023 <runtime.morestack_noctxt>
  401ed9:	e9 92 fe ff ff 	jmp	-366 <runtime.alginit>
  401ede:	cc 	int3
  401edf:	cc 	int3

runtime.atomicstorep:
  401ee0:	48 83 ec 18 	subq	$24, %rsp
  401ee4:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  401ee9:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  401eee:	48 8b 44 24 20 	movq	32(%rsp), %rax
  401ef3:	48 89 04 24 	movq	%rax, (%rsp)
  401ef7:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  401efc:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  401f01:	e8 fa 9a 00 00 	callq	39674 <runtime.writebarrierptr_prewrite>
  401f06:	48 8b 44 24 28 	movq	40(%rsp), %rax
  401f0b:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  401f10:	48 87 01 	xchgq	%rax, (%rcx)
  401f13:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  401f18:	48 83 c4 18 	addq	$24, %rsp
  401f1c:	c3 	retq
  401f1d:	cc 	int3
  401f1e:	cc 	int3
  401f1f:	cc 	int3

runtime.casp:
  401f20:	48 83 ec 18 	subq	$24, %rsp
  401f24:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  401f29:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  401f2e:	48 8b 44 24 20 	movq	32(%rsp), %rax
  401f33:	48 89 04 24 	movq	%rax, (%rsp)
  401f37:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  401f3c:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  401f41:	e8 ba 9a 00 00 	callq	39610 <runtime.writebarrierptr_prewrite>
  401f46:	48 8b 44 24 28 	movq	40(%rsp), %rax
  401f4b:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  401f50:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  401f55:	f0 	lock
  401f56:	48 0f b1 11 	cmpxchgq	%rdx, (%rcx)
  401f5a:	0f 94 c0 	sete	%al
  401f5d:	88 44 24 38 	movb	%al, 56(%rsp)
  401f61:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  401f66:	48 83 c4 18 	addq	$24, %rsp
  401f6a:	c3 	retq
  401f6b:	cc 	int3
  401f6c:	cc 	int3
  401f6d:	cc 	int3
  401f6e:	cc 	int3
  401f6f:	cc 	int3

runtime.mmap:
  401f70:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  401f79:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  401f7d:	0f 86 54 01 00 00 	jbe	340 <runtime.mmap+0x167>
  401f83:	48 83 ec 70 	subq	$112, %rsp
  401f87:	48 89 6c 24 68 	movq	%rbp, 104(%rsp)
  401f8c:	48 8d 6c 24 68 	leaq	104(%rsp), %rbp
  401f91:	48 8b 05 38 56 0a 00 	movq	677432(%rip), %rax
  401f98:	48 85 c0 	testq	%rax, %rax
  401f9b:	0f 84 cb 00 00 00 	je	203 <runtime.mmap+0xfc>
  401fa1:	48 c7 44 24 30 00 00 00 00 	movq	$0, 48(%rsp)
  401faa:	0f 57 c0 	xorps	%xmm0, %xmm0
  401fad:	0f 11 44 24 38 	movups	%xmm0, 56(%rsp)
  401fb2:	0f 11 44 24 48 	movups	%xmm0, 72(%rsp)
  401fb7:	0f 11 44 24 58 	movups	%xmm0, 88(%rsp)
  401fbc:	48 8d 05 9d f8 03 00 	leaq	260253(%rip), %rax
  401fc3:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  401fc8:	48 8b 44 24 78 	movq	120(%rsp), %rax
  401fcd:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  401fd2:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  401fda:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  401fdf:	8b 84 24 88 00 00 00 	movl	136(%rsp), %eax
  401fe6:	89 44 24 50 	movl	%eax, 80(%rsp)
  401fea:	8b 84 24 8c 00 00 00 	movl	140(%rsp), %eax
  401ff1:	89 44 24 54 	movl	%eax, 84(%rsp)
  401ff5:	8b 84 24 90 00 00 00 	movl	144(%rsp), %eax
  401ffc:	89 44 24 58 	movl	%eax, 88(%rsp)
  402000:	8b 84 24 94 00 00 00 	movl	148(%rsp), %eax
  402007:	89 44 24 5c 	movl	%eax, 92(%rsp)
  40200b:	48 8d 44 24 30 	leaq	48(%rsp), %rax
  402010:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  402015:	48 8d 44 24 38 	leaq	56(%rsp), %rax
  40201a:	48 89 04 24 	movq	%rax, (%rsp)
  40201e:	e8 fd 23 04 00 	callq	271357 <runtime.systemstack>
  402023:	48 8b 44 24 30 	movq	48(%rsp), %rax
  402028:	48 3d 00 10 00 00 	cmpq	$4096, %rax
  40202e:	73 1e 	jae	30 <runtime.mmap+0xde>
  402030:	48 c7 84 24 98 00 00 00 00 00 00 00 	movq	$0, 152(%rsp)
  40203c:	48 89 84 24 a0 00 00 00 	movq	%rax, 160(%rsp)
  402044:	48 8b 6c 24 68 	movq	104(%rsp), %rbp
  402049:	48 83 c4 70 	addq	$112, %rsp
  40204d:	c3 	retq
  40204e:	48 89 84 24 98 00 00 00 	movq	%rax, 152(%rsp)
  402056:	48 c7 84 24 a0 00 00 00 00 00 00 00 	movq	$0, 160(%rsp)
  402062:	48 8b 6c 24 68 	movq	104(%rsp), %rbp
  402067:	48 83 c4 70 	addq	$112, %rsp
  40206b:	c3 	retq
  40206c:	48 8b 44 24 78 	movq	120(%rsp), %rax
  402071:	48 89 04 24 	movq	%rax, (%rsp)
  402075:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  40207d:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  402082:	8b 84 24 88 00 00 00 	movl	136(%rsp), %eax
  402089:	89 44 24 10 	movl	%eax, 16(%rsp)
  40208d:	8b 84 24 8c 00 00 00 	movl	140(%rsp), %eax
  402094:	89 44 24 14 	movl	%eax, 20(%rsp)
  402098:	8b 84 24 90 00 00 00 	movl	144(%rsp), %eax
  40209f:	89 44 24 18 	movl	%eax, 24(%rsp)
  4020a3:	8b 84 24 94 00 00 00 	movl	148(%rsp), %eax
  4020aa:	89 44 24 1c 	movl	%eax, 28(%rsp)
  4020ae:	e8 1d 5c 04 00 	callq	285725 <runtime.sysMmap>
  4020b3:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4020b8:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  4020bd:	48 89 84 24 98 00 00 00 	movq	%rax, 152(%rsp)
  4020c5:	48 89 8c 24 a0 00 00 00 	movq	%rcx, 160(%rsp)
  4020cd:	48 8b 6c 24 68 	movq	104(%rsp), %rbp
  4020d2:	48 83 c4 70 	addq	$112, %rsp
  4020d6:	c3 	retq
  4020d7:	e8 94 24 04 00 	callq	271508 <runtime.morestack_noctxt>
  4020dc:	e9 8f fe ff ff 	jmp	-369 <runtime.mmap>
  4020e1:	cc 	int3
  4020e2:	cc 	int3
  4020e3:	cc 	int3
  4020e4:	cc 	int3
  4020e5:	cc 	int3
  4020e6:	cc 	int3
  4020e7:	cc 	int3
  4020e8:	cc 	int3
  4020e9:	cc 	int3
  4020ea:	cc 	int3
  4020eb:	cc 	int3
  4020ec:	cc 	int3
  4020ed:	cc 	int3
  4020ee:	cc 	int3
  4020ef:	cc 	int3

runtime.munmap:
  4020f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4020f9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4020fd:	76 74 	jbe	116 <runtime.munmap+0x83>
  4020ff:	48 83 ec 30 	subq	$48, %rsp
  402103:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  402108:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  40210d:	48 8b 05 c4 54 0a 00 	movq	677060(%rip), %rax
  402114:	48 85 c0 	testq	%rax, %rax
  402117:	74 38 	je	56 <runtime.munmap+0x61>
  402119:	48 8d 05 c0 f7 03 00 	leaq	260032(%rip), %rax
  402120:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  402125:	48 8b 44 24 38 	movq	56(%rsp), %rax
  40212a:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  40212f:	48 8b 44 24 40 	movq	64(%rsp), %rax
  402134:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  402139:	48 8d 44 24 10 	leaq	16(%rsp), %rax
  40213e:	48 89 04 24 	movq	%rax, (%rsp)
  402142:	e8 d9 22 04 00 	callq	271065 <runtime.systemstack>
  402147:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  40214c:	48 83 c4 30 	addq	$48, %rsp
  402150:	c3 	retq
  402151:	48 8b 44 24 38 	movq	56(%rsp), %rax
  402156:	48 89 04 24 	movq	%rax, (%rsp)
  40215a:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40215f:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  402164:	e8 17 5c 04 00 	callq	285719 <runtime.sysMunmap>
  402169:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  40216e:	48 83 c4 30 	addq	$48, %rsp
  402172:	c3 	retq
  402173:	e8 f8 23 04 00 	callq	271352 <runtime.morestack_noctxt>
  402178:	e9 73 ff ff ff 	jmp	-141 <runtime.munmap>
  40217d:	cc 	int3
  40217e:	cc 	int3
  40217f:	cc 	int3

runtime.rt_sigaction:
  402180:	48 83 ec 60 	subq	$96, %rsp
  402184:	48 89 6c 24 58 	movq	%rbp, 88(%rsp)
  402189:	48 8d 6c 24 58 	leaq	88(%rsp), %rbp
  40218e:	c7 44 24 2c 00 00 00 00 	movl	$0, 44(%rsp)
  402196:	48 8b 05 4b 54 0a 00 	movq	676939(%rip), %rax
  40219d:	48 85 c0 	testq	%rax, %rax
  4021a0:	74 0b 	je	11 <runtime.rt_sigaction+0x2d>
  4021a2:	0f b6 05 ff 16 0c 00 	movzbl	792319(%rip), %eax
  4021a9:	84 c0 	testb	%al, %al
  4021ab:	74 4c 	je	76 <runtime.rt_sigaction+0x79>
  4021ad:	48 8b 44 24 68 	movq	104(%rsp), %rax
  4021b2:	48 89 04 24 	movq	%rax, (%rsp)
  4021b6:	48 8b 44 24 70 	movq	112(%rsp), %rax
  4021bb:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4021c0:	48 8b 44 24 78 	movq	120(%rsp), %rax
  4021c5:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  4021ca:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  4021d2:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4021d7:	e8 24 59 04 00 	callq	284964 <runtime.sysSigaction>
  4021dc:	8b 44 24 20 	movl	32(%rsp), %eax
  4021e0:	89 44 24 2c 	movl	%eax, 44(%rsp)
  4021e4:	8b 44 24 2c 	movl	44(%rsp), %eax
  4021e8:	89 84 24 88 00 00 00 	movl	%eax, 136(%rsp)
  4021ef:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  4021f4:	48 83 c4 60 	addq	$96, %rsp
  4021f8:	c3 	retq
  4021f9:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  402202:	48 8d 4c 24 68 	leaq	104(%rsp), %rcx
  402207:	48 85 c0 	testq	%rax, %rax
  40220a:	0f 84 dd 00 00 00 	je	221 <runtime.rt_sigaction+0x16d>
  402210:	48 8b 10 	movq	(%rax), %rdx
  402213:	48 39 d1 	cmpq	%rdx, %rcx
  402216:	73 6f 	jae	111 <runtime.rt_sigaction+0x107>
  402218:	48 8b 44 24 68 	movq	104(%rsp), %rax
  40221d:	48 89 04 24 	movq	%rax, (%rsp)
  402221:	48 8b 44 24 70 	movq	112(%rsp), %rax
  402226:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40222b:	48 8b 4c 24 78 	movq	120(%rsp), %rcx
  402230:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  402235:	e8 e6 58 04 00 	callq	284902 <runtime.callCgoSigaction>
  40223a:	8b 44 24 18 	movl	24(%rsp), %eax
  40223e:	89 44 24 2c 	movl	%eax, 44(%rsp)
  402242:	8b 44 24 2c 	movl	44(%rsp), %eax
  402246:	83 f8 16 	cmpl	$22, %eax
  402249:	75 99 	jne	-103 <runtime.rt_sigaction+0x64>
  40224b:	48 8b 44 24 68 	movq	104(%rsp), %rax
  402250:	48 89 04 24 	movq	%rax, (%rsp)
  402254:	48 8b 44 24 70 	movq	112(%rsp), %rax
  402259:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40225e:	48 8b 44 24 78 	movq	120(%rsp), %rax
  402263:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  402268:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  402270:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  402275:	e8 86 58 04 00 	callq	284806 <runtime.sysSigaction>
  40227a:	8b 44 24 20 	movl	32(%rsp), %eax
  40227e:	89 44 24 2c 	movl	%eax, 44(%rsp)
  402282:	e9 5d ff ff ff 	jmp	-163 <runtime.rt_sigaction+0x64>
  402287:	48 8b 40 08 	movq	8(%rax), %rax
  40228b:	48 39 c1 	cmpq	%rax, %rcx
  40228e:	73 88 	jae	-120 <runtime.rt_sigaction+0x98>
  402290:	48 c7 44 24 30 00 00 00 00 	movq	$0, 48(%rsp)
  402299:	0f 57 c0 	xorps	%xmm0, %xmm0
  40229c:	0f 11 44 24 38 	movups	%xmm0, 56(%rsp)
  4022a1:	0f 11 44 24 48 	movups	%xmm0, 72(%rsp)
  4022a6:	48 8d 05 83 f6 03 00 	leaq	259715(%rip), %rax
  4022ad:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  4022b2:	48 8d 44 24 68 	leaq	104(%rsp), %rax
  4022b7:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  4022bc:	48 8b 44 24 70 	movq	112(%rsp), %rax
  4022c1:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  4022c6:	48 8b 4c 24 78 	movq	120(%rsp), %rcx
  4022cb:	48 89 4c 24 48 	movq	%rcx, 72(%rsp)
  4022d0:	48 8d 54 24 2c 	leaq	44(%rsp), %rdx
  4022d5:	48 89 54 24 50 	movq	%rdx, 80(%rsp)
  4022da:	48 8d 54 24 30 	leaq	48(%rsp), %rdx
  4022df:	48 89 14 24 	movq	%rdx, (%rsp)
  4022e3:	e8 38 21 04 00 	callq	270648 <runtime.systemstack>
  4022e8:	e9 55 ff ff ff 	jmp	-171 <runtime.rt_sigaction+0xc2>
  4022ed:	48 8b 44 24 68 	movq	104(%rsp), %rax
  4022f2:	48 89 04 24 	movq	%rax, (%rsp)
  4022f6:	48 8b 44 24 70 	movq	112(%rsp), %rax
  4022fb:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  402300:	48 8b 4c 24 78 	movq	120(%rsp), %rcx
  402305:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  40230a:	e8 11 58 04 00 	callq	284689 <runtime.callCgoSigaction>
  40230f:	8b 44 24 18 	movl	24(%rsp), %eax
  402313:	89 44 24 2c 	movl	%eax, 44(%rsp)
  402317:	e9 26 ff ff ff 	jmp	-218 <runtime.rt_sigaction+0xc2>
  40231c:	cc 	int3
  40231d:	cc 	int3
  40231e:	cc 	int3
  40231f:	cc 	int3

runtime.cgocall:
  402320:	48 83 ec 30 	subq	$48, %rsp
  402324:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  402329:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  40232e:	0f b6 05 77 15 0c 00 	movzbl	791927(%rip), %eax
  402335:	84 c0 	testb	%al, %al
  402337:	0f 84 bf 00 00 00 	je	191 <runtime.cgocall+0xdc>
  40233d:	48 8b 44 24 38 	movq	56(%rsp), %rax
  402342:	48 85 c0 	testq	%rax, %rax
  402345:	0f 84 96 00 00 00 	je	150 <runtime.cgocall+0xc1>
  40234b:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  402354:	48 8b 40 30 	movq	48(%rax), %rax
  402358:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  40235d:	48 ff 80 30 01 00 00 	incq	304(%rax)
  402364:	ff 80 38 01 00 00 	incl	312(%rax)
  40236a:	48 8b 88 40 01 00 00 	movq	320(%rax), %rcx
  402371:	48 c7 01 00 00 00 00 	movq	$0, (%rcx)
  402378:	c7 04 24 00 00 00 00 	movl	$0, (%rsp)
  40237f:	e8 2c 74 02 00 	callq	160812 <runtime.entersyscall>
  402384:	48 8b 44 24 20 	movq	32(%rsp), %rax
  402389:	c6 80 19 01 00 00 01 	movb	$1, 281(%rax)
  402390:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  402395:	48 89 0c 24 	movq	%rcx, (%rsp)
  402399:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  40239e:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  4023a3:	e8 48 38 04 00 	callq	276552 <runtime.asmcgocall>
  4023a8:	8b 44 24 10 	movl	16(%rsp), %eax
  4023ac:	89 44 24 1c 	movl	%eax, 28(%rsp)
  4023b0:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  4023b5:	c6 81 19 01 00 00 00 	movb	$0, 281(%rcx)
  4023bc:	83 81 38 01 00 00 ff 	addl	$-1, 312(%rcx)
  4023c3:	c7 04 24 00 00 00 00 	movl	$0, (%rsp)
  4023ca:	e8 91 77 02 00 	callq	161681 <runtime.exitsyscall>
  4023cf:	8b 44 24 1c 	movl	28(%rsp), %eax
  4023d3:	89 44 24 48 	movl	%eax, 72(%rsp)
  4023d7:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  4023dc:	48 83 c4 30 	addq	$48, %rsp
  4023e0:	c3 	retq
  4023e1:	48 8d 05 8c 80 06 00 	leaq	426124(%rip), %rax
  4023e8:	48 89 04 24 	movq	%rax, (%rsp)
  4023ec:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  4023f5:	e8 d6 ed 01 00 	callq	126422 <runtime.throw>
  4023fa:	0f 0b 	ud2
  4023fc:	48 8d 05 83 8a 06 00 	leaq	428675(%rip), %rax
  402403:	48 89 04 24 	movq	%rax, (%rsp)
  402407:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  402410:	e8 bb ed 01 00 	callq	126395 <runtime.throw>
  402415:	0f 0b 	ud2
  402417:	cc 	int3
  402418:	cc 	int3
  402419:	cc 	int3
  40241a:	cc 	int3
  40241b:	cc 	int3
  40241c:	cc 	int3
  40241d:	cc 	int3
  40241e:	cc 	int3
  40241f:	cc 	int3

runtime.cgoIsGoPointer:
  402420:	48 8b 44 24 08 	movq	8(%rsp), %rax
  402425:	48 85 c0 	testq	%rax, %rax
  402428:	0f 84 03 01 00 00 	je	259 <runtime.cgoIsGoPointer+0x111>
  40242e:	48 89 c1 	movq	%rax, %rcx
  402431:	48 85 c0 	testq	%rax, %rax
  402434:	75 7f 	jne	127 <runtime.cgoIsGoPointer+0x95>
  402436:	48 8b 05 3b 52 0a 00 	movq	676411(%rip), %rax
  40243d:	48 85 c0 	testq	%rax, %rax
  402440:	74 6d 	je	109 <runtime.cgoIsGoPointer+0x8f>
  402442:	48 8b 50 08 	movq	8(%rax), %rdx
  402446:	48 8b 00 	movq	(%rax), %rax
  402449:	31 db 	xorl	%ebx, %ebx
  40244b:	eb 06 	jmp	6 <runtime.cgoIsGoPointer+0x33>
  40244d:	48 ff c3 	incq	%rbx
  402450:	4c 89 c9 	movq	%r9, %rcx
  402453:	48 39 d3 	cmpq	%rdx, %rbx
  402456:	7d 51 	jge	81 <runtime.cgoIsGoPointer+0x89>
  402458:	48 8b 34 d8 	movq	(%rax,%rbx,8), %rsi
  40245c:	48 8b be 80 00 00 00 	movq	128(%rsi), %rdi
  402463:	4c 8b 86 88 00 00 00 	movq	136(%rsi), %r8
  40246a:	49 89 c9 	movq	%rcx, %r9
  40246d:	48 39 cf 	cmpq	%rcx, %rdi
  402470:	77 33 	ja	51 <runtime.cgoIsGoPointer+0x85>
  402472:	4c 39 c1 	cmpq	%r8, %rcx
  402475:	40 0f 92 c7 	setb	%dil
  402479:	40 84 ff 	testb	%dil, %dil
  40247c:	75 1d 	jne	29 <runtime.cgoIsGoPointer+0x7b>
  40247e:	48 8b be 90 00 00 00 	movq	144(%rsi), %rdi
  402485:	48 8b b6 98 00 00 00 	movq	152(%rsi), %rsi
  40248c:	48 39 cf 	cmpq	%rcx, %rdi
  40248f:	77 10 	ja	16 <runtime.cgoIsGoPointer+0x81>
  402491:	48 39 f1 	cmpq	%rsi, %rcx
  402494:	0f 92 c1 	setb	%cl
  402497:	84 c9 	testb	%cl, %cl
  402499:	74 b2 	je	-78 <runtime.cgoIsGoPointer+0x2d>
  40249b:	c6 44 24 10 01 	movb	$1, 16(%rsp)
  4024a0:	c3 	retq
  4024a1:	31 c9 	xorl	%ecx, %ecx
  4024a3:	eb f2 	jmp	-14 <runtime.cgoIsGoPointer+0x77>
  4024a5:	31 ff 	xorl	%edi, %edi
  4024a7:	eb d0 	jmp	-48 <runtime.cgoIsGoPointer+0x59>
  4024a9:	c6 44 24 10 00 	movb	$0, 16(%rsp)
  4024ae:	c3 	retq
  4024af:	31 d2 	xorl	%edx, %edx
  4024b1:	31 c0 	xorl	%eax, %eax
  4024b3:	eb 94 	jmp	-108 <runtime.cgoIsGoPointer+0x29>
  4024b5:	48 8b 15 0c b1 0a 00 	movq	700684(%rip), %rdx
  4024bc:	48 39 d0 	cmpq	%rdx, %rax
  4024bf:	0f 82 71 ff ff ff 	jb	-143 <runtime.cgoIsGoPointer+0x16>
  4024c5:	48 8b 1d 04 b1 0a 00 	movq	700676(%rip), %rbx
  4024cc:	48 39 d8 	cmpq	%rbx, %rax
  4024cf:	0f 83 61 ff ff ff 	jae	-159 <runtime.cgoIsGoPointer+0x16>
  4024d5:	48 8b 1d 14 ae 0a 00 	movq	699924(%rip), %rbx
  4024dc:	48 8b 35 05 ae 0a 00 	movq	699909(%rip), %rsi
  4024e3:	48 89 c7 	movq	%rax, %rdi
  4024e6:	48 29 d0 	subq	%rdx, %rax
  4024e9:	48 c1 e8 0d 	shrq	$13, %rax
  4024ed:	48 39 d8 	cmpq	%rbx, %rax
  4024f0:	73 45 	jae	69 <runtime.cgoIsGoPointer+0x117>
  4024f2:	48 8b 04 c6 	movq	(%rsi,%rax,8), %rax
  4024f6:	48 85 c0 	testq	%rax, %rax
  4024f9:	0f 84 37 ff ff ff 	je	-201 <runtime.cgoIsGoPointer+0x16>
  4024ff:	48 8b 50 18 	movq	24(%rax), %rdx
  402503:	48 39 d7 	cmpq	%rdx, %rdi
  402506:	0f 82 2a ff ff ff 	jb	-214 <runtime.cgoIsGoPointer+0x16>
  40250c:	0f b6 50 64 	movzbl	100(%rax), %edx
  402510:	ff ca 	decl	%edx
  402512:	80 fa 01 	cmpb	$1, %dl
  402515:	0f 87 1b ff ff ff 	ja	-229 <runtime.cgoIsGoPointer+0x16>
  40251b:	48 8b 80 80 00 00 00 	movq	128(%rax), %rax
  402522:	48 39 c7 	cmpq	%rax, %rdi
  402525:	0f 83 0b ff ff ff 	jae	-245 <runtime.cgoIsGoPointer+0x16>
  40252b:	c6 44 24 10 01 	movb	$1, 16(%rsp)
  402530:	c3 	retq
  402531:	c6 44 24 10 00 	movb	$0, 16(%rsp)
  402536:	c3 	retq
  402537:	e8 04 d5 01 00 	callq	120068 <runtime.panicindex>
  40253c:	0f 0b 	ud2
  40253e:	cc 	int3
  40253f:	cc 	int3

runtime.cgoCheckWriteBarrier:
  402540:	48 83 ec 30 	subq	$48, %rsp
  402544:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  402549:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  40254e:	48 8b 44 24 40 	movq	64(%rsp), %rax
  402553:	48 89 04 24 	movq	%rax, (%rsp)
  402557:	e8 c4 fe ff ff 	callq	-316 <runtime.cgoIsGoPointer>
  40255c:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  402561:	84 c0 	testb	%al, %al
  402563:	0f 84 95 00 00 00 	je	149 <runtime.cgoCheckWriteBarrier+0xbe>
  402569:	48 8b 44 24 38 	movq	56(%rsp), %rax
  40256e:	48 89 04 24 	movq	%rax, (%rsp)
  402572:	e8 a9 fe ff ff 	callq	-343 <runtime.cgoIsGoPointer>
  402577:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  40257c:	84 c0 	testb	%al, %al
  40257e:	75 74 	jne	116 <runtime.cgoCheckWriteBarrier+0xb4>
  402580:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  402589:	48 8b 48 30 	movq	48(%rax), %rcx
  40258d:	48 8b 11 	movq	(%rcx), %rdx
  402590:	48 39 c2 	cmpq	%rax, %rdx
  402593:	75 0a 	jne	10 <runtime.cgoCheckWriteBarrier+0x5f>
  402595:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  40259a:	48 83 c4 30 	addq	$48, %rsp
  40259e:	c3 	retq
  40259f:	48 8b 51 50 	movq	80(%rcx), %rdx
  4025a3:	48 39 c2 	cmpq	%rax, %rdx
  4025a6:	74 ed 	je	-19 <runtime.cgoCheckWriteBarrier+0x55>
  4025a8:	8b 81 e8 00 00 00 	movl	232(%rcx), %eax
  4025ae:	85 c0 	testl	%eax, %eax
  4025b0:	74 0a 	je	10 <runtime.cgoCheckWriteBarrier+0x7c>
  4025b2:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  4025b7:	48 83 c4 30 	addq	$48, %rsp
  4025bb:	c3 	retq
  4025bc:	48 8d 05 dd f3 03 00 	leaq	259037(%rip), %rax
  4025c3:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  4025c8:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4025cd:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4025d2:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4025d7:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  4025dc:	48 8d 44 24 10 	leaq	16(%rsp), %rax
  4025e1:	48 89 04 24 	movq	%rax, (%rsp)
  4025e5:	e8 36 1e 04 00 	callq	269878 <runtime.systemstack>
  4025ea:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  4025ef:	48 83 c4 30 	addq	$48, %rsp
  4025f3:	c3 	retq
  4025f4:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  4025f9:	48 83 c4 30 	addq	$48, %rsp
  4025fd:	c3 	retq
  4025fe:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  402603:	48 83 c4 30 	addq	$48, %rsp
  402607:	c3 	retq
  402608:	cc 	int3
  402609:	cc 	int3
  40260a:	cc 	int3
  40260b:	cc 	int3
  40260c:	cc 	int3
  40260d:	cc 	int3
  40260e:	cc 	int3
  40260f:	cc 	int3

runtime.cgoCheckMemmove:
  402610:	48 83 ec 28 	subq	$40, %rsp
  402614:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  402619:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  40261e:	48 8b 44 24 30 	movq	48(%rsp), %rax
  402623:	0f b6 48 17 	movzbl	23(%rax), %ecx
  402627:	f6 c1 80 	testb	$-128, %cl
  40262a:	75 78 	jne	120 <runtime.cgoCheckMemmove+0x94>
  40262c:	48 8b 44 24 40 	movq	64(%rsp), %rax
  402631:	48 89 04 24 	movq	%rax, (%rsp)
  402635:	e8 e6 fd ff ff 	callq	-538 <runtime.cgoIsGoPointer>
  40263a:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  40263f:	84 c0 	testb	%al, %al
  402641:	74 57 	je	87 <runtime.cgoCheckMemmove+0x8a>
  402643:	48 8b 44 24 38 	movq	56(%rsp), %rax
  402648:	48 89 04 24 	movq	%rax, (%rsp)
  40264c:	e8 cf fd ff ff 	callq	-561 <runtime.cgoIsGoPointer>
  402651:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  402656:	84 c0 	testb	%al, %al
  402658:	74 0a 	je	10 <runtime.cgoCheckMemmove+0x54>
  40265a:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  40265f:	48 83 c4 28 	addq	$40, %rsp
  402663:	c3 	retq
  402664:	48 8b 44 24 30 	movq	48(%rsp), %rax
  402669:	48 89 04 24 	movq	%rax, (%rsp)
  40266d:	48 8b 44 24 40 	movq	64(%rsp), %rax
  402672:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  402677:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40267c:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  402681:	48 8b 44 24 50 	movq	80(%rsp), %rax
  402686:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  40268b:	e8 00 01 00 00 	callq	256 <runtime.cgoCheckTypedBlock>
  402690:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  402695:	48 83 c4 28 	addq	$40, %rsp
  402699:	c3 	retq
  40269a:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  40269f:	48 83 c4 28 	addq	$40, %rsp
  4026a3:	c3 	retq
  4026a4:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4026a9:	48 83 c4 28 	addq	$40, %rsp
  4026ad:	c3 	retq
  4026ae:	cc 	int3
  4026af:	cc 	int3

runtime.cgoCheckSliceCopy:
  4026b0:	48 83 ec 38 	subq	$56, %rsp
  4026b4:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  4026b9:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  4026be:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4026c3:	0f b6 48 17 	movzbl	23(%rax), %ecx
  4026c7:	f6 c1 80 	testb	$-128, %cl
  4026ca:	0f 85 ac 00 00 00 	jne	172 <runtime.cgoCheckSliceCopy+0xcc>
  4026d0:	48 8b 44 24 60 	movq	96(%rsp), %rax
  4026d5:	48 89 04 24 	movq	%rax, (%rsp)
  4026d9:	e8 42 fd ff ff 	callq	-702 <runtime.cgoIsGoPointer>
  4026de:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  4026e3:	84 c0 	testb	%al, %al
  4026e5:	0f 84 87 00 00 00 	je	135 <runtime.cgoCheckSliceCopy+0xc2>
  4026eb:	48 8b 44 24 48 	movq	72(%rsp), %rax
  4026f0:	48 89 04 24 	movq	%rax, (%rsp)
  4026f4:	e8 27 fd ff ff 	callq	-729 <runtime.cgoIsGoPointer>
  4026f9:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  4026fe:	84 c0 	testb	%al, %al
  402700:	75 66 	jne	102 <runtime.cgoCheckSliceCopy+0xb8>
  402702:	31 c0 	xorl	%eax, %eax
  402704:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  402709:	eb 49 	jmp	73 <runtime.cgoCheckSliceCopy+0xa4>
  40270b:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  402710:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  402715:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40271a:	48 8b 10 	movq	(%rax), %rdx
  40271d:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  402722:	48 89 04 24 	movq	%rax, (%rsp)
  402726:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40272b:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  402734:	e8 57 00 00 00 	callq	87 <runtime.cgoCheckTypedBlock>
  402739:	48 8b 44 24 20 	movq	32(%rsp), %rax
  40273e:	48 ff c0 	incq	%rax
  402741:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  402746:	48 8b 11 	movq	(%rcx), %rdx
  402749:	48 8b 5c 24 28 	movq	40(%rsp), %rbx
  40274e:	48 01 da 	addq	%rbx, %rdx
  402751:	48 89 d1 	movq	%rdx, %rcx
  402754:	48 8b 54 24 78 	movq	120(%rsp), %rdx
  402759:	48 39 d0 	cmpq	%rdx, %rax
  40275c:	7c ad 	jl	-83 <runtime.cgoCheckSliceCopy+0x5b>
  40275e:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  402763:	48 83 c4 38 	addq	$56, %rsp
  402767:	c3 	retq
  402768:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  40276d:	48 83 c4 38 	addq	$56, %rsp
  402771:	c3 	retq
  402772:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  402777:	48 83 c4 38 	addq	$56, %rsp
  40277b:	c3 	retq
  40277c:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  402781:	48 83 c4 38 	addq	$56, %rsp
  402785:	c3 	retq
  402786:	cc 	int3
  402787:	cc 	int3
  402788:	cc 	int3
  402789:	cc 	int3
  40278a:	cc 	int3
  40278b:	cc 	int3
  40278c:	cc 	int3
  40278d:	cc 	int3
  40278e:	cc 	int3
  40278f:	cc 	int3

runtime.cgoCheckTypedBlock:
  402790:	48 83 ec 68 	subq	$104, %rsp
  402794:	48 89 6c 24 60 	movq	%rbp, 96(%rsp)
  402799:	48 8d 6c 24 60 	leaq	96(%rsp), %rbp
  40279e:	48 8b 44 24 70 	movq	112(%rsp), %rax
  4027a3:	48 8b 50 08 	movq	8(%rax), %rdx
  4027a7:	48 8b 9c 24 80 00 00 00 	movq	128(%rsp), %rbx
  4027af:	48 39 da 	cmpq	%rbx, %rdx
  4027b2:	0f 86 b0 02 00 00 	jbe	688 <runtime.cgoCheckTypedBlock+0x2d8>
  4027b8:	48 29 da 	subq	%rbx, %rdx
  4027bb:	48 8b b4 24 88 00 00 00 	movq	136(%rsp), %rsi
  4027c3:	48 39 d6 	cmpq	%rdx, %rsi
  4027c6:	0f 86 94 02 00 00 	jbe	660 <runtime.cgoCheckTypedBlock+0x2d0>
  4027cc:	0f b6 70 17 	movzbl	23(%rax), %esi
  4027d0:	40 f6 c6 40 	testb	$64, %sil
  4027d4:	0f 84 5b 02 00 00 	je	603 <runtime.cgoCheckTypedBlock+0x2a5>
  4027da:	48 8b 35 97 4e 0a 00 	movq	675479(%rip), %rsi
  4027e1:	48 85 f6 	testq	%rsi, %rsi
  4027e4:	0f 84 42 02 00 00 	je	578 <runtime.cgoCheckTypedBlock+0x29c>
  4027ea:	48 8b 7e 08 	movq	8(%rsi), %rdi
  4027ee:	48 8b 36 	movq	(%rsi), %rsi
  4027f1:	4c 8b 44 24 78 	movq	120(%rsp), %r8
  4027f6:	31 c9 	xorl	%ecx, %ecx
  4027f8:	eb 06 	jmp	6 <runtime.cgoCheckTypedBlock+0x70>
  4027fa:	48 ff c1 	incq	%rcx
  4027fd:	4d 89 e0 	movq	%r12, %r8
  402800:	48 39 f9 	cmpq	%rdi, %rcx
  402803:	0f 8d ca 00 00 00 	jge	202 <runtime.cgoCheckTypedBlock+0x143>
  402809:	4c 8b 0c ce 	movq	(%rsi,%rcx,8), %r9
  40280d:	4d 8b 91 80 00 00 00 	movq	128(%r9), %r10
  402814:	4d 8b 99 88 00 00 00 	movq	136(%r9), %r11
  40281b:	4d 89 c4 	movq	%r8, %r12
  40281e:	4d 39 c2 	cmpq	%r8, %r10
  402821:	0f 87 a4 00 00 00 	ja	164 <runtime.cgoCheckTypedBlock+0x13b>
  402827:	4d 39 d8 	cmpq	%r11, %r8
  40282a:	41 0f 92 c3 	setb	%r11b
  40282e:	45 84 db 	testb	%r11b, %r11b
  402831:	75 5e 	jne	94 <runtime.cgoCheckTypedBlock+0x101>
  402833:	4d 8b 91 90 00 00 00 	movq	144(%r9), %r10
  40283a:	4d 8b 99 98 00 00 00 	movq	152(%r9), %r11
  402841:	4d 39 c2 	cmpq	%r8, %r10
  402844:	77 46 	ja	70 <runtime.cgoCheckTypedBlock+0xfc>
  402846:	4d 39 d8 	cmpq	%r11, %r8
  402849:	41 0f 92 c3 	setb	%r11b
  40284d:	45 84 db 	testb	%r11b, %r11b
  402850:	74 a8 	je	-88 <runtime.cgoCheckTypedBlock+0x6a>
  402852:	49 8b 81 a8 01 00 00 	movq	424(%r9), %rax
  402859:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40285e:	4c 89 d0 	movq	%r10, %rax
  402861:	4d 29 c2 	subq	%r8, %r10
  402864:	4b 8d 0c 22 	leaq	(%r10,%r12), %rcx
  402868:	48 89 0c 24 	movq	%rcx, (%rsp)
  40286c:	49 29 c0 	subq	%rax, %r8
  40286f:	49 8d 04 18 	leaq	(%r8,%rbx), %rax
  402873:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  402878:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  40287d:	e8 fe 01 00 00 	callq	510 <runtime.cgoCheckBits>
  402882:	48 8b 6c 24 60 	movq	96(%rsp), %rbp
  402887:	48 83 c4 68 	addq	$104, %rsp
  40288b:	c3 	retq
  40288c:	45 31 db 	xorl	%r11d, %r11d
  40288f:	eb bc 	jmp	-68 <runtime.cgoCheckTypedBlock+0xbd>
  402891:	49 8b 81 98 01 00 00 	movq	408(%r9), %rax
  402898:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40289d:	4c 89 d0 	movq	%r10, %rax
  4028a0:	4d 29 c2 	subq	%r8, %r10
  4028a3:	4b 8d 0c 22 	leaq	(%r10,%r12), %rcx
  4028a7:	48 89 0c 24 	movq	%rcx, (%rsp)
  4028ab:	49 29 c0 	subq	%rax, %r8
  4028ae:	49 8d 04 18 	leaq	(%r8,%rbx), %rax
  4028b2:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  4028b7:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  4028bc:	e8 bf 01 00 00 	callq	447 <runtime.cgoCheckBits>
  4028c1:	48 8b 6c 24 60 	movq	96(%rsp), %rbp
  4028c6:	48 83 c4 68 	addq	$104, %rsp
  4028ca:	c3 	retq
  4028cb:	45 31 db 	xorl	%r11d, %r11d
  4028ce:	e9 5b ff ff ff 	jmp	-165 <runtime.cgoCheckTypedBlock+0x9e>
  4028d3:	4c 89 c6 	movq	%r8, %rsi
  4028d6:	4c 2b 05 eb ac 0a 00 	subq	699627(%rip), %r8
  4028dd:	4c 89 c7 	movq	%r8, %rdi
  4028e0:	49 c1 e8 0d 	shrq	$13, %r8
  4028e4:	4c 8b 0d 05 aa 0a 00 	movq	698885(%rip), %r9
  4028eb:	4c 8b 15 f6 a9 0a 00 	movq	698870(%rip), %r10
  4028f2:	4d 39 c8 	cmpq	%r9, %r8
  4028f5:	0f 83 77 01 00 00 	jae	375 <runtime.cgoCheckTypedBlock+0x2e2>
  4028fb:	4f 8b 04 c2 	movq	(%r10,%r8,8), %r8
  4028ff:	45 0f b6 40 64 	movzbl	100(%r8), %r8d
  402904:	41 80 f8 02 	cmpb	$2, %r8b
  402908:	0f 84 d0 00 00 00 	je	208 <runtime.cgoCheckTypedBlock+0x24e>
  40290e:	48 89 94 24 88 00 00 00 	movq	%rdx, 136(%rsp)
  402916:	48 89 f8 	movq	%rdi, %rax
  402919:	48 c1 ef 03 	shrq	$3, %rdi
  40291d:	4c 8b 05 94 ac 0a 00 	movq	699540(%rip), %r8
  402924:	48 c1 e8 05 	shrq	$5, %rax
  402928:	49 29 c0 	subq	%rax, %r8
  40292b:	49 8d 40 ff 	leaq	-1(%r8), %rax
  40292f:	48 83 e7 03 	andq	$3, %rdi
  402933:	31 c9 	xorl	%ecx, %ecx
  402935:	eb 04 	jmp	4 <runtime.cgoCheckTypedBlock+0x1ab>
  402937:	49 8d 49 08 	leaq	8(%r9), %rcx
  40293b:	4c 8d 04 1a 	leaq	(%rdx,%rbx), %r8
  40293f:	4c 39 c1 	cmpq	%r8, %rcx
  402942:	0f 83 8c 00 00 00 	jae	140 <runtime.cgoCheckTypedBlock+0x244>
  402948:	44 0f b6 00 	movzbl	(%rax), %r8d
  40294c:	49 89 c9 	movq	%rcx, %r9
  40294f:	89 f9 	movl	%edi, %ecx
  402951:	41 d3 e8 	shrl	%cl, %r8d
  402954:	49 39 d9 	cmpq	%rbx, %r9
  402957:	72 07 	jb	7 <runtime.cgoCheckTypedBlock+0x1d0>
  402959:	41 0f ba e0 00 	btl	$0, %r8d
  40295e:	72 11 	jb	17 <runtime.cgoCheckTypedBlock+0x1e1>
  402960:	83 f9 03 	cmpl	$3, %ecx
  402963:	73 05 	jae	5 <runtime.cgoCheckTypedBlock+0x1da>
  402965:	8d 79 01 	leal	1(%rcx), %edi
  402968:	eb cd 	jmp	-51 <runtime.cgoCheckTypedBlock+0x1a7>
  40296a:	48 ff c8 	decq	%rax
  40296d:	31 ff 	xorl	%edi, %edi
  40296f:	eb c6 	jmp	-58 <runtime.cgoCheckTypedBlock+0x1a7>
  402971:	4c 89 4c 24 28 	movq	%r9, 40(%rsp)
  402976:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  40297b:	89 4c 24 24 	movl	%ecx, 36(%rsp)
  40297f:	49 8d 04 31 	leaq	(%r9,%rsi), %rax
  402983:	84 00 	testb	%al, (%rax)
  402985:	49 8b 04 31 	movq	(%r9,%rsi), %rax
  402989:	48 89 04 24 	movq	%rax, (%rsp)
  40298d:	e8 8e fa ff ff 	callq	-1394 <runtime.cgoIsGoPointer>
  402992:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  402997:	84 c0 	testb	%al, %al
  402999:	75 27 	jne	39 <runtime.cgoCheckTypedBlock+0x232>
  40299b:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4029a0:	8b 4c 24 24 	movl	36(%rsp), %ecx
  4029a4:	48 8b 94 24 88 00 00 00 	movq	136(%rsp), %rdx
  4029ac:	48 8b 9c 24 80 00 00 00 	movq	128(%rsp), %rbx
  4029b4:	48 8b 74 24 78 	movq	120(%rsp), %rsi
  4029b9:	89 cf 	movl	%ecx, %edi
  4029bb:	4c 8b 4c 24 28 	movq	40(%rsp), %r9
  4029c0:	eb 9e 	jmp	-98 <runtime.cgoCheckTypedBlock+0x1d0>
  4029c2:	48 8d 05 1f b6 06 00 	leaq	439839(%rip), %rax
  4029c9:	48 89 04 24 	movq	%rax, (%rsp)
  4029cd:	e8 4e 1a 04 00 	callq	268878 <runtime.systemstack>
  4029d2:	eb c7 	jmp	-57 <runtime.cgoCheckTypedBlock+0x20b>
  4029d4:	48 8b 6c 24 60 	movq	96(%rsp), %rbp
  4029d9:	48 83 c4 68 	addq	$104, %rsp
  4029dd:	c3 	retq
  4029de:	48 c7 44 24 38 00 00 00 00 	movq	$0, 56(%rsp)
  4029e7:	0f 57 c0 	xorps	%xmm0, %xmm0
  4029ea:	0f 11 44 24 40 	movups	%xmm0, 64(%rsp)
  4029ef:	0f 11 44 24 50 	movups	%xmm0, 80(%rsp)
  4029f4:	48 8d 0d 65 f0 03 00 	leaq	258149(%rip), %rcx
  4029fb:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  402a00:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  402a05:	48 89 74 24 48 	movq	%rsi, 72(%rsp)
  402a0a:	48 89 5c 24 50 	movq	%rbx, 80(%rsp)
  402a0f:	48 89 54 24 58 	movq	%rdx, 88(%rsp)
  402a14:	48 8d 44 24 38 	leaq	56(%rsp), %rax
  402a19:	48 89 04 24 	movq	%rax, (%rsp)
  402a1d:	e8 fe 19 04 00 	callq	268798 <runtime.systemstack>
  402a22:	48 8b 6c 24 60 	movq	96(%rsp), %rbp
  402a27:	48 83 c4 68 	addq	$104, %rsp
  402a2b:	c3 	retq
  402a2c:	31 ff 	xorl	%edi, %edi
  402a2e:	31 f6 	xorl	%esi, %esi
  402a30:	e9 bc fd ff ff 	jmp	-580 <runtime.cgoCheckTypedBlock+0x61>
  402a35:	48 8b 40 20 	movq	32(%rax), %rax
  402a39:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  402a3e:	48 8b 44 24 78 	movq	120(%rsp), %rax
  402a43:	48 89 04 24 	movq	%rax, (%rsp)
  402a47:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  402a4c:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  402a51:	e8 2a 00 00 00 	callq	42 <runtime.cgoCheckBits>
  402a56:	48 8b 6c 24 60 	movq	96(%rsp), %rbp
  402a5b:	48 83 c4 68 	addq	$104, %rsp
  402a5f:	c3 	retq
  402a60:	48 89 f2 	movq	%rsi, %rdx
  402a63:	e9 64 fd ff ff 	jmp	-668 <runtime.cgoCheckTypedBlock+0x3c>
  402a68:	48 8b 6c 24 60 	movq	96(%rsp), %rbp
  402a6d:	48 83 c4 68 	addq	$104, %rsp
  402a71:	c3 	retq
  402a72:	e8 c9 cf 01 00 	callq	118729 <runtime.panicindex>
  402a77:	0f 0b 	ud2
  402a79:	cc 	int3
  402a7a:	cc 	int3
  402a7b:	cc 	int3
  402a7c:	cc 	int3
  402a7d:	cc 	int3
  402a7e:	cc 	int3
  402a7f:	cc 	int3

runtime.cgoCheckBits:
  402a80:	48 83 ec 40 	subq	$64, %rsp
  402a84:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  402a89:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  402a8e:	48 8b 44 24 58 	movq	88(%rsp), %rax
  402a93:	48 89 c1 	movq	%rax, %rcx
  402a96:	48 c1 e8 06 	shrq	$6, %rax
  402a9a:	48 89 c2 	movq	%rax, %rdx
  402a9d:	48 c1 e0 06 	shlq	$6, %rax
  402aa1:	48 29 c1 	subq	%rax, %rcx
  402aa4:	48 8b 5c 24 60 	movq	96(%rsp), %rbx
  402aa9:	48 01 cb 	addq	%rcx, %rbx
  402aac:	48 89 5c 24 60 	movq	%rbx, 96(%rsp)
  402ab1:	48 8b 74 24 50 	movq	80(%rsp), %rsi
  402ab6:	48 01 f2 	addq	%rsi, %rdx
  402ab9:	48 8b 74 24 48 	movq	72(%rsp), %rsi
  402abe:	48 01 f0 	addq	%rsi, %rax
  402ac1:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  402ac6:	31 f6 	xorl	%esi, %esi
  402ac8:	31 ff 	xorl	%edi, %edi
  402aca:	eb 04 	jmp	4 <runtime.cgoCheckBits+0x50>
  402acc:	48 83 c6 08 	addq	$8, %rsi
  402ad0:	48 39 de 	cmpq	%rbx, %rsi
  402ad3:	0f 83 84 00 00 00 	jae	132 <runtime.cgoCheckBits+0xdd>
  402ad9:	48 f7 c6 3f 00 00 00 	testq	$63, %rsi
  402ae0:	75 77 	jne	119 <runtime.cgoCheckBits+0xd9>
  402ae2:	0f b6 3a 	movzbl	(%rdx), %edi
  402ae5:	48 ff c2 	incq	%rdx
  402ae8:	48 85 c9 	testq	%rcx, %rcx
  402aeb:	76 06 	jbe	6 <runtime.cgoCheckBits+0x73>
  402aed:	48 83 c1 f8 	addq	$-8, %rcx
  402af1:	eb d9 	jmp	-39 <runtime.cgoCheckBits+0x4c>
  402af3:	0f ba e7 00 	btl	$0, %edi
  402af7:	73 d3 	jae	-45 <runtime.cgoCheckBits+0x4c>
  402af9:	48 89 74 24 18 	movq	%rsi, 24(%rsp)
  402afe:	89 7c 24 14 	movl	%edi, 20(%rsp)
  402b02:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  402b07:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  402b0c:	48 8d 0c 30 	leaq	(%rax,%rsi), %rcx
  402b10:	84 01 	testb	%al, (%rcx)
  402b12:	48 8b 0c 06 	movq	(%rsi,%rax), %rcx
  402b16:	48 89 0c 24 	movq	%rcx, (%rsp)
  402b1a:	e8 01 f9 ff ff 	callq	-1791 <runtime.cgoIsGoPointer>
  402b1f:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  402b24:	84 c0 	testb	%al, %al
  402b26:	75 1f 	jne	31 <runtime.cgoCheckBits+0xc7>
  402b28:	48 8b 44 24 30 	movq	48(%rsp), %rax
  402b2d:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  402b32:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  402b37:	48 8b 5c 24 60 	movq	96(%rsp), %rbx
  402b3c:	48 8b 74 24 18 	movq	24(%rsp), %rsi
  402b41:	8b 7c 24 14 	movl	20(%rsp), %edi
  402b45:	eb 85 	jmp	-123 <runtime.cgoCheckBits+0x4c>
  402b47:	48 8d 05 92 b4 06 00 	leaq	439442(%rip), %rax
  402b4e:	48 89 04 24 	movq	%rax, (%rsp)
  402b52:	e8 c9 18 04 00 	callq	268489 <runtime.systemstack>
  402b57:	eb cf 	jmp	-49 <runtime.cgoCheckBits+0xa8>
  402b59:	d1 ef 	shrl	%edi
  402b5b:	eb 8b 	jmp	-117 <runtime.cgoCheckBits+0x68>
  402b5d:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  402b62:	48 83 c4 40 	addq	$64, %rsp
  402b66:	c3 	retq
  402b67:	cc 	int3
  402b68:	cc 	int3
  402b69:	cc 	int3
  402b6a:	cc 	int3
  402b6b:	cc 	int3
  402b6c:	cc 	int3
  402b6d:	cc 	int3
  402b6e:	cc 	int3
  402b6f:	cc 	int3

runtime.cgoCheckUsingType:
  402b70:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  402b79:	48 3b 61 18 	cmpq	24(%rcx), %rsp
  402b7d:	0f 86 40 02 00 00 	jbe	576 <runtime.cgoCheckUsingType+0x253>
  402b83:	48 83 ec 70 	subq	$112, %rsp
  402b87:	48 89 6c 24 68 	movq	%rbp, 104(%rsp)
  402b8c:	48 8d 6c 24 68 	leaq	104(%rsp), %rbp
  402b91:	48 8b 44 24 78 	movq	120(%rsp), %rax
  402b96:	0f b6 48 17 	movzbl	23(%rax), %ecx
  402b9a:	f6 c1 80 	testb	$-128, %cl
  402b9d:	0f 85 fb 01 00 00 	jne	507 <runtime.cgoCheckUsingType+0x22e>
  402ba3:	48 8b 50 08 	movq	8(%rax), %rdx
  402ba7:	48 8b 9c 24 88 00 00 00 	movq	136(%rsp), %rbx
  402baf:	48 39 da 	cmpq	%rbx, %rdx
  402bb2:	0f 86 dc 01 00 00 	jbe	476 <runtime.cgoCheckUsingType+0x224>
  402bb8:	48 29 da 	subq	%rbx, %rdx
  402bbb:	48 8b b4 24 90 00 00 00 	movq	144(%rsp), %rsi
  402bc3:	48 39 d6 	cmpq	%rdx, %rsi
  402bc6:	0f 86 c0 01 00 00 	jbe	448 <runtime.cgoCheckUsingType+0x21c>
  402bcc:	f6 c1 40 	testb	$64, %cl
  402bcf:	0f 84 89 01 00 00 	je	393 <runtime.cgoCheckUsingType+0x1ee>
  402bd5:	83 e1 1f 	andl	$31, %ecx
  402bd8:	80 f9 11 	cmpb	$17, %cl
  402bdb:	0f 85 b1 00 00 00 	jne	177 <runtime.cgoCheckUsingType+0x122>
  402be1:	31 c9 	xorl	%ecx, %ecx
  402be3:	48 8b b4 24 80 00 00 00 	movq	128(%rsp), %rsi
  402beb:	eb 06 	jmp	6 <runtime.cgoCheckUsingType+0x83>
  402bed:	48 ff c1 	incq	%rcx
  402bf0:	4c 29 c2 	subq	%r8, %rdx
  402bf3:	48 8b 78 40 	movq	64(%rax), %rdi
  402bf7:	48 39 f9 	cmpq	%rdi, %rcx
  402bfa:	0f 83 88 00 00 00 	jae	136 <runtime.cgoCheckUsingType+0x118>
  402c00:	48 8b 78 30 	movq	48(%rax), %rdi
  402c04:	4c 8b 07 	movq	(%rdi), %r8
  402c07:	4c 39 c3 	cmpq	%r8, %rbx
  402c0a:	72 2f 	jb	47 <runtime.cgoCheckUsingType+0xcb>
  402c0c:	48 8b 78 30 	movq	48(%rax), %rdi
  402c10:	48 8b 3f 	movq	(%rdi), %rdi
  402c13:	48 01 fe 	addq	%rdi, %rsi
  402c16:	48 39 fb 	cmpq	%rdi, %rbx
  402c19:	76 18 	jbe	24 <runtime.cgoCheckUsingType+0xc3>
  402c1b:	49 89 f8 	movq	%rdi, %r8
  402c1e:	49 29 f8 	subq	%rdi, %r8
  402c21:	48 29 fb 	subq	%rdi, %rbx
  402c24:	4c 39 c2 	cmpq	%r8, %rdx
  402c27:	77 c4 	ja	-60 <runtime.cgoCheckUsingType+0x7d>
  402c29:	48 8b 6c 24 68 	movq	104(%rsp), %rbp
  402c2e:	48 83 c4 70 	addq	$112, %rsp
  402c32:	c3 	retq
  402c33:	49 89 f8 	movq	%rdi, %r8
  402c36:	48 89 df 	movq	%rbx, %rdi
  402c39:	eb e3 	jmp	-29 <runtime.cgoCheckUsingType+0xae>
  402c3b:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  402c40:	48 89 94 24 90 00 00 00 	movq	%rdx, 144(%rsp)
  402c48:	48 89 74 24 50 	movq	%rsi, 80(%rsp)
  402c4d:	48 89 5c 24 28 	movq	%rbx, 40(%rsp)
  402c52:	48 89 3c 24 	movq	%rdi, (%rsp)
  402c56:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  402c5b:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  402c60:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  402c65:	e8 06 ff ff ff 	callq	-250 <runtime.cgoCheckUsingType>
  402c6a:	48 8b 44 24 78 	movq	120(%rsp), %rax
  402c6f:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  402c74:	48 8b 94 24 90 00 00 00 	movq	144(%rsp), %rdx
  402c7c:	48 8b 5c 24 28 	movq	40(%rsp), %rbx
  402c81:	48 8b 74 24 50 	movq	80(%rsp), %rsi
  402c86:	eb 84 	jmp	-124 <runtime.cgoCheckUsingType+0x9c>
  402c88:	48 8b 6c 24 68 	movq	104(%rsp), %rbp
  402c8d:	48 83 c4 70 	addq	$112, %rsp
  402c91:	c3 	retq
  402c92:	80 f9 19 	cmpb	$25, %cl
  402c95:	0f 85 0d 01 00 00 	jne	269 <runtime.cgoCheckUsingType+0x238>
  402c9b:	48 8b 48 40 	movq	64(%rax), %rcx
  402c9f:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  402ca4:	48 8b 40 38 	movq	56(%rax), %rax
  402ca8:	31 f6 	xorl	%esi, %esi
  402caa:	48 8b bc 24 80 00 00 00 	movq	128(%rsp), %rdi
  402cb2:	eb 0a 	jmp	10 <runtime.cgoCheckUsingType+0x14e>
  402cb4:	48 83 c0 18 	addq	$24, %rax
  402cb8:	48 ff c6 	incq	%rsi
  402cbb:	4c 29 ca 	subq	%r9, %rdx
  402cbe:	48 39 ce 	cmpq	%rcx, %rsi
  402cc1:	7d c5 	jge	-59 <runtime.cgoCheckUsingType+0x118>
  402cc3:	4c 8b 40 08 	movq	8(%rax), %r8
  402cc7:	4d 8b 08 	movq	(%r8), %r9
  402cca:	4c 39 cb 	cmpq	%r9, %rbx
  402ccd:	72 2b 	jb	43 <runtime.cgoCheckUsingType+0x18a>
  402ccf:	4d 8b 00 	movq	(%r8), %r8
  402cd2:	4c 01 c7 	addq	%r8, %rdi
  402cd5:	4c 39 c3 	cmpq	%r8, %rbx
  402cd8:	76 18 	jbe	24 <runtime.cgoCheckUsingType+0x182>
  402cda:	4d 89 c1 	movq	%r8, %r9
  402cdd:	4d 29 c1 	subq	%r8, %r9
  402ce0:	4c 29 c3 	subq	%r8, %rbx
  402ce3:	4c 39 ca 	cmpq	%r9, %rdx
  402ce6:	77 cc 	ja	-52 <runtime.cgoCheckUsingType+0x144>
  402ce8:	48 8b 6c 24 68 	movq	104(%rsp), %rbp
  402ced:	48 83 c4 70 	addq	$112, %rsp
  402cf1:	c3 	retq
  402cf2:	4d 89 c1 	movq	%r8, %r9
  402cf5:	49 89 d8 	movq	%rbx, %r8
  402cf8:	eb e3 	jmp	-29 <runtime.cgoCheckUsingType+0x16d>
  402cfa:	48 89 74 24 38 	movq	%rsi, 56(%rsp)
  402cff:	4c 89 44 24 60 	movq	%r8, 96(%rsp)
  402d04:	48 89 94 24 90 00 00 00 	movq	%rdx, 144(%rsp)
  402d0c:	48 89 7c 24 48 	movq	%rdi, 72(%rsp)
  402d11:	48 89 5c 24 20 	movq	%rbx, 32(%rsp)
  402d16:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  402d1b:	4c 89 04 24 	movq	%r8, (%rsp)
  402d1f:	48 89 7c 24 08 	movq	%rdi, 8(%rsp)
  402d24:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  402d29:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  402d2e:	e8 3d fe ff ff 	callq	-451 <runtime.cgoCheckUsingType>
  402d33:	48 8b 44 24 58 	movq	88(%rsp), %rax
  402d38:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  402d3d:	48 8b 94 24 90 00 00 00 	movq	144(%rsp), %rdx
  402d45:	48 8b 5c 24 20 	movq	32(%rsp), %rbx
  402d4a:	48 8b 74 24 38 	movq	56(%rsp), %rsi
  402d4f:	48 8b 7c 24 48 	movq	72(%rsp), %rdi
  402d54:	4c 8b 44 24 60 	movq	96(%rsp), %r8
  402d59:	e9 71 ff ff ff 	jmp	-143 <runtime.cgoCheckUsingType+0x15f>
  402d5e:	48 8b 40 20 	movq	32(%rax), %rax
  402d62:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  402d67:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  402d6f:	48 89 04 24 	movq	%rax, (%rsp)
  402d73:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  402d78:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  402d7d:	e8 fe fc ff ff 	callq	-770 <runtime.cgoCheckBits>
  402d82:	48 8b 6c 24 68 	movq	104(%rsp), %rbp
  402d87:	48 83 c4 70 	addq	$112, %rsp
  402d8b:	c3 	retq
  402d8c:	48 89 f2 	movq	%rsi, %rdx
  402d8f:	e9 38 fe ff ff 	jmp	-456 <runtime.cgoCheckUsingType+0x5c>
  402d94:	48 8b 6c 24 68 	movq	104(%rsp), %rbp
  402d99:	48 83 c4 70 	addq	$112, %rsp
  402d9d:	c3 	retq
  402d9e:	48 8b 6c 24 68 	movq	104(%rsp), %rbp
  402da3:	48 83 c4 70 	addq	$112, %rsp
  402da7:	c3 	retq
  402da8:	48 8d 05 2f 78 06 00 	leaq	423983(%rip), %rax
  402daf:	48 89 04 24 	movq	%rax, (%rsp)
  402db3:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  402dbc:	e8 0f e4 01 00 	callq	123919 <runtime.throw>
  402dc1:	0f 0b 	ud2
  402dc3:	e8 38 3f 03 00 	callq	212792 <runtime.morestackc>
  402dc8:	e9 a3 fd ff ff 	jmp	-605 <runtime.cgoCheckUsingType>
  402dcd:	cc 	int3
  402dce:	cc 	int3
  402dcf:	cc 	int3

runtime.makechan:
  402dd0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  402dd9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  402ddd:	0f 86 44 02 00 00 	jbe	580 <runtime.makechan+0x257>
  402de3:	48 83 ec 38 	subq	$56, %rsp
  402de7:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  402dec:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  402df1:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  402df6:	48 8b 49 30 	movq	48(%rcx), %rcx
  402dfa:	48 8b 11 	movq	(%rcx), %rdx
  402dfd:	48 81 fa 00 00 01 00 	cmpq	$65536, %rdx
  402e04:	0f 83 02 02 00 00 	jae	514 <runtime.makechan+0x23c>
  402e0a:	0f b6 59 15 	movzbl	21(%rcx), %ebx
  402e0e:	80 fb 08 	cmpb	$8, %bl
  402e11:	0f 87 da 01 00 00 	ja	474 <runtime.makechan+0x221>
  402e17:	48 8b 5c 24 48 	movq	72(%rsp), %rbx
  402e1c:	48 85 db 	testq	%rbx, %rbx
  402e1f:	0f 8c ae 01 00 00 	jl	430 <runtime.makechan+0x203>
  402e25:	48 83 fa 21 	cmpq	$33, %rdx
  402e29:	0f 83 8a 01 00 00 	jae	394 <runtime.makechan+0x1e9>
  402e2f:	48 8d 05 4a 27 0a 00 	leaq	665418(%rip), %rax
  402e36:	48 8b 04 d0 	movq	(%rax,%rdx,8), %rax
  402e3a:	48 39 c3 	cmpq	%rax, %rbx
  402e3d:	0f 87 90 01 00 00 	ja	400 <runtime.makechan+0x203>
  402e43:	48 89 d0 	movq	%rdx, %rax
  402e46:	48 0f af d3 	imulq	%rbx, %rdx
  402e4a:	48 be 9f ff ff ff 7f 00 00 00 	movabsq	$549755813791, %rsi
  402e54:	48 39 f2 	cmpq	%rsi, %rdx
  402e57:	0f 87 76 01 00 00 	ja	374 <runtime.makechan+0x203>
  402e5d:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  402e62:	48 85 db 	testq	%rbx, %rbx
  402e65:	0f 85 81 00 00 00 	jne	129 <runtime.makechan+0x11c>
  402e6b:	48 c7 04 24 60 00 00 00 	movq	$96, (%rsp)
  402e73:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  402e7c:	c6 44 24 10 01 	movb	$1, 16(%rsp)
  402e81:	e8 8a 77 00 00 	callq	30602 <runtime.mallocgc>
  402e86:	48 8b 44 24 18 	movq	24(%rsp), %rax
  402e8b:	84 00 	testb	%al, (%rax)
  402e8d:	8b 0d 7d 0b 0c 00 	movl	789373(%rip), %ecx
  402e93:	48 8d 78 10 	leaq	16(%rax), %rdi
  402e97:	85 c9 	testl	%ecx, %ecx
  402e99:	75 4a 	jne	74 <runtime.makechan+0x115>
  402e9b:	48 89 40 10 	movq	%rax, 16(%rax)
  402e9f:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  402ea4:	48 8b 11 	movq	(%rcx), %rdx
  402ea7:	66 89 50 18 	movw	%dx, 24(%rax)
  402eab:	8b 15 5f 0b 0c 00 	movl	789343(%rip), %edx
  402eb1:	48 8d 78 20 	leaq	32(%rax), %rdi
  402eb5:	85 d2 	testl	%edx, %edx
  402eb7:	75 1c 	jne	28 <runtime.makechan+0x105>
  402eb9:	48 89 48 20 	movq	%rcx, 32(%rax)
  402ebd:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  402ec2:	48 89 48 08 	movq	%rcx, 8(%rax)
  402ec6:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  402ecb:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  402ed0:	48 83 c4 38 	addq	$56, %rsp
  402ed4:	c3 	retq
  402ed5:	48 89 c2 	movq	%rax, %rdx
  402ed8:	48 89 c8 	movq	%rcx, %rax
  402edb:	e8 c0 39 04 00 	callq	276928 <runtime.gcWriteBarrier>
  402ee0:	48 89 d0 	movq	%rdx, %rax
  402ee3:	eb d8 	jmp	-40 <runtime.makechan+0xed>
  402ee5:	e8 b6 39 04 00 	callq	276918 <runtime.gcWriteBarrier>
  402eea:	eb b3 	jmp	-77 <runtime.makechan+0xcf>
  402eec:	48 85 c0 	testq	%rax, %rax
  402eef:	0f 84 76 ff ff ff 	je	-138 <runtime.makechan+0x9b>
  402ef5:	0f b6 41 17 	movzbl	23(%rcx), %eax
  402ef9:	a8 80 	testb	$-128, %al
  402efb:	74 50 	je	80 <runtime.makechan+0x17d>
  402efd:	48 8d 42 60 	leaq	96(%rdx), %rax
  402f01:	48 89 04 24 	movq	%rax, (%rsp)
  402f05:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  402f0e:	c6 44 24 10 01 	movb	$1, 16(%rsp)
  402f13:	e8 f8 76 00 00 	callq	30456 <runtime.mallocgc>
  402f18:	48 8b 44 24 18 	movq	24(%rsp), %rax
  402f1d:	84 00 	testb	%al, (%rax)
  402f1f:	8b 0d eb 0a 0c 00 	movl	789227(%rip), %ecx
  402f25:	48 8d 78 10 	leaq	16(%rax), %rdi
  402f29:	48 8d 50 60 	leaq	96(%rax), %rdx
  402f2d:	85 c9 	testl	%ecx, %ecx
  402f2f:	75 09 	jne	9 <runtime.makechan+0x16a>
  402f31:	48 89 50 10 	movq	%rdx, 16(%rax)
  402f35:	e9 65 ff ff ff 	jmp	-155 <runtime.makechan+0xcf>
  402f3a:	48 89 c1 	movq	%rax, %rcx
  402f3d:	48 89 d0 	movq	%rdx, %rax
  402f40:	e8 5b 39 04 00 	callq	276827 <runtime.gcWriteBarrier>
  402f45:	48 89 c8 	movq	%rcx, %rax
  402f48:	e9 52 ff ff ff 	jmp	-174 <runtime.makechan+0xcf>
  402f4d:	48 8d 05 ec 27 06 00 	leaq	403436(%rip), %rax
  402f54:	48 89 04 24 	movq	%rax, (%rsp)
  402f58:	e8 c3 81 00 00 	callq	33219 <runtime.newobject>
  402f5d:	48 8b 44 24 08 	movq	8(%rsp), %rax
  402f62:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  402f67:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  402f6c:	48 8b 11 	movq	(%rcx), %rdx
  402f6f:	48 8b 5c 24 48 	movq	72(%rsp), %rbx
  402f74:	48 0f af d3 	imulq	%rbx, %rdx
  402f78:	48 89 14 24 	movq	%rdx, (%rsp)
  402f7c:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  402f81:	c6 44 24 10 01 	movb	$1, 16(%rsp)
  402f86:	e8 85 76 00 00 	callq	30341 <runtime.mallocgc>
  402f8b:	8b 05 7f 0a 0c 00 	movl	789119(%rip), %eax
  402f91:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  402f96:	48 8d 79 10 	leaq	16(%rcx), %rdi
  402f9a:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  402f9f:	85 c0 	testl	%eax, %eax
  402fa1:	75 0c 	jne	12 <runtime.makechan+0x1df>
  402fa3:	48 89 51 10 	movq	%rdx, 16(%rcx)
  402fa7:	48 89 c8 	movq	%rcx, %rax
  402faa:	e9 f0 fe ff ff 	jmp	-272 <runtime.makechan+0xcf>
  402faf:	48 89 d0 	movq	%rdx, %rax
  402fb2:	e8 e9 38 04 00 	callq	276713 <runtime.gcWriteBarrier>
  402fb7:	eb ee 	jmp	-18 <runtime.makechan+0x1d7>
  402fb9:	48 b8 ff ff ff ff 7f 00 00 00 	movabsq	$549755813887, %rax
  402fc3:	48 89 d6 	movq	%rdx, %rsi
  402fc6:	31 d2 	xorl	%edx, %edx
  402fc8:	48 f7 f6 	divq	%rsi
  402fcb:	48 89 f2 	movq	%rsi, %rdx
  402fce:	e9 67 fe ff ff 	jmp	-409 <runtime.makechan+0x6a>
  402fd3:	48 8d 05 66 80 05 00 	leaq	360550(%rip), %rax
  402fda:	48 89 04 24 	movq	%rax, (%rsp)
  402fde:	48 8d 05 5b 1d 07 00 	leaq	466267(%rip), %rax
  402fe5:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  402fea:	e8 41 da 01 00 	callq	121409 <runtime.gopanic>
  402fef:	0f 0b 	ud2
  402ff1:	48 8d 05 c7 86 06 00 	leaq	427719(%rip), %rax
  402ff8:	48 89 04 24 	movq	%rax, (%rsp)
  402ffc:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  403005:	e8 c6 e1 01 00 	callq	123334 <runtime.throw>
  40300a:	0f 0b 	ud2
  40300c:	48 8d 05 a7 a0 06 00 	leaq	434343(%rip), %rax
  403013:	48 89 04 24 	movq	%rax, (%rsp)
  403017:	48 c7 44 24 08 26 00 00 00 	movq	$38, 8(%rsp)
  403020:	e8 ab e1 01 00 	callq	123307 <runtime.throw>
  403025:	0f 0b 	ud2
  403027:	e8 44 15 04 00 	callq	267588 <runtime.morestack_noctxt>
  40302c:	e9 9f fd ff ff 	jmp	-609 <runtime.makechan>
  403031:	cc 	int3
  403032:	cc 	int3
  403033:	cc 	int3
  403034:	cc 	int3
  403035:	cc 	int3
  403036:	cc 	int3
  403037:	cc 	int3
  403038:	cc 	int3
  403039:	cc 	int3
  40303a:	cc 	int3
  40303b:	cc 	int3
  40303c:	cc 	int3
  40303d:	cc 	int3
  40303e:	cc 	int3
  40303f:	cc 	int3

runtime.chansend1:
  403040:	48 83 ec 30 	subq	$48, %rsp
  403044:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  403049:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  40304e:	48 8b 44 24 38 	movq	56(%rsp), %rax
  403053:	48 89 04 24 	movq	%rax, (%rsp)
  403057:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40305c:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  403061:	c6 44 24 10 01 	movb	$1, 16(%rsp)
  403066:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40306b:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  403070:	e8 0b 00 00 00 	callq	11 <runtime.chansend>
  403075:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  40307a:	48 83 c4 30 	addq	$48, %rsp
  40307e:	c3 	retq
  40307f:	cc 	int3

runtime.chansend:
  403080:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  403089:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40308d:	0f 86 1e 06 00 00 	jbe	1566 <runtime.chansend+0x631>
  403093:	48 81 ec 80 00 00 00 	subq	$128, %rsp
  40309a:	48 89 6c 24 78 	movq	%rbp, 120(%rsp)
  40309f:	48 8d 6c 24 78 	leaq	120(%rsp), %rbp
  4030a4:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  4030ac:	48 85 c0 	testq	%rax, %rax
  4030af:	0f 84 0d 05 00 00 	je	1293 <runtime.chansend+0x542>
  4030b5:	0f b6 8c 24 98 00 00 00 	movzbl	152(%rsp), %ecx
  4030bd:	84 c9 	testb	%cl, %cl
  4030bf:	75 3b 	jne	59 <runtime.chansend+0x7c>
  4030c1:	8b 50 1c 	movl	28(%rax), %edx
  4030c4:	85 d2 	testl	%edx, %edx
  4030c6:	75 34 	jne	52 <runtime.chansend+0x7c>
  4030c8:	48 8b 50 08 	movq	8(%rax), %rdx
  4030cc:	48 85 d2 	testq	%rdx, %rdx
  4030cf:	75 0c 	jne	12 <runtime.chansend+0x5d>
  4030d1:	48 8b 58 38 	movq	56(%rax), %rbx
  4030d5:	48 85 db 	testq	%rbx, %rbx
  4030d8:	74 0d 	je	13 <runtime.chansend+0x67>
  4030da:	48 85 d2 	testq	%rdx, %rdx
  4030dd:	76 1d 	jbe	29 <runtime.chansend+0x7c>
  4030df:	48 8b 18 	movq	(%rax), %rbx
  4030e2:	48 39 d3 	cmpq	%rdx, %rbx
  4030e5:	75 15 	jne	21 <runtime.chansend+0x7c>
  4030e7:	c6 84 24 a8 00 00 00 00 	movb	$0, 168(%rsp)
  4030ef:	48 8b 6c 24 78 	movq	120(%rsp), %rbp
  4030f4:	48 81 c4 80 00 00 00 	addq	$128, %rsp
  4030fb:	c3 	retq
  4030fc:	48 8b 15 25 08 0c 00 	movq	788517(%rip), %rdx
  403103:	48 85 d2 	testq	%rdx, %rdx
  403106:	0f 87 a0 04 00 00 	ja	1184 <runtime.chansend+0x52c>
  40310c:	31 d2 	xorl	%edx, %edx
  40310e:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  403113:	48 8d 48 58 	leaq	88(%rax), %rcx
  403117:	48 89 4c 24 60 	movq	%rcx, 96(%rsp)
  40311c:	48 89 0c 24 	movq	%rcx, (%rsp)
  403120:	e8 fb 63 00 00 	callq	25595 <runtime.lock>
  403125:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  40312d:	8b 48 1c 	movl	28(%rax), %ecx
  403130:	85 c9 	testl	%ecx, %ecx
  403132:	0f 85 03 05 00 00 	jne	1283 <runtime.chansend+0x5bb>
  403138:	48 8d 48 38 	leaq	56(%rax), %rcx
  40313c:	48 89 0c 24 	movq	%rcx, (%rsp)
  403140:	e8 2b 13 00 00 	callq	4907 <runtime.(*waitq).dequeue>
  403145:	48 8b 44 24 08 	movq	8(%rsp), %rax
  40314a:	48 85 c0 	testq	%rax, %rax
  40314d:	0f 85 fd 03 00 00 	jne	1021 <runtime.chansend+0x4d0>
  403153:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  40315b:	48 8b 08 	movq	(%rax), %rcx
  40315e:	48 8b 50 08 	movq	8(%rax), %rdx
  403162:	48 39 d1 	cmpq	%rdx, %rcx
  403165:	0f 82 6c 03 00 00 	jb	876 <runtime.chansend+0x457>
  40316b:	0f b6 8c 24 98 00 00 00 	movzbl	152(%rsp), %ecx
  403173:	84 c9 	testb	%cl, %cl
  403175:	75 23 	jne	35 <runtime.chansend+0x11a>
  403177:	48 8b 44 24 60 	movq	96(%rsp), %rax
  40317c:	48 89 04 24 	movq	%rax, (%rsp)
  403180:	e8 3b 65 00 00 	callq	25915 <runtime.unlock>
  403185:	c6 84 24 a8 00 00 00 00 	movb	$0, 168(%rsp)
  40318d:	48 8b 6c 24 78 	movq	120(%rsp), %rbp
  403192:	48 81 c4 80 00 00 00 	addq	$128, %rsp
  403199:	c3 	retq
  40319a:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4031a3:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  4031a8:	e8 83 fe 01 00 	callq	130691 <runtime.acquireSudog>
  4031ad:	48 8b 04 24 	movq	(%rsp), %rax
  4031b1:	48 c7 40 30 00 00 00 00 	movq	$0, 48(%rax)
  4031b9:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4031be:	48 85 c9 	testq	%rcx, %rcx
  4031c1:	74 08 	je	8 <runtime.chansend+0x14b>
  4031c3:	48 c7 40 30 ff ff ff ff 	movq	$-1, 48(%rax)
  4031cb:	8b 15 3f 08 0c 00 	movl	788543(%rip), %edx
  4031d1:	48 8d 78 20 	leaq	32(%rax), %rdi
  4031d5:	48 8d 58 48 	leaq	72(%rax), %rbx
  4031d9:	85 d2 	testl	%edx, %edx
  4031db:	0f 85 c2 02 00 00 	jne	706 <runtime.chansend+0x423>
  4031e1:	48 8b 94 24 90 00 00 00 	movq	144(%rsp), %rdx
  4031e9:	48 89 50 20 	movq	%rdx, 32(%rax)
  4031ed:	48 c7 40 48 00 00 00 00 	movq	$0, 72(%rax)
  4031f5:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  4031fa:	48 89 10 	movq	%rdx, (%rax)
  4031fd:	c6 40 08 00 	movb	$0, 8(%rax)
  403201:	8b 1d 09 08 0c 00 	movl	788489(%rip), %ebx
  403207:	48 8d 78 58 	leaq	88(%rax), %rdi
  40320b:	85 db 	testl	%ebx, %ebx
  40320d:	0f 85 70 02 00 00 	jne	624 <runtime.chansend+0x403>
  403213:	48 8b 9c 24 88 00 00 00 	movq	136(%rsp), %rbx
  40321b:	48 89 58 58 	movq	%rbx, 88(%rax)
  40321f:	84 02 	testb	%al, (%rdx)
  403221:	8b 35 e9 07 0c 00 	movl	788457(%rip), %esi
  403227:	4c 8d 82 38 01 00 00 	leaq	312(%rdx), %r8
  40322e:	4c 8d 8a 88 00 00 00 	leaq	136(%rdx), %r9
  403235:	4c 8d 50 10 	leaq	16(%rax), %r10
  403239:	85 f6 	testl	%esi, %esi
  40323b:	0f 85 15 02 00 00 	jne	533 <runtime.chansend+0x3d6>
  403241:	48 89 82 38 01 00 00 	movq	%rax, 312(%rdx)
  403248:	48 c7 82 88 00 00 00 00 00 00 00 	movq	$0, 136(%rdx)
  403253:	48 c7 40 10 00 00 00 00 	movq	$0, 16(%rax)
  40325b:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  403260:	48 89 7c 24 58 	movq	%rdi, 88(%rsp)
  403265:	4c 89 44 24 50 	movq	%r8, 80(%rsp)
  40326a:	4c 89 4c 24 48 	movq	%r9, 72(%rsp)
  40326f:	48 8d 73 48 	leaq	72(%rbx), %rsi
  403273:	84 06 	testb	%al, (%rsi)
  403275:	48 8b 73 50 	movq	80(%rbx), %rsi
  403279:	4c 8d 53 50 	leaq	80(%rbx), %r10
  40327d:	48 85 f6 	testq	%rsi, %rsi
  403280:	0f 84 7e 01 00 00 	je	382 <runtime.chansend+0x384>
  403286:	44 8b 1d 83 07 0c 00 	movl	788355(%rip), %r11d
  40328d:	4c 8d 60 18 	leaq	24(%rax), %r12
  403291:	4c 8d 6e 10 	leaq	16(%rsi), %r13
  403295:	45 85 db 	testl	%r11d, %r11d
  403298:	0f 85 3a 01 00 00 	jne	314 <runtime.chansend+0x358>
  40329e:	48 89 70 18 	movq	%rsi, 24(%rax)
  4032a2:	48 89 46 10 	movq	%rax, 16(%rsi)
  4032a6:	48 89 43 50 	movq	%rax, 80(%rbx)
  4032aa:	48 8b 44 24 60 	movq	96(%rsp), %rax
  4032af:	48 89 04 24 	movq	%rax, (%rsp)
  4032b3:	48 8d 05 4b 6e 06 00 	leaq	421451(%rip), %rax
  4032ba:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4032bf:	48 c7 44 24 10 09 00 00 00 	movq	$9, 16(%rsp)
  4032c8:	c6 44 24 18 16 	movb	$22, 24(%rsp)
  4032cd:	48 c7 44 24 20 03 00 00 00 	movq	$3, 32(%rsp)
  4032d6:	e8 85 fc 01 00 	callq	130181 <runtime.goparkunlock>
  4032db:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4032e0:	48 8b 88 38 01 00 00 	movq	312(%rax), %rcx
  4032e7:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  4032ec:	48 39 ca 	cmpq	%rcx, %rdx
  4032ef:	0f 85 2b 03 00 00 	jne	811 <runtime.chansend+0x5a0>
  4032f5:	8b 0d 15 07 0c 00 	movl	788245(%rip), %ecx
  4032fb:	85 c9 	testl	%ecx, %ecx
  4032fd:	0f 85 be 00 00 00 	jne	190 <runtime.chansend+0x341>
  403303:	48 c7 80 38 01 00 00 00 00 00 00 	movq	$0, 312(%rax)
  40330e:	48 8b 88 88 00 00 00 	movq	136(%rax), %rcx
  403315:	48 85 c9 	testq	%rcx, %rcx
  403318:	0f 84 8b 00 00 00 	je	139 <runtime.chansend+0x329>
  40331e:	8b 0d ec 06 0c 00 	movl	788204(%rip), %ecx
  403324:	85 c9 	testl	%ecx, %ecx
  403326:	75 73 	jne	115 <runtime.chansend+0x31b>
  403328:	48 c7 80 88 00 00 00 00 00 00 00 	movq	$0, 136(%rax)
  403333:	48 8b 4a 30 	movq	48(%rdx), %rcx
  403337:	48 85 c9 	testq	%rcx, %rcx
  40333a:	7f 3e 	jg	62 <runtime.chansend+0x2fa>
  40333c:	8b 0d ce 06 0c 00 	movl	788174(%rip), %ecx
  403342:	85 c9 	testl	%ecx, %ecx
  403344:	75 26 	jne	38 <runtime.chansend+0x2ec>
  403346:	48 c7 42 58 00 00 00 00 	movq	$0, 88(%rdx)
  40334e:	48 89 14 24 	movq	%rdx, (%rsp)
  403352:	e8 69 00 02 00 	callq	131177 <runtime.releaseSudog>
  403357:	c6 84 24 a8 00 00 00 01 	movb	$1, 168(%rsp)
  40335f:	48 8b 6c 24 78 	movq	120(%rsp), %rbp
  403364:	48 81 c4 80 00 00 00 	addq	$128, %rsp
  40336b:	c3 	retq
  40336c:	48 8b 7c 24 58 	movq	88(%rsp), %rdi
  403371:	31 c0 	xorl	%eax, %eax
  403373:	e8 28 35 04 00 	callq	275752 <runtime.gcWriteBarrier>
  403378:	eb d4 	jmp	-44 <runtime.chansend+0x2ce>
  40337a:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40337f:	48 29 c1 	subq	%rax, %rcx
  403382:	48 89 0c 24 	movq	%rcx, (%rsp)
  403386:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  40338f:	e8 5c a4 01 00 	callq	107612 <runtime.blockevent>
  403394:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  403399:	eb a1 	jmp	-95 <runtime.chansend+0x2bc>
  40339b:	48 8b 7c 24 48 	movq	72(%rsp), %rdi
  4033a0:	31 c0 	xorl	%eax, %eax
  4033a2:	e8 f9 34 04 00 	callq	275705 <runtime.gcWriteBarrier>
  4033a7:	eb 8a 	jmp	-118 <runtime.chansend+0x2b3>
  4033a9:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  4033b1:	8b 40 1c 	movl	28(%rax), %eax
  4033b4:	85 c0 	testl	%eax, %eax
  4033b6:	0f 84 49 02 00 00 	je	585 <runtime.chansend+0x585>
  4033bc:	e9 26 02 00 00 	jmp	550 <runtime.chansend+0x567>
  4033c1:	48 8b 7c 24 50 	movq	80(%rsp), %rdi
  4033c6:	48 89 c1 	movq	%rax, %rcx
  4033c9:	31 c0 	xorl	%eax, %eax
  4033cb:	e8 d0 34 04 00 	callq	275664 <runtime.gcWriteBarrier>
  4033d0:	48 89 c8 	movq	%rcx, %rax
  4033d3:	e9 36 ff ff ff 	jmp	-202 <runtime.chansend+0x28e>
  4033d8:	49 89 fb 	movq	%rdi, %r11
  4033db:	4c 89 e7 	movq	%r12, %rdi
  4033de:	49 89 c6 	movq	%rax, %r14
  4033e1:	48 89 f0 	movq	%rsi, %rax
  4033e4:	e8 b7 34 04 00 	callq	275639 <runtime.gcWriteBarrier>
  4033e9:	4c 89 ef 	movq	%r13, %rdi
  4033ec:	4c 89 f0 	movq	%r14, %rax
  4033ef:	e8 ac 34 04 00 	callq	275628 <runtime.gcWriteBarrier>
  4033f4:	4c 89 d7 	movq	%r10, %rdi
  4033f7:	e8 a4 34 04 00 	callq	275620 <runtime.gcWriteBarrier>
  4033fc:	4c 89 df 	movq	%r11, %rdi
  4033ff:	e9 a6 fe ff ff 	jmp	-346 <runtime.chansend+0x22a>
  403404:	8b 35 06 06 0c 00 	movl	787974(%rip), %esi
  40340a:	4c 8d 58 18 	leaq	24(%rax), %r11
  40340e:	4c 8d 63 48 	leaq	72(%rbx), %r12
  403412:	85 f6 	testl	%esi, %esi
  403414:	75 15 	jne	21 <runtime.chansend+0x3ab>
  403416:	48 c7 40 18 00 00 00 00 	movq	$0, 24(%rax)
  40341e:	48 89 43 48 	movq	%rax, 72(%rbx)
  403422:	48 89 43 50 	movq	%rax, 80(%rbx)
  403426:	e9 7f fe ff ff 	jmp	-385 <runtime.chansend+0x22a>
  40342b:	48 89 fe 	movq	%rdi, %rsi
  40342e:	4c 89 df 	movq	%r11, %rdi
  403431:	49 89 c5 	movq	%rax, %r13
  403434:	31 c0 	xorl	%eax, %eax
  403436:	e8 65 34 04 00 	callq	275557 <runtime.gcWriteBarrier>
  40343b:	4c 89 e7 	movq	%r12, %rdi
  40343e:	4c 89 e8 	movq	%r13, %rax
  403441:	e8 5a 34 04 00 	callq	275546 <runtime.gcWriteBarrier>
  403446:	4c 89 d7 	movq	%r10, %rdi
  403449:	e8 52 34 04 00 	callq	275538 <runtime.gcWriteBarrier>
  40344e:	48 89 f7 	movq	%rsi, %rdi
  403451:	e9 54 fe ff ff 	jmp	-428 <runtime.chansend+0x22a>
  403456:	48 89 fe 	movq	%rdi, %rsi
  403459:	4c 89 c7 	movq	%r8, %rdi
  40345c:	e8 3f 34 04 00 	callq	275519 <runtime.gcWriteBarrier>
  403461:	4c 89 cf 	movq	%r9, %rdi
  403464:	49 89 c3 	movq	%rax, %r11
  403467:	31 c0 	xorl	%eax, %eax
  403469:	e8 32 34 04 00 	callq	275506 <runtime.gcWriteBarrier>
  40346e:	4c 89 d7 	movq	%r10, %rdi
  403471:	31 c0 	xorl	%eax, %eax
  403473:	e8 28 34 04 00 	callq	275496 <runtime.gcWriteBarrier>
  403478:	4c 89 d8 	movq	%r11, %rax
  40347b:	48 89 f7 	movq	%rsi, %rdi
  40347e:	e9 d8 fd ff ff 	jmp	-552 <runtime.chansend+0x1db>
  403483:	48 89 c3 	movq	%rax, %rbx
  403486:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  40348e:	e8 0d 34 04 00 	callq	275469 <runtime.gcWriteBarrier>
  403493:	48 89 d8 	movq	%rbx, %rax
  403496:	48 8b 9c 24 88 00 00 00 	movq	136(%rsp), %rbx
  40349e:	e9 7c fd ff ff 	jmp	-644 <runtime.chansend+0x19f>
  4034a3:	48 89 c2 	movq	%rax, %rdx
  4034a6:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  4034ae:	e8 ed 33 04 00 	callq	275437 <runtime.gcWriteBarrier>
  4034b3:	48 89 df 	movq	%rbx, %rdi
  4034b6:	31 c0 	xorl	%eax, %eax
  4034b8:	e8 e3 33 04 00 	callq	275427 <runtime.gcWriteBarrier>
  4034bd:	48 89 d7 	movq	%rdx, %rdi
  4034c0:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4034c5:	e8 d6 33 04 00 	callq	275414 <runtime.gcWriteBarrier>
  4034ca:	48 89 f8 	movq	%rdi, %rax
  4034cd:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  4034d2:	e9 26 fd ff ff 	jmp	-730 <runtime.chansend+0x17d>
  4034d7:	48 8b 48 28 	movq	40(%rax), %rcx
  4034db:	48 8b 50 20 	movq	32(%rax), %rdx
  4034df:	0f b7 58 18 	movzwl	24(%rax), %ebx
  4034e3:	48 0f af cb 	imulq	%rbx, %rcx
  4034e7:	48 03 48 10 	addq	16(%rax), %rcx
  4034eb:	48 89 14 24 	movq	%rdx, (%rsp)
  4034ef:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4034f4:	48 8b 8c 24 90 00 00 00 	movq	144(%rsp), %rcx
  4034fc:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  403501:	e8 8a 85 00 00 	callq	34186 <runtime.typedmemmove>
  403506:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  40350e:	48 8b 48 28 	movq	40(%rax), %rcx
  403512:	48 ff c1 	incq	%rcx
  403515:	48 89 48 28 	movq	%rcx, 40(%rax)
  403519:	48 8b 50 08 	movq	8(%rax), %rdx
  40351d:	48 39 d1 	cmpq	%rdx, %rcx
  403520:	75 08 	jne	8 <runtime.chansend+0x4aa>
  403522:	48 c7 40 28 00 00 00 00 	movq	$0, 40(%rax)
  40352a:	48 ff 00 	incq	(%rax)
  40352d:	48 8b 44 24 60 	movq	96(%rsp), %rax
  403532:	48 89 04 24 	movq	%rax, (%rsp)
  403536:	e8 85 61 00 00 	callq	24965 <runtime.unlock>
  40353b:	c6 84 24 a8 00 00 00 01 	movb	$1, 168(%rsp)
  403543:	48 8b 6c 24 78 	movq	120(%rsp), %rbp
  403548:	48 81 c4 80 00 00 00 	addq	$128, %rsp
  40354f:	c3 	retq
  403550:	48 8d 0d e9 e5 03 00 	leaq	255465(%rip), %rcx
  403557:	48 89 4c 24 68 	movq	%rcx, 104(%rsp)
  40355c:	48 8b 8c 24 88 00 00 00 	movq	136(%rsp), %rcx
  403564:	48 89 4c 24 70 	movq	%rcx, 112(%rsp)
  403569:	48 89 0c 24 	movq	%rcx, (%rsp)
  40356d:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  403572:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  40357a:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40357f:	48 8d 44 24 68 	leaq	104(%rsp), %rax
  403584:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  403589:	48 c7 44 24 20 03 00 00 00 	movq	$3, 32(%rsp)
  403592:	e8 29 01 00 00 	callq	297 <runtime.send>
  403597:	c6 84 24 a8 00 00 00 01 	movb	$1, 168(%rsp)
  40359f:	48 8b 6c 24 78 	movq	120(%rsp), %rbp
  4035a4:	48 81 c4 80 00 00 00 	addq	$128, %rsp
  4035ab:	c3 	retq
  4035ac:	e8 3f 27 04 00 	callq	272191 <runtime.cputicks>
  4035b1:	48 8b 14 24 	movq	(%rsp), %rdx
  4035b5:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  4035bd:	e9 4c fb ff ff 	jmp	-1204 <runtime.chansend+0x8e>
  4035c2:	0f b6 84 24 98 00 00 00 	movzbl	152(%rsp), %eax
  4035ca:	84 c0 	testb	%al, %al
  4035cc:	0f 85 95 00 00 00 	jne	149 <runtime.chansend+0x5e7>
  4035d2:	c6 84 24 a8 00 00 00 00 	movb	$0, 168(%rsp)
  4035da:	48 8b 6c 24 78 	movq	120(%rsp), %rbp
  4035df:	48 81 c4 80 00 00 00 	addq	$128, %rsp
  4035e6:	c3 	retq
  4035e7:	48 8d 05 52 7a 05 00 	leaq	358994(%rip), %rax
  4035ee:	48 89 04 24 	movq	%rax, (%rsp)
  4035f2:	48 8d 05 d7 17 07 00 	leaq	464855(%rip), %rax
  4035f9:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4035fe:	e8 2d d4 01 00 	callq	119853 <runtime.gopanic>
  403603:	0f 0b 	ud2
  403605:	48 8d 05 f0 83 06 00 	leaq	426992(%rip), %rax
  40360c:	48 89 04 24 	movq	%rax, (%rsp)
  403610:	48 c7 44 24 08 19 00 00 00 	movq	$25, 8(%rsp)
  403619:	e8 b2 db 01 00 	callq	121778 <runtime.throw>
  40361e:	0f 0b 	ud2
  403620:	48 8d 05 9d 86 06 00 	leaq	427677(%rip), %rax
  403627:	48 89 04 24 	movq	%rax, (%rsp)
  40362b:	48 c7 44 24 08 1b 00 00 00 	movq	$27, 8(%rsp)
  403634:	e8 97 db 01 00 	callq	121751 <runtime.throw>
  403639:	0f 0b 	ud2
  40363b:	48 8b 44 24 60 	movq	96(%rsp), %rax
  403640:	48 89 04 24 	movq	%rax, (%rsp)
  403644:	e8 77 60 00 00 	callq	24695 <runtime.unlock>
  403649:	48 8d 05 f0 79 05 00 	leaq	358896(%rip), %rax
  403650:	48 89 04 24 	movq	%rax, (%rsp)
  403654:	48 8d 05 25 17 07 00 	leaq	464677(%rip), %rax
  40365b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  403660:	e8 cb d3 01 00 	callq	119755 <runtime.gopanic>
  403665:	0f 0b 	ud2
  403667:	0f 57 c0 	xorps	%xmm0, %xmm0
  40366a:	0f 11 04 24 	movups	%xmm0, (%rsp)
  40366e:	48 8d 05 44 7a 06 00 	leaq	424516(%rip), %rax
  403675:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40367a:	48 c7 44 24 18 14 00 00 00 	movq	$20, 24(%rsp)
  403683:	c6 44 24 20 10 	movb	$16, 32(%rsp)
  403688:	48 c7 44 24 28 02 00 00 00 	movq	$2, 40(%rsp)
  403691:	e8 5a f7 01 00 	callq	128858 <runtime.gopark>
  403696:	48 8d 05 3a 6e 06 00 	leaq	421434(%rip), %rax
  40369d:	48 89 04 24 	movq	%rax, (%rsp)
  4036a1:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  4036aa:	e8 21 db 01 00 	callq	121633 <runtime.throw>
  4036af:	0f 0b 	ud2
  4036b1:	e8 ba 0e 04 00 	callq	265914 <runtime.morestack_noctxt>
  4036b6:	e9 c5 f9 ff ff 	jmp	-1595 <runtime.chansend>
  4036bb:	cc 	int3
  4036bc:	cc 	int3
  4036bd:	cc 	int3
  4036be:	cc 	int3
  4036bf:	cc 	int3

runtime.send:
  4036c0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4036c9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4036cd:	0f 86 0b 01 00 00 	jbe	267 <runtime.send+0x11e>
  4036d3:	48 83 ec 30 	subq	$48, %rsp
  4036d7:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  4036dc:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  4036e1:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4036e6:	48 8b 48 20 	movq	32(%rax), %rcx
  4036ea:	48 8d 58 20 	leaq	32(%rax), %rbx
  4036ee:	48 85 c9 	testq	%rcx, %rcx
  4036f1:	0f 85 8f 00 00 00 	jne	143 <runtime.send+0xc6>
  4036f7:	48 8b 08 	movq	(%rax), %rcx
  4036fa:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  4036ff:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  403704:	48 8b 1a 	movq	(%rdx), %rbx
  403707:	ff d3 	callq	*%rbx
  403709:	48 8b 44 24 18 	movq	24(%rsp), %rax
  40370e:	84 00 	testb	%al, (%rax)
  403710:	8b 0d fa 02 0c 00 	movl	787194(%rip), %ecx
  403716:	48 8d b8 88 00 00 00 	leaq	136(%rax), %rdi
  40371d:	85 c9 	testl	%ecx, %ecx
  40371f:	75 4e 	jne	78 <runtime.send+0xaf>
  403721:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  403726:	48 89 88 88 00 00 00 	movq	%rcx, 136(%rax)
  40372d:	48 8b 51 30 	movq	48(%rcx), %rdx
  403731:	48 85 d2 	testq	%rdx, %rdx
  403734:	75 20 	jne	32 <runtime.send+0x96>
  403736:	48 89 04 24 	movq	%rax, (%rsp)
  40373a:	48 8b 44 24 58 	movq	88(%rsp), %rax
  40373f:	48 ff c0 	incq	%rax
  403742:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  403747:	e8 84 f8 01 00 	callq	129156 <runtime.goready>
  40374c:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  403751:	48 83 c4 30 	addq	$48, %rsp
  403755:	c3 	retq
  403756:	e8 95 25 04 00 	callq	271765 <runtime.cputicks>
  40375b:	48 8b 04 24 	movq	(%rsp), %rax
  40375f:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  403764:	48 89 41 30 	movq	%rax, 48(%rcx)
  403768:	48 8b 44 24 18 	movq	24(%rsp), %rax
  40376d:	eb c7 	jmp	-57 <runtime.send+0x76>
  40376f:	48 89 c1 	movq	%rax, %rcx
  403772:	48 8b 44 24 40 	movq	64(%rsp), %rax
  403777:	e8 24 31 04 00 	callq	274724 <runtime.gcWriteBarrier>
  40377c:	48 89 c8 	movq	%rcx, %rax
  40377f:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  403784:	eb a7 	jmp	-89 <runtime.send+0x6d>
  403786:	48 89 5c 24 20 	movq	%rbx, 32(%rsp)
  40378b:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  403790:	48 8b 49 20 	movq	32(%rcx), %rcx
  403794:	48 89 0c 24 	movq	%rcx, (%rsp)
  403798:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40379d:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  4037a2:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  4037a7:	e8 44 00 00 00 	callq	68 <runtime.sendDirect>
  4037ac:	8b 05 5e 02 0c 00 	movl	787038(%rip), %eax
  4037b2:	85 c0 	testl	%eax, %eax
  4037b4:	75 12 	jne	18 <runtime.send+0x108>
  4037b6:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4037bb:	48 c7 40 20 00 00 00 00 	movq	$0, 32(%rax)
  4037c3:	e9 2f ff ff ff 	jmp	-209 <runtime.send+0x37>
  4037c8:	48 8b 7c 24 20 	movq	32(%rsp), %rdi
  4037cd:	31 c0 	xorl	%eax, %eax
  4037cf:	e8 cc 30 04 00 	callq	274636 <runtime.gcWriteBarrier>
  4037d4:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4037d9:	e9 19 ff ff ff 	jmp	-231 <runtime.send+0x37>
  4037de:	e8 8d 0d 04 00 	callq	265613 <runtime.morestack_noctxt>
  4037e3:	e9 d8 fe ff ff 	jmp	-296 <runtime.send>
  4037e8:	cc 	int3
  4037e9:	cc 	int3
  4037ea:	cc 	int3
  4037eb:	cc 	int3
  4037ec:	cc 	int3
  4037ed:	cc 	int3
  4037ee:	cc 	int3
  4037ef:	cc 	int3

runtime.sendDirect:
  4037f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4037f9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4037fd:	76 70 	jbe	112 <runtime.sendDirect+0x7f>
  4037ff:	48 83 ec 30 	subq	$48, %rsp
  403803:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  403808:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  40380d:	48 8b 44 24 40 	movq	64(%rsp), %rax
  403812:	48 8b 40 20 	movq	32(%rax), %rax
  403816:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  40381b:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  403820:	48 8b 11 	movq	(%rcx), %rdx
  403823:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  403828:	48 89 0c 24 	movq	%rcx, (%rsp)
  40382c:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  403831:	48 8b 44 24 48 	movq	72(%rsp), %rax
  403836:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40383b:	e8 b0 94 00 00 	callq	38064 <runtime.typeBitsBulkBarrier>
  403840:	48 8b 44 24 38 	movq	56(%rsp), %rax
  403845:	48 8b 00 	movq	(%rax), %rax
  403848:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40384d:	48 8b 44 24 20 	movq	32(%rsp), %rax
  403852:	48 89 04 24 	movq	%rax, (%rsp)
  403856:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40385b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  403860:	e8 9b 38 04 00 	callq	276635 <runtime.memmove>
  403865:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  40386a:	48 83 c4 30 	addq	$48, %rsp
  40386e:	c3 	retq
  40386f:	e8 fc 0c 04 00 	callq	265468 <runtime.morestack_noctxt>
  403874:	e9 77 ff ff ff 	jmp	-137 <runtime.sendDirect>
  403879:	cc 	int3
  40387a:	cc 	int3
  40387b:	cc 	int3
  40387c:	cc 	int3
  40387d:	cc 	int3
  40387e:	cc 	int3
  40387f:	cc 	int3

runtime.recvDirect:
  403880:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  403889:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40388d:	76 70 	jbe	112 <runtime.recvDirect+0x7f>
  40388f:	48 83 ec 30 	subq	$48, %rsp
  403893:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  403898:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  40389d:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4038a2:	48 8b 40 20 	movq	32(%rax), %rax
  4038a6:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  4038ab:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  4038b0:	48 8b 11 	movq	(%rcx), %rdx
  4038b3:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  4038b8:	48 89 0c 24 	movq	%rcx, (%rsp)
  4038bc:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  4038c1:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  4038c6:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  4038cb:	e8 20 94 00 00 	callq	37920 <runtime.typeBitsBulkBarrier>
  4038d0:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4038d5:	48 8b 00 	movq	(%rax), %rax
  4038d8:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  4038dd:	48 8b 44 24 48 	movq	72(%rsp), %rax
  4038e2:	48 89 04 24 	movq	%rax, (%rsp)
  4038e6:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4038eb:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4038f0:	e8 0b 38 04 00 	callq	276491 <runtime.memmove>
  4038f5:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  4038fa:	48 83 c4 30 	addq	$48, %rsp
  4038fe:	c3 	retq
  4038ff:	e8 6c 0c 04 00 	callq	265324 <runtime.morestack_noctxt>
  403904:	e9 77 ff ff ff 	jmp	-137 <runtime.recvDirect>
  403909:	cc 	int3
  40390a:	cc 	int3
  40390b:	cc 	int3
  40390c:	cc 	int3
  40390d:	cc 	int3
  40390e:	cc 	int3
  40390f:	cc 	int3

runtime.closechan:
  403910:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  403919:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40391d:	0f 86 87 02 00 00 	jbe	647 <runtime.closechan+0x29a>
  403923:	48 83 ec 50 	subq	$80, %rsp
  403927:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  40392c:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  403931:	48 8b 44 24 58 	movq	88(%rsp), %rax
  403936:	48 85 c0 	testq	%rax, %rax
  403939:	0f 84 4d 02 00 00 	je	589 <runtime.closechan+0x27c>
  40393f:	48 8d 48 58 	leaq	88(%rax), %rcx
  403943:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  403948:	48 89 0c 24 	movq	%rcx, (%rsp)
  40394c:	e8 cf 5b 00 00 	callq	23503 <runtime.lock>
  403951:	48 8b 44 24 58 	movq	88(%rsp), %rax
  403956:	8b 48 1c 	movl	28(%rax), %ecx
  403959:	85 c9 	testl	%ecx, %ecx
  40395b:	0f 85 ff 01 00 00 	jne	511 <runtime.closechan+0x250>
  403961:	c7 40 1c 01 00 00 00 	movl	$1, 28(%rax)
  403968:	31 c9 	xorl	%ecx, %ecx
  40396a:	eb 1a 	jmp	26 <runtime.closechan+0x76>
  40396c:	48 8d 91 b8 00 00 00 	leaq	184(%rcx), %rdx
  403973:	84 02 	testb	%al, (%rdx)
  403975:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  40397a:	48 89 91 b8 00 00 00 	movq	%rdx, 184(%rcx)
  403981:	48 8b 44 24 58 	movq	88(%rsp), %rax
  403986:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  40398b:	48 8d 50 38 	leaq	56(%rax), %rdx
  40398f:	48 89 14 24 	movq	%rdx, (%rsp)
  403993:	e8 d8 0a 00 00 	callq	2776 <runtime.(*waitq).dequeue>
  403998:	48 8b 44 24 08 	movq	8(%rsp), %rax
  40399d:	48 85 c0 	testq	%rax, %rax
  4039a0:	0f 84 af 00 00 00 	je	175 <runtime.closechan+0x145>
  4039a6:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4039ab:	48 8b 48 20 	movq	32(%rax), %rcx
  4039af:	48 8d 50 20 	leaq	32(%rax), %rdx
  4039b3:	48 85 c9 	testq	%rcx, %rcx
  4039b6:	75 4f 	jne	79 <runtime.closechan+0xf7>
  4039b8:	48 8b 48 30 	movq	48(%rax), %rcx
  4039bc:	48 85 c9 	testq	%rcx, %rcx
  4039bf:	75 2f 	jne	47 <runtime.closechan+0xe0>
  4039c1:	48 8b 08 	movq	(%rax), %rcx
  4039c4:	84 01 	testb	%al, (%rcx)
  4039c6:	8b 15 44 00 0c 00 	movl	786500(%rip), %edx
  4039cc:	48 8d b9 88 00 00 00 	leaq	136(%rcx), %rdi
  4039d3:	85 d2 	testl	%edx, %edx
  4039d5:	75 0d 	jne	13 <runtime.closechan+0xd4>
  4039d7:	48 c7 81 88 00 00 00 00 00 00 00 	movq	$0, 136(%rcx)
  4039e2:	eb 88 	jmp	-120 <runtime.closechan+0x5c>
  4039e4:	31 c0 	xorl	%eax, %eax
  4039e6:	e8 b5 2e 04 00 	callq	274101 <runtime.gcWriteBarrier>
  4039eb:	e9 7c ff ff ff 	jmp	-132 <runtime.closechan+0x5c>
  4039f0:	e8 fb 22 04 00 	callq	271099 <runtime.cputicks>
  4039f5:	48 8b 04 24 	movq	(%rsp), %rax
  4039f9:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  4039fe:	48 89 41 30 	movq	%rax, 48(%rcx)
  403a02:	48 89 c8 	movq	%rcx, %rax
  403a05:	eb ba 	jmp	-70 <runtime.closechan+0xb1>
  403a07:	48 89 54 24 38 	movq	%rdx, 56(%rsp)
  403a0c:	48 8b 44 24 58 	movq	88(%rsp), %rax
  403a11:	48 8b 50 20 	movq	32(%rax), %rdx
  403a15:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  403a1a:	48 89 14 24 	movq	%rdx, (%rsp)
  403a1e:	e8 ed 82 00 00 	callq	33517 <runtime.typedmemclr>
  403a23:	8b 05 e7 ff 0b 00 	movl	786407(%rip), %eax
  403a29:	85 c0 	testl	%eax, %eax
  403a2b:	75 15 	jne	21 <runtime.closechan+0x132>
  403a2d:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  403a32:	48 c7 41 20 00 00 00 00 	movq	$0, 32(%rcx)
  403a3a:	48 89 c8 	movq	%rcx, %rax
  403a3d:	e9 76 ff ff ff 	jmp	-138 <runtime.closechan+0xa8>
  403a42:	48 8b 7c 24 38 	movq	56(%rsp), %rdi
  403a47:	31 c0 	xorl	%eax, %eax
  403a49:	e8 52 2e 04 00 	callq	274002 <runtime.gcWriteBarrier>
  403a4e:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  403a53:	eb e5 	jmp	-27 <runtime.closechan+0x12a>
  403a55:	48 8b 44 24 20 	movq	32(%rsp), %rax
  403a5a:	eb 18 	jmp	24 <runtime.closechan+0x164>
  403a5c:	48 8d 91 b8 00 00 00 	leaq	184(%rcx), %rdx
  403a63:	84 02 	testb	%al, (%rdx)
  403a65:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  403a6a:	48 89 91 b8 00 00 00 	movq	%rdx, 184(%rcx)
  403a71:	48 89 c8 	movq	%rcx, %rax
  403a74:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  403a79:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  403a7e:	48 8d 51 48 	leaq	72(%rcx), %rdx
  403a82:	48 89 14 24 	movq	%rdx, (%rsp)
  403a86:	e8 e5 09 00 00 	callq	2533 <runtime.(*waitq).dequeue>
  403a8b:	48 8b 44 24 08 	movq	8(%rsp), %rax
  403a90:	48 85 c0 	testq	%rax, %rax
  403a93:	74 79 	je	121 <runtime.closechan+0x1fe>
  403a95:	8b 0d 75 ff 0b 00 	movl	786293(%rip), %ecx
  403a9b:	48 8d 78 20 	leaq	32(%rax), %rdi
  403a9f:	85 c9 	testl	%ecx, %ecx
  403aa1:	75 5c 	jne	92 <runtime.closechan+0x1ef>
  403aa3:	48 c7 40 20 00 00 00 00 	movq	$0, 32(%rax)
  403aab:	48 8b 48 30 	movq	48(%rax), %rcx
  403aaf:	48 85 c9 	testq	%rcx, %rcx
  403ab2:	75 2f 	jne	47 <runtime.closechan+0x1d3>
  403ab4:	48 8b 08 	movq	(%rax), %rcx
  403ab7:	84 01 	testb	%al, (%rcx)
  403ab9:	8b 15 51 ff 0b 00 	movl	786257(%rip), %edx
  403abf:	48 8d b9 88 00 00 00 	leaq	136(%rcx), %rdi
  403ac6:	85 d2 	testl	%edx, %edx
  403ac8:	75 0d 	jne	13 <runtime.closechan+0x1c7>
  403aca:	48 c7 81 88 00 00 00 00 00 00 00 	movq	$0, 136(%rcx)
  403ad5:	eb 85 	jmp	-123 <runtime.closechan+0x14c>
  403ad7:	31 c0 	xorl	%eax, %eax
  403ad9:	e8 c2 2d 04 00 	callq	273858 <runtime.gcWriteBarrier>
  403ade:	e9 79 ff ff ff 	jmp	-135 <runtime.closechan+0x14c>
  403ae3:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  403ae8:	e8 03 22 04 00 	callq	270851 <runtime.cputicks>
  403aed:	48 8b 04 24 	movq	(%rsp), %rax
  403af1:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  403af6:	48 89 41 30 	movq	%rax, 48(%rcx)
  403afa:	48 89 c8 	movq	%rcx, %rax
  403afd:	eb b5 	jmp	-75 <runtime.closechan+0x1a4>
  403aff:	48 89 c1 	movq	%rax, %rcx
  403b02:	31 c0 	xorl	%eax, %eax
  403b04:	e8 97 2d 04 00 	callq	273815 <runtime.gcWriteBarrier>
  403b09:	48 89 c8 	movq	%rcx, %rax
  403b0c:	eb 9d 	jmp	-99 <runtime.closechan+0x19b>
  403b0e:	48 8b 44 24 40 	movq	64(%rsp), %rax
  403b13:	48 89 04 24 	movq	%rax, (%rsp)
  403b17:	e8 a4 5b 00 00 	callq	23460 <runtime.unlock>
  403b1c:	48 8b 44 24 28 	movq	40(%rsp), %rax
  403b21:	eb 2e 	jmp	46 <runtime.closechan+0x241>
  403b23:	48 8b 88 b8 00 00 00 	movq	184(%rax), %rcx
  403b2a:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  403b2f:	48 c7 80 b8 00 00 00 00 00 00 00 	movq	$0, 184(%rax)
  403b3a:	48 89 04 24 	movq	%rax, (%rsp)
  403b3e:	48 c7 44 24 08 03 00 00 00 	movq	$3, 8(%rsp)
  403b47:	e8 84 f4 01 00 	callq	128132 <runtime.goready>
  403b4c:	48 8b 44 24 30 	movq	48(%rsp), %rax
  403b51:	48 85 c0 	testq	%rax, %rax
  403b54:	75 cd 	jne	-51 <runtime.closechan+0x213>
  403b56:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  403b5b:	48 83 c4 50 	addq	$80, %rsp
  403b5f:	c3 	retq
  403b60:	48 8b 44 24 40 	movq	64(%rsp), %rax
  403b65:	48 89 04 24 	movq	%rax, (%rsp)
  403b69:	e8 52 5b 00 00 	callq	23378 <runtime.unlock>
  403b6e:	48 8d 05 cb 74 05 00 	leaq	357579(%rip), %rax
  403b75:	48 89 04 24 	movq	%rax, (%rsp)
  403b79:	48 8d 05 90 12 07 00 	leaq	463504(%rip), %rax
  403b80:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  403b85:	e8 a6 ce 01 00 	callq	118438 <runtime.gopanic>
  403b8a:	0f 0b 	ud2
  403b8c:	48 8d 05 ad 74 05 00 	leaq	357549(%rip), %rax
  403b93:	48 89 04 24 	movq	%rax, (%rsp)
  403b97:	48 8d 05 62 12 07 00 	leaq	463458(%rip), %rax
  403b9e:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  403ba3:	e8 88 ce 01 00 	callq	118408 <runtime.gopanic>
  403ba8:	0f 0b 	ud2
  403baa:	e8 c1 09 04 00 	callq	264641 <runtime.morestack_noctxt>
  403baf:	e9 5c fd ff ff 	jmp	-676 <runtime.closechan>
  403bb4:	cc 	int3
  403bb5:	cc 	int3
  403bb6:	cc 	int3
  403bb7:	cc 	int3
  403bb8:	cc 	int3
  403bb9:	cc 	int3
  403bba:	cc 	int3
  403bbb:	cc 	int3
  403bbc:	cc 	int3
  403bbd:	cc 	int3
  403bbe:	cc 	int3
  403bbf:	cc 	int3

runtime.chanrecv1:
  403bc0:	48 83 ec 28 	subq	$40, %rsp
  403bc4:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  403bc9:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  403bce:	48 8b 44 24 30 	movq	48(%rsp), %rax
  403bd3:	48 89 04 24 	movq	%rax, (%rsp)
  403bd7:	48 8b 44 24 38 	movq	56(%rsp), %rax
  403bdc:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  403be1:	c6 44 24 10 01 	movb	$1, 16(%rsp)
  403be6:	e8 15 00 00 00 	callq	21 <runtime.chanrecv>
  403beb:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  403bf0:	48 83 c4 28 	addq	$40, %rsp
  403bf4:	c3 	retq
  403bf5:	cc 	int3
  403bf6:	cc 	int3
  403bf7:	cc 	int3
  403bf8:	cc 	int3
  403bf9:	cc 	int3
  403bfa:	cc 	int3
  403bfb:	cc 	int3
  403bfc:	cc 	int3
  403bfd:	cc 	int3
  403bfe:	cc 	int3
  403bff:	cc 	int3

runtime.chanrecv:
  403c00:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  403c09:	48 8d 44 24 f0 	leaq	-16(%rsp), %rax
  403c0e:	48 3b 41 10 	cmpq	16(%rcx), %rax
  403c12:	0f 86 7f 06 00 00 	jbe	1663 <runtime.chanrecv+0x697>
  403c18:	48 81 ec 90 00 00 00 	subq	$144, %rsp
  403c1f:	48 89 ac 24 88 00 00 00 	movq	%rbp, 136(%rsp)
  403c27:	48 8d ac 24 88 00 00 00 	leaq	136(%rsp), %rbp
  403c2f:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  403c37:	48 85 c0 	testq	%rax, %rax
  403c3a:	0f 84 c6 05 00 00 	je	1478 <runtime.chanrecv+0x606>
  403c40:	0f b6 8c 24 a8 00 00 00 	movzbl	168(%rsp), %ecx
  403c48:	84 c9 	testb	%cl, %cl
  403c4a:	0f 84 64 05 00 00 	je	1380 <runtime.chanrecv+0x5b4>
  403c50:	48 8b 15 d1 fc 0b 00 	movq	785617(%rip), %rdx
  403c57:	48 85 d2 	testq	%rdx, %rdx
  403c5a:	0f 87 3e 05 00 00 	ja	1342 <runtime.chanrecv+0x59e>
  403c60:	31 d2 	xorl	%edx, %edx
  403c62:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  403c67:	48 8d 48 58 	leaq	88(%rax), %rcx
  403c6b:	48 89 4c 24 70 	movq	%rcx, 112(%rsp)
  403c70:	48 89 0c 24 	movq	%rcx, (%rsp)
  403c74:	e8 a7 58 00 00 	callq	22695 <runtime.lock>
  403c79:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  403c81:	8b 48 1c 	movl	28(%rax), %ecx
  403c84:	85 c9 	testl	%ecx, %ecx
  403c86:	74 0c 	je	12 <runtime.chanrecv+0x94>
  403c88:	48 8b 08 	movq	(%rax), %rcx
  403c8b:	48 85 c9 	testq	%rcx, %rcx
  403c8e:	0f 84 b3 04 00 00 	je	1203 <runtime.chanrecv+0x547>
  403c94:	48 8d 48 48 	leaq	72(%rax), %rcx
  403c98:	48 89 0c 24 	movq	%rcx, (%rsp)
  403c9c:	e8 cf 07 00 00 	callq	1999 <runtime.(*waitq).dequeue>
  403ca1:	48 8b 44 24 08 	movq	8(%rsp), %rax
  403ca6:	48 85 c0 	testq	%rax, %rax
  403ca9:	0f 85 2e 04 00 00 	jne	1070 <runtime.chanrecv+0x4dd>
  403caf:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  403cb7:	48 8b 08 	movq	(%rax), %rcx
  403cba:	48 85 c9 	testq	%rcx, %rcx
  403cbd:	0f 86 b3 00 00 00 	jbe	179 <runtime.chanrecv+0x176>
  403cc3:	48 8b 48 30 	movq	48(%rax), %rcx
  403cc7:	0f b7 50 18 	movzwl	24(%rax), %edx
  403ccb:	48 0f af ca 	imulq	%rdx, %rcx
  403ccf:	48 03 48 10 	addq	16(%rax), %rcx
  403cd3:	48 8b 94 24 a0 00 00 00 	movq	160(%rsp), %rdx
  403cdb:	48 85 d2 	testq	%rdx, %rdx
  403cde:	75 68 	jne	104 <runtime.chanrecv+0x148>
  403ce0:	48 8b 50 20 	movq	32(%rax), %rdx
  403ce4:	48 89 14 24 	movq	%rdx, (%rsp)
  403ce8:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  403ced:	e8 1e 80 00 00 	callq	32798 <runtime.typedmemclr>
  403cf2:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  403cfa:	48 8b 48 30 	movq	48(%rax), %rcx
  403cfe:	48 ff c1 	incq	%rcx
  403d01:	48 89 48 30 	movq	%rcx, 48(%rax)
  403d05:	48 8b 50 08 	movq	8(%rax), %rdx
  403d09:	48 39 d1 	cmpq	%rdx, %rcx
  403d0c:	75 08 	jne	8 <runtime.chanrecv+0x116>
  403d0e:	48 c7 40 30 00 00 00 00 	movq	$0, 48(%rax)
  403d16:	48 83 00 ff 	addq	$-1, (%rax)
  403d1a:	48 8b 44 24 70 	movq	112(%rsp), %rax
  403d1f:	48 89 04 24 	movq	%rax, (%rsp)
  403d23:	e8 98 59 00 00 	callq	22936 <runtime.unlock>
  403d28:	c6 84 24 b0 00 00 00 01 	movb	$1, 176(%rsp)
  403d30:	c6 84 24 b1 00 00 00 01 	movb	$1, 177(%rsp)
  403d38:	48 8b ac 24 88 00 00 00 	movq	136(%rsp), %rbp
  403d40:	48 81 c4 90 00 00 00 	addq	$144, %rsp
  403d47:	c3 	retq
  403d48:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  403d4d:	48 8b 58 20 	movq	32(%rax), %rbx
  403d51:	48 89 1c 24 	movq	%rbx, (%rsp)
  403d55:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  403d5a:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  403d5f:	e8 2c 7d 00 00 	callq	32044 <runtime.typedmemmove>
  403d64:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  403d6c:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  403d71:	e9 6a ff ff ff 	jmp	-150 <runtime.chanrecv+0xe0>
  403d76:	0f b6 8c 24 a8 00 00 00 	movzbl	168(%rsp), %ecx
  403d7e:	84 c9 	testb	%cl, %cl
  403d80:	75 2e 	jne	46 <runtime.chanrecv+0x1b0>
  403d82:	48 8b 44 24 70 	movq	112(%rsp), %rax
  403d87:	48 89 04 24 	movq	%rax, (%rsp)
  403d8b:	e8 30 59 00 00 	callq	22832 <runtime.unlock>
  403d90:	c6 84 24 b0 00 00 00 00 	movb	$0, 176(%rsp)
  403d98:	c6 84 24 b1 00 00 00 00 	movb	$0, 177(%rsp)
  403da0:	48 8b ac 24 88 00 00 00 	movq	136(%rsp), %rbp
  403da8:	48 81 c4 90 00 00 00 	addq	$144, %rsp
  403daf:	c3 	retq
  403db0:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  403db9:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  403dbe:	e8 6d f2 01 00 	callq	127597 <runtime.acquireSudog>
  403dc3:	48 8b 04 24 	movq	(%rsp), %rax
  403dc7:	48 c7 40 30 00 00 00 00 	movq	$0, 48(%rax)
  403dcf:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  403dd4:	48 85 c9 	testq	%rcx, %rcx
  403dd7:	74 08 	je	8 <runtime.chanrecv+0x1e1>
  403dd9:	48 c7 40 30 ff ff ff ff 	movq	$-1, 48(%rax)
  403de1:	8b 15 29 fc 0b 00 	movl	785449(%rip), %edx
  403de7:	48 8d 78 20 	leaq	32(%rax), %rdi
  403deb:	48 8d 58 48 	leaq	72(%rax), %rbx
  403def:	85 d2 	testl	%edx, %edx
  403df1:	0f 85 c4 02 00 00 	jne	708 <runtime.chanrecv+0x4bb>
  403df7:	48 8b 94 24 a0 00 00 00 	movq	160(%rsp), %rdx
  403dff:	48 89 50 20 	movq	%rdx, 32(%rax)
  403e03:	48 c7 40 48 00 00 00 00 	movq	$0, 72(%rax)
  403e0b:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  403e10:	84 02 	testb	%al, (%rdx)
  403e12:	8b 1d f8 fb 0b 00 	movl	785400(%rip), %ebx
  403e18:	48 8d ba 38 01 00 00 	leaq	312(%rdx), %rdi
  403e1f:	85 db 	testl	%ebx, %ebx
  403e21:	0f 85 76 02 00 00 	jne	630 <runtime.chanrecv+0x49d>
  403e27:	48 89 82 38 01 00 00 	movq	%rax, 312(%rdx)
  403e2e:	48 89 10 	movq	%rdx, (%rax)
  403e31:	c6 40 08 00 	movb	$0, 8(%rax)
  403e35:	8b 1d d5 fb 0b 00 	movl	785365(%rip), %ebx
  403e3b:	48 8d 70 58 	leaq	88(%rax), %rsi
  403e3f:	4c 8d 82 88 00 00 00 	leaq	136(%rdx), %r8
  403e46:	4c 8d 48 10 	leaq	16(%rax), %r9
  403e4a:	85 db 	testl	%ebx, %ebx
  403e4c:	0f 85 10 02 00 00 	jne	528 <runtime.chanrecv+0x462>
  403e52:	48 8b 9c 24 98 00 00 00 	movq	152(%rsp), %rbx
  403e5a:	48 89 58 58 	movq	%rbx, 88(%rax)
  403e5e:	48 c7 82 88 00 00 00 00 00 00 00 	movq	$0, 136(%rdx)
  403e69:	48 c7 40 10 00 00 00 00 	movq	$0, 16(%rax)
  403e71:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  403e76:	48 89 7c 24 68 	movq	%rdi, 104(%rsp)
  403e7b:	48 89 74 24 60 	movq	%rsi, 96(%rsp)
  403e80:	4c 89 44 24 58 	movq	%r8, 88(%rsp)
  403e85:	4c 8d 4b 38 	leaq	56(%rbx), %r9
  403e89:	41 84 01 	testb	%al, (%r9)
  403e8c:	4c 8b 4b 40 	movq	64(%rbx), %r9
  403e90:	4c 8d 53 40 	leaq	64(%rbx), %r10
  403e94:	4d 85 c9 	testq	%r9, %r9
  403e97:	0f 84 71 01 00 00 	je	369 <runtime.chanrecv+0x40e>
  403e9d:	44 8b 1d 6c fb 0b 00 	movl	785260(%rip), %r11d
  403ea4:	4c 8d 60 18 	leaq	24(%rax), %r12
  403ea8:	4d 8d 69 10 	leaq	16(%r9), %r13
  403eac:	45 85 db 	testl	%r11d, %r11d
  403eaf:	0f 85 2d 01 00 00 	jne	301 <runtime.chanrecv+0x3e2>
  403eb5:	4c 89 48 18 	movq	%r9, 24(%rax)
  403eb9:	49 89 41 10 	movq	%rax, 16(%r9)
  403ebd:	48 89 43 40 	movq	%rax, 64(%rbx)
  403ec1:	48 8b 44 24 70 	movq	112(%rsp), %rax
  403ec6:	48 89 04 24 	movq	%rax, (%rsp)
  403eca:	48 8d 05 25 67 06 00 	leaq	419621(%rip), %rax
  403ed1:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  403ed6:	48 c7 44 24 10 0c 00 00 00 	movq	$12, 16(%rsp)
  403edf:	c6 44 24 18 17 	movb	$23, 24(%rsp)
  403ee4:	48 c7 44 24 20 03 00 00 00 	movq	$3, 32(%rsp)
  403eed:	e8 6e f0 01 00 	callq	127086 <runtime.goparkunlock>
  403ef2:	48 8b 44 24 48 	movq	72(%rsp), %rax
  403ef7:	48 8b 88 38 01 00 00 	movq	312(%rax), %rcx
  403efe:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  403f03:	48 39 ca 	cmpq	%rcx, %rdx
  403f06:	0f 85 26 03 00 00 	jne	806 <runtime.chanrecv+0x632>
  403f0c:	8b 0d fe fa 0b 00 	movl	785150(%rip), %ecx
  403f12:	85 c9 	testl	%ecx, %ecx
  403f14:	0f 85 b1 00 00 00 	jne	177 <runtime.chanrecv+0x3cb>
  403f1a:	48 c7 80 38 01 00 00 00 00 00 00 	movq	$0, 312(%rax)
  403f25:	48 8b 4a 30 	movq	48(%rdx), %rcx
  403f29:	48 85 c9 	testq	%rcx, %rcx
  403f2c:	7f 74 	jg	116 <runtime.chanrecv+0x3a2>
  403f2e:	48 8b 88 88 00 00 00 	movq	136(%rax), %rcx
  403f35:	48 89 4c 24 50 	movq	%rcx, 80(%rsp)
  403f3a:	8b 1d d0 fa 0b 00 	movl	785104(%rip), %ebx
  403f40:	85 db 	testl	%ebx, %ebx
  403f42:	75 44 	jne	68 <runtime.chanrecv+0x388>
  403f44:	48 c7 80 88 00 00 00 00 00 00 00 	movq	$0, 136(%rax)
  403f4f:	48 c7 42 58 00 00 00 00 	movq	$0, 88(%rdx)
  403f57:	48 89 14 24 	movq	%rdx, (%rsp)
  403f5b:	e8 60 f4 01 00 	callq	128096 <runtime.releaseSudog>
  403f60:	c6 84 24 b0 00 00 00 01 	movb	$1, 176(%rsp)
  403f68:	48 8b 44 24 50 	movq	80(%rsp), %rax
  403f6d:	48 85 c0 	testq	%rax, %rax
  403f70:	0f 95 84 24 b1 00 00 00 	setne	177(%rsp)
  403f78:	48 8b ac 24 88 00 00 00 	movq	136(%rsp), %rbp
  403f80:	48 81 c4 90 00 00 00 	addq	$144, %rsp
  403f87:	c3 	retq
  403f88:	48 8b 7c 24 58 	movq	88(%rsp), %rdi
  403f8d:	31 c0 	xorl	%eax, %eax
  403f8f:	e8 0c 29 04 00 	callq	272652 <runtime.gcWriteBarrier>
  403f94:	48 8b 7c 24 60 	movq	96(%rsp), %rdi
  403f99:	31 c0 	xorl	%eax, %eax
  403f9b:	e8 00 29 04 00 	callq	272640 <runtime.gcWriteBarrier>
  403fa0:	eb b5 	jmp	-75 <runtime.chanrecv+0x357>
  403fa2:	48 8b 44 24 30 	movq	48(%rsp), %rax
  403fa7:	48 29 c1 	subq	%rax, %rcx
  403faa:	48 89 0c 24 	movq	%rcx, (%rsp)
  403fae:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  403fb7:	e8 34 98 01 00 	callq	104500 <runtime.blockevent>
  403fbc:	48 8b 44 24 48 	movq	72(%rsp), %rax
  403fc1:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  403fc6:	e9 63 ff ff ff 	jmp	-157 <runtime.chanrecv+0x32e>
  403fcb:	48 8b 7c 24 68 	movq	104(%rsp), %rdi
  403fd0:	48 89 c1 	movq	%rax, %rcx
  403fd3:	31 c0 	xorl	%eax, %eax
  403fd5:	e8 c6 28 04 00 	callq	272582 <runtime.gcWriteBarrier>
  403fda:	48 89 c8 	movq	%rcx, %rax
  403fdd:	e9 43 ff ff ff 	jmp	-189 <runtime.chanrecv+0x325>
  403fe2:	48 89 fb 	movq	%rdi, %rbx
  403fe5:	4c 89 e7 	movq	%r12, %rdi
  403fe8:	49 89 c3 	movq	%rax, %r11
  403feb:	4c 89 c8 	movq	%r9, %rax
  403fee:	e8 ad 28 04 00 	callq	272557 <runtime.gcWriteBarrier>
  403ff3:	4c 89 ef 	movq	%r13, %rdi
  403ff6:	4c 89 d8 	movq	%r11, %rax
  403ff9:	e8 a2 28 04 00 	callq	272546 <runtime.gcWriteBarrier>
  403ffe:	4c 89 d7 	movq	%r10, %rdi
  404001:	e8 9a 28 04 00 	callq	272538 <runtime.gcWriteBarrier>
  404006:	48 89 df 	movq	%rbx, %rdi
  404009:	e9 b3 fe ff ff 	jmp	-333 <runtime.chanrecv+0x2c1>
  40400e:	44 8b 0d fb f9 0b 00 	movl	784891(%rip), %r9d
  404015:	4c 8d 58 18 	leaq	24(%rax), %r11
  404019:	4c 8d 63 38 	leaq	56(%rbx), %r12
  40401d:	45 85 c9 	testl	%r9d, %r9d
  404020:	75 15 	jne	21 <runtime.chanrecv+0x437>
  404022:	48 c7 40 18 00 00 00 00 	movq	$0, 24(%rax)
  40402a:	48 89 43 38 	movq	%rax, 56(%rbx)
  40402e:	48 89 43 40 	movq	%rax, 64(%rbx)
  404032:	e9 8a fe ff ff 	jmp	-374 <runtime.chanrecv+0x2c1>
  404037:	48 89 fb 	movq	%rdi, %rbx
  40403a:	4c 89 df 	movq	%r11, %rdi
  40403d:	49 89 c1 	movq	%rax, %r9
  404040:	31 c0 	xorl	%eax, %eax
  404042:	e8 59 28 04 00 	callq	272473 <runtime.gcWriteBarrier>
  404047:	4c 89 e7 	movq	%r12, %rdi
  40404a:	4c 89 c8 	movq	%r9, %rax
  40404d:	e8 4e 28 04 00 	callq	272462 <runtime.gcWriteBarrier>
  404052:	4c 89 d7 	movq	%r10, %rdi
  404055:	e8 46 28 04 00 	callq	272454 <runtime.gcWriteBarrier>
  40405a:	48 89 df 	movq	%rbx, %rdi
  40405d:	e9 5f fe ff ff 	jmp	-417 <runtime.chanrecv+0x2c1>
  404062:	48 89 fb 	movq	%rdi, %rbx
  404065:	48 89 f7 	movq	%rsi, %rdi
  404068:	49 89 c2 	movq	%rax, %r10
  40406b:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  404073:	e8 28 28 04 00 	callq	272424 <runtime.gcWriteBarrier>
  404078:	4c 89 c7 	movq	%r8, %rdi
  40407b:	49 89 c3 	movq	%rax, %r11
  40407e:	31 c0 	xorl	%eax, %eax
  404080:	e8 1b 28 04 00 	callq	272411 <runtime.gcWriteBarrier>
  404085:	4c 89 cf 	movq	%r9, %rdi
  404088:	31 c0 	xorl	%eax, %eax
  40408a:	e8 11 28 04 00 	callq	272401 <runtime.gcWriteBarrier>
  40408f:	4c 89 d0 	movq	%r10, %rax
  404092:	48 89 df 	movq	%rbx, %rdi
  404095:	4c 89 db 	movq	%r11, %rbx
  404098:	e9 d4 fd ff ff 	jmp	-556 <runtime.chanrecv+0x271>
  40409d:	e8 fe 27 04 00 	callq	272382 <runtime.gcWriteBarrier>
  4040a2:	48 89 fb 	movq	%rdi, %rbx
  4040a5:	48 89 c7 	movq	%rax, %rdi
  4040a8:	48 89 d0 	movq	%rdx, %rax
  4040ab:	e8 f0 27 04 00 	callq	272368 <runtime.gcWriteBarrier>
  4040b0:	48 89 f8 	movq	%rdi, %rax
  4040b3:	48 89 df 	movq	%rbx, %rdi
  4040b6:	e9 76 fd ff ff 	jmp	-650 <runtime.chanrecv+0x231>
  4040bb:	48 89 c2 	movq	%rax, %rdx
  4040be:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  4040c6:	e8 d5 27 04 00 	callq	272341 <runtime.gcWriteBarrier>
  4040cb:	48 89 df 	movq	%rbx, %rdi
  4040ce:	31 c0 	xorl	%eax, %eax
  4040d0:	e8 cb 27 04 00 	callq	272331 <runtime.gcWriteBarrier>
  4040d5:	48 89 d0 	movq	%rdx, %rax
  4040d8:	e9 2e fd ff ff 	jmp	-722 <runtime.chanrecv+0x20b>
  4040dd:	48 8d 0d ac da 03 00 	leaq	252588(%rip), %rcx
  4040e4:	48 89 4c 24 78 	movq	%rcx, 120(%rsp)
  4040e9:	48 8b 8c 24 98 00 00 00 	movq	152(%rsp), %rcx
  4040f1:	48 89 8c 24 80 00 00 00 	movq	%rcx, 128(%rsp)
  4040f9:	48 89 0c 24 	movq	%rcx, (%rsp)
  4040fd:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  404102:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  40410a:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40410f:	48 8d 44 24 78 	leaq	120(%rsp), %rax
  404114:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  404119:	48 c7 44 24 20 03 00 00 00 	movq	$3, 32(%rsp)
  404122:	e8 89 01 00 00 	callq	393 <runtime.recv>
  404127:	c6 84 24 b0 00 00 00 01 	movb	$1, 176(%rsp)
  40412f:	c6 84 24 b1 00 00 00 01 	movb	$1, 177(%rsp)
  404137:	48 8b ac 24 88 00 00 00 	movq	136(%rsp), %rbp
  40413f:	48 81 c4 90 00 00 00 	addq	$144, %rsp
  404146:	c3 	retq
  404147:	48 8b 44 24 70 	movq	112(%rsp), %rax
  40414c:	48 89 04 24 	movq	%rax, (%rsp)
  404150:	e8 6b 55 00 00 	callq	21867 <runtime.unlock>
  404155:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  40415d:	48 85 c0 	testq	%rax, %rax
  404160:	75 20 	jne	32 <runtime.chanrecv+0x582>
  404162:	c6 84 24 b0 00 00 00 01 	movb	$1, 176(%rsp)
  40416a:	c6 84 24 b1 00 00 00 00 	movb	$0, 177(%rsp)
  404172:	48 8b ac 24 88 00 00 00 	movq	136(%rsp), %rbp
  40417a:	48 81 c4 90 00 00 00 	addq	$144, %rsp
  404181:	c3 	retq
  404182:	48 8b 8c 24 98 00 00 00 	movq	152(%rsp), %rcx
  40418a:	48 8b 49 20 	movq	32(%rcx), %rcx
  40418e:	48 89 0c 24 	movq	%rcx, (%rsp)
  404192:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  404197:	e8 74 7b 00 00 	callq	31604 <runtime.typedmemclr>
  40419c:	eb c4 	jmp	-60 <runtime.chanrecv+0x562>
  40419e:	e8 4d 1b 04 00 	callq	269133 <runtime.cputicks>
  4041a3:	48 8b 14 24 	movq	(%rsp), %rdx
  4041a7:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  4041af:	e9 ae fa ff ff 	jmp	-1362 <runtime.chanrecv+0x62>
  4041b4:	48 8b 50 08 	movq	8(%rax), %rdx
  4041b8:	48 85 d2 	testq	%rdx, %rdx
  4041bb:	75 0c 	jne	12 <runtime.chanrecv+0x5c9>
  4041bd:	48 8b 58 48 	movq	72(%rax), %rbx
  4041c1:	48 85 db 	testq	%rbx, %rbx
  4041c4:	74 15 	je	21 <runtime.chanrecv+0x5db>
  4041c6:	48 85 d2 	testq	%rdx, %rdx
  4041c9:	0f 86 81 fa ff ff 	jbe	-1407 <runtime.chanrecv+0x50>
  4041cf:	48 8b 10 	movq	(%rax), %rdx
  4041d2:	48 85 d2 	testq	%rdx, %rdx
  4041d5:	0f 85 75 fa ff ff 	jne	-1419 <runtime.chanrecv+0x50>
  4041db:	8b 50 1c 	movl	28(%rax), %edx
  4041de:	85 d2 	testl	%edx, %edx
  4041e0:	0f 85 6a fa ff ff 	jne	-1430 <runtime.chanrecv+0x50>
  4041e6:	c6 84 24 b0 00 00 00 00 	movb	$0, 176(%rsp)
  4041ee:	c6 84 24 b1 00 00 00 00 	movb	$0, 177(%rsp)
  4041f6:	48 8b ac 24 88 00 00 00 	movq	136(%rsp), %rbp
  4041fe:	48 81 c4 90 00 00 00 	addq	$144, %rsp
  404205:	c3 	retq
  404206:	0f b6 84 24 a8 00 00 00 	movzbl	168(%rsp), %eax
  40420e:	84 c0 	testb	%al, %al
  404210:	75 3b 	jne	59 <runtime.chanrecv+0x64d>
  404212:	c6 84 24 b0 00 00 00 00 	movb	$0, 176(%rsp)
  40421a:	c6 84 24 b1 00 00 00 00 	movb	$0, 177(%rsp)
  404222:	48 8b ac 24 88 00 00 00 	movq	136(%rsp), %rbp
  40422a:	48 81 c4 90 00 00 00 	addq	$144, %rsp
  404231:	c3 	retq
  404232:	48 8d 05 8b 7a 06 00 	leaq	424587(%rip), %rax
  404239:	48 89 04 24 	movq	%rax, (%rsp)
  40423d:	48 c7 44 24 08 1b 00 00 00 	movq	$27, 8(%rsp)
  404246:	e8 85 cf 01 00 	callq	118661 <runtime.throw>
  40424b:	0f 0b 	ud2
  40424d:	0f 57 c0 	xorps	%xmm0, %xmm0
  404250:	0f 11 04 24 	movups	%xmm0, (%rsp)
  404254:	48 8d 05 c3 73 06 00 	leaq	422851(%rip), %rax
  40425b:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  404260:	48 c7 44 24 18 17 00 00 00 	movq	$23, 24(%rsp)
  404269:	c6 44 24 20 10 	movb	$16, 32(%rsp)
  40426e:	48 c7 44 24 28 02 00 00 00 	movq	$2, 40(%rsp)
  404277:	e8 74 eb 01 00 	callq	125812 <runtime.gopark>
  40427c:	48 8d 05 54 62 06 00 	leaq	418388(%rip), %rax
  404283:	48 89 04 24 	movq	%rax, (%rsp)
  404287:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  404290:	e8 3b cf 01 00 	callq	118587 <runtime.throw>
  404295:	0f 0b 	ud2
  404297:	e8 d4 02 04 00 	callq	262868 <runtime.morestack_noctxt>
  40429c:	e9 5f f9 ff ff 	jmp	-1697 <runtime.chanrecv>
  4042a1:	cc 	int3
  4042a2:	cc 	int3
  4042a3:	cc 	int3
  4042a4:	cc 	int3
  4042a5:	cc 	int3
  4042a6:	cc 	int3
  4042a7:	cc 	int3
  4042a8:	cc 	int3
  4042a9:	cc 	int3
  4042aa:	cc 	int3
  4042ab:	cc 	int3
  4042ac:	cc 	int3
  4042ad:	cc 	int3
  4042ae:	cc 	int3
  4042af:	cc 	int3

runtime.recv:
  4042b0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4042b9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4042bd:	0f 86 9b 01 00 00 	jbe	411 <runtime.recv+0x1ae>
  4042c3:	48 83 ec 30 	subq	$48, %rsp
  4042c7:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  4042cc:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  4042d1:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  4042d6:	48 8b 59 08 	movq	8(%rcx), %rbx
  4042da:	48 85 db 	testq	%rbx, %rbx
  4042dd:	0f 85 eb 00 00 00 	jne	235 <runtime.recv+0x11e>
  4042e3:	48 8b 5c 24 48 	movq	72(%rsp), %rbx
  4042e8:	48 85 db 	testq	%rbx, %rbx
  4042eb:	0f 85 bc 00 00 00 	jne	188 <runtime.recv+0xfd>
  4042f1:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  4042f6:	84 01 	testb	%al, (%rcx)
  4042f8:	8b 1d 12 f7 0b 00 	movl	784146(%rip), %ebx
  4042fe:	48 8d 79 20 	leaq	32(%rcx), %rdi
  404302:	85 db 	testl	%ebx, %ebx
  404304:	0f 85 97 00 00 00 	jne	151 <runtime.recv+0xf1>
  40430a:	48 c7 41 20 00 00 00 00 	movq	$0, 32(%rcx)
  404312:	48 8b 01 	movq	(%rcx), %rax
  404315:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  40431a:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  40431f:	48 8b 1a 	movq	(%rdx), %rbx
  404322:	ff d3 	callq	*%rbx
  404324:	48 8b 44 24 20 	movq	32(%rsp), %rax
  404329:	84 00 	testb	%al, (%rax)
  40432b:	8b 0d df f6 0b 00 	movl	784095(%rip), %ecx
  404331:	48 8d b8 88 00 00 00 	leaq	136(%rax), %rdi
  404338:	85 c9 	testl	%ecx, %ecx
  40433a:	75 4e 	jne	78 <runtime.recv+0xda>
  40433c:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  404341:	48 89 88 88 00 00 00 	movq	%rcx, 136(%rax)
  404348:	48 8b 51 30 	movq	48(%rcx), %rdx
  40434c:	48 85 d2 	testq	%rdx, %rdx
  40434f:	75 20 	jne	32 <runtime.recv+0xc1>
  404351:	48 89 04 24 	movq	%rax, (%rsp)
  404355:	48 8b 44 24 58 	movq	88(%rsp), %rax
  40435a:	48 ff c0 	incq	%rax
  40435d:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  404362:	e8 69 ec 01 00 	callq	126057 <runtime.goready>
  404367:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  40436c:	48 83 c4 30 	addq	$48, %rsp
  404370:	c3 	retq
  404371:	e8 7a 19 04 00 	callq	268666 <runtime.cputicks>
  404376:	48 8b 04 24 	movq	(%rsp), %rax
  40437a:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  40437f:	48 89 41 30 	movq	%rax, 48(%rcx)
  404383:	48 8b 44 24 20 	movq	32(%rsp), %rax
  404388:	eb c7 	jmp	-57 <runtime.recv+0xa1>
  40438a:	48 89 c1 	movq	%rax, %rcx
  40438d:	48 8b 44 24 40 	movq	64(%rsp), %rax
  404392:	e8 09 25 04 00 	callq	271625 <runtime.gcWriteBarrier>
  404397:	48 89 c8 	movq	%rcx, %rax
  40439a:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  40439f:	eb a7 	jmp	-89 <runtime.recv+0x98>
  4043a1:	31 c0 	xorl	%eax, %eax
  4043a3:	e8 f8 24 04 00 	callq	271608 <runtime.gcWriteBarrier>
  4043a8:	e9 65 ff ff ff 	jmp	-155 <runtime.recv+0x62>
  4043ad:	48 8b 41 20 	movq	32(%rcx), %rax
  4043b1:	48 89 04 24 	movq	%rax, (%rsp)
  4043b5:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4043ba:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4043bf:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  4043c4:	e8 b7 f4 ff ff 	callq	-2889 <runtime.recvDirect>
  4043c9:	e9 23 ff ff ff 	jmp	-221 <runtime.recv+0x41>
  4043ce:	48 8b 41 30 	movq	48(%rcx), %rax
  4043d2:	0f b7 51 18 	movzwl	24(%rcx), %edx
  4043d6:	48 0f af c2 	imulq	%rdx, %rax
  4043da:	48 03 41 10 	addq	16(%rcx), %rax
  4043de:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  4043e3:	48 85 d2 	testq	%rdx, %rdx
  4043e6:	75 4e 	jne	78 <runtime.recv+0x186>
  4043e8:	48 8b 51 20 	movq	32(%rcx), %rdx
  4043ec:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  4043f1:	48 8b 73 20 	movq	32(%rbx), %rsi
  4043f5:	48 89 74 24 10 	movq	%rsi, 16(%rsp)
  4043fa:	48 89 14 24 	movq	%rdx, (%rsp)
  4043fe:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  404403:	e8 88 76 00 00 	callq	30344 <runtime.typedmemmove>
  404408:	48 8b 44 24 38 	movq	56(%rsp), %rax
  40440d:	48 8b 48 30 	movq	48(%rax), %rcx
  404411:	48 ff c1 	incq	%rcx
  404414:	48 89 48 30 	movq	%rcx, 48(%rax)
  404418:	48 8b 50 08 	movq	8(%rax), %rdx
  40441c:	48 39 d1 	cmpq	%rdx, %rcx
  40441f:	75 08 	jne	8 <runtime.recv+0x179>
  404421:	48 c7 40 30 00 00 00 00 	movq	$0, 48(%rax)
  404429:	48 8b 48 30 	movq	48(%rax), %rcx
  40442d:	48 89 48 28 	movq	%rcx, 40(%rax)
  404431:	e9 bb fe ff ff 	jmp	-325 <runtime.recv+0x41>
  404436:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  40443b:	48 8b 59 20 	movq	32(%rcx), %rbx
  40443f:	48 89 1c 24 	movq	%rbx, (%rsp)
  404443:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  404448:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40444d:	e8 3e 76 00 00 	callq	30270 <runtime.typedmemmove>
  404452:	48 8b 44 24 18 	movq	24(%rsp), %rax
  404457:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  40445c:	eb 8a 	jmp	-118 <runtime.recv+0x138>
  40445e:	e8 0d 01 04 00 	callq	262413 <runtime.morestack_noctxt>
  404463:	e9 48 fe ff ff 	jmp	-440 <runtime.recv>
  404468:	cc 	int3
  404469:	cc 	int3
  40446a:	cc 	int3
  40446b:	cc 	int3
  40446c:	cc 	int3
  40446d:	cc 	int3
  40446e:	cc 	int3
  40446f:	cc 	int3

runtime.(*waitq).dequeue:
  404470:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  404479:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40447d:	0f 86 d6 00 00 00 	jbe	214 <runtime.(*waitq).dequeue+0xe9>
  404483:	48 83 ec 08 	subq	$8, %rsp
  404487:	48 89 2c 24 	movq	%rbp, (%rsp)
  40448b:	48 8d 2c 24 	leaq	(%rsp), %rbp
  40448f:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  404494:	48 8b 11 	movq	(%rcx), %rdx
  404497:	48 85 d2 	testq	%rdx, %rdx
  40449a:	0f 84 a7 00 00 00 	je	167 <runtime.(*waitq).dequeue+0xd7>
  4044a0:	48 8b 5a 10 	movq	16(%rdx), %rbx
  4044a4:	48 8d 72 10 	leaq	16(%rdx), %rsi
  4044a8:	48 85 db 	testq	%rbx, %rbx
  4044ab:	74 70 	je	112 <runtime.(*waitq).dequeue+0xad>
  4044ad:	44 8b 05 5c f5 0b 00 	movl	783708(%rip), %r8d
  4044b4:	48 8d 7b 18 	leaq	24(%rbx), %rdi
  4044b8:	45 85 c0 	testl	%r8d, %r8d
  4044bb:	75 42 	jne	66 <runtime.(*waitq).dequeue+0x8f>
  4044bd:	48 c7 43 18 00 00 00 00 	movq	$0, 24(%rbx)
  4044c5:	48 89 19 	movq	%rbx, (%rcx)
  4044c8:	48 c7 42 10 00 00 00 00 	movq	$0, 16(%rdx)
  4044d0:	0f b6 5a 08 	movzbl	8(%rdx), %ebx
  4044d4:	84 db 	testb	%bl, %bl
  4044d6:	74 19 	je	25 <runtime.(*waitq).dequeue+0x81>
  4044d8:	48 8b 1a 	movq	(%rdx), %rbx
  4044db:	31 c0 	xorl	%eax, %eax
  4044dd:	be 01 00 00 00 	movl	$1, %esi
  4044e2:	f0 	lock
  4044e3:	0f b1 b3 68 01 00 00 	cmpxchgl	%esi, 360(%rbx)
  4044ea:	0f 94 c3 	sete	%bl
  4044ed:	84 db 	testb	%bl, %bl
  4044ef:	74 a3 	je	-93 <runtime.(*waitq).dequeue+0x24>
  4044f1:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  4044f6:	48 8b 2c 24 	movq	(%rsp), %rbp
  4044fa:	48 83 c4 08 	addq	$8, %rsp
  4044fe:	c3 	retq
  4044ff:	31 c0 	xorl	%eax, %eax
  404501:	e8 9a 23 04 00 	callq	271258 <runtime.gcWriteBarrier>
  404506:	48 89 cf 	movq	%rcx, %rdi
  404509:	48 89 d8 	movq	%rbx, %rax
  40450c:	e8 8f 23 04 00 	callq	271247 <runtime.gcWriteBarrier>
  404511:	48 89 f7 	movq	%rsi, %rdi
  404514:	31 c0 	xorl	%eax, %eax
  404516:	e8 85 23 04 00 	callq	271237 <runtime.gcWriteBarrier>
  40451b:	eb b3 	jmp	-77 <runtime.(*waitq).dequeue+0x60>
  40451d:	8b 1d ed f4 0b 00 	movl	783597(%rip), %ebx
  404523:	48 8d 71 08 	leaq	8(%rcx), %rsi
  404527:	85 db 	testl	%ebx, %ebx
  404529:	75 08 	jne	8 <runtime.(*waitq).dequeue+0xc3>
  40452b:	0f 57 c0 	xorps	%xmm0, %xmm0
  40452e:	0f 11 01 	movups	%xmm0, (%rcx)
  404531:	eb 9d 	jmp	-99 <runtime.(*waitq).dequeue+0x60>
  404533:	48 89 cf 	movq	%rcx, %rdi
  404536:	31 c0 	xorl	%eax, %eax
  404538:	e8 63 23 04 00 	callq	271203 <runtime.gcWriteBarrier>
  40453d:	48 89 f7 	movq	%rsi, %rdi
  404540:	e8 5b 23 04 00 	callq	271195 <runtime.gcWriteBarrier>
  404545:	eb 89 	jmp	-119 <runtime.(*waitq).dequeue+0x60>
  404547:	48 c7 44 24 18 00 00 00 00 	movq	$0, 24(%rsp)
  404550:	48 8b 2c 24 	movq	(%rsp), %rbp
  404554:	48 83 c4 08 	addq	$8, %rsp
  404558:	c3 	retq
  404559:	e8 12 00 04 00 	callq	262162 <runtime.morestack_noctxt>
  40455e:	e9 0d ff ff ff 	jmp	-243 <runtime.(*waitq).dequeue>
  404563:	cc 	int3
  404564:	cc 	int3
  404565:	cc 	int3
  404566:	cc 	int3
  404567:	cc 	int3
  404568:	cc 	int3
  404569:	cc 	int3
  40456a:	cc 	int3
  40456b:	cc 	int3
  40456c:	cc 	int3
  40456d:	cc 	int3
  40456e:	cc 	int3
  40456f:	cc 	int3

runtime.init.0:
  404570:	8b 05 82 f3 0b 00 	movl	783234(%rip), %eax
  404576:	25 f0 3f ff 0f 	andl	$268386288, %eax
  40457b:	0f b6 0d 28 f3 0b 00 	movzbl	783144(%rip), %ecx
  404582:	84 c9 	testb	%cl, %cl
  404584:	74 25 	je	37 <runtime.init.0+0x3b>
  404586:	3d a0 06 02 00 	cmpl	$132768, %eax
  40458b:	75 1e 	jne	30 <runtime.init.0+0x3b>
  40458d:	b8 01 00 00 00 	movl	$1, %eax
  404592:	0f b6 0d 19 f3 0b 00 	movzbl	783129(%rip), %ecx
  404599:	84 c9 	testb	%cl, %cl
  40459b:	74 0a 	je	10 <runtime.init.0+0x37>
  40459d:	83 f0 01 	xorl	$1, %eax
  4045a0:	88 05 17 f3 0b 00 	movb	%al, 783127(%rip)
  4045a6:	c3 	retq
  4045a7:	31 c0 	xorl	%eax, %eax
  4045a9:	eb f5 	jmp	-11 <runtime.init.0+0x30>
  4045ab:	3d d0 06 02 00 	cmpl	$132816, %eax
  4045b0:	75 07 	jne	7 <runtime.init.0+0x49>
  4045b2:	b8 01 00 00 00 	movl	$1, %eax
  4045b7:	eb d9 	jmp	-39 <runtime.init.0+0x22>
  4045b9:	3d a0 06 03 00 	cmpl	$198304, %eax
  4045be:	75 07 	jne	7 <runtime.init.0+0x57>
  4045c0:	b8 01 00 00 00 	movl	$1, %eax
  4045c5:	eb cb 	jmp	-53 <runtime.init.0+0x22>
  4045c7:	3d e0 06 03 00 	cmpl	$198368, %eax
  4045cc:	0f 94 c0 	sete	%al
  4045cf:	eb c1 	jmp	-63 <runtime.init.0+0x22>
  4045d1:	cc 	int3
  4045d2:	cc 	int3
  4045d3:	cc 	int3
  4045d4:	cc 	int3
  4045d5:	cc 	int3
  4045d6:	cc 	int3
  4045d7:	cc 	int3
  4045d8:	cc 	int3
  4045d9:	cc 	int3
  4045da:	cc 	int3
  4045db:	cc 	int3
  4045dc:	cc 	int3
  4045dd:	cc 	int3
  4045de:	cc 	int3
  4045df:	cc 	int3

runtime.(*cpuProfile).add:
  4045e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4045e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4045ed:	0f 86 05 01 00 00 	jbe	261 <runtime.(*cpuProfile).add+0x118>
  4045f3:	48 83 ec 58 	subq	$88, %rsp
  4045f7:	48 89 6c 24 50 	movq	%rbp, 80(%rsp)
  4045fc:	48 8d 6c 24 50 	leaq	80(%rsp), %rbp
  404601:	eb 05 	jmp	5 <runtime.(*cpuProfile).add+0x28>
  404603:	e8 48 39 04 00 	callq	276808 <runtime.osyield>
  404608:	31 c0 	xorl	%eax, %eax
  40460a:	48 8d 0d 9f f3 0b 00 	leaq	783263(%rip), %rcx
  404611:	ba 01 00 00 00 	movl	$1, %edx
  404616:	f0 	lock
  404617:	0f b1 11 	cmpxchgl	%edx, (%rcx)
  40461a:	0f 94 c3 	sete	%bl
  40461d:	84 db 	testb	%bl, %bl
  40461f:	74 e2 	je	-30 <runtime.(*cpuProfile).add+0x23>
  404621:	8b 05 8d f3 0b 00 	movl	783245(%rip), %eax
  404627:	85 c0 	testl	%eax, %eax
  404629:	0f 84 9f 00 00 00 	je	159 <runtime.(*cpuProfile).add+0xee>
  40462f:	48 8b 44 24 60 	movq	96(%rsp), %rax
  404634:	84 00 	testb	%al, (%rax)
  404636:	48 8b 90 58 1f 00 00 	movq	8024(%rax), %rdx
  40463d:	48 85 d2 	testq	%rdx, %rdx
  404640:	0f 8e 9d 00 00 00 	jle	157 <runtime.(*cpuProfile).add+0x103>
  404646:	48 89 04 24 	movq	%rax, (%rsp)
  40464a:	e8 d1 01 00 00 	callq	465 <runtime.(*cpuProfile).addExtra>
  40464f:	48 c7 44 24 48 00 00 00 00 	movq	$0, 72(%rsp)
  404658:	48 c7 44 24 48 01 00 00 00 	movq	$1, 72(%rsp)
  404661:	e8 ca 33 04 00 	callq	275402 <runtime.nanotime>
  404666:	48 8b 44 24 68 	movq	104(%rsp), %rax
  40466b:	84 00 	testb	%al, (%rax)
  40466d:	48 05 58 01 00 00 	addq	$344, %rax
  404673:	48 8b 0c 24 	movq	(%rsp), %rcx
  404677:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40467c:	48 8b 05 ad 3c 0a 00 	movq	670893(%rip), %rax
  404683:	48 89 04 24 	movq	%rax, (%rsp)
  404687:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  40468c:	48 8d 44 24 48 	leaq	72(%rsp), %rax
  404691:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  404696:	48 c7 44 24 20 01 00 00 00 	movq	$1, 32(%rsp)
  40469f:	48 c7 44 24 28 01 00 00 00 	movq	$1, 40(%rsp)
  4046a8:	48 8b 44 24 70 	movq	112(%rsp), %rax
  4046ad:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  4046b2:	48 8b 44 24 78 	movq	120(%rsp), %rax
  4046b7:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  4046bc:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  4046c4:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  4046c9:	e8 32 a1 02 00 	callq	172338 <runtime.(*profBuf).write>
  4046ce:	31 c0 	xorl	%eax, %eax
  4046d0:	48 8d 0d d9 f2 0b 00 	leaq	783065(%rip), %rcx
  4046d7:	87 01 	xchgl	%eax, (%rcx)
  4046d9:	48 8b 6c 24 50 	movq	80(%rsp), %rbp
  4046de:	48 83 c4 58 	addq	$88, %rsp
  4046e2:	c3 	retq
  4046e3:	48 8b 90 60 1f 00 00 	movq	8032(%rax), %rdx
  4046ea:	48 85 d2 	testq	%rdx, %rdx
  4046ed:	0f 87 53 ff ff ff 	ja	-173 <runtime.(*cpuProfile).add+0x66>
  4046f3:	e9 57 ff ff ff 	jmp	-169 <runtime.(*cpuProfile).add+0x6f>
  4046f8:	e8 73 fe 03 00 	callq	261747 <runtime.morestack_noctxt>
  4046fd:	e9 de fe ff ff 	jmp	-290 <runtime.(*cpuProfile).add>
  404702:	cc 	int3
  404703:	cc 	int3
  404704:	cc 	int3
  404705:	cc 	int3
  404706:	cc 	int3
  404707:	cc 	int3
  404708:	cc 	int3
  404709:	cc 	int3
  40470a:	cc 	int3
  40470b:	cc 	int3
  40470c:	cc 	int3
  40470d:	cc 	int3
  40470e:	cc 	int3
  40470f:	cc 	int3

runtime.(*cpuProfile).addNonGo:
  404710:	48 83 ec 20 	subq	$32, %rsp
  404714:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  404719:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  40471e:	eb 05 	jmp	5 <runtime.(*cpuProfile).addNonGo+0x15>
  404720:	e8 2b 38 04 00 	callq	276523 <runtime.osyield>
  404725:	31 c0 	xorl	%eax, %eax
  404727:	48 8d 0d 82 f2 0b 00 	leaq	782978(%rip), %rcx
  40472e:	ba 01 00 00 00 	movl	$1, %edx
  404733:	f0 	lock
  404734:	0f b1 11 	cmpxchgl	%edx, (%rcx)
  404737:	0f 94 c3 	sete	%bl
  40473a:	84 db 	testb	%bl, %bl
  40473c:	74 e2 	je	-30 <runtime.(*cpuProfile).addNonGo+0x10>
  40473e:	48 8b 05 33 5b 0a 00 	movq	678707(%rip), %rax
  404745:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  40474a:	48 8d 5c 02 01 	leaq	1(%rdx,%rax), %rbx
  40474f:	48 81 fb e8 03 00 00 	cmpq	$1000, %rbx
  404756:	0f 8d a3 00 00 00 	jge	163 <runtime.(*cpuProfile).addNonGo+0xef>
  40475c:	48 3d e8 03 00 00 	cmpq	$1000, %rax
  404762:	0f 83 a7 00 00 00 	jae	167 <runtime.(*cpuProfile).addNonGo+0xff>
  404768:	48 8d 5a 01 	leaq	1(%rdx), %rbx
  40476c:	48 8d 35 ad 3b 0a 00 	leaq	670637(%rip), %rsi
  404773:	48 89 5c c6 18 	movq	%rbx, 24(%rsi,%rax,8)
  404778:	48 8d 1d b9 3b 0a 00 	leaq	670649(%rip), %rbx
  40477f:	84 03 	testb	%al, (%rbx)
  404781:	48 8d 70 01 	leaq	1(%rax), %rsi
  404785:	48 81 fe e8 03 00 00 	cmpq	$1000, %rsi
  40478c:	77 7a 	ja	122 <runtime.(*cpuProfile).addNonGo+0xf8>
  40478e:	48 05 19 fc ff ff 	addq	$-999, %rax
  404794:	48 f7 d8 	negq	%rax
  404797:	48 89 c7 	movq	%rax, %rdi
  40479a:	48 f7 d8 	negq	%rax
  40479d:	48 c1 f8 3f 	sarq	$63, %rax
  4047a1:	48 c1 e6 03 	shlq	$3, %rsi
  4047a5:	48 21 c6 	andq	%rax, %rsi
  4047a8:	48 8d 04 33 	leaq	(%rbx,%rsi), %rax
  4047ac:	48 39 d7 	cmpq	%rdx, %rdi
  4047af:	7e 49 	jle	73 <runtime.(*cpuProfile).addNonGo+0xea>
  4047b1:	48 89 04 24 	movq	%rax, (%rsp)
  4047b5:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4047ba:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4047bf:	48 c1 e2 03 	shlq	$3, %rdx
  4047c3:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  4047c8:	e8 33 29 04 00 	callq	272691 <runtime.memmove>
  4047cd:	48 8b 05 a4 5a 0a 00 	movq	678564(%rip), %rax
  4047d4:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  4047d9:	48 8d 44 08 01 	leaq	1(%rax,%rcx), %rax
  4047de:	48 89 05 93 5a 0a 00 	movq	%rax, 678547(%rip)
  4047e5:	31 c0 	xorl	%eax, %eax
  4047e7:	48 8d 0d c2 f1 0b 00 	leaq	782786(%rip), %rcx
  4047ee:	87 01 	xchgl	%eax, (%rcx)
  4047f0:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  4047f5:	48 83 c4 20 	addq	$32, %rsp
  4047f9:	c3 	retq
  4047fa:	48 89 fa 	movq	%rdi, %rdx
  4047fd:	eb b2 	jmp	-78 <runtime.(*cpuProfile).addNonGo+0xa1>
  4047ff:	48 ff 05 7a 5a 0a 00 	incq	678522(%rip)
  404806:	eb dd 	jmp	-35 <runtime.(*cpuProfile).addNonGo+0xd5>
  404808:	e8 a3 b2 01 00 	callq	111267 <runtime.panicslice>
  40480d:	0f 0b 	ud2
  40480f:	e8 2c b2 01 00 	callq	111148 <runtime.panicindex>
  404814:	0f 0b 	ud2
  404816:	cc 	int3
  404817:	cc 	int3
  404818:	cc 	int3
  404819:	cc 	int3
  40481a:	cc 	int3
  40481b:	cc 	int3
  40481c:	cc 	int3
  40481d:	cc 	int3
  40481e:	cc 	int3
  40481f:	cc 	int3

runtime.(*cpuProfile).addExtra:
  404820:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  404829:	48 8d 44 24 e8 	leaq	-24(%rsp), %rax
  40482e:	48 3b 41 10 	cmpq	16(%rcx), %rax
  404832:	0f 86 26 02 00 00 	jbe	550 <runtime.(*cpuProfile).addExtra+0x23e>
  404838:	48 81 ec 98 00 00 00 	subq	$152, %rsp
  40483f:	48 89 ac 24 90 00 00 00 	movq	%rbp, 144(%rsp)
  404847:	48 8d ac 24 90 00 00 00 	leaq	144(%rsp), %rbp
  40484f:	48 c7 44 24 58 00 00 00 00 	movq	$0, 88(%rsp)
  404858:	48 c7 44 24 58 01 00 00 00 	movq	$1, 88(%rsp)
  404861:	31 c0 	xorl	%eax, %eax
  404863:	e9 80 00 00 00 	jmp	128 <runtime.(*cpuProfile).addExtra+0xc8>
  404868:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  40486d:	48 8b 71 10 	movq	16(%rcx), %rsi
  404871:	48 89 34 24 	movq	%rsi, (%rsp)
  404875:	0f 57 c0 	xorps	%xmm0, %xmm0
  404878:	0f 11 44 24 08 	movups	%xmm0, 8(%rsp)
  40487d:	48 8d 74 24 58 	leaq	88(%rsp), %rsi
  404882:	48 89 74 24 18 	movq	%rsi, 24(%rsp)
  404887:	48 c7 44 24 20 01 00 00 00 	movq	$1, 32(%rsp)
  404890:	48 c7 44 24 28 01 00 00 00 	movq	$1, 40(%rsp)
  404899:	48 8d b8 19 fc ff ff 	leaq	-999(%rax), %rdi
  4048a0:	48 f7 df 	negq	%rdi
  4048a3:	49 89 f8 	movq	%rdi, %r8
  4048a6:	48 f7 df 	negq	%rdi
  4048a9:	48 c1 ff 3f 	sarq	$63, %rdi
  4048ad:	49 89 d1 	movq	%rdx, %r9
  4048b0:	48 c1 e2 03 	shlq	$3, %rdx
  4048b4:	48 21 fa 	andq	%rdi, %rdx
  4048b7:	48 8d 54 11 18 	leaq	24(%rcx,%rdx), %rdx
  4048bc:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  4048c1:	4c 29 cb 	subq	%r9, %rbx
  4048c4:	48 89 5c 24 38 	movq	%rbx, 56(%rsp)
  4048c9:	4c 89 44 24 40 	movq	%r8, 64(%rsp)
  4048ce:	e8 2d 9f 02 00 	callq	171821 <runtime.(*profBuf).write>
  4048d3:	48 8b 44 24 48 	movq	72(%rsp), %rax
  4048d8:	48 8b 8c 24 a0 00 00 00 	movq	160(%rsp), %rcx
  4048e0:	48 8b 54 c1 18 	movq	24(%rcx,%rax,8), %rdx
  4048e5:	48 01 d0 	addq	%rdx, %rax
  4048e8:	48 8b 8c 24 a0 00 00 00 	movq	160(%rsp), %rcx
  4048f0:	84 01 	testb	%al, (%rcx)
  4048f2:	48 8b 91 58 1f 00 00 	movq	8024(%rcx), %rdx
  4048f9:	48 39 d0 	cmpq	%rdx, %rax
  4048fc:	7d 39 	jge	57 <runtime.(*cpuProfile).addExtra+0x117>
  4048fe:	48 3d e8 03 00 00 	cmpq	$1000, %rax
  404904:	0f 83 46 01 00 00 	jae	326 <runtime.(*cpuProfile).addExtra+0x230>
  40490a:	48 8d 51 18 	leaq	24(%rcx), %rdx
  40490e:	84 02 	testb	%al, (%rdx)
  404910:	48 8d 50 01 	leaq	1(%rax), %rdx
  404914:	48 8b 5c c1 18 	movq	24(%rcx,%rax,8), %rbx
  404919:	48 01 c3 	addq	%rax, %rbx
  40491c:	48 39 da 	cmpq	%rbx, %rdx
  40491f:	0f 87 32 01 00 00 	ja	306 <runtime.(*cpuProfile).addExtra+0x237>
  404925:	48 81 fb e8 03 00 00 	cmpq	$1000, %rbx
  40492c:	0f 86 36 ff ff ff 	jbe	-202 <runtime.(*cpuProfile).addExtra+0x48>
  404932:	e9 20 01 00 00 	jmp	288 <runtime.(*cpuProfile).addExtra+0x237>
  404937:	48 c7 81 58 1f 00 00 00 00 00 00 	movq	$0, 8024(%rcx)
  404942:	48 8b 81 60 1f 00 00 	movq	8032(%rcx), %rax
  404949:	48 85 c0 	testq	%rax, %rax
  40494c:	77 10 	ja	16 <runtime.(*cpuProfile).addExtra+0x13e>
  40494e:	48 8b ac 24 90 00 00 00 	movq	144(%rsp), %rbp
  404956:	48 81 c4 98 00 00 00 	addq	$152, %rsp
  40495d:	c3 	retq
  40495e:	48 c7 44 24 50 00 00 00 00 	movq	$0, 80(%rsp)
  404967:	48 8b 81 60 1f 00 00 	movq	8032(%rcx), %rax
  40496e:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  404973:	48 8d 05 66 1d 05 00 	leaq	335206(%rip), %rax
  40497a:	48 89 44 24 70 	movq	%rax, 112(%rsp)
  40497f:	48 8d 15 ea 95 06 00 	leaq	431594(%rip), %rdx
  404986:	48 89 54 24 78 	movq	%rdx, 120(%rsp)
  40498b:	48 8d 54 24 70 	leaq	112(%rsp), %rdx
  404990:	bb 08 00 00 00 	movl	$8, %ebx
  404995:	48 8b 14 13 	movq	(%rbx,%rdx), %rdx
  404999:	48 8d 74 24 78 	leaq	120(%rsp), %rsi
  40499e:	84 06 	testb	%al, (%rsi)
  4049a0:	48 8b 12 	movq	(%rdx), %rdx
  4049a3:	48 89 84 24 80 00 00 00 	movq	%rax, 128(%rsp)
  4049ab:	48 8d 05 ae 95 06 00 	leaq	431534(%rip), %rax
  4049b2:	48 89 84 24 88 00 00 00 	movq	%rax, 136(%rsp)
  4049ba:	48 8d 84 24 80 00 00 00 	leaq	128(%rsp), %rax
  4049c2:	48 8b 04 18 	movq	(%rax,%rbx), %rax
  4049c6:	48 8d 9c 24 88 00 00 00 	leaq	136(%rsp), %rbx
  4049ce:	84 03 	testb	%al, (%rbx)
  4049d0:	48 8b 00 	movq	(%rax), %rax
  4049d3:	0f 57 c0 	xorps	%xmm0, %xmm0
  4049d6:	0f 11 44 24 60 	movups	%xmm0, 96(%rsp)
  4049db:	48 ff c2 	incq	%rdx
  4049de:	48 89 54 24 60 	movq	%rdx, 96(%rsp)
  4049e3:	48 ff c0 	incq	%rax
  4049e6:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  4049eb:	48 8b 05 3e 39 0a 00 	movq	670014(%rip), %rax
  4049f2:	48 89 04 24 	movq	%rax, (%rsp)
  4049f6:	0f 11 44 24 08 	movups	%xmm0, 8(%rsp)
  4049fb:	48 8d 44 24 50 	leaq	80(%rsp), %rax
  404a00:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  404a05:	48 c7 44 24 20 01 00 00 00 	movq	$1, 32(%rsp)
  404a0e:	48 c7 44 24 28 01 00 00 00 	movq	$1, 40(%rsp)
  404a17:	48 8d 44 24 60 	leaq	96(%rsp), %rax
  404a1c:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  404a21:	48 c7 44 24 38 02 00 00 00 	movq	$2, 56(%rsp)
  404a2a:	48 c7 44 24 40 02 00 00 00 	movq	$2, 64(%rsp)
  404a33:	e8 c8 9d 02 00 	callq	171464 <runtime.(*profBuf).write>
  404a38:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  404a40:	48 c7 80 60 1f 00 00 00 00 00 00 	movq	$0, 8032(%rax)
  404a4b:	e9 fe fe ff ff 	jmp	-258 <runtime.(*cpuProfile).addExtra+0x12e>
  404a50:	e8 eb af 01 00 	callq	110571 <runtime.panicindex>
  404a55:	0f 0b 	ud2
  404a57:	e8 54 b0 01 00 	callq	110676 <runtime.panicslice>
  404a5c:	0f 0b 	ud2
  404a5e:	e8 0d fb 03 00 	callq	260877 <runtime.morestack_noctxt>
  404a63:	e9 b8 fd ff ff 	jmp	-584 <runtime.(*cpuProfile).addExtra>
  404a68:	cc 	int3
  404a69:	cc 	int3
  404a6a:	cc 	int3
  404a6b:	cc 	int3
  404a6c:	cc 	int3
  404a6d:	cc 	int3
  404a6e:	cc 	int3
  404a6f:	cc 	int3

runtime.gogetenv:
  404a70:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  404a79:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  404a7d:	0f 86 17 01 00 00 	jbe	279 <runtime.gogetenv+0x12a>
  404a83:	48 83 ec 50 	subq	$80, %rsp
  404a87:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  404a8c:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  404a91:	48 8b 05 60 2c 0a 00 	movq	666720(%rip), %rax
  404a98:	48 8b 0d 51 2c 0a 00 	movq	666705(%rip), %rcx
  404a9f:	48 85 c9 	testq	%rcx, %rcx
  404aa2:	0f 84 d7 00 00 00 	je	215 <runtime.gogetenv+0x10f>
  404aa8:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  404aad:	31 d2 	xorl	%edx, %edx
  404aaf:	eb 07 	jmp	7 <runtime.gogetenv+0x48>
  404ab1:	48 83 c1 10 	addq	$16, %rcx
  404ab5:	48 ff c2 	incq	%rdx
  404ab8:	48 39 c2 	cmpq	%rax, %rdx
  404abb:	0f 8d a5 00 00 00 	jge	165 <runtime.gogetenv+0xf6>
  404ac1:	48 8b 19 	movq	(%rcx), %rbx
  404ac4:	48 8b 71 08 	movq	8(%rcx), %rsi
  404ac8:	48 8b 7c 24 60 	movq	96(%rsp), %rdi
  404acd:	48 39 fe 	cmpq	%rdi, %rsi
  404ad0:	7e df 	jle	-33 <runtime.gogetenv+0x41>
  404ad2:	44 0f b6 04 3b 	movzbl	(%rbx,%rdi), %r8d
  404ad7:	41 80 f8 3d 	cmpb	$61, %r8b
  404adb:	75 d4 	jne	-44 <runtime.gogetenv+0x41>
  404add:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  404ae2:	48 89 5c 24 38 	movq	%rbx, 56(%rsp)
  404ae7:	48 89 74 24 20 	movq	%rsi, 32(%rsp)
  404aec:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  404af1:	48 89 1c 24 	movq	%rbx, (%rsp)
  404af5:	48 8b 44 24 58 	movq	88(%rsp), %rax
  404afa:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  404aff:	48 89 7c 24 10 	movq	%rdi, 16(%rsp)
  404b04:	e8 37 18 04 00 	callq	268343 <runtime.memequal>
  404b09:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  404b0e:	84 c0 	testb	%al, %al
  404b10:	75 16 	jne	22 <runtime.gogetenv+0xb8>
  404b12:	48 8b 44 24 28 	movq	40(%rsp), %rax
  404b17:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  404b1c:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  404b21:	48 8b 7c 24 60 	movq	96(%rsp), %rdi
  404b26:	eb 89 	jmp	-119 <runtime.gogetenv+0x41>
  404b28:	48 8b 44 24 60 	movq	96(%rsp), %rax
  404b2d:	48 ff c0 	incq	%rax
  404b30:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  404b35:	48 39 c8 	cmpq	%rcx, %rax
  404b38:	77 3e 	ja	62 <runtime.gogetenv+0x108>
  404b3a:	48 29 c1 	subq	%rax, %rcx
  404b3d:	48 89 ca 	movq	%rcx, %rdx
  404b40:	48 f7 d9 	negq	%rcx
  404b43:	48 c1 f9 3f 	sarq	$63, %rcx
  404b47:	48 21 c8 	andq	%rcx, %rax
  404b4a:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  404b4f:	48 01 c8 	addq	%rcx, %rax
  404b52:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  404b57:	48 89 54 24 70 	movq	%rdx, 112(%rsp)
  404b5c:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  404b61:	48 83 c4 50 	addq	$80, %rsp
  404b65:	c3 	retq
  404b66:	0f 57 c0 	xorps	%xmm0, %xmm0
  404b69:	0f 11 44 24 68 	movups	%xmm0, 104(%rsp)
  404b6e:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  404b73:	48 83 c4 50 	addq	$80, %rsp
  404b77:	c3 	retq
  404b78:	e8 33 af 01 00 	callq	110387 <runtime.panicslice>
  404b7d:	0f 0b 	ud2
  404b7f:	48 8d 05 98 68 06 00 	leaq	419992(%rip), %rax
  404b86:	48 89 04 24 	movq	%rax, (%rsp)
  404b8a:	48 c7 44 24 08 16 00 00 00 	movq	$22, 8(%rsp)
  404b93:	e8 38 c6 01 00 	callq	116280 <runtime.throw>
  404b98:	0f 0b 	ud2
  404b9a:	e8 d1 f9 03 00 	callq	260561 <runtime.morestack_noctxt>
  404b9f:	e9 cc fe ff ff 	jmp	-308 <runtime.gogetenv>
  404ba4:	cc 	int3
  404ba5:	cc 	int3
  404ba6:	cc 	int3
  404ba7:	cc 	int3
  404ba8:	cc 	int3
  404ba9:	cc 	int3
  404baa:	cc 	int3
  404bab:	cc 	int3
  404bac:	cc 	int3
  404bad:	cc 	int3
  404bae:	cc 	int3
  404baf:	cc 	int3

runtime.(*TypeAssertionError).Error:
  404bb0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  404bb9:	48 8d 84 24 60 ff ff ff 	leaq	-160(%rsp), %rax
  404bc1:	48 3b 41 10 	cmpq	16(%rcx), %rax
  404bc5:	0f 86 3a 02 00 00 	jbe	570 <runtime.(*TypeAssertionError).Error+0x255>
  404bcb:	48 81 ec 20 01 00 00 	subq	$288, %rsp
  404bd2:	48 89 ac 24 18 01 00 00 	movq	%rbp, 280(%rsp)
  404bda:	48 8d ac 24 18 01 00 00 	leaq	280(%rsp), %rbp
  404be2:	48 8b 84 24 28 01 00 00 	movq	296(%rsp), %rax
  404bea:	48 8b 48 08 	movq	8(%rax), %rcx
  404bee:	48 8b 10 	movq	(%rax), %rdx
  404bf1:	48 85 c9 	testq	%rcx, %rcx
  404bf4:	75 0c 	jne	12 <runtime.(*TypeAssertionError).Error+0x52>
  404bf6:	b9 09 00 00 00 	movl	$9, %ecx
  404bfb:	48 8d 15 1e 55 06 00 	leaq	415006(%rip), %rdx
  404c02:	48 8b 58 18 	movq	24(%rax), %rbx
  404c06:	48 85 db 	testq	%rbx, %rbx
  404c09:	0f 84 79 01 00 00 	je	377 <runtime.(*TypeAssertionError).Error+0x1d8>
  404c0f:	48 8b 58 38 	movq	56(%rax), %rbx
  404c13:	48 85 db 	testq	%rbx, %rbx
  404c16:	0f 85 b8 00 00 00 	jne	184 <runtime.(*TypeAssertionError).Error+0x124>
  404c1c:	48 8d bc 24 b8 00 00 00 	leaq	184(%rsp), %rdi
  404c24:	48 8d 35 55 02 07 00 	leaq	459349(%rip), %rsi
  404c2b:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  404c30:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  404c35:	e8 d2 21 04 00 	callq	270802 <runtime.duffcopy+0x32c>
  404c3a:	48 8b 6d 00 	movq	(%rbp), %rbp
  404c3e:	48 89 94 24 c8 00 00 00 	movq	%rdx, 200(%rsp)
  404c46:	48 89 8c 24 d0 00 00 00 	movq	%rcx, 208(%rsp)
  404c4e:	48 8b 48 18 	movq	24(%rax), %rcx
  404c52:	48 8b 50 10 	movq	16(%rax), %rdx
  404c56:	48 89 94 24 e8 00 00 00 	movq	%rdx, 232(%rsp)
  404c5e:	48 89 8c 24 f0 00 00 00 	movq	%rcx, 240(%rsp)
  404c66:	48 8b 48 28 	movq	40(%rax), %rcx
  404c6a:	48 8b 40 20 	movq	32(%rax), %rax
  404c6e:	48 89 84 24 08 01 00 00 	movq	%rax, 264(%rsp)
  404c76:	48 89 8c 24 10 01 00 00 	movq	%rcx, 272(%rsp)
  404c7e:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  404c86:	48 8d 84 24 b8 00 00 00 	leaq	184(%rsp), %rax
  404c8e:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  404c93:	48 c7 44 24 10 06 00 00 00 	movq	$6, 16(%rsp)
  404c9c:	48 c7 44 24 18 06 00 00 00 	movq	$6, 24(%rsp)
  404ca5:	e8 86 20 03 00 	callq	204934 <runtime.concatstrings>
  404caa:	48 8b 44 24 20 	movq	32(%rsp), %rax
  404caf:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  404cb4:	48 89 84 24 30 01 00 00 	movq	%rax, 304(%rsp)
  404cbc:	48 89 8c 24 38 01 00 00 	movq	%rcx, 312(%rsp)
  404cc4:	48 8b ac 24 18 01 00 00 	movq	280(%rsp), %rbp
  404ccc:	48 81 c4 20 01 00 00 	addq	$288, %rsp
  404cd3:	c3 	retq
  404cd4:	48 8d 7c 24 58 	leaq	88(%rsp), %rdi
  404cd9:	48 8d 35 00 02 07 00 	leaq	459264(%rip), %rsi
  404ce0:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  404ce5:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  404cea:	e8 1d 21 04 00 	callq	270621 <runtime.duffcopy+0x32c>
  404cef:	48 8b 6d 00 	movq	(%rbp), %rbp
  404cf3:	48 8b 48 10 	movq	16(%rax), %rcx
  404cf7:	48 8b 50 18 	movq	24(%rax), %rdx
  404cfb:	48 89 4c 24 68 	movq	%rcx, 104(%rsp)
  404d00:	48 89 54 24 70 	movq	%rdx, 112(%rsp)
  404d05:	48 8b 48 20 	movq	32(%rax), %rcx
  404d09:	48 8b 50 28 	movq	40(%rax), %rdx
  404d0d:	48 89 8c 24 88 00 00 00 	movq	%rcx, 136(%rsp)
  404d15:	48 89 94 24 90 00 00 00 	movq	%rdx, 144(%rsp)
  404d1d:	48 8b 48 30 	movq	48(%rax), %rcx
  404d21:	48 8b 40 38 	movq	56(%rax), %rax
  404d25:	48 89 8c 24 a8 00 00 00 	movq	%rcx, 168(%rsp)
  404d2d:	48 89 84 24 b0 00 00 00 	movq	%rax, 176(%rsp)
  404d35:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  404d3d:	48 8d 44 24 58 	leaq	88(%rsp), %rax
  404d42:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  404d47:	48 c7 44 24 10 06 00 00 00 	movq	$6, 16(%rsp)
  404d50:	48 c7 44 24 18 06 00 00 00 	movq	$6, 24(%rsp)
  404d59:	e8 d2 1f 03 00 	callq	204754 <runtime.concatstrings>
  404d5e:	48 8b 44 24 20 	movq	32(%rsp), %rax
  404d63:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  404d68:	48 89 84 24 30 01 00 00 	movq	%rax, 304(%rsp)
  404d70:	48 89 8c 24 38 01 00 00 	movq	%rcx, 312(%rsp)
  404d78:	48 8b ac 24 18 01 00 00 	movq	280(%rsp), %rbp
  404d80:	48 81 c4 20 01 00 00 	addq	$288, %rsp
  404d87:	c3 	retq
  404d88:	48 8b 58 28 	movq	40(%rax), %rbx
  404d8c:	48 8b 40 20 	movq	32(%rax), %rax
  404d90:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  404d95:	48 89 5c 24 40 	movq	%rbx, 64(%rsp)
  404d9a:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  404da2:	48 8d 05 a1 66 06 00 	leaq	419489(%rip), %rax
  404da9:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  404dae:	48 c7 44 24 10 16 00 00 00 	movq	$22, 16(%rsp)
  404db7:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  404dbc:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  404dc1:	48 8d 05 dd 58 06 00 	leaq	415965(%rip), %rax
  404dc8:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  404dcd:	48 c7 44 24 30 0d 00 00 00 	movq	$13, 48(%rsp)
  404dd6:	e8 75 22 03 00 	callq	205429 <runtime.concatstring4>
  404ddb:	48 8b 44 24 50 	movq	80(%rsp), %rax
  404de0:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  404de5:	48 89 8c 24 30 01 00 00 	movq	%rcx, 304(%rsp)
  404ded:	48 89 84 24 38 01 00 00 	movq	%rax, 312(%rsp)
  404df5:	48 8b ac 24 18 01 00 00 	movq	280(%rsp), %rbp
  404dfd:	48 81 c4 20 01 00 00 	addq	$288, %rsp
  404e04:	c3 	retq
  404e05:	e8 66 f7 03 00 	callq	259942 <runtime.morestack_noctxt>
  404e0a:	e9 a1 fd ff ff 	jmp	-607 <runtime.(*TypeAssertionError).Error>
  404e0f:	cc 	int3

runtime.errorString.Error:
  404e10:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  404e19:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  404e1d:	76 62 	jbe	98 <runtime.errorString.Error+0x71>
  404e1f:	48 83 ec 40 	subq	$64, %rsp
  404e23:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  404e28:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  404e2d:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  404e35:	48 8d 05 6b 5b 06 00 	leaq	416619(%rip), %rax
  404e3c:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  404e41:	48 c7 44 24 10 0f 00 00 00 	movq	$15, 16(%rsp)
  404e4a:	48 8b 44 24 48 	movq	72(%rsp), %rax
  404e4f:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  404e54:	48 8b 44 24 50 	movq	80(%rsp), %rax
  404e59:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  404e5e:	e8 7d 21 03 00 	callq	205181 <runtime.concatstring2>
  404e63:	48 8b 44 24 28 	movq	40(%rsp), %rax
  404e68:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  404e6d:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  404e72:	48 89 4c 24 60 	movq	%rcx, 96(%rsp)
  404e77:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  404e7c:	48 83 c4 40 	addq	$64, %rsp
  404e80:	c3 	retq
  404e81:	e8 ea f6 03 00 	callq	259818 <runtime.morestack_noctxt>
  404e86:	eb 88 	jmp	-120 <runtime.errorString.Error>
  404e88:	cc 	int3
  404e89:	cc 	int3
  404e8a:	cc 	int3
  404e8b:	cc 	int3
  404e8c:	cc 	int3
  404e8d:	cc 	int3
  404e8e:	cc 	int3
  404e8f:	cc 	int3

runtime.plainError.Error:
  404e90:	48 8b 44 24 08 	movq	8(%rsp), %rax
  404e95:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  404e9a:	48 8b 44 24 10 	movq	16(%rsp), %rax
  404e9f:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  404ea4:	c3 	retq
  404ea5:	cc 	int3
  404ea6:	cc 	int3
  404ea7:	cc 	int3
  404ea8:	cc 	int3
  404ea9:	cc 	int3
  404eaa:	cc 	int3
  404eab:	cc 	int3
  404eac:	cc 	int3
  404ead:	cc 	int3
  404eae:	cc 	int3
  404eaf:	cc 	int3

runtime.typestring:
  404eb0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  404eb9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  404ebd:	76 3a 	jbe	58 <runtime.typestring+0x49>
  404ebf:	48 83 ec 20 	subq	$32, %rsp
  404ec3:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  404ec8:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  404ecd:	48 8b 44 24 28 	movq	40(%rsp), %rax
  404ed2:	48 89 04 24 	movq	%rax, (%rsp)
  404ed6:	e8 95 9a 03 00 	callq	236181 <runtime.(*_type).string>
  404edb:	48 8b 44 24 10 	movq	16(%rsp), %rax
  404ee0:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  404ee5:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  404eea:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  404eef:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  404ef4:	48 83 c4 20 	addq	$32, %rsp
  404ef8:	c3 	retq
  404ef9:	e8 72 f6 03 00 	callq	259698 <runtime.morestack_noctxt>
  404efe:	eb b0 	jmp	-80 <runtime.typestring>

runtime.printany:
  404f00:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  404f09:	48 8d 44 24 d8 	leaq	-40(%rsp), %rax
  404f0e:	48 3b 41 10 	cmpq	16(%rcx), %rax
  404f12:	0f 86 c6 07 00 00 	jbe	1990 <runtime.printany+0x7de>
  404f18:	48 81 ec a8 00 00 00 	subq	$168, %rsp
  404f1f:	48 89 ac 24 a0 00 00 00 	movq	%rbp, 160(%rsp)
  404f27:	48 8d ac 24 a0 00 00 00 	leaq	160(%rsp), %rbp
  404f2f:	48 8b 84 24 b0 00 00 00 	movq	176(%rsp), %rax
  404f37:	48 85 c0 	testq	%rax, %rax
  404f3a:	0f 84 76 07 00 00 	je	1910 <runtime.printany+0x7b6>
  404f40:	8b 48 10 	movl	16(%rax), %ecx
  404f43:	81 f9 6d 54 1a b3 	cmpl	$3004847213, %ecx
  404f49:	0f 87 fe 03 00 00 	ja	1022 <runtime.printany+0x44d>
  404f4f:	81 f9 8c 02 25 79 	cmpl	$2032468620, %ecx
  404f55:	0f 87 57 02 00 00 	ja	599 <runtime.printany+0x2b2>
  404f5b:	81 f9 fb 7f a2 2e 	cmpl	$782401531, %ecx
  404f61:	0f 87 6b 01 00 00 	ja	363 <runtime.printany+0x1d2>
  404f67:	81 f9 c5 06 ff 13 	cmpl	$335480517, %ecx
  404f6d:	0f 85 4c 01 00 00 	jne	332 <runtime.printany+0x1bf>
  404f73:	48 8d 15 66 1b 05 00 	leaq	334694(%rip), %rdx
  404f7a:	48 39 c2 	cmpq	%rax, %rdx
  404f7d:	0f 85 2a 01 00 00 	jne	298 <runtime.printany+0x1ad>
  404f83:	48 8b 94 24 b8 00 00 00 	movq	184(%rsp), %rdx
  404f8b:	0f b6 1a 	movzbl	(%rdx), %ebx
  404f8e:	0f 84 fc 00 00 00 	je	252 <runtime.printany+0x190>
  404f94:	81 f9 fb 7f a2 2e 	cmpl	$782401531, %ecx
  404f9a:	75 1a 	jne	26 <runtime.printany+0xb6>
  404f9c:	48 8d 0d bd 1c 05 00 	leaq	335037(%rip), %rcx
  404fa3:	48 39 c1 	cmpq	%rax, %rcx
  404fa6:	0f 85 dc 00 00 00 	jne	220 <runtime.printany+0x188>
  404fac:	f2 0f 10 02 	movsd	(%rdx), %xmm0
  404fb0:	0f 84 b0 00 00 00 	je	176 <runtime.printany+0x166>
  404fb6:	48 89 04 24 	movq	%rax, (%rsp)
  404fba:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  404fbf:	e8 ec fe ff ff 	callq	-276 <runtime.typestring>
  404fc4:	48 8b 44 24 18 	movq	24(%rsp), %rax
  404fc9:	48 89 84 24 88 00 00 00 	movq	%rax, 136(%rsp)
  404fd1:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  404fd6:	48 89 8c 24 98 00 00 00 	movq	%rcx, 152(%rsp)
  404fde:	e8 1d cb 01 00 	callq	117533 <runtime.printlock>
  404fe3:	48 8d 05 67 4c 06 00 	leaq	412775(%rip), %rax
  404fea:	48 89 04 24 	movq	%rax, (%rsp)
  404fee:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  404ff7:	e8 44 d4 01 00 	callq	119876 <runtime.printstring>
  404ffc:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  405004:	48 89 04 24 	movq	%rax, (%rsp)
  405008:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  405010:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  405015:	e8 26 d4 01 00 	callq	119846 <runtime.printstring>
  40501a:	48 8d 05 47 4c 06 00 	leaq	412743(%rip), %rax
  405021:	48 89 04 24 	movq	%rax, (%rsp)
  405025:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  40502e:	e8 0d d4 01 00 	callq	119821 <runtime.printstring>
  405033:	48 8b 84 24 b0 00 00 00 	movq	176(%rsp), %rax
  40503b:	48 89 04 24 	movq	%rax, (%rsp)
  40503f:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  405047:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40504c:	e8 5f d5 01 00 	callq	120159 <runtime.printeface>
  405051:	e8 2a cb 01 00 	callq	117546 <runtime.printunlock>
  405056:	48 8b ac 24 a0 00 00 00 	movq	160(%rsp), %rbp
  40505e:	48 81 c4 a8 00 00 00 	addq	$168, %rsp
  405065:	c3 	retq
  405066:	f2 0f 11 44 24 58 	movsd	%xmm0, 88(%rsp)
  40506c:	e8 8f ca 01 00 	callq	117391 <runtime.printlock>
  405071:	f2 0f 10 44 24 58 	movsd	88(%rsp), %xmm0
  405077:	f2 0f 11 04 24 	movsd	%xmm0, (%rsp)
  40507c:	e8 cf cd 01 00 	callq	118223 <runtime.printfloat>
  405081:	e8 fa ca 01 00 	callq	117498 <runtime.printunlock>
  405086:	eb ce 	jmp	-50 <runtime.printany+0x156>
  405088:	0f 57 c0 	xorps	%xmm0, %xmm0
  40508b:	e9 20 ff ff ff 	jmp	-224 <runtime.printany+0xb0>
  405090:	88 5c 24 25 	movb	%bl, 37(%rsp)
  405094:	e8 67 ca 01 00 	callq	117351 <runtime.printlock>
  405099:	0f b6 44 24 25 	movzbl	37(%rsp), %eax
  40509e:	88 04 24 	movb	%al, (%rsp)
  4050a1:	e8 3a cd 01 00 	callq	118074 <runtime.printbool>
  4050a6:	e8 d5 ca 01 00 	callq	117461 <runtime.printunlock>
  4050ab:	eb a9 	jmp	-87 <runtime.printany+0x156>
  4050ad:	48 8b 94 24 b8 00 00 00 	movq	184(%rsp), %rdx
  4050b5:	bb 00 00 00 00 	movl	$0, %ebx
  4050ba:	e9 cf fe ff ff 	jmp	-305 <runtime.printany+0x8e>
  4050bf:	81 f9 fb 7f a2 2e 	cmpl	$782401531, %ecx
  4050c5:	48 8b 94 24 b8 00 00 00 	movq	184(%rsp), %rdx
  4050cd:	e9 c8 fe ff ff 	jmp	-312 <runtime.printany+0x9a>
  4050d2:	81 f9 5f 42 3e 66 	cmpl	$1715356255, %ecx
  4050d8:	0f 85 c1 00 00 00 	jne	193 <runtime.printany+0x29f>
  4050de:	48 8d 15 fb 23 05 00 	leaq	336891(%rip), %rdx
  4050e5:	48 39 c2 	cmpq	%rax, %rdx
  4050e8:	0f 85 9f 00 00 00 	jne	159 <runtime.printany+0x28d>
  4050ee:	48 8b 94 24 b8 00 00 00 	movq	184(%rsp), %rdx
  4050f6:	0f b6 1a 	movzbl	(%rdx), %ebx
  4050f9:	74 6e 	je	110 <runtime.printany+0x269>
  4050fb:	81 f9 8c 02 25 79 	cmpl	$2032468620, %ecx
  405101:	0f 85 af fe ff ff 	jne	-337 <runtime.printany+0xb6>
  405107:	48 8d 0d d2 1a 05 00 	leaq	334546(%rip), %rcx
  40510e:	48 39 c1 	cmpq	%rax, %rcx
  405111:	75 4e 	jne	78 <runtime.printany+0x261>
  405113:	f3 0f 10 02 	movss	(%rdx), %xmm0
  405117:	f3 0f 10 4a 04 	movss	4(%rdx), %xmm1
  40511c:	0f 85 94 fe ff ff 	jne	-364 <runtime.printany+0xb6>
  405122:	f3 0f 11 44 24 2c 	movss	%xmm0, 44(%rsp)
  405128:	f3 0f 11 4c 24 30 	movss	%xmm1, 48(%rsp)
  40512e:	e8 cd c9 01 00 	callq	117197 <runtime.printlock>
  405133:	f3 0f 10 44 24 2c 	movss	44(%rsp), %xmm0
  405139:	f3 0f 5a c0 	cvtss2sd	%xmm0, %xmm0
  40513d:	f2 0f 11 04 24 	movsd	%xmm0, (%rsp)
  405142:	f3 0f 10 44 24 30 	movss	48(%rsp), %xmm0
  405148:	f3 0f 5a c0 	cvtss2sd	%xmm0, %xmm0
  40514c:	f2 0f 11 44 24 08 	movsd	%xmm0, 8(%rsp)
  405152:	e8 89 cf 01 00 	callq	118665 <runtime.printcomplex>
  405157:	e8 24 ca 01 00 	callq	117284 <runtime.printunlock>
  40515c:	e9 f5 fe ff ff 	jmp	-267 <runtime.printany+0x156>
  405161:	0f 57 c0 	xorps	%xmm0, %xmm0
  405164:	0f 57 c9 	xorps	%xmm1, %xmm1
  405167:	eb b3 	jmp	-77 <runtime.printany+0x21c>
  405169:	88 5c 24 27 	movb	%bl, 39(%rsp)
  40516d:	e8 8e c9 01 00 	callq	117134 <runtime.printlock>
  405172:	0f b6 44 24 27 	movzbl	39(%rsp), %eax
  405177:	0f b6 c0 	movzbl	%al, %eax
  40517a:	48 89 04 24 	movq	%rax, (%rsp)
  40517e:	e8 ed cf 01 00 	callq	118765 <runtime.printuint>
  405183:	e8 f8 c9 01 00 	callq	117240 <runtime.printunlock>
  405188:	e9 c9 fe ff ff 	jmp	-311 <runtime.printany+0x156>
  40518d:	48 8b 94 24 b8 00 00 00 	movq	184(%rsp), %rdx
  405195:	bb 00 00 00 00 	movl	$0, %ebx
  40519a:	e9 5a ff ff ff 	jmp	-166 <runtime.printany+0x1f9>
  40519f:	81 f9 8c 02 25 79 	cmpl	$2032468620, %ecx
  4051a5:	48 8b 94 24 b8 00 00 00 	movq	184(%rsp), %rdx
  4051ad:	e9 4f ff ff ff 	jmp	-177 <runtime.printany+0x201>
  4051b2:	81 f9 ff 9b 3f 96 	cmpl	$2520751103, %ecx
  4051b8:	0f 87 b3 00 00 00 	ja	179 <runtime.printany+0x371>
  4051be:	81 f9 2e 8d 31 86 	cmpl	$2251394350, %ecx
  4051c4:	0f 85 94 00 00 00 	jne	148 <runtime.printany+0x35e>
  4051ca:	48 8d 15 cf 22 05 00 	leaq	336591(%rip), %rdx
  4051d1:	48 39 c2 	cmpq	%rax, %rdx
  4051d4:	75 79 	jne	121 <runtime.printany+0x34f>
  4051d6:	48 8b 94 24 b8 00 00 00 	movq	184(%rsp), %rdx
  4051de:	48 8b 1a 	movq	(%rdx), %rbx
  4051e1:	74 4a 	je	74 <runtime.printany+0x32d>
  4051e3:	81 f9 ff 9b 3f 96 	cmpl	$2520751103, %ecx
  4051e9:	0f 85 c7 fd ff ff 	jne	-569 <runtime.printany+0xb6>
  4051ef:	48 8d 0d ea 1c 05 00 	leaq	335082(%rip), %rcx
  4051f6:	48 39 c1 	cmpq	%rax, %rcx
  4051f9:	75 2b 	jne	43 <runtime.printany+0x326>
  4051fb:	48 8b 0a 	movq	(%rdx), %rcx
  4051fe:	0f 85 b2 fd ff ff 	jne	-590 <runtime.printany+0xb6>
  405204:	48 89 4c 24 68 	movq	%rcx, 104(%rsp)
  405209:	e8 f2 c8 01 00 	callq	116978 <runtime.printlock>
  40520e:	48 8b 44 24 68 	movq	104(%rsp), %rax
  405213:	48 89 04 24 	movq	%rax, (%rsp)
  405217:	e8 64 d0 01 00 	callq	118884 <runtime.printint>
  40521c:	e8 5f c9 01 00 	callq	117087 <runtime.printunlock>
  405221:	e9 30 fe ff ff 	jmp	-464 <runtime.printany+0x156>
  405226:	b9 00 00 00 00 	movl	$0, %ecx
  40522b:	eb d1 	jmp	-47 <runtime.printany+0x2fe>
  40522d:	48 89 5c 24 70 	movq	%rbx, 112(%rsp)
  405232:	e8 c9 c8 01 00 	callq	116937 <runtime.printlock>
  405237:	48 8b 44 24 70 	movq	112(%rsp), %rax
  40523c:	48 89 04 24 	movq	%rax, (%rsp)
  405240:	e8 2b cf 01 00 	callq	118571 <runtime.printuint>
  405245:	e8 36 c9 01 00 	callq	117046 <runtime.printunlock>
  40524a:	e9 07 fe ff ff 	jmp	-505 <runtime.printany+0x156>
  40524f:	48 8b 94 24 b8 00 00 00 	movq	184(%rsp), %rdx
  405257:	bb 00 00 00 00 	movl	$0, %ebx
  40525c:	eb 83 	jmp	-125 <runtime.printany+0x2e1>
  40525e:	81 f9 ff 9b 3f 96 	cmpl	$2520751103, %ecx
  405264:	48 8b 94 24 b8 00 00 00 	movq	184(%rsp), %rdx
  40526c:	e9 78 ff ff ff 	jmp	-136 <runtime.printany+0x2e9>
  405271:	81 f9 d3 3e c2 b0 	cmpl	$2965520083, %ecx
  405277:	0f 85 bd 00 00 00 	jne	189 <runtime.printany+0x43a>
  40527d:	48 8d 15 9c 19 05 00 	leaq	334236(%rip), %rdx
  405284:	48 39 c2 	cmpq	%rax, %rdx
  405287:	0f 85 9d 00 00 00 	jne	157 <runtime.printany+0x42a>
  40528d:	48 8b 94 24 b8 00 00 00 	movq	184(%rsp), %rdx
  405295:	f3 0f 10 02 	movss	(%rdx), %xmm0
  405299:	74 66 	je	102 <runtime.printany+0x401>
  40529b:	81 f9 6d 54 1a b3 	cmpl	$3004847213, %ecx
  4052a1:	0f 85 0f fd ff ff 	jne	-753 <runtime.printany+0xb6>
  4052a7:	48 8d 0d f2 18 05 00 	leaq	334066(%rip), %rcx
  4052ae:	48 39 c1 	cmpq	%rax, %rcx
  4052b1:	75 46 	jne	70 <runtime.printany+0x3f9>
  4052b3:	f2 0f 10 02 	movsd	(%rdx), %xmm0
  4052b7:	f2 0f 10 4a 08 	movsd	8(%rdx), %xmm1
  4052bc:	0f 85 f4 fc ff ff 	jne	-780 <runtime.printany+0xb6>
  4052c2:	f2 0f 11 44 24 40 	movsd	%xmm0, 64(%rsp)
  4052c8:	f2 0f 11 4c 24 50 	movsd	%xmm1, 80(%rsp)
  4052ce:	e8 2d c8 01 00 	callq	116781 <runtime.printlock>
  4052d3:	f2 0f 10 44 24 40 	movsd	64(%rsp), %xmm0
  4052d9:	f2 0f 11 04 24 	movsd	%xmm0, (%rsp)
  4052de:	f2 0f 10 44 24 50 	movsd	80(%rsp), %xmm0
  4052e4:	f2 0f 11 44 24 08 	movsd	%xmm0, 8(%rsp)
  4052ea:	e8 f1 cd 01 00 	callq	118257 <runtime.printcomplex>
  4052ef:	e8 8c c8 01 00 	callq	116876 <runtime.printunlock>
  4052f4:	e9 5d fd ff ff 	jmp	-675 <runtime.printany+0x156>
  4052f9:	0f 57 c0 	xorps	%xmm0, %xmm0
  4052fc:	0f 57 c9 	xorps	%xmm1, %xmm1
  4052ff:	eb bb 	jmp	-69 <runtime.printany+0x3bc>
  405301:	f3 0f 11 44 24 34 	movss	%xmm0, 52(%rsp)
  405307:	e8 f4 c7 01 00 	callq	116724 <runtime.printlock>
  40530c:	f3 0f 10 44 24 34 	movss	52(%rsp), %xmm0
  405312:	f3 0f 5a c0 	cvtss2sd	%xmm0, %xmm0
  405316:	f2 0f 11 04 24 	movsd	%xmm0, (%rsp)
  40531b:	e8 30 cb 01 00 	callq	117552 <runtime.printfloat>
  405320:	e8 5b c8 01 00 	callq	116827 <runtime.printunlock>
  405325:	e9 2c fd ff ff 	jmp	-724 <runtime.printany+0x156>
  40532a:	48 8b 94 24 b8 00 00 00 	movq	184(%rsp), %rdx
  405332:	0f 57 c0 	xorps	%xmm0, %xmm0
  405335:	e9 5f ff ff ff 	jmp	-161 <runtime.printany+0x399>
  40533a:	81 f9 6d 54 1a b3 	cmpl	$3004847213, %ecx
  405340:	48 8b 94 24 b8 00 00 00 	movq	184(%rsp), %rdx
  405348:	e9 54 ff ff ff 	jmp	-172 <runtime.printany+0x3a1>
  40534d:	81 f9 3d e8 4a d0 	cmpl	$3494570045, %ecx
  405353:	0f 87 72 01 00 00 	ja	370 <runtime.printany+0x5cb>
  405359:	81 f9 92 d7 4a bd 	cmpl	$3175798674, %ecx
  40535f:	0f 87 b3 00 00 00 	ja	179 <runtime.printany+0x518>
  405365:	81 f9 02 41 ad bb 	cmpl	$3148693762, %ecx
  40536b:	0f 85 94 00 00 00 	jne	148 <runtime.printany+0x505>
  405371:	48 8d 15 28 1b 05 00 	leaq	334632(%rip), %rdx
  405378:	48 39 c2 	cmpq	%rax, %rdx
  40537b:	75 79 	jne	121 <runtime.printany+0x4f6>
  40537d:	48 8b 94 24 b8 00 00 00 	movq	184(%rsp), %rdx
  405385:	8b 1a 	movl	(%rdx), %ebx
  405387:	74 4a 	je	74 <runtime.printany+0x4d3>
  405389:	81 f9 92 d7 4a bd 	cmpl	$3175798674, %ecx
  40538f:	0f 85 21 fc ff ff 	jne	-991 <runtime.printany+0xb6>
  405395:	48 8d 0d 84 21 05 00 	leaq	336260(%rip), %rcx
  40539c:	48 39 c1 	cmpq	%rax, %rcx
  40539f:	75 2b 	jne	43 <runtime.printany+0x4cc>
  4053a1:	48 8b 0a 	movq	(%rdx), %rcx
  4053a4:	0f 85 0c fc ff ff 	jne	-1012 <runtime.printany+0xb6>
  4053aa:	48 89 4c 24 78 	movq	%rcx, 120(%rsp)
  4053af:	e8 4c c7 01 00 	callq	116556 <runtime.printlock>
  4053b4:	48 8b 44 24 78 	movq	120(%rsp), %rax
  4053b9:	48 89 04 24 	movq	%rax, (%rsp)
  4053bd:	e8 ae cd 01 00 	callq	118190 <runtime.printuint>
  4053c2:	e8 b9 c7 01 00 	callq	116665 <runtime.printunlock>
  4053c7:	e9 8a fc ff ff 	jmp	-886 <runtime.printany+0x156>
  4053cc:	b9 00 00 00 00 	movl	$0, %ecx
  4053d1:	eb d1 	jmp	-47 <runtime.printany+0x4a4>
  4053d3:	89 5c 24 38 	movl	%ebx, 56(%rsp)
  4053d7:	e8 24 c7 01 00 	callq	116516 <runtime.printlock>
  4053dc:	8b 44 24 38 	movl	56(%rsp), %eax
  4053e0:	48 63 c0 	movslq	%eax, %rax
  4053e3:	48 89 04 24 	movq	%rax, (%rsp)
  4053e7:	e8 94 ce 01 00 	callq	118420 <runtime.printint>
  4053ec:	e8 8f c7 01 00 	callq	116623 <runtime.printunlock>
  4053f1:	e9 60 fc ff ff 	jmp	-928 <runtime.printany+0x156>
  4053f6:	48 8b 94 24 b8 00 00 00 	movq	184(%rsp), %rdx
  4053fe:	bb 00 00 00 00 	movl	$0, %ebx
  405403:	eb 82 	jmp	-126 <runtime.printany+0x487>
  405405:	81 f9 92 d7 4a bd 	cmpl	$3175798674, %ecx
  40540b:	48 8b 94 24 b8 00 00 00 	movq	184(%rsp), %rdx
  405413:	e9 77 ff ff ff 	jmp	-137 <runtime.printany+0x48f>
  405418:	81 f9 27 c0 06 cc 	cmpl	$3422994471, %ecx
  40541e:	0f 85 94 00 00 00 	jne	148 <runtime.printany+0x5b8>
  405424:	48 8d 15 f5 1a 05 00 	leaq	334581(%rip), %rdx
  40542b:	48 39 c2 	cmpq	%rax, %rdx
  40542e:	75 79 	jne	121 <runtime.printany+0x5a9>
  405430:	48 8b 94 24 b8 00 00 00 	movq	184(%rsp), %rdx
  405438:	0f b6 1a 	movzbl	(%rdx), %ebx
  40543b:	74 47 	je	71 <runtime.printany+0x584>
  40543d:	81 f9 3d e8 4a d0 	cmpl	$3494570045, %ecx
  405443:	0f 85 6d fb ff ff 	jne	-1171 <runtime.printany+0xb6>
  405449:	48 8d 0d 10 20 05 00 	leaq	335888(%rip), %rcx
  405450:	48 39 c1 	cmpq	%rax, %rcx
  405453:	75 28 	jne	40 <runtime.printany+0x57d>
  405455:	8b 0a 	movl	(%rdx), %ecx
  405457:	0f 85 59 fb ff ff 	jne	-1191 <runtime.printany+0xb6>
  40545d:	89 4c 24 3c 	movl	%ecx, 60(%rsp)
  405461:	e8 9a c6 01 00 	callq	116378 <runtime.printlock>
  405466:	8b 44 24 3c 	movl	60(%rsp), %eax
  40546a:	48 89 04 24 	movq	%rax, (%rsp)
  40546e:	e8 fd cc 01 00 	callq	118013 <runtime.printuint>
  405473:	e8 08 c7 01 00 	callq	116488 <runtime.printunlock>
  405478:	e9 d9 fb ff ff 	jmp	-1063 <runtime.printany+0x156>
  40547d:	b9 00 00 00 00 	movl	$0, %ecx
  405482:	eb d3 	jmp	-45 <runtime.printany+0x557>
  405484:	88 5c 24 26 	movb	%bl, 38(%rsp)
  405488:	e8 73 c6 01 00 	callq	116339 <runtime.printlock>
  40548d:	0f b6 44 24 26 	movzbl	38(%rsp), %eax
  405492:	48 0f be c0 	movsbq	%al, %rax
  405496:	48 89 04 24 	movq	%rax, (%rsp)
  40549a:	e8 e1 cd 01 00 	callq	118241 <runtime.printint>
  40549f:	e8 dc c6 01 00 	callq	116444 <runtime.printunlock>
  4054a4:	e9 ad fb ff ff 	jmp	-1107 <runtime.printany+0x156>
  4054a9:	48 8b 94 24 b8 00 00 00 	movq	184(%rsp), %rdx
  4054b1:	bb 00 00 00 00 	movl	$0, %ebx
  4054b6:	eb 83 	jmp	-125 <runtime.printany+0x53b>
  4054b8:	81 f9 3d e8 4a d0 	cmpl	$3494570045, %ecx
  4054be:	48 8b 94 24 b8 00 00 00 	movq	184(%rsp), %rdx
  4054c6:	e9 78 ff ff ff 	jmp	-136 <runtime.printany+0x543>
  4054cb:	81 f9 b4 5c ff e0 	cmpl	$3774831796, %ecx
  4054d1:	0f 87 d8 00 00 00 	ja	216 <runtime.printany+0x6af>
  4054d7:	81 f9 12 77 b8 d5 	cmpl	$3585636114, %ecx
  4054dd:	0f 85 b9 00 00 00 	jne	185 <runtime.printany+0x69c>
  4054e3:	48 8d 15 f6 1e 05 00 	leaq	335606(%rip), %rdx
  4054ea:	48 39 c2 	cmpq	%rax, %rdx
  4054ed:	0f 85 97 00 00 00 	jne	151 <runtime.printany+0x68a>
  4054f3:	48 8b 94 24 b8 00 00 00 	movq	184(%rsp), %rdx
  4054fb:	48 8b 1a 	movq	(%rdx), %rbx
  4054fe:	74 68 	je	104 <runtime.printany+0x668>
  405500:	81 f9 b4 5c ff e0 	cmpl	$3774831796, %ecx
  405506:	0f 85 aa fa ff ff 	jne	-1366 <runtime.printany+0xb6>
  40550c:	48 8d 0d 8d 1e 05 00 	leaq	335501(%rip), %rcx
  405513:	48 39 c1 	cmpq	%rax, %rcx
  405516:	75 44 	jne	68 <runtime.printany+0x65c>
  405518:	48 8b 0a 	movq	(%rdx), %rcx
  40551b:	48 8b 5a 08 	movq	8(%rdx), %rbx
  40551f:	0f 85 91 fa ff ff 	jne	-1391 <runtime.printany+0xb6>
  405525:	48 89 5c 24 48 	movq	%rbx, 72(%rsp)
  40552a:	48 89 8c 24 90 00 00 00 	movq	%rcx, 144(%rsp)
  405532:	e8 c9 c5 01 00 	callq	116169 <runtime.printlock>
  405537:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  40553f:	48 89 04 24 	movq	%rax, (%rsp)
  405543:	48 8b 44 24 48 	movq	72(%rsp), %rax
  405548:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40554d:	e8 ee ce 01 00 	callq	118510 <runtime.printstring>
  405552:	e8 29 c6 01 00 	callq	116265 <runtime.printunlock>
  405557:	e9 fa fa ff ff 	jmp	-1286 <runtime.printany+0x156>
  40555c:	bb 00 00 00 00 	movl	$0, %ebx
  405561:	b9 00 00 00 00 	movl	$0, %ecx
  405566:	eb b7 	jmp	-73 <runtime.printany+0x61f>
  405568:	48 89 5c 24 60 	movq	%rbx, 96(%rsp)
  40556d:	e8 8e c5 01 00 	callq	116110 <runtime.printlock>
  405572:	48 8b 44 24 60 	movq	96(%rsp), %rax
  405577:	48 89 04 24 	movq	%rax, (%rsp)
  40557b:	e8 f0 cb 01 00 	callq	117744 <runtime.printuint>
  405580:	e8 fb c5 01 00 	callq	116219 <runtime.printunlock>
  405585:	e9 cc fa ff ff 	jmp	-1332 <runtime.printany+0x156>
  40558a:	48 8b 94 24 b8 00 00 00 	movq	184(%rsp), %rdx
  405592:	bb 00 00 00 00 	movl	$0, %ebx
  405597:	e9 62 ff ff ff 	jmp	-158 <runtime.printany+0x5fe>
  40559c:	81 f9 b4 5c ff e0 	cmpl	$3774831796, %ecx
  4055a2:	48 8b 94 24 b8 00 00 00 	movq	184(%rsp), %rdx
  4055aa:	e9 57 ff ff ff 	jmp	-169 <runtime.printany+0x606>
  4055af:	81 f9 ce 80 d5 ec 	cmpl	$3973415118, %ecx
  4055b5:	0f 85 ee 00 00 00 	jne	238 <runtime.printany+0x7a9>
  4055bb:	48 8d 15 9e 18 05 00 	leaq	333982(%rip), %rdx
  4055c2:	48 39 c2 	cmpq	%rax, %rdx
  4055c5:	0f 85 cc 00 00 00 	jne	204 <runtime.printany+0x797>
  4055cb:	48 8b 94 24 b8 00 00 00 	movq	184(%rsp), %rdx
  4055d3:	0f b7 1a 	movzwl	(%rdx), %ebx
  4055d6:	0f 84 95 00 00 00 	je	149 <runtime.printany+0x771>
  4055dc:	81 f9 a0 0e f2 ef 	cmpl	$4025618080, %ecx
  4055e2:	75 11 	jne	17 <runtime.printany+0x6f5>
  4055e4:	48 8d 1d 35 1e 05 00 	leaq	335413(%rip), %rbx
  4055eb:	48 39 c3 	cmpq	%rax, %rbx
  4055ee:	75 7a 	jne	122 <runtime.printany+0x76a>
  4055f0:	0f b7 1a 	movzwl	(%rdx), %ebx
  4055f3:	74 50 	je	80 <runtime.printany+0x745>
  4055f5:	81 f9 fa 71 53 f7 	cmpl	$4149441018, %ecx
  4055fb:	0f 85 b5 f9 ff ff 	jne	-1611 <runtime.printany+0xb6>
  405601:	48 8d 0d 18 18 05 00 	leaq	333848(%rip), %rcx
  405608:	48 39 c1 	cmpq	%rax, %rcx
  40560b:	75 31 	jne	49 <runtime.printany+0x73e>
  40560d:	48 8b 0a 	movq	(%rdx), %rcx
  405610:	0f 85 a0 f9 ff ff 	jne	-1632 <runtime.printany+0xb6>
  405616:	48 89 8c 24 80 00 00 00 	movq	%rcx, 128(%rsp)
  40561e:	e8 dd c4 01 00 	callq	115933 <runtime.printlock>
  405623:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  40562b:	48 89 04 24 	movq	%rax, (%rsp)
  40562f:	e8 4c cc 01 00 	callq	117836 <runtime.printint>
  405634:	e8 47 c5 01 00 	callq	116039 <runtime.printunlock>
  405639:	e9 18 fa ff ff 	jmp	-1512 <runtime.printany+0x156>
  40563e:	b9 00 00 00 00 	movl	$0, %ecx
  405643:	eb cb 	jmp	-53 <runtime.printany+0x710>
  405645:	66 89 5c 24 2a 	movw	%bx, 42(%rsp)
  40564a:	e8 b1 c4 01 00 	callq	115889 <runtime.printlock>
  40564f:	0f b7 44 24 2a 	movzwl	42(%rsp), %eax
  405654:	0f b7 c0 	movzwl	%ax, %eax
  405657:	48 89 04 24 	movq	%rax, (%rsp)
  40565b:	e8 10 cb 01 00 	callq	117520 <runtime.printuint>
  405660:	e8 1b c5 01 00 	callq	115995 <runtime.printunlock>
  405665:	e9 ec f9 ff ff 	jmp	-1556 <runtime.printany+0x156>
  40566a:	bb 00 00 00 00 	movl	$0, %ebx
  40566f:	eb 82 	jmp	-126 <runtime.printany+0x6f3>
  405671:	66 89 5c 24 28 	movw	%bx, 40(%rsp)
  405676:	e8 85 c4 01 00 	callq	115845 <runtime.printlock>
  40567b:	0f b7 44 24 28 	movzwl	40(%rsp), %eax
  405680:	48 0f bf c0 	movswq	%ax, %rax
  405684:	48 89 04 24 	movq	%rax, (%rsp)
  405688:	e8 f3 cb 01 00 	callq	117747 <runtime.printint>
  40568d:	e8 ee c4 01 00 	callq	115950 <runtime.printunlock>
  405692:	e9 bf f9 ff ff 	jmp	-1601 <runtime.printany+0x156>
  405697:	48 8b 94 24 b8 00 00 00 	movq	184(%rsp), %rdx
  40569f:	bb 00 00 00 00 	movl	$0, %ebx
  4056a4:	e9 2d ff ff ff 	jmp	-211 <runtime.printany+0x6d6>
  4056a9:	48 8b 94 24 b8 00 00 00 	movq	184(%rsp), %rdx
  4056b1:	e9 26 ff ff ff 	jmp	-218 <runtime.printany+0x6dc>
  4056b6:	e8 45 c4 01 00 	callq	115781 <runtime.printlock>
  4056bb:	48 8d 05 ef 45 06 00 	leaq	411119(%rip), %rax
  4056c2:	48 89 04 24 	movq	%rax, (%rsp)
  4056c6:	48 c7 44 24 08 03 00 00 00 	movq	$3, 8(%rsp)
  4056cf:	e8 6c cd 01 00 	callq	118124 <runtime.printstring>
  4056d4:	e8 a7 c4 01 00 	callq	115879 <runtime.printunlock>
  4056d9:	e9 78 f9 ff ff 	jmp	-1672 <runtime.printany+0x156>
  4056de:	e8 8d ee 03 00 	callq	257677 <runtime.morestack_noctxt>
  4056e3:	e9 18 f8 ff ff 	jmp	-2024 <runtime.printany>
  4056e8:	cc 	int3
  4056e9:	cc 	int3
  4056ea:	cc 	int3
  4056eb:	cc 	int3
  4056ec:	cc 	int3
  4056ed:	cc 	int3
  4056ee:	cc 	int3
  4056ef:	cc 	int3

runtime.panicwrap:
  4056f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4056f9:	48 8d 84 24 40 ff ff ff 	leaq	-192(%rsp), %rax
  405701:	48 3b 41 10 	cmpq	16(%rcx), %rax
  405705:	0f 86 e1 03 00 00 	jbe	993 <runtime.panicwrap+0x3fc>
  40570b:	48 81 ec 40 01 00 00 	subq	$320, %rsp
  405712:	48 89 ac 24 38 01 00 00 	movq	%rbp, 312(%rsp)
  40571a:	48 8d ac 24 38 01 00 00 	leaq	312(%rsp), %rbp
  405722:	48 8b 84 24 40 01 00 00 	movq	320(%rsp), %rax
  40572a:	48 89 04 24 	movq	%rax, (%rsp)
  40572e:	e8 9d 2a 03 00 	callq	207517 <runtime.findfunc>
  405733:	48 8b 44 24 08 	movq	8(%rsp), %rax
  405738:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  40573d:	48 89 04 24 	movq	%rax, (%rsp)
  405741:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  405746:	e8 b5 31 03 00 	callq	209333 <runtime.funcname>
  40574b:	48 8b 44 24 18 	movq	24(%rsp), %rax
  405750:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  405755:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  40575a:	48 89 8c 24 90 00 00 00 	movq	%rcx, 144(%rsp)
  405762:	48 89 0c 24 	movq	%rcx, (%rsp)
  405766:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40576b:	c6 44 24 10 28 	movb	$40, 16(%rsp)
  405770:	e8 cb 0f 04 00 	callq	266187 <strings.IndexByte>
  405775:	48 8b 44 24 18 	movq	24(%rsp), %rax
  40577a:	48 85 c0 	testq	%rax, %rax
  40577d:	0f 8c 15 03 00 00 	jl	789 <runtime.panicwrap+0x3a8>
  405783:	48 8d 48 ff 	leaq	-1(%rax), %rcx
  405787:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  40578c:	48 39 d1 	cmpq	%rdx, %rcx
  40578f:	0f 87 fc 02 00 00 	ja	764 <runtime.panicwrap+0x3a1>
  405795:	48 83 c0 02 	addq	$2, %rax
  405799:	48 39 d0 	cmpq	%rdx, %rax
  40579c:	7c 0d 	jl	13 <runtime.panicwrap+0xbb>
  40579e:	48 8b b4 24 90 00 00 00 	movq	144(%rsp), %rsi
  4057a6:	e9 a0 02 00 00 	jmp	672 <runtime.panicwrap+0x35b>
  4057ab:	48 39 c1 	cmpq	%rax, %rcx
  4057ae:	0f 87 90 02 00 00 	ja	656 <runtime.panicwrap+0x354>
  4057b4:	48 39 d0 	cmpq	%rdx, %rax
  4057b7:	0f 87 87 02 00 00 	ja	647 <runtime.panicwrap+0x354>
  4057bd:	48 89 c3 	movq	%rax, %rbx
  4057c0:	48 29 c8 	subq	%rcx, %rax
  4057c3:	48 89 c6 	movq	%rax, %rsi
  4057c6:	48 f7 d8 	negq	%rax
  4057c9:	48 c1 f8 3f 	sarq	$63, %rax
  4057cd:	48 21 c8 	andq	%rcx, %rax
  4057d0:	48 83 fe 03 	cmpq	$3, %rsi
  4057d4:	74 0d 	je	13 <runtime.panicwrap+0xf3>
  4057d6:	48 8b b4 24 90 00 00 00 	movq	144(%rsp), %rsi
  4057de:	e9 68 02 00 00 	jmp	616 <runtime.panicwrap+0x35b>
  4057e3:	48 8b b4 24 90 00 00 00 	movq	144(%rsp), %rsi
  4057eb:	0f b7 3c 30 	movzwl	(%rax,%rsi), %edi
  4057ef:	66 81 ff 2e 28 	cmpw	$10286, %di
  4057f4:	0f 85 51 02 00 00 	jne	593 <runtime.panicwrap+0x35b>
  4057fa:	0f b6 44 06 02 	movzbl	2(%rsi,%rax), %eax
  4057ff:	3c 2a 	cmpb	$42, %al
  405801:	0f 85 44 02 00 00 	jne	580 <runtime.panicwrap+0x35b>
  405807:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  40580c:	48 29 da 	subq	%rbx, %rdx
  40580f:	48 89 54 24 40 	movq	%rdx, 64(%rsp)
  405814:	48 89 d0 	movq	%rdx, %rax
  405817:	48 f7 da 	negq	%rdx
  40581a:	48 c1 fa 3f 	sarq	$63, %rdx
  40581e:	48 21 d3 	andq	%rdx, %rbx
  405821:	48 8d 0c 1e 	leaq	(%rsi,%rbx), %rcx
  405825:	48 89 8c 24 88 00 00 00 	movq	%rcx, 136(%rsp)
  40582d:	48 89 0c 24 	movq	%rcx, (%rsp)
  405831:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  405836:	c6 44 24 10 29 	movb	$41, 16(%rsp)
  40583b:	e8 00 0f 04 00 	callq	265984 <strings.IndexByte>
  405840:	48 8b 44 24 18 	movq	24(%rsp), %rax
  405845:	48 85 c0 	testq	%rax, %rax
  405848:	0f 8c a2 01 00 00 	jl	418 <runtime.panicwrap+0x300>
  40584e:	48 8d 48 02 	leaq	2(%rax), %rcx
  405852:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  405857:	48 39 d1 	cmpq	%rdx, %rcx
  40585a:	7c 0d 	jl	13 <runtime.panicwrap+0x179>
  40585c:	48 8b 9c 24 88 00 00 00 	movq	136(%rsp), %rbx
  405864:	e9 41 01 00 00 	jmp	321 <runtime.panicwrap+0x2ba>
  405869:	48 39 c8 	cmpq	%rcx, %rax
  40586c:	0f 87 31 01 00 00 	ja	305 <runtime.panicwrap+0x2b3>
  405872:	48 39 d1 	cmpq	%rdx, %rcx
  405875:	0f 87 28 01 00 00 	ja	296 <runtime.panicwrap+0x2b3>
  40587b:	48 8b 9c 24 88 00 00 00 	movq	136(%rsp), %rbx
  405883:	44 0f b7 04 18 	movzwl	(%rax,%rbx), %r8d
  405888:	66 41 81 f8 29 2e 	cmpw	$11817, %r8w
  40588e:	0f 85 16 01 00 00 	jne	278 <runtime.panicwrap+0x2ba>
  405894:	48 39 d0 	cmpq	%rdx, %rax
  405897:	0f 87 ff 00 00 00 	ja	255 <runtime.panicwrap+0x2ac>
  40589d:	48 8d bc 24 a8 00 00 00 	leaq	168(%rsp), %rdi
  4058a5:	48 8d 35 94 f6 06 00 	leaq	456340(%rip), %rsi
  4058ac:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  4058b1:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  4058b6:	e8 27 15 04 00 	callq	267559 <runtime.duffcopy+0x302>
  4058bb:	48 8b 6d 00 	movq	(%rbp), %rbp
  4058bf:	4c 8b 84 24 90 00 00 00 	movq	144(%rsp), %r8
  4058c7:	4c 89 84 24 b8 00 00 00 	movq	%r8, 184(%rsp)
  4058cf:	4c 8b 44 24 38 	movq	56(%rsp), %r8
  4058d4:	4c 89 84 24 c0 00 00 00 	movq	%r8, 192(%rsp)
  4058dc:	48 89 9c 24 d8 00 00 00 	movq	%rbx, 216(%rsp)
  4058e4:	48 89 84 24 e0 00 00 00 	movq	%rax, 224(%rsp)
  4058ec:	48 29 ca 	subq	%rcx, %rdx
  4058ef:	49 89 d0 	movq	%rdx, %r8
  4058f2:	48 f7 da 	negq	%rdx
  4058f5:	48 c1 fa 3f 	sarq	$63, %rdx
  4058f9:	48 21 d1 	andq	%rdx, %rcx
  4058fc:	48 01 d9 	addq	%rbx, %rcx
  4058ff:	48 89 8c 24 f8 00 00 00 	movq	%rcx, 248(%rsp)
  405907:	4c 89 84 24 00 01 00 00 	movq	%r8, 256(%rsp)
  40590f:	48 89 9c 24 18 01 00 00 	movq	%rbx, 280(%rsp)
  405917:	48 89 84 24 20 01 00 00 	movq	%rax, 288(%rsp)
  40591f:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  405927:	48 8d 84 24 a8 00 00 00 	leaq	168(%rsp), %rax
  40592f:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  405934:	48 c7 44 24 10 09 00 00 00 	movq	$9, 16(%rsp)
  40593d:	48 c7 44 24 18 09 00 00 00 	movq	$9, 24(%rsp)
  405946:	e8 e5 13 03 00 	callq	201701 <runtime.concatstrings>
  40594b:	48 8b 44 24 28 	movq	40(%rsp), %rax
  405950:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  405955:	48 89 8c 24 98 00 00 00 	movq	%rcx, 152(%rsp)
  40595d:	48 89 84 24 a0 00 00 00 	movq	%rax, 160(%rsp)
  405965:	48 8d 05 d4 56 05 00 	leaq	349908(%rip), %rax
  40596c:	48 89 04 24 	movq	%rax, (%rsp)
  405970:	48 8d 84 24 98 00 00 00 	leaq	152(%rsp), %rax
  405978:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40597d:	e8 1e 38 00 00 	callq	14366 <runtime.convT2Estring>
  405982:	48 8b 44 24 18 	movq	24(%rsp), %rax
  405987:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  40598c:	48 89 0c 24 	movq	%rcx, (%rsp)
  405990:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  405995:	e8 96 b0 01 00 	callq	110742 <runtime.gopanic>
  40599a:	0f 0b 	ud2
  40599c:	e8 0f a1 01 00 	callq	106767 <runtime.panicslice>
  4059a1:	0f 0b 	ud2
  4059a3:	e8 08 a1 01 00 	callq	106760 <runtime.panicslice>
  4059a8:	0f 0b 	ud2
  4059aa:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  4059b2:	48 8d 05 73 7d 06 00 	leaq	425331(%rip), %rax
  4059b9:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4059be:	48 c7 44 24 10 2e 00 00 00 	movq	$46, 16(%rsp)
  4059c7:	48 89 5c 24 18 	movq	%rbx, 24(%rsp)
  4059cc:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  4059d1:	e8 0a 16 03 00 	callq	202250 <runtime.concatstring2>
  4059d6:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4059db:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  4059e0:	48 89 0c 24 	movq	%rcx, (%rsp)
  4059e4:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4059e9:	e8 e2 b7 01 00 	callq	112610 <runtime.throw>
  4059ee:	0f 0b 	ud2
  4059f0:	48 8d 44 24 48 	leaq	72(%rsp), %rax
  4059f5:	48 89 04 24 	movq	%rax, (%rsp)
  4059f9:	48 8d 05 44 55 06 00 	leaq	415044(%rip), %rax
  405a00:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  405a05:	48 c7 44 24 10 13 00 00 00 	movq	$19, 16(%rsp)
  405a0e:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  405a16:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  405a1b:	48 8b 44 24 40 	movq	64(%rsp), %rax
  405a20:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  405a25:	e8 b6 15 03 00 	callq	202166 <runtime.concatstring2>
  405a2a:	48 8b 44 24 28 	movq	40(%rsp), %rax
  405a2f:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  405a34:	48 89 04 24 	movq	%rax, (%rsp)
  405a38:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  405a3d:	e8 8e b7 01 00 	callq	112526 <runtime.throw>
  405a42:	0f 0b 	ud2
  405a44:	e8 67 a0 01 00 	callq	106599 <runtime.panicslice>
  405a49:	0f 0b 	ud2
  405a4b:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  405a53:	48 8d 05 05 7f 06 00 	leaq	425733(%rip), %rax
  405a5a:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  405a5f:	48 c7 44 24 10 31 00 00 00 	movq	$49, 16(%rsp)
  405a68:	48 89 74 24 18 	movq	%rsi, 24(%rsp)
  405a6d:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  405a72:	e8 69 15 03 00 	callq	202089 <runtime.concatstring2>
  405a77:	48 8b 44 24 28 	movq	40(%rsp), %rax
  405a7c:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  405a81:	48 89 04 24 	movq	%rax, (%rsp)
  405a85:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  405a8a:	e8 41 b7 01 00 	callq	112449 <runtime.throw>
  405a8f:	0f 0b 	ud2
  405a91:	e8 1a a0 01 00 	callq	106522 <runtime.panicslice>
  405a96:	0f 0b 	ud2
  405a98:	48 8d 44 24 68 	leaq	104(%rsp), %rax
  405a9d:	48 89 04 24 	movq	%rax, (%rsp)
  405aa1:	48 8d 05 89 54 06 00 	leaq	414857(%rip), %rax
  405aa8:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  405aad:	48 c7 44 24 10 13 00 00 00 	movq	$19, 16(%rsp)
  405ab6:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  405abe:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  405ac3:	48 8b 44 24 40 	movq	64(%rsp), %rax
  405ac8:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  405acd:	e8 0e 15 03 00 	callq	201998 <runtime.concatstring2>
  405ad2:	48 8b 44 24 28 	movq	40(%rsp), %rax
  405ad7:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  405adc:	48 89 04 24 	movq	%rax, (%rsp)
  405ae0:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  405ae5:	e8 e6 b6 01 00 	callq	112358 <runtime.throw>
  405aea:	0f 0b 	ud2
  405aec:	e8 7f ea 03 00 	callq	256639 <runtime.morestack_noctxt>
  405af1:	e9 fa fb ff ff 	jmp	-1030 <runtime.panicwrap>
  405af6:	cc 	int3
  405af7:	cc 	int3
  405af8:	cc 	int3
  405af9:	cc 	int3
  405afa:	cc 	int3
  405afb:	cc 	int3
  405afc:	cc 	int3
  405afd:	cc 	int3
  405afe:	cc 	int3
  405aff:	cc 	int3

runtime.float64frombits:
  405b00:	f2 0f 10 44 24 08 	movsd	8(%rsp), %xmm0
  405b06:	f2 0f 11 44 24 10 	movsd	%xmm0, 16(%rsp)
  405b0c:	c3 	retq
  405b0d:	cc 	int3
  405b0e:	cc 	int3
  405b0f:	cc 	int3

runtime.memhash:
  405b10:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  405b19:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  405b1d:	0f 86 f1 02 00 00 	jbe	753 <runtime.memhash+0x304>
  405b23:	48 83 ec 28 	subq	$40, %rsp
  405b27:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  405b2c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  405b31:	0f b6 05 86 dd 0b 00 	movzbl	777606(%rip), %eax
  405b38:	84 c0 	testb	%al, %al
  405b3a:	0f 85 9e 02 00 00 	jne	670 <runtime.memhash+0x2ce>
  405b40:	48 8b 05 d9 de 0b 00 	movq	777945(%rip), %rax
  405b47:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  405b4c:	48 0f af c1 	imulq	%rcx, %rax
  405b50:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  405b55:	48 01 d0 	addq	%rdx, %rax
  405b58:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  405b5d:	e9 b5 00 00 00 	jmp	181 <runtime.memhash+0x107>
  405b62:	4c 8d 4b 08 	leaq	8(%rbx), %r9
  405b66:	41 84 01 	testb	%al, (%r9)
  405b69:	4c 8d 4b 10 	leaq	16(%rbx), %r9
  405b6d:	41 84 01 	testb	%al, (%r9)
  405b70:	4c 8d 4b 18 	leaq	24(%rbx), %r9
  405b74:	41 84 01 	testb	%al, (%r9)
  405b77:	4c 8b 0b 	movq	(%rbx), %r9
  405b7a:	4c 31 c8 	xorq	%r9, %rax
  405b7d:	49 b9 41 15 f0 79 90 ec 38 ea 	movabsq	$-1569244364873394879, %r9
  405b87:	49 0f af c1 	imulq	%r9, %rax
  405b8b:	48 c1 c0 1f 	rolq	$31, %rax
  405b8f:	49 ba 99 13 da 96 0d a3 23 27 	movabsq	$2820277070424839065, %r10
  405b99:	49 0f af c2 	imulq	%r10, %rax
  405b9d:	41 bb 08 00 00 00 	movl	$8, %r11d
  405ba3:	4e 8b 24 1b 	movq	(%rbx,%r11), %r12
  405ba7:	4c 31 e6 	xorq	%r12, %rsi
  405baa:	49 0f af f2 	imulq	%r10, %rsi
  405bae:	48 c1 c6 1f 	rolq	$31, %rsi
  405bb2:	49 bc d7 d2 76 f8 ad 8e cf 83 	movabsq	$-8948777056712863017, %r12
  405bbc:	49 0f af f4 	imulq	%r12, %rsi
  405bc0:	41 bd 10 00 00 00 	movl	$16, %r13d
  405bc6:	4e 8b 34 2b 	movq	(%rbx,%r13), %r14
  405bca:	4c 31 f7 	xorq	%r14, %rdi
  405bcd:	49 0f af fc 	imulq	%r12, %rdi
  405bd1:	48 c1 c7 1f 	rolq	$31, %rdi
  405bd5:	49 be 93 f6 3d 64 7b c2 cf db 	movabsq	$-2607651824005679469, %r14
  405bdf:	49 0f af fe 	imulq	%r14, %rdi
  405be3:	41 bf 18 00 00 00 	movl	$24, %r15d
  405be9:	4e 8b 3c 3b 	movq	(%rbx,%r15), %r15
  405bed:	4d 31 f8 	xorq	%r15, %r8
  405bf0:	4d 0f af c6 	imulq	%r14, %r8
  405bf4:	49 c1 c0 1f 	rolq	$31, %r8
  405bf8:	4d 0f af c1 	imulq	%r9, %r8
  405bfc:	48 83 c1 e0 	addq	$-32, %rcx
  405c00:	48 83 c3 20 	addq	$32, %rbx
  405c04:	48 83 f9 20 	cmpq	$32, %rcx
  405c08:	0f 83 54 ff ff ff 	jae	-172 <runtime.memhash+0x52>
  405c0e:	48 31 f0 	xorq	%rsi, %rax
  405c11:	48 31 f8 	xorq	%rdi, %rax
  405c14:	4c 31 c0 	xorq	%r8, %rax
  405c17:	48 85 c9 	testq	%rcx, %rcx
  405c1a:	0f 84 bf 00 00 00 	je	191 <runtime.memhash+0x1cf>
  405c20:	48 83 f9 04 	cmpq	$4, %rcx
  405c24:	0f 82 60 01 00 00 	jb	352 <runtime.memhash+0x27a>
  405c2a:	48 83 f9 08 	cmpq	$8, %rcx
  405c2e:	0f 86 1b 01 00 00 	jbe	283 <runtime.memhash+0x23f>
  405c34:	48 83 f9 10 	cmpq	$16, %rcx
  405c38:	0f 86 d2 00 00 00 	jbe	210 <runtime.memhash+0x200>
  405c3e:	48 83 f9 20 	cmpq	$32, %rcx
  405c42:	76 23 	jbe	35 <runtime.memhash+0x157>
  405c44:	48 8b 35 dd dd 0b 00 	movq	777693(%rip), %rsi
  405c4b:	48 0f af f2 	imulq	%rdx, %rsi
  405c4f:	48 8b 3d da dd 0b 00 	movq	777690(%rip), %rdi
  405c56:	48 0f af fa 	imulq	%rdx, %rdi
  405c5a:	4c 8b 05 d7 dd 0b 00 	movq	777687(%rip), %r8
  405c61:	4c 0f af c2 	imulq	%rdx, %r8
  405c65:	eb 9d 	jmp	-99 <runtime.memhash+0xf4>
  405c67:	48 8d 53 08 	leaq	8(%rbx), %rdx
  405c6b:	48 89 de 	movq	%rbx, %rsi
  405c6e:	48 8d 7c 19 f0 	leaq	-16(%rcx,%rbx), %rdi
  405c73:	48 8d 4c 19 f8 	leaq	-8(%rcx,%rbx), %rcx
  405c78:	48 8b 1e 	movq	(%rsi), %rbx
  405c7b:	48 31 d8 	xorq	%rbx, %rax
  405c7e:	48 bb 41 15 f0 79 90 ec 38 ea 	movabsq	$-1569244364873394879, %rbx
  405c88:	48 0f af d8 	imulq	%rax, %rbx
  405c8c:	48 c1 c3 1f 	rolq	$31, %rbx
  405c90:	48 b8 99 13 da 96 0d a3 23 27 	movabsq	$2820277070424839065, %rax
  405c9a:	48 0f af c3 	imulq	%rbx, %rax
  405c9e:	48 33 02 	xorq	(%rdx), %rax
  405ca1:	48 ba 41 15 f0 79 90 ec 38 ea 	movabsq	$-1569244364873394879, %rdx
  405cab:	48 0f af c2 	imulq	%rdx, %rax
  405caf:	48 c1 c0 1f 	rolq	$31, %rax
  405cb3:	48 bb 99 13 da 96 0d a3 23 27 	movabsq	$2820277070424839065, %rbx
  405cbd:	48 0f af c3 	imulq	%rbx, %rax
  405cc1:	48 33 07 	xorq	(%rdi), %rax
  405cc4:	48 0f af c2 	imulq	%rdx, %rax
  405cc8:	48 c1 c0 1f 	rolq	$31, %rax
  405ccc:	48 0f af c3 	imulq	%rbx, %rax
  405cd0:	48 33 01 	xorq	(%rcx), %rax
  405cd3:	48 0f af c2 	imulq	%rdx, %rax
  405cd7:	48 c1 c0 1f 	rolq	$31, %rax
  405cdb:	48 0f af c3 	imulq	%rbx, %rax
  405cdf:	48 89 c1 	movq	%rax, %rcx
  405ce2:	48 c1 e8 1d 	shrq	$29, %rax
  405ce6:	48 31 c1 	xorq	%rax, %rcx
  405ce9:	48 b8 d7 d2 76 f8 ad 8e cf 83 	movabsq	$-8948777056712863017, %rax
  405cf3:	48 0f af c8 	imulq	%rax, %rcx
  405cf7:	48 89 c8 	movq	%rcx, %rax
  405cfa:	48 c1 e9 20 	shrq	$32, %rcx
  405cfe:	48 31 c1 	xorq	%rax, %rcx
  405d01:	48 89 4c 24 48 	movq	%rcx, 72(%rsp)
  405d06:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  405d0b:	48 83 c4 28 	addq	$40, %rsp
  405d0f:	c3 	retq
  405d10:	48 89 da 	movq	%rbx, %rdx
  405d13:	48 8d 4c 19 f8 	leaq	-8(%rcx,%rbx), %rcx
  405d18:	48 8b 12 	movq	(%rdx), %rdx
  405d1b:	48 31 d0 	xorq	%rdx, %rax
  405d1e:	48 ba 41 15 f0 79 90 ec 38 ea 	movabsq	$-1569244364873394879, %rdx
  405d28:	48 0f af c2 	imulq	%rdx, %rax
  405d2c:	48 c1 c0 1f 	rolq	$31, %rax
  405d30:	48 bb 99 13 da 96 0d a3 23 27 	movabsq	$2820277070424839065, %rbx
  405d3a:	48 0f af c3 	imulq	%rbx, %rax
  405d3e:	48 33 01 	xorq	(%rcx), %rax
  405d41:	48 0f af c2 	imulq	%rdx, %rax
  405d45:	48 c1 c0 1f 	rolq	$31, %rax
  405d49:	48 0f af c3 	imulq	%rbx, %rax
  405d4d:	eb 90 	jmp	-112 <runtime.memhash+0x1cf>
  405d4f:	48 89 da 	movq	%rbx, %rdx
  405d52:	48 8d 4c 19 fc 	leaq	-4(%rcx,%rbx), %rcx
  405d57:	8b 12 	movl	(%rdx), %edx
  405d59:	48 31 d0 	xorq	%rdx, %rax
  405d5c:	8b 09 	movl	(%rcx), %ecx
  405d5e:	48 c1 e1 20 	shlq	$32, %rcx
  405d62:	48 31 c8 	xorq	%rcx, %rax
  405d65:	48 b9 41 15 f0 79 90 ec 38 ea 	movabsq	$-1569244364873394879, %rcx
  405d6f:	48 0f af c1 	imulq	%rcx, %rax
  405d73:	48 c1 c0 1f 	rolq	$31, %rax
  405d77:	48 b9 99 13 da 96 0d a3 23 27 	movabsq	$2820277070424839065, %rcx
  405d81:	48 0f af c1 	imulq	%rcx, %rax
  405d85:	e9 55 ff ff ff 	jmp	-171 <runtime.memhash+0x1cf>
  405d8a:	48 89 ca 	movq	%rcx, %rdx
  405d8d:	48 d1 e9 	shrq	%rcx
  405d90:	48 8d 34 0b 	leaq	(%rbx,%rcx), %rsi
  405d94:	84 06 	testb	%al, (%rsi)
  405d96:	48 89 de 	movq	%rbx, %rsi
  405d99:	48 8d 54 1a ff 	leaq	-1(%rdx,%rbx), %rdx
  405d9e:	0f b6 1e 	movzbl	(%rsi), %ebx
  405da1:	48 31 d8 	xorq	%rbx, %rax
  405da4:	0f b6 0c 0e 	movzbl	(%rsi,%rcx), %ecx
  405da8:	48 c1 e1 08 	shlq	$8, %rcx
  405dac:	48 31 c8 	xorq	%rcx, %rax
  405daf:	0f b6 0a 	movzbl	(%rdx), %ecx
  405db2:	48 c1 e1 10 	shlq	$16, %rcx
  405db6:	48 31 c8 	xorq	%rcx, %rax
  405db9:	48 b9 41 15 f0 79 90 ec 38 ea 	movabsq	$-1569244364873394879, %rcx
  405dc3:	48 0f af c1 	imulq	%rcx, %rax
  405dc7:	48 c1 c0 1f 	rolq	$31, %rax
  405dcb:	48 b9 99 13 da 96 0d a3 23 27 	movabsq	$2820277070424839065, %rcx
  405dd5:	48 0f af c1 	imulq	%rcx, %rax
  405dd9:	e9 01 ff ff ff 	jmp	-255 <runtime.memhash+0x1cf>
  405dde:	48 8b 44 24 30 	movq	48(%rsp), %rax
  405de3:	48 89 04 24 	movq	%rax, (%rsp)
  405de7:	48 8b 44 24 38 	movq	56(%rsp), %rax
  405dec:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  405df1:	48 8b 44 24 40 	movq	64(%rsp), %rax
  405df6:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  405dfb:	e8 10 ff 03 00 	callq	261904 <runtime.aeshash>
  405e00:	48 8b 44 24 18 	movq	24(%rsp), %rax
  405e05:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  405e0a:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  405e0f:	48 83 c4 28 	addq	$40, %rsp
  405e13:	c3 	retq
  405e14:	e8 57 e7 03 00 	callq	255831 <runtime.morestack_noctxt>
  405e19:	e9 f2 fc ff ff 	jmp	-782 <runtime.memhash>
  405e1e:	cc 	int3
  405e1f:	cc 	int3

runtime.memhash32:
  405e20:	48 8b 05 f9 db 0b 00 	movq	777209(%rip), %rax
  405e27:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  405e2c:	8b 09 	movl	(%rcx), %ecx
  405e2e:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  405e33:	48 8d 04 82 	leaq	(%rdx,%rax,4), %rax
  405e37:	48 31 c8 	xorq	%rcx, %rax
  405e3a:	48 c1 e1 20 	shlq	$32, %rcx
  405e3e:	48 31 c1 	xorq	%rax, %rcx
  405e41:	48 b8 41 15 f0 79 90 ec 38 ea 	movabsq	$-1569244364873394879, %rax
  405e4b:	48 0f af c1 	imulq	%rcx, %rax
  405e4f:	48 c1 c0 1f 	rolq	$31, %rax
  405e53:	48 b9 99 13 da 96 0d a3 23 27 	movabsq	$2820277070424839065, %rcx
  405e5d:	48 0f af c8 	imulq	%rax, %rcx
  405e61:	48 89 c8 	movq	%rcx, %rax
  405e64:	48 c1 e9 1d 	shrq	$29, %rcx
  405e68:	48 31 c8 	xorq	%rcx, %rax
  405e6b:	48 b9 d7 d2 76 f8 ad 8e cf 83 	movabsq	$-8948777056712863017, %rcx
  405e75:	48 0f af c8 	imulq	%rax, %rcx
  405e79:	48 89 c8 	movq	%rcx, %rax
  405e7c:	48 c1 e9 20 	shrq	$32, %rcx
  405e80:	48 31 c8 	xorq	%rcx, %rax
  405e83:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  405e88:	c3 	retq
  405e89:	cc 	int3
  405e8a:	cc 	int3
  405e8b:	cc 	int3
  405e8c:	cc 	int3
  405e8d:	cc 	int3
  405e8e:	cc 	int3
  405e8f:	cc 	int3

runtime.memhash64:
  405e90:	48 8b 44 24 08 	movq	8(%rsp), %rax
  405e95:	48 8d 48 04 	leaq	4(%rax), %rcx
  405e99:	84 01 	testb	%al, (%rcx)
  405e9b:	48 8b 0d 7e db 0b 00 	movq	777086(%rip), %rcx
  405ea2:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  405ea7:	48 8d 0c ca 	leaq	(%rdx,%rcx,8), %rcx
  405eab:	48 33 08 	xorq	(%rax), %rcx
  405eae:	48 b8 41 15 f0 79 90 ec 38 ea 	movabsq	$-1569244364873394879, %rax
  405eb8:	48 0f af c1 	imulq	%rcx, %rax
  405ebc:	48 c1 c0 1f 	rolq	$31, %rax
  405ec0:	48 b9 99 13 da 96 0d a3 23 27 	movabsq	$2820277070424839065, %rcx
  405eca:	48 0f af c8 	imulq	%rax, %rcx
  405ece:	48 89 c8 	movq	%rcx, %rax
  405ed1:	48 c1 e9 1d 	shrq	$29, %rcx
  405ed5:	48 31 c8 	xorq	%rcx, %rax
  405ed8:	48 b9 d7 d2 76 f8 ad 8e cf 83 	movabsq	$-8948777056712863017, %rcx
  405ee2:	48 0f af c8 	imulq	%rax, %rcx
  405ee6:	48 89 c8 	movq	%rcx, %rax
  405ee9:	48 c1 e9 20 	shrq	$32, %rcx
  405eed:	48 31 c1 	xorq	%rax, %rcx
  405ef0:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  405ef5:	c3 	retq
  405ef6:	cc 	int3
  405ef7:	cc 	int3
  405ef8:	cc 	int3
  405ef9:	cc 	int3
  405efa:	cc 	int3
  405efb:	cc 	int3
  405efc:	cc 	int3
  405efd:	cc 	int3
  405efe:	cc 	int3
  405eff:	cc 	int3

runtime.(*hmap).incrnoverflow:
  405f00:	48 8b 44 24 08 	movq	8(%rsp), %rax
  405f05:	0f b6 50 09 	movzbl	9(%rax), %edx
  405f09:	80 fa 10 	cmpb	$16, %dl
  405f0c:	72 69 	jb	105 <runtime.(*hmap).incrnoverflow+0x77>
  405f0e:	64 48 8b 1c 25 f8 ff ff ff 	movq	%fs:-8, %rbx
  405f17:	48 8b 5b 30 	movq	48(%rbx), %rbx
  405f1b:	8b b3 20 01 00 00 	movl	288(%rbx), %esi
  405f21:	8b bb 24 01 00 00 	movl	292(%rbx), %edi
  405f27:	89 bb 20 01 00 00 	movl	%edi, 288(%rbx)
  405f2d:	41 89 f0 	movl	%esi, %r8d
  405f30:	c1 e6 11 	shll	$17, %esi
  405f33:	44 31 c6 	xorl	%r8d, %esi
  405f36:	41 89 f8 	movl	%edi, %r8d
  405f39:	31 f7 	xorl	%esi, %edi
  405f3b:	c1 ee 07 	shrl	$7, %esi
  405f3e:	31 fe 	xorl	%edi, %esi
  405f40:	44 89 c7 	movl	%r8d, %edi
  405f43:	41 c1 e8 10 	shrl	$16, %r8d
  405f47:	41 31 f0 	xorl	%esi, %r8d
  405f4a:	44 89 83 24 01 00 00 	movl	%r8d, 292(%rbx)
  405f51:	8d 4a f1 	leal	-15(%rdx), %ecx
  405f54:	ba 01 00 00 00 	movl	$1, %edx
  405f59:	d3 e2 	shll	%cl, %edx
  405f5b:	80 f9 20 	cmpb	$32, %cl
  405f5e:	19 db 	sbbl	%ebx, %ebx
  405f60:	21 da 	andl	%ebx, %edx
  405f62:	ff ca 	decl	%edx
  405f64:	41 8d 1c 38 	leal	(%r8,%rdi), %ebx
  405f68:	85 da 	testl	%ebx, %edx
  405f6a:	75 0a 	jne	10 <runtime.(*hmap).incrnoverflow+0x76>
  405f6c:	0f b7 48 0a 	movzwl	10(%rax), %ecx
  405f70:	ff c1 	incl	%ecx
  405f72:	66 89 48 0a 	movw	%cx, 10(%rax)
  405f76:	c3 	retq
  405f77:	0f b7 48 0a 	movzwl	10(%rax), %ecx
  405f7b:	ff c1 	incl	%ecx
  405f7d:	66 89 48 0a 	movw	%cx, 10(%rax)
  405f81:	c3 	retq
  405f82:	cc 	int3
  405f83:	cc 	int3
  405f84:	cc 	int3
  405f85:	cc 	int3
  405f86:	cc 	int3
  405f87:	cc 	int3
  405f88:	cc 	int3
  405f89:	cc 	int3
  405f8a:	cc 	int3
  405f8b:	cc 	int3
  405f8c:	cc 	int3
  405f8d:	cc 	int3
  405f8e:	cc 	int3
  405f8f:	cc 	int3

runtime.(*hmap).newoverflow:
  405f90:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  405f99:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  405f9d:	0f 86 c5 02 00 00 	jbe	709 <runtime.(*hmap).newoverflow+0x2d8>
  405fa3:	48 83 ec 60 	subq	$96, %rsp
  405fa7:	48 89 6c 24 58 	movq	%rbp, 88(%rsp)
  405fac:	48 8d 6c 24 58 	leaq	88(%rsp), %rbp
  405fb1:	48 8b 4c 24 68 	movq	104(%rsp), %rcx
  405fb6:	48 8b 51 28 	movq	40(%rcx), %rdx
  405fba:	48 8d 59 28 	leaq	40(%rcx), %rbx
  405fbe:	48 89 5c 24 50 	movq	%rbx, 80(%rsp)
  405fc3:	48 85 d2 	testq	%rdx, %rdx
  405fc6:	0f 84 7b 02 00 00 	je	635 <runtime.(*hmap).newoverflow+0x2b7>
  405fcc:	48 8b 72 10 	movq	16(%rdx), %rsi
  405fd0:	48 8d 7a 10 	leaq	16(%rdx), %rdi
  405fd4:	48 85 f6 	testq	%rsi, %rsi
  405fd7:	0f 84 6a 02 00 00 	je	618 <runtime.(*hmap).newoverflow+0x2b7>
  405fdd:	4c 8b 44 24 70 	movq	112(%rsp), %r8
  405fe2:	45 0f b7 48 54 	movzwl	84(%r8), %r9d
  405fe7:	49 89 f2 	movq	%rsi, %r10
  405fea:	4a 8d 74 0e f8 	leaq	-8(%rsi,%r9), %rsi
  405fef:	41 84 00 	testb	%al, (%r8)
  405ff2:	4c 8b 1e 	movq	(%rsi), %r11
  405ff5:	4d 85 db 	testq	%r11, %r11
  405ff8:	0f 84 28 02 00 00 	je	552 <runtime.(*hmap).newoverflow+0x296>
  405ffe:	8b 15 0c da 0b 00 	movl	776716(%rip), %edx
  406004:	85 d2 	testl	%edx, %edx
  406006:	0f 85 0b 02 00 00 	jne	523 <runtime.(*hmap).newoverflow+0x287>
  40600c:	48 c7 06 00 00 00 00 	movq	$0, (%rsi)
  406013:	48 8b 51 28 	movq	40(%rcx), %rdx
  406017:	84 02 	testb	%al, (%rdx)
  406019:	8b 35 f1 d9 0b 00 	movl	776689(%rip), %esi
  40601f:	48 8d 7a 10 	leaq	16(%rdx), %rdi
  406023:	85 f6 	testl	%esi, %esi
  406025:	0f 85 e0 01 00 00 	jne	480 <runtime.(*hmap).newoverflow+0x27b>
  40602b:	48 c7 42 10 00 00 00 00 	movq	$0, 16(%rdx)
  406033:	4c 89 54 24 40 	movq	%r10, 64(%rsp)
  406038:	48 89 0c 24 	movq	%rcx, (%rsp)
  40603c:	e8 bf fe ff ff 	callq	-321 <runtime.(*hmap).incrnoverflow>
  406041:	48 8b 44 24 70 	movq	112(%rsp), %rax
  406046:	48 8b 48 40 	movq	64(%rax), %rcx
  40604a:	0f b6 49 17 	movzbl	23(%rcx), %ecx
  40604e:	f6 c1 80 	testb	$-128, %cl
  406051:	0f 84 aa 01 00 00 	je	426 <runtime.(*hmap).newoverflow+0x271>
  406057:	48 8b 4c 24 68 	movq	104(%rsp), %rcx
  40605c:	48 8b 51 28 	movq	40(%rcx), %rdx
  406060:	48 85 d2 	testq	%rdx, %rdx
  406063:	0f 84 4f 01 00 00 	je	335 <runtime.(*hmap).newoverflow+0x228>
  406069:	48 8b 51 28 	movq	40(%rcx), %rdx
  40606d:	48 8b 12 	movq	(%rdx), %rdx
  406070:	48 85 d2 	testq	%rdx, %rdx
  406073:	0f 84 f5 00 00 00 	je	245 <runtime.(*hmap).newoverflow+0x1de>
  406079:	48 8b 49 28 	movq	40(%rcx), %rcx
  40607d:	48 8b 11 	movq	(%rcx), %rdx
  406080:	84 01 	testb	%al, (%rcx)
  406082:	48 8b 4a 10 	movq	16(%rdx), %rcx
  406086:	48 8b 5a 08 	movq	8(%rdx), %rbx
  40608a:	48 8b 32 	movq	(%rdx), %rsi
  40608d:	4c 8d 43 01 	leaq	1(%rbx), %r8
  406091:	49 39 c8 	cmpq	%rcx, %r8
  406094:	7f 70 	jg	112 <runtime.(*hmap).newoverflow+0x176>
  406096:	48 8d 4b 01 	leaq	1(%rbx), %rcx
  40609a:	48 89 4a 08 	movq	%rcx, 8(%rdx)
  40609e:	8b 0d 6c d9 0b 00 	movl	776556(%rip), %ecx
  4060a4:	48 8d 3c de 	leaq	(%rsi,%rbx,8), %rdi
  4060a8:	85 c9 	testl	%ecx, %ecx
  4060aa:	75 42 	jne	66 <runtime.(*hmap).newoverflow+0x15e>
  4060ac:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  4060b1:	48 89 0c de 	movq	%rcx, (%rsi,%rbx,8)
  4060b5:	0f b7 50 54 	movzwl	84(%rax), %edx
  4060b9:	48 8b 5c 24 78 	movq	120(%rsp), %rbx
  4060be:	48 8d 7c 13 f8 	leaq	-8(%rbx,%rdx), %rdi
  4060c3:	84 07 	testb	%al, (%rdi)
  4060c5:	8b 15 45 d9 0b 00 	movl	776517(%rip), %edx
  4060cb:	85 d2 	testl	%edx, %edx
  4060cd:	75 15 	jne	21 <runtime.(*hmap).newoverflow+0x154>
  4060cf:	48 89 0f 	movq	%rcx, (%rdi)
  4060d2:	48 89 8c 24 80 00 00 00 	movq	%rcx, 128(%rsp)
  4060da:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  4060df:	48 83 c4 60 	addq	$96, %rsp
  4060e3:	c3 	retq
  4060e4:	48 89 c8 	movq	%rcx, %rax
  4060e7:	e8 b4 07 04 00 	callq	264116 <runtime.gcWriteBarrier>
  4060ec:	eb e4 	jmp	-28 <runtime.(*hmap).newoverflow+0x142>
  4060ee:	48 89 c1 	movq	%rax, %rcx
  4060f1:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4060f6:	e8 a5 07 04 00 	callq	264101 <runtime.gcWriteBarrier>
  4060fb:	48 89 c2 	movq	%rax, %rdx
  4060fe:	48 89 c8 	movq	%rcx, %rax
  406101:	48 89 d1 	movq	%rdx, %rcx
  406104:	eb af 	jmp	-81 <runtime.(*hmap).newoverflow+0x125>
  406106:	48 89 54 24 48 	movq	%rdx, 72(%rsp)
  40610b:	48 8d 05 0e 5c 05 00 	leaq	351246(%rip), %rax
  406112:	48 89 04 24 	movq	%rax, (%rsp)
  406116:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  40611b:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  406120:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  406125:	4c 89 44 24 20 	movq	%r8, 32(%rsp)
  40612a:	e8 31 d7 02 00 	callq	186161 <runtime.growslice>
  40612f:	48 8b 44 24 28 	movq	40(%rsp), %rax
  406134:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  406139:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  40613e:	48 8b 7c 24 48 	movq	72(%rsp), %rdi
  406143:	48 89 57 10 	movq	%rdx, 16(%rdi)
  406147:	8b 15 c3 d8 0b 00 	movl	776387(%rip), %edx
  40614d:	85 d2 	testl	%edx, %edx
  40614f:	75 16 	jne	22 <runtime.(*hmap).newoverflow+0x1d7>
  406151:	48 89 07 	movq	%rax, (%rdi)
  406154:	48 89 fa 	movq	%rdi, %rdx
  406157:	48 89 cb 	movq	%rcx, %rbx
  40615a:	48 89 c6 	movq	%rax, %rsi
  40615d:	48 8b 44 24 70 	movq	112(%rsp), %rax
  406162:	e9 2f ff ff ff 	jmp	-209 <runtime.(*hmap).newoverflow+0x106>
  406167:	e8 34 07 04 00 	callq	263988 <runtime.gcWriteBarrier>
  40616c:	eb e6 	jmp	-26 <runtime.(*hmap).newoverflow+0x1c4>
  40616e:	48 8d 05 2b f8 04 00 	leaq	325675(%rip), %rax
  406175:	48 89 04 24 	movq	%rax, (%rsp)
  406179:	e8 a2 4f 00 00 	callq	20386 <runtime.newobject>
  40617e:	48 8b 44 24 68 	movq	104(%rsp), %rax
  406183:	48 8b 78 28 	movq	40(%rax), %rdi
  406187:	84 07 	testb	%al, (%rdi)
  406189:	8b 0d 81 d8 0b 00 	movl	776321(%rip), %ecx
  40618f:	48 8b 54 24 08 	movq	8(%rsp), %rdx
  406194:	85 c9 	testl	%ecx, %ecx
  406196:	75 10 	jne	16 <runtime.(*hmap).newoverflow+0x218>
  406198:	48 89 17 	movq	%rdx, (%rdi)
  40619b:	48 89 c1 	movq	%rax, %rcx
  40619e:	48 8b 44 24 70 	movq	112(%rsp), %rax
  4061a3:	e9 d1 fe ff ff 	jmp	-303 <runtime.(*hmap).newoverflow+0xe9>
  4061a8:	48 89 c1 	movq	%rax, %rcx
  4061ab:	48 89 d0 	movq	%rdx, %rax
  4061ae:	e8 ed 06 04 00 	callq	263917 <runtime.gcWriteBarrier>
  4061b3:	48 89 c8 	movq	%rcx, %rax
  4061b6:	eb e3 	jmp	-29 <runtime.(*hmap).newoverflow+0x20b>
  4061b8:	48 8d 05 01 9d 05 00 	leaq	367873(%rip), %rax
  4061bf:	48 89 04 24 	movq	%rax, (%rsp)
  4061c3:	e8 58 4f 00 00 	callq	20312 <runtime.newobject>
  4061c8:	8b 05 42 d8 0b 00 	movl	776258(%rip), %eax
  4061ce:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  4061d3:	85 c0 	testl	%eax, %eax
  4061d5:	75 16 	jne	22 <runtime.(*hmap).newoverflow+0x25d>
  4061d7:	48 8b 54 24 68 	movq	104(%rsp), %rdx
  4061dc:	48 89 4a 28 	movq	%rcx, 40(%rdx)
  4061e0:	48 8b 44 24 70 	movq	112(%rsp), %rax
  4061e5:	48 89 d1 	movq	%rdx, %rcx
  4061e8:	e9 7c fe ff ff 	jmp	-388 <runtime.(*hmap).newoverflow+0xd9>
  4061ed:	48 8b 7c 24 50 	movq	80(%rsp), %rdi
  4061f2:	48 89 c8 	movq	%rcx, %rax
  4061f5:	e8 a6 06 04 00 	callq	263846 <runtime.gcWriteBarrier>
  4061fa:	48 8b 54 24 68 	movq	104(%rsp), %rdx
  4061ff:	eb df 	jmp	-33 <runtime.(*hmap).newoverflow+0x250>
  406201:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  406206:	e9 aa fe ff ff 	jmp	-342 <runtime.(*hmap).newoverflow+0x125>
  40620b:	31 c0 	xorl	%eax, %eax
  40620d:	e8 8e 06 04 00 	callq	263822 <runtime.gcWriteBarrier>
  406212:	e9 1c fe ff ff 	jmp	-484 <runtime.(*hmap).newoverflow+0xa3>
  406217:	48 89 f7 	movq	%rsi, %rdi
  40621a:	31 c0 	xorl	%eax, %eax
  40621c:	e8 7f 06 04 00 	callq	263807 <runtime.gcWriteBarrier>
  406221:	e9 ed fd ff ff 	jmp	-531 <runtime.(*hmap).newoverflow+0x83>
  406226:	8b 35 e4 d7 0b 00 	movl	776164(%rip), %esi
  40622c:	4b 8d 04 0a 	leaq	(%r10,%r9), %rax
  406230:	85 f6 	testl	%esi, %esi
  406232:	75 09 	jne	9 <runtime.(*hmap).newoverflow+0x2ad>
  406234:	48 89 42 10 	movq	%rax, 16(%rdx)
  406238:	e9 f6 fd ff ff 	jmp	-522 <runtime.(*hmap).newoverflow+0xa3>
  40623d:	e8 5e 06 04 00 	callq	263774 <runtime.gcWriteBarrier>
  406242:	e9 ec fd ff ff 	jmp	-532 <runtime.(*hmap).newoverflow+0xa3>
  406247:	48 8b 44 24 70 	movq	112(%rsp), %rax
  40624c:	48 8b 48 40 	movq	64(%rax), %rcx
  406250:	48 89 0c 24 	movq	%rcx, (%rsp)
  406254:	e8 c7 4e 00 00 	callq	20167 <runtime.newobject>
  406259:	4c 8b 54 24 08 	movq	8(%rsp), %r10
  40625e:	48 8b 4c 24 68 	movq	104(%rsp), %rcx
  406263:	e9 cb fd ff ff 	jmp	-565 <runtime.(*hmap).newoverflow+0xa3>
  406268:	e8 03 e3 03 00 	callq	254723 <runtime.morestack_noctxt>
  40626d:	e9 1e fd ff ff 	jmp	-738 <runtime.(*hmap).newoverflow>
  406272:	cc 	int3
  406273:	cc 	int3
  406274:	cc 	int3
  406275:	cc 	int3
  406276:	cc 	int3
  406277:	cc 	int3
  406278:	cc 	int3
  406279:	cc 	int3
  40627a:	cc 	int3
  40627b:	cc 	int3
  40627c:	cc 	int3
  40627d:	cc 	int3
  40627e:	cc 	int3
  40627f:	cc 	int3

runtime.makemap:
  406280:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  406289:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40628d:	0f 86 d1 01 00 00 	jbe	465 <runtime.makemap+0x1e4>
  406293:	48 83 ec 38 	subq	$56, %rsp
  406297:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  40629c:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  4062a1:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  4062a6:	48 85 d2 	testq	%rdx, %rdx
  4062a9:	0f 8d 70 01 00 00 	jge	368 <runtime.makemap+0x19f>
  4062af:	31 c0 	xorl	%eax, %eax
  4062b1:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  4062b6:	48 85 d2 	testq	%rdx, %rdx
  4062b9:	0f 84 3a 01 00 00 	je	314 <runtime.makemap+0x179>
  4062bf:	64 48 8b 1c 25 f8 ff ff ff 	movq	%fs:-8, %rbx
  4062c8:	48 8b 5b 30 	movq	48(%rbx), %rbx
  4062cc:	8b b3 20 01 00 00 	movl	288(%rbx), %esi
  4062d2:	8b bb 24 01 00 00 	movl	292(%rbx), %edi
  4062d8:	89 bb 20 01 00 00 	movl	%edi, 288(%rbx)
  4062de:	41 89 f0 	movl	%esi, %r8d
  4062e1:	c1 e6 11 	shll	$17, %esi
  4062e4:	44 31 c6 	xorl	%r8d, %esi
  4062e7:	41 89 f8 	movl	%edi, %r8d
  4062ea:	31 f7 	xorl	%esi, %edi
  4062ec:	c1 ee 07 	shrl	$7, %esi
  4062ef:	31 fe 	xorl	%edi, %esi
  4062f1:	44 89 c7 	movl	%r8d, %edi
  4062f4:	41 c1 e8 10 	shrl	$16, %r8d
  4062f8:	41 31 f0 	xorl	%esi, %r8d
  4062fb:	44 89 83 24 01 00 00 	movl	%r8d, 292(%rbx)
  406302:	42 8d 1c 07 	leal	(%rdi,%r8), %ebx
  406306:	89 5a 0c 	movl	%ebx, 12(%rdx)
  406309:	31 c9 	xorl	%ecx, %ecx
  40630b:	eb 02 	jmp	2 <runtime.makemap+0x8f>
  40630d:	ff c1 	incl	%ecx
  40630f:	48 83 f8 08 	cmpq	$8, %rax
  406313:	0f 8e d9 00 00 00 	jle	217 <runtime.makemap+0x172>
  406319:	bb 01 00 00 00 	movl	$1, %ebx
  40631e:	48 d3 e3 	shlq	%cl, %rbx
  406321:	48 d1 eb 	shrq	%rbx
  406324:	48 8d 34 5b 	leaq	(%rbx,%rbx,2), %rsi
  406328:	48 8d 1c b3 	leaq	(%rbx,%rsi,4), %rbx
  40632c:	48 39 d8 	cmpq	%rbx, %rax
  40632f:	0f 97 c3 	seta	%bl
  406332:	84 db 	testb	%bl, %bl
  406334:	75 d7 	jne	-41 <runtime.makemap+0x8d>
  406336:	88 4a 09 	movb	%cl, 9(%rdx)
  406339:	84 c9 	testb	%cl, %cl
  40633b:	75 0f 	jne	15 <runtime.makemap+0xcc>
  40633d:	48 89 54 24 58 	movq	%rdx, 88(%rsp)
  406342:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  406347:	48 83 c4 38 	addq	$56, %rsp
  40634b:	c3 	retq
  40634c:	48 89 54 24 50 	movq	%rdx, 80(%rsp)
  406351:	88 4c 24 08 	movb	%cl, 8(%rsp)
  406355:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40635a:	48 89 04 24 	movq	%rax, (%rsp)
  40635e:	e8 ed 08 00 00 	callq	2285 <runtime.makeBucketArray>
  406363:	8b 05 a7 d6 0b 00 	movl	775847(%rip), %eax
  406369:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  40636e:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  406373:	48 8b 5c 24 50 	movq	80(%rsp), %rbx
  406378:	48 8d 7b 10 	leaq	16(%rbx), %rdi
  40637c:	85 c0 	testl	%eax, %eax
  40637e:	75 68 	jne	104 <runtime.makemap+0x168>
  406380:	48 89 4b 10 	movq	%rcx, 16(%rbx)
  406384:	48 85 d2 	testq	%rdx, %rdx
  406387:	75 05 	jne	5 <runtime.makemap+0x10e>
  406389:	48 89 da 	movq	%rbx, %rdx
  40638c:	eb af 	jmp	-81 <runtime.makemap+0xbd>
  40638e:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  406393:	48 8d 05 26 9b 05 00 	leaq	367398(%rip), %rax
  40639a:	48 89 04 24 	movq	%rax, (%rsp)
  40639e:	e8 7d 4d 00 00 	callq	19837 <runtime.newobject>
  4063a3:	8b 05 67 d6 0b 00 	movl	775783(%rip), %eax
  4063a9:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  4063ae:	48 8d 79 28 	leaq	40(%rcx), %rdi
  4063b2:	48 8b 54 24 08 	movq	8(%rsp), %rdx
  4063b7:	48 8d 5a 10 	leaq	16(%rdx), %rbx
  4063bb:	85 c0 	testl	%eax, %eax
  4063bd:	75 12 	jne	18 <runtime.makemap+0x151>
  4063bf:	48 89 51 28 	movq	%rdx, 40(%rcx)
  4063c3:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4063c8:	48 89 42 10 	movq	%rax, 16(%rdx)
  4063cc:	48 89 cb 	movq	%rcx, %rbx
  4063cf:	eb b8 	jmp	-72 <runtime.makemap+0x109>
  4063d1:	48 89 d0 	movq	%rdx, %rax
  4063d4:	e8 c7 04 04 00 	callq	263367 <runtime.gcWriteBarrier>
  4063d9:	48 89 df 	movq	%rbx, %rdi
  4063dc:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4063e1:	e8 ba 04 04 00 	callq	263354 <runtime.gcWriteBarrier>
  4063e6:	eb e4 	jmp	-28 <runtime.makemap+0x14c>
  4063e8:	48 89 c8 	movq	%rcx, %rax
  4063eb:	e8 b0 04 04 00 	callq	263344 <runtime.gcWriteBarrier>
  4063f0:	eb 92 	jmp	-110 <runtime.makemap+0x104>
  4063f2:	31 db 	xorl	%ebx, %ebx
  4063f4:	e9 39 ff ff ff 	jmp	-199 <runtime.makemap+0xb2>
  4063f9:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  4063fe:	48 8b 44 24 40 	movq	64(%rsp), %rax
  406403:	48 8b 48 48 	movq	72(%rax), %rcx
  406407:	48 89 0c 24 	movq	%rcx, (%rsp)
  40640b:	e8 10 4d 00 00 	callq	19728 <runtime.newobject>
  406410:	48 8b 54 24 08 	movq	8(%rsp), %rdx
  406415:	48 8b 44 24 20 	movq	32(%rsp), %rax
  40641a:	e9 a0 fe ff ff 	jmp	-352 <runtime.makemap+0x3f>
  40641f:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  406424:	48 8b 73 40 	movq	64(%rbx), %rsi
  406428:	48 8b 36 	movq	(%rsi), %rsi
  40642b:	48 83 fe 21 	cmpq	$33, %rsi
  40642f:	73 1c 	jae	28 <runtime.makemap+0x1cd>
  406431:	48 8d 05 48 f1 09 00 	leaq	651592(%rip), %rax
  406438:	48 8b 04 f0 	movq	(%rax,%rsi,8), %rax
  40643c:	48 39 c2 	cmpq	%rax, %rdx
  40643f:	0f 8f 6a fe ff ff 	jg	-406 <runtime.makemap+0x2f>
  406445:	48 89 d0 	movq	%rdx, %rax
  406448:	e9 64 fe ff ff 	jmp	-412 <runtime.makemap+0x31>
  40644d:	48 b8 ff ff ff ff 7f 00 00 00 	movabsq	$549755813887, %rax
  406457:	48 89 d1 	movq	%rdx, %rcx
  40645a:	31 d2 	xorl	%edx, %edx
  40645c:	48 f7 f6 	divq	%rsi
  40645f:	48 89 ca 	movq	%rcx, %rdx
  406462:	eb d8 	jmp	-40 <runtime.makemap+0x1bc>
  406464:	e8 07 e1 03 00 	callq	254215 <runtime.morestack_noctxt>
  406469:	e9 12 fe ff ff 	jmp	-494 <runtime.makemap>
  40646e:	cc 	int3
  40646f:	cc 	int3

runtime.mapaccess2:
  406470:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  406479:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40647d:	0f 86 14 02 00 00 	jbe	532 <runtime.mapaccess2+0x227>
  406483:	48 83 ec 40 	subq	$64, %rsp
  406487:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  40648c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  406491:	48 8b 44 24 50 	movq	80(%rsp), %rax
  406496:	48 85 c0 	testq	%rax, %rax
  406499:	0f 84 c2 01 00 00 	je	450 <runtime.mapaccess2+0x1f1>
  40649f:	48 8b 08 	movq	(%rax), %rcx
  4064a2:	48 85 c9 	testq	%rcx, %rcx
  4064a5:	0f 84 b6 01 00 00 	je	438 <runtime.mapaccess2+0x1f1>
  4064ab:	0f b6 48 08 	movzbl	8(%rax), %ecx
  4064af:	f6 c1 04 	testb	$4, %cl
  4064b2:	0f 85 c4 01 00 00 	jne	452 <runtime.mapaccess2+0x20c>
  4064b8:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  4064bd:	48 8b 59 30 	movq	48(%rcx), %rbx
  4064c1:	48 8b 5b 18 	movq	24(%rbx), %rbx
  4064c5:	48 89 5c 24 28 	movq	%rbx, 40(%rsp)
  4064ca:	48 8b 13 	movq	(%rbx), %rdx
  4064cd:	8b 70 0c 	movl	12(%rax), %esi
  4064d0:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  4064d5:	48 8b 74 24 58 	movq	88(%rsp), %rsi
  4064da:	48 89 34 24 	movq	%rsi, (%rsp)
  4064de:	48 8b 3a 	movq	(%rdx), %rdi
  4064e1:	ff d7 	callq	*%rdi
  4064e3:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4064e8:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  4064ed:	0f b6 59 09 	movzbl	9(%rcx), %ebx
  4064f1:	48 89 ca 	movq	%rcx, %rdx
  4064f4:	89 d9 	movl	%ebx, %ecx
  4064f6:	be 01 00 00 00 	movl	$1, %esi
  4064fb:	48 d3 e6 	shlq	%cl, %rsi
  4064fe:	48 8d 4e ff 	leaq	-1(%rsi), %rcx
  406502:	48 89 cb 	movq	%rcx, %rbx
  406505:	48 21 c1 	andq	%rax, %rcx
  406508:	48 8b 74 24 48 	movq	72(%rsp), %rsi
  40650d:	0f b7 7e 54 	movzwl	84(%rsi), %edi
  406511:	48 0f af cf 	imulq	%rdi, %rcx
  406515:	48 03 4a 10 	addq	16(%rdx), %rcx
  406519:	4c 8b 42 18 	movq	24(%rdx), %r8
  40651d:	4d 85 c0 	testq	%r8, %r8
  406520:	74 2d 	je	45 <runtime.mapaccess2+0xdf>
  406522:	44 0f b6 4a 08 	movzbl	8(%rdx), %r9d
  406527:	41 f6 c1 08 	testb	$8, %r9b
  40652b:	0f 84 28 01 00 00 	je	296 <runtime.mapaccess2+0x1e9>
  406531:	48 21 c3 	andq	%rax, %rbx
  406534:	48 0f af fb 	imulq	%rbx, %rdi
  406538:	49 8d 1c 38 	leaq	(%r8,%rdi), %rbx
  40653c:	84 03 	testb	%al, (%rbx)
  40653e:	41 0f b6 3c 38 	movzbl	(%r8,%rdi), %edi
  406543:	ff cf 	decl	%edi
  406545:	40 80 ff 03 	cmpb	$3, %dil
  406549:	0f 83 02 01 00 00 	jae	258 <runtime.mapaccess2+0x1e1>
  40654f:	48 c1 e8 38 	shrq	$56, %rax
  406553:	3c 04 	cmpb	$4, %al
  406555:	73 03 	jae	3 <runtime.mapaccess2+0xea>
  406557:	83 c0 04 	addl	$4, %eax
  40655a:	88 44 24 1f 	movb	%al, 31(%rsp)
  40655e:	e9 c2 00 00 00 	jmp	194 <runtime.mapaccess2+0x1b5>
  406563:	48 ff c2 	incq	%rdx
  406566:	48 83 fa 08 	cmpq	$8, %rdx
  40656a:	0f 83 a9 00 00 00 	jae	169 <runtime.mapaccess2+0x1a9>
  406570:	0f b6 1c 0a 	movzbl	(%rdx,%rcx), %ebx
  406574:	38 d8 	cmpb	%bl, %al
  406576:	75 eb 	jne	-21 <runtime.mapaccess2+0xf3>
  406578:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  40657d:	0f b6 5e 50 	movzbl	80(%rsi), %ebx
  406581:	48 0f af da 	imulq	%rdx, %rbx
  406585:	0f b6 7e 51 	movzbl	81(%rsi), %edi
  406589:	48 8d 4c 0b 08 	leaq	8(%rbx,%rcx), %rcx
  40658e:	40 84 ff 	testb	%dil, %dil
  406591:	74 03 	je	3 <runtime.mapaccess2+0x126>
  406593:	48 8b 09 	movq	(%rcx), %rcx
  406596:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40659b:	48 8b 50 08 	movq	8(%rax), %rdx
  40659f:	48 8b 5c 24 58 	movq	88(%rsp), %rbx
  4065a4:	48 89 1c 24 	movq	%rbx, (%rsp)
  4065a8:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4065ad:	48 8b 0a 	movq	(%rdx), %rcx
  4065b0:	ff d1 	callq	*%rcx
  4065b2:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  4065b7:	84 c0 	testb	%al, %al
  4065b9:	75 16 	jne	22 <runtime.mapaccess2+0x161>
  4065bb:	0f b6 44 24 1f 	movzbl	31(%rsp), %eax
  4065c0:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4065c5:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  4065ca:	48 8b 74 24 48 	movq	72(%rsp), %rsi
  4065cf:	eb 92 	jmp	-110 <runtime.mapaccess2+0xf3>
  4065d1:	48 8b 44 24 48 	movq	72(%rsp), %rax
  4065d6:	0f b6 48 50 	movzbl	80(%rax), %ecx
  4065da:	0f b6 50 52 	movzbl	82(%rax), %edx
  4065de:	48 8b 5c 24 20 	movq	32(%rsp), %rbx
  4065e3:	48 0f af da 	imulq	%rdx, %rbx
  4065e7:	48 8d 0c cb 	leaq	(%rbx,%rcx,8), %rcx
  4065eb:	0f b6 40 53 	movzbl	83(%rax), %eax
  4065ef:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  4065f4:	48 8d 4c 0a 08 	leaq	8(%rdx,%rcx), %rcx
  4065f9:	84 c0 	testb	%al, %al
  4065fb:	74 17 	je	23 <runtime.mapaccess2+0x1a4>
  4065fd:	48 8b 01 	movq	(%rcx), %rax
  406600:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  406605:	c6 44 24 68 01 	movb	$1, 104(%rsp)
  40660a:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  40660f:	48 83 c4 40 	addq	$64, %rsp
  406613:	c3 	retq
  406614:	48 89 c8 	movq	%rcx, %rax
  406617:	eb e7 	jmp	-25 <runtime.mapaccess2+0x190>
  406619:	0f b7 5e 54 	movzwl	84(%rsi), %ebx
  40661d:	48 8d 5c 19 f8 	leaq	-8(%rcx,%rbx), %rbx
  406622:	48 8b 0b 	movq	(%rbx), %rcx
  406625:	48 85 c9 	testq	%rcx, %rcx
  406628:	74 0c 	je	12 <runtime.mapaccess2+0x1c6>
  40662a:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  40662f:	31 d2 	xorl	%edx, %edx
  406631:	e9 30 ff ff ff 	jmp	-208 <runtime.mapaccess2+0xf6>
  406636:	48 8d 05 c3 dc 0b 00 	leaq	777411(%rip), %rax
  40663d:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  406642:	c6 44 24 68 00 	movb	$0, 104(%rsp)
  406647:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  40664c:	48 83 c4 40 	addq	$64, %rsp
  406650:	c3 	retq
  406651:	48 89 d9 	movq	%rbx, %rcx
  406654:	e9 f6 fe ff ff 	jmp	-266 <runtime.mapaccess2+0xdf>
  406659:	48 d1 eb 	shrq	%rbx
  40665c:	e9 d0 fe ff ff 	jmp	-304 <runtime.mapaccess2+0xc1>
  406661:	48 8d 05 98 dc 0b 00 	leaq	777368(%rip), %rax
  406668:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  40666d:	c6 44 24 68 00 	movb	$0, 104(%rsp)
  406672:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  406677:	48 83 c4 40 	addq	$64, %rsp
  40667b:	c3 	retq
  40667c:	48 8d 05 43 63 06 00 	leaq	418627(%rip), %rax
  406683:	48 89 04 24 	movq	%rax, (%rsp)
  406687:	48 c7 44 24 08 21 00 00 00 	movq	$33, 8(%rsp)
  406690:	e8 3b ab 01 00 	callq	109371 <runtime.throw>
  406695:	0f 0b 	ud2
  406697:	e8 d4 de 03 00 	callq	253652 <runtime.morestack_noctxt>
  40669c:	e9 cf fd ff ff 	jmp	-561 <runtime.mapaccess2>
  4066a1:	cc 	int3
  4066a2:	cc 	int3
  4066a3:	cc 	int3
  4066a4:	cc 	int3
  4066a5:	cc 	int3
  4066a6:	cc 	int3
  4066a7:	cc 	int3
  4066a8:	cc 	int3
  4066a9:	cc 	int3
  4066aa:	cc 	int3
  4066ab:	cc 	int3
  4066ac:	cc 	int3
  4066ad:	cc 	int3
  4066ae:	cc 	int3
  4066af:	cc 	int3

runtime.mapassign:
  4066b0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4066b9:	48 8d 44 24 f8 	leaq	-8(%rsp), %rax
  4066be:	48 3b 41 10 	cmpq	16(%rcx), %rax
  4066c2:	0f 86 76 05 00 00 	jbe	1398 <runtime.mapassign+0x58e>
  4066c8:	48 81 ec 88 00 00 00 	subq	$136, %rsp
  4066cf:	48 89 ac 24 80 00 00 00 	movq	%rbp, 128(%rsp)
  4066d7:	48 8d ac 24 80 00 00 00 	leaq	128(%rsp), %rbp
  4066df:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  4066e7:	48 85 c0 	testq	%rax, %rax
  4066ea:	0f 84 30 05 00 00 	je	1328 <runtime.mapassign+0x570>
  4066f0:	0f b6 48 08 	movzbl	8(%rax), %ecx
  4066f4:	f6 c1 04 	testb	$4, %cl
  4066f7:	0f 85 08 05 00 00 	jne	1288 <runtime.mapassign+0x555>
  4066fd:	48 8b 8c 24 90 00 00 00 	movq	144(%rsp), %rcx
  406705:	48 8b 59 30 	movq	48(%rcx), %rbx
  406709:	48 8b 5b 18 	movq	24(%rbx), %rbx
  40670d:	48 89 5c 24 60 	movq	%rbx, 96(%rsp)
  406712:	48 8b 13 	movq	(%rbx), %rdx
  406715:	8b 70 0c 	movl	12(%rax), %esi
  406718:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  40671d:	48 8b b4 24 a0 00 00 00 	movq	160(%rsp), %rsi
  406725:	48 89 34 24 	movq	%rsi, (%rsp)
  406729:	48 8b 3a 	movq	(%rdx), %rdi
  40672c:	ff d7 	callq	*%rdi
  40672e:	48 8b 44 24 10 	movq	16(%rsp), %rax
  406733:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  406738:	48 8b 8c 24 98 00 00 00 	movq	152(%rsp), %rcx
  406740:	0f b6 59 08 	movzbl	8(%rcx), %ebx
  406744:	83 cb 04 	orl	$4, %ebx
  406747:	88 59 08 	movb	%bl, 8(%rcx)
  40674a:	48 8b 59 10 	movq	16(%rcx), %rbx
  40674e:	48 8d 71 10 	leaq	16(%rcx), %rsi
  406752:	48 85 db 	testq	%rbx, %rbx
  406755:	0f 85 19 02 00 00 	jne	537 <runtime.mapassign+0x2c4>
  40675b:	e9 2c 04 00 00 	jmp	1068 <runtime.mapassign+0x4dc>
  406760:	49 ff c2 	incq	%r10
  406763:	49 83 fa 08 	cmpq	$8, %r10
  406767:	0f 83 82 01 00 00 	jae	386 <runtime.mapassign+0x23f>
  40676d:	84 03 	testb	%al, (%rbx)
  40676f:	46 0f b6 1c 13 	movzbl	(%rbx,%r10), %r11d
  406774:	4e 8d 24 13 	leaq	(%rbx,%r10), %r12
  406778:	44 38 d8 	cmpb	%r11b, %al
  40677b:	74 3b 	je	59 <runtime.mapassign+0x108>
  40677d:	45 84 db 	testb	%r11b, %r11b
  406780:	75 de 	jne	-34 <runtime.mapassign+0xb0>
  406782:	48 85 c9 	testq	%rcx, %rcx
  406785:	75 d9 	jne	-39 <runtime.mapassign+0xb0>
  406787:	44 0f b6 5e 50 	movzbl	80(%rsi), %r11d
  40678c:	4d 89 d5 	movq	%r10, %r13
  40678f:	4d 0f af d3 	imulq	%r11, %r10
  406793:	44 0f b6 76 52 	movzbl	82(%rsi), %r14d
  406798:	4d 0f af f5 	imulq	%r13, %r14
  40679c:	4f 8d 1c de 	leaq	(%r14,%r11,8), %r11
  4067a0:	49 89 de 	movq	%rbx, %r14
  4067a3:	4d 8d 44 1a 08 	leaq	8(%r10,%rbx), %r8
  4067a8:	4d 8d 4c 1b 08 	leaq	8(%r11,%rbx), %r9
  4067ad:	4c 89 f3 	movq	%r14, %rbx
  4067b0:	4d 89 ea 	movq	%r13, %r10
  4067b3:	4c 89 e1 	movq	%r12, %rcx
  4067b6:	eb a8 	jmp	-88 <runtime.mapassign+0xb0>
  4067b8:	4c 89 54 24 28 	movq	%r10, 40(%rsp)
  4067bd:	4c 89 4c 24 40 	movq	%r9, 64(%rsp)
  4067c2:	4c 89 44 24 50 	movq	%r8, 80(%rsp)
  4067c7:	48 89 4c 24 58 	movq	%rcx, 88(%rsp)
  4067cc:	44 0f b6 5e 50 	movzbl	80(%rsi), %r11d
  4067d1:	4d 0f af da 	imulq	%r10, %r11
  4067d5:	44 0f b6 66 51 	movzbl	81(%rsi), %r12d
  4067da:	49 8d 5c 1b 08 	leaq	8(%r11,%rbx), %rbx
  4067df:	45 84 e4 	testb	%r12b, %r12b
  4067e2:	74 03 	je	3 <runtime.mapassign+0x137>
  4067e4:	48 8b 1b 	movq	(%rbx), %rbx
  4067e7:	48 89 5c 24 48 	movq	%rbx, 72(%rsp)
  4067ec:	48 8b 44 24 60 	movq	96(%rsp), %rax
  4067f1:	48 8b 50 08 	movq	8(%rax), %rdx
  4067f5:	48 8b 8c 24 a0 00 00 00 	movq	160(%rsp), %rcx
  4067fd:	48 89 0c 24 	movq	%rcx, (%rsp)
  406801:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  406806:	48 8b 32 	movq	(%rdx), %rsi
  406809:	ff d6 	callq	*%rsi
  40680b:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  406810:	84 c0 	testb	%al, %al
  406812:	75 38 	jne	56 <runtime.mapassign+0x19c>
  406814:	0f b6 44 24 27 	movzbl	39(%rsp), %eax
  406819:	48 8b 94 24 98 00 00 00 	movq	152(%rsp), %rdx
  406821:	48 8b 5c 24 78 	movq	120(%rsp), %rbx
  406826:	48 8b b4 24 90 00 00 00 	movq	144(%rsp), %rsi
  40682e:	48 8b 7c 24 30 	movq	48(%rsp), %rdi
  406833:	4c 8b 54 24 28 	movq	40(%rsp), %r10
  406838:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  40683d:	4c 8b 44 24 50 	movq	80(%rsp), %r8
  406842:	4c 8b 4c 24 40 	movq	64(%rsp), %r9
  406847:	e9 14 ff ff ff 	jmp	-236 <runtime.mapassign+0xb0>
  40684c:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  406854:	0f b6 48 57 	movzbl	87(%rax), %ecx
  406858:	84 c9 	testb	%cl, %cl
  40685a:	75 62 	jne	98 <runtime.mapassign+0x20e>
  40685c:	0f b6 48 50 	movzbl	80(%rax), %ecx
  406860:	0f b6 50 52 	movzbl	82(%rax), %edx
  406864:	48 8b 5c 24 28 	movq	40(%rsp), %rbx
  406869:	48 0f af d3 	imulq	%rbx, %rdx
  40686d:	48 8d 0c ca 	leaq	(%rdx,%rcx,8), %rcx
  406871:	48 8b 54 24 78 	movq	120(%rsp), %rdx
  406876:	48 8d 4c 0a 08 	leaq	8(%rdx,%rcx), %rcx
  40687b:	48 8b 94 24 98 00 00 00 	movq	152(%rsp), %rdx
  406883:	0f b6 5a 08 	movzbl	8(%rdx), %ebx
  406887:	f6 c3 04 	testb	$4, %bl
  40688a:	0f 84 5a 03 00 00 	je	858 <runtime.mapassign+0x53a>
  406890:	83 e3 fb 	andl	$-5, %ebx
  406893:	88 5a 08 	movb	%bl, 8(%rdx)
  406896:	0f b6 40 53 	movzbl	83(%rax), %eax
  40689a:	84 c0 	testb	%al, %al
  40689c:	74 1b 	je	27 <runtime.mapassign+0x209>
  40689e:	48 8b 01 	movq	(%rcx), %rax
  4068a1:	48 89 84 24 a8 00 00 00 	movq	%rax, 168(%rsp)
  4068a9:	48 8b ac 24 80 00 00 00 	movq	128(%rsp), %rbp
  4068b1:	48 81 c4 88 00 00 00 	addq	$136, %rsp
  4068b8:	c3 	retq
  4068b9:	48 89 c8 	movq	%rcx, %rax
  4068bc:	eb e3 	jmp	-29 <runtime.mapassign+0x1f1>
  4068be:	48 8b 48 30 	movq	48(%rax), %rcx
  4068c2:	48 89 0c 24 	movq	%rcx, (%rsp)
  4068c6:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  4068cb:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4068d0:	48 8b 8c 24 a0 00 00 00 	movq	160(%rsp), %rcx
  4068d8:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  4068dd:	e8 ae 51 00 00 	callq	20910 <runtime.typedmemmove>
  4068e2:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  4068ea:	e9 6d ff ff ff 	jmp	-147 <runtime.mapassign+0x1ac>
  4068ef:	44 0f b7 56 54 	movzwl	84(%rsi), %r10d
  4068f4:	49 89 db 	movq	%rbx, %r11
  4068f7:	4a 8d 5c 13 f8 	leaq	-8(%rbx,%r10), %rbx
  4068fc:	48 8b 1b 	movq	(%rbx), %rbx
  4068ff:	48 85 db 	testq	%rbx, %rbx
  406902:	74 0d 	je	13 <runtime.mapassign+0x261>
  406904:	48 89 5c 24 78 	movq	%rbx, 120(%rsp)
  406909:	45 31 d2 	xorl	%r10d, %r10d
  40690c:	e9 52 fe ff ff 	jmp	-430 <runtime.mapassign+0xb3>
  406911:	48 8b 5a 18 	movq	24(%rdx), %rbx
  406915:	48 85 db 	testq	%rbx, %rbx
  406918:	0f 85 2f 02 00 00 	jne	559 <runtime.mapassign+0x49d>
  40691e:	48 8b 1a 	movq	(%rdx), %rbx
  406921:	48 ff c3 	incq	%rbx
  406924:	44 0f b6 52 09 	movzbl	9(%rdx), %r10d
  406929:	48 83 fb 08 	cmpq	$8, %rbx
  40692d:	0f 8e 0d 02 00 00 	jle	525 <runtime.mapassign+0x490>
  406933:	49 89 cc 	movq	%rcx, %r12
  406936:	44 89 d1 	movl	%r10d, %ecx
  406939:	41 bd 01 00 00 00 	movl	$1, %r13d
  40693f:	49 d3 e5 	shlq	%cl, %r13
  406942:	49 d1 ed 	shrq	%r13
  406945:	4f 8d 74 6d 00 	leaq	(%r13,%r13,2), %r14
  40694a:	4f 8d 6c b5 00 	leaq	(%r13,%r14,4), %r13
  40694f:	4c 39 eb 	cmpq	%r13, %rbx
  406952:	0f 97 c3 	seta	%bl
  406955:	84 db 	testb	%bl, %bl
  406957:	74 73 	je	115 <runtime.mapassign+0x31c>
  406959:	48 89 34 24 	movq	%rsi, (%rsp)
  40695d:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  406962:	e8 c9 04 00 00 	callq	1225 <runtime.hashGrow>
  406967:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40696c:	48 8b 8c 24 98 00 00 00 	movq	152(%rsp), %rcx
  406974:	0f b6 59 09 	movzbl	9(%rcx), %ebx
  406978:	48 89 ca 	movq	%rcx, %rdx
  40697b:	89 d9 	movl	%ebx, %ecx
  40697d:	be 01 00 00 00 	movl	$1, %esi
  406982:	48 d3 e6 	shlq	%cl, %rsi
  406985:	48 8d 5e ff 	leaq	-1(%rsi), %rbx
  406989:	48 21 c3 	andq	%rax, %rbx
  40698c:	48 8b 72 18 	movq	24(%rdx), %rsi
  406990:	48 85 f6 	testq	%rsi, %rsi
  406993:	0f 85 bc 01 00 00 	jne	444 <runtime.mapassign+0x4a5>
  406999:	48 8b b4 24 90 00 00 00 	movq	144(%rsp), %rsi
  4069a1:	0f b7 7e 54 	movzwl	84(%rsi), %edi
  4069a5:	48 0f af df 	imulq	%rdi, %rbx
  4069a9:	48 03 5a 10 	addq	16(%rdx), %rbx
  4069ad:	48 89 c7 	movq	%rax, %rdi
  4069b0:	48 c1 e8 38 	shrq	$56, %rax
  4069b4:	3c 04 	cmpb	$4, %al
  4069b6:	73 03 	jae	3 <runtime.mapassign+0x30b>
  4069b8:	83 c0 04 	addl	$4, %eax
  4069bb:	88 44 24 27 	movb	%al, 39(%rsp)
  4069bf:	31 c9 	xorl	%ecx, %ecx
  4069c1:	45 31 c0 	xorl	%r8d, %r8d
  4069c4:	45 31 c9 	xorl	%r9d, %r9d
  4069c7:	e9 38 ff ff ff 	jmp	-200 <runtime.mapassign+0x254>
  4069cc:	0f b7 5a 0a 	movzwl	10(%rdx), %ebx
  4069d0:	80 f9 0f 	cmpb	$15, %cl
  4069d3:	76 05 	jbe	5 <runtime.mapassign+0x32a>
  4069d5:	b9 0f 00 00 00 	movl	$15, %ecx
  4069da:	83 e1 0f 	andl	$15, %ecx
  4069dd:	41 ba 01 00 00 00 	movl	$1, %r10d
  4069e3:	41 d3 e2 	shll	%cl, %r10d
  4069e6:	66 44 39 d3 	cmpw	%r10w, %bx
  4069ea:	0f 83 69 ff ff ff 	jae	-151 <runtime.mapassign+0x2a9>
  4069f0:	4d 85 e4 	testq	%r12, %r12
  4069f3:	0f 84 03 01 00 00 	je	259 <runtime.mapassign+0x44c>
  4069f9:	4c 89 4c 24 40 	movq	%r9, 64(%rsp)
  4069fe:	4c 89 64 24 58 	movq	%r12, 88(%rsp)
  406a03:	0f b6 4e 51 	movzbl	81(%rsi), %ecx
  406a07:	84 c9 	testb	%cl, %cl
  406a09:	0f 85 94 00 00 00 	jne	148 <runtime.mapassign+0x3f3>
  406a0f:	0f b6 4e 53 	movzbl	83(%rsi), %ecx
  406a13:	84 c9 	testb	%cl, %cl
  406a15:	75 48 	jne	72 <runtime.mapassign+0x3af>
  406a17:	48 8b 46 30 	movq	48(%rsi), %rax
  406a1b:	48 89 04 24 	movq	%rax, (%rsp)
  406a1f:	4c 89 44 24 08 	movq	%r8, 8(%rsp)
  406a24:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  406a2c:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  406a31:	e8 5a 50 00 00 	callq	20570 <runtime.typedmemmove>
  406a36:	0f b6 44 24 27 	movzbl	39(%rsp), %eax
  406a3b:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  406a40:	88 01 	movb	%al, (%rcx)
  406a42:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  406a4a:	48 ff 00 	incq	(%rax)
  406a4d:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  406a55:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  406a5a:	e9 1c fe ff ff 	jmp	-484 <runtime.mapassign+0x1cb>
  406a5f:	4c 89 44 24 50 	movq	%r8, 80(%rsp)
  406a64:	48 8b 46 38 	movq	56(%rsi), %rax
  406a68:	48 89 04 24 	movq	%rax, (%rsp)
  406a6c:	e8 af 46 00 00 	callq	18095 <runtime.newobject>
  406a71:	48 8b 7c 24 40 	movq	64(%rsp), %rdi
  406a76:	84 07 	testb	%al, (%rdi)
  406a78:	48 8b 44 24 08 	movq	8(%rsp), %rax
  406a7d:	8b 0d 8d cf 0b 00 	movl	774029(%rip), %ecx
  406a83:	85 c9 	testl	%ecx, %ecx
  406a85:	75 15 	jne	21 <runtime.mapassign+0x3ec>
  406a87:	48 89 07 	movq	%rax, (%rdi)
  406a8a:	48 8b b4 24 90 00 00 00 	movq	144(%rsp), %rsi
  406a92:	4c 8b 44 24 50 	movq	80(%rsp), %r8
  406a97:	e9 7b ff ff ff 	jmp	-133 <runtime.mapassign+0x367>
  406a9c:	e8 ff fd 03 00 	callq	261631 <runtime.gcWriteBarrier>
  406aa1:	eb e7 	jmp	-25 <runtime.mapassign+0x3da>
  406aa3:	4c 89 44 24 70 	movq	%r8, 112(%rsp)
  406aa8:	48 8b 46 30 	movq	48(%rsi), %rax
  406aac:	48 89 04 24 	movq	%rax, (%rsp)
  406ab0:	e8 6b 46 00 00 	callq	18027 <runtime.newobject>
  406ab5:	48 8b 7c 24 70 	movq	112(%rsp), %rdi
  406aba:	84 07 	testb	%al, (%rdi)
  406abc:	48 8b 44 24 08 	movq	8(%rsp), %rax
  406ac1:	8b 0d 49 cf 0b 00 	movl	773961(%rip), %ecx
  406ac7:	85 c9 	testl	%ecx, %ecx
  406ac9:	75 2a 	jne	42 <runtime.mapassign+0x445>
  406acb:	48 89 07 	movq	%rax, (%rdi)
  406ace:	48 8b 94 24 98 00 00 00 	movq	152(%rsp), %rdx
  406ad6:	48 8b b4 24 90 00 00 00 	movq	144(%rsp), %rsi
  406ade:	4c 8b 4c 24 40 	movq	64(%rsp), %r9
  406ae3:	4c 8b 64 24 58 	movq	88(%rsp), %r12
  406ae8:	49 89 c0 	movq	%rax, %r8
  406aeb:	0f b6 44 24 27 	movzbl	39(%rsp), %eax
  406af0:	e9 1a ff ff ff 	jmp	-230 <runtime.mapassign+0x35f>
  406af5:	e8 a6 fd 03 00 	callq	261542 <runtime.gcWriteBarrier>
  406afa:	eb d2 	jmp	-46 <runtime.mapassign+0x41e>
  406afc:	48 89 14 24 	movq	%rdx, (%rsp)
  406b00:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  406b05:	4c 89 5c 24 10 	movq	%r11, 16(%rsp)
  406b0a:	e8 81 f4 ff ff 	callq	-2943 <runtime.(*hmap).newoverflow>
  406b0f:	4c 8b 64 24 18 	movq	24(%rsp), %r12
  406b14:	41 84 04 24 	testb	%al, (%r12)
  406b18:	48 8b b4 24 90 00 00 00 	movq	144(%rsp), %rsi
  406b20:	0f b6 46 50 	movzbl	80(%rsi), %eax
  406b24:	4d 8d 44 24 08 	leaq	8(%r12), %r8
  406b29:	4d 8d 4c c4 08 	leaq	8(%r12,%rax,8), %r9
  406b2e:	0f b6 44 24 27 	movzbl	39(%rsp), %eax
  406b33:	48 8b 94 24 98 00 00 00 	movq	152(%rsp), %rdx
  406b3b:	e9 b9 fe ff ff 	jmp	-327 <runtime.mapassign+0x349>
  406b40:	49 89 cc 	movq	%rcx, %r12
  406b43:	31 db 	xorl	%ebx, %ebx
  406b45:	44 89 d1 	movl	%r10d, %ecx
  406b48:	e9 08 fe ff ff 	jmp	-504 <runtime.mapassign+0x2a5>
  406b4d:	49 89 cc 	movq	%rcx, %r12
  406b50:	e9 9b fe ff ff 	jmp	-357 <runtime.mapassign+0x340>
  406b55:	48 89 5c 24 38 	movq	%rbx, 56(%rsp)
  406b5a:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  406b62:	48 89 04 24 	movq	%rax, (%rsp)
  406b66:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  406b6b:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  406b70:	e8 0b 05 00 00 	callq	1291 <runtime.growWork>
  406b75:	48 8b 44 24 30 	movq	48(%rsp), %rax
  406b7a:	48 8b 94 24 98 00 00 00 	movq	152(%rsp), %rdx
  406b82:	48 8b 5c 24 38 	movq	56(%rsp), %rbx
  406b87:	e9 0d fe ff ff 	jmp	-499 <runtime.mapassign+0x2e9>
  406b8c:	48 89 74 24 68 	movq	%rsi, 104(%rsp)
  406b91:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  406b99:	48 8b 48 40 	movq	64(%rax), %rcx
  406b9d:	48 89 0c 24 	movq	%rcx, (%rsp)
  406ba1:	e8 7a 45 00 00 	callq	17786 <runtime.newobject>
  406ba6:	8b 05 64 ce 0b 00 	movl	773732(%rip), %eax
  406bac:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  406bb1:	85 c0 	testl	%eax, %eax
  406bb3:	75 1e 	jne	30 <runtime.mapassign+0x523>
  406bb5:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  406bbd:	48 89 48 10 	movq	%rcx, 16(%rax)
  406bc1:	48 8b 44 24 30 	movq	48(%rsp), %rax
  406bc6:	48 8b 8c 24 98 00 00 00 	movq	152(%rsp), %rcx
  406bce:	e9 a1 fd ff ff 	jmp	-607 <runtime.mapassign+0x2c4>
  406bd3:	48 8b 7c 24 68 	movq	104(%rsp), %rdi
  406bd8:	48 89 c8 	movq	%rcx, %rax
  406bdb:	e8 c0 fc 03 00 	callq	261312 <runtime.gcWriteBarrier>
  406be0:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  406be8:	eb d7 	jmp	-41 <runtime.mapassign+0x511>
  406bea:	48 8d 05 98 46 06 00 	leaq	411288(%rip), %rax
  406bf1:	48 89 04 24 	movq	%rax, (%rsp)
  406bf5:	48 c7 44 24 08 15 00 00 00 	movq	$21, 8(%rsp)
  406bfe:	e8 cd a5 01 00 	callq	107981 <runtime.throw>
  406c03:	0f 0b 	ud2
  406c05:	48 8d 05 7d 46 06 00 	leaq	411261(%rip), %rax
  406c0c:	48 89 04 24 	movq	%rax, (%rsp)
  406c10:	48 c7 44 24 08 15 00 00 00 	movq	$21, 8(%rsp)
  406c19:	e8 b2 a5 01 00 	callq	107954 <runtime.throw>
  406c1e:	0f 0b 	ud2
  406c20:	48 8d 05 19 44 05 00 	leaq	345113(%rip), %rax
  406c27:	48 89 04 24 	movq	%rax, (%rsp)
  406c2b:	48 8d 05 1e e1 06 00 	leaq	450846(%rip), %rax
  406c32:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  406c37:	e8 f4 9d 01 00 	callq	105972 <runtime.gopanic>
  406c3c:	0f 0b 	ud2
  406c3e:	e8 2d d9 03 00 	callq	252205 <runtime.morestack_noctxt>
  406c43:	e9 68 fa ff ff 	jmp	-1432 <runtime.mapassign>
  406c48:	cc 	int3
  406c49:	cc 	int3
  406c4a:	cc 	int3
  406c4b:	cc 	int3
  406c4c:	cc 	int3
  406c4d:	cc 	int3
  406c4e:	cc 	int3
  406c4f:	cc 	int3

runtime.makeBucketArray:
  406c50:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  406c59:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  406c5d:	0f 86 bc 01 00 00 	jbe	444 <runtime.makeBucketArray+0x1cf>
  406c63:	48 83 ec 30 	subq	$48, %rsp
  406c67:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  406c6c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  406c71:	0f b6 4c 24 40 	movzbl	64(%rsp), %ecx
  406c76:	ba 01 00 00 00 	movl	$1, %edx
  406c7b:	48 d3 e2 	shlq	%cl, %rdx
  406c7e:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  406c83:	80 f9 04 	cmpb	$4, %cl
  406c86:	0f 82 71 01 00 00 	jb	369 <runtime.makeBucketArray+0x1ad>
  406c8c:	48 8b 5c 24 38 	movq	56(%rsp), %rbx
  406c91:	48 8b 73 40 	movq	64(%rbx), %rsi
  406c95:	83 c1 fc 	addl	$-4, %ecx
  406c98:	bf 01 00 00 00 	movl	$1, %edi
  406c9d:	48 d3 e7 	shlq	%cl, %rdi
  406ca0:	48 01 d7 	addq	%rdx, %rdi
  406ca3:	48 8b 36 	movq	(%rsi), %rsi
  406ca6:	49 89 f0 	movq	%rsi, %r8
  406ca9:	48 0f af f7 	imulq	%rdi, %rsi
  406cad:	48 81 fe 00 80 00 00 	cmpq	$32768, %rsi
  406cb4:	0f 83 1c 01 00 00 	jae	284 <runtime.makeBucketArray+0x186>
  406cba:	48 81 fe f8 03 00 00 	cmpq	$1016, %rsi
  406cc1:	0f 87 d8 00 00 00 	ja	216 <runtime.makeBucketArray+0x14f>
  406cc7:	48 8d 4e 07 	leaq	7(%rsi), %rcx
  406ccb:	48 c1 e9 03 	shrq	$3, %rcx
  406ccf:	48 81 f9 81 00 00 00 	cmpq	$129, %rcx
  406cd6:	0f 83 3c 01 00 00 	jae	316 <runtime.makeBucketArray+0x1c8>
  406cdc:	4c 8d 0d 3d e4 09 00 	leaq	648253(%rip), %r9
  406ce3:	42 0f b6 0c 09 	movzbl	(%rcx,%r9), %ecx
  406ce8:	48 83 f9 43 	cmpq	$67, %rcx
  406cec:	0f 83 26 01 00 00 	jae	294 <runtime.makeBucketArray+0x1c8>
  406cf2:	4c 8d 0d c7 e4 09 00 	leaq	648391(%rip), %r9
  406cf9:	41 0f b7 0c 49 	movzwl	(%r9,%rcx,2), %ecx
  406cfe:	48 39 f1 	cmpq	%rsi, %rcx
  406d01:	0f 84 8d 00 00 00 	je	141 <runtime.makeBucketArray+0x144>
  406d07:	4d 85 c0 	testq	%r8, %r8
  406d0a:	0f 84 fa 00 00 00 	je	250 <runtime.makeBucketArray+0x1ba>
  406d10:	48 89 c8 	movq	%rcx, %rax
  406d13:	48 89 d1 	movq	%rdx, %rcx
  406d16:	31 d2 	xorl	%edx, %edx
  406d18:	49 f7 f0 	divq	%r8
  406d1b:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  406d20:	48 8b 4b 40 	movq	64(%rbx), %rcx
  406d24:	48 89 0c 24 	movq	%rcx, (%rsp)
  406d28:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  406d2d:	e8 4e 44 00 00 	callq	17486 <runtime.newarray>
  406d32:	48 8b 44 24 10 	movq	16(%rsp), %rax
  406d37:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  406d3c:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  406d41:	48 39 d1 	cmpq	%rdx, %rcx
  406d44:	74 4a 	je	74 <runtime.makeBucketArray+0x140>
  406d46:	48 8b 5c 24 38 	movq	56(%rsp), %rbx
  406d4b:	0f b7 5b 54 	movzwl	84(%rbx), %ebx
  406d4f:	48 ff c9 	decq	%rcx
  406d52:	48 0f af cb 	imulq	%rbx, %rcx
  406d56:	48 01 c1 	addq	%rax, %rcx
  406d59:	48 8d 7c 19 f8 	leaq	-8(%rcx,%rbx), %rdi
  406d5e:	84 07 	testb	%al, (%rdi)
  406d60:	48 0f af da 	imulq	%rdx, %rbx
  406d64:	48 8d 0c 03 	leaq	(%rbx,%rax), %rcx
  406d68:	8b 15 a2 cc 0b 00 	movl	773282(%rip), %edx
  406d6e:	85 d2 	testl	%edx, %edx
  406d70:	75 17 	jne	23 <runtime.makeBucketArray+0x139>
  406d72:	48 89 07 	movq	%rax, (%rdi)
  406d75:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  406d7a:	48 89 4c 24 50 	movq	%rcx, 80(%rsp)
  406d7f:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  406d84:	48 83 c4 30 	addq	$48, %rsp
  406d88:	c3 	retq
  406d89:	e8 12 fb 03 00 	callq	260882 <runtime.gcWriteBarrier>
  406d8e:	eb e5 	jmp	-27 <runtime.makeBucketArray+0x125>
  406d90:	31 c9 	xorl	%ecx, %ecx
  406d92:	eb e1 	jmp	-31 <runtime.makeBucketArray+0x125>
  406d94:	48 89 d1 	movq	%rdx, %rcx
  406d97:	48 89 f8 	movq	%rdi, %rax
  406d9a:	e9 7c ff ff ff 	jmp	-132 <runtime.makeBucketArray+0xcb>
  406d9f:	48 8d 8e 7f fc ff ff 	leaq	-897(%rsi), %rcx
  406da6:	48 c1 e9 07 	shrq	$7, %rcx
  406daa:	48 81 f9 f9 00 00 00 	cmpq	$249, %rcx
  406db1:	73 5e 	jae	94 <runtime.makeBucketArray+0x1c1>
  406db3:	4c 8d 0d a6 e4 09 00 	leaq	648358(%rip), %r9
  406dba:	42 0f b6 0c 09 	movzbl	(%rcx,%r9), %ecx
  406dbf:	48 83 f9 43 	cmpq	$67, %rcx
  406dc3:	73 4c 	jae	76 <runtime.makeBucketArray+0x1c1>
  406dc5:	4c 8d 0d f4 e3 09 00 	leaq	648180(%rip), %r9
  406dcc:	41 0f b7 0c 49 	movzwl	(%r9,%rcx,2), %ecx
  406dd1:	e9 28 ff ff ff 	jmp	-216 <runtime.makeBucketArray+0xae>
  406dd6:	48 8d 8e 00 20 00 00 	leaq	8192(%rsi), %rcx
  406ddd:	48 39 f1 	cmpq	%rsi, %rcx
  406de0:	73 08 	jae	8 <runtime.makeBucketArray+0x19a>
  406de2:	48 89 f1 	movq	%rsi, %rcx
  406de5:	e9 14 ff ff ff 	jmp	-236 <runtime.makeBucketArray+0xae>
  406dea:	48 8d 8e ff 1f 00 00 	leaq	8191(%rsi), %rcx
  406df1:	48 81 e1 00 e0 ff ff 	andq	$-8192, %rcx
  406df8:	e9 01 ff ff ff 	jmp	-255 <runtime.makeBucketArray+0xae>
  406dfd:	48 8b 5c 24 38 	movq	56(%rsp), %rbx
  406e02:	48 89 d0 	movq	%rdx, %rax
  406e05:	e9 11 ff ff ff 	jmp	-239 <runtime.makeBucketArray+0xcb>
  406e0a:	e8 11 8d 01 00 	callq	101649 <runtime.panicdivide>
  406e0f:	0f 0b 	ud2
  406e11:	e8 2a 8c 01 00 	callq	101418 <runtime.panicindex>
  406e16:	0f 0b 	ud2
  406e18:	e8 23 8c 01 00 	callq	101411 <runtime.panicindex>
  406e1d:	0f 0b 	ud2
  406e1f:	e8 4c d7 03 00 	callq	251724 <runtime.morestack_noctxt>
  406e24:	e9 27 fe ff ff 	jmp	-473 <runtime.makeBucketArray>
  406e29:	cc 	int3
  406e2a:	cc 	int3
  406e2b:	cc 	int3
  406e2c:	cc 	int3
  406e2d:	cc 	int3
  406e2e:	cc 	int3
  406e2f:	cc 	int3

runtime.hashGrow:
  406e30:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  406e39:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  406e3d:	0f 86 2a 02 00 00 	jbe	554 <runtime.hashGrow+0x23d>
  406e43:	48 83 ec 48 	subq	$72, %rsp
  406e47:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  406e4c:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  406e51:	48 8b 44 24 58 	movq	88(%rsp), %rax
  406e56:	48 8b 10 	movq	(%rax), %rdx
  406e59:	48 ff c2 	incq	%rdx
  406e5c:	0f b6 48 09 	movzbl	9(%rax), %ecx
  406e60:	48 83 fa 08 	cmpq	$8, %rdx
  406e64:	0f 8e e1 01 00 00 	jle	481 <runtime.hashGrow+0x21b>
  406e6a:	bb 01 00 00 00 	movl	$1, %ebx
  406e6f:	48 d3 e3 	shlq	%cl, %rbx
  406e72:	48 d1 eb 	shrq	%rbx
  406e75:	48 8d 34 5b 	leaq	(%rbx,%rbx,2), %rsi
  406e79:	48 8d 1c b3 	leaq	(%rbx,%rsi,4), %rbx
  406e7d:	48 39 da 	cmpq	%rbx, %rdx
  406e80:	0f 97 c2 	seta	%dl
  406e83:	84 d2 	testb	%dl, %dl
  406e85:	0f 84 b1 01 00 00 	je	433 <runtime.hashGrow+0x20c>
  406e8b:	88 54 24 27 	movb	%dl, 39(%rsp)
  406e8f:	48 8b 48 10 	movq	16(%rax), %rcx
  406e93:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  406e98:	0f b6 58 09 	movzbl	9(%rax), %ebx
  406e9c:	01 d3 	addl	%edx, %ebx
  406e9e:	88 5c 24 08 	movb	%bl, 8(%rsp)
  406ea2:	48 8b 5c 24 50 	movq	80(%rsp), %rbx
  406ea7:	48 89 1c 24 	movq	%rbx, (%rsp)
  406eab:	e8 a0 fd ff ff 	callq	-608 <runtime.makeBucketArray>
  406eb0:	48 8b 44 24 58 	movq	88(%rsp), %rax
  406eb5:	48 8d 48 10 	leaq	16(%rax), %rcx
  406eb9:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  406ebe:	48 8b 5c 24 18 	movq	24(%rsp), %rbx
  406ec3:	0f b6 70 08 	movzbl	8(%rax), %esi
  406ec7:	89 f7 	movl	%esi, %edi
  406ec9:	83 e6 fc 	andl	$-4, %esi
  406ecc:	40 f6 c7 01 	testb	$1, %dil
  406ed0:	74 03 	je	3 <runtime.hashGrow+0xa5>
  406ed2:	83 ce 02 	orl	$2, %esi
  406ed5:	44 0f b6 40 09 	movzbl	9(%rax), %r8d
  406eda:	44 0f b6 4c 24 27 	movzbl	39(%rsp), %r9d
  406ee0:	45 01 c8 	addl	%r9d, %r8d
  406ee3:	44 88 40 09 	movb	%r8b, 9(%rax)
  406ee7:	40 88 70 08 	movb	%sil, 8(%rax)
  406eeb:	8b 35 1f cb 0b 00 	movl	772895(%rip), %esi
  406ef1:	48 8d 78 18 	leaq	24(%rax), %rdi
  406ef5:	85 f6 	testl	%esi, %esi
  406ef7:	0f 85 1f 01 00 00 	jne	287 <runtime.hashGrow+0x1ec>
  406efd:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  406f02:	48 89 48 18 	movq	%rcx, 24(%rax)
  406f06:	48 89 50 10 	movq	%rdx, 16(%rax)
  406f0a:	48 c7 40 20 00 00 00 00 	movq	$0, 32(%rax)
  406f12:	66 c7 40 0a 00 00 	movw	$0, 10(%rax)
  406f18:	48 8b 48 28 	movq	40(%rax), %rcx
  406f1c:	48 8d 50 28 	leaq	40(%rax), %rdx
  406f20:	48 85 c9 	testq	%rcx, %rcx
  406f23:	74 48 	je	72 <runtime.hashGrow+0x13d>
  406f25:	48 8b 31 	movq	(%rcx), %rsi
  406f28:	48 85 f6 	testq	%rsi, %rsi
  406f2b:	74 40 	je	64 <runtime.hashGrow+0x13d>
  406f2d:	4c 8b 41 08 	movq	8(%rcx), %r8
  406f31:	48 8d 79 08 	leaq	8(%rcx), %rdi
  406f35:	4d 85 c0 	testq	%r8, %r8
  406f38:	0f 85 14 01 00 00 	jne	276 <runtime.hashGrow+0x222>
  406f3e:	44 8b 05 cb ca 0b 00 	movl	772811(%rip), %r8d
  406f45:	45 85 c0 	testl	%r8d, %r8d
  406f48:	0f 85 bb 00 00 00 	jne	187 <runtime.hashGrow+0x1d9>
  406f4e:	48 89 71 08 	movq	%rsi, 8(%rcx)
  406f52:	48 8b 78 28 	movq	40(%rax), %rdi
  406f56:	84 07 	testb	%al, (%rdi)
  406f58:	8b 0d b2 ca 0b 00 	movl	772786(%rip), %ecx
  406f5e:	85 c9 	testl	%ecx, %ecx
  406f60:	0f 85 91 00 00 00 	jne	145 <runtime.hashGrow+0x1c7>
  406f66:	48 c7 07 00 00 00 00 	movq	$0, (%rdi)
  406f6d:	48 85 db 	testq	%rbx, %rbx
  406f70:	74 21 	je	33 <runtime.hashGrow+0x163>
  406f72:	48 8b 48 28 	movq	40(%rax), %rcx
  406f76:	48 85 c9 	testq	%rcx, %rcx
  406f79:	74 2c 	je	44 <runtime.hashGrow+0x177>
  406f7b:	48 8b 48 28 	movq	40(%rax), %rcx
  406f7f:	84 01 	testb	%al, (%rcx)
  406f81:	8b 15 89 ca 0b 00 	movl	772745(%rip), %edx
  406f87:	48 8d 79 10 	leaq	16(%rcx), %rdi
  406f8b:	85 d2 	testl	%edx, %edx
  406f8d:	75 0e 	jne	14 <runtime.hashGrow+0x16d>
  406f8f:	48 89 59 10 	movq	%rbx, 16(%rcx)
  406f93:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  406f98:	48 83 c4 48 	addq	$72, %rsp
  406f9c:	c3 	retq
  406f9d:	48 89 d8 	movq	%rbx, %rax
  406fa0:	e8 fb f8 03 00 	callq	260347 <runtime.gcWriteBarrier>
  406fa5:	eb ec 	jmp	-20 <runtime.hashGrow+0x163>
  406fa7:	48 89 5c 24 30 	movq	%rbx, 48(%rsp)
  406fac:	48 89 54 24 38 	movq	%rdx, 56(%rsp)
  406fb1:	48 8d 05 08 8f 05 00 	leaq	364296(%rip), %rax
  406fb8:	48 89 04 24 	movq	%rax, (%rsp)
  406fbc:	e8 5f 41 00 00 	callq	16735 <runtime.newobject>
  406fc1:	8b 05 49 ca 0b 00 	movl	772681(%rip), %eax
  406fc7:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  406fcc:	85 c0 	testl	%eax, %eax
  406fce:	75 13 	jne	19 <runtime.hashGrow+0x1b3>
  406fd0:	48 8b 54 24 58 	movq	88(%rsp), %rdx
  406fd5:	48 89 4a 28 	movq	%rcx, 40(%rdx)
  406fd9:	48 89 d0 	movq	%rdx, %rax
  406fdc:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  406fe1:	eb 98 	jmp	-104 <runtime.hashGrow+0x14b>
  406fe3:	48 8b 7c 24 38 	movq	56(%rsp), %rdi
  406fe8:	48 89 c8 	movq	%rcx, %rax
  406feb:	e8 b0 f8 03 00 	callq	260272 <runtime.gcWriteBarrier>
  406ff0:	48 8b 54 24 58 	movq	88(%rsp), %rdx
  406ff5:	eb e2 	jmp	-30 <runtime.hashGrow+0x1a9>
  406ff7:	48 89 c1 	movq	%rax, %rcx
  406ffa:	31 c0 	xorl	%eax, %eax
  406ffc:	e8 9f f8 03 00 	callq	260255 <runtime.gcWriteBarrier>
  407001:	48 89 c8 	movq	%rcx, %rax
  407004:	e9 64 ff ff ff 	jmp	-156 <runtime.hashGrow+0x13d>
  407009:	48 89 c1 	movq	%rax, %rcx
  40700c:	48 89 f0 	movq	%rsi, %rax
  40700f:	e8 8c f8 03 00 	callq	260236 <runtime.gcWriteBarrier>
  407014:	48 89 c8 	movq	%rcx, %rax
  407017:	e9 36 ff ff ff 	jmp	-202 <runtime.hashGrow+0x122>
  40701c:	48 89 c6 	movq	%rax, %rsi
  40701f:	48 8b 44 24 28 	movq	40(%rsp), %rax
  407024:	e8 77 f8 03 00 	callq	260215 <runtime.gcWriteBarrier>
  407029:	48 89 cf 	movq	%rcx, %rdi
  40702c:	48 89 d0 	movq	%rdx, %rax
  40702f:	e8 6c f8 03 00 	callq	260204 <runtime.gcWriteBarrier>
  407034:	48 89 f0 	movq	%rsi, %rax
  407037:	e9 ce fe ff ff 	jmp	-306 <runtime.hashGrow+0xda>
  40703c:	0f b6 48 08 	movzbl	8(%rax), %ecx
  407040:	83 c9 08 	orl	$8, %ecx
  407043:	88 48 08 	movb	%cl, 8(%rax)
  407046:	e9 40 fe ff ff 	jmp	-448 <runtime.hashGrow+0x5b>
  40704b:	31 d2 	xorl	%edx, %edx
  40704d:	e9 31 fe ff ff 	jmp	-463 <runtime.hashGrow+0x53>
  407052:	48 8d 05 33 44 06 00 	leaq	410675(%rip), %rax
  407059:	48 89 04 24 	movq	%rax, (%rsp)
  40705d:	48 c7 44 24 08 16 00 00 00 	movq	$22, 8(%rsp)
  407066:	e8 65 a1 01 00 	callq	106853 <runtime.throw>
  40706b:	0f 0b 	ud2
  40706d:	e8 fe d4 03 00 	callq	251134 <runtime.morestack_noctxt>
  407072:	e9 b9 fd ff ff 	jmp	-583 <runtime.hashGrow>
  407077:	cc 	int3
  407078:	cc 	int3
  407079:	cc 	int3
  40707a:	cc 	int3
  40707b:	cc 	int3
  40707c:	cc 	int3
  40707d:	cc 	int3
  40707e:	cc 	int3
  40707f:	cc 	int3

runtime.growWork:
  407080:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  407089:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40708d:	0f 86 88 00 00 00 	jbe	136 <runtime.growWork+0x9b>
  407093:	48 83 ec 20 	subq	$32, %rsp
  407097:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  40709c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  4070a1:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4070a6:	0f b6 50 09 	movzbl	9(%rax), %edx
  4070aa:	0f b6 58 08 	movzbl	8(%rax), %ebx
  4070ae:	f6 c3 08 	testb	$8, %bl
  4070b1:	74 64 	je	100 <runtime.growWork+0x97>
  4070b3:	48 8b 5c 24 28 	movq	40(%rsp), %rbx
  4070b8:	48 89 1c 24 	movq	%rbx, (%rsp)
  4070bc:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4070c1:	89 d1 	movl	%edx, %ecx
  4070c3:	be 01 00 00 00 	movl	$1, %esi
  4070c8:	48 d3 e6 	shlq	%cl, %rsi
  4070cb:	48 8d 56 ff 	leaq	-1(%rsi), %rdx
  4070cf:	48 8b 74 24 38 	movq	56(%rsp), %rsi
  4070d4:	48 21 d6 	andq	%rdx, %rsi
  4070d7:	48 89 74 24 10 	movq	%rsi, 16(%rsp)
  4070dc:	e8 4f 00 00 00 	callq	79 <runtime.evacuate>
  4070e1:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4070e6:	48 8b 50 18 	movq	24(%rax), %rdx
  4070ea:	48 85 d2 	testq	%rdx, %rdx
  4070ed:	75 0a 	jne	10 <runtime.growWork+0x79>
  4070ef:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  4070f4:	48 83 c4 20 	addq	$32, %rsp
  4070f8:	c3 	retq
  4070f9:	48 8b 48 20 	movq	32(%rax), %rcx
  4070fd:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  407102:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  407107:	48 89 0c 24 	movq	%rcx, (%rsp)
  40710b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  407110:	e8 1b 00 00 00 	callq	27 <runtime.evacuate>
  407115:	eb d8 	jmp	-40 <runtime.growWork+0x6f>
  407117:	ff ca 	decl	%edx
  407119:	eb 98 	jmp	-104 <runtime.growWork+0x33>
  40711b:	e8 50 d4 03 00 	callq	250960 <runtime.morestack_noctxt>
  407120:	e9 5b ff ff ff 	jmp	-165 <runtime.growWork>
  407125:	cc 	int3
  407126:	cc 	int3
  407127:	cc 	int3
  407128:	cc 	int3
  407129:	cc 	int3
  40712a:	cc 	int3
  40712b:	cc 	int3
  40712c:	cc 	int3
  40712d:	cc 	int3
  40712e:	cc 	int3
  40712f:	cc 	int3

runtime.evacuate:
  407130:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  407139:	48 8d 44 24 d0 	leaq	-48(%rsp), %rax
  40713e:	48 3b 41 10 	cmpq	16(%rcx), %rax
  407142:	0f 86 1e 06 00 00 	jbe	1566 <runtime.evacuate+0x636>
  407148:	48 81 ec b0 00 00 00 	subq	$176, %rsp
  40714f:	48 89 ac 24 a8 00 00 00 	movq	%rbp, 168(%rsp)
  407157:	48 8d ac 24 a8 00 00 00 	leaq	168(%rsp), %rbp
  40715f:	0f 57 c0 	xorps	%xmm0, %xmm0
  407162:	0f 11 44 24 68 	movups	%xmm0, 104(%rsp)
  407167:	0f 11 44 24 78 	movups	%xmm0, 120(%rsp)
  40716c:	0f 11 84 24 88 00 00 00 	movups	%xmm0, 136(%rsp)
  407174:	0f 11 84 24 98 00 00 00 	movups	%xmm0, 152(%rsp)
  40717c:	48 8b 9c 24 c0 00 00 00 	movq	192(%rsp), %rbx
  407184:	48 8d 73 18 	leaq	24(%rbx), %rsi
  407188:	4c 8b 84 24 b8 00 00 00 	movq	184(%rsp), %r8
  407190:	45 0f b7 48 54 	movzwl	84(%r8), %r9d
  407195:	4c 8b 94 24 c8 00 00 00 	movq	200(%rsp), %r10
  40719d:	4d 0f af ca 	imulq	%r10, %r9
  4071a1:	4c 03 0e 	addq	(%rsi), %r9
  4071a4:	0f b6 73 09 	movzbl	9(%rbx), %esi
  4071a8:	44 0f b6 5b 08 	movzbl	8(%rbx), %r11d
  4071ad:	41 f6 c3 08 	testb	$8, %r11b
  4071b1:	0f 84 86 05 00 00 	je	1414 <runtime.evacuate+0x60d>
  4071b7:	89 f1 	movl	%esi, %ecx
  4071b9:	41 bb 01 00 00 00 	movl	$1, %r11d
  4071bf:	49 d3 e3 	shlq	%cl, %r11
  4071c2:	45 0f b6 21 	movzbl	(%r9), %r12d
  4071c6:	41 ff cc 	decl	%r12d
  4071c9:	41 80 fc 03 	cmpb	$3, %r12b
  4071cd:	0f 82 af 04 00 00 	jb	1199 <runtime.evacuate+0x552>
  4071d3:	0f 57 c0 	xorps	%xmm0, %xmm0
  4071d6:	0f 11 44 24 68 	movups	%xmm0, 104(%rsp)
  4071db:	0f 11 44 24 78 	movups	%xmm0, 120(%rsp)
  4071e0:	0f 11 84 24 88 00 00 00 	movups	%xmm0, 136(%rsp)
  4071e8:	0f 11 84 24 98 00 00 00 	movups	%xmm0, 152(%rsp)
  4071f0:	4c 8d 64 24 68 	leaq	104(%rsp), %r12
  4071f5:	41 84 04 24 	testb	%al, (%r12)
  4071f9:	45 0f b7 60 54 	movzwl	84(%r8), %r12d
  4071fe:	4d 0f af e2 	imulq	%r10, %r12
  407202:	4c 03 63 10 	addq	16(%rbx), %r12
  407206:	4c 89 64 24 68 	movq	%r12, 104(%rsp)
  40720b:	4d 8d 6c 24 08 	leaq	8(%r12), %r13
  407210:	4c 89 6c 24 78 	movq	%r13, 120(%rsp)
  407215:	45 0f b6 68 50 	movzbl	80(%r8), %r13d
  40721a:	4f 8d 64 ec 08 	leaq	8(%r12,%r13,8), %r12
  40721f:	4c 89 a4 24 80 00 00 00 	movq	%r12, 128(%rsp)
  407227:	44 0f b6 63 08 	movzbl	8(%rbx), %r12d
  40722c:	41 f6 c4 08 	testb	$8, %r12b
  407230:	0f 84 bf 04 00 00 	je	1215 <runtime.evacuate+0x5c5>
  407236:	88 4c 24 27 	movb	%cl, 39(%rsp)
  40723a:	4c 89 5c 24 40 	movq	%r11, 64(%rsp)
  40723f:	e9 0b 04 00 00 	jmp	1035 <runtime.evacuate+0x51f>
  407244:	48 ff c0 	incq	%rax
  407247:	45 0f b6 70 50 	movzbl	80(%r8), %r14d
  40724c:	45 0f b6 78 52 	movzbl	82(%r8), %r15d
  407251:	4d 01 f5 	addq	%r14, %r13
  407254:	4d 01 fc 	addq	%r15, %r12
  407257:	48 83 f8 08 	cmpq	$8, %rax
  40725b:	0f 8d e0 03 00 00 	jge	992 <runtime.evacuate+0x511>
  407261:	45 0f b6 34 01 	movzbl	(%r9,%rax), %r14d
  407266:	45 84 f6 	testb	%r14b, %r14b
  407269:	75 07 	jne	7 <runtime.evacuate+0x142>
  40726b:	41 c6 04 01 01 	movb	$1, (%r9,%rax)
  407270:	eb d2 	jmp	-46 <runtime.evacuate+0x114>
  407272:	41 80 fe 04 	cmpb	$4, %r14b
  407276:	0f 82 cf 04 00 00 	jb	1231 <runtime.evacuate+0x61b>
  40727c:	45 0f b6 78 51 	movzbl	81(%r8), %r15d
  407281:	45 84 ff 	testb	%r15b, %r15b
  407284:	0f 84 af 03 00 00 	je	943 <runtime.evacuate+0x509>
  40728a:	4d 8b 7d 00 	movq	(%r13), %r15
  40728e:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  407293:	4c 89 64 24 50 	movq	%r12, 80(%rsp)
  407298:	4c 89 7c 24 58 	movq	%r15, 88(%rsp)
  40729d:	4c 89 6c 24 48 	movq	%r13, 72(%rsp)
  4072a2:	4c 89 da 	movq	%r11, %rdx
  4072a5:	44 0f b6 5b 08 	movzbl	8(%rbx), %r11d
  4072aa:	41 f6 c3 08 	testb	$8, %r11b
  4072ae:	0f 84 59 02 00 00 	je	601 <runtime.evacuate+0x3dd>
  4072b4:	31 ff 	xorl	%edi, %edi
  4072b6:	44 8d 5f 02 	leal	2(%rdi), %r11d
  4072ba:	45 88 1c 01 	movb	%r11b, (%r9,%rax)
  4072be:	44 0f b6 df 	movzbl	%dil, %r11d
  4072c2:	49 83 fb 02 	cmpq	$2, %r11
  4072c6:	0f 83 78 04 00 00 	jae	1144 <runtime.evacuate+0x614>
  4072cc:	49 c1 e3 05 	shlq	$5, %r11
  4072d0:	4c 89 5c 24 38 	movq	%r11, 56(%rsp)
  4072d5:	4a 8b 4c 1c 70 	movq	112(%rsp,%r11), %rcx
  4072da:	48 83 f9 08 	cmpq	$8, %rcx
  4072de:	0f 84 8e 01 00 00 	je	398 <runtime.evacuate+0x342>
  4072e4:	4a 8b 4c 1c 68 	movq	104(%rsp,%r11), %rcx
  4072e9:	84 01 	testb	%al, (%rcx)
  4072eb:	89 f7 	movl	%esi, %edi
  4072ed:	4a 8b 74 1c 70 	movq	112(%rsp,%r11), %rsi
  4072f2:	48 83 e6 07 	andq	$7, %rsi
  4072f6:	44 88 34 31 	movb	%r14b, (%rcx,%rsi)
  4072fa:	41 0f b6 48 51 	movzbl	81(%r8), %ecx
  4072ff:	84 c9 	testb	%cl, %cl
  407301:	0f 84 0f 01 00 00 	je	271 <runtime.evacuate+0x2e6>
  407307:	4a 8b 4c 1c 78 	movq	120(%rsp,%r11), %rcx
  40730c:	84 01 	testb	%al, (%rcx)
  40730e:	8b 35 fc c6 0b 00 	movl	771836(%rip), %esi
  407314:	85 f6 	testl	%esi, %esi
  407316:	0f 85 e0 00 00 00 	jne	224 <runtime.evacuate+0x2cc>
  40731c:	4c 89 39 	movq	%r15, (%rcx)
  40731f:	41 0f b6 48 53 	movzbl	83(%r8), %ecx
  407324:	84 c9 	testb	%cl, %cl
  407326:	74 75 	je	117 <runtime.evacuate+0x26d>
  407328:	4a 8b 8c 1c 80 00 00 00 	movq	128(%rsp,%r11), %rcx
  407330:	84 01 	testb	%al, (%rcx)
  407332:	8b 35 d8 c6 0b 00 	movl	771800(%rip), %esi
  407338:	4d 8b 34 24 	movq	(%r12), %r14
  40733c:	85 f6 	testl	%esi, %esi
  40733e:	75 46 	jne	70 <runtime.evacuate+0x256>
  407340:	4c 89 31 	movq	%r14, (%rcx)
  407343:	4e 8b 74 1c 70 	movq	112(%rsp,%r11), %r14
  407348:	49 ff c6 	incq	%r14
  40734b:	4e 89 74 1c 70 	movq	%r14, 112(%rsp,%r11)
  407350:	4e 8b 74 1c 78 	movq	120(%rsp,%r11), %r14
  407355:	45 0f b6 78 50 	movzbl	80(%r8), %r15d
  40735a:	4d 01 fe 	addq	%r15, %r14
  40735d:	4e 89 74 1c 78 	movq	%r14, 120(%rsp,%r11)
  407362:	4e 8b b4 1c 80 00 00 00 	movq	128(%rsp,%r11), %r14
  40736a:	45 0f b6 78 52 	movzbl	82(%r8), %r15d
  40736f:	4d 01 fe 	addq	%r15, %r14
  407372:	4e 89 b4 1c 80 00 00 00 	movq	%r14, 128(%rsp,%r11)
  40737a:	89 f9 	movl	%edi, %ecx
  40737c:	89 ce 	movl	%ecx, %esi
  40737e:	49 89 d3 	movq	%rdx, %r11
  407381:	e9 be fe ff ff 	jmp	-322 <runtime.evacuate+0x114>
  407386:	89 fe 	movl	%edi, %esi
  407388:	48 89 cf 	movq	%rcx, %rdi
  40738b:	49 89 c7 	movq	%rax, %r15
  40738e:	4c 89 f0 	movq	%r14, %rax
  407391:	e8 0a f5 03 00 	callq	259338 <runtime.gcWriteBarrier>
  407396:	4c 89 f8 	movq	%r15, %rax
  407399:	89 f7 	movl	%esi, %edi
  40739b:	eb a6 	jmp	-90 <runtime.evacuate+0x213>
  40739d:	49 8b 40 38 	movq	56(%r8), %rax
  4073a1:	4a 8b 8c 1c 80 00 00 00 	movq	128(%rsp,%r11), %rcx
  4073a9:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4073ae:	48 89 04 24 	movq	%rax, (%rsp)
  4073b2:	4c 89 64 24 10 	movq	%r12, 16(%rsp)
  4073b7:	e8 d4 46 00 00 	callq	18132 <runtime.typedmemmove>
  4073bc:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4073c1:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  4073c6:	48 8b 9c 24 c0 00 00 00 	movq	192(%rsp), %rbx
  4073ce:	0f b6 7c 24 27 	movzbl	39(%rsp), %edi
  4073d3:	4c 8b 84 24 b8 00 00 00 	movq	184(%rsp), %r8
  4073db:	4c 8b 4c 24 60 	movq	96(%rsp), %r9
  4073e0:	4c 8b 94 24 c8 00 00 00 	movq	200(%rsp), %r10
  4073e8:	4c 8b 5c 24 38 	movq	56(%rsp), %r11
  4073ed:	4c 8b 64 24 50 	movq	80(%rsp), %r12
  4073f2:	4c 8b 6c 24 48 	movq	72(%rsp), %r13
  4073f7:	e9 47 ff ff ff 	jmp	-185 <runtime.evacuate+0x213>
  4073fc:	89 fe 	movl	%edi, %esi
  4073fe:	48 89 cf 	movq	%rcx, %rdi
  407401:	49 89 c6 	movq	%rax, %r14
  407404:	4c 89 f8 	movq	%r15, %rax
  407407:	e8 94 f4 03 00 	callq	259220 <runtime.gcWriteBarrier>
  40740c:	4c 89 f0 	movq	%r14, %rax
  40740f:	89 f7 	movl	%esi, %edi
  407411:	e9 09 ff ff ff 	jmp	-247 <runtime.evacuate+0x1ef>
  407416:	49 8b 40 30 	movq	48(%r8), %rax
  40741a:	4a 8b 4c 1c 78 	movq	120(%rsp,%r11), %rcx
  40741f:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  407424:	48 89 04 24 	movq	%rax, (%rsp)
  407428:	4c 89 6c 24 10 	movq	%r13, 16(%rsp)
  40742d:	e8 5e 46 00 00 	callq	18014 <runtime.typedmemmove>
  407432:	48 8b 44 24 28 	movq	40(%rsp), %rax
  407437:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  40743c:	48 8b 9c 24 c0 00 00 00 	movq	192(%rsp), %rbx
  407444:	0f b6 7c 24 27 	movzbl	39(%rsp), %edi
  407449:	4c 8b 84 24 b8 00 00 00 	movq	184(%rsp), %r8
  407451:	4c 8b 4c 24 60 	movq	96(%rsp), %r9
  407456:	4c 8b 94 24 c8 00 00 00 	movq	200(%rsp), %r10
  40745e:	4c 8b 5c 24 38 	movq	56(%rsp), %r11
  407463:	4c 8b 64 24 50 	movq	80(%rsp), %r12
  407468:	4c 8b 6c 24 48 	movq	72(%rsp), %r13
  40746d:	e9 ad fe ff ff 	jmp	-339 <runtime.evacuate+0x1ef>
  407472:	44 88 74 24 25 	movb	%r14b, 37(%rsp)
  407477:	4a 8b 44 1c 68 	movq	104(%rsp,%r11), %rax
  40747c:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  407481:	48 89 1c 24 	movq	%rbx, (%rsp)
  407485:	4c 89 44 24 08 	movq	%r8, 8(%rsp)
  40748a:	e8 01 eb ff ff 	callq	-5375 <runtime.(*hmap).newoverflow>
  40748f:	48 8b 44 24 18 	movq	24(%rsp), %rax
  407494:	4c 8b 5c 24 38 	movq	56(%rsp), %r11
  407499:	4a 89 44 1c 68 	movq	%rax, 104(%rsp,%r11)
  40749e:	4a c7 44 1c 70 00 00 00 00 	movq	$0, 112(%rsp,%r11)
  4074a7:	4a 8b 44 1c 68 	movq	104(%rsp,%r11), %rax
  4074ac:	48 8d 48 08 	leaq	8(%rax), %rcx
  4074b0:	4a 89 4c 1c 78 	movq	%rcx, 120(%rsp,%r11)
  4074b5:	4c 8b 84 24 b8 00 00 00 	movq	184(%rsp), %r8
  4074bd:	41 0f b6 48 50 	movzbl	80(%r8), %ecx
  4074c2:	48 8d 44 c8 08 	leaq	8(%rax,%rcx,8), %rax
  4074c7:	4a 89 84 1c 80 00 00 00 	movq	%rax, 128(%rsp,%r11)
  4074cf:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4074d4:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  4074d9:	48 8b 9c 24 c0 00 00 00 	movq	192(%rsp), %rbx
  4074e1:	0f b6 74 24 27 	movzbl	39(%rsp), %esi
  4074e6:	4c 8b 4c 24 60 	movq	96(%rsp), %r9
  4074eb:	4c 8b 94 24 c8 00 00 00 	movq	200(%rsp), %r10
  4074f3:	4c 8b 64 24 50 	movq	80(%rsp), %r12
  4074f8:	4c 8b 6c 24 48 	movq	72(%rsp), %r13
  4074fd:	44 0f b6 74 24 25 	movzbl	37(%rsp), %r14d
  407503:	4c 8b 7c 24 58 	movq	88(%rsp), %r15
  407508:	e9 d7 fd ff ff 	jmp	-553 <runtime.evacuate+0x1b4>
  40750d:	44 88 74 24 26 	movb	%r14b, 38(%rsp)
  407512:	49 8b 40 30 	movq	48(%r8), %rax
  407516:	48 8b 40 18 	movq	24(%rax), %rax
  40751a:	48 8b 10 	movq	(%rax), %rdx
  40751d:	8b 43 0c 	movl	12(%rbx), %eax
  407520:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  407525:	4c 89 3c 24 	movq	%r15, (%rsp)
  407529:	48 8b 02 	movq	(%rdx), %rax
  40752c:	ff d0 	callq	*%rax
  40752e:	48 8b 44 24 10 	movq	16(%rsp), %rax
  407533:	48 8b 8c 24 c0 00 00 00 	movq	192(%rsp), %rcx
  40753b:	0f b6 59 08 	movzbl	8(%rcx), %ebx
  40753f:	f6 c3 01 	testb	$1, %bl
  407542:	0f 84 e4 00 00 00 	je	228 <runtime.evacuate+0x4fc>
  407548:	48 8b 9c 24 b8 00 00 00 	movq	184(%rsp), %rbx
  407550:	0f b6 73 56 	movzbl	86(%rbx), %esi
  407554:	40 84 f6 	testb	%sil, %sil
  407557:	74 55 	je	85 <runtime.evacuate+0x47e>
  407559:	0f b6 74 24 27 	movzbl	39(%rsp), %esi
  40755e:	48 0f a3 f0 	btq	%rsi, %rax
  407562:	41 0f 92 c0 	setb	%r8b
  407566:	0f b6 44 24 26 	movzbl	38(%rsp), %eax
  40756b:	89 f1 	movl	%esi, %ecx
  40756d:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  407572:	48 8b 9c 24 c0 00 00 00 	movq	192(%rsp), %rbx
  40757a:	4c 8b 4c 24 60 	movq	96(%rsp), %r9
  40757f:	4c 8b 94 24 c8 00 00 00 	movq	200(%rsp), %r10
  407587:	4c 8b 64 24 50 	movq	80(%rsp), %r12
  40758c:	4c 8b 6c 24 48 	movq	72(%rsp), %r13
  407591:	4c 8b 7c 24 58 	movq	88(%rsp), %r15
  407596:	44 89 c7 	movl	%r8d, %edi
  407599:	41 89 c6 	movl	%eax, %r14d
  40759c:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4075a1:	4c 8b 84 24 b8 00 00 00 	movq	184(%rsp), %r8
  4075a9:	e9 08 fd ff ff 	jmp	-760 <runtime.evacuate+0x186>
  4075ae:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  4075b3:	48 8b 43 30 	movq	48(%rbx), %rax
  4075b7:	48 8b 40 18 	movq	24(%rax), %rax
  4075bb:	48 8b 50 08 	movq	8(%rax), %rdx
  4075bf:	48 8b 44 24 58 	movq	88(%rsp), %rax
  4075c4:	48 89 04 24 	movq	%rax, (%rsp)
  4075c8:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4075cd:	48 8b 0a 	movq	(%rdx), %rcx
  4075d0:	ff d1 	callq	*%rcx
  4075d2:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  4075d7:	84 c0 	testb	%al, %al
  4075d9:	74 1a 	je	26 <runtime.evacuate+0x4c5>
  4075db:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4075e0:	48 8b 8c 24 c0 00 00 00 	movq	192(%rsp), %rcx
  4075e8:	48 8b 9c 24 b8 00 00 00 	movq	184(%rsp), %rbx
  4075f0:	e9 64 ff ff ff 	jmp	-156 <runtime.evacuate+0x429>
  4075f5:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4075fa:	48 c1 e9 38 	shrq	$56, %rcx
  4075fe:	80 f9 04 	cmpb	$4, %cl
  407601:	73 03 	jae	3 <runtime.evacuate+0x4d6>
  407603:	83 c1 04 	addl	$4, %ecx
  407606:	44 0f b6 44 24 26 	movzbl	38(%rsp), %r8d
  40760c:	41 83 e0 01 	andl	$1, %r8d
  407610:	48 8b 9c 24 b8 00 00 00 	movq	184(%rsp), %rbx
  407618:	0f b6 74 24 27 	movzbl	39(%rsp), %esi
  40761d:	89 c8 	movl	%ecx, %eax
  40761f:	48 8b 8c 24 c0 00 00 00 	movq	192(%rsp), %rcx
  407627:	e9 3f ff ff ff 	jmp	-193 <runtime.evacuate+0x43b>
  40762c:	48 8b 9c 24 b8 00 00 00 	movq	184(%rsp), %rbx
  407634:	e9 20 ff ff ff 	jmp	-224 <runtime.evacuate+0x429>
  407639:	4d 89 ef 	movq	%r13, %r15
  40763c:	e9 4d fc ff ff 	jmp	-947 <runtime.evacuate+0x15e>
  407641:	45 0f b7 60 54 	movzwl	84(%r8), %r12d
  407646:	4f 8d 64 21 f8 	leaq	-8(%r9,%r12), %r12
  40764b:	4d 8b 0c 24 	movq	(%r12), %r9
  40764f:	4d 85 c9 	testq	%r9, %r9
  407652:	74 1a 	je	26 <runtime.evacuate+0x53e>
  407654:	4c 89 4c 24 60 	movq	%r9, 96(%rsp)
  407659:	45 0f b6 60 50 	movzbl	80(%r8), %r12d
  40765e:	4d 8d 69 08 	leaq	8(%r9), %r13
  407662:	4f 8d 64 e1 08 	leaq	8(%r9,%r12,8), %r12
  407667:	31 c0 	xorl	%eax, %eax
  407669:	e9 e9 fb ff ff 	jmp	-1047 <runtime.evacuate+0x127>
  40766e:	0f b6 43 08 	movzbl	8(%rbx), %eax
  407672:	a8 02 	testb	$2, %al
  407674:	75 0c 	jne	12 <runtime.evacuate+0x552>
  407676:	49 8b 40 40 	movq	64(%r8), %rax
  40767a:	0f b6 40 17 	movzbl	23(%rax), %eax
  40767e:	a8 80 	testb	$-128, %al
  407680:	74 2e 	je	46 <runtime.evacuate+0x580>
  407682:	48 8b 43 20 	movq	32(%rbx), %rax
  407686:	49 39 c2 	cmpq	%rax, %r10
  407689:	74 10 	je	16 <runtime.evacuate+0x56b>
  40768b:	48 8b ac 24 a8 00 00 00 	movq	168(%rsp), %rbp
  407693:	48 81 c4 b0 00 00 00 	addq	$176, %rsp
  40769a:	c3 	retq
  40769b:	48 89 1c 24 	movq	%rbx, (%rsp)
  40769f:	4c 89 44 24 08 	movq	%r8, 8(%rsp)
  4076a4:	4c 89 5c 24 10 	movq	%r11, 16(%rsp)
  4076a9:	e8 c2 00 00 00 	callq	194 <runtime.advanceEvacuationMark>
  4076ae:	eb db 	jmp	-37 <runtime.evacuate+0x55b>
  4076b0:	41 0f b7 40 54 	movzwl	84(%r8), %eax
  4076b5:	48 89 c1 	movq	%rax, %rcx
  4076b8:	49 0f af c2 	imulq	%r10, %rax
  4076bc:	48 03 43 18 	addq	24(%rbx), %rax
  4076c0:	48 83 c0 08 	addq	$8, %rax
  4076c4:	48 89 04 24 	movq	%rax, (%rsp)
  4076c8:	48 8d 41 f8 	leaq	-8(%rcx), %rax
  4076cc:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4076d1:	e8 aa 46 00 00 	callq	18090 <runtime.memclrHasPointers>
  4076d6:	48 8b 9c 24 c0 00 00 00 	movq	192(%rsp), %rbx
  4076de:	4c 8b 84 24 b8 00 00 00 	movq	184(%rsp), %r8
  4076e6:	4c 8b 94 24 c8 00 00 00 	movq	200(%rsp), %r10
  4076ee:	4c 8b 5c 24 40 	movq	64(%rsp), %r11
  4076f3:	eb 8d 	jmp	-115 <runtime.evacuate+0x552>
  4076f5:	4c 8d a4 24 88 00 00 00 	leaq	136(%rsp), %r12
  4076fd:	41 84 04 24 	testb	%al, (%r12)
  407701:	4f 8d 24 13 	leaq	(%r11,%r10), %r12
  407705:	45 0f b7 68 54 	movzwl	84(%r8), %r13d
  40770a:	4d 0f af ec 	imulq	%r12, %r13
  40770e:	4c 03 6b 10 	addq	16(%rbx), %r13
  407712:	4c 89 ac 24 88 00 00 00 	movq	%r13, 136(%rsp)
  40771a:	4d 8d 65 08 	leaq	8(%r13), %r12
  40771e:	4c 89 a4 24 98 00 00 00 	movq	%r12, 152(%rsp)
  407726:	45 0f b6 60 50 	movzbl	80(%r8), %r12d
  40772b:	4f 8d 64 e5 08 	leaq	8(%r13,%r12,8), %r12
  407730:	4c 89 a4 24 a0 00 00 00 	movq	%r12, 160(%rsp)
  407738:	e9 f9 fa ff ff 	jmp	-1287 <runtime.evacuate+0x106>
  40773d:	ff ce 	decl	%esi
  40773f:	e9 73 fa ff ff 	jmp	-1421 <runtime.evacuate+0x87>
  407744:	e8 f7 82 01 00 	callq	99063 <runtime.panicindex>
  407749:	0f 0b 	ud2
  40774b:	48 8d 05 e2 2f 06 00 	leaq	405474(%rip), %rax
  407752:	48 89 04 24 	movq	%rax, (%rsp)
  407756:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  40775f:	e8 6c 9a 01 00 	callq	105068 <runtime.throw>
  407764:	0f 0b 	ud2
  407766:	e8 05 ce 03 00 	callq	249349 <runtime.morestack_noctxt>
  40776b:	e9 c0 f9 ff ff 	jmp	-1600 <runtime.evacuate>

runtime.advanceEvacuationMark:
  407770:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  407779:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40777d:	0f 86 d8 00 00 00 	jbe	216 <runtime.advanceEvacuationMark+0xeb>
  407783:	48 83 ec 08 	subq	$8, %rsp
  407787:	48 89 2c 24 	movq	%rbp, (%rsp)
  40778b:	48 8d 2c 24 	leaq	(%rsp), %rbp
  40778f:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  407794:	48 8b 51 20 	movq	32(%rcx), %rdx
  407798:	48 8d 5a 01 	leaq	1(%rdx), %rbx
  40779c:	48 89 59 20 	movq	%rbx, 32(%rcx)
  4077a0:	48 81 c2 01 04 00 00 	addq	$1025, %rdx
  4077a7:	48 8b 5c 24 20 	movq	32(%rsp), %rbx
  4077ac:	48 39 da 	cmpq	%rbx, %rdx
  4077af:	0f 86 9b 00 00 00 	jbe	155 <runtime.advanceEvacuationMark+0xe0>
  4077b5:	48 89 d8 	movq	%rbx, %rax
  4077b8:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  4077bd:	eb 07 	jmp	7 <runtime.advanceEvacuationMark+0x56>
  4077bf:	48 ff c6 	incq	%rsi
  4077c2:	48 89 71 20 	movq	%rsi, 32(%rcx)
  4077c6:	48 8b 71 20 	movq	32(%rcx), %rsi
  4077ca:	48 39 de 	cmpq	%rbx, %rsi
  4077cd:	74 22 	je	34 <runtime.advanceEvacuationMark+0x81>
  4077cf:	4c 8b 41 18 	movq	24(%rcx), %r8
  4077d3:	44 0f b7 4a 54 	movzwl	84(%rdx), %r9d
  4077d8:	4c 0f af ce 	imulq	%rsi, %r9
  4077dc:	4f 8d 14 08 	leaq	(%r8,%r9), %r10
  4077e0:	41 84 02 	testb	%al, (%r10)
  4077e3:	47 0f b6 04 08 	movzbl	(%r8,%r9), %r8d
  4077e8:	41 ff c8 	decl	%r8d
  4077eb:	41 80 f8 03 	cmpb	$3, %r8b
  4077ef:	72 ce 	jb	-50 <runtime.advanceEvacuationMark+0x4f>
  4077f1:	48 39 c6 	cmpq	%rax, %rsi
  4077f4:	75 3f 	jne	63 <runtime.advanceEvacuationMark+0xc5>
  4077f6:	8b 15 14 c2 0b 00 	movl	770580(%rip), %edx
  4077fc:	48 8d 79 18 	leaq	24(%rcx), %rdi
  407800:	85 d2 	testl	%edx, %edx
  407802:	75 43 	jne	67 <runtime.advanceEvacuationMark+0xd7>
  407804:	48 c7 41 18 00 00 00 00 	movq	$0, 24(%rcx)
  40780c:	48 8b 51 28 	movq	40(%rcx), %rdx
  407810:	48 85 d2 	testq	%rdx, %rdx
  407813:	74 16 	je	22 <runtime.advanceEvacuationMark+0xbb>
  407815:	8b 1d f5 c1 0b 00 	movl	770549(%rip), %ebx
  40781b:	48 8d 7a 08 	leaq	8(%rdx), %rdi
  40781f:	85 db 	testl	%ebx, %ebx
  407821:	75 1b 	jne	27 <runtime.advanceEvacuationMark+0xce>
  407823:	48 c7 42 08 00 00 00 00 	movq	$0, 8(%rdx)
  40782b:	0f b6 41 08 	movzbl	8(%rcx), %eax
  40782f:	83 e0 f7 	andl	$-9, %eax
  407832:	88 41 08 	movb	%al, 8(%rcx)
  407835:	48 8b 2c 24 	movq	(%rsp), %rbp
  407839:	48 83 c4 08 	addq	$8, %rsp
  40783d:	c3 	retq
  40783e:	31 c0 	xorl	%eax, %eax
  407840:	e8 5b f0 03 00 	callq	258139 <runtime.gcWriteBarrier>
  407845:	eb e4 	jmp	-28 <runtime.advanceEvacuationMark+0xbb>
  407847:	31 c0 	xorl	%eax, %eax
  407849:	e8 52 f0 03 00 	callq	258130 <runtime.gcWriteBarrier>
  40784e:	eb bc 	jmp	-68 <runtime.advanceEvacuationMark+0x9c>
  407850:	48 89 d8 	movq	%rbx, %rax
  407853:	48 89 d3 	movq	%rdx, %rbx
  407856:	e9 5d ff ff ff 	jmp	-163 <runtime.advanceEvacuationMark+0x48>
  40785b:	e8 10 cd 03 00 	callq	249104 <runtime.morestack_noctxt>
  407860:	e9 0b ff ff ff 	jmp	-245 <runtime.advanceEvacuationMark>
  407865:	cc 	int3
  407866:	cc 	int3
  407867:	cc 	int3
  407868:	cc 	int3
  407869:	cc 	int3
  40786a:	cc 	int3
  40786b:	cc 	int3
  40786c:	cc 	int3
  40786d:	cc 	int3
  40786e:	cc 	int3
  40786f:	cc 	int3

runtime.mapaccess1_fast32:
  407870:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  407879:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40787d:	0f 86 83 01 00 00 	jbe	387 <runtime.mapaccess1_fast32+0x196>
  407883:	48 83 ec 20 	subq	$32, %rsp
  407887:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  40788c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  407891:	48 8b 44 24 30 	movq	48(%rsp), %rax
  407896:	48 85 c0 	testq	%rax, %rax
  407899:	0f 84 36 01 00 00 	je	310 <runtime.mapaccess1_fast32+0x165>
  40789f:	48 8b 08 	movq	(%rax), %rcx
  4078a2:	48 85 c9 	testq	%rcx, %rcx
  4078a5:	0f 84 2a 01 00 00 	je	298 <runtime.mapaccess1_fast32+0x165>
  4078ab:	0f b6 48 08 	movzbl	8(%rax), %ecx
  4078af:	f6 c1 04 	testb	$4, %cl
  4078b2:	0f 85 33 01 00 00 	jne	307 <runtime.mapaccess1_fast32+0x17b>
  4078b8:	0f b6 48 09 	movzbl	9(%rax), %ecx
  4078bc:	84 c9 	testb	%cl, %cl
  4078be:	75 7c 	jne	124 <runtime.mapaccess1_fast32+0xcc>
  4078c0:	48 8b 40 10 	movq	16(%rax), %rax
  4078c4:	eb 53 	jmp	83 <runtime.mapaccess1_fast32+0xa9>
  4078c6:	48 ff c2 	incq	%rdx
  4078c9:	48 83 c1 04 	addq	$4, %rcx
  4078cd:	48 83 fa 08 	cmpq	$8, %rdx
  4078d1:	73 33 	jae	51 <runtime.mapaccess1_fast32+0x96>
  4078d3:	8b 19 	movl	(%rcx), %ebx
  4078d5:	8b 74 24 38 	movl	56(%rsp), %esi
  4078d9:	39 f3 	cmpl	%esi, %ebx
  4078db:	75 e9 	jne	-23 <runtime.mapaccess1_fast32+0x56>
  4078dd:	0f b6 1c 02 	movzbl	(%rdx,%rax), %ebx
  4078e1:	84 db 	testb	%bl, %bl
  4078e3:	74 e1 	je	-31 <runtime.mapaccess1_fast32+0x56>
  4078e5:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  4078ea:	0f b6 49 52 	movzbl	82(%rcx), %ecx
  4078ee:	48 0f af d1 	imulq	%rcx, %rdx
  4078f2:	48 8d 44 02 28 	leaq	40(%rdx,%rax), %rax
  4078f7:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  4078fc:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  407901:	48 83 c4 20 	addq	$32, %rsp
  407905:	c3 	retq
  407906:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  40790b:	0f b7 51 54 	movzwl	84(%rcx), %edx
  40790f:	48 8d 54 10 f8 	leaq	-8(%rax,%rdx), %rdx
  407914:	84 01 	testb	%al, (%rcx)
  407916:	48 8b 02 	movq	(%rdx), %rax
  407919:	48 85 c0 	testq	%rax, %rax
  40791c:	74 08 	je	8 <runtime.mapaccess1_fast32+0xb6>
  40791e:	48 8d 48 08 	leaq	8(%rax), %rcx
  407922:	31 d2 	xorl	%edx, %edx
  407924:	eb a7 	jmp	-89 <runtime.mapaccess1_fast32+0x5d>
  407926:	48 8d 05 d3 c9 0b 00 	leaq	772563(%rip), %rax
  40792d:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  407932:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  407937:	48 83 c4 20 	addq	$32, %rsp
  40793b:	c3 	retq
  40793c:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  407941:	48 8b 59 30 	movq	48(%rcx), %rbx
  407945:	48 8b 5b 18 	movq	24(%rbx), %rbx
  407949:	48 8b 13 	movq	(%rbx), %rdx
  40794c:	8b 58 0c 	movl	12(%rax), %ebx
  40794f:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  407954:	48 8d 5c 24 38 	leaq	56(%rsp), %rbx
  407959:	48 89 1c 24 	movq	%rbx, (%rsp)
  40795d:	48 8b 1a 	movq	(%rdx), %rbx
  407960:	ff d3 	callq	*%rbx
  407962:	48 8b 44 24 10 	movq	16(%rsp), %rax
  407967:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  40796c:	0f b6 59 09 	movzbl	9(%rcx), %ebx
  407970:	48 89 ca 	movq	%rcx, %rdx
  407973:	89 d9 	movl	%ebx, %ecx
  407975:	be 01 00 00 00 	movl	$1, %esi
  40797a:	48 d3 e6 	shlq	%cl, %rsi
  40797d:	48 8d 4e ff 	leaq	-1(%rsi), %rcx
  407981:	48 89 cb 	movq	%rcx, %rbx
  407984:	48 21 c1 	andq	%rax, %rcx
  407987:	48 8b 74 24 28 	movq	40(%rsp), %rsi
  40798c:	0f b7 7e 54 	movzwl	84(%rsi), %edi
  407990:	48 0f af cf 	imulq	%rdi, %rcx
  407994:	4c 8b 42 18 	movq	24(%rdx), %r8
  407998:	48 03 4a 10 	addq	16(%rdx), %rcx
  40799c:	4d 85 c0 	testq	%r8, %r8
  40799f:	74 22 	je	34 <runtime.mapaccess1_fast32+0x153>
  4079a1:	0f b6 52 08 	movzbl	8(%rdx), %edx
  4079a5:	f6 c2 08 	testb	$8, %dl
  4079a8:	74 26 	je	38 <runtime.mapaccess1_fast32+0x160>
  4079aa:	48 21 c3 	andq	%rax, %rbx
  4079ad:	48 0f af df 	imulq	%rdi, %rbx
  4079b1:	49 8d 04 18 	leaq	(%r8,%rbx), %rax
  4079b5:	84 00 	testb	%al, (%rax)
  4079b7:	42 0f b6 14 03 	movzbl	(%rbx,%r8), %edx
  4079bc:	ff ca 	decl	%edx
  4079be:	80 fa 03 	cmpb	$3, %dl
  4079c1:	73 08 	jae	8 <runtime.mapaccess1_fast32+0x15b>
  4079c3:	48 89 c8 	movq	%rcx, %rax
  4079c6:	e9 4e ff ff ff 	jmp	-178 <runtime.mapaccess1_fast32+0xa9>
  4079cb:	48 89 c1 	movq	%rax, %rcx
  4079ce:	eb f3 	jmp	-13 <runtime.mapaccess1_fast32+0x153>
  4079d0:	48 d1 eb 	shrq	%rbx
  4079d3:	eb d5 	jmp	-43 <runtime.mapaccess1_fast32+0x13a>
  4079d5:	48 8d 05 24 c9 0b 00 	leaq	772388(%rip), %rax
  4079dc:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  4079e1:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  4079e6:	48 83 c4 20 	addq	$32, %rsp
  4079ea:	c3 	retq
  4079eb:	48 8d 05 d4 4f 06 00 	leaq	413652(%rip), %rax
  4079f2:	48 89 04 24 	movq	%rax, (%rsp)
  4079f6:	48 c7 44 24 08 21 00 00 00 	movq	$33, 8(%rsp)
  4079ff:	e8 cc 97 01 00 	callq	104396 <runtime.throw>
  407a04:	0f 0b 	ud2
  407a06:	e8 65 cb 03 00 	callq	248677 <runtime.morestack_noctxt>
  407a0b:	e9 60 fe ff ff 	jmp	-416 <runtime.mapaccess1_fast32>

runtime.mapaccess2_fast32:
  407a10:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  407a19:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  407a1d:	0f 86 96 01 00 00 	jbe	406 <runtime.mapaccess2_fast32+0x1a9>
  407a23:	48 83 ec 20 	subq	$32, %rsp
  407a27:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  407a2c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  407a31:	48 8b 44 24 30 	movq	48(%rsp), %rax
  407a36:	48 85 c0 	testq	%rax, %rax
  407a39:	0f 84 44 01 00 00 	je	324 <runtime.mapaccess2_fast32+0x173>
  407a3f:	48 8b 08 	movq	(%rax), %rcx
  407a42:	48 85 c9 	testq	%rcx, %rcx
  407a45:	0f 84 38 01 00 00 	je	312 <runtime.mapaccess2_fast32+0x173>
  407a4b:	0f b6 48 08 	movzbl	8(%rax), %ecx
  407a4f:	f6 c1 04 	testb	$4, %cl
  407a52:	0f 85 46 01 00 00 	jne	326 <runtime.mapaccess2_fast32+0x18e>
  407a58:	0f b6 48 09 	movzbl	9(%rax), %ecx
  407a5c:	84 c9 	testb	%cl, %cl
  407a5e:	0f 85 86 00 00 00 	jne	134 <runtime.mapaccess2_fast32+0xda>
  407a64:	48 8b 40 10 	movq	16(%rax), %rax
  407a68:	eb 58 	jmp	88 <runtime.mapaccess2_fast32+0xb2>
  407a6a:	48 ff c2 	incq	%rdx
  407a6d:	48 83 c1 04 	addq	$4, %rcx
  407a71:	48 83 fa 08 	cmpq	$8, %rdx
  407a75:	73 38 	jae	56 <runtime.mapaccess2_fast32+0x9f>
  407a77:	8b 19 	movl	(%rcx), %ebx
  407a79:	8b 74 24 38 	movl	56(%rsp), %esi
  407a7d:	39 f3 	cmpl	%esi, %ebx
  407a7f:	75 e9 	jne	-23 <runtime.mapaccess2_fast32+0x5a>
  407a81:	0f b6 1c 02 	movzbl	(%rdx,%rax), %ebx
  407a85:	84 db 	testb	%bl, %bl
  407a87:	74 e1 	je	-31 <runtime.mapaccess2_fast32+0x5a>
  407a89:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  407a8e:	0f b6 49 52 	movzbl	82(%rcx), %ecx
  407a92:	48 0f af d1 	imulq	%rcx, %rdx
  407a96:	48 8d 44 02 28 	leaq	40(%rdx,%rax), %rax
  407a9b:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  407aa0:	c6 44 24 48 01 	movb	$1, 72(%rsp)
  407aa5:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  407aaa:	48 83 c4 20 	addq	$32, %rsp
  407aae:	c3 	retq
  407aaf:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  407ab4:	0f b7 51 54 	movzwl	84(%rcx), %edx
  407ab8:	48 8d 54 10 f8 	leaq	-8(%rax,%rdx), %rdx
  407abd:	84 01 	testb	%al, (%rcx)
  407abf:	48 8b 02 	movq	(%rdx), %rax
  407ac2:	48 85 c0 	testq	%rax, %rax
  407ac5:	74 08 	je	8 <runtime.mapaccess2_fast32+0xbf>
  407ac7:	48 8d 48 08 	leaq	8(%rax), %rcx
  407acb:	31 d2 	xorl	%edx, %edx
  407acd:	eb a2 	jmp	-94 <runtime.mapaccess2_fast32+0x61>
  407acf:	48 8d 05 2a c8 0b 00 	leaq	772138(%rip), %rax
  407ad6:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  407adb:	c6 44 24 48 00 	movb	$0, 72(%rsp)
  407ae0:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  407ae5:	48 83 c4 20 	addq	$32, %rsp
  407ae9:	c3 	retq
  407aea:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  407aef:	48 8b 59 30 	movq	48(%rcx), %rbx
  407af3:	48 8b 5b 18 	movq	24(%rbx), %rbx
  407af7:	48 8b 13 	movq	(%rbx), %rdx
  407afa:	8b 58 0c 	movl	12(%rax), %ebx
  407afd:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  407b02:	48 8d 5c 24 38 	leaq	56(%rsp), %rbx
  407b07:	48 89 1c 24 	movq	%rbx, (%rsp)
  407b0b:	48 8b 1a 	movq	(%rdx), %rbx
  407b0e:	ff d3 	callq	*%rbx
  407b10:	48 8b 44 24 10 	movq	16(%rsp), %rax
  407b15:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  407b1a:	0f b6 59 09 	movzbl	9(%rcx), %ebx
  407b1e:	48 89 ca 	movq	%rcx, %rdx
  407b21:	89 d9 	movl	%ebx, %ecx
  407b23:	be 01 00 00 00 	movl	$1, %esi
  407b28:	48 d3 e6 	shlq	%cl, %rsi
  407b2b:	48 8d 4e ff 	leaq	-1(%rsi), %rcx
  407b2f:	48 89 cb 	movq	%rcx, %rbx
  407b32:	48 21 c1 	andq	%rax, %rcx
  407b35:	48 8b 74 24 28 	movq	40(%rsp), %rsi
  407b3a:	0f b7 7e 54 	movzwl	84(%rsi), %edi
  407b3e:	48 0f af cf 	imulq	%rdi, %rcx
  407b42:	4c 8b 42 18 	movq	24(%rdx), %r8
  407b46:	48 03 4a 10 	addq	16(%rdx), %rcx
  407b4a:	4d 85 c0 	testq	%r8, %r8
  407b4d:	74 22 	je	34 <runtime.mapaccess2_fast32+0x161>
  407b4f:	0f b6 52 08 	movzbl	8(%rdx), %edx
  407b53:	f6 c2 08 	testb	$8, %dl
  407b56:	74 26 	je	38 <runtime.mapaccess2_fast32+0x16e>
  407b58:	48 21 c3 	andq	%rax, %rbx
  407b5b:	48 0f af df 	imulq	%rdi, %rbx
  407b5f:	49 8d 04 18 	leaq	(%r8,%rbx), %rax
  407b63:	84 00 	testb	%al, (%rax)
  407b65:	42 0f b6 14 03 	movzbl	(%rbx,%r8), %edx
  407b6a:	ff ca 	decl	%edx
  407b6c:	80 fa 03 	cmpb	$3, %dl
  407b6f:	73 08 	jae	8 <runtime.mapaccess2_fast32+0x169>
  407b71:	48 89 c8 	movq	%rcx, %rax
  407b74:	e9 49 ff ff ff 	jmp	-183 <runtime.mapaccess2_fast32+0xb2>
  407b79:	48 89 c1 	movq	%rax, %rcx
  407b7c:	eb f3 	jmp	-13 <runtime.mapaccess2_fast32+0x161>
  407b7e:	48 d1 eb 	shrq	%rbx
  407b81:	eb d5 	jmp	-43 <runtime.mapaccess2_fast32+0x148>
  407b83:	48 8d 05 76 c7 0b 00 	leaq	771958(%rip), %rax
  407b8a:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  407b8f:	c6 44 24 48 00 	movb	$0, 72(%rsp)
  407b94:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  407b99:	48 83 c4 20 	addq	$32, %rsp
  407b9d:	c3 	retq
  407b9e:	48 8d 05 21 4e 06 00 	leaq	413217(%rip), %rax
  407ba5:	48 89 04 24 	movq	%rax, (%rsp)
  407ba9:	48 c7 44 24 08 21 00 00 00 	movq	$33, 8(%rsp)
  407bb2:	e8 19 96 01 00 	callq	103961 <runtime.throw>
  407bb7:	0f 0b 	ud2
  407bb9:	e8 b2 c9 03 00 	callq	248242 <runtime.morestack_noctxt>
  407bbe:	e9 4d fe ff ff 	jmp	-435 <runtime.mapaccess2_fast32>
  407bc3:	cc 	int3
  407bc4:	cc 	int3
  407bc5:	cc 	int3
  407bc6:	cc 	int3
  407bc7:	cc 	int3
  407bc8:	cc 	int3
  407bc9:	cc 	int3
  407bca:	cc 	int3
  407bcb:	cc 	int3
  407bcc:	cc 	int3
  407bcd:	cc 	int3
  407bce:	cc 	int3
  407bcf:	cc 	int3

runtime.mapassign_fast32:
  407bd0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  407bd9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  407bdd:	0f 86 00 03 00 00 	jbe	768 <runtime.mapassign_fast32+0x313>
  407be3:	48 83 ec 40 	subq	$64, %rsp
  407be7:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  407bec:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  407bf1:	48 8b 44 24 50 	movq	80(%rsp), %rax
  407bf6:	48 85 c0 	testq	%rax, %rax
  407bf9:	0f 84 c6 02 00 00 	je	710 <runtime.mapassign_fast32+0x2f5>
  407bff:	0f b6 48 08 	movzbl	8(%rax), %ecx
  407c03:	f6 c1 04 	testb	$4, %cl
  407c06:	0f 85 9e 02 00 00 	jne	670 <runtime.mapassign_fast32+0x2da>
  407c0c:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  407c11:	48 8b 59 30 	movq	48(%rcx), %rbx
  407c15:	48 8b 5b 18 	movq	24(%rbx), %rbx
  407c19:	48 8b 13 	movq	(%rbx), %rdx
  407c1c:	8b 58 0c 	movl	12(%rax), %ebx
  407c1f:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  407c24:	48 8d 5c 24 58 	leaq	88(%rsp), %rbx
  407c29:	48 89 1c 24 	movq	%rbx, (%rsp)
  407c2d:	48 8b 1a 	movq	(%rdx), %rbx
  407c30:	ff d3 	callq	*%rbx
  407c32:	48 8b 44 24 10 	movq	16(%rsp), %rax
  407c37:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  407c3c:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  407c41:	0f b6 59 08 	movzbl	8(%rcx), %ebx
  407c45:	83 cb 04 	orl	$4, %ebx
  407c48:	88 59 08 	movb	%bl, 8(%rcx)
  407c4b:	48 8b 59 10 	movq	16(%rcx), %rbx
  407c4f:	48 8d 71 10 	leaq	16(%rcx), %rsi
  407c53:	48 85 db 	testq	%rbx, %rbx
  407c56:	0f 85 df 00 00 00 	jne	223 <runtime.mapassign_fast32+0x16b>
  407c5c:	e9 dc 01 00 00 	jmp	476 <runtime.mapassign_fast32+0x26d>
  407c61:	49 ff c1 	incq	%r9
  407c64:	49 83 f9 08 	cmpq	$8, %r9
  407c68:	73 60 	jae	96 <runtime.mapassign_fast32+0xfa>
  407c6a:	84 02 	testb	%al, (%rdx)
  407c6c:	46 0f b6 14 0a 	movzbl	(%rdx,%r9), %r10d
  407c71:	45 84 d2 	testb	%r10b, %r10b
  407c74:	75 0d 	jne	13 <runtime.mapassign_fast32+0xb3>
  407c76:	48 85 c9 	testq	%rcx, %rcx
  407c79:	75 e6 	jne	-26 <runtime.mapassign_fast32+0x91>
  407c7b:	48 89 d1 	movq	%rdx, %rcx
  407c7e:	4d 89 c8 	movq	%r9, %r8
  407c81:	eb de 	jmp	-34 <runtime.mapassign_fast32+0x91>
  407c83:	49 89 d2 	movq	%rdx, %r10
  407c86:	4a 8d 54 8a 08 	leaq	8(%rdx,%r9,4), %rdx
  407c8b:	8b 12 	movl	(%rdx), %edx
  407c8d:	44 8b 5c 24 58 	movl	88(%rsp), %r11d
  407c92:	44 39 da 	cmpl	%r11d, %edx
  407c95:	74 05 	je	5 <runtime.mapassign_fast32+0xcc>
  407c97:	4c 89 d2 	movq	%r10, %rdx
  407c9a:	eb c5 	jmp	-59 <runtime.mapassign_fast32+0x91>
  407c9c:	0f b6 46 52 	movzbl	82(%rsi), %eax
  407ca0:	4c 0f af c8 	imulq	%rax, %r9
  407ca4:	0f b6 43 08 	movzbl	8(%rbx), %eax
  407ca8:	4b 8d 4c 11 28 	leaq	40(%r9,%r10), %rcx
  407cad:	a8 04 	testb	$4, %al
  407caf:	0f 84 da 01 00 00 	je	474 <runtime.mapassign_fast32+0x2bf>
  407cb5:	83 e0 fb 	andl	$-5, %eax
  407cb8:	88 43 08 	movb	%al, 8(%rbx)
  407cbb:	48 89 4c 24 60 	movq	%rcx, 96(%rsp)
  407cc0:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  407cc5:	48 83 c4 40 	addq	$64, %rsp
  407cc9:	c3 	retq
  407cca:	49 89 d1 	movq	%rdx, %r9
  407ccd:	48 8d 54 3a f8 	leaq	-8(%rdx,%rdi), %rdx
  407cd2:	48 8b 12 	movq	(%rdx), %rdx
  407cd5:	48 85 d2 	testq	%rdx, %rdx
  407cd8:	74 05 	je	5 <runtime.mapassign_fast32+0x10f>
  407cda:	45 31 c9 	xorl	%r9d, %r9d
  407cdd:	eb 85 	jmp	-123 <runtime.mapassign_fast32+0x94>
  407cdf:	48 8b 53 18 	movq	24(%rbx), %rdx
  407ce3:	48 85 d2 	testq	%rdx, %rdx
  407ce6:	0f 85 1b 01 00 00 	jne	283 <runtime.mapassign_fast32+0x237>
  407cec:	48 8b 13 	movq	(%rbx), %rdx
  407cef:	48 ff c2 	incq	%rdx
  407cf2:	0f b6 7b 09 	movzbl	9(%rbx), %edi
  407cf6:	48 83 fa 08 	cmpq	$8, %rdx
  407cfa:	0f 8e fb 00 00 00 	jle	251 <runtime.mapassign_fast32+0x22b>
  407d00:	49 89 ca 	movq	%rcx, %r10
  407d03:	89 f9 	movl	%edi, %ecx
  407d05:	41 bb 01 00 00 00 	movl	$1, %r11d
  407d0b:	49 d3 e3 	shlq	%cl, %r11
  407d0e:	49 d1 eb 	shrq	%r11
  407d11:	4f 8d 24 5b 	leaq	(%r11,%r11,2), %r12
  407d15:	4f 8d 1c a3 	leaq	(%r11,%r12,4), %r11
  407d19:	4c 39 da 	cmpq	%r11, %rdx
  407d1c:	0f 97 c2 	seta	%dl
  407d1f:	84 d2 	testb	%dl, %dl
  407d21:	74 58 	je	88 <runtime.mapassign_fast32+0x1ab>
  407d23:	48 89 34 24 	movq	%rsi, (%rsp)
  407d27:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  407d2c:	e8 ff f0 ff ff 	callq	-3841 <runtime.hashGrow>
  407d31:	48 8b 44 24 20 	movq	32(%rsp), %rax
  407d36:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  407d3b:	0f b6 51 09 	movzbl	9(%rcx), %edx
  407d3f:	48 89 cb 	movq	%rcx, %rbx
  407d42:	89 d1 	movl	%edx, %ecx
  407d44:	be 01 00 00 00 	movl	$1, %esi
  407d49:	48 d3 e6 	shlq	%cl, %rsi
  407d4c:	48 8d 56 ff 	leaq	-1(%rsi), %rdx
  407d50:	48 21 c2 	andq	%rax, %rdx
  407d53:	48 8b 73 18 	movq	24(%rbx), %rsi
  407d57:	48 85 f6 	testq	%rsi, %rsi
  407d5a:	0f 85 ac 00 00 00 	jne	172 <runtime.mapassign_fast32+0x23c>
  407d60:	48 8b 74 24 48 	movq	72(%rsp), %rsi
  407d65:	0f b7 7e 54 	movzwl	84(%rsi), %edi
  407d69:	48 0f af d7 	imulq	%rdi, %rdx
  407d6d:	48 03 53 10 	addq	16(%rbx), %rdx
  407d71:	31 c9 	xorl	%ecx, %ecx
  407d73:	45 31 c0 	xorl	%r8d, %r8d
  407d76:	e9 5f ff ff ff 	jmp	-161 <runtime.mapassign_fast32+0x10a>
  407d7b:	0f b7 53 0a 	movzwl	10(%rbx), %edx
  407d7f:	80 f9 0f 	cmpb	$15, %cl
  407d82:	76 05 	jbe	5 <runtime.mapassign_fast32+0x1b9>
  407d84:	b9 0f 00 00 00 	movl	$15, %ecx
  407d89:	83 e1 0f 	andl	$15, %ecx
  407d8c:	bf 01 00 00 00 	movl	$1, %edi
  407d91:	d3 e7 	shll	%cl, %edi
  407d93:	66 39 fa 	cmpw	%di, %dx
  407d96:	73 8b 	jae	-117 <runtime.mapassign_fast32+0x153>
  407d98:	4d 85 d2 	testq	%r10, %r10
  407d9b:	74 32 	je	50 <runtime.mapassign_fast32+0x1ff>
  407d9d:	48 c1 e8 38 	shrq	$56, %rax
  407da1:	3c 04 	cmpb	$4, %al
  407da3:	73 03 	jae	3 <runtime.mapassign_fast32+0x1d8>
  407da5:	83 c0 04 	addl	$4, %eax
  407da8:	41 84 02 	testb	%al, (%r10)
  407dab:	4d 89 c1 	movq	%r8, %r9
  407dae:	49 83 e0 07 	andq	$7, %r8
  407db2:	43 88 04 02 	movb	%al, (%r10,%r8)
  407db6:	4c 89 d0 	movq	%r10, %rax
  407db9:	4b 8d 4c 8a 08 	leaq	8(%r10,%r9,4), %rcx
  407dbe:	8b 54 24 58 	movl	88(%rsp), %edx
  407dc2:	89 11 	movl	%edx, (%rcx)
  407dc4:	48 ff 03 	incq	(%rbx)
  407dc7:	49 89 c2 	movq	%rax, %r10
  407dca:	e9 cd fe ff ff 	jmp	-307 <runtime.mapassign_fast32+0xcc>
  407dcf:	48 89 1c 24 	movq	%rbx, (%rsp)
  407dd3:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  407dd8:	4c 89 4c 24 10 	movq	%r9, 16(%rsp)
  407ddd:	e8 ae e1 ff ff 	callq	-7762 <runtime.(*hmap).newoverflow>
  407de2:	4c 8b 54 24 18 	movq	24(%rsp), %r10
  407de7:	48 8b 44 24 20 	movq	32(%rsp), %rax
  407dec:	48 8b 5c 24 50 	movq	80(%rsp), %rbx
  407df1:	48 8b 74 24 48 	movq	72(%rsp), %rsi
  407df6:	45 31 c0 	xorl	%r8d, %r8d
  407df9:	eb a2 	jmp	-94 <runtime.mapassign_fast32+0x1cd>
  407dfb:	49 89 ca 	movq	%rcx, %r10
  407dfe:	31 d2 	xorl	%edx, %edx
  407e00:	89 f9 	movl	%edi, %ecx
  407e02:	e9 18 ff ff ff 	jmp	-232 <runtime.mapassign_fast32+0x14f>
  407e07:	49 89 ca 	movq	%rcx, %r10
  407e0a:	eb 8c 	jmp	-116 <runtime.mapassign_fast32+0x1c8>
  407e0c:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  407e11:	48 8b 44 24 48 	movq	72(%rsp), %rax
  407e16:	48 89 04 24 	movq	%rax, (%rsp)
  407e1a:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  407e1f:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  407e24:	e8 c7 00 00 00 	callq	199 <runtime.growWork_fast32>
  407e29:	48 8b 44 24 20 	movq	32(%rsp), %rax
  407e2e:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  407e33:	48 8b 5c 24 50 	movq	80(%rsp), %rbx
  407e38:	e9 23 ff ff ff 	jmp	-221 <runtime.mapassign_fast32+0x190>
  407e3d:	48 89 74 24 30 	movq	%rsi, 48(%rsp)
  407e42:	48 8b 44 24 48 	movq	72(%rsp), %rax
  407e47:	48 8b 48 40 	movq	64(%rax), %rcx
  407e4b:	48 89 0c 24 	movq	%rcx, (%rsp)
  407e4f:	e8 cc 32 00 00 	callq	13004 <runtime.newobject>
  407e54:	8b 05 b6 bb 0b 00 	movl	768950(%rip), %eax
  407e5a:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  407e5f:	85 c0 	testl	%eax, %eax
  407e61:	75 18 	jne	24 <runtime.mapassign_fast32+0x2ab>
  407e63:	48 8b 44 24 50 	movq	80(%rsp), %rax
  407e68:	48 89 48 10 	movq	%rcx, 16(%rax)
  407e6c:	48 8b 44 24 20 	movq	32(%rsp), %rax
  407e71:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  407e76:	e9 c0 fe ff ff 	jmp	-320 <runtime.mapassign_fast32+0x16b>
  407e7b:	48 8b 7c 24 30 	movq	48(%rsp), %rdi
  407e80:	48 89 c8 	movq	%rcx, %rax
  407e83:	e8 18 ea 03 00 	callq	256536 <runtime.gcWriteBarrier>
  407e88:	48 8b 44 24 50 	movq	80(%rsp), %rax
  407e8d:	eb dd 	jmp	-35 <runtime.mapassign_fast32+0x29c>
  407e8f:	48 8d 05 f3 33 06 00 	leaq	406515(%rip), %rax
  407e96:	48 89 04 24 	movq	%rax, (%rsp)
  407e9a:	48 c7 44 24 08 15 00 00 00 	movq	$21, 8(%rsp)
  407ea3:	e8 28 93 01 00 	callq	103208 <runtime.throw>
  407ea8:	0f 0b 	ud2
  407eaa:	48 8d 05 d8 33 06 00 	leaq	406488(%rip), %rax
  407eb1:	48 89 04 24 	movq	%rax, (%rsp)
  407eb5:	48 c7 44 24 08 15 00 00 00 	movq	$21, 8(%rsp)
  407ebe:	e8 0d 93 01 00 	callq	103181 <runtime.throw>
  407ec3:	0f 0b 	ud2
  407ec5:	48 8d 05 74 31 05 00 	leaq	340340(%rip), %rax
  407ecc:	48 89 04 24 	movq	%rax, (%rsp)
  407ed0:	48 8d 05 89 ce 06 00 	leaq	446089(%rip), %rax
  407ed7:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  407edc:	e8 4f 8b 01 00 	callq	101199 <runtime.gopanic>
  407ee1:	0f 0b 	ud2
  407ee3:	e8 88 c6 03 00 	callq	247432 <runtime.morestack_noctxt>
  407ee8:	e9 e3 fc ff ff 	jmp	-797 <runtime.mapassign_fast32>
  407eed:	cc 	int3
  407eee:	cc 	int3
  407eef:	cc 	int3

runtime.growWork_fast32:
  407ef0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  407ef9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  407efd:	0f 86 88 00 00 00 	jbe	136 <runtime.growWork_fast32+0x9b>
  407f03:	48 83 ec 20 	subq	$32, %rsp
  407f07:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  407f0c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  407f11:	48 8b 44 24 30 	movq	48(%rsp), %rax
  407f16:	0f b6 50 09 	movzbl	9(%rax), %edx
  407f1a:	0f b6 58 08 	movzbl	8(%rax), %ebx
  407f1e:	f6 c3 08 	testb	$8, %bl
  407f21:	74 64 	je	100 <runtime.growWork_fast32+0x97>
  407f23:	48 8b 5c 24 28 	movq	40(%rsp), %rbx
  407f28:	48 89 1c 24 	movq	%rbx, (%rsp)
  407f2c:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  407f31:	89 d1 	movl	%edx, %ecx
  407f33:	be 01 00 00 00 	movl	$1, %esi
  407f38:	48 d3 e6 	shlq	%cl, %rsi
  407f3b:	48 8d 56 ff 	leaq	-1(%rsi), %rdx
  407f3f:	48 8b 74 24 38 	movq	56(%rsp), %rsi
  407f44:	48 21 d6 	andq	%rdx, %rsi
  407f47:	48 89 74 24 10 	movq	%rsi, 16(%rsp)
  407f4c:	e8 4f 00 00 00 	callq	79 <runtime.evacuate_fast32>
  407f51:	48 8b 44 24 30 	movq	48(%rsp), %rax
  407f56:	48 8b 50 18 	movq	24(%rax), %rdx
  407f5a:	48 85 d2 	testq	%rdx, %rdx
  407f5d:	75 0a 	jne	10 <runtime.growWork_fast32+0x79>
  407f5f:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  407f64:	48 83 c4 20 	addq	$32, %rsp
  407f68:	c3 	retq
  407f69:	48 8b 48 20 	movq	32(%rax), %rcx
  407f6d:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  407f72:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  407f77:	48 89 0c 24 	movq	%rcx, (%rsp)
  407f7b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  407f80:	e8 1b 00 00 00 	callq	27 <runtime.evacuate_fast32>
  407f85:	eb d8 	jmp	-40 <runtime.growWork_fast32+0x6f>
  407f87:	ff ca 	decl	%edx
  407f89:	eb 98 	jmp	-104 <runtime.growWork_fast32+0x33>
  407f8b:	e8 e0 c5 03 00 	callq	247264 <runtime.morestack_noctxt>
  407f90:	e9 5b ff ff ff 	jmp	-165 <runtime.growWork_fast32>
  407f95:	cc 	int3
  407f96:	cc 	int3
  407f97:	cc 	int3
  407f98:	cc 	int3
  407f99:	cc 	int3
  407f9a:	cc 	int3
  407f9b:	cc 	int3
  407f9c:	cc 	int3
  407f9d:	cc 	int3
  407f9e:	cc 	int3
  407f9f:	cc 	int3

runtime.evacuate_fast32:
  407fa0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  407fa9:	48 8d 44 24 e0 	leaq	-32(%rsp), %rax
  407fae:	48 3b 41 10 	cmpq	16(%rcx), %rax
  407fb2:	0f 86 fb 03 00 00 	jbe	1019 <runtime.evacuate_fast32+0x413>
  407fb8:	48 81 ec a0 00 00 00 	subq	$160, %rsp
  407fbf:	48 89 ac 24 98 00 00 00 	movq	%rbp, 152(%rsp)
  407fc7:	48 8d ac 24 98 00 00 00 	leaq	152(%rsp), %rbp
  407fcf:	0f 57 c0 	xorps	%xmm0, %xmm0
  407fd2:	0f 11 44 24 58 	movups	%xmm0, 88(%rsp)
  407fd7:	0f 11 44 24 68 	movups	%xmm0, 104(%rsp)
  407fdc:	0f 11 44 24 78 	movups	%xmm0, 120(%rsp)
  407fe1:	0f 11 84 24 88 00 00 00 	movups	%xmm0, 136(%rsp)
  407fe9:	48 8b 84 24 b0 00 00 00 	movq	176(%rsp), %rax
  407ff1:	48 8d 58 18 	leaq	24(%rax), %rbx
  407ff5:	48 8b b4 24 a8 00 00 00 	movq	168(%rsp), %rsi
  407ffd:	0f b7 7e 54 	movzwl	84(%rsi), %edi
  408001:	4c 8b 84 24 b8 00 00 00 	movq	184(%rsp), %r8
  408009:	49 0f af f8 	imulq	%r8, %rdi
  40800d:	48 03 3b 	addq	(%rbx), %rdi
  408010:	0f b6 58 09 	movzbl	9(%rax), %ebx
  408014:	44 0f b6 48 08 	movzbl	8(%rax), %r9d
  408019:	41 f6 c1 08 	testb	$8, %r9b
  40801d:	0f 84 67 03 00 00 	je	871 <runtime.evacuate_fast32+0x3ea>
  408023:	89 d9 	movl	%ebx, %ecx
  408025:	41 b9 01 00 00 00 	movl	$1, %r9d
  40802b:	49 d3 e1 	shlq	%cl, %r9
  40802e:	44 0f b6 17 	movzbl	(%rdi), %r10d
  408032:	41 ff ca 	decl	%r10d
  408035:	41 80 fa 03 	cmpb	$3, %r10b
  408039:	0f 82 9e 02 00 00 	jb	670 <runtime.evacuate_fast32+0x33d>
  40803f:	0f 57 c0 	xorps	%xmm0, %xmm0
  408042:	0f 11 44 24 58 	movups	%xmm0, 88(%rsp)
  408047:	0f 11 44 24 68 	movups	%xmm0, 104(%rsp)
  40804c:	0f 11 44 24 78 	movups	%xmm0, 120(%rsp)
  408051:	0f 11 84 24 88 00 00 00 	movups	%xmm0, 136(%rsp)
  408059:	4c 8d 54 24 58 	leaq	88(%rsp), %r10
  40805e:	41 84 02 	testb	%al, (%r10)
  408061:	44 0f b7 56 54 	movzwl	84(%rsi), %r10d
  408066:	4d 0f af d0 	imulq	%r8, %r10
  40806a:	4c 03 50 10 	addq	16(%rax), %r10
  40806e:	4c 89 54 24 58 	movq	%r10, 88(%rsp)
  408073:	4d 8d 5a 08 	leaq	8(%r10), %r11
  408077:	4c 89 5c 24 68 	movq	%r11, 104(%rsp)
  40807c:	49 83 c2 28 	addq	$40, %r10
  408080:	4c 89 54 24 70 	movq	%r10, 112(%rsp)
  408085:	44 0f b6 50 08 	movzbl	8(%rax), %r10d
  40808a:	41 f6 c2 08 	testb	$8, %r10b
  40808e:	0f 84 bb 02 00 00 	je	699 <runtime.evacuate_fast32+0x3af>
  408094:	88 4c 24 27 	movb	%cl, 39(%rsp)
  408098:	4c 89 4c 24 38 	movq	%r9, 56(%rsp)
  40809d:	e9 0c 02 00 00 	jmp	524 <runtime.evacuate_fast32+0x30e>
  4080a2:	48 ff c2 	incq	%rdx
  4080a5:	44 0f b6 66 52 	movzbl	82(%rsi), %r12d
  4080aa:	49 83 c2 04 	addq	$4, %r10
  4080ae:	4d 01 e3 	addq	%r12, %r11
  4080b1:	48 83 fa 08 	cmpq	$8, %rdx
  4080b5:	0f 8d e6 01 00 00 	jge	486 <runtime.evacuate_fast32+0x301>
  4080bb:	44 0f b6 24 17 	movzbl	(%rdi,%rdx), %r12d
  4080c0:	45 84 e4 	testb	%r12b, %r12b
  4080c3:	75 06 	jne	6 <runtime.evacuate_fast32+0x12b>
  4080c5:	c6 04 17 01 	movb	$1, (%rdi,%rdx)
  4080c9:	eb d7 	jmp	-41 <runtime.evacuate_fast32+0x102>
  4080cb:	41 80 fc 04 	cmpb	$4, %r12b
  4080cf:	0f 82 c3 02 00 00 	jb	707 <runtime.evacuate_fast32+0x3f8>
  4080d5:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  4080da:	44 88 64 24 26 	movb	%r12b, 38(%rsp)
  4080df:	4c 89 5c 24 40 	movq	%r11, 64(%rsp)
  4080e4:	4c 89 54 24 48 	movq	%r10, 72(%rsp)
  4080e9:	44 0f b6 68 08 	movzbl	8(%rax), %r13d
  4080ee:	41 f6 c5 08 	testb	$8, %r13b
  4080f2:	0f 84 3d 01 00 00 	je	317 <runtime.evacuate_fast32+0x295>
  4080f8:	45 31 ed 	xorl	%r13d, %r13d
  4080fb:	45 8d 75 02 	leal	2(%r13), %r14d
  4080ff:	44 88 34 17 	movb	%r14b, (%rdi,%rdx)
  408103:	45 0f b6 ed 	movzbl	%r13b, %r13d
  408107:	49 83 fd 02 	cmpq	$2, %r13
  40810b:	0f 83 80 02 00 00 	jae	640 <runtime.evacuate_fast32+0x3f1>
  408111:	49 c1 e5 05 	shlq	$5, %r13
  408115:	4c 89 6c 24 30 	movq	%r13, 48(%rsp)
  40811a:	4e 8b 74 2c 60 	movq	96(%rsp,%r13), %r14
  40811f:	49 83 fe 08 	cmpq	$8, %r14
  408123:	0f 84 a8 00 00 00 	je	168 <runtime.evacuate_fast32+0x231>
  408129:	4a 8b 44 2c 58 	movq	88(%rsp,%r13), %rax
  40812e:	84 00 	testb	%al, (%rax)
  408130:	4a 8b 4c 2c 60 	movq	96(%rsp,%r13), %rcx
  408135:	48 83 e1 07 	andq	$7, %rcx
  408139:	44 88 24 08 	movb	%r12b, (%rax,%rcx)
  40813d:	4a 8b 44 2c 68 	movq	104(%rsp,%r13), %rax
  408142:	41 8b 0a 	movl	(%r10), %ecx
  408145:	89 08 	movl	%ecx, (%rax)
  408147:	48 8b 46 38 	movq	56(%rsi), %rax
  40814b:	4a 8b 4c 2c 70 	movq	112(%rsp,%r13), %rcx
  408150:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  408155:	48 89 04 24 	movq	%rax, (%rsp)
  408159:	4c 89 5c 24 10 	movq	%r11, 16(%rsp)
  40815e:	e8 2d 39 00 00 	callq	14637 <runtime.typedmemmove>
  408163:	48 8b 44 24 30 	movq	48(%rsp), %rax
  408168:	48 8b 4c 04 60 	movq	96(%rsp,%rax), %rcx
  40816d:	48 ff c1 	incq	%rcx
  408170:	48 89 4c 04 60 	movq	%rcx, 96(%rsp,%rax)
  408175:	48 8b 4c 04 68 	movq	104(%rsp,%rax), %rcx
  40817a:	48 83 c1 04 	addq	$4, %rcx
  40817e:	48 89 4c 04 68 	movq	%rcx, 104(%rsp,%rax)
  408183:	48 8b 4c 04 70 	movq	112(%rsp,%rax), %rcx
  408188:	48 8b b4 24 a8 00 00 00 	movq	168(%rsp), %rsi
  408190:	0f b6 56 52 	movzbl	82(%rsi), %edx
  408194:	48 01 d1 	addq	%rdx, %rcx
  408197:	48 89 4c 04 70 	movq	%rcx, 112(%rsp,%rax)
  40819c:	48 8b 84 24 b0 00 00 00 	movq	176(%rsp), %rax
  4081a4:	0f b6 4c 24 27 	movzbl	39(%rsp), %ecx
  4081a9:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  4081ae:	89 cb 	movl	%ecx, %ebx
  4081b0:	48 8b 7c 24 50 	movq	80(%rsp), %rdi
  4081b5:	4c 8b 84 24 b8 00 00 00 	movq	184(%rsp), %r8
  4081bd:	4c 8b 4c 24 38 	movq	56(%rsp), %r9
  4081c2:	4c 8b 54 24 48 	movq	72(%rsp), %r10
  4081c7:	4c 8b 5c 24 40 	movq	64(%rsp), %r11
  4081cc:	e9 d1 fe ff ff 	jmp	-303 <runtime.evacuate_fast32+0x102>
  4081d1:	4a 8b 4c 2c 58 	movq	88(%rsp,%r13), %rcx
  4081d6:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  4081db:	48 89 04 24 	movq	%rax, (%rsp)
  4081df:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  4081e4:	e8 a7 dd ff ff 	callq	-8793 <runtime.(*hmap).newoverflow>
  4081e9:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4081ee:	4c 8b 6c 24 30 	movq	48(%rsp), %r13
  4081f3:	4a 89 44 2c 58 	movq	%rax, 88(%rsp,%r13)
  4081f8:	4a c7 44 2c 60 00 00 00 00 	movq	$0, 96(%rsp,%r13)
  408201:	4a 8b 44 2c 58 	movq	88(%rsp,%r13), %rax
  408206:	48 8d 48 08 	leaq	8(%rax), %rcx
  40820a:	4a 89 4c 2c 68 	movq	%rcx, 104(%rsp,%r13)
  40820f:	48 83 c0 28 	addq	$40, %rax
  408213:	4a 89 44 2c 70 	movq	%rax, 112(%rsp,%r13)
  408218:	48 8b b4 24 a8 00 00 00 	movq	168(%rsp), %rsi
  408220:	4c 8b 54 24 48 	movq	72(%rsp), %r10
  408225:	4c 8b 5c 24 40 	movq	64(%rsp), %r11
  40822a:	44 0f b6 64 24 26 	movzbl	38(%rsp), %r12d
  408230:	e9 f4 fe ff ff 	jmp	-268 <runtime.evacuate_fast32+0x189>
  408235:	48 8b 4e 30 	movq	48(%rsi), %rcx
  408239:	48 8b 49 18 	movq	24(%rcx), %rcx
  40823d:	48 8b 11 	movq	(%rcx), %rdx
  408240:	8b 48 0c 	movl	12(%rax), %ecx
  408243:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  408248:	4c 89 14 24 	movq	%r10, (%rsp)
  40824c:	48 8b 0a 	movq	(%rdx), %rcx
  40824f:	ff d1 	callq	*%rcx
  408251:	48 8b 44 24 10 	movq	16(%rsp), %rax
  408256:	0f b6 5c 24 27 	movzbl	39(%rsp), %ebx
  40825b:	48 0f a3 d8 	btq	%rbx, %rax
  40825f:	41 0f 92 c5 	setb	%r13b
  408263:	48 8b 84 24 b0 00 00 00 	movq	176(%rsp), %rax
  40826b:	89 d9 	movl	%ebx, %ecx
  40826d:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  408272:	48 8b b4 24 a8 00 00 00 	movq	168(%rsp), %rsi
  40827a:	48 8b 7c 24 50 	movq	80(%rsp), %rdi
  40827f:	4c 8b 84 24 b8 00 00 00 	movq	184(%rsp), %r8
  408287:	4c 8b 4c 24 38 	movq	56(%rsp), %r9
  40828c:	4c 8b 54 24 48 	movq	72(%rsp), %r10
  408291:	4c 8b 5c 24 40 	movq	64(%rsp), %r11
  408296:	44 0f b6 64 24 26 	movzbl	38(%rsp), %r12d
  40829c:	e9 5a fe ff ff 	jmp	-422 <runtime.evacuate_fast32+0x15b>
  4082a1:	44 0f b7 56 54 	movzwl	84(%rsi), %r10d
  4082a6:	4e 8d 54 17 f8 	leaq	-8(%rdi,%r10), %r10
  4082ab:	49 8b 3a 	movq	(%r10), %rdi
  4082ae:	48 85 ff 	testq	%rdi, %rdi
  4082b1:	74 14 	je	20 <runtime.evacuate_fast32+0x327>
  4082b3:	48 89 7c 24 50 	movq	%rdi, 80(%rsp)
  4082b8:	4c 8d 57 08 	leaq	8(%rdi), %r10
  4082bc:	4c 8d 5f 28 	leaq	40(%rdi), %r11
  4082c0:	31 d2 	xorl	%edx, %edx
  4082c2:	e9 ea fd ff ff 	jmp	-534 <runtime.evacuate_fast32+0x111>
  4082c7:	0f b6 48 08 	movzbl	8(%rax), %ecx
  4082cb:	f6 c1 02 	testb	$2, %cl
  4082ce:	75 0d 	jne	13 <runtime.evacuate_fast32+0x33d>
  4082d0:	48 8b 4e 40 	movq	64(%rsi), %rcx
  4082d4:	0f b6 49 17 	movzbl	23(%rcx), %ecx
  4082d8:	f6 c1 80 	testb	$-128, %cl
  4082db:	74 2e 	je	46 <runtime.evacuate_fast32+0x36b>
  4082dd:	48 8b 48 20 	movq	32(%rax), %rcx
  4082e1:	49 39 c8 	cmpq	%rcx, %r8
  4082e4:	74 10 	je	16 <runtime.evacuate_fast32+0x356>
  4082e6:	48 8b ac 24 98 00 00 00 	movq	152(%rsp), %rbp
  4082ee:	48 81 c4 a0 00 00 00 	addq	$160, %rsp
  4082f5:	c3 	retq
  4082f6:	48 89 04 24 	movq	%rax, (%rsp)
  4082fa:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  4082ff:	4c 89 4c 24 10 	movq	%r9, 16(%rsp)
  408304:	e8 67 f4 ff ff 	callq	-2969 <runtime.advanceEvacuationMark>
  408309:	eb db 	jmp	-37 <runtime.evacuate_fast32+0x346>
  40830b:	0f b7 4e 54 	movzwl	84(%rsi), %ecx
  40830f:	48 89 ca 	movq	%rcx, %rdx
  408312:	49 0f af c8 	imulq	%r8, %rcx
  408316:	48 03 48 18 	addq	24(%rax), %rcx
  40831a:	48 83 c1 08 	addq	$8, %rcx
  40831e:	48 89 0c 24 	movq	%rcx, (%rsp)
  408322:	48 8d 4a f8 	leaq	-8(%rdx), %rcx
  408326:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40832b:	e8 50 3a 00 00 	callq	14928 <runtime.memclrHasPointers>
  408330:	48 8b 84 24 b0 00 00 00 	movq	176(%rsp), %rax
  408338:	48 8b b4 24 a8 00 00 00 	movq	168(%rsp), %rsi
  408340:	4c 8b 84 24 b8 00 00 00 	movq	184(%rsp), %r8
  408348:	4c 8b 4c 24 38 	movq	56(%rsp), %r9
  40834d:	eb 8e 	jmp	-114 <runtime.evacuate_fast32+0x33d>
  40834f:	4c 8d 54 24 78 	leaq	120(%rsp), %r10
  408354:	41 84 02 	testb	%al, (%r10)
  408357:	4f 8d 14 01 	leaq	(%r9,%r8), %r10
  40835b:	44 0f b7 5e 54 	movzwl	84(%rsi), %r11d
  408360:	4d 0f af da 	imulq	%r10, %r11
  408364:	4c 03 58 10 	addq	16(%rax), %r11
  408368:	4c 89 5c 24 78 	movq	%r11, 120(%rsp)
  40836d:	4d 8d 53 08 	leaq	8(%r11), %r10
  408371:	4c 89 94 24 88 00 00 00 	movq	%r10, 136(%rsp)
  408379:	4d 8d 53 28 	leaq	40(%r11), %r10
  40837d:	4c 89 94 24 90 00 00 00 	movq	%r10, 144(%rsp)
  408385:	e9 0a fd ff ff 	jmp	-758 <runtime.evacuate_fast32+0xf4>
  40838a:	ff cb 	decl	%ebx
  40838c:	e9 92 fc ff ff 	jmp	-878 <runtime.evacuate_fast32+0x83>
  408391:	e8 aa 76 01 00 	callq	95914 <runtime.panicindex>
  408396:	0f 0b 	ud2
  408398:	48 8d 05 95 23 06 00 	leaq	402325(%rip), %rax
  40839f:	48 89 04 24 	movq	%rax, (%rsp)
  4083a3:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  4083ac:	e8 1f 8e 01 00 	callq	101919 <runtime.throw>
  4083b1:	0f 0b 	ud2
  4083b3:	e8 b8 c1 03 00 	callq	246200 <runtime.morestack_noctxt>
  4083b8:	e9 e3 fb ff ff 	jmp	-1053 <runtime.evacuate_fast32>
  4083bd:	cc 	int3
  4083be:	cc 	int3
  4083bf:	cc 	int3

runtime.getitab:
  4083c0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4083c9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4083cd:	0f 86 76 04 00 00 	jbe	1142 <runtime.getitab+0x489>
  4083d3:	48 83 ec 70 	subq	$112, %rsp
  4083d7:	48 89 6c 24 68 	movq	%rbp, 104(%rsp)
  4083dc:	48 8d 6c 24 68 	leaq	104(%rsp), %rbp
  4083e1:	48 8b 44 24 78 	movq	120(%rsp), %rax
  4083e6:	48 8b 48 40 	movq	64(%rax), %rcx
  4083ea:	48 8b 50 38 	movq	56(%rax), %rdx
  4083ee:	48 85 c9 	testq	%rcx, %rcx
  4083f1:	0f 84 37 04 00 00 	je	1079 <runtime.getitab+0x46e>
  4083f7:	48 8b 8c 24 80 00 00 00 	movq	128(%rsp), %rcx
  4083ff:	0f b6 59 14 	movzbl	20(%rcx), %ebx
  408403:	f6 c3 01 	testb	$1, %bl
  408406:	0f 85 57 01 00 00 	jne	343 <runtime.getitab+0x1a3>
  40840c:	0f b6 9c 24 88 00 00 00 	movzbl	136(%rsp), %ebx
  408414:	84 db 	testb	%bl, %bl
  408416:	74 16 	je	22 <runtime.getitab+0x6e>
  408418:	48 c7 84 24 90 00 00 00 00 00 00 00 	movq	$0, 144(%rsp)
  408424:	48 8b 6c 24 68 	movq	104(%rsp), %rbp
  408429:	48 83 c4 70 	addq	$112, %rsp
  40842d:	c3 	retq
  40842e:	8b 0a 	movl	(%rdx), %ecx
  408430:	89 4c 24 08 	movl	%ecx, 8(%rsp)
  408434:	48 89 04 24 	movq	%rax, (%rsp)
  408438:	e8 f3 69 03 00 	callq	223731 <runtime.(*_type).nameOff>
  40843d:	48 8b 44 24 10 	movq	16(%rsp), %rax
  408442:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  408447:	48 8b 8c 24 80 00 00 00 	movq	128(%rsp), %rcx
  40844f:	48 89 0c 24 	movq	%rcx, (%rsp)
  408453:	e8 18 65 03 00 	callq	222488 <runtime.(*_type).string>
  408458:	48 8b 44 24 10 	movq	16(%rsp), %rax
  40845d:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  408462:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  408467:	48 89 4c 24 58 	movq	%rcx, 88(%rsp)
  40846c:	48 8b 54 24 78 	movq	120(%rsp), %rdx
  408471:	48 89 14 24 	movq	%rdx, (%rsp)
  408475:	e8 f6 64 03 00 	callq	222454 <runtime.(*_type).string>
  40847a:	48 8b 44 24 08 	movq	8(%rsp), %rax
  40847f:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  408484:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  408489:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  40848e:	48 8b 54 24 60 	movq	96(%rsp), %rdx
  408493:	48 89 14 24 	movq	%rdx, (%rsp)
  408497:	e8 f4 70 03 00 	callq	225524 <runtime.name.name>
  40849c:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4084a1:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  4084a6:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  4084ab:	48 89 4c 24 48 	movq	%rcx, 72(%rsp)
  4084b0:	48 8d 15 49 8e 05 00 	leaq	364105(%rip), %rdx
  4084b7:	48 89 14 24 	movq	%rdx, (%rsp)
  4084bb:	e8 60 2c 00 00 	callq	11360 <runtime.newobject>
  4084c0:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4084c5:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4084ca:	48 89 48 18 	movq	%rcx, 24(%rax)
  4084ce:	8b 0d 3c b5 0b 00 	movl	767292(%rip), %ecx
  4084d4:	48 8d 78 10 	leaq	16(%rax), %rdi
  4084d8:	85 c9 	testl	%ecx, %ecx
  4084da:	75 75 	jne	117 <runtime.getitab+0x191>
  4084dc:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  4084e1:	48 89 48 10 	movq	%rcx, 16(%rax)
  4084e5:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  4084ea:	48 89 48 28 	movq	%rcx, 40(%rax)
  4084ee:	8b 0d 1c b5 0b 00 	movl	767260(%rip), %ecx
  4084f4:	48 8d 78 20 	leaq	32(%rax), %rdi
  4084f8:	85 c9 	testl	%ecx, %ecx
  4084fa:	75 43 	jne	67 <runtime.getitab+0x17f>
  4084fc:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  408501:	48 89 48 20 	movq	%rcx, 32(%rax)
  408505:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  40850a:	48 89 48 38 	movq	%rcx, 56(%rax)
  40850e:	8b 0d fc b4 0b 00 	movl	767228(%rip), %ecx
  408514:	48 8d 78 30 	leaq	48(%rax), %rdi
  408518:	85 c9 	testl	%ecx, %ecx
  40851a:	75 11 	jne	17 <runtime.getitab+0x16d>
  40851c:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  408521:	48 89 48 30 	movq	%rcx, 48(%rax)
  408525:	48 89 c1 	movq	%rax, %rcx
  408528:	e9 ea 02 00 00 	jmp	746 <runtime.getitab+0x457>
  40852d:	48 89 c1 	movq	%rax, %rcx
  408530:	48 8b 44 24 48 	movq	72(%rsp), %rax
  408535:	e8 66 e3 03 00 	callq	254822 <runtime.gcWriteBarrier>
  40853a:	e9 d8 02 00 00 	jmp	728 <runtime.getitab+0x457>
  40853f:	48 89 c1 	movq	%rax, %rcx
  408542:	48 8b 44 24 50 	movq	80(%rsp), %rax
  408547:	e8 54 e3 03 00 	callq	254804 <runtime.gcWriteBarrier>
  40854c:	48 89 c8 	movq	%rcx, %rax
  40854f:	eb b4 	jmp	-76 <runtime.getitab+0x145>
  408551:	48 89 c1 	movq	%rax, %rcx
  408554:	48 8b 44 24 58 	movq	88(%rsp), %rax
  408559:	e8 42 e3 03 00 	callq	254786 <runtime.gcWriteBarrier>
  40855e:	48 89 c8 	movq	%rcx, %rax
  408561:	eb 82 	jmp	-126 <runtime.getitab+0x125>
  408563:	48 8b 15 be d4 09 00 	movq	644286(%rip), %rdx
  40856a:	48 89 14 24 	movq	%rdx, (%rsp)
  40856e:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  408573:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  408578:	e8 e3 02 00 00 	callq	739 <runtime.(*itabTableType).find>
  40857d:	48 8b 44 24 18 	movq	24(%rsp), %rax
  408582:	48 85 c0 	testq	%rax, %rax
  408585:	0f 84 62 01 00 00 	je	354 <runtime.getitab+0x32d>
  40858b:	48 8b 48 18 	movq	24(%rax), %rcx
  40858f:	48 85 c9 	testq	%rcx, %rcx
  408592:	0f 85 43 01 00 00 	jne	323 <runtime.getitab+0x31b>
  408598:	0f b6 8c 24 88 00 00 00 	movzbl	136(%rsp), %ecx
  4085a0:	84 c9 	testb	%cl, %cl
  4085a2:	74 16 	je	22 <runtime.getitab+0x1fa>
  4085a4:	48 c7 84 24 90 00 00 00 00 00 00 00 	movq	$0, 144(%rsp)
  4085b0:	48 8b 6c 24 68 	movq	104(%rsp), %rbp
  4085b5:	48 83 c4 70 	addq	$112, %rsp
  4085b9:	c3 	retq
  4085ba:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  4085bf:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  4085c7:	48 89 04 24 	movq	%rax, (%rsp)
  4085cb:	e8 a0 63 03 00 	callq	222112 <runtime.(*_type).string>
  4085d0:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4085d5:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  4085da:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  4085df:	48 89 4c 24 58 	movq	%rcx, 88(%rsp)
  4085e4:	48 8b 54 24 78 	movq	120(%rsp), %rdx
  4085e9:	48 89 14 24 	movq	%rdx, (%rsp)
  4085ed:	e8 7e 63 03 00 	callq	222078 <runtime.(*_type).string>
  4085f2:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4085f7:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  4085fc:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  408601:	48 89 4c 24 50 	movq	%rcx, 80(%rsp)
  408606:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  40860b:	48 89 14 24 	movq	%rdx, (%rsp)
  40860f:	e8 5c 04 00 00 	callq	1116 <runtime.(*itab).init>
  408614:	48 8b 44 24 10 	movq	16(%rsp), %rax
  408619:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  40861e:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  408623:	48 89 4c 24 48 	movq	%rcx, 72(%rsp)
  408628:	48 8d 15 d1 8c 05 00 	leaq	363729(%rip), %rdx
  40862f:	48 89 14 24 	movq	%rdx, (%rsp)
  408633:	e8 e8 2a 00 00 	callq	10984 <runtime.newobject>
  408638:	48 8b 44 24 08 	movq	8(%rsp), %rax
  40863d:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  408642:	48 89 48 18 	movq	%rcx, 24(%rax)
  408646:	8b 0d c4 b3 0b 00 	movl	766916(%rip), %ecx
  40864c:	48 8d 78 10 	leaq	16(%rax), %rdi
  408650:	85 c9 	testl	%ecx, %ecx
  408652:	75 75 	jne	117 <runtime.getitab+0x309>
  408654:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  408659:	48 89 48 10 	movq	%rcx, 16(%rax)
  40865d:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  408662:	48 89 48 28 	movq	%rcx, 40(%rax)
  408666:	8b 0d a4 b3 0b 00 	movl	766884(%rip), %ecx
  40866c:	48 8d 78 20 	leaq	32(%rax), %rdi
  408670:	85 c9 	testl	%ecx, %ecx
  408672:	75 43 	jne	67 <runtime.getitab+0x2f7>
  408674:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  408679:	48 89 48 20 	movq	%rcx, 32(%rax)
  40867d:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  408682:	48 89 48 38 	movq	%rcx, 56(%rax)
  408686:	8b 0d 84 b3 0b 00 	movl	766852(%rip), %ecx
  40868c:	48 8d 78 30 	leaq	48(%rax), %rdi
  408690:	85 c9 	testl	%ecx, %ecx
  408692:	75 11 	jne	17 <runtime.getitab+0x2e5>
  408694:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  408699:	48 89 48 30 	movq	%rcx, 48(%rax)
  40869d:	48 89 c1 	movq	%rax, %rcx
  4086a0:	e9 5b 01 00 00 	jmp	347 <runtime.getitab+0x440>
  4086a5:	48 89 c1 	movq	%rax, %rcx
  4086a8:	48 8b 44 24 48 	movq	72(%rsp), %rax
  4086ad:	e8 ee e1 03 00 	callq	254446 <runtime.gcWriteBarrier>
  4086b2:	e9 49 01 00 00 	jmp	329 <runtime.getitab+0x440>
  4086b7:	48 89 c1 	movq	%rax, %rcx
  4086ba:	48 8b 44 24 50 	movq	80(%rsp), %rax
  4086bf:	e8 dc e1 03 00 	callq	254428 <runtime.gcWriteBarrier>
  4086c4:	48 89 c8 	movq	%rcx, %rax
  4086c7:	eb b4 	jmp	-76 <runtime.getitab+0x2bd>
  4086c9:	48 89 c1 	movq	%rax, %rcx
  4086cc:	48 8b 44 24 58 	movq	88(%rsp), %rax
  4086d1:	e8 ca e1 03 00 	callq	254410 <runtime.gcWriteBarrier>
  4086d6:	48 89 c8 	movq	%rcx, %rax
  4086d9:	eb 82 	jmp	-126 <runtime.getitab+0x29d>
  4086db:	48 89 84 24 90 00 00 00 	movq	%rax, 144(%rsp)
  4086e3:	48 8b 6c 24 68 	movq	104(%rsp), %rbp
  4086e8:	48 83 c4 70 	addq	$112, %rsp
  4086ec:	c3 	retq
  4086ed:	48 8d 05 8c b2 0b 00 	leaq	766604(%rip), %rax
  4086f4:	48 89 04 24 	movq	%rax, (%rsp)
  4086f8:	e8 23 0e 00 00 	callq	3619 <runtime.lock>
  4086fd:	48 8b 05 24 d3 09 00 	movq	643876(%rip), %rax
  408704:	48 89 04 24 	movq	%rax, (%rsp)
  408708:	48 8b 44 24 78 	movq	120(%rsp), %rax
  40870d:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  408712:	48 8b 8c 24 80 00 00 00 	movq	128(%rsp), %rcx
  40871a:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  40871f:	e8 3c 01 00 00 	callq	316 <runtime.(*itabTableType).find>
  408724:	48 8b 44 24 18 	movq	24(%rsp), %rax
  408729:	48 85 c0 	testq	%rax, %rax
  40872c:	74 1f 	je	31 <runtime.getitab+0x38d>
  40872e:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  408733:	48 8d 05 46 b2 0b 00 	leaq	766534(%rip), %rax
  40873a:	48 89 04 24 	movq	%rax, (%rsp)
  40873e:	e8 7d 0f 00 00 	callq	3965 <runtime.unlock>
  408743:	48 8b 44 24 38 	movq	56(%rsp), %rax
  408748:	e9 3e fe ff ff 	jmp	-450 <runtime.getitab+0x1cb>
  40874d:	48 8b 44 24 78 	movq	120(%rsp), %rax
  408752:	48 8b 48 40 	movq	64(%rax), %rcx
  408756:	48 ff c9 	decq	%rcx
  408759:	48 c1 e1 03 	shlq	$3, %rcx
  40875d:	48 83 c1 20 	addq	$32, %rcx
  408761:	48 89 0c 24 	movq	%rcx, (%rsp)
  408765:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  40876e:	48 8d 0d 2b c0 0b 00 	leaq	770091(%rip), %rcx
  408775:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  40877a:	e8 21 2d 00 00 	callq	11553 <runtime.persistentalloc>
  40877f:	48 8b 7c 24 18 	movq	24(%rsp), %rdi
  408784:	84 07 	testb	%al, (%rdi)
  408786:	8b 05 84 b2 0b 00 	movl	766596(%rip), %eax
  40878c:	48 8d 4f 08 	leaq	8(%rdi), %rcx
  408790:	85 c0 	testl	%eax, %eax
  408792:	75 4a 	jne	74 <runtime.getitab+0x41e>
  408794:	48 8b 44 24 78 	movq	120(%rsp), %rax
  408799:	48 89 07 	movq	%rax, (%rdi)
  40879c:	48 8b 8c 24 80 00 00 00 	movq	128(%rsp), %rcx
  4087a4:	48 89 4f 08 	movq	%rcx, 8(%rdi)
  4087a8:	48 89 7c 24 40 	movq	%rdi, 64(%rsp)
  4087ad:	48 89 3c 24 	movq	%rdi, (%rsp)
  4087b1:	e8 ba 02 00 00 	callq	698 <runtime.(*itab).init>
  4087b6:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4087bb:	48 89 04 24 	movq	%rax, (%rsp)
  4087bf:	e8 fc 00 00 00 	callq	252 <runtime.itabAdd>
  4087c4:	48 8d 05 b5 b1 0b 00 	leaq	766389(%rip), %rax
  4087cb:	48 89 04 24 	movq	%rax, (%rsp)
  4087cf:	e8 ec 0e 00 00 	callq	3820 <runtime.unlock>
  4087d4:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4087d9:	e9 ad fd ff ff 	jmp	-595 <runtime.getitab+0x1cb>
  4087de:	48 8b 44 24 78 	movq	120(%rsp), %rax
  4087e3:	e8 b8 e0 03 00 	callq	254136 <runtime.gcWriteBarrier>
  4087e8:	48 89 fa 	movq	%rdi, %rdx
  4087eb:	48 89 cf 	movq	%rcx, %rdi
  4087ee:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  4087f6:	e8 a5 e0 03 00 	callq	254117 <runtime.gcWriteBarrier>
  4087fb:	48 89 d7 	movq	%rdx, %rdi
  4087fe:	eb a8 	jmp	-88 <runtime.getitab+0x3e8>
  408800:	48 8d 05 d9 29 05 00 	leaq	338393(%rip), %rax
  408807:	48 89 04 24 	movq	%rax, (%rsp)
  40880b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  408810:	e8 1b 82 01 00 	callq	98843 <runtime.gopanic>
  408815:	0f 0b 	ud2
  408817:	48 8d 05 c2 29 05 00 	leaq	338370(%rip), %rax
  40881e:	48 89 04 24 	movq	%rax, (%rsp)
  408822:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  408827:	e8 04 82 01 00 	callq	98820 <runtime.gopanic>
  40882c:	0f 0b 	ud2
  40882e:	48 8d 05 95 3e 06 00 	leaq	409237(%rip), %rax
  408835:	48 89 04 24 	movq	%rax, (%rsp)
  408839:	48 c7 44 24 08 1f 00 00 00 	movq	$31, 8(%rsp)
  408842:	e8 89 89 01 00 	callq	100745 <runtime.throw>
  408847:	0f 0b 	ud2
  408849:	e8 22 bd 03 00 	callq	245026 <runtime.morestack_noctxt>
  40884e:	e9 6d fb ff ff 	jmp	-1171 <runtime.getitab>
  408853:	cc 	int3
  408854:	cc 	int3
  408855:	cc 	int3
  408856:	cc 	int3
  408857:	cc 	int3
  408858:	cc 	int3
  408859:	cc 	int3
  40885a:	cc 	int3
  40885b:	cc 	int3
  40885c:	cc 	int3
  40885d:	cc 	int3
  40885e:	cc 	int3
  40885f:	cc 	int3

runtime.(*itabTableType).find:
  408860:	48 8b 44 24 08 	movq	8(%rsp), %rax
  408865:	48 8b 08 	movq	(%rax), %rcx
  408868:	48 ff c9 	decq	%rcx
  40886b:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  408870:	8b 5a 10 	movl	16(%rdx), %ebx
  408873:	48 8b 74 24 18 	movq	24(%rsp), %rsi
  408878:	33 5e 10 	xorl	16(%rsi), %ebx
  40887b:	48 21 cb 	andq	%rcx, %rbx
  40887e:	bf 01 00 00 00 	movl	$1, %edi
  408883:	eb 0d 	jmp	13 <runtime.(*itabTableType).find+0x32>
  408885:	4c 8d 47 01 	leaq	1(%rdi), %r8
  408889:	48 01 fb 	addq	%rdi, %rbx
  40888c:	48 21 cb 	andq	%rcx, %rbx
  40888f:	4c 89 c7 	movq	%r8, %rdi
  408892:	4c 8d 44 d8 10 	leaq	16(%rax,%rbx,8), %r8
  408897:	4d 8b 00 	movq	(%r8), %r8
  40889a:	4d 85 c0 	testq	%r8, %r8
  40889d:	74 17 	je	23 <runtime.(*itabTableType).find+0x56>
  40889f:	4d 8b 08 	movq	(%r8), %r9
  4088a2:	49 39 d1 	cmpq	%rdx, %r9
  4088a5:	75 de 	jne	-34 <runtime.(*itabTableType).find+0x25>
  4088a7:	4d 8b 48 08 	movq	8(%r8), %r9
  4088ab:	49 39 f1 	cmpq	%rsi, %r9
  4088ae:	75 d5 	jne	-43 <runtime.(*itabTableType).find+0x25>
  4088b0:	4c 89 44 24 20 	movq	%r8, 32(%rsp)
  4088b5:	c3 	retq
  4088b6:	48 c7 44 24 20 00 00 00 00 	movq	$0, 32(%rsp)
  4088bf:	c3 	retq

runtime.itabAdd:
  4088c0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4088c9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4088cd:	0f 86 30 01 00 00 	jbe	304 <runtime.itabAdd+0x143>
  4088d3:	48 83 ec 48 	subq	$72, %rsp
  4088d7:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  4088dc:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  4088e1:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4088ea:	48 8b 40 30 	movq	48(%rax), %rax
  4088ee:	8b 80 e8 00 00 00 	movl	232(%rax), %eax
  4088f4:	85 c0 	testl	%eax, %eax
  4088f6:	0f 85 ec 00 00 00 	jne	236 <runtime.itabAdd+0x128>
  4088fc:	48 8b 05 25 d1 09 00 	movq	643365(%rip), %rax
  408903:	48 8b 48 08 	movq	8(%rax), %rcx
  408907:	48 8b 10 	movq	(%rax), %rdx
  40890a:	48 89 d3 	movq	%rdx, %rbx
  40890d:	48 c1 ea 02 	shrq	$2, %rdx
  408911:	48 8d 14 52 	leaq	(%rdx,%rdx,2), %rdx
  408915:	48 39 d1 	cmpq	%rdx, %rcx
  408918:	73 1d 	jae	29 <runtime.itabAdd+0x77>
  40891a:	48 89 04 24 	movq	%rax, (%rsp)
  40891e:	48 8b 44 24 50 	movq	80(%rsp), %rax
  408923:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  408928:	e8 e3 00 00 00 	callq	227 <runtime.(*itabTableType).add>
  40892d:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  408932:	48 83 c4 48 	addq	$72, %rsp
  408936:	c3 	retq
  408937:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  40893c:	48 d1 e3 	shlq	%rbx
  40893f:	48 8d 43 02 	leaq	2(%rbx), %rax
  408943:	48 c1 e0 03 	shlq	$3, %rax
  408947:	48 89 04 24 	movq	%rax, (%rsp)
  40894b:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  408954:	c6 44 24 10 01 	movb	$1, 16(%rsp)
  408959:	e8 b2 1c 00 00 	callq	7346 <runtime.mallocgc>
  40895e:	48 8b 44 24 18 	movq	24(%rsp), %rax
  408963:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  408968:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  40896d:	48 8b 11 	movq	(%rcx), %rdx
  408970:	48 d1 e2 	shlq	%rdx
  408973:	48 89 10 	movq	%rdx, (%rax)
  408976:	48 8d 15 53 f6 03 00 	leaq	259667(%rip), %rdx
  40897d:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  408982:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  408987:	48 8d 54 24 30 	leaq	48(%rsp), %rdx
  40898c:	48 89 14 24 	movq	%rdx, (%rsp)
  408990:	e8 6b 09 00 00 	callq	2411 <runtime.iterate_itabs>
  408995:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40899a:	48 8b 48 08 	movq	8(%rax), %rcx
  40899e:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  4089a3:	48 8b 52 08 	movq	8(%rdx), %rdx
  4089a7:	48 39 d1 	cmpq	%rdx, %rcx
  4089aa:	75 21 	jne	33 <runtime.itabAdd+0x10d>
  4089ac:	48 8d 0d 75 d0 09 00 	leaq	643189(%rip), %rcx
  4089b3:	48 89 0c 24 	movq	%rcx, (%rsp)
  4089b7:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4089bc:	e8 1f 95 ff ff 	callq	-27361 <runtime.atomicstorep>
  4089c1:	48 8b 05 60 d0 09 00 	movq	643168(%rip), %rax
  4089c8:	e9 4d ff ff ff 	jmp	-179 <runtime.itabAdd+0x5a>
  4089cd:	48 8d 05 80 47 06 00 	leaq	411520(%rip), %rax
  4089d4:	48 89 04 24 	movq	%rax, (%rsp)
  4089d8:	48 c7 44 24 08 27 00 00 00 	movq	$39, 8(%rsp)
  4089e1:	e8 ea 87 01 00 	callq	100330 <runtime.throw>
  4089e6:	0f 0b 	ud2
  4089e8:	48 8d 05 7c 1f 06 00 	leaq	401276(%rip), %rax
  4089ef:	48 89 04 24 	movq	%rax, (%rsp)
  4089f3:	48 c7 44 24 08 0f 00 00 00 	movq	$15, 8(%rsp)
  4089fc:	e8 cf 87 01 00 	callq	100303 <runtime.throw>
  408a01:	0f 0b 	ud2
  408a03:	e8 68 bb 03 00 	callq	244584 <runtime.morestack_noctxt>
  408a08:	e9 b3 fe ff ff 	jmp	-333 <runtime.itabAdd>
  408a0d:	cc 	int3
  408a0e:	cc 	int3
  408a0f:	cc 	int3

runtime.(*itabTableType).add:
  408a10:	48 8b 44 24 10 	movq	16(%rsp), %rax
  408a15:	48 8b 08 	movq	(%rax), %rcx
  408a18:	48 8b 50 08 	movq	8(%rax), %rdx
  408a1c:	48 8b 5c 24 08 	movq	8(%rsp), %rbx
  408a21:	48 8b 33 	movq	(%rbx), %rsi
  408a24:	48 ff ce 	decq	%rsi
  408a27:	8b 49 10 	movl	16(%rcx), %ecx
  408a2a:	33 4a 10 	xorl	16(%rdx), %ecx
  408a2d:	48 21 f1 	andq	%rsi, %rcx
  408a30:	ba 01 00 00 00 	movl	$1, %edx
  408a35:	eb 0d 	jmp	13 <runtime.(*itabTableType).add+0x34>
  408a37:	48 8d 7a 01 	leaq	1(%rdx), %rdi
  408a3b:	48 01 d1 	addq	%rdx, %rcx
  408a3e:	48 21 f1 	andq	%rsi, %rcx
  408a41:	48 89 fa 	movq	%rdi, %rdx
  408a44:	48 8d 7c cb 10 	leaq	16(%rbx,%rcx,8), %rdi
  408a49:	84 07 	testb	%al, (%rdi)
  408a4b:	4c 8b 44 cb 10 	movq	16(%rbx,%rcx,8), %r8
  408a50:	49 39 c0 	cmpq	%rax, %r8
  408a53:	74 0d 	je	13 <runtime.(*itabTableType).add+0x52>
  408a55:	4d 85 c0 	testq	%r8, %r8
  408a58:	75 dd 	jne	-35 <runtime.(*itabTableType).add+0x27>
  408a5a:	48 87 07 	xchgq	%rax, (%rdi)
  408a5d:	48 ff 43 08 	incq	8(%rbx)
  408a61:	c3 	retq
  408a62:	c3 	retq
  408a63:	cc 	int3
  408a64:	cc 	int3
  408a65:	cc 	int3
  408a66:	cc 	int3
  408a67:	cc 	int3
  408a68:	cc 	int3
  408a69:	cc 	int3
  408a6a:	cc 	int3
  408a6b:	cc 	int3
  408a6c:	cc 	int3
  408a6d:	cc 	int3
  408a6e:	cc 	int3
  408a6f:	cc 	int3

runtime.(*itab).init:
  408a70:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  408a79:	48 8d 44 24 d8 	leaq	-40(%rsp), %rax
  408a7e:	48 3b 41 10 	cmpq	16(%rcx), %rax
  408a82:	0f 86 0b 04 00 00 	jbe	1035 <runtime.(*itab).init+0x423>
  408a88:	48 81 ec a8 00 00 00 	subq	$168, %rsp
  408a8f:	48 89 ac 24 a0 00 00 00 	movq	%rbp, 160(%rsp)
  408a97:	48 8d ac 24 a0 00 00 00 	leaq	160(%rsp), %rbp
  408a9f:	48 8b 84 24 b0 00 00 00 	movq	176(%rsp), %rax
  408aa7:	48 8b 08 	movq	(%rax), %rcx
  408aaa:	48 89 4c 24 70 	movq	%rcx, 112(%rsp)
  408aaf:	48 8b 50 08 	movq	8(%rax), %rdx
  408ab3:	48 89 54 24 58 	movq	%rdx, 88(%rsp)
  408ab8:	48 89 14 24 	movq	%rdx, (%rsp)
  408abc:	e8 5f 5f 03 00 	callq	221023 <runtime.(*_type).uncommon>
  408ac1:	48 8b 44 24 08 	movq	8(%rsp), %rax
  408ac6:	8b 48 08 	movl	8(%rax), %ecx
  408ac9:	48 01 c1 	addq	%rax, %rcx
  408acc:	84 01 	testb	%al, (%rcx)
  408ace:	48 8b 54 24 70 	movq	112(%rsp), %rdx
  408ad3:	48 8b 5a 40 	movq	64(%rdx), %rbx
  408ad7:	0f b7 70 04 	movzwl	4(%rax), %esi
  408adb:	48 81 fe 00 00 01 00 	cmpq	$65536, %rsi
  408ae2:	0f 87 a4 03 00 00 	ja	932 <runtime.(*itab).init+0x41c>
  408ae8:	48 89 84 24 98 00 00 00 	movq	%rax, 152(%rsp)
  408af0:	48 89 5c 24 50 	movq	%rbx, 80(%rsp)
  408af5:	48 89 8c 24 90 00 00 00 	movq	%rcx, 144(%rsp)
  408afd:	48 89 74 24 48 	movq	%rsi, 72(%rsp)
  408b02:	31 ff 	xorl	%edi, %edi
  408b04:	49 89 f8 	movq	%rdi, %r8
  408b07:	e9 d1 01 00 00 	jmp	465 <runtime.(*itab).init+0x26d>
  408b0c:	48 8b 5c 24 28 	movq	40(%rsp), %rbx
  408b11:	48 8d 53 01 	leaq	1(%rbx), %rdx
  408b15:	48 8b 44 24 30 	movq	48(%rsp), %rax
  408b1a:	48 8b 4c 24 68 	movq	104(%rsp), %rcx
  408b1f:	48 8b 5c 24 48 	movq	72(%rsp), %rbx
  408b24:	48 39 da 	cmpq	%rbx, %rdx
  408b27:	0f 8d c8 02 00 00 	jge	712 <runtime.(*itab).init+0x385>
  408b2d:	0f 83 4b 03 00 00 	jae	843 <runtime.(*itab).init+0x40e>
  408b33:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  408b38:	48 c1 e2 04 	shlq	$4, %rdx
  408b3c:	48 89 54 24 40 	movq	%rdx, 64(%rsp)
  408b41:	48 8b 8c 24 90 00 00 00 	movq	144(%rsp), %rcx
  408b49:	8b 1c 11 	movl	(%rcx,%rdx), %ebx
  408b4c:	89 5c 24 08 	movl	%ebx, 8(%rsp)
  408b50:	48 8b 5c 24 58 	movq	88(%rsp), %rbx
  408b55:	48 89 1c 24 	movq	%rbx, (%rsp)
  408b59:	e8 d2 62 03 00 	callq	221906 <runtime.(*_type).nameOff>
  408b5e:	48 8b 44 24 10 	movq	16(%rsp), %rax
  408b63:	48 89 84 24 80 00 00 00 	movq	%rax, 128(%rsp)
  408b6b:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  408b70:	48 8b 94 24 90 00 00 00 	movq	144(%rsp), %rdx
  408b78:	8b 5c 0a 04 	movl	4(%rdx,%rcx), %ebx
  408b7c:	89 5c 24 08 	movl	%ebx, 8(%rsp)
  408b80:	48 8b 5c 24 58 	movq	88(%rsp), %rbx
  408b85:	48 89 1c 24 	movq	%rbx, (%rsp)
  408b89:	e8 32 66 03 00 	callq	222770 <runtime.(*_type).typeOff>
  408b8e:	48 8b 44 24 10 	movq	16(%rsp), %rax
  408b93:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  408b98:	48 39 c8 	cmpq	%rcx, %rax
  408b9b:	0f 85 6b ff ff ff 	jne	-149 <runtime.(*itab).init+0x9c>
  408ba1:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  408ba9:	48 89 04 24 	movq	%rax, (%rsp)
  408bad:	e8 de 69 03 00 	callq	223710 <runtime.name.name>
  408bb2:	48 8b 44 24 10 	movq	16(%rsp), %rax
  408bb7:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  408bbc:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  408bc1:	48 39 d0 	cmpq	%rdx, %rax
  408bc4:	74 0a 	je	10 <runtime.(*itab).init+0x160>
  408bc6:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  408bcb:	e9 3c ff ff ff 	jmp	-196 <runtime.(*itab).init+0x9c>
  408bd0:	48 89 0c 24 	movq	%rcx, (%rsp)
  408bd4:	48 8b 44 24 78 	movq	120(%rsp), %rax
  408bd9:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  408bde:	e8 5d d7 03 00 	callq	251741 <runtime.memequal>
  408be3:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  408be8:	84 c0 	testb	%al, %al
  408bea:	75 0a 	jne	10 <runtime.(*itab).init+0x186>
  408bec:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  408bf1:	e9 16 ff ff ff 	jmp	-234 <runtime.(*itab).init+0x9c>
  408bf6:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  408bfe:	48 89 04 24 	movq	%rax, (%rsp)
  408c02:	e8 99 6a 03 00 	callq	223897 <runtime.name.pkgPath>
  408c07:	48 8b 44 24 10 	movq	16(%rsp), %rax
  408c0c:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  408c11:	48 85 c0 	testq	%rax, %rax
  408c14:	0f 84 a2 01 00 00 	je	418 <runtime.(*itab).init+0x34c>
  408c1a:	48 8b 94 24 80 00 00 00 	movq	128(%rsp), %rdx
  408c22:	0f b6 12 	movzbl	(%rdx), %edx
  408c25:	f6 c2 01 	testb	$1, %dl
  408c28:	75 3c 	jne	60 <runtime.(*itab).init+0x1f6>
  408c2a:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  408c2f:	48 39 c2 	cmpq	%rax, %rdx
  408c32:	74 0a 	je	10 <runtime.(*itab).init+0x1ce>
  408c34:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  408c39:	e9 ce fe ff ff 	jmp	-306 <runtime.(*itab).init+0x9c>
  408c3e:	48 89 0c 24 	movq	%rcx, (%rsp)
  408c42:	48 8b 4c 24 68 	movq	104(%rsp), %rcx
  408c47:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  408c4c:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  408c51:	e8 ea d6 03 00 	callq	251626 <runtime.memequal>
  408c56:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  408c5b:	84 c0 	testb	%al, %al
  408c5d:	75 07 	jne	7 <runtime.(*itab).init+0x1f6>
  408c5f:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  408c64:	eb ce 	jmp	-50 <runtime.(*itab).init+0x1c4>
  408c66:	48 8b 44 24 40 	movq	64(%rsp), %rax
  408c6b:	48 8b 8c 24 90 00 00 00 	movq	144(%rsp), %rcx
  408c73:	8b 44 01 08 	movl	8(%rcx,%rax), %eax
  408c77:	89 44 24 08 	movl	%eax, 8(%rsp)
  408c7b:	48 8b 44 24 58 	movq	88(%rsp), %rax
  408c80:	48 89 04 24 	movq	%rax, (%rsp)
  408c84:	e8 87 65 03 00 	callq	222599 <runtime.(*_type).textOff>
  408c89:	48 8b 44 24 20 	movq	32(%rsp), %rax
  408c8e:	48 8b 8c 24 b0 00 00 00 	movq	176(%rsp), %rcx
  408c96:	48 8d 7c c1 18 	leaq	24(%rcx,%rax,8), %rdi
  408c9b:	84 07 	testb	%al, (%rdi)
  408c9d:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  408ca2:	8b 1d 68 ad 0b 00 	movl	765288(%rip), %ebx
  408ca8:	85 db 	testl	%ebx, %ebx
  408caa:	0f 85 f9 00 00 00 	jne	249 <runtime.(*itab).init+0x339>
  408cb0:	48 89 54 c1 18 	movq	%rdx, 24(%rcx,%rax,8)
  408cb5:	48 8d 78 01 	leaq	1(%rax), %rdi
  408cb9:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  408cc1:	48 8b 8c 24 90 00 00 00 	movq	144(%rsp), %rcx
  408cc9:	48 8b 54 24 70 	movq	112(%rsp), %rdx
  408cce:	48 8b 5c 24 50 	movq	80(%rsp), %rbx
  408cd3:	48 8b 74 24 48 	movq	72(%rsp), %rsi
  408cd8:	4c 8b 44 24 28 	movq	40(%rsp), %r8
  408cdd:	48 39 df 	cmpq	%rbx, %rdi
  408ce0:	0f 8d 6a 01 00 00 	jge	362 <runtime.(*itab).init+0x3e0>
  408ce6:	4c 8b 4a 38 	movq	56(%rdx), %r9
  408cea:	4c 8b 52 40 	movq	64(%rdx), %r10
  408cee:	4c 39 d7 	cmpq	%r10, %rdi
  408cf1:	0f 83 8e 01 00 00 	jae	398 <runtime.(*itab).init+0x415>
  408cf7:	48 89 7c 24 20 	movq	%rdi, 32(%rsp)
  408cfc:	4c 89 8c 24 88 00 00 00 	movq	%r9, 136(%rsp)
  408d04:	4c 89 44 24 28 	movq	%r8, 40(%rsp)
  408d09:	41 8b 44 f9 04 	movl	4(%r9,%rdi,8), %eax
  408d0e:	89 44 24 08 	movl	%eax, 8(%rsp)
  408d12:	48 89 14 24 	movq	%rdx, (%rsp)
  408d16:	e8 a5 64 03 00 	callq	222373 <runtime.(*_type).typeOff>
  408d1b:	48 8b 44 24 10 	movq	16(%rsp), %rax
  408d20:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  408d25:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  408d2a:	48 8b 94 24 88 00 00 00 	movq	136(%rsp), %rdx
  408d32:	8b 14 ca 	movl	(%rdx,%rcx,8), %edx
  408d35:	89 54 24 08 	movl	%edx, 8(%rsp)
  408d39:	48 8b 54 24 70 	movq	112(%rsp), %rdx
  408d3e:	48 89 14 24 	movq	%rdx, (%rsp)
  408d42:	e8 e9 60 03 00 	callq	221417 <runtime.(*_type).nameOff>
  408d47:	48 8b 44 24 10 	movq	16(%rsp), %rax
  408d4c:	48 89 84 24 80 00 00 00 	movq	%rax, 128(%rsp)
  408d54:	48 89 04 24 	movq	%rax, (%rsp)
  408d58:	e8 33 68 03 00 	callq	223283 <runtime.name.name>
  408d5d:	48 8b 44 24 10 	movq	16(%rsp), %rax
  408d62:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  408d67:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  408d6c:	48 89 4c 24 78 	movq	%rcx, 120(%rsp)
  408d71:	48 8b 94 24 80 00 00 00 	movq	128(%rsp), %rdx
  408d79:	48 89 14 24 	movq	%rdx, (%rsp)
  408d7d:	e8 1e 69 03 00 	callq	223518 <runtime.name.pkgPath>
  408d82:	48 8b 44 24 10 	movq	16(%rsp), %rax
  408d87:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  408d8c:	48 85 c0 	testq	%rax, %rax
  408d8f:	0f 84 9a 00 00 00 	je	154 <runtime.(*itab).init+0x3bf>
  408d95:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  408d9a:	48 89 4c 24 68 	movq	%rcx, 104(%rsp)
  408d9f:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  408da4:	e9 76 fd ff ff 	jmp	-650 <runtime.(*itab).init+0xaf>
  408da9:	48 89 c3 	movq	%rax, %rbx
  408dac:	48 89 d0 	movq	%rdx, %rax
  408daf:	e8 ec da 03 00 	callq	252652 <runtime.gcWriteBarrier>
  408db4:	48 89 d8 	movq	%rbx, %rax
  408db7:	e9 f9 fe ff ff 	jmp	-263 <runtime.(*itab).init+0x245>
  408dbc:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  408dc4:	8b 08 	movl	(%rax), %ecx
  408dc6:	89 4c 24 08 	movl	%ecx, 8(%rsp)
  408dca:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  408dcf:	48 89 0c 24 	movq	%rcx, (%rsp)
  408dd3:	e8 58 60 03 00 	callq	221272 <runtime.(*_type).nameOff>
  408dd8:	48 8b 44 24 10 	movq	16(%rsp), %rax
  408ddd:	48 89 04 24 	movq	%rax, (%rsp)
  408de1:	e8 aa 67 03 00 	callq	223146 <runtime.name.name>
  408de6:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  408deb:	48 8b 44 24 10 	movq	16(%rsp), %rax
  408df0:	e9 25 fe ff ff 	jmp	-475 <runtime.(*itab).init+0x1aa>
  408df5:	48 8b 84 24 b0 00 00 00 	movq	176(%rsp), %rax
  408dfd:	48 c7 40 18 00 00 00 00 	movq	$0, 24(%rax)
  408e05:	48 8b 44 24 78 	movq	120(%rsp), %rax
  408e0a:	48 89 84 24 b8 00 00 00 	movq	%rax, 184(%rsp)
  408e12:	48 8b 44 24 38 	movq	56(%rsp), %rax
  408e17:	48 89 84 24 c0 00 00 00 	movq	%rax, 192(%rsp)
  408e1f:	48 8b ac 24 a0 00 00 00 	movq	160(%rsp), %rbp
  408e27:	48 81 c4 a8 00 00 00 	addq	$168, %rsp
  408e2e:	c3 	retq
  408e2f:	48 8b 44 24 70 	movq	112(%rsp), %rax
  408e34:	48 8b 48 30 	movq	48(%rax), %rcx
  408e38:	48 89 0c 24 	movq	%rcx, (%rsp)
  408e3c:	e8 4f 67 03 00 	callq	223055 <runtime.name.name>
  408e41:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  408e46:	48 8b 44 24 10 	movq	16(%rsp), %rax
  408e4b:	e9 45 ff ff ff 	jmp	-187 <runtime.(*itab).init+0x325>
  408e50:	48 8b 44 24 58 	movq	88(%rsp), %rax
  408e55:	8b 40 10 	movl	16(%rax), %eax
  408e58:	48 8b 8c 24 b0 00 00 00 	movq	176(%rsp), %rcx
  408e60:	89 41 10 	movl	%eax, 16(%rcx)
  408e63:	0f 57 c0 	xorps	%xmm0, %xmm0
  408e66:	0f 11 84 24 b8 00 00 00 	movups	%xmm0, 184(%rsp)
  408e6e:	48 8b ac 24 a0 00 00 00 	movq	160(%rsp), %rbp
  408e76:	48 81 c4 a8 00 00 00 	addq	$168, %rsp
  408e7d:	c3 	retq
  408e7e:	e8 bd 6b 01 00 	callq	93117 <runtime.panicindex>
  408e83:	0f 0b 	ud2
  408e85:	e8 b6 6b 01 00 	callq	93110 <runtime.panicindex>
  408e8a:	0f 0b 	ud2
  408e8c:	e8 1f 6c 01 00 	callq	93215 <runtime.panicslice>
  408e91:	0f 0b 	ud2
  408e93:	e8 d8 b6 03 00 	callq	243416 <runtime.morestack_noctxt>
  408e98:	e9 d3 fb ff ff 	jmp	-1069 <runtime.(*itab).init>
  408e9d:	cc 	int3
  408e9e:	cc 	int3
  408e9f:	cc 	int3

runtime.itabsinit:
  408ea0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  408ea9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  408ead:	0f 86 cc 00 00 00 	jbe	204 <runtime.itabsinit+0xdf>
  408eb3:	48 83 ec 40 	subq	$64, %rsp
  408eb7:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  408ebc:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  408ec1:	48 8d 05 b8 aa 0b 00 	leaq	764600(%rip), %rax
  408ec8:	48 89 04 24 	movq	%rax, (%rsp)
  408ecc:	e8 4f 06 00 00 	callq	1615 <runtime.lock>
  408ed1:	48 8b 05 a0 e7 09 00 	movq	649120(%rip), %rax
  408ed8:	48 85 c0 	testq	%rax, %rax
  408edb:	0f 84 95 00 00 00 	je	149 <runtime.itabsinit+0xd6>
  408ee1:	48 8b 48 08 	movq	8(%rax), %rcx
  408ee5:	48 8b 00 	movq	(%rax), %rax
  408ee8:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  408eed:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  408ef2:	31 d2 	xorl	%edx, %edx
  408ef4:	eb 3c 	jmp	60 <runtime.itabsinit+0x92>
  408ef6:	48 89 7c 24 10 	movq	%rdi, 16(%rsp)
  408efb:	48 8b 04 fb 	movq	(%rbx,%rdi,8), %rax
  408eff:	48 89 04 24 	movq	%rax, (%rsp)
  408f03:	e8 b8 f9 ff ff 	callq	-1608 <runtime.itabAdd>
  408f08:	48 8b 44 24 10 	movq	16(%rsp), %rax
  408f0d:	48 8d 78 01 	leaq	1(%rax), %rdi
  408f11:	48 8b 44 24 30 	movq	48(%rsp), %rax
  408f16:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  408f1b:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  408f20:	48 8b 5c 24 28 	movq	40(%rsp), %rbx
  408f25:	48 8b 74 24 18 	movq	24(%rsp), %rsi
  408f2a:	48 39 f7 	cmpq	%rsi, %rdi
  408f2d:	7c c7 	jl	-57 <runtime.itabsinit+0x56>
  408f2f:	48 ff c2 	incq	%rdx
  408f32:	48 39 ca 	cmpq	%rcx, %rdx
  408f35:	7d 25 	jge	37 <runtime.itabsinit+0xbc>
  408f37:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  408f3c:	48 8b 1c d0 	movq	(%rax,%rdx,8), %rbx
  408f40:	48 8b b3 10 01 00 00 	movq	272(%rbx), %rsi
  408f47:	48 89 74 24 18 	movq	%rsi, 24(%rsp)
  408f4c:	48 8b 9b 08 01 00 00 	movq	264(%rbx), %rbx
  408f53:	48 89 5c 24 28 	movq	%rbx, 40(%rsp)
  408f58:	31 ff 	xorl	%edi, %edi
  408f5a:	eb ce 	jmp	-50 <runtime.itabsinit+0x8a>
  408f5c:	48 8d 05 1d aa 0b 00 	leaq	764445(%rip), %rax
  408f63:	48 89 04 24 	movq	%rax, (%rsp)
  408f67:	e8 54 07 00 00 	callq	1876 <runtime.unlock>
  408f6c:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  408f71:	48 83 c4 40 	addq	$64, %rsp
  408f75:	c3 	retq
  408f76:	31 c0 	xorl	%eax, %eax
  408f78:	31 c9 	xorl	%ecx, %ecx
  408f7a:	e9 69 ff ff ff 	jmp	-151 <runtime.itabsinit+0x48>
  408f7f:	e8 ec b5 03 00 	callq	243180 <runtime.morestack_noctxt>
  408f84:	e9 17 ff ff ff 	jmp	-233 <runtime.itabsinit>
  408f89:	cc 	int3
  408f8a:	cc 	int3
  408f8b:	cc 	int3
  408f8c:	cc 	int3
  408f8d:	cc 	int3
  408f8e:	cc 	int3
  408f8f:	cc 	int3

runtime.panicdottypeE:
  408f90:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  408f99:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  408f9d:	0f 86 88 01 00 00 	jbe	392 <runtime.panicdottypeE+0x19b>
  408fa3:	48 83 ec 50 	subq	$80, %rsp
  408fa7:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  408fac:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  408fb1:	48 8b 44 24 58 	movq	88(%rsp), %rax
  408fb6:	48 85 c0 	testq	%rax, %rax
  408fb9:	0f 85 3d 01 00 00 	jne	317 <runtime.panicdottypeE+0x16c>
  408fbf:	31 c0 	xorl	%eax, %eax
  408fc1:	31 c9 	xorl	%ecx, %ecx
  408fc3:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  408fc8:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  408fcd:	48 8b 54 24 68 	movq	104(%rsp), %rdx
  408fd2:	48 89 14 24 	movq	%rdx, (%rsp)
  408fd6:	e8 95 59 03 00 	callq	219541 <runtime.(*_type).string>
  408fdb:	48 8b 44 24 10 	movq	16(%rsp), %rax
  408fe0:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  408fe5:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  408fea:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  408fef:	48 8b 54 24 60 	movq	96(%rsp), %rdx
  408ff4:	48 89 14 24 	movq	%rdx, (%rsp)
  408ff8:	e8 73 59 03 00 	callq	219507 <runtime.(*_type).string>
  408ffd:	48 8b 44 24 08 	movq	8(%rsp), %rax
  409002:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  409007:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  40900c:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  409011:	48 8d 15 e8 82 05 00 	leaq	361192(%rip), %rdx
  409018:	48 89 14 24 	movq	%rdx, (%rsp)
  40901c:	e8 ff 20 00 00 	callq	8447 <runtime.newobject>
  409021:	48 8b 7c 24 08 	movq	8(%rsp), %rdi
  409026:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40902b:	48 89 47 08 	movq	%rax, 8(%rdi)
  40902f:	8b 05 db a9 0b 00 	movl	764379(%rip), %eax
  409035:	85 c0 	testl	%eax, %eax
  409037:	0f 85 b0 00 00 00 	jne	176 <runtime.panicdottypeE+0x15d>
  40903d:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  409042:	48 89 0f 	movq	%rcx, (%rdi)
  409045:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  40904a:	48 89 4f 18 	movq	%rcx, 24(%rdi)
  40904e:	8b 0d bc a9 0b 00 	movl	764348(%rip), %ecx
  409054:	48 8d 57 10 	leaq	16(%rdi), %rdx
  409058:	85 c9 	testl	%ecx, %ecx
  40905a:	75 76 	jne	118 <runtime.panicdottypeE+0x142>
  40905c:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  409061:	48 89 4f 10 	movq	%rcx, 16(%rdi)
  409065:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  40906a:	48 89 4f 28 	movq	%rcx, 40(%rdi)
  40906e:	8b 0d 9c a9 0b 00 	movl	764316(%rip), %ecx
  409074:	48 8d 57 20 	leaq	32(%rdi), %rdx
  409078:	85 c9 	testl	%ecx, %ecx
  40907a:	75 3e 	jne	62 <runtime.panicdottypeE+0x12a>
  40907c:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  409081:	48 89 4f 20 	movq	%rcx, 32(%rdi)
  409085:	48 c7 47 38 00 00 00 00 	movq	$0, 56(%rdi)
  40908d:	8b 0d 7d a9 0b 00 	movl	764285(%rip), %ecx
  409093:	48 8d 57 30 	leaq	48(%rdi), %rdx
  409097:	85 c9 	testl	%ecx, %ecx
  409099:	75 0d 	jne	13 <runtime.panicdottypeE+0x118>
  40909b:	48 c7 47 30 00 00 00 00 	movq	$0, 48(%rdi)
  4090a3:	48 89 f9 	movq	%rdi, %rcx
  4090a6:	eb 6c 	jmp	108 <runtime.panicdottypeE+0x184>
  4090a8:	48 89 f8 	movq	%rdi, %rax
  4090ab:	48 89 d7 	movq	%rdx, %rdi
  4090ae:	48 89 c1 	movq	%rax, %rcx
  4090b1:	31 c0 	xorl	%eax, %eax
  4090b3:	e8 e8 d7 03 00 	callq	251880 <runtime.gcWriteBarrier>
  4090b8:	eb 5a 	jmp	90 <runtime.panicdottypeE+0x184>
  4090ba:	48 89 f8 	movq	%rdi, %rax
  4090bd:	48 89 d7 	movq	%rdx, %rdi
  4090c0:	48 89 c1 	movq	%rax, %rcx
  4090c3:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4090c8:	e8 d3 d7 03 00 	callq	251859 <runtime.gcWriteBarrier>
  4090cd:	48 89 cf 	movq	%rcx, %rdi
  4090d0:	eb b3 	jmp	-77 <runtime.panicdottypeE+0xf5>
  4090d2:	48 89 f8 	movq	%rdi, %rax
  4090d5:	48 89 d7 	movq	%rdx, %rdi
  4090d8:	48 89 c1 	movq	%rax, %rcx
  4090db:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4090e0:	e8 bb d7 03 00 	callq	251835 <runtime.gcWriteBarrier>
  4090e5:	48 89 cf 	movq	%rcx, %rdi
  4090e8:	e9 78 ff ff ff 	jmp	-136 <runtime.panicdottypeE+0xd5>
  4090ed:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4090f2:	e8 a9 d7 03 00 	callq	251817 <runtime.gcWriteBarrier>
  4090f7:	e9 49 ff ff ff 	jmp	-183 <runtime.panicdottypeE+0xb5>
  4090fc:	48 89 04 24 	movq	%rax, (%rsp)
  409100:	e8 6b 58 03 00 	callq	219243 <runtime.(*_type).string>
  409105:	48 8b 44 24 10 	movq	16(%rsp), %rax
  40910a:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  40910f:	e9 af fe ff ff 	jmp	-337 <runtime.panicdottypeE+0x33>
  409114:	48 8d 05 c5 20 05 00 	leaq	336069(%rip), %rax
  40911b:	48 89 04 24 	movq	%rax, (%rsp)
  40911f:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  409124:	e8 07 79 01 00 	callq	96519 <runtime.gopanic>
  409129:	0f 0b 	ud2
  40912b:	e8 40 b4 03 00 	callq	242752 <runtime.morestack_noctxt>
  409130:	e9 5b fe ff ff 	jmp	-421 <runtime.panicdottypeE>
  409135:	cc 	int3
  409136:	cc 	int3
  409137:	cc 	int3
  409138:	cc 	int3
  409139:	cc 	int3
  40913a:	cc 	int3
  40913b:	cc 	int3
  40913c:	cc 	int3
  40913d:	cc 	int3
  40913e:	cc 	int3
  40913f:	cc 	int3

runtime.panicdottypeI:
  409140:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  409149:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40914d:	76 47 	jbe	71 <runtime.panicdottypeI+0x56>
  40914f:	48 83 ec 20 	subq	$32, %rsp
  409153:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  409158:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  40915d:	48 8b 44 24 28 	movq	40(%rsp), %rax
  409162:	48 85 c0 	testq	%rax, %rax
  409165:	74 2b 	je	43 <runtime.panicdottypeI+0x52>
  409167:	48 8b 40 08 	movq	8(%rax), %rax
  40916b:	48 89 04 24 	movq	%rax, (%rsp)
  40916f:	48 8b 44 24 30 	movq	48(%rsp), %rax
  409174:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  409179:	48 8b 44 24 38 	movq	56(%rsp), %rax
  40917e:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  409183:	e8 08 fe ff ff 	callq	-504 <runtime.panicdottypeE>
  409188:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  40918d:	48 83 c4 20 	addq	$32, %rsp
  409191:	c3 	retq
  409192:	31 c0 	xorl	%eax, %eax
  409194:	eb d5 	jmp	-43 <runtime.panicdottypeI+0x2b>
  409196:	e8 d5 b3 03 00 	callq	242645 <runtime.morestack_noctxt>
  40919b:	eb a3 	jmp	-93 <runtime.panicdottypeI>
  40919d:	cc 	int3
  40919e:	cc 	int3
  40919f:	cc 	int3

runtime.convT2Estring:
  4091a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4091a9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4091ad:	0f 86 85 00 00 00 	jbe	133 <runtime.convT2Estring+0x98>
  4091b3:	48 83 ec 28 	subq	$40, %rsp
  4091b7:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  4091bc:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  4091c1:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4091c6:	48 8b 48 08 	movq	8(%rax), %rcx
  4091ca:	48 85 c9 	testq	%rcx, %rcx
  4091cd:	75 20 	jne	32 <runtime.convT2Estring+0x4f>
  4091cf:	48 8d 05 2a b1 0b 00 	leaq	766250(%rip), %rax
  4091d6:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4091db:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  4091e0:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  4091e5:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4091ea:	48 83 c4 28 	addq	$40, %rsp
  4091ee:	c3 	retq
  4091ef:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4091f4:	48 8b 08 	movq	(%rax), %rcx
  4091f7:	48 89 0c 24 	movq	%rcx, (%rsp)
  4091fb:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  409200:	c6 44 24 10 01 	movb	$1, 16(%rsp)
  409205:	e8 06 14 00 00 	callq	5126 <runtime.mallocgc>
  40920a:	48 8b 7c 24 18 	movq	24(%rsp), %rdi
  40920f:	48 8b 44 24 38 	movq	56(%rsp), %rax
  409214:	48 8b 48 08 	movq	8(%rax), %rcx
  409218:	48 8b 00 	movq	(%rax), %rax
  40921b:	48 89 4f 08 	movq	%rcx, 8(%rdi)
  40921f:	8b 0d eb a7 0b 00 	movl	763883(%rip), %ecx
  409225:	85 c9 	testl	%ecx, %ecx
  409227:	75 08 	jne	8 <runtime.convT2Estring+0x91>
  409229:	48 89 07 	movq	%rax, (%rdi)
  40922c:	48 89 f8 	movq	%rdi, %rax
  40922f:	eb a5 	jmp	-91 <runtime.convT2Estring+0x36>
  409231:	e8 6a d6 03 00 	callq	251498 <runtime.gcWriteBarrier>
  409236:	eb f4 	jmp	-12 <runtime.convT2Estring+0x8c>
  409238:	e8 33 b3 03 00 	callq	242483 <runtime.morestack_noctxt>
  40923d:	e9 5e ff ff ff 	jmp	-162 <runtime.convT2Estring>
  409242:	cc 	int3
  409243:	cc 	int3
  409244:	cc 	int3
  409245:	cc 	int3
  409246:	cc 	int3
  409247:	cc 	int3
  409248:	cc 	int3
  409249:	cc 	int3
  40924a:	cc 	int3
  40924b:	cc 	int3
  40924c:	cc 	int3
  40924d:	cc 	int3
  40924e:	cc 	int3
  40924f:	cc 	int3

runtime.assertE2I2:
  409250:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  409259:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40925d:	0f 86 86 00 00 00 	jbe	134 <runtime.assertE2I2+0x99>
  409263:	48 83 ec 28 	subq	$40, %rsp
  409267:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  40926c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  409271:	48 8b 44 24 38 	movq	56(%rsp), %rax
  409276:	48 85 c0 	testq	%rax, %rax
  409279:	74 57 	je	87 <runtime.assertE2I2+0x82>
  40927b:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  409280:	48 89 0c 24 	movq	%rcx, (%rsp)
  409284:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  409289:	c6 44 24 10 01 	movb	$1, 16(%rsp)
  40928e:	e8 2d f1 ff ff 	callq	-3795 <runtime.getitab>
  409293:	48 8b 44 24 18 	movq	24(%rsp), %rax
  409298:	48 85 c0 	testq	%rax, %rax
  40929b:	74 1e 	je	30 <runtime.assertE2I2+0x6b>
  40929d:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  4092a2:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4092a7:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  4092ac:	c6 44 24 58 01 	movb	$1, 88(%rsp)
  4092b1:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4092b6:	48 83 c4 28 	addq	$40, %rsp
  4092ba:	c3 	retq
  4092bb:	0f 57 c0 	xorps	%xmm0, %xmm0
  4092be:	0f 11 44 24 48 	movups	%xmm0, 72(%rsp)
  4092c3:	c6 44 24 58 00 	movb	$0, 88(%rsp)
  4092c8:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4092cd:	48 83 c4 28 	addq	$40, %rsp
  4092d1:	c3 	retq
  4092d2:	0f 57 c0 	xorps	%xmm0, %xmm0
  4092d5:	0f 11 44 24 48 	movups	%xmm0, 72(%rsp)
  4092da:	c6 44 24 58 00 	movb	$0, 88(%rsp)
  4092df:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4092e4:	48 83 c4 28 	addq	$40, %rsp
  4092e8:	c3 	retq
  4092e9:	e8 82 b2 03 00 	callq	242306 <runtime.morestack_noctxt>
  4092ee:	e9 5d ff ff ff 	jmp	-163 <runtime.assertE2I2>
  4092f3:	cc 	int3
  4092f4:	cc 	int3
  4092f5:	cc 	int3
  4092f6:	cc 	int3
  4092f7:	cc 	int3
  4092f8:	cc 	int3
  4092f9:	cc 	int3
  4092fa:	cc 	int3
  4092fb:	cc 	int3
  4092fc:	cc 	int3
  4092fd:	cc 	int3
  4092fe:	cc 	int3
  4092ff:	cc 	int3

runtime.iterate_itabs:
  409300:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  409309:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40930d:	76 63 	jbe	99 <runtime.iterate_itabs+0x72>
  40930f:	48 83 ec 20 	subq	$32, %rsp
  409313:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  409318:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  40931d:	48 8b 05 04 c7 09 00 	movq	640772(%rip), %rax
  409324:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  409329:	31 c9 	xorl	%ecx, %ecx
  40932b:	eb 03 	jmp	3 <runtime.iterate_itabs+0x30>
  40932d:	48 ff c1 	incq	%rcx
  409330:	48 8b 18 	movq	(%rax), %rbx
  409333:	48 39 d9 	cmpq	%rbx, %rcx
  409336:	73 30 	jae	48 <runtime.iterate_itabs+0x68>
  409338:	48 8d 5c c8 10 	leaq	16(%rax,%rcx,8), %rbx
  40933d:	84 03 	testb	%al, (%rbx)
  40933f:	48 8b 5c c8 10 	movq	16(%rax,%rcx,8), %rbx
  409344:	48 85 db 	testq	%rbx, %rbx
  409347:	74 e4 	je	-28 <runtime.iterate_itabs+0x2d>
  409349:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40934e:	48 89 1c 24 	movq	%rbx, (%rsp)
  409352:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  409357:	48 8b 02 	movq	(%rdx), %rax
  40935a:	ff d0 	callq	*%rax
  40935c:	48 8b 44 24 10 	movq	16(%rsp), %rax
  409361:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  409366:	eb c5 	jmp	-59 <runtime.iterate_itabs+0x2d>
  409368:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  40936d:	48 83 c4 20 	addq	$32, %rsp
  409371:	c3 	retq
  409372:	e8 f9 b1 03 00 	callq	242169 <runtime.morestack_noctxt>
  409377:	eb 87 	jmp	-121 <runtime.iterate_itabs>
  409379:	cc 	int3
  40937a:	cc 	int3
  40937b:	cc 	int3
  40937c:	cc 	int3
  40937d:	cc 	int3
  40937e:	cc 	int3
  40937f:	cc 	int3

runtime.(*lfstack).push:
  409380:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  409389:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40938d:	0f 86 3d 01 00 00 	jbe	317 <runtime.(*lfstack).push+0x150>
  409393:	48 83 ec 30 	subq	$48, %rsp
  409397:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  40939c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  4093a1:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  4093a6:	48 8b 51 08 	movq	8(%rcx), %rdx
  4093aa:	48 ff c2 	incq	%rdx
  4093ad:	48 89 51 08 	movq	%rdx, 8(%rcx)
  4093b1:	48 89 cb 	movq	%rcx, %rbx
  4093b4:	48 c1 e1 10 	shlq	$16, %rcx
  4093b8:	48 89 d6 	movq	%rdx, %rsi
  4093bb:	48 81 e2 ff ff 07 00 	andq	$524287, %rdx
  4093c2:	48 09 d1 	orq	%rdx, %rcx
  4093c5:	48 89 ca 	movq	%rcx, %rdx
  4093c8:	48 c1 f9 13 	sarq	$19, %rcx
  4093cc:	48 c1 e1 03 	shlq	$3, %rcx
  4093d0:	48 39 d9 	cmpq	%rbx, %rcx
  4093d3:	75 26 	jne	38 <runtime.(*lfstack).push+0x7b>
  4093d5:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  4093da:	48 8b 31 	movq	(%rcx), %rsi
  4093dd:	48 89 33 	movq	%rsi, (%rbx)
  4093e0:	48 89 f0 	movq	%rsi, %rax
  4093e3:	f0 	lock
  4093e4:	48 0f b1 11 	cmpxchgq	%rdx, (%rcx)
  4093e8:	40 0f 94 c6 	sete	%sil
  4093ec:	40 84 f6 	testb	%sil, %sil
  4093ef:	74 e9 	je	-23 <runtime.(*lfstack).push+0x5a>
  4093f1:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  4093f6:	48 83 c4 30 	addq	$48, %rsp
  4093fa:	c3 	retq
  4093fb:	48 89 74 24 18 	movq	%rsi, 24(%rsp)
  409400:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  409405:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  40940a:	e8 f1 86 01 00 	callq	100081 <runtime.printlock>
  40940f:	48 8d 05 37 42 06 00 	leaq	410167(%rip), %rax
  409416:	48 89 04 24 	movq	%rax, (%rsp)
  40941a:	48 c7 44 24 08 2c 00 00 00 	movq	$44, 8(%rsp)
  409423:	e8 18 90 01 00 	callq	102424 <runtime.printstring>
  409428:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40942d:	48 89 04 24 	movq	%rax, (%rsp)
  409431:	e8 ca 8f 01 00 	callq	102346 <runtime.printpointer>
  409436:	48 8d 05 1c 09 06 00 	leaq	395548(%rip), %rax
  40943d:	48 89 04 24 	movq	%rax, (%rsp)
  409441:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  40944a:	e8 f1 8f 01 00 	callq	102385 <runtime.printstring>
  40944f:	48 8b 44 24 18 	movq	24(%rsp), %rax
  409454:	48 89 04 24 	movq	%rax, (%rsp)
  409458:	e8 93 8e 01 00 	callq	102035 <runtime.printhex>
  40945d:	48 8d 05 6b 0b 06 00 	leaq	396139(%rip), %rax
  409464:	48 89 04 24 	movq	%rax, (%rsp)
  409468:	48 c7 44 24 08 08 00 00 00 	movq	$8, 8(%rsp)
  409471:	e8 ca 8f 01 00 	callq	102346 <runtime.printstring>
  409476:	48 8b 44 24 10 	movq	16(%rsp), %rax
  40947b:	48 89 04 24 	movq	%rax, (%rsp)
  40947f:	e8 6c 8e 01 00 	callq	101996 <runtime.printhex>
  409484:	48 8d 05 bd 0b 06 00 	leaq	396221(%rip), %rax
  40948b:	48 89 04 24 	movq	%rax, (%rsp)
  40948f:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  409498:	e8 a3 8f 01 00 	callq	102307 <runtime.printstring>
  40949d:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4094a2:	48 89 04 24 	movq	%rax, (%rsp)
  4094a6:	e8 55 8f 01 00 	callq	102229 <runtime.printpointer>
  4094ab:	e8 e0 88 01 00 	callq	100576 <runtime.printnl>
  4094b0:	e8 cb 86 01 00 	callq	100043 <runtime.printunlock>
  4094b5:	48 8d 05 6a 11 06 00 	leaq	397674(%rip), %rax
  4094bc:	48 89 04 24 	movq	%rax, (%rsp)
  4094c0:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  4094c9:	e8 02 7d 01 00 	callq	97538 <runtime.throw>
  4094ce:	0f 0b 	ud2
  4094d0:	e8 9b b0 03 00 	callq	241819 <runtime.morestack_noctxt>
  4094d5:	e9 a6 fe ff ff 	jmp	-346 <runtime.(*lfstack).push>
  4094da:	cc 	int3
  4094db:	cc 	int3
  4094dc:	cc 	int3
  4094dd:	cc 	int3
  4094de:	cc 	int3
  4094df:	cc 	int3

runtime.(*lfstack).pop:
  4094e0:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  4094e5:	48 8b 11 	movq	(%rcx), %rdx
  4094e8:	48 85 d2 	testq	%rdx, %rdx
  4094eb:	74 20 	je	32 <runtime.(*lfstack).pop+0x2d>
  4094ed:	48 89 d0 	movq	%rdx, %rax
  4094f0:	48 c1 fa 13 	sarq	$19, %rdx
  4094f4:	48 c1 e2 03 	shlq	$3, %rdx
  4094f8:	48 8b 1a 	movq	(%rdx), %rbx
  4094fb:	f0 	lock
  4094fc:	48 0f b1 19 	cmpxchgq	%rbx, (%rcx)
  409500:	0f 94 c3 	sete	%bl
  409503:	84 db 	testb	%bl, %bl
  409505:	74 de 	je	-34 <runtime.(*lfstack).pop+0x5>
  409507:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  40950c:	c3 	retq
  40950d:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  409516:	c3 	retq
  409517:	cc 	int3
  409518:	cc 	int3
  409519:	cc 	int3
  40951a:	cc 	int3
  40951b:	cc 	int3
  40951c:	cc 	int3
  40951d:	cc 	int3
  40951e:	cc 	int3
  40951f:	cc 	int3

runtime.lock:
  409520:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  409529:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40952d:	0f 86 7e 01 00 00 	jbe	382 <runtime.lock+0x191>
  409533:	48 83 ec 40 	subq	$64, %rsp
  409537:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  40953c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  409541:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40954a:	48 8b 49 30 	movq	48(%rcx), %rcx
  40954e:	8b 91 00 01 00 00 	movl	256(%rcx), %edx
  409554:	85 d2 	testl	%edx, %edx
  409556:	0f 8c 3a 01 00 00 	jl	314 <runtime.lock+0x176>
  40955c:	ff c2 	incl	%edx
  40955e:	89 91 00 01 00 00 	movl	%edx, 256(%rcx)
  409564:	b9 01 00 00 00 	movl	$1, %ecx
  409569:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  40956e:	87 0a 	xchgl	%ecx, (%rdx)
  409570:	85 c9 	testl	%ecx, %ecx
  409572:	0f 84 14 01 00 00 	je	276 <runtime.lock+0x16c>
  409578:	8b 1d 66 a3 0b 00 	movl	762726(%rip), %ebx
  40957e:	83 fb 01 	cmpl	$1, %ebx
  409581:	0f 8e fe 00 00 00 	jle	254 <runtime.lock+0x165>
  409587:	b8 04 00 00 00 	movl	$4, %eax
  40958c:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  409591:	e9 da 00 00 00 	jmp	218 <runtime.lock+0x150>
  409596:	48 89 f0 	movq	%rsi, %rax
  409599:	48 8b 32 	movq	(%rdx), %rsi
  40959c:	48 85 f6 	testq	%rsi, %rsi
  40959f:	75 1c 	jne	28 <runtime.lock+0x9d>
  4095a1:	48 89 c6 	movq	%rax, %rsi
  4095a4:	31 c0 	xorl	%eax, %eax
  4095a6:	f0 	lock
  4095a7:	0f b1 0a 	cmpxchgl	%ecx, (%rdx)
  4095aa:	40 0f 94 c7 	sete	%dil
  4095ae:	40 84 ff 	testb	%dil, %dil
  4095b1:	74 e3 	je	-29 <runtime.lock+0x76>
  4095b3:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  4095b8:	48 83 c4 40 	addq	$64, %rsp
  4095bc:	c3 	retq
  4095bd:	48 89 5c 24 30 	movq	%rbx, 48(%rsp)
  4095c2:	c7 04 24 1e 00 00 00 	movl	$30, (%rsp)
  4095c9:	e8 a2 c5 03 00 	callq	247202 <runtime.procyield>
  4095ce:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4095d3:	48 8d 58 01 	leaq	1(%rax), %rbx
  4095d7:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4095dc:	8b 4c 24 1c 	movl	28(%rsp), %ecx
  4095e0:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  4095e5:	48 39 c3 	cmpq	%rax, %rbx
  4095e8:	7c af 	jl	-81 <runtime.lock+0x79>
  4095ea:	31 db 	xorl	%ebx, %ebx
  4095ec:	eb 48 	jmp	72 <runtime.lock+0x116>
  4095ee:	48 89 f0 	movq	%rsi, %rax
  4095f1:	48 8b 32 	movq	(%rdx), %rsi
  4095f4:	48 85 f6 	testq	%rsi, %rsi
  4095f7:	75 1c 	jne	28 <runtime.lock+0xf5>
  4095f9:	48 89 c6 	movq	%rax, %rsi
  4095fc:	31 c0 	xorl	%eax, %eax
  4095fe:	f0 	lock
  4095ff:	0f b1 0a 	cmpxchgl	%ecx, (%rdx)
  409602:	40 0f 94 c7 	sete	%dil
  409606:	40 84 ff 	testb	%dil, %dil
  409609:	74 e3 	je	-29 <runtime.lock+0xce>
  40960b:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  409610:	48 83 c4 40 	addq	$64, %rsp
  409614:	c3 	retq
  409615:	48 89 5c 24 28 	movq	%rbx, 40(%rsp)
  40961a:	e8 31 e9 03 00 	callq	256305 <runtime.osyield>
  40961f:	48 8b 44 24 28 	movq	40(%rsp), %rax
  409624:	48 8d 58 01 	leaq	1(%rax), %rbx
  409628:	48 8b 44 24 20 	movq	32(%rsp), %rax
  40962d:	8b 4c 24 1c 	movl	28(%rsp), %ecx
  409631:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  409636:	48 83 fb 01 	cmpq	$1, %rbx
  40963a:	7c b5 	jl	-75 <runtime.lock+0xd1>
  40963c:	b9 02 00 00 00 	movl	$2, %ecx
  409641:	87 0a 	xchgl	%ecx, (%rdx)
  409643:	85 c9 	testl	%ecx, %ecx
  409645:	74 34 	je	52 <runtime.lock+0x15b>
  409647:	48 89 14 24 	movq	%rdx, (%rsp)
  40964b:	c7 44 24 08 02 00 00 00 	movl	$2, 8(%rsp)
  409653:	48 c7 44 24 10 ff ff ff ff 	movq	$-1, 16(%rsp)
  40965c:	e8 ff 55 01 00 	callq	87551 <runtime.futexsleep>
  409661:	48 8b 44 24 20 	movq	32(%rsp), %rax
  409666:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  40966b:	b9 02 00 00 00 	movl	$2, %ecx
  409670:	89 4c 24 1c 	movl	%ecx, 28(%rsp)
  409674:	31 db 	xorl	%ebx, %ebx
  409676:	e9 6a ff ff ff 	jmp	-150 <runtime.lock+0xc5>
  40967b:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  409680:	48 83 c4 40 	addq	$64, %rsp
  409684:	c3 	retq
  409685:	31 c0 	xorl	%eax, %eax
  409687:	e9 00 ff ff ff 	jmp	-256 <runtime.lock+0x6c>
  40968c:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  409691:	48 83 c4 40 	addq	$64, %rsp
  409695:	c3 	retq
  409696:	48 8d 05 72 24 06 00 	leaq	402546(%rip), %rax
  40969d:	48 89 04 24 	movq	%rax, (%rsp)
  4096a1:	48 c7 44 24 08 19 00 00 00 	movq	$25, 8(%rsp)
  4096aa:	e8 21 7b 01 00 	callq	97057 <runtime.throw>
  4096af:	0f 0b 	ud2
  4096b1:	e8 ba ae 03 00 	callq	241338 <runtime.morestack_noctxt>
  4096b6:	e9 65 fe ff ff 	jmp	-411 <runtime.lock>
  4096bb:	cc 	int3
  4096bc:	cc 	int3
  4096bd:	cc 	int3
  4096be:	cc 	int3
  4096bf:	cc 	int3

runtime.unlock:
  4096c0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4096c9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4096cd:	0f 86 aa 00 00 00 	jbe	170 <runtime.unlock+0xbd>
  4096d3:	48 83 ec 18 	subq	$24, %rsp
  4096d7:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  4096dc:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  4096e1:	31 c0 	xorl	%eax, %eax
  4096e3:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  4096e8:	87 01 	xchgl	%eax, (%rcx)
  4096ea:	85 c0 	testl	%eax, %eax
  4096ec:	74 74 	je	116 <runtime.unlock+0xa2>
  4096ee:	83 f8 02 	cmpl	$2, %eax
  4096f1:	74 41 	je	65 <runtime.unlock+0x74>
  4096f3:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4096fc:	48 8b 48 30 	movq	48(%rax), %rcx
  409700:	83 81 00 01 00 00 ff 	addl	$-1, 256(%rcx)
  409707:	48 8b 48 30 	movq	48(%rax), %rcx
  40970b:	8b 89 00 01 00 00 	movl	256(%rcx), %ecx
  409711:	85 c9 	testl	%ecx, %ecx
  409713:	7c 32 	jl	50 <runtime.unlock+0x87>
  409715:	75 13 	jne	19 <runtime.unlock+0x6a>
  409717:	0f b6 88 c0 00 00 00 	movzbl	192(%rax), %ecx
  40971e:	84 c9 	testb	%cl, %cl
  409720:	74 08 	je	8 <runtime.unlock+0x6a>
  409722:	48 c7 40 10 de fa ff ff 	movq	$-1314, 16(%rax)
  40972a:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  40972f:	48 83 c4 18 	addq	$24, %rsp
  409733:	c3 	retq
  409734:	48 89 0c 24 	movq	%rcx, (%rsp)
  409738:	c7 44 24 08 01 00 00 00 	movl	$1, 8(%rsp)
  409740:	e8 eb 55 01 00 	callq	87531 <runtime.futexwakeup>
  409745:	eb ac 	jmp	-84 <runtime.unlock+0x33>
  409747:	48 8d 05 5c 27 06 00 	leaq	403292(%rip), %rax
  40974e:	48 89 04 24 	movq	%rax, (%rsp)
  409752:	48 c7 44 24 08 1b 00 00 00 	movq	$27, 8(%rsp)
  40975b:	e8 70 7a 01 00 	callq	96880 <runtime.throw>
  409760:	0f 0b 	ud2
  409762:	48 8d 05 af 20 06 00 	leaq	401583(%rip), %rax
  409769:	48 89 04 24 	movq	%rax, (%rsp)
  40976d:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  409776:	e8 55 7a 01 00 	callq	96853 <runtime.throw>
  40977b:	0f 0b 	ud2
  40977d:	e8 ee ad 03 00 	callq	241134 <runtime.morestack_noctxt>
  409782:	e9 39 ff ff ff 	jmp	-199 <runtime.unlock>
  409787:	cc 	int3
  409788:	cc 	int3
  409789:	cc 	int3
  40978a:	cc 	int3
  40978b:	cc 	int3
  40978c:	cc 	int3
  40978d:	cc 	int3
  40978e:	cc 	int3
  40978f:	cc 	int3

runtime.notewakeup:
  409790:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  409799:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40979d:	0f 86 a3 00 00 00 	jbe	163 <runtime.notewakeup+0xb6>
  4097a3:	48 83 ec 20 	subq	$32, %rsp
  4097a7:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  4097ac:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  4097b1:	b8 01 00 00 00 	movl	$1, %eax
  4097b6:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  4097bb:	87 01 	xchgl	%eax, (%rcx)
  4097bd:	85 c0 	testl	%eax, %eax
  4097bf:	75 1b 	jne	27 <runtime.notewakeup+0x4c>
  4097c1:	48 89 0c 24 	movq	%rcx, (%rsp)
  4097c5:	c7 44 24 08 01 00 00 00 	movl	$1, 8(%rsp)
  4097cd:	e8 5e 55 01 00 	callq	87390 <runtime.futexwakeup>
  4097d2:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  4097d7:	48 83 c4 20 	addq	$32, %rsp
  4097db:	c3 	retq
  4097dc:	89 44 24 14 	movl	%eax, 20(%rsp)
  4097e0:	e8 1b 83 01 00 	callq	99099 <runtime.printlock>
  4097e5:	48 8d 05 aa 29 06 00 	leaq	403882(%rip), %rax
  4097ec:	48 89 04 24 	movq	%rax, (%rsp)
  4097f0:	48 c7 44 24 08 1c 00 00 00 	movq	$28, 8(%rsp)
  4097f9:	e8 42 8c 01 00 	callq	101442 <runtime.printstring>
  4097fe:	8b 44 24 14 	movl	20(%rsp), %eax
  409802:	89 c0 	movl	%eax, %eax
  409804:	48 89 04 24 	movq	%rax, (%rsp)
  409808:	e8 63 89 01 00 	callq	100707 <runtime.printuint>
  40980d:	48 8d 05 56 04 06 00 	leaq	394326(%rip), %rax
  409814:	48 89 04 24 	movq	%rax, (%rsp)
  409818:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  409821:	e8 1a 8c 01 00 	callq	101402 <runtime.printstring>
  409826:	e8 55 83 01 00 	callq	99157 <runtime.printunlock>
  40982b:	48 8d 05 10 24 06 00 	leaq	402448(%rip), %rax
  409832:	48 89 04 24 	movq	%rax, (%rsp)
  409836:	48 c7 44 24 08 1a 00 00 00 	movq	$26, 8(%rsp)
  40983f:	e8 8c 79 01 00 	callq	96652 <runtime.throw>
  409844:	0f 0b 	ud2
  409846:	e8 25 ad 03 00 	callq	240933 <runtime.morestack_noctxt>
  40984b:	e9 40 ff ff ff 	jmp	-192 <runtime.notewakeup>

runtime.notesleep:
  409850:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  409859:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40985d:	0f 86 dc 00 00 00 	jbe	220 <runtime.notesleep+0xef>
  409863:	48 83 ec 30 	subq	$48, %rsp
  409867:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  40986c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  409871:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  40987a:	48 8b 48 30 	movq	48(%rax), %rcx
  40987e:	48 8b 09 	movq	(%rcx), %rcx
  409881:	48 39 c8 	cmpq	%rcx, %rax
  409884:	0f 85 9a 00 00 00 	jne	154 <runtime.notesleep+0xd4>
  40988a:	48 8b 0d 8f c1 09 00 	movq	639375(%rip), %rcx
  409891:	48 8b 09 	movq	(%rcx), %rcx
  409894:	48 85 c9 	testq	%rcx, %rcx
  409897:	74 7f 	je	127 <runtime.notesleep+0xc8>
  409899:	b9 80 96 98 00 	movl	$10000000, %ecx
  40989e:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  4098a3:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  4098a8:	eb 15 	jmp	21 <runtime.notesleep+0x6f>
  4098aa:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4098af:	48 8b 50 30 	movq	48(%rax), %rdx
  4098b3:	c6 82 15 01 00 00 00 	movb	$0, 277(%rdx)
  4098ba:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  4098bf:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  4098c4:	8b 1a 	movl	(%rdx), %ebx
  4098c6:	85 db 	testl	%ebx, %ebx
  4098c8:	75 44 	jne	68 <runtime.notesleep+0xbe>
  4098ca:	48 8b 58 30 	movq	48(%rax), %rbx
  4098ce:	c6 83 15 01 00 00 01 	movb	$1, 277(%rbx)
  4098d5:	48 89 14 24 	movq	%rdx, (%rsp)
  4098d9:	c7 44 24 08 00 00 00 00 	movl	$0, 8(%rsp)
  4098e1:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  4098e6:	e8 75 53 01 00 	callq	86901 <runtime.futexsleep>
  4098eb:	48 8b 05 2e c1 09 00 	movq	639278(%rip), %rax
  4098f2:	48 8b 00 	movq	(%rax), %rax
  4098f5:	48 85 c0 	testq	%rax, %rax
  4098f8:	74 b0 	je	-80 <runtime.notesleep+0x5a>
  4098fa:	48 89 04 24 	movq	%rax, (%rsp)
  4098fe:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  409907:	e8 e4 c2 03 00 	callq	246500 <runtime.asmcgocall>
  40990c:	eb 9c 	jmp	-100 <runtime.notesleep+0x5a>
  40990e:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  409913:	48 83 c4 30 	addq	$48, %rsp
  409917:	c3 	retq
  409918:	48 c7 c1 ff ff ff ff 	movq	$-1, %rcx
  40991f:	e9 7a ff ff ff 	jmp	-134 <runtime.notesleep+0x4e>
  409924:	48 8d 05 a7 15 06 00 	leaq	398759(%rip), %rax
  40992b:	48 89 04 24 	movq	%rax, (%rsp)
  40992f:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  409938:	e8 93 78 01 00 	callq	96403 <runtime.throw>
  40993d:	0f 0b 	ud2
  40993f:	e8 2c ac 03 00 	callq	240684 <runtime.morestack_noctxt>
  409944:	e9 07 ff ff ff 	jmp	-249 <runtime.notesleep>
  409949:	cc 	int3
  40994a:	cc 	int3
  40994b:	cc 	int3
  40994c:	cc 	int3
  40994d:	cc 	int3
  40994e:	cc 	int3
  40994f:	cc 	int3

runtime.notetsleep_internal:
  409950:	48 83 ec 30 	subq	$48, %rsp
  409954:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  409959:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  40995e:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  409967:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  40996c:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  409971:	48 85 c9 	testq	%rcx, %rcx
  409974:	0f 8d 8e 00 00 00 	jge	142 <runtime.notetsleep_internal+0xb8>
  40997a:	48 8b 15 9f c0 09 00 	movq	639135(%rip), %rdx
  409981:	48 8b 12 	movq	(%rdx), %rdx
  409984:	48 85 d2 	testq	%rdx, %rdx
  409987:	74 05 	je	5 <runtime.notetsleep_internal+0x3e>
  409989:	b9 80 96 98 00 	movl	$10000000, %ecx
  40998e:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  409993:	eb 15 	jmp	21 <runtime.notetsleep_internal+0x5a>
  409995:	48 8b 44 24 20 	movq	32(%rsp), %rax
  40999a:	48 8b 50 30 	movq	48(%rax), %rdx
  40999e:	c6 82 15 01 00 00 00 	movb	$0, 277(%rdx)
  4099a5:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  4099aa:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  4099af:	8b 1a 	movl	(%rdx), %ebx
  4099b1:	85 db 	testl	%ebx, %ebx
  4099b3:	75 44 	jne	68 <runtime.notetsleep_internal+0xa9>
  4099b5:	48 8b 58 30 	movq	48(%rax), %rbx
  4099b9:	c6 83 15 01 00 00 01 	movb	$1, 277(%rbx)
  4099c0:	48 89 14 24 	movq	%rdx, (%rsp)
  4099c4:	c7 44 24 08 00 00 00 00 	movl	$0, 8(%rsp)
  4099cc:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  4099d1:	e8 8a 52 01 00 	callq	86666 <runtime.futexsleep>
  4099d6:	48 8b 05 43 c0 09 00 	movq	639043(%rip), %rax
  4099dd:	48 8b 00 	movq	(%rax), %rax
  4099e0:	48 85 c0 	testq	%rax, %rax
  4099e3:	74 b0 	je	-80 <runtime.notetsleep_internal+0x45>
  4099e5:	48 89 04 24 	movq	%rax, (%rsp)
  4099e9:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  4099f2:	e8 f9 c1 03 00 	callq	246265 <runtime.asmcgocall>
  4099f7:	eb 9c 	jmp	-100 <runtime.notetsleep_internal+0x45>
  4099f9:	c6 44 24 48 01 	movb	$1, 72(%rsp)
  4099fe:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  409a03:	48 83 c4 30 	addq	$48, %rsp
  409a07:	c3 	retq
  409a08:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  409a0d:	8b 1a 	movl	(%rdx), %ebx
  409a0f:	85 db 	testl	%ebx, %ebx
  409a11:	0f 85 d9 00 00 00 	jne	217 <runtime.notetsleep_internal+0x1a0>
  409a17:	e8 14 e0 03 00 	callq	253972 <runtime.nanotime>
  409a1c:	48 8b 04 24 	movq	(%rsp), %rax
  409a20:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  409a25:	48 01 c8 	addq	%rcx, %rax
  409a28:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  409a2d:	eb 09 	jmp	9 <runtime.notetsleep_internal+0xe8>
  409a2f:	48 89 ca 	movq	%rcx, %rdx
  409a32:	48 29 c1 	subq	%rax, %rcx
  409a35:	48 89 d0 	movq	%rdx, %rax
  409a38:	48 8b 15 e1 bf 09 00 	movq	638945(%rip), %rdx
  409a3f:	48 8b 12 	movq	(%rdx), %rdx
  409a42:	48 85 d2 	testq	%rdx, %rdx
  409a45:	74 0e 	je	14 <runtime.notetsleep_internal+0x105>
  409a47:	48 81 f9 80 96 98 00 	cmpq	$10000000, %rcx
  409a4e:	7e 05 	jle	5 <runtime.notetsleep_internal+0x105>
  409a50:	b9 80 96 98 00 	movl	$10000000, %ecx
  409a55:	48 8b 44 24 20 	movq	32(%rsp), %rax
  409a5a:	48 8b 50 30 	movq	48(%rax), %rdx
  409a5e:	c6 82 15 01 00 00 01 	movb	$1, 277(%rdx)
  409a65:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  409a6a:	48 89 14 24 	movq	%rdx, (%rsp)
  409a6e:	c7 44 24 08 00 00 00 00 	movl	$0, 8(%rsp)
  409a76:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  409a7b:	e8 e0 51 01 00 	callq	86496 <runtime.futexsleep>
  409a80:	48 8b 05 99 bf 09 00 	movq	638873(%rip), %rax
  409a87:	48 8b 00 	movq	(%rax), %rax
  409a8a:	48 85 c0 	testq	%rax, %rax
  409a8d:	75 4d 	jne	77 <runtime.notetsleep_internal+0x18c>
  409a8f:	48 8b 44 24 20 	movq	32(%rsp), %rax
  409a94:	48 8b 48 30 	movq	48(%rax), %rcx
  409a98:	c6 81 15 01 00 00 00 	movb	$0, 277(%rcx)
  409a9f:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  409aa4:	8b 11 	movl	(%rcx), %edx
  409aa6:	85 d2 	testl	%edx, %edx
  409aa8:	75 17 	jne	23 <runtime.notetsleep_internal+0x171>
  409aaa:	e8 81 df 03 00 	callq	253825 <runtime.nanotime>
  409aaf:	48 8b 04 24 	movq	(%rsp), %rax
  409ab3:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  409ab8:	48 39 c8 	cmpq	%rcx, %rax
  409abb:	0f 8c 6e ff ff ff 	jl	-146 <runtime.notetsleep_internal+0xdf>
  409ac1:	48 8b 44 24 38 	movq	56(%rsp), %rax
  409ac6:	8b 00 	movl	(%rax), %eax
  409ac8:	85 c0 	testl	%eax, %eax
  409aca:	48 8d 44 24 48 	leaq	72(%rsp), %rax
  409acf:	0f 95 00 	setne	(%rax)
  409ad2:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  409ad7:	48 83 c4 30 	addq	$48, %rsp
  409adb:	c3 	retq
  409adc:	48 89 04 24 	movq	%rax, (%rsp)
  409ae0:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  409ae9:	e8 02 c1 03 00 	callq	246018 <runtime.asmcgocall>
  409aee:	eb 9f 	jmp	-97 <runtime.notetsleep_internal+0x13f>
  409af0:	c6 44 24 48 01 	movb	$1, 72(%rsp)
  409af5:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  409afa:	48 83 c4 30 	addq	$48, %rsp
  409afe:	c3 	retq
  409aff:	cc 	int3

runtime.notetsleep:
  409b00:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  409b09:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  409b0d:	76 75 	jbe	117 <runtime.notetsleep+0x84>
  409b0f:	48 83 ec 20 	subq	$32, %rsp
  409b13:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  409b18:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  409b1d:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  409b26:	48 8b 48 30 	movq	48(%rax), %rcx
  409b2a:	48 8b 11 	movq	(%rcx), %rdx
  409b2d:	48 39 d0 	cmpq	%rdx, %rax
  409b30:	74 0c 	je	12 <runtime.notetsleep+0x3e>
  409b32:	48 8b 81 f8 00 00 00 	movq	248(%rcx), %rax
  409b39:	48 85 c0 	testq	%rax, %rax
  409b3c:	75 2b 	jne	43 <runtime.notetsleep+0x69>
  409b3e:	48 8b 44 24 28 	movq	40(%rsp), %rax
  409b43:	48 89 04 24 	movq	%rax, (%rsp)
  409b47:	48 8b 44 24 30 	movq	48(%rsp), %rax
  409b4c:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  409b51:	e8 fa fd ff ff 	callq	-518 <runtime.notetsleep_internal>
  409b56:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  409b5b:	88 44 24 38 	movb	%al, 56(%rsp)
  409b5f:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  409b64:	48 83 c4 20 	addq	$32, %rsp
  409b68:	c3 	retq
  409b69:	48 8d 05 fd 15 06 00 	leaq	398845(%rip), %rax
  409b70:	48 89 04 24 	movq	%rax, (%rsp)
  409b74:	48 c7 44 24 08 14 00 00 00 	movq	$20, 8(%rsp)
  409b7d:	e8 4e 76 01 00 	callq	95822 <runtime.throw>
  409b82:	0f 0b 	ud2
  409b84:	e8 e7 a9 03 00 	callq	240103 <runtime.morestack_noctxt>
  409b89:	e9 72 ff ff ff 	jmp	-142 <runtime.notetsleep>
  409b8e:	cc 	int3
  409b8f:	cc 	int3

runtime.notetsleepg:
  409b90:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  409b99:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  409b9d:	0f 86 8a 00 00 00 	jbe	138 <runtime.notetsleepg+0x9d>
  409ba3:	48 83 ec 28 	subq	$40, %rsp
  409ba7:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  409bac:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  409bb1:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  409bba:	48 8b 48 30 	movq	48(%rax), %rcx
  409bbe:	48 8b 09 	movq	(%rcx), %rcx
  409bc1:	48 39 c8 	cmpq	%rcx, %rax
  409bc4:	74 4c 	je	76 <runtime.notetsleepg+0x82>
  409bc6:	c7 04 24 00 00 00 00 	movl	$0, (%rsp)
  409bcd:	e8 7e fd 01 00 	callq	130430 <runtime.entersyscallblock>
  409bd2:	48 8b 44 24 30 	movq	48(%rsp), %rax
  409bd7:	48 89 04 24 	movq	%rax, (%rsp)
  409bdb:	48 8b 44 24 38 	movq	56(%rsp), %rax
  409be0:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  409be5:	e8 66 fd ff ff 	callq	-666 <runtime.notetsleep_internal>
  409bea:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  409bef:	88 44 24 1f 	movb	%al, 31(%rsp)
  409bf3:	c7 04 24 00 00 00 00 	movl	$0, (%rsp)
  409bfa:	e8 61 ff 01 00 	callq	130913 <runtime.exitsyscall>
  409bff:	0f b6 44 24 1f 	movzbl	31(%rsp), %eax
  409c04:	88 44 24 40 	movb	%al, 64(%rsp)
  409c08:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  409c0d:	48 83 c4 28 	addq	$40, %rsp
  409c11:	c3 	retq
  409c12:	48 8d 05 66 10 06 00 	leaq	397414(%rip), %rax
  409c19:	48 89 04 24 	movq	%rax, (%rsp)
  409c1d:	48 c7 44 24 08 11 00 00 00 	movq	$17, 8(%rsp)
  409c26:	e8 a5 75 01 00 	callq	95653 <runtime.throw>
  409c2b:	0f 0b 	ud2
  409c2d:	e8 3e a9 03 00 	callq	239934 <runtime.morestack_noctxt>
  409c32:	e9 59 ff ff ff 	jmp	-167 <runtime.notetsleepg>
  409c37:	cc 	int3
  409c38:	cc 	int3
  409c39:	cc 	int3
  409c3a:	cc 	int3
  409c3b:	cc 	int3
  409c3c:	cc 	int3
  409c3d:	cc 	int3
  409c3e:	cc 	int3
  409c3f:	cc 	int3

runtime.mallocinit:
  409c40:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  409c49:	48 8d 44 24 e8 	leaq	-24(%rsp), %rax
  409c4e:	48 3b 41 10 	cmpq	16(%rcx), %rax
  409c52:	0f 86 e2 04 00 00 	jbe	1250 <runtime.mallocinit+0x4fa>
  409c58:	48 81 ec 98 00 00 00 	subq	$152, %rsp
  409c5f:	48 89 ac 24 90 00 00 00 	movq	%rbp, 144(%rsp)
  409c67:	48 8d ac 24 90 00 00 00 	leaq	144(%rsp), %rbp
  409c6f:	0f b7 05 4e b5 09 00 	movzwl	636238(%rip), %eax
  409c76:	66 83 f8 10 	cmpw	$16, %ax
  409c7a:	0f 85 9f 04 00 00 	jne	1183 <runtime.mallocinit+0x4df>
  409c80:	e8 cb 61 01 00 	callq	90571 <runtime.testdefersizes>
  409c85:	31 c0 	xorl	%eax, %eax
  409c87:	eb 20 	jmp	32 <runtime.mallocinit+0x69>
  409c89:	48 8d 0c 40 	leaq	(%rax,%rax,2), %rcx
  409c8d:	48 8d 15 2c b5 09 00 	leaq	636204(%rip), %rdx
  409c94:	0f b7 1c 42 	movzwl	(%rdx,%rax,2), %ebx
  409c98:	48 8d 35 61 aa 0b 00 	leaq	764513(%rip), %rsi
  409c9f:	89 9c ce d8 10 00 00 	movl	%ebx, 4312(%rsi,%rcx,8)
  409ca6:	48 ff c0 	incq	%rax
  409ca9:	48 83 f8 43 	cmpq	$67, %rax
  409cad:	7c da 	jl	-38 <runtime.mallocinit+0x49>
  409caf:	48 8b 05 ea 9c 0b 00 	movq	761066(%rip), %rax
  409cb6:	48 85 c0 	testq	%rax, %rax
  409cb9:	0f 84 45 04 00 00 	je	1093 <runtime.mallocinit+0x4c4>
  409cbf:	48 3d 00 10 00 00 	cmpq	$4096, %rax
  409cc5:	0f 82 ac 03 00 00 	jb	940 <runtime.mallocinit+0x437>
  409ccb:	48 8d 48 ff 	leaq	-1(%rax), %rcx
  409ccf:	48 85 c8 	testq	%rcx, %rax
  409cd2:	0f 85 38 03 00 00 	jne	824 <runtime.mallocinit+0x3d0>
  409cd8:	c6 44 24 27 00 	movb	$0, 39(%rsp)
  409cdd:	31 c0 	xorl	%eax, %eax
  409cdf:	31 c9 	xorl	%ecx, %ecx
  409ce1:	eb 0e 	jmp	14 <runtime.mallocinit+0xb1>
  409ce3:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  409ce8:	48 ff c2 	incq	%rdx
  409ceb:	48 89 c1 	movq	%rax, %rcx
  409cee:	48 89 d0 	movq	%rdx, %rax
  409cf1:	48 83 f8 7f 	cmpq	$127, %rax
  409cf5:	0f 8f 1c 02 00 00 	jg	540 <runtime.mallocinit+0x2d7>
  409cfb:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  409d00:	48 c1 e0 28 	shlq	$40, %rax
  409d04:	48 ba 00 00 00 00 c0 00 00 00 	movabsq	$824633720832, %rdx
  409d0e:	48 09 d0 	orq	%rdx, %rax
  409d11:	48 89 04 24 	movq	%rax, (%rsp)
  409d15:	48 b8 00 20 00 20 84 00 00 00 	movabsq	$567472562176, %rax
  409d1f:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  409d24:	48 8d 5c 24 27 	leaq	39(%rsp), %rbx
  409d29:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  409d2e:	e8 bd 56 00 00 	callq	22205 <runtime.sysReserve>
  409d33:	48 8b 44 24 18 	movq	24(%rsp), %rax
  409d38:	48 85 c0 	testq	%rax, %rax
  409d3b:	74 a6 	je	-90 <runtime.mallocinit+0xa3>
  409d3d:	48 85 c0 	testq	%rax, %rax
  409d40:	0f 84 ce 00 00 00 	je	206 <runtime.mallocinit+0x1d4>
  409d46:	48 b9 00 20 00 20 84 00 00 00 	movabsq	$567472562176, %rcx
  409d50:	48 8d 90 ff 1f 00 00 	leaq	8191(%rax), %rdx
  409d57:	48 81 e2 00 e0 ff ff 	andq	$-8192, %rdx
  409d5e:	48 bb 00 00 00 20 04 00 00 00 	movabsq	$17716740096, %rbx
  409d68:	48 01 d3 	addq	%rdx, %rbx
  409d6b:	48 89 1d 46 38 0a 00 	movq	%rbx, 669766(%rip)
  409d72:	48 89 1d 4f 38 0a 00 	movq	%rbx, 669775(%rip)
  409d79:	48 89 d6 	movq	%rdx, %rsi
  409d7c:	48 29 c2 	subq	%rax, %rdx
  409d7f:	48 29 d1 	subq	%rdx, %rcx
  409d82:	48 01 c1 	addq	%rax, %rcx
  409d85:	48 89 0d 54 38 0a 00 	movq	%rcx, 669780(%rip)
  409d8c:	48 89 1d 3d 38 0a 00 	movq	%rbx, 669757(%rip)
  409d93:	48 89 1d 3e 38 0a 00 	movq	%rbx, 669758(%rip)
  409d9a:	0f b6 4c 24 27 	movzbl	39(%rsp), %ecx
  409d9f:	88 0d 43 38 0a 00 	movb	%cl, 669763(%rip)
  409da5:	48 8b 0d 1c 38 0a 00 	movq	669724(%rip), %rcx
  409dac:	48 f7 c1 ff 1f 00 00 	testq	$8191, %rcx
  409db3:	0f 85 66 01 00 00 	jne	358 <runtime.mallocinit+0x2df>
  409db9:	48 8d 05 e0 24 0a 00 	leaq	664800(%rip), %rax
  409dc0:	48 89 04 24 	movq	%rax, (%rsp)
  409dc4:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  409dc9:	48 c7 44 24 10 00 00 00 20 	movq	$536870912, 16(%rsp)
  409dd2:	e8 b9 01 01 00 	callq	65977 <runtime.(*mheap).init>
  409dd7:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  409de0:	48 89 84 24 88 00 00 00 	movq	%rax, 136(%rsp)
  409de8:	e8 33 45 00 00 	callq	17715 <runtime.allocmcache>
  409ded:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  409df5:	48 8b 40 30 	movq	48(%rax), %rax
  409df9:	48 8b 0c 24 	movq	(%rsp), %rcx
  409dfd:	48 89 88 60 01 00 00 	movq	%rcx, 352(%rax)
  409e04:	48 8b ac 24 90 00 00 00 	movq	144(%rsp), %rbp
  409e0c:	48 81 c4 98 00 00 00 	addq	$152, %rsp
  409e13:	c3 	retq
  409e14:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  409e19:	e8 92 e1 03 00 	callq	254354 <runtime.sbrk0>
  409e1e:	48 8b 04 24 	movq	(%rsp), %rax
  409e22:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  409e27:	48 8d 7c 24 68 	leaq	104(%rsp), %rdi
  409e2c:	48 8d 35 2d b0 06 00 	leaq	438317(%rip), %rsi
  409e33:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  409e38:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  409e3d:	e8 02 d0 03 00 	callq	249858 <runtime.duffcopy+0x364>
  409e42:	48 8b 6d 00 	movq	(%rbp), %rbp
  409e46:	31 c9 	xorl	%ecx, %ecx
  409e48:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  409e4d:	48 bb 00 20 00 20 84 00 00 00 	movabsq	$567472562176, %rbx
  409e57:	eb 16 	jmp	22 <runtime.mallocinit+0x22f>
  409e59:	48 8b 74 24 60 	movq	96(%rsp), %rsi
  409e5e:	48 8d 4e 01 	leaq	1(%rsi), %rcx
  409e62:	48 89 c2 	movq	%rax, %rdx
  409e65:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  409e6a:	48 8b 44 24 28 	movq	40(%rsp), %rax
  409e6f:	48 83 f9 04 	cmpq	$4, %rcx
  409e73:	0f 8d 96 00 00 00 	jge	150 <runtime.mallocinit+0x2cf>
  409e79:	48 89 4c 24 60 	movq	%rcx, 96(%rsp)
  409e7e:	48 8b 54 cc 68 	movq	104(%rsp,%rcx,8), %rdx
  409e83:	48 8b 1d 66 ba 09 00 	movq	637542(%rip), %rbx
  409e8a:	48 81 c3 ff ff 13 00 	addq	$1310719, %rbx
  409e91:	48 81 e3 00 00 f0 ff 	andq	$-1048576, %rbx
  409e98:	48 39 c3 	cmpq	%rax, %rbx
  409e9b:	77 66 	ja	102 <runtime.mallocinit+0x2c3>
  409e9d:	48 8d 34 1a 	leaq	(%rdx,%rbx), %rsi
  409ea1:	48 bf 00 20 00 20 04 00 00 00 	movabsq	$17716748288, %rdi
  409eab:	48 01 fe 	addq	%rdi, %rsi
  409eae:	48 39 f0 	cmpq	%rsi, %rax
  409eb1:	73 0e 	jae	14 <runtime.mallocinit+0x281>
  409eb3:	48 8d 98 ff ff 1f 00 	leaq	2097151(%rax), %rbx
  409eba:	48 81 e3 00 00 f0 ff 	andq	$-1048576, %rbx
  409ec1:	48 89 1c 24 	movq	%rbx, (%rsp)
  409ec5:	48 8d 04 17 	leaq	(%rdi,%rdx), %rax
  409ec9:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  409ece:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  409ed3:	48 8d 4c 24 27 	leaq	39(%rsp), %rcx
  409ed8:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  409edd:	e8 0e 55 00 00 	callq	21774 <runtime.sysReserve>
  409ee2:	48 8b 44 24 18 	movq	24(%rsp), %rax
  409ee7:	48 85 c0 	testq	%rax, %rax
  409eea:	0f 84 69 ff ff ff 	je	-151 <runtime.mallocinit+0x219>
  409ef0:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  409ef5:	48 85 c0 	testq	%rax, %rax
  409ef8:	0f 84 f7 00 00 00 	je	247 <runtime.mallocinit+0x3b5>
  409efe:	e9 4d fe ff ff 	jmp	-435 <runtime.mallocinit+0x110>
  409f03:	48 bf 00 20 00 20 04 00 00 00 	movabsq	$17716748288, %rdi
  409f0d:	eb b2 	jmp	-78 <runtime.mallocinit+0x281>
  409f0f:	48 89 d0 	movq	%rdx, %rax
  409f12:	48 89 d9 	movq	%rbx, %rcx
  409f15:	eb de 	jmp	-34 <runtime.mallocinit+0x2b5>
  409f17:	48 89 c8 	movq	%rcx, %rax
  409f1a:	e9 1e fe ff ff 	jmp	-482 <runtime.mallocinit+0xfd>
  409f1f:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  409f24:	48 89 5c 24 58 	movq	%rbx, 88(%rsp)
  409f29:	48 89 4c 24 50 	movq	%rcx, 80(%rsp)
  409f2e:	e8 cd 7b 01 00 	callq	97229 <runtime.printlock>
  409f33:	48 8d 05 07 08 06 00 	leaq	395271(%rip), %rax
  409f3a:	48 89 04 24 	movq	%rax, (%rsp)
  409f3e:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  409f47:	e8 f4 84 01 00 	callq	99572 <runtime.printstring>
  409f4c:	48 8b 44 24 40 	movq	64(%rsp), %rax
  409f51:	48 89 04 24 	movq	%rax, (%rsp)
  409f55:	e8 96 83 01 00 	callq	99222 <runtime.printhex>
  409f5a:	e8 e1 7d 01 00 	callq	97761 <runtime.printsp>
  409f5f:	48 8b 44 24 58 	movq	88(%rsp), %rax
  409f64:	48 89 04 24 	movq	%rax, (%rsp)
  409f68:	e8 83 83 01 00 	callq	99203 <runtime.printhex>
  409f6d:	e8 ce 7d 01 00 	callq	97742 <runtime.printsp>
  409f72:	48 c7 04 24 00 00 00 20 	movq	$536870912, (%rsp)
  409f7a:	e8 71 83 01 00 	callq	99185 <runtime.printhex>
  409f7f:	e8 bc 7d 01 00 	callq	97724 <runtime.printsp>
  409f84:	48 b8 00 00 00 00 04 00 00 00 	movabsq	$17179869184, %rax
  409f8e:	48 89 04 24 	movq	%rax, (%rsp)
  409f92:	e8 59 83 01 00 	callq	99161 <runtime.printhex>
  409f97:	e8 a4 7d 01 00 	callq	97700 <runtime.printsp>
  409f9c:	48 c7 04 24 00 20 00 00 	movq	$8192, (%rsp)
  409fa4:	e8 47 83 01 00 	callq	99143 <runtime.printhex>
  409fa9:	48 8d 05 db fe 05 00 	leaq	392923(%rip), %rax
  409fb0:	48 89 04 24 	movq	%rax, (%rsp)
  409fb4:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  409fbd:	e8 7e 84 01 00 	callq	99454 <runtime.printstring>
  409fc2:	48 8b 44 24 50 	movq	80(%rsp), %rax
  409fc7:	48 89 04 24 	movq	%rax, (%rsp)
  409fcb:	e8 20 83 01 00 	callq	99104 <runtime.printhex>
  409fd0:	e8 bb 7d 01 00 	callq	97723 <runtime.printnl>
  409fd5:	e8 a6 7b 01 00 	callq	97190 <runtime.printunlock>
  409fda:	48 8d 05 71 2d 06 00 	leaq	404849(%rip), %rax
  409fe1:	48 89 04 24 	movq	%rax, (%rsp)
  409fe5:	48 c7 44 24 08 23 00 00 00 	movq	$35, 8(%rsp)
  409fee:	e8 dd 71 01 00 	callq	94685 <runtime.throw>
  409ff3:	0f 0b 	ud2
  409ff5:	48 8d 05 8c 3a 06 00 	leaq	408204(%rip), %rax
  409ffc:	48 89 04 24 	movq	%rax, (%rsp)
  40a000:	48 c7 44 24 08 33 00 00 00 	movq	$51, 8(%rsp)
  40a009:	e8 c2 71 01 00 	callq	94658 <runtime.throw>
  40a00e:	0f 0b 	ud2
  40a010:	e8 eb 7a 01 00 	callq	97003 <runtime.printlock>
  40a015:	48 8d 05 ad 0d 06 00 	leaq	396717(%rip), %rax
  40a01c:	48 89 04 24 	movq	%rax, (%rsp)
  40a020:	48 c7 44 24 08 12 00 00 00 	movq	$18, 8(%rsp)
  40a029:	e8 12 84 01 00 	callq	99346 <runtime.printstring>
  40a02e:	48 8b 05 6b 99 0b 00 	movq	760171(%rip), %rax
  40a035:	48 89 04 24 	movq	%rax, (%rsp)
  40a039:	e8 32 81 01 00 	callq	98610 <runtime.printuint>
  40a03e:	48 8d 05 66 15 06 00 	leaq	398694(%rip), %rax
  40a045:	48 89 04 24 	movq	%rax, (%rsp)
  40a049:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  40a052:	e8 e9 83 01 00 	callq	99305 <runtime.printstring>
  40a057:	e8 24 7b 01 00 	callq	97060 <runtime.printunlock>
  40a05c:	48 8d 05 1a 10 06 00 	leaq	397338(%rip), %rax
  40a063:	48 89 04 24 	movq	%rax, (%rsp)
  40a067:	48 c7 44 24 08 14 00 00 00 	movq	$20, 8(%rsp)
  40a070:	e8 5b 71 01 00 	callq	94555 <runtime.throw>
  40a075:	0f 0b 	ud2
  40a077:	e8 84 7a 01 00 	callq	96900 <runtime.printlock>
  40a07c:	48 8d 05 46 0d 06 00 	leaq	396614(%rip), %rax
  40a083:	48 89 04 24 	movq	%rax, (%rsp)
  40a087:	48 c7 44 24 08 12 00 00 00 	movq	$18, 8(%rsp)
  40a090:	e8 ab 83 01 00 	callq	99243 <runtime.printstring>
  40a095:	48 8b 05 04 99 0b 00 	movq	760068(%rip), %rax
  40a09c:	48 89 04 24 	movq	%rax, (%rsp)
  40a0a0:	e8 cb 80 01 00 	callq	98507 <runtime.printuint>
  40a0a5:	48 8d 05 9a 2e 06 00 	leaq	405146(%rip), %rax
  40a0ac:	48 89 04 24 	movq	%rax, (%rsp)
  40a0b0:	48 c7 44 24 08 25 00 00 00 	movq	$37, 8(%rsp)
  40a0b9:	e8 82 83 01 00 	callq	99202 <runtime.printstring>
  40a0be:	48 c7 04 24 00 10 00 00 	movq	$4096, (%rsp)
  40a0c6:	e8 b5 81 01 00 	callq	98741 <runtime.printint>
  40a0cb:	48 8d 05 98 fb 05 00 	leaq	392088(%rip), %rax
  40a0d2:	48 89 04 24 	movq	%rax, (%rsp)
  40a0d6:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  40a0df:	e8 5c 83 01 00 	callq	99164 <runtime.printstring>
  40a0e4:	e8 97 7a 01 00 	callq	96919 <runtime.printunlock>
  40a0e9:	48 8d 05 8d 0f 06 00 	leaq	397197(%rip), %rax
  40a0f0:	48 89 04 24 	movq	%rax, (%rsp)
  40a0f4:	48 c7 44 24 08 14 00 00 00 	movq	$20, 8(%rsp)
  40a0fd:	e8 ce 70 01 00 	callq	94414 <runtime.throw>
  40a102:	0f 0b 	ud2
  40a104:	48 8d 05 f6 23 06 00 	leaq	402422(%rip), %rax
  40a10b:	48 89 04 24 	movq	%rax, (%rsp)
  40a10f:	48 c7 44 24 08 1e 00 00 00 	movq	$30, 8(%rsp)
  40a118:	e8 b3 70 01 00 	callq	94387 <runtime.throw>
  40a11d:	0f 0b 	ud2
  40a11f:	48 8d 05 f3 0a 06 00 	leaq	396019(%rip), %rax
  40a126:	48 89 04 24 	movq	%rax, (%rsp)
  40a12a:	48 c7 44 24 08 11 00 00 00 	movq	$17, 8(%rsp)
  40a133:	e8 98 70 01 00 	callq	94360 <runtime.throw>
  40a138:	0f 0b 	ud2
  40a13a:	e8 31 a4 03 00 	callq	238641 <runtime.morestack_noctxt>
  40a13f:	e9 fc fa ff ff 	jmp	-1284 <runtime.mallocinit>
  40a144:	cc 	int3
  40a145:	cc 	int3
  40a146:	cc 	int3
  40a147:	cc 	int3
  40a148:	cc 	int3
  40a149:	cc 	int3
  40a14a:	cc 	int3
  40a14b:	cc 	int3
  40a14c:	cc 	int3
  40a14d:	cc 	int3
  40a14e:	cc 	int3
  40a14f:	cc 	int3

runtime.(*mheap).sysAlloc:
  40a150:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40a159:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40a15d:	0f 86 43 02 00 00 	jbe	579 <runtime.(*mheap).sysAlloc+0x256>
  40a163:	48 83 ec 48 	subq	$72, %rsp
  40a167:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  40a16c:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  40a171:	48 8b 44 24 50 	movq	80(%rsp), %rax
  40a176:	84 00 	testb	%al, (%rax)
  40a178:	48 8b 88 40 13 00 00 	movq	4928(%rax), %rcx
  40a17f:	48 8b 90 38 13 00 00 	movq	4920(%rax), %rdx
  40a186:	48 89 cb 	movq	%rcx, %rbx
  40a189:	48 29 d1 	subq	%rdx, %rcx
  40a18c:	48 8b 54 24 58 	movq	88(%rsp), %rdx
  40a191:	48 39 ca 	cmpq	%rcx, %rdx
  40a194:	76 3b 	jbe	59 <runtime.(*mheap).sysAlloc+0x81>
  40a196:	48 8d 8a ff 1f 00 10 	leaq	268443647(%rdx), %rcx
  40a19d:	48 81 e1 00 00 00 f0 	andq	$-268435456, %rcx
  40a1a4:	48 8d 34 19 	leaq	(%rcx,%rbx), %rsi
  40a1a8:	48 39 f3 	cmpq	%rsi, %rbx
  40a1ab:	77 24 	ja	36 <runtime.(*mheap).sysAlloc+0x81>
  40a1ad:	48 8b 98 28 13 00 00 	movq	4904(%rax), %rbx
  40a1b4:	48 89 f7 	movq	%rsi, %rdi
  40a1b7:	48 29 de 	subq	%rbx, %rsi
  40a1ba:	48 8d 5e ff 	leaq	-1(%rsi), %rbx
  40a1be:	48 be ff ff ff ff 7f 00 00 00 	movabsq	$549755813887, %rsi
  40a1c8:	48 39 f3 	cmpq	%rsi, %rbx
  40a1cb:	0f 86 af 00 00 00 	jbe	175 <runtime.(*mheap).sysAlloc+0x130>
  40a1d1:	48 8b 88 40 13 00 00 	movq	4928(%rax), %rcx
  40a1d8:	48 8b 98 38 13 00 00 	movq	4920(%rax), %rbx
  40a1df:	48 29 d9 	subq	%rbx, %rcx
  40a1e2:	48 39 ca 	cmpq	%rcx, %rdx
  40a1e5:	76 13 	jbe	19 <runtime.(*mheap).sysAlloc+0xaa>
  40a1e7:	48 c7 44 24 60 00 00 00 00 	movq	$0, 96(%rsp)
  40a1f0:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  40a1f5:	48 83 c4 48 	addq	$72, %rsp
  40a1f9:	c3 	retq
  40a1fa:	48 89 5c 24 38 	movq	%rbx, 56(%rsp)
  40a1ff:	0f b6 88 48 13 00 00 	movzbl	4936(%rax), %ecx
  40a206:	88 4c 24 10 	movb	%cl, 16(%rsp)
  40a20a:	48 89 1c 24 	movq	%rbx, (%rsp)
  40a20e:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  40a213:	48 8d 1d 1e a5 0b 00 	leaq	763166(%rip), %rbx
  40a21a:	48 89 5c 24 18 	movq	%rbx, 24(%rsp)
  40a21f:	e8 1c 53 00 00 	callq	21276 <runtime.sysMap>
  40a224:	48 8b 44 24 50 	movq	80(%rsp), %rax
  40a229:	48 8b 88 38 13 00 00 	movq	4920(%rax), %rcx
  40a230:	48 8b 54 24 58 	movq	88(%rsp), %rdx
  40a235:	48 01 d1 	addq	%rdx, %rcx
  40a238:	48 89 88 38 13 00 00 	movq	%rcx, 4920(%rax)
  40a23f:	48 8b 90 30 13 00 00 	movq	4912(%rax), %rdx
  40a246:	48 39 d1 	cmpq	%rdx, %rcx
  40a249:	77 20 	ja	32 <runtime.(*mheap).sysAlloc+0x11b>
  40a24b:	48 8b 44 24 38 	movq	56(%rsp), %rax
  40a250:	48 a9 ff 1f 00 00 	testq	$8191, %rax
  40a256:	0f 85 2f 01 00 00 	jne	303 <runtime.(*mheap).sysAlloc+0x23b>
  40a25c:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  40a261:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  40a266:	48 83 c4 48 	addq	$72, %rsp
  40a26a:	c3 	retq
  40a26b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40a270:	48 89 04 24 	movq	%rax, (%rsp)
  40a274:	c6 44 24 10 01 	movb	$1, 16(%rsp)
  40a279:	e8 f2 01 01 00 	callq	66034 <runtime.(*mheap).setArenaUsed>
  40a27e:	eb cb 	jmp	-53 <runtime.(*mheap).sysAlloc+0xfb>
  40a280:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  40a285:	48 89 7c 24 38 	movq	%rdi, 56(%rsp)
  40a28a:	c6 44 24 27 00 	movb	$0, 39(%rsp)
  40a28f:	48 8b 90 40 13 00 00 	movq	4928(%rax), %rdx
  40a296:	48 89 14 24 	movq	%rdx, (%rsp)
  40a29a:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40a29f:	48 8d 54 24 27 	leaq	39(%rsp), %rdx
  40a2a4:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  40a2a9:	e8 42 51 00 00 	callq	20802 <runtime.sysReserve>
  40a2ae:	48 8b 44 24 18 	movq	24(%rsp), %rax
  40a2b3:	48 85 c0 	testq	%rax, %rax
  40a2b6:	0f 84 2b ff ff ff 	je	-213 <runtime.(*mheap).sysAlloc+0x97>
  40a2bc:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  40a2c1:	48 8b 91 40 13 00 00 	movq	4928(%rcx), %rdx
  40a2c8:	48 39 d0 	cmpq	%rdx, %rax
  40a2cb:	75 24 	jne	36 <runtime.(*mheap).sysAlloc+0x1a1>
  40a2cd:	48 8b 44 24 38 	movq	56(%rsp), %rax
  40a2d2:	48 89 81 40 13 00 00 	movq	%rax, 4928(%rcx)
  40a2d9:	0f b6 44 24 27 	movzbl	39(%rsp), %eax
  40a2de:	88 81 48 13 00 00 	movb	%al, 4936(%rcx)
  40a2e4:	48 89 c8 	movq	%rcx, %rax
  40a2e7:	48 8b 54 24 58 	movq	88(%rsp), %rdx
  40a2ec:	e9 e0 fe ff ff 	jmp	-288 <runtime.(*mheap).sysAlloc+0x81>
  40a2f1:	48 8b 99 28 13 00 00 	movq	4904(%rcx), %rbx
  40a2f8:	48 39 c3 	cmpq	%rax, %rbx
  40a2fb:	0f 87 83 00 00 00 	ja	131 <runtime.(*mheap).sysAlloc+0x234>
  40a301:	48 8b 74 24 30 	movq	48(%rsp), %rsi
  40a306:	48 8d 3c 30 	leaq	(%rax,%rsi), %rdi
  40a30a:	49 89 f8 	movq	%rdi, %r8
  40a30d:	48 29 df 	subq	%rbx, %rdi
  40a310:	48 8d 5f ff 	leaq	-1(%rdi), %rbx
  40a314:	48 bf ff ff ff ff 7f 00 00 00 	movabsq	$549755813887, %rdi
  40a31e:	48 39 fb 	cmpq	%rdi, %rbx
  40a321:	77 3a 	ja	58 <runtime.(*mheap).sysAlloc+0x20d>
  40a323:	48 8b 99 38 13 00 00 	movq	4920(%rcx), %rbx
  40a32a:	48 29 da 	subq	%rbx, %rdx
  40a32d:	48 81 fa 00 00 00 01 	cmpq	$16777216, %rdx
  40a334:	73 27 	jae	39 <runtime.(*mheap).sysAlloc+0x20d>
  40a336:	4c 89 81 40 13 00 00 	movq	%r8, 4928(%rcx)
  40a33d:	48 05 ff 1f 00 00 	addq	$8191, %rax
  40a343:	48 25 00 e0 ff ff 	andq	$-8192, %rax
  40a349:	48 89 81 38 13 00 00 	movq	%rax, 4920(%rcx)
  40a350:	0f b6 44 24 27 	movzbl	39(%rsp), %eax
  40a355:	88 81 48 13 00 00 	movb	%al, 4936(%rcx)
  40a35b:	eb 87 	jmp	-121 <runtime.(*mheap).sysAlloc+0x194>
  40a35d:	48 89 74 24 28 	movq	%rsi, 40(%rsp)
  40a362:	48 89 04 24 	movq	%rax, (%rsp)
  40a366:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  40a36b:	48 8d 44 24 28 	leaq	40(%rsp), %rax
  40a370:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40a375:	e8 c6 4f 00 00 	callq	20422 <runtime.sysFree>
  40a37a:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  40a37f:	e9 60 ff ff ff 	jmp	-160 <runtime.(*mheap).sysAlloc+0x194>
  40a384:	48 8b 74 24 30 	movq	48(%rsp), %rsi
  40a389:	eb d2 	jmp	-46 <runtime.(*mheap).sysAlloc+0x20d>
  40a38b:	48 8d 05 e9 2d 06 00 	leaq	404969(%rip), %rax
  40a392:	48 89 04 24 	movq	%rax, (%rsp)
  40a396:	48 c7 44 24 08 27 00 00 00 	movq	$39, 8(%rsp)
  40a39f:	e8 2c 6e 01 00 	callq	93740 <runtime.throw>
  40a3a4:	0f 0b 	ud2
  40a3a6:	e8 c5 a1 03 00 	callq	238021 <runtime.morestack_noctxt>
  40a3ab:	e9 a0 fd ff ff 	jmp	-608 <runtime.(*mheap).sysAlloc>

runtime.(*mcache).nextFree:
  40a3b0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40a3b9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40a3bd:	0f 86 3c 02 00 00 	jbe	572 <runtime.(*mcache).nextFree+0x24f>
  40a3c3:	48 83 ec 50 	subq	$80, %rsp
  40a3c7:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  40a3cc:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  40a3d1:	48 8b 44 24 58 	movq	88(%rsp), %rax
  40a3d6:	84 00 	testb	%al, (%rax)
  40a3d8:	0f b6 4c 24 60 	movzbl	96(%rsp), %ecx
  40a3dd:	0f b6 d1 	movzbl	%cl, %edx
  40a3e0:	48 81 fa 86 00 00 00 	cmpq	$134, %rdx
  40a3e7:	0f 83 0b 02 00 00 	jae	523 <runtime.(*mcache).nextFree+0x248>
  40a3ed:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  40a3f2:	48 8b 4c d0 28 	movq	40(%rax,%rdx,8), %rcx
  40a3f7:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  40a3fc:	48 89 0c 24 	movq	%rcx, (%rsp)
  40a400:	e8 cb 1a 00 00 	callq	6859 <runtime.(*mspan).nextFreeIndex>
  40a405:	48 8b 44 24 08 	movq	8(%rsp), %rax
  40a40a:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  40a40f:	48 8b 51 38 	movq	56(%rcx), %rdx
  40a413:	48 39 d0 	cmpq	%rdx, %rax
  40a416:	0f 85 b3 00 00 00 	jne	179 <runtime.(*mcache).nextFree+0x11f>
  40a41c:	0f b7 41 60 	movzwl	96(%rcx), %eax
  40a420:	0f b7 c8 	movzwl	%ax, %ecx
  40a423:	48 39 d1 	cmpq	%rdx, %rcx
  40a426:	0f 85 47 01 00 00 	jne	327 <runtime.(*mcache).nextFree+0x1c3>
  40a42c:	48 8d 05 ad 77 03 00 	leaq	227245(%rip), %rax
  40a433:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  40a438:	48 8b 44 24 58 	movq	88(%rsp), %rax
  40a43d:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  40a442:	0f b6 4c 24 60 	movzbl	96(%rsp), %ecx
  40a447:	88 4c 24 40 	movb	%cl, 64(%rsp)
  40a44b:	48 8d 4c 24 30 	leaq	48(%rsp), %rcx
  40a450:	48 89 0c 24 	movq	%rcx, (%rsp)
  40a454:	e8 c7 9f 03 00 	callq	237511 <runtime.systemstack>
  40a459:	48 8b 44 24 20 	movq	32(%rsp), %rax
  40a45e:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  40a463:	48 8b 44 c1 28 	movq	40(%rcx,%rax,8), %rax
  40a468:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  40a46d:	48 89 04 24 	movq	%rax, (%rsp)
  40a471:	e8 5a 1a 00 00 	callq	6746 <runtime.(*mspan).nextFreeIndex>
  40a476:	48 8b 44 24 08 	movq	8(%rsp), %rax
  40a47b:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  40a480:	ba 01 00 00 00 	movl	$1, %edx
  40a485:	48 8b 59 38 	movq	56(%rcx), %rbx
  40a489:	48 39 d8 	cmpq	%rbx, %rax
  40a48c:	0f 83 c6 00 00 00 	jae	198 <runtime.(*mcache).nextFree+0x1a8>
  40a492:	48 8b 59 68 	movq	104(%rcx), %rbx
  40a496:	48 0f af c3 	imulq	%rbx, %rax
  40a49a:	48 8d 59 18 	leaq	24(%rcx), %rbx
  40a49e:	48 03 03 	addq	(%rbx), %rax
  40a4a1:	0f b7 59 60 	movzwl	96(%rcx), %ebx
  40a4a5:	ff c3 	incl	%ebx
  40a4a7:	66 89 59 60 	movw	%bx, 96(%rcx)
  40a4ab:	0f b7 f3 	movzwl	%bx, %esi
  40a4ae:	48 8b 79 38 	movq	56(%rcx), %rdi
  40a4b2:	48 39 fe 	cmpq	%rdi, %rsi
  40a4b5:	77 1c 	ja	28 <runtime.(*mcache).nextFree+0x123>
  40a4b7:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  40a4bc:	48 89 4c 24 70 	movq	%rcx, 112(%rsp)
  40a4c1:	88 54 24 78 	movb	%dl, 120(%rsp)
  40a4c5:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  40a4ca:	48 83 c4 50 	addq	$80, %rsp
  40a4ce:	c3 	retq
  40a4cf:	31 d2 	xorl	%edx, %edx
  40a4d1:	eb b2 	jmp	-78 <runtime.(*mcache).nextFree+0xd5>
  40a4d3:	66 89 5c 24 16 	movw	%bx, 22(%rsp)
  40a4d8:	48 89 7c 24 18 	movq	%rdi, 24(%rsp)
  40a4dd:	e8 1e 76 01 00 	callq	95774 <runtime.printlock>
  40a4e2:	48 8d 05 e3 03 06 00 	leaq	394211(%rip), %rax
  40a4e9:	48 89 04 24 	movq	%rax, (%rsp)
  40a4ed:	48 c7 44 24 08 0e 00 00 00 	movq	$14, 8(%rsp)
  40a4f6:	e8 45 7f 01 00 	callq	98117 <runtime.printstring>
  40a4fb:	0f b7 44 24 16 	movzwl	22(%rsp), %eax
  40a500:	0f b7 c0 	movzwl	%ax, %eax
  40a503:	48 89 04 24 	movq	%rax, (%rsp)
  40a507:	e8 64 7c 01 00 	callq	97380 <runtime.printuint>
  40a50c:	48 8d 05 09 ff 05 00 	leaq	392969(%rip), %rax
  40a513:	48 89 04 24 	movq	%rax, (%rsp)
  40a517:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  40a520:	e8 1b 7f 01 00 	callq	98075 <runtime.printstring>
  40a525:	48 8b 44 24 18 	movq	24(%rsp), %rax
  40a52a:	48 89 04 24 	movq	%rax, (%rsp)
  40a52e:	e8 3d 7c 01 00 	callq	97341 <runtime.printuint>
  40a533:	e8 58 78 01 00 	callq	96344 <runtime.printnl>
  40a538:	e8 43 76 01 00 	callq	95811 <runtime.printunlock>
  40a53d:	48 8d 05 61 12 06 00 	leaq	397921(%rip), %rax
  40a544:	48 89 04 24 	movq	%rax, (%rsp)
  40a548:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  40a551:	e8 7a 6c 01 00 	callq	93306 <runtime.throw>
  40a556:	0f 0b 	ud2
  40a558:	48 8d 05 a9 0e 06 00 	leaq	396969(%rip), %rax
  40a55f:	48 89 04 24 	movq	%rax, (%rsp)
  40a563:	48 c7 44 24 08 16 00 00 00 	movq	$22, 8(%rsp)
  40a56c:	e8 5f 6c 01 00 	callq	93279 <runtime.throw>
  40a571:	0f 0b 	ud2
  40a573:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  40a578:	66 89 44 24 16 	movw	%ax, 22(%rsp)
  40a57d:	e8 7e 75 01 00 	callq	95614 <runtime.printlock>
  40a582:	48 8d 05 05 12 06 00 	leaq	397829(%rip), %rax
  40a589:	48 89 04 24 	movq	%rax, (%rsp)
  40a58d:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  40a596:	e8 a5 7e 01 00 	callq	97957 <runtime.printstring>
  40a59b:	0f b7 44 24 16 	movzwl	22(%rsp), %eax
  40a5a0:	0f b7 c0 	movzwl	%ax, %eax
  40a5a3:	48 89 04 24 	movq	%rax, (%rsp)
  40a5a7:	e8 c4 7b 01 00 	callq	97220 <runtime.printuint>
  40a5ac:	48 8d 05 69 fe 05 00 	leaq	392809(%rip), %rax
  40a5b3:	48 89 04 24 	movq	%rax, (%rsp)
  40a5b7:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  40a5c0:	e8 7b 7e 01 00 	callq	97915 <runtime.printstring>
  40a5c5:	48 8b 44 24 18 	movq	24(%rsp), %rax
  40a5ca:	48 89 04 24 	movq	%rax, (%rsp)
  40a5ce:	e8 9d 7b 01 00 	callq	97181 <runtime.printuint>
  40a5d3:	e8 b8 77 01 00 	callq	96184 <runtime.printnl>
  40a5d8:	e8 a3 75 01 00 	callq	95651 <runtime.printunlock>
  40a5dd:	48 8d 05 ac 33 06 00 	leaq	406444(%rip), %rax
  40a5e4:	48 89 04 24 	movq	%rax, (%rsp)
  40a5e8:	48 c7 44 24 08 31 00 00 00 	movq	$49, 8(%rsp)
  40a5f1:	e8 da 6b 01 00 	callq	93146 <runtime.throw>
  40a5f6:	0f 0b 	ud2
  40a5f8:	e8 43 54 01 00 	callq	87107 <runtime.panicindex>
  40a5fd:	0f 0b 	ud2
  40a5ff:	e8 6c 9f 03 00 	callq	237420 <runtime.morestack_noctxt>
  40a604:	e9 a7 fd ff ff 	jmp	-601 <runtime.(*mcache).nextFree>
  40a609:	cc 	int3
  40a60a:	cc 	int3
  40a60b:	cc 	int3
  40a60c:	cc 	int3
  40a60d:	cc 	int3
  40a60e:	cc 	int3
  40a60f:	cc 	int3

runtime.mallocgc:
  40a610:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40a619:	48 8d 44 24 e8 	leaq	-24(%rsp), %rax
  40a61e:	48 3b 41 10 	cmpq	16(%rcx), %rax
  40a622:	0f 86 a2 09 00 00 	jbe	2466 <runtime.mallocgc+0x9ba>
  40a628:	48 81 ec 98 00 00 00 	subq	$152, %rsp
  40a62f:	48 89 ac 24 90 00 00 00 	movq	%rbp, 144(%rsp)
  40a637:	48 8d ac 24 90 00 00 00 	leaq	144(%rsp), %rbp
  40a63f:	48 c7 c0 00 00 00 00 	movq	$0, %rax
  40a646:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  40a64b:	8b 05 8b 92 0b 00 	movl	758411(%rip), %eax
  40a651:	83 f8 02 	cmpl	$2, %eax
  40a654:	0f 84 55 09 00 00 	je	2389 <runtime.mallocgc+0x99f>
  40a65a:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  40a662:	48 85 c0 	testq	%rax, %rax
  40a665:	0f 84 d3 08 00 00 	je	2259 <runtime.mallocgc+0x92e>
  40a66b:	8b 15 77 94 0b 00 	movl	758903(%rip), %edx
  40a671:	85 d2 	testl	%edx, %edx
  40a673:	74 4f 	je	79 <runtime.mallocgc+0xb4>
  40a675:	48 8b 8c 24 a8 00 00 00 	movq	168(%rsp), %rcx
  40a67d:	48 85 c9 	testq	%rcx, %rcx
  40a680:	74 3b 	je	59 <runtime.mallocgc+0xad>
  40a682:	0f b6 49 15 	movzbl	21(%rcx), %ecx
  40a686:	48 89 04 24 	movq	%rax, (%rsp)
  40a68a:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40a68f:	48 8d 05 0a a1 0b 00 	leaq	762122(%rip), %rax
  40a696:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40a69b:	e8 00 0e 00 00 	callq	3584 <runtime.persistentalloc>
  40a6a0:	48 8b 44 24 18 	movq	24(%rsp), %rax
  40a6a5:	48 89 84 24 b8 00 00 00 	movq	%rax, 184(%rsp)
  40a6ad:	48 8b ac 24 90 00 00 00 	movq	144(%rsp), %rbp
  40a6b5:	48 81 c4 98 00 00 00 	addq	$152, %rsp
  40a6bc:	c3 	retq
  40a6bd:	b9 10 00 00 00 	movl	$16, %ecx
  40a6c2:	eb c2 	jmp	-62 <runtime.mallocgc+0x76>
  40a6c4:	8b 15 0a 92 0b 00 	movl	758282(%rip), %edx
  40a6ca:	85 d2 	testl	%edx, %edx
  40a6cc:	0f 84 65 08 00 00 	je	2149 <runtime.mallocgc+0x927>
  40a6d2:	64 48 8b 14 25 f8 ff ff ff 	movq	%fs:-8, %rdx
  40a6db:	48 8b 5a 30 	movq	48(%rdx), %rbx
  40a6df:	48 8b 9b c0 00 00 00 	movq	192(%rbx), %rbx
  40a6e6:	48 85 db 	testq	%rbx, %rbx
  40a6e9:	0f 84 40 08 00 00 	je	2112 <runtime.mallocgc+0x91f>
  40a6ef:	48 8b 93 70 01 00 00 	movq	368(%rbx), %rdx
  40a6f6:	48 29 c2 	subq	%rax, %rdx
  40a6f9:	48 89 93 70 01 00 00 	movq	%rdx, 368(%rbx)
  40a700:	48 85 d2 	testq	%rdx, %rdx
  40a703:	0f 8c 0e 08 00 00 	jl	2062 <runtime.mallocgc+0x907>
  40a709:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  40a712:	48 8b 50 30 	movq	48(%rax), %rdx
  40a716:	ff 82 00 01 00 00 	incl	256(%rdx)
  40a71c:	48 8b 50 30 	movq	48(%rax), %rdx
  40a720:	84 00 	testb	%al, (%rax)
  40a722:	8b 82 e8 00 00 00 	movl	232(%rdx), %eax
  40a728:	85 c0 	testl	%eax, %eax
  40a72a:	0f 85 64 08 00 00 	jne	2148 <runtime.mallocgc+0x984>
  40a730:	48 8b 42 50 	movq	80(%rdx), %rax
  40a734:	64 48 8b 34 25 f8 ff ff ff 	movq	%fs:-8, %rsi
  40a73d:	48 39 f0 	cmpq	%rsi, %rax
  40a740:	0f 84 33 08 00 00 	je	2099 <runtime.mallocgc+0x969>
  40a746:	c7 82 e8 00 00 00 01 00 00 00 	movl	$1, 232(%rdx)
  40a750:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  40a759:	48 8b 40 30 	movq	48(%rax), %rax
  40a75d:	48 8b b4 24 a0 00 00 00 	movq	160(%rsp), %rsi
  40a765:	48 8b 80 60 01 00 00 	movq	352(%rax), %rax
  40a76c:	48 8b bc 24 a8 00 00 00 	movq	168(%rsp), %rdi
  40a774:	48 85 ff 	testq	%rdi, %rdi
  40a777:	0f 84 8f 07 00 00 	je	1935 <runtime.mallocgc+0x8fc>
  40a77d:	44 0f b6 47 17 	movzbl	23(%rdi), %r8d
  40a782:	41 f6 c0 80 	testb	$-128, %r8b
  40a786:	41 0f 95 c0 	setne	%r8b
  40a78a:	48 89 54 24 50 	movq	%rdx, 80(%rsp)
  40a78f:	48 89 74 24 38 	movq	%rsi, 56(%rsp)
  40a794:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  40a799:	44 88 44 24 2f 	movb	%r8b, 47(%rsp)
  40a79e:	48 89 5c 24 68 	movq	%rbx, 104(%rsp)
  40a7a3:	48 81 fe 00 80 00 00 	cmpq	$32768, %rsi
  40a7aa:	0f 87 9e 06 00 00 	ja	1694 <runtime.mallocgc+0x83e>
  40a7b0:	45 84 c0 	testb	%r8b, %r8b
  40a7b3:	0f 84 b0 04 00 00 	je	1200 <runtime.mallocgc+0x659>
  40a7b9:	48 83 fe 10 	cmpq	$16, %rsi
  40a7bd:	0f 83 a6 04 00 00 	jae	1190 <runtime.mallocgc+0x659>
  40a7c3:	4c 8b 48 18 	movq	24(%rax), %r9
  40a7c7:	48 f7 c6 07 00 00 00 	testq	$7, %rsi
  40a7ce:	0f 85 69 04 00 00 	jne	1129 <runtime.mallocgc+0x62d>
  40a7d4:	49 83 c1 07 	addq	$7, %r9
  40a7d8:	49 83 e1 f8 	andq	$-8, %r9
  40a7dc:	4d 8d 14 31 	leaq	(%r9,%rsi), %r10
  40a7e0:	49 83 fa 10 	cmpq	$16, %r10
  40a7e4:	77 67 	ja	103 <runtime.mallocgc+0x23d>
  40a7e6:	4c 8b 58 10 	movq	16(%rax), %r11
  40a7ea:	4d 85 db 	testq	%r11, %r11
  40a7ed:	74 5e 	je	94 <runtime.mallocgc+0x23d>
  40a7ef:	4b 8d 0c 19 	leaq	(%r9,%r11), %rcx
  40a7f3:	4c 89 50 18 	movq	%r10, 24(%rax)
  40a7f7:	48 ff 40 20 	incq	32(%rax)
  40a7fb:	c7 82 e8 00 00 00 00 00 00 00 	movl	$0, 232(%rdx)
  40a805:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  40a80e:	8b 9a 00 01 00 00 	movl	256(%rdx), %ebx
  40a814:	8d 73 ff 	leal	-1(%rbx), %esi
  40a817:	89 b2 00 01 00 00 	movl	%esi, 256(%rdx)
  40a81d:	83 fb 01 	cmpl	$1, %ebx
  40a820:	75 13 	jne	19 <runtime.mallocgc+0x225>
  40a822:	0f b6 90 c0 00 00 00 	movzbl	192(%rax), %edx
  40a829:	84 d2 	testb	%dl, %dl
  40a82b:	74 08 	je	8 <runtime.mallocgc+0x225>
  40a82d:	48 c7 40 10 de fa ff ff 	movq	$-1314, 16(%rax)
  40a835:	48 89 8c 24 b8 00 00 00 	movq	%rcx, 184(%rsp)
  40a83d:	48 8b ac 24 90 00 00 00 	movq	144(%rsp), %rbp
  40a845:	48 81 c4 98 00 00 00 	addq	$152, %rsp
  40a84c:	c3 	retq
  40a84d:	4c 8b 48 50 	movq	80(%rax), %r9
  40a851:	4d 8b 51 40 	movq	64(%r9), %r10
  40a855:	4d 0f bc da 	bsfq	%r10, %r11
  40a859:	41 bc 40 00 00 00 	movl	$64, %r12d
  40a85f:	4d 0f 44 dc 	cmoveq	%r12, %r11
  40a863:	49 83 fb 40 	cmpq	$64, %r11
  40a867:	0f 8d c9 03 00 00 	jge	969 <runtime.mallocgc+0x626>
  40a86d:	4d 8b 61 30 	movq	48(%r9), %r12
  40a871:	4f 8d 2c 1c 	leaq	(%r12,%r11), %r13
  40a875:	4d 8b 71 38 	movq	56(%r9), %r14
  40a879:	4d 39 f5 	cmpq	%r14, %r13
  40a87c:	0f 83 b4 03 00 00 	jae	948 <runtime.mallocgc+0x626>
  40a882:	4f 8d 64 1c 01 	leaq	1(%r12,%r11), %r12
  40a887:	49 f7 c4 3f 00 00 00 	testq	$63, %r12
  40a88e:	0f 85 6b 03 00 00 	jne	875 <runtime.mallocgc+0x5ef>
  40a894:	4d 39 f4 	cmpq	%r14, %r12
  40a897:	0f 84 62 03 00 00 	je	866 <runtime.mallocgc+0x5ef>
  40a89d:	31 c9 	xorl	%ecx, %ecx
  40a89f:	48 85 c9 	testq	%rcx, %rcx
  40a8a2:	0f 84 17 03 00 00 	je	791 <runtime.mallocgc+0x5af>
  40a8a8:	45 31 c9 	xorl	%r9d, %r9d
  40a8ab:	0f 57 c0 	xorps	%xmm0, %xmm0
  40a8ae:	0f 11 01 	movups	%xmm0, (%rcx)
  40a8b1:	4c 8b 94 24 a0 00 00 00 	movq	160(%rsp), %r10
  40a8b9:	4c 8b 58 18 	movq	24(%rax), %r11
  40a8bd:	4d 39 da 	cmpq	%r11, %r10
  40a8c0:	0f 83 e4 02 00 00 	jae	740 <runtime.mallocgc+0x59a>
  40a8c6:	49 89 ca 	movq	%rcx, %r10
  40a8c9:	48 89 48 10 	movq	%rcx, 16(%rax)
  40a8cd:	48 8b 8c 24 a0 00 00 00 	movq	160(%rsp), %rcx
  40a8d5:	48 89 48 18 	movq	%rcx, 24(%rax)
  40a8d9:	48 c7 84 24 a0 00 00 00 10 00 00 00 	movq	$16, 160(%rsp)
  40a8e5:	4c 89 54 24 40 	movq	%r10, 64(%rsp)
  40a8ea:	44 88 4c 24 2e 	movb	%r9b, 46(%rsp)
  40a8ef:	45 84 c0 	testb	%r8b, %r8b
  40a8f2:	0f 84 2a 02 00 00 	je	554 <runtime.mallocgc+0x512>
  40a8f8:	31 c9 	xorl	%ecx, %ecx
  40a8fa:	48 89 74 24 38 	movq	%rsi, 56(%rsp)
  40a8ff:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  40a904:	e8 77 b2 03 00 	callq	242295 <runtime.publicationBarrier>
  40a909:	8b 05 cd 8f 0b 00 	movl	757709(%rip), %eax
  40a90f:	85 c0 	testl	%eax, %eax
  40a911:	0f 85 e1 01 00 00 	jne	481 <runtime.mallocgc+0x4e8>
  40a917:	48 8b 44 24 50 	movq	80(%rsp), %rax
  40a91c:	c7 80 e8 00 00 00 00 00 00 00 	movl	$0, 232(%rax)
  40a926:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40a92f:	8b 90 00 01 00 00 	movl	256(%rax), %edx
  40a935:	8d 5a ff 	leal	-1(%rdx), %ebx
  40a938:	89 98 00 01 00 00 	movl	%ebx, 256(%rax)
  40a93e:	83 fa 01 	cmpl	$1, %edx
  40a941:	75 13 	jne	19 <runtime.mallocgc+0x346>
  40a943:	0f b6 81 c0 00 00 00 	movzbl	192(%rcx), %eax
  40a94a:	84 c0 	testb	%al, %al
  40a94c:	74 08 	je	8 <runtime.mallocgc+0x346>
  40a94e:	48 c7 41 10 de fa ff ff 	movq	$-1314, 16(%rcx)
  40a956:	8b 05 64 91 0b 00 	movl	758116(%rip), %eax
  40a95c:	85 c0 	testl	%eax, %eax
  40a95e:	0f 85 67 01 00 00 	jne	359 <runtime.mallocgc+0x4bb>
  40a964:	48 8b 05 ad a6 09 00 	movq	632493(%rip), %rax
  40a96b:	48 85 c0 	testq	%rax, %rax
  40a96e:	7e 24 	jle	36 <runtime.mallocgc+0x384>
  40a970:	48 8b 8c 24 a0 00 00 00 	movq	160(%rsp), %rcx
  40a978:	48 39 c1 	cmpq	%rax, %rcx
  40a97b:	0f 83 cc 00 00 00 	jae	204 <runtime.mallocgc+0x43d>
  40a981:	48 8b 44 24 60 	movq	96(%rsp), %rax
  40a986:	8b 10 	movl	(%rax), %edx
  40a988:	39 d1 	cmpl	%edx, %ecx
  40a98a:	0f 8d bd 00 00 00 	jge	189 <runtime.mallocgc+0x43d>
  40a990:	29 ca 	subl	%ecx, %edx
  40a992:	89 10 	movl	%edx, (%rax)
  40a994:	48 8b 44 24 68 	movq	104(%rsp), %rax
  40a999:	48 85 c0 	testq	%rax, %rax
  40a99c:	74 21 	je	33 <runtime.mallocgc+0x3af>
  40a99e:	48 8b 88 70 01 00 00 	movq	368(%rax), %rcx
  40a9a5:	48 8b 94 24 a0 00 00 00 	movq	160(%rsp), %rdx
  40a9ad:	48 8b 5c 24 38 	movq	56(%rsp), %rbx
  40a9b2:	48 29 da 	subq	%rbx, %rdx
  40a9b5:	48 29 d1 	subq	%rdx, %rcx
  40a9b8:	48 89 88 70 01 00 00 	movq	%rcx, 368(%rax)
  40a9bf:	0f b6 44 24 2e 	movzbl	46(%rsp), %eax
  40a9c4:	84 c0 	testb	%al, %al
  40a9c6:	74 1b 	je	27 <runtime.mallocgc+0x3d3>
  40a9c8:	0f b6 05 01 ae 0b 00 	movzbl	765441(%rip), %eax
  40a9cf:	84 c0 	testb	%al, %al
  40a9d1:	74 0a 	je	10 <runtime.mallocgc+0x3cd>
  40a9d3:	8b 05 1b 8f 0b 00 	movl	757531(%rip), %eax
  40a9d9:	85 c0 	testl	%eax, %eax
  40a9db:	74 4c 	je	76 <runtime.mallocgc+0x419>
  40a9dd:	31 c0 	xorl	%eax, %eax
  40a9df:	84 c0 	testb	%al, %al
  40a9e1:	75 1d 	jne	29 <runtime.mallocgc+0x3f0>
  40a9e3:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40a9e8:	48 89 84 24 b8 00 00 00 	movq	%rax, 184(%rsp)
  40a9f0:	48 8b ac 24 90 00 00 00 	movq	144(%rsp), %rbp
  40a9f8:	48 81 c4 98 00 00 00 	addq	$152, %rsp
  40a9ff:	c3 	retq
  40aa00:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  40aa08:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  40aa11:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  40aa1a:	c7 44 24 18 00 00 00 00 	movl	$0, 24(%rsp)
  40aa22:	e8 59 67 00 00 	callq	26457 <runtime.gcStart>
  40aa27:	eb ba 	jmp	-70 <runtime.mallocgc+0x3d3>
  40aa29:	8b 05 ad 8e 0b 00 	movl	757421(%rip), %eax
  40aa2f:	85 c0 	testl	%eax, %eax
  40aa31:	74 04 	je	4 <runtime.mallocgc+0x427>
  40aa33:	31 c0 	xorl	%eax, %eax
  40aa35:	eb a8 	jmp	-88 <runtime.mallocgc+0x3cf>
  40aa37:	48 8b 0d 02 b4 0b 00 	movq	766978(%rip), %rcx
  40aa3e:	48 8b 15 f3 b3 0b 00 	movq	766963(%rip), %rdx
  40aa45:	48 39 d1 	cmpq	%rdx, %rcx
  40aa48:	0f 93 c0 	setae	%al
  40aa4b:	eb 92 	jmp	-110 <runtime.mallocgc+0x3cf>
  40aa4d:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  40aa56:	48 8b 48 30 	movq	48(%rax), %rcx
  40aa5a:	ff 81 00 01 00 00 	incl	256(%rcx)
  40aa60:	48 8b 40 30 	movq	48(%rax), %rax
  40aa64:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  40aa69:	48 89 04 24 	movq	%rax, (%rsp)
  40aa6d:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  40aa72:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40aa77:	48 8b 94 24 a0 00 00 00 	movq	160(%rsp), %rdx
  40aa7f:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  40aa84:	e8 e7 07 00 00 	callq	2023 <runtime.profilealloc>
  40aa89:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  40aa92:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  40aa97:	8b 91 00 01 00 00 	movl	256(%rcx), %edx
  40aa9d:	8d 5a ff 	leal	-1(%rdx), %ebx
  40aaa0:	89 99 00 01 00 00 	movl	%ebx, 256(%rcx)
  40aaa6:	83 fa 01 	cmpl	$1, %edx
  40aaa9:	0f 85 e5 fe ff ff 	jne	-283 <runtime.mallocgc+0x384>
  40aaaf:	0f b6 88 c0 00 00 00 	movzbl	192(%rax), %ecx
  40aab6:	84 c9 	testb	%cl, %cl
  40aab8:	0f 84 d6 fe ff ff 	je	-298 <runtime.mallocgc+0x384>
  40aabe:	48 c7 40 10 de fa ff ff 	movq	$-1314, 16(%rax)
  40aac6:	e9 c9 fe ff ff 	jmp	-311 <runtime.mallocgc+0x384>
  40aacb:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40aad0:	48 89 04 24 	movq	%rax, (%rsp)
  40aad4:	48 8b 8c 24 a0 00 00 00 	movq	160(%rsp), %rcx
  40aadc:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40aae1:	48 8b 8c 24 a8 00 00 00 	movq	168(%rsp), %rcx
  40aae9:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  40aaee:	e8 9d 30 01 00 	callq	77981 <runtime.tracealloc>
  40aaf3:	e9 6c fe ff ff 	jmp	-404 <runtime.mallocgc+0x354>
  40aaf8:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40aafd:	48 89 04 24 	movq	%rax, (%rsp)
  40ab01:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  40ab09:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40ab0e:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40ab13:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40ab18:	e8 23 ca 00 00 	callq	51747 <runtime.gcmarknewobject>
  40ab1d:	e9 f5 fd ff ff 	jmp	-523 <runtime.mallocgc+0x307>
  40ab22:	48 8b 0d 1f cb 09 00 	movq	641823(%rip), %rcx
  40ab29:	48 39 f9 	cmpq	%rdi, %rcx
  40ab2c:	75 77 	jne	119 <runtime.mallocgc+0x595>
  40ab2e:	b9 30 00 00 00 	movl	$48, %ecx
  40ab33:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  40ab38:	4c 89 14 24 	movq	%r10, (%rsp)
  40ab3c:	48 8b 94 24 a0 00 00 00 	movq	160(%rsp), %rdx
  40ab44:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  40ab49:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  40ab4e:	48 89 7c 24 18 	movq	%rdi, 24(%rsp)
  40ab53:	e8 78 26 00 00 	callq	9848 <runtime.heapBitsSetType>
  40ab58:	48 8b 84 24 a8 00 00 00 	movq	168(%rsp), %rax
  40ab60:	48 8b 08 	movq	(%rax), %rcx
  40ab63:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  40ab68:	48 39 ca 	cmpq	%rcx, %rdx
  40ab6b:	76 2f 	jbe	47 <runtime.mallocgc+0x58c>
  40ab6d:	48 8b 58 08 	movq	8(%rax), %rbx
  40ab71:	48 85 db 	testq	%rbx, %rbx
  40ab74:	74 1f 	je	31 <runtime.mallocgc+0x585>
  40ab76:	48 89 d6 	movq	%rdx, %rsi
  40ab79:	48 29 ca 	subq	%rcx, %rdx
  40ab7c:	48 8d 0c 1a 	leaq	(%rdx,%rbx), %rcx
  40ab80:	48 8b 54 24 60 	movq	96(%rsp), %rdx
  40ab85:	48 8b 5a 08 	movq	8(%rdx), %rbx
  40ab89:	48 01 cb 	addq	%rcx, %rbx
  40ab8c:	48 89 5a 08 	movq	%rbx, 8(%rdx)
  40ab90:	e9 65 fd ff ff 	jmp	-667 <runtime.mallocgc+0x2ea>
  40ab95:	48 89 d6 	movq	%rdx, %rsi
  40ab98:	31 c9 	xorl	%ecx, %ecx
  40ab9a:	eb e4 	jmp	-28 <runtime.mallocgc+0x570>
  40ab9c:	48 8b 48 08 	movq	8(%rax), %rcx
  40aba0:	48 89 d6 	movq	%rdx, %rsi
  40aba3:	eb db 	jmp	-37 <runtime.mallocgc+0x570>
  40aba5:	48 89 f1 	movq	%rsi, %rcx
  40aba8:	eb 89 	jmp	-119 <runtime.mallocgc+0x523>
  40abaa:	4c 8b 50 10 	movq	16(%rax), %r10
  40abae:	4d 85 d2 	testq	%r10, %r10
  40abb1:	0f 84 0f fd ff ff 	je	-753 <runtime.mallocgc+0x2b6>
  40abb7:	49 89 ca 	movq	%rcx, %r10
  40abba:	e9 1a fd ff ff 	jmp	-742 <runtime.mallocgc+0x2c9>
  40abbf:	48 89 04 24 	movq	%rax, (%rsp)
  40abc3:	c6 44 24 08 05 	movb	$5, 8(%rsp)
  40abc8:	e8 e3 f7 ff ff 	callq	-2077 <runtime.(*mcache).nextFree>
  40abcd:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  40abd2:	44 0f b6 4c 24 20 	movzbl	32(%rsp), %r9d
  40abd8:	48 8b 44 24 60 	movq	96(%rsp), %rax
  40abdd:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  40abe2:	48 8b 5c 24 68 	movq	104(%rsp), %rbx
  40abe7:	48 8b 74 24 38 	movq	56(%rsp), %rsi
  40abec:	48 8b bc 24 a8 00 00 00 	movq	168(%rsp), %rdi
  40abf4:	44 0f b6 44 24 2f 	movzbl	47(%rsp), %r8d
  40abfa:	e9 ac fc ff ff 	jmp	-852 <runtime.mallocgc+0x29b>
  40abff:	49 8d 4b 01 	leaq	1(%r11), %rcx
  40ac03:	49 d3 ea 	shrq	%cl, %r10
  40ac06:	48 83 f9 40 	cmpq	$64, %rcx
  40ac0a:	4d 19 db 	sbbq	%r11, %r11
  40ac0d:	4d 21 da 	andq	%r11, %r10
  40ac10:	4d 89 51 40 	movq	%r10, 64(%r9)
  40ac14:	4d 89 61 30 	movq	%r12, 48(%r9)
  40ac18:	45 0f b7 51 60 	movzwl	96(%r9), %r10d
  40ac1d:	41 ff c2 	incl	%r10d
  40ac20:	66 45 89 51 60 	movw	%r10w, 96(%r9)
  40ac25:	49 8b 49 68 	movq	104(%r9), %rcx
  40ac29:	49 0f af cd 	imulq	%r13, %rcx
  40ac2d:	49 03 49 18 	addq	24(%r9), %rcx
  40ac31:	e9 69 fc ff ff 	jmp	-919 <runtime.mallocgc+0x28f>
  40ac36:	31 c9 	xorl	%ecx, %ecx
  40ac38:	e9 62 fc ff ff 	jmp	-926 <runtime.mallocgc+0x28f>
  40ac3d:	48 f7 c6 03 00 00 00 	testq	$3, %rsi
  40ac44:	75 0d 	jne	13 <runtime.mallocgc+0x643>
  40ac46:	49 83 c1 03 	addq	$3, %r9
  40ac4a:	49 83 e1 fc 	andq	$-4, %r9
  40ac4e:	e9 89 fb ff ff 	jmp	-1143 <runtime.mallocgc+0x1cc>
  40ac53:	0f ba e6 00 	btl	$0, %esi
  40ac57:	0f 82 7f fb ff ff 	jb	-1153 <runtime.mallocgc+0x1cc>
  40ac5d:	49 ff c1 	incq	%r9
  40ac60:	49 83 e1 fe 	andq	$-2, %r9
  40ac64:	e9 73 fb ff ff 	jmp	-1165 <runtime.mallocgc+0x1cc>
  40ac69:	48 81 fe f8 03 00 00 	cmpq	$1016, %rsi
  40ac70:	0f 87 af 01 00 00 	ja	431 <runtime.mallocgc+0x815>
  40ac76:	4c 8d 4e 07 	leaq	7(%rsi), %r9
  40ac7a:	49 c1 e9 03 	shrq	$3, %r9
  40ac7e:	49 81 f9 81 00 00 00 	cmpq	$129, %r9
  40ac85:	0f 83 e7 02 00 00 	jae	743 <runtime.mallocgc+0x962>
  40ac8b:	4c 8d 15 8e a4 09 00 	leaq	631950(%rip), %r10
  40ac92:	47 0f b6 0c 0a 	movzbl	(%r10,%r9), %r9d
  40ac97:	45 0f b6 d1 	movzbl	%r9b, %r10d
  40ac9b:	49 83 fa 43 	cmpq	$67, %r10
  40ac9f:	0f 83 bf 02 00 00 	jae	703 <runtime.mallocgc+0x954>
  40aca5:	4c 8d 1d 14 a5 09 00 	leaq	632084(%rip), %r11
  40acac:	47 0f b7 14 53 	movzwl	(%r11,%r10,2), %r10d
  40acb1:	4c 89 94 24 a0 00 00 00 	movq	%r10, 160(%rsp)
  40acb9:	84 00 	testb	%al, (%rax)
  40acbb:	41 d1 e1 	shll	%r9d
  40acbe:	45 0f b6 d0 	movzbl	%r8b, %r10d
  40acc2:	45 09 d1 	orl	%r10d, %r9d
  40acc5:	45 0f b6 d1 	movzbl	%r9b, %r10d
  40acc9:	49 81 fa 86 00 00 00 	cmpq	$134, %r10
  40acd0:	0f 83 87 02 00 00 	jae	647 <runtime.mallocgc+0x94d>
  40acd6:	4e 8b 54 d0 28 	movq	40(%rax,%r10,8), %r10
  40acdb:	4d 8b 5a 40 	movq	64(%r10), %r11
  40acdf:	4d 0f bc e3 	bsfq	%r11, %r12
  40ace3:	41 bd 40 00 00 00 	movl	$64, %r13d
  40ace9:	4d 0f 44 e5 	cmoveq	%r13, %r12
  40aced:	49 83 fc 40 	cmpq	$64, %r12
  40acf1:	0f 8d 27 01 00 00 	jge	295 <runtime.mallocgc+0x80e>
  40acf7:	4d 8b 6a 30 	movq	48(%r10), %r13
  40acfb:	4f 8d 74 25 00 	leaq	(%r13,%r12), %r14
  40ad00:	4d 8b 7a 38 	movq	56(%r10), %r15
  40ad04:	4d 39 fe 	cmpq	%r15, %r14
  40ad07:	0f 83 11 01 00 00 	jae	273 <runtime.mallocgc+0x80e>
  40ad0d:	4f 8d 6c 25 01 	leaq	1(%r13,%r12), %r13
  40ad12:	49 f7 c5 3f 00 00 00 	testq	$63, %r13
  40ad19:	0f 85 c7 00 00 00 	jne	199 <runtime.mallocgc+0x7d6>
  40ad1f:	4d 39 fd 	cmpq	%r15, %r13
  40ad22:	0f 84 be 00 00 00 	je	190 <runtime.mallocgc+0x7d6>
  40ad28:	31 c9 	xorl	%ecx, %ecx
  40ad2a:	48 85 c9 	testq	%rcx, %rcx
  40ad2d:	74 72 	je	114 <runtime.mallocgc+0x791>
  40ad2f:	45 31 c9 	xorl	%r9d, %r9d
  40ad32:	44 0f b6 9c 24 b0 00 00 00 	movzbl	176(%rsp), %r11d
  40ad3b:	45 84 db 	testb	%r11b, %r11b
  40ad3e:	74 0a 	je	10 <runtime.mallocgc+0x73a>
  40ad40:	45 0f b6 52 65 	movzbl	101(%r10), %r10d
  40ad45:	45 84 d2 	testb	%r10b, %r10b
  40ad48:	75 08 	jne	8 <runtime.mallocgc+0x742>
  40ad4a:	49 89 ca 	movq	%rcx, %r10
  40ad4d:	e9 93 fb ff ff 	jmp	-1133 <runtime.mallocgc+0x2d5>
  40ad52:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  40ad57:	44 88 4c 24 2e 	movb	%r9b, 46(%rsp)
  40ad5c:	48 89 0c 24 	movq	%rcx, (%rsp)
  40ad60:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  40ad68:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40ad6d:	e8 fe c0 03 00 	callq	246014 <runtime.memclrNoHeapPointers>
  40ad72:	48 8b 44 24 60 	movq	96(%rsp), %rax
  40ad77:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  40ad7c:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  40ad81:	48 8b 5c 24 68 	movq	104(%rsp), %rbx
  40ad86:	48 8b 74 24 38 	movq	56(%rsp), %rsi
  40ad8b:	48 8b bc 24 a8 00 00 00 	movq	168(%rsp), %rdi
  40ad93:	44 0f b6 44 24 2f 	movzbl	47(%rsp), %r8d
  40ad99:	44 0f b6 4c 24 2e 	movzbl	46(%rsp), %r9d
  40ad9f:	eb a9 	jmp	-87 <runtime.mallocgc+0x73a>
  40ada1:	48 89 04 24 	movq	%rax, (%rsp)
  40ada5:	44 88 4c 24 08 	movb	%r9b, 8(%rsp)
  40adaa:	e8 01 f6 ff ff 	callq	-2559 <runtime.(*mcache).nextFree>
  40adaf:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  40adb4:	4c 8b 54 24 18 	movq	24(%rsp), %r10
  40adb9:	44 0f b6 4c 24 20 	movzbl	32(%rsp), %r9d
  40adbf:	48 8b 44 24 60 	movq	96(%rsp), %rax
  40adc4:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  40adc9:	48 8b 5c 24 68 	movq	104(%rsp), %rbx
  40adce:	48 8b 74 24 38 	movq	56(%rsp), %rsi
  40add3:	48 8b bc 24 a8 00 00 00 	movq	168(%rsp), %rdi
  40addb:	44 0f b6 44 24 2f 	movzbl	47(%rsp), %r8d
  40ade1:	e9 4c ff ff ff 	jmp	-180 <runtime.mallocgc+0x722>
  40ade6:	49 8d 4c 24 01 	leaq	1(%r12), %rcx
  40adeb:	49 d3 eb 	shrq	%cl, %r11
  40adee:	48 83 f9 40 	cmpq	$64, %rcx
  40adf2:	4d 19 e4 	sbbq	%r12, %r12
  40adf5:	4d 21 e3 	andq	%r12, %r11
  40adf8:	4d 89 5a 40 	movq	%r11, 64(%r10)
  40adfc:	4d 89 6a 30 	movq	%r13, 48(%r10)
  40ae00:	45 0f b7 5a 60 	movzwl	96(%r10), %r11d
  40ae05:	41 ff c3 	incl	%r11d
  40ae08:	66 45 89 5a 60 	movw	%r11w, 96(%r10)
  40ae0d:	49 8b 4a 68 	movq	104(%r10), %rcx
  40ae11:	49 0f af ce 	imulq	%r14, %rcx
  40ae15:	49 03 4a 18 	addq	24(%r10), %rcx
  40ae19:	e9 0c ff ff ff 	jmp	-244 <runtime.mallocgc+0x71a>
  40ae1e:	31 c9 	xorl	%ecx, %ecx
  40ae20:	e9 05 ff ff ff 	jmp	-251 <runtime.mallocgc+0x71a>
  40ae25:	4c 8d 8e 7f fc ff ff 	leaq	-897(%rsi), %r9
  40ae2c:	49 c1 e9 07 	shrq	$7, %r9
  40ae30:	49 81 f9 f9 00 00 00 	cmpq	$249, %r9
  40ae37:	0f 83 2e 01 00 00 	jae	302 <runtime.mallocgc+0x95b>
  40ae3d:	4c 8d 15 1c a4 09 00 	leaq	631836(%rip), %r10
  40ae44:	47 0f b6 0c 11 	movzbl	(%r9,%r10), %r9d
  40ae49:	e9 49 fe ff ff 	jmp	-439 <runtime.mallocgc+0x687>
  40ae4e:	48 c7 44 24 48 00 00 00 00 	movq	$0, 72(%rsp)
  40ae57:	0f 57 c0 	xorps	%xmm0, %xmm0
  40ae5a:	0f 11 44 24 70 	movups	%xmm0, 112(%rsp)
  40ae5f:	0f 11 84 24 80 00 00 00 	movups	%xmm0, 128(%rsp)
  40ae67:	48 8d 05 c2 6d 03 00 	leaq	224706(%rip), %rax
  40ae6e:	48 89 44 24 70 	movq	%rax, 112(%rsp)
  40ae73:	48 8d 84 24 a0 00 00 00 	leaq	160(%rsp), %rax
  40ae7b:	48 89 44 24 78 	movq	%rax, 120(%rsp)
  40ae80:	0f b6 84 24 b0 00 00 00 	movzbl	176(%rsp), %eax
  40ae88:	88 84 24 80 00 00 00 	movb	%al, 128(%rsp)
  40ae8f:	44 88 84 24 81 00 00 00 	movb	%r8b, 129(%rsp)
  40ae97:	48 8d 44 24 48 	leaq	72(%rsp), %rax
  40ae9c:	48 89 84 24 88 00 00 00 	movq	%rax, 136(%rsp)
  40aea4:	48 8d 44 24 70 	leaq	112(%rsp), %rax
  40aea9:	48 89 04 24 	movq	%rax, (%rsp)
  40aead:	e8 6e 95 03 00 	callq	234862 <runtime.systemstack>
  40aeb2:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40aeb7:	48 c7 40 30 01 00 00 00 	movq	$1, 48(%rax)
  40aebf:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40aec4:	66 c7 40 60 01 00 	movw	$1, 96(%rax)
  40aeca:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40aecf:	4c 8b 50 18 	movq	24(%rax), %r10
  40aed3:	48 8b 40 68 	movq	104(%rax), %rax
  40aed7:	48 89 84 24 a0 00 00 00 	movq	%rax, 160(%rsp)
  40aedf:	48 8b 44 24 60 	movq	96(%rsp), %rax
  40aee4:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  40aee9:	48 8b 5c 24 68 	movq	104(%rsp), %rbx
  40aeee:	48 8b 74 24 38 	movq	56(%rsp), %rsi
  40aef3:	48 8b bc 24 a8 00 00 00 	movq	168(%rsp), %rdi
  40aefb:	44 0f b6 44 24 2f 	movzbl	47(%rsp), %r8d
  40af01:	41 b9 01 00 00 00 	movl	$1, %r9d
  40af07:	e9 d9 f9 ff ff 	jmp	-1575 <runtime.mallocgc+0x2d5>
  40af0c:	41 b8 01 00 00 00 	movl	$1, %r8d
  40af12:	e9 73 f8 ff ff 	jmp	-1933 <runtime.mallocgc+0x17a>
  40af17:	48 89 5c 24 68 	movq	%rbx, 104(%rsp)
  40af1c:	48 89 1c 24 	movq	%rbx, (%rsp)
  40af20:	e8 7b 9a 00 00 	callq	39547 <runtime.gcAssistAlloc>
  40af25:	48 8b 5c 24 68 	movq	104(%rsp), %rbx
  40af2a:	e9 da f7 ff ff 	jmp	-2086 <runtime.mallocgc+0xf9>
  40af2f:	48 89 d3 	movq	%rdx, %rbx
  40af32:	e9 b8 f7 ff ff 	jmp	-2120 <runtime.mallocgc+0xdf>
  40af37:	31 db 	xorl	%ebx, %ebx
  40af39:	e9 cb f7 ff ff 	jmp	-2101 <runtime.mallocgc+0xf9>
  40af3e:	48 8d 05 bb 8a 0b 00 	leaq	756411(%rip), %rax
  40af45:	48 89 84 24 b8 00 00 00 	movq	%rax, 184(%rsp)
  40af4d:	48 8b ac 24 90 00 00 00 	movq	144(%rsp), %rbp
  40af55:	48 81 c4 98 00 00 00 	addq	$152, %rsp
  40af5c:	c3 	retq
  40af5d:	e8 de 4a 01 00 	callq	84702 <runtime.panicindex>
  40af62:	0f 0b 	ud2
  40af64:	e8 d7 4a 01 00 	callq	84695 <runtime.panicindex>
  40af69:	0f 0b 	ud2
  40af6b:	e8 d0 4a 01 00 	callq	84688 <runtime.panicindex>
  40af70:	0f 0b 	ud2
  40af72:	e8 c9 4a 01 00 	callq	84681 <runtime.panicindex>
  40af77:	0f 0b 	ud2
  40af79:	48 8d 05 c5 01 06 00 	leaq	393669(%rip), %rax
  40af80:	48 89 04 24 	movq	%rax, (%rsp)
  40af84:	48 c7 44 24 08 14 00 00 00 	movq	$20, 8(%rsp)
  40af8d:	e8 3e 62 01 00 	callq	90686 <runtime.throw>
  40af92:	0f 0b 	ud2
  40af94:	48 8d 05 d0 f9 05 00 	leaq	391632(%rip), %rax
  40af9b:	48 89 04 24 	movq	%rax, (%rsp)
  40af9f:	48 c7 44 24 08 0f 00 00 00 	movq	$15, 8(%rsp)
  40afa8:	e8 23 62 01 00 	callq	90659 <runtime.throw>
  40afad:	0f 0b 	ud2
  40afaf:	48 8d 05 6e 2a 06 00 	leaq	404078(%rip), %rax
  40afb6:	48 89 04 24 	movq	%rax, (%rsp)
  40afba:	48 c7 44 24 08 32 00 00 00 	movq	$50, 8(%rsp)
  40afc3:	e8 08 62 01 00 	callq	90632 <runtime.throw>
  40afc8:	0f 0b 	ud2
  40afca:	e8 a1 95 03 00 	callq	234913 <runtime.morestack_noctxt>
  40afcf:	e9 3c f6 ff ff 	jmp	-2500 <runtime.mallocgc>
  40afd4:	cc 	int3
  40afd5:	cc 	int3
  40afd6:	cc 	int3
  40afd7:	cc 	int3
  40afd8:	cc 	int3
  40afd9:	cc 	int3
  40afda:	cc 	int3
  40afdb:	cc 	int3
  40afdc:	cc 	int3
  40afdd:	cc 	int3
  40afde:	cc 	int3
  40afdf:	cc 	int3

runtime.largeAlloc:
  40afe0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40afe9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40afed:	0f 86 1a 01 00 00 	jbe	282 <runtime.largeAlloc+0x12d>
  40aff3:	48 83 ec 38 	subq	$56, %rsp
  40aff7:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  40affc:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  40b001:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40b006:	48 8d 88 00 20 00 00 	leaq	8192(%rax), %rcx
  40b00d:	48 39 c1 	cmpq	%rax, %rcx
  40b010:	0f 82 dc 00 00 00 	jb	220 <runtime.largeAlloc+0x112>
  40b016:	48 89 c1 	movq	%rax, %rcx
  40b019:	48 c1 e8 0d 	shrq	$13, %rax
  40b01d:	48 f7 c1 ff 1f 00 00 	testq	$8191, %rcx
  40b024:	74 03 	je	3 <runtime.largeAlloc+0x49>
  40b026:	48 ff c0 	incq	%rax
  40b029:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  40b02e:	48 89 c1 	movq	%rax, %rcx
  40b031:	48 c1 e0 0d 	shlq	$13, %rax
  40b035:	48 89 04 24 	movq	%rax, (%rsp)
  40b039:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40b03e:	e8 fd d8 00 00 	callq	55549 <runtime.deductSweepCredit>
  40b043:	48 8d 05 56 12 0a 00 	leaq	660054(%rip), %rax
  40b04a:	48 89 04 24 	movq	%rax, (%rsp)
  40b04e:	48 8b 44 24 20 	movq	32(%rsp), %rax
  40b053:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40b058:	0f b6 44 24 49 	movzbl	73(%rsp), %eax
  40b05d:	88 44 24 10 	movb	%al, 16(%rsp)
  40b061:	c6 44 24 11 01 	movb	$1, 17(%rsp)
  40b066:	0f b6 44 24 48 	movzbl	72(%rsp), %eax
  40b06b:	88 44 24 12 	movb	%al, 18(%rsp)
  40b06f:	e8 9c fb 00 00 	callq	64412 <runtime.(*mheap).alloc>
  40b074:	48 8b 44 24 18 	movq	24(%rsp), %rax
  40b079:	48 85 c0 	testq	%rax, %rax
  40b07c:	74 59 	je	89 <runtime.largeAlloc+0xf7>
  40b07e:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  40b083:	48 8b 48 18 	movq	24(%rax), %rcx
  40b087:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  40b08c:	48 01 d1 	addq	%rdx, %rcx
  40b08f:	48 89 88 80 00 00 00 	movq	%rcx, 128(%rax)
  40b096:	48 8b 48 18 	movq	24(%rax), %rcx
  40b09a:	48 89 0c 24 	movq	%rcx, (%rsp)
  40b09e:	e8 bd 10 00 00 	callq	4285 <runtime.heapBitsForSpan>
  40b0a3:	8b 44 24 10 	movl	16(%rsp), %eax
  40b0a7:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  40b0ac:	48 89 0c 24 	movq	%rcx, (%rsp)
  40b0b0:	89 44 24 08 	movl	%eax, 8(%rsp)
  40b0b4:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40b0b9:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40b0be:	e8 7d 1e 00 00 	callq	7805 <runtime.heapBits.initSpan>
  40b0c3:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40b0c8:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  40b0cd:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  40b0d2:	48 83 c4 38 	addq	$56, %rsp
  40b0d6:	c3 	retq
  40b0d7:	48 8d 05 97 f6 05 00 	leaq	390807(%rip), %rax
  40b0de:	48 89 04 24 	movq	%rax, (%rsp)
  40b0e2:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  40b0eb:	e8 e0 60 01 00 	callq	90336 <runtime.throw>
  40b0f0:	0f 0b 	ud2
  40b0f2:	48 8d 05 7c f6 05 00 	leaq	390780(%rip), %rax
  40b0f9:	48 89 04 24 	movq	%rax, (%rsp)
  40b0fd:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  40b106:	e8 c5 60 01 00 	callq	90309 <runtime.throw>
  40b10b:	0f 0b 	ud2
  40b10d:	e8 5e 94 03 00 	callq	234590 <runtime.morestack_noctxt>
  40b112:	e9 c9 fe ff ff 	jmp	-311 <runtime.largeAlloc>
  40b117:	cc 	int3
  40b118:	cc 	int3
  40b119:	cc 	int3
  40b11a:	cc 	int3
  40b11b:	cc 	int3
  40b11c:	cc 	int3
  40b11d:	cc 	int3
  40b11e:	cc 	int3
  40b11f:	cc 	int3

runtime.newobject:
  40b120:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40b129:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40b12d:	76 3d 	jbe	61 <runtime.newobject+0x4c>
  40b12f:	48 83 ec 28 	subq	$40, %rsp
  40b133:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  40b138:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  40b13d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40b142:	48 8b 08 	movq	(%rax), %rcx
  40b145:	48 89 0c 24 	movq	%rcx, (%rsp)
  40b149:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40b14e:	c6 44 24 10 01 	movb	$1, 16(%rsp)
  40b153:	e8 b8 f4 ff ff 	callq	-2888 <runtime.mallocgc>
  40b158:	48 8b 44 24 18 	movq	24(%rsp), %rax
  40b15d:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  40b162:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  40b167:	48 83 c4 28 	addq	$40, %rsp
  40b16b:	c3 	retq
  40b16c:	e8 ff 93 03 00 	callq	234495 <runtime.morestack_noctxt>
  40b171:	eb ad 	jmp	-83 <runtime.newobject>
  40b173:	cc 	int3
  40b174:	cc 	int3
  40b175:	cc 	int3
  40b176:	cc 	int3
  40b177:	cc 	int3
  40b178:	cc 	int3
  40b179:	cc 	int3
  40b17a:	cc 	int3
  40b17b:	cc 	int3
  40b17c:	cc 	int3
  40b17d:	cc 	int3
  40b17e:	cc 	int3
  40b17f:	cc 	int3

runtime.newarray:
  40b180:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40b189:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40b18d:	0f 86 cf 00 00 00 	jbe	207 <runtime.newarray+0xe2>
  40b193:	48 83 ec 28 	subq	$40, %rsp
  40b197:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  40b19c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  40b1a1:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  40b1a6:	48 83 f9 01 	cmpq	$1, %rcx
  40b1aa:	74 69 	je	105 <runtime.newarray+0x95>
  40b1ac:	48 85 c9 	testq	%rcx, %rcx
  40b1af:	0f 8c 8f 00 00 00 	jl	143 <runtime.newarray+0xc4>
  40b1b5:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  40b1ba:	48 8b 1a 	movq	(%rdx), %rbx
  40b1bd:	48 83 fb 21 	cmpq	$33, %rbx
  40b1c1:	73 3b 	jae	59 <runtime.newarray+0x7e>
  40b1c3:	48 8d 05 b6 a3 09 00 	leaq	631734(%rip), %rax
  40b1ca:	48 8b 04 d8 	movq	(%rax,%rbx,8), %rax
  40b1ce:	48 39 c1 	cmpq	%rax, %rcx
  40b1d1:	77 71 	ja	113 <runtime.newarray+0xc4>
  40b1d3:	48 0f af d9 	imulq	%rcx, %rbx
  40b1d7:	48 89 1c 24 	movq	%rbx, (%rsp)
  40b1db:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  40b1e0:	c6 44 24 10 01 	movb	$1, 16(%rsp)
  40b1e5:	e8 26 f4 ff ff 	callq	-3034 <runtime.mallocgc>
  40b1ea:	48 8b 44 24 18 	movq	24(%rsp), %rax
  40b1ef:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  40b1f4:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  40b1f9:	48 83 c4 28 	addq	$40, %rsp
  40b1fd:	c3 	retq
  40b1fe:	48 b8 ff ff ff ff 7f 00 00 00 	movabsq	$549755813887, %rax
  40b208:	48 89 d6 	movq	%rdx, %rsi
  40b20b:	31 d2 	xorl	%edx, %edx
  40b20d:	48 f7 f3 	divq	%rbx
  40b210:	48 89 f2 	movq	%rsi, %rdx
  40b213:	eb b9 	jmp	-71 <runtime.newarray+0x4e>
  40b215:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40b21a:	48 8b 08 	movq	(%rax), %rcx
  40b21d:	48 89 0c 24 	movq	%rcx, (%rsp)
  40b221:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40b226:	c6 44 24 10 01 	movb	$1, 16(%rsp)
  40b22b:	e8 e0 f3 ff ff 	callq	-3104 <runtime.mallocgc>
  40b230:	48 8b 44 24 18 	movq	24(%rsp), %rax
  40b235:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  40b23a:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  40b23f:	48 83 c4 28 	addq	$40, %rsp
  40b243:	c3 	retq
  40b244:	48 8d 05 f5 fd 04 00 	leaq	327157(%rip), %rax
  40b24b:	48 89 04 24 	movq	%rax, (%rsp)
  40b24f:	48 8d 05 1a 9b 06 00 	leaq	432922(%rip), %rax
  40b256:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40b25b:	e8 d0 57 01 00 	callq	88016 <runtime.gopanic>
  40b260:	0f 0b 	ud2
  40b262:	e8 09 93 03 00 	callq	234249 <runtime.morestack_noctxt>
  40b267:	e9 14 ff ff ff 	jmp	-236 <runtime.newarray>
  40b26c:	cc 	int3
  40b26d:	cc 	int3
  40b26e:	cc 	int3
  40b26f:	cc 	int3

runtime.profilealloc:
  40b270:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40b279:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40b27d:	76 46 	jbe	70 <runtime.profilealloc+0x55>
  40b27f:	48 83 ec 18 	subq	$24, %rsp
  40b283:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  40b288:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  40b28d:	e8 3e 00 00 00 	callq	62 <runtime.nextSample>
  40b292:	48 8b 44 24 20 	movq	32(%rsp), %rax
  40b297:	48 8b 80 60 01 00 00 	movq	352(%rax), %rax
  40b29e:	8b 0c 24 	movl	(%rsp), %ecx
  40b2a1:	89 08 	movl	%ecx, (%rax)
  40b2a3:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40b2a8:	48 89 04 24 	movq	%rax, (%rsp)
  40b2ac:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40b2b1:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40b2b6:	e8 d5 22 01 00 	callq	74453 <runtime.mProf_Malloc>
  40b2bb:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  40b2c0:	48 83 c4 18 	addq	$24, %rsp
  40b2c4:	c3 	retq
  40b2c5:	e8 a6 92 03 00 	callq	234150 <runtime.morestack_noctxt>
  40b2ca:	eb a4 	jmp	-92 <runtime.profilealloc>
  40b2cc:	cc 	int3
  40b2cd:	cc 	int3
  40b2ce:	cc 	int3
  40b2cf:	cc 	int3

runtime.nextSample:
  40b2d0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40b2d9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40b2dd:	76 30 	jbe	48 <runtime.nextSample+0x3f>
  40b2df:	48 83 ec 18 	subq	$24, %rsp
  40b2e3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  40b2e8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  40b2ed:	48 8b 05 24 9d 09 00 	movq	630052(%rip), %rax
  40b2f4:	48 89 04 24 	movq	%rax, (%rsp)
  40b2f8:	e8 23 00 00 00 	callq	35 <runtime.fastexprand>
  40b2fd:	8b 44 24 08 	movl	8(%rsp), %eax
  40b301:	89 44 24 20 	movl	%eax, 32(%rsp)
  40b305:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  40b30a:	48 83 c4 18 	addq	$24, %rsp
  40b30e:	c3 	retq
  40b30f:	e8 5c 92 03 00 	callq	234076 <runtime.morestack_noctxt>
  40b314:	eb ba 	jmp	-70 <runtime.nextSample>
  40b316:	cc 	int3
  40b317:	cc 	int3
  40b318:	cc 	int3
  40b319:	cc 	int3
  40b31a:	cc 	int3
  40b31b:	cc 	int3
  40b31c:	cc 	int3
  40b31d:	cc 	int3
  40b31e:	cc 	int3
  40b31f:	cc 	int3

runtime.fastexprand:
  40b320:	48 83 ec 08 	subq	$8, %rsp
  40b324:	48 89 2c 24 	movq	%rbp, (%rsp)
  40b328:	48 8d 2c 24 	leaq	(%rsp), %rbp
  40b32c:	48 8b 44 24 10 	movq	16(%rsp), %rax
  40b331:	48 3d 00 00 00 07 	cmpq	$117440512, %rax
  40b337:	0f 8e 3c 01 00 00 	jle	316 <runtime.fastexprand+0x159>
  40b33d:	b8 00 00 00 07 	movl	$117440512, %eax
  40b342:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40b34b:	48 8b 49 30 	movq	48(%rcx), %rcx
  40b34f:	8b 91 20 01 00 00 	movl	288(%rcx), %edx
  40b355:	8b 99 24 01 00 00 	movl	292(%rcx), %ebx
  40b35b:	89 99 20 01 00 00 	movl	%ebx, 288(%rcx)
  40b361:	89 d6 	movl	%edx, %esi
  40b363:	c1 e2 11 	shll	$17, %edx
  40b366:	31 f2 	xorl	%esi, %edx
  40b368:	89 de 	movl	%ebx, %esi
  40b36a:	31 d3 	xorl	%edx, %ebx
  40b36c:	c1 ea 07 	shrl	$7, %edx
  40b36f:	31 da 	xorl	%ebx, %edx
  40b371:	89 f3 	movl	%esi, %ebx
  40b373:	c1 ee 10 	shrl	$16, %esi
  40b376:	31 d6 	xorl	%edx, %esi
  40b378:	89 b1 24 01 00 00 	movl	%esi, 292(%rcx)
  40b37e:	8d 0c 1e 	leal	(%rsi,%rbx), %ecx
  40b381:	81 e1 ff ff ff 03 	andl	$67108863, %ecx
  40b387:	ff c1 	incl	%ecx
  40b389:	0f 57 c0 	xorps	%xmm0, %xmm0
  40b38c:	f2 48 0f 2a c1 	cvtsi2sdq	%rcx, %xmm0
  40b391:	66 48 0f 7e c1 	movq	%xmm0, %rcx
  40b396:	48 89 ca 	movq	%rcx, %rdx
  40b399:	48 c1 e9 2f 	shrq	$47, %rcx
  40b39d:	48 83 e1 1f 	andq	$31, %rcx
  40b3a1:	48 8d 59 01 	leaq	1(%rcx), %rbx
  40b3a5:	48 83 fb 21 	cmpq	$33, %rbx
  40b3a9:	0f 83 e4 00 00 00 	jae	228 <runtime.fastexprand+0x173>
  40b3af:	48 89 d3 	movq	%rdx, %rbx
  40b3b2:	48 c1 ea 34 	shrq	$52, %rdx
  40b3b6:	48 81 e2 ff 07 00 00 	andq	$2047, %rdx
  40b3bd:	48 81 c2 01 fc ff ff 	addq	$-1023, %rdx
  40b3c4:	48 c1 eb 1b 	shrq	$27, %rbx
  40b3c8:	48 89 de 	movq	%rbx, %rsi
  40b3cb:	48 81 e3 ff ff 0f 00 	andq	$1048575, %rbx
  40b3d2:	48 8d 3d 87 a0 09 00 	leaq	630919(%rip), %rdi
  40b3d9:	f2 0f 10 04 cf 	movsd	(%rdi,%rcx,8), %xmm0
  40b3de:	f2 0f 10 4c cf 08 	movsd	8(%rdi,%rcx,8), %xmm1
  40b3e4:	0f 57 d2 	xorps	%xmm2, %xmm2
  40b3e7:	f2 48 0f 2a d2 	cvtsi2sdq	%rdx, %xmm2
  40b3ec:	f2 0f 58 d0 	addsd	%xmm0, %xmm2
  40b3f0:	f2 0f 5c c8 	subsd	%xmm0, %xmm1
  40b3f4:	48 f7 c6 ff ff 0f 00 	testq	$1048575, %rsi
  40b3fb:	7c 64 	jl	100 <runtime.fastexprand+0x141>
  40b3fd:	0f 57 c0 	xorps	%xmm0, %xmm0
  40b400:	f2 48 0f 2a c3 	cvtsi2sdq	%rbx, %xmm0
  40b405:	f2 0f 59 c1 	mulsd	%xmm1, %xmm0
  40b409:	f2 0f 10 0d 8f 96 06 00 	movsd	431759(%rip), %xmm1
  40b411:	f2 0f 59 c8 	mulsd	%xmm0, %xmm1
  40b415:	f2 0f 58 d1 	addsd	%xmm1, %xmm2
  40b419:	f2 0f 10 05 df 96 06 00 	movsd	431839(%rip), %xmm0
  40b421:	f2 0f 5c d0 	subsd	%xmm0, %xmm2
  40b425:	0f 57 c0 	xorps	%xmm0, %xmm0
  40b428:	66 0f 2e d0 	ucomisd	%xmm0, %xmm2
  40b42c:	76 2e 	jbe	46 <runtime.fastexprand+0x13c>
  40b42e:	0f 57 c0 	xorps	%xmm0, %xmm0
  40b431:	0f 57 c9 	xorps	%xmm1, %xmm1
  40b434:	f2 48 0f 2a c8 	cvtsi2sdq	%rax, %xmm1
  40b439:	f2 0f 10 15 ef 96 06 00 	movsd	431855(%rip), %xmm2
  40b441:	f2 0f 59 ca 	mulsd	%xmm2, %xmm1
  40b445:	f2 0f 59 c1 	mulsd	%xmm1, %xmm0
  40b449:	f2 0f 2c c0 	cvttsd2si	%xmm0, %eax
  40b44d:	ff c0 	incl	%eax
  40b44f:	89 44 24 18 	movl	%eax, 24(%rsp)
  40b453:	48 8b 2c 24 	movq	(%rsp), %rbp
  40b457:	48 83 c4 08 	addq	$8, %rsp
  40b45b:	c3 	retq
  40b45c:	0f 10 c2 	movups	%xmm2, %xmm0
  40b45f:	eb d0 	jmp	-48 <runtime.fastexprand+0x111>
  40b461:	48 d1 eb 	shrq	%rbx
  40b464:	48 83 e6 01 	andq	$1, %rsi
  40b468:	48 09 f3 	orq	%rsi, %rbx
  40b46b:	0f 57 c0 	xorps	%xmm0, %xmm0
  40b46e:	f2 48 0f 2a c3 	cvtsi2sdq	%rbx, %xmm0
  40b473:	f2 0f 58 c0 	addsd	%xmm0, %xmm0
  40b477:	eb 8c 	jmp	-116 <runtime.fastexprand+0xe5>
  40b479:	48 85 c0 	testq	%rax, %rax
  40b47c:	0f 85 c0 fe ff ff 	jne	-320 <runtime.fastexprand+0x22>
  40b482:	c7 44 24 18 00 00 00 00 	movl	$0, 24(%rsp)
  40b48a:	48 8b 2c 24 	movq	(%rsp), %rbp
  40b48e:	48 83 c4 08 	addq	$8, %rsp
  40b492:	c3 	retq
  40b493:	e8 a8 45 01 00 	callq	83368 <runtime.panicindex>
  40b498:	0f 0b 	ud2
  40b49a:	cc 	int3
  40b49b:	cc 	int3
  40b49c:	cc 	int3
  40b49d:	cc 	int3
  40b49e:	cc 	int3
  40b49f:	cc 	int3

runtime.persistentalloc:
  40b4a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40b4a9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40b4ad:	0f 86 83 00 00 00 	jbe	131 <runtime.persistentalloc+0x96>
  40b4b3:	48 83 ec 40 	subq	$64, %rsp
  40b4b7:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  40b4bc:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  40b4c1:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  40b4ca:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  40b4d3:	0f 57 c0 	xorps	%xmm0, %xmm0
  40b4d6:	0f 11 44 24 18 	movups	%xmm0, 24(%rsp)
  40b4db:	0f 11 44 24 28 	movups	%xmm0, 40(%rsp)
  40b4e0:	48 8d 05 b9 67 03 00 	leaq	223161(%rip), %rax
  40b4e7:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40b4ec:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40b4f1:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  40b4f6:	48 8b 44 24 50 	movq	80(%rsp), %rax
  40b4fb:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  40b500:	48 8b 44 24 58 	movq	88(%rsp), %rax
  40b505:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  40b50a:	48 8d 44 24 08 	leaq	8(%rsp), %rax
  40b50f:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  40b514:	48 8d 44 24 10 	leaq	16(%rsp), %rax
  40b519:	48 89 04 24 	movq	%rax, (%rsp)
  40b51d:	e8 fe 8e 03 00 	callq	233214 <runtime.systemstack>
  40b522:	48 8b 44 24 08 	movq	8(%rsp), %rax
  40b527:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  40b52c:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  40b531:	48 83 c4 40 	addq	$64, %rsp
  40b535:	c3 	retq
  40b536:	e8 35 90 03 00 	callq	233525 <runtime.morestack_noctxt>
  40b53b:	e9 60 ff ff ff 	jmp	-160 <runtime.persistentalloc>

runtime.persistentalloc1:
  40b540:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40b549:	48 3b 61 18 	cmpq	24(%rcx), %rsp
  40b54d:	0f 86 bf 02 00 00 	jbe	703 <runtime.persistentalloc1+0x2d2>
  40b553:	48 83 ec 40 	subq	$64, %rsp
  40b557:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  40b55c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  40b561:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40b566:	48 85 c0 	testq	%rax, %rax
  40b569:	0f 84 88 02 00 00 	je	648 <runtime.persistentalloc1+0x2b7>
  40b56f:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  40b574:	48 85 c9 	testq	%rcx, %rcx
  40b577:	0f 84 1f 02 00 00 	je	543 <runtime.persistentalloc1+0x25c>
  40b57d:	48 8d 51 ff 	leaq	-1(%rcx), %rdx
  40b581:	48 85 d1 	testq	%rdx, %rcx
  40b584:	0f 85 52 02 00 00 	jne	594 <runtime.persistentalloc1+0x29c>
  40b58a:	48 81 f9 00 20 00 00 	cmpq	$8192, %rcx
  40b591:	0f 87 2a 02 00 00 	ja	554 <runtime.persistentalloc1+0x281>
  40b597:	48 3d 00 00 01 00 	cmpq	$65536, %rax
  40b59d:	0f 83 d2 01 00 00 	jae	466 <runtime.persistentalloc1+0x235>
  40b5a3:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  40b5a8:	64 48 8b 14 25 f8 ff ff ff 	movq	%fs:-8, %rdx
  40b5b1:	48 8b 5a 30 	movq	48(%rdx), %rbx
  40b5b5:	ff 83 00 01 00 00 	incl	256(%rbx)
  40b5bb:	48 8b 52 30 	movq	48(%rdx), %rdx
  40b5bf:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  40b5c4:	48 85 d2 	testq	%rdx, %rdx
  40b5c7:	0f 84 7d 01 00 00 	je	381 <runtime.persistentalloc1+0x20a>
  40b5cd:	48 8b 9a d0 00 00 00 	movq	208(%rdx), %rbx
  40b5d4:	48 85 db 	testq	%rbx, %rbx
  40b5d7:	0f 84 6d 01 00 00 	je	365 <runtime.persistentalloc1+0x20a>
  40b5dd:	84 03 	testb	%al, (%rbx)
  40b5df:	48 81 c3 38 12 00 00 	addq	$4664, %rbx
  40b5e6:	48 89 5c 24 20 	movq	%rbx, 32(%rsp)
  40b5eb:	48 8b 73 08 	movq	8(%rbx), %rsi
  40b5ef:	48 8d 74 31 ff 	leaq	-1(%rcx,%rsi), %rsi
  40b5f4:	48 ff c9 	decq	%rcx
  40b5f7:	48 f7 d1 	notq	%rcx
  40b5fa:	48 21 f1 	andq	%rsi, %rcx
  40b5fd:	48 89 4b 08 	movq	%rcx, 8(%rbx)
  40b601:	48 01 c1 	addq	%rax, %rcx
  40b604:	48 81 f9 00 00 04 00 	cmpq	$262144, %rcx
  40b60b:	0f 86 25 01 00 00 	jbe	293 <runtime.persistentalloc1+0x1f6>
  40b611:	48 c7 04 24 00 00 04 00 	movq	$262144, (%rsp)
  40b619:	48 8d 05 80 91 0b 00 	leaq	758144(%rip), %rax
  40b620:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40b625:	e8 f6 39 00 00 	callq	14838 <runtime.sysAlloc>
  40b62a:	48 8b 44 24 10 	movq	16(%rsp), %rax
  40b62f:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  40b634:	48 89 01 	movq	%rax, (%rcx)
  40b637:	48 85 c0 	testq	%rax, %rax
  40b63a:	0f 84 d4 00 00 00 	je	212 <runtime.persistentalloc1+0x1d4>
  40b640:	48 c7 41 08 00 00 00 00 	movq	$0, 8(%rcx)
  40b648:	48 8b 01 	movq	(%rcx), %rax
  40b64b:	48 8b 51 08 	movq	8(%rcx), %rdx
  40b64f:	48 8b 5c 24 48 	movq	72(%rsp), %rbx
  40b654:	48 8d 34 13 	leaq	(%rbx,%rdx), %rsi
  40b658:	48 89 71 08 	movq	%rsi, 8(%rcx)
  40b65c:	64 48 8b 34 25 f8 ff ff ff 	movq	%fs:-8, %rsi
  40b665:	48 8b 7c 24 28 	movq	40(%rsp), %rdi
  40b66a:	44 8b 87 00 01 00 00 	movl	256(%rdi), %r8d
  40b671:	45 8d 48 ff 	leal	-1(%r8), %r9d
  40b675:	44 89 8f 00 01 00 00 	movl	%r9d, 256(%rdi)
  40b67c:	48 01 d0 	addq	%rdx, %rax
  40b67f:	41 83 f8 01 	cmpl	$1, %r8d
  40b683:	75 13 	jne	19 <runtime.persistentalloc1+0x158>
  40b685:	0f b6 96 c0 00 00 00 	movzbl	192(%rsi), %edx
  40b68c:	84 d2 	testb	%dl, %dl
  40b68e:	74 08 	je	8 <runtime.persistentalloc1+0x158>
  40b690:	48 c7 46 10 de fa ff ff 	movq	$-1314, 16(%rsi)
  40b698:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  40b69d:	48 8d 15 94 c0 09 00 	leaq	639124(%rip), %rdx
  40b6a4:	48 39 d1 	cmpq	%rdx, %rcx
  40b6a7:	74 4f 	je	79 <runtime.persistentalloc1+0x1b8>
  40b6a9:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  40b6ae:	48 8d 15 eb 90 0b 00 	leaq	757995(%rip), %rdx
  40b6b5:	48 39 d1 	cmpq	%rdx, %rcx
  40b6b8:	75 0f 	jne	15 <runtime.persistentalloc1+0x189>
  40b6ba:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  40b6bf:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  40b6c4:	48 83 c4 40 	addq	$64, %rsp
  40b6c8:	c3 	retq
  40b6c9:	48 89 0c 24 	movq	%rcx, (%rsp)
  40b6cd:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  40b6d2:	e8 19 2c 01 00 	callq	76825 <runtime.mSysStatInc>
  40b6d7:	48 8d 05 c2 90 0b 00 	leaq	757954(%rip), %rax
  40b6de:	48 89 04 24 	movq	%rax, (%rsp)
  40b6e2:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40b6e7:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40b6ec:	e8 af 2c 01 00 	callq	76975 <runtime.mSysStatDec>
  40b6f1:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40b6f6:	eb c2 	jmp	-62 <runtime.persistentalloc1+0x17a>
  40b6f8:	48 8d 05 31 c0 09 00 	leaq	639025(%rip), %rax
  40b6ff:	48 89 04 24 	movq	%rax, (%rsp)
  40b703:	e8 b8 df ff ff 	callq	-8264 <runtime.unlock>
  40b708:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40b70d:	48 8b 5c 24 48 	movq	72(%rsp), %rbx
  40b712:	eb 95 	jmp	-107 <runtime.persistentalloc1+0x169>
  40b714:	48 8d 05 1d c0 09 00 	leaq	639005(%rip), %rax
  40b71b:	48 39 c1 	cmpq	%rax, %rcx
  40b71e:	0f 85 82 00 00 00 	jne	130 <runtime.persistentalloc1+0x266>
  40b724:	48 8d 05 05 c0 09 00 	leaq	638981(%rip), %rax
  40b72b:	48 89 04 24 	movq	%rax, (%rsp)
  40b72f:	e8 8c df ff ff 	callq	-8308 <runtime.unlock>
  40b734:	eb 70 	jmp	112 <runtime.persistentalloc1+0x266>
  40b736:	48 8b 0b 	movq	(%rbx), %rcx
  40b739:	48 85 c9 	testq	%rcx, %rcx
  40b73c:	0f 84 cf fe ff ff 	je	-305 <runtime.persistentalloc1+0xd1>
  40b742:	48 89 d9 	movq	%rbx, %rcx
  40b745:	e9 fe fe ff ff 	jmp	-258 <runtime.persistentalloc1+0x108>
  40b74a:	48 8d 05 df bf 09 00 	leaq	638943(%rip), %rax
  40b751:	48 89 04 24 	movq	%rax, (%rsp)
  40b755:	e8 c6 dd ff ff 	callq	-8762 <runtime.lock>
  40b75a:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40b75f:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  40b764:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  40b769:	48 8d 1d c8 bf 09 00 	leaq	638920(%rip), %rbx
  40b770:	e9 71 fe ff ff 	jmp	-399 <runtime.persistentalloc1+0xa6>
  40b775:	48 89 04 24 	movq	%rax, (%rsp)
  40b779:	48 8b 44 24 58 	movq	88(%rsp), %rax
  40b77e:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40b783:	e8 98 38 00 00 	callq	14488 <runtime.sysAlloc>
  40b788:	48 8b 44 24 10 	movq	16(%rsp), %rax
  40b78d:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  40b792:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  40b797:	48 83 c4 40 	addq	$64, %rsp
  40b79b:	c3 	retq
  40b79c:	b9 08 00 00 00 	movl	$8, %ecx
  40b7a1:	e9 f1 fd ff ff 	jmp	-527 <runtime.persistentalloc1+0x57>
  40b7a6:	48 8d 05 b8 0f 06 00 	leaq	397240(%rip), %rax
  40b7ad:	48 89 04 24 	movq	%rax, (%rsp)
  40b7b1:	48 c7 44 24 08 1f 00 00 00 	movq	$31, 8(%rsp)
  40b7ba:	e8 11 5a 01 00 	callq	88593 <runtime.throw>
  40b7bf:	0f 0b 	ud2
  40b7c1:	48 8d 05 ad 15 06 00 	leaq	398765(%rip), %rax
  40b7c8:	48 89 04 24 	movq	%rax, (%rsp)
  40b7cc:	48 c7 44 24 08 23 00 00 00 	movq	$35, 8(%rsp)
  40b7d5:	e8 f6 59 01 00 	callq	88566 <runtime.throw>
  40b7da:	0f 0b 	ud2
  40b7dc:	48 8d 05 e8 1c 06 00 	leaq	400616(%rip), %rax
  40b7e3:	48 89 04 24 	movq	%rax, (%rsp)
  40b7e7:	48 c7 44 24 08 2a 00 00 00 	movq	$42, 8(%rsp)
  40b7f0:	e8 db 59 01 00 	callq	88539 <runtime.throw>
  40b7f5:	0f 0b 	ud2
  40b7f7:	48 8d 05 78 04 06 00 	leaq	394360(%rip), %rax
  40b7fe:	48 89 04 24 	movq	%rax, (%rsp)
  40b802:	48 c7 44 24 08 1a 00 00 00 	movq	$26, 8(%rsp)
  40b80b:	e8 c0 59 01 00 	callq	88512 <runtime.throw>
  40b810:	0f 0b 	ud2
  40b812:	e8 e9 b4 02 00 	callq	177385 <runtime.morestackc>
  40b817:	e9 24 fd ff ff 	jmp	-732 <runtime.persistentalloc1>
  40b81c:	cc 	int3
  40b81d:	cc 	int3
  40b81e:	cc 	int3
  40b81f:	cc 	int3

runtime.gcmarkwb_m:
  40b820:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40b829:	48 3b 61 18 	cmpq	24(%rcx), %rsp
  40b82d:	0f 86 c0 00 00 00 	jbe	192 <runtime.gcmarkwb_m+0xd3>
  40b833:	48 83 ec 10 	subq	$16, %rsp
  40b837:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  40b83c:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  40b841:	0f b6 05 cc 81 0b 00 	movzbl	754124(%rip), %eax
  40b848:	84 c0 	testb	%al, %al
  40b84a:	74 2e 	je	46 <runtime.gcmarkwb_m+0x5a>
  40b84c:	48 8b 44 24 18 	movq	24(%rsp), %rax
  40b851:	48 89 c1 	movq	%rax, %rcx
  40b854:	48 3d 00 10 00 00 	cmpq	$4096, %rax
  40b85a:	72 08 	jb	8 <runtime.gcmarkwb_m+0x44>
  40b85c:	48 8b 01 	movq	(%rcx), %rax
  40b85f:	48 85 c0 	testq	%rax, %rax
  40b862:	75 7a 	jne	122 <runtime.gcmarkwb_m+0xbe>
  40b864:	48 8b 44 24 20 	movq	32(%rsp), %rax
  40b869:	48 85 c0 	testq	%rax, %rax
  40b86c:	74 0c 	je	12 <runtime.gcmarkwb_m+0x5a>
  40b86e:	48 8b 0d 53 1d 0a 00 	movq	662867(%rip), %rcx
  40b875:	48 39 c8 	cmpq	%rcx, %rax
  40b878:	73 0a 	jae	10 <runtime.gcmarkwb_m+0x64>
  40b87a:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  40b87f:	48 83 c4 10 	addq	$16, %rsp
  40b883:	c3 	retq
  40b884:	48 8b 15 45 1d 0a 00 	movq	662853(%rip), %rdx
  40b88b:	48 39 d0 	cmpq	%rdx, %rax
  40b88e:	73 ea 	jae	-22 <runtime.gcmarkwb_m+0x5a>
  40b890:	48 8b 15 59 1a 0a 00 	movq	662105(%rip), %rdx
  40b897:	48 8b 1d 4a 1a 0a 00 	movq	662090(%rip), %rbx
  40b89e:	48 89 c6 	movq	%rax, %rsi
  40b8a1:	48 29 c8 	subq	%rcx, %rax
  40b8a4:	48 c1 e8 0d 	shrq	$13, %rax
  40b8a8:	48 39 d0 	cmpq	%rdx, %rax
  40b8ab:	73 3f 	jae	63 <runtime.gcmarkwb_m+0xcc>
  40b8ad:	48 8b 04 c3 	movq	(%rbx,%rax,8), %rax
  40b8b1:	48 85 c0 	testq	%rax, %rax
  40b8b4:	74 c4 	je	-60 <runtime.gcmarkwb_m+0x5a>
  40b8b6:	48 8b 48 18 	movq	24(%rax), %rcx
  40b8ba:	48 39 ce 	cmpq	%rcx, %rsi
  40b8bd:	72 bb 	jb	-69 <runtime.gcmarkwb_m+0x5a>
  40b8bf:	48 8b 88 80 00 00 00 	movq	128(%rax), %rcx
  40b8c6:	48 39 ce 	cmpq	%rcx, %rsi
  40b8c9:	73 af 	jae	-81 <runtime.gcmarkwb_m+0x5a>
  40b8cb:	0f b6 40 64 	movzbl	100(%rax), %eax
  40b8cf:	3c 01 	cmpb	$1, %al
  40b8d1:	75 a7 	jne	-89 <runtime.gcmarkwb_m+0x5a>
  40b8d3:	48 89 34 24 	movq	%rsi, (%rsp)
  40b8d7:	e8 84 b1 00 00 	callq	45444 <runtime.shade>
  40b8dc:	eb 9c 	jmp	-100 <runtime.gcmarkwb_m+0x5a>
  40b8de:	48 89 04 24 	movq	%rax, (%rsp)
  40b8e2:	e8 79 b1 00 00 	callq	45433 <runtime.shade>
  40b8e7:	e9 78 ff ff ff 	jmp	-136 <runtime.gcmarkwb_m+0x44>
  40b8ec:	e8 4f 41 01 00 	callq	82255 <runtime.panicindex>
  40b8f1:	0f 0b 	ud2
  40b8f3:	e8 08 b4 02 00 	callq	177160 <runtime.morestackc>
  40b8f8:	e9 23 ff ff ff 	jmp	-221 <runtime.gcmarkwb_m>
  40b8fd:	cc 	int3
  40b8fe:	cc 	int3
  40b8ff:	cc 	int3

runtime.writebarrierptr_prewrite1:
  40b900:	48 83 ec 38 	subq	$56, %rsp
  40b904:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  40b909:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  40b90e:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  40b917:	48 8b 48 30 	movq	48(%rax), %rcx
  40b91b:	ff 81 00 01 00 00 	incl	256(%rcx)
  40b921:	48 8b 48 30 	movq	48(%rax), %rcx
  40b925:	84 00 	testb	%al, (%rax)
  40b927:	0f b6 81 16 01 00 00 	movzbl	278(%rcx), %eax
  40b92e:	84 c0 	testb	%al, %al
  40b930:	74 3a 	je	58 <runtime.writebarrierptr_prewrite1+0x6c>
  40b932:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  40b93b:	8b 91 00 01 00 00 	movl	256(%rcx), %edx
  40b941:	8d 5a ff 	leal	-1(%rdx), %ebx
  40b944:	89 99 00 01 00 00 	movl	%ebx, 256(%rcx)
  40b94a:	83 fa 01 	cmpl	$1, %edx
  40b94d:	75 13 	jne	19 <runtime.writebarrierptr_prewrite1+0x62>
  40b94f:	0f b6 88 c0 00 00 00 	movzbl	192(%rax), %ecx
  40b956:	84 c9 	testb	%cl, %cl
  40b958:	74 08 	je	8 <runtime.writebarrierptr_prewrite1+0x62>
  40b95a:	48 c7 40 10 de fa ff ff 	movq	$-1314, 16(%rax)
  40b962:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  40b967:	48 83 c4 38 	addq	$56, %rsp
  40b96b:	c3 	retq
  40b96c:	8b 81 08 01 00 00 	movl	264(%rcx), %eax
  40b972:	85 c0 	testl	%eax, %eax
  40b974:	7f bc 	jg	-68 <runtime.writebarrierptr_prewrite1+0x32>
  40b976:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40b97b:	48 8d 05 8e 63 03 00 	leaq	222094(%rip), %rax
  40b982:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40b987:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  40b98c:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40b991:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  40b996:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40b99b:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  40b9a0:	48 8d 44 24 10 	leaq	16(%rsp), %rax
  40b9a5:	48 89 04 24 	movq	%rax, (%rsp)
  40b9a9:	e8 72 8a 03 00 	callq	232050 <runtime.systemstack>
  40b9ae:	48 8b 44 24 08 	movq	8(%rsp), %rax
  40b9b3:	c6 80 16 01 00 00 00 	movb	$0, 278(%rax)
  40b9ba:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40b9c3:	8b 90 00 01 00 00 	movl	256(%rax), %edx
  40b9c9:	8d 5a ff 	leal	-1(%rdx), %ebx
  40b9cc:	89 98 00 01 00 00 	movl	%ebx, 256(%rax)
  40b9d2:	83 fa 01 	cmpl	$1, %edx
  40b9d5:	75 13 	jne	19 <runtime.writebarrierptr_prewrite1+0xea>
  40b9d7:	0f b6 81 c0 00 00 00 	movzbl	192(%rcx), %eax
  40b9de:	84 c0 	testb	%al, %al
  40b9e0:	74 08 	je	8 <runtime.writebarrierptr_prewrite1+0xea>
  40b9e2:	48 c7 41 10 de fa ff ff 	movq	$-1314, 16(%rcx)
  40b9ea:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  40b9ef:	48 83 c4 38 	addq	$56, %rsp
  40b9f3:	c3 	retq
  40b9f4:	cc 	int3
  40b9f5:	cc 	int3
  40b9f6:	cc 	int3
  40b9f7:	cc 	int3
  40b9f8:	cc 	int3
  40b9f9:	cc 	int3
  40b9fa:	cc 	int3
  40b9fb:	cc 	int3
  40b9fc:	cc 	int3
  40b9fd:	cc 	int3
  40b9fe:	cc 	int3
  40b9ff:	cc 	int3

runtime.writebarrierptr_prewrite:
  40ba00:	48 83 ec 18 	subq	$24, %rsp
  40ba04:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  40ba09:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  40ba0e:	0f b6 05 00 80 0b 00 	movzbl	753664(%rip), %eax
  40ba15:	84 c0 	testb	%al, %al
  40ba17:	75 5b 	jne	91 <runtime.writebarrierptr_prewrite+0x74>
  40ba19:	0f b6 05 f4 7f 0b 00 	movzbl	753652(%rip), %eax
  40ba20:	84 c0 	testb	%al, %al
  40ba22:	74 46 	je	70 <runtime.writebarrierptr_prewrite+0x6a>
  40ba24:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40ba29:	48 85 c0 	testq	%rax, %rax
  40ba2c:	74 08 	je	8 <runtime.writebarrierptr_prewrite+0x36>
  40ba2e:	48 3d 00 10 00 00 	cmpq	$4096, %rax
  40ba34:	72 1d 	jb	29 <runtime.writebarrierptr_prewrite+0x53>
  40ba36:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  40ba3b:	48 89 0c 24 	movq	%rcx, (%rsp)
  40ba3f:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40ba44:	e8 b7 fe ff ff 	callq	-329 <runtime.writebarrierptr_prewrite1>
  40ba49:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  40ba4e:	48 83 c4 18 	addq	$24, %rsp
  40ba52:	c3 	retq
  40ba53:	48 8d 05 ee 27 06 00 	leaq	403438(%rip), %rax
  40ba5a:	48 89 04 24 	movq	%rax, (%rsp)
  40ba5e:	e8 bd 89 03 00 	callq	231869 <runtime.systemstack>
  40ba63:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40ba68:	eb cc 	jmp	-52 <runtime.writebarrierptr_prewrite+0x36>
  40ba6a:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  40ba6f:	48 83 c4 18 	addq	$24, %rsp
  40ba73:	c3 	retq
  40ba74:	48 8b 44 24 20 	movq	32(%rsp), %rax
  40ba79:	48 89 04 24 	movq	%rax, (%rsp)
  40ba7d:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  40ba82:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40ba87:	e8 b4 6a ff ff 	callq	-38220 <runtime.cgoCheckWriteBarrier>
  40ba8c:	eb 8b 	jmp	-117 <runtime.writebarrierptr_prewrite+0x19>
  40ba8e:	cc 	int3
  40ba8f:	cc 	int3

runtime.typedmemmove:
  40ba90:	48 83 ec 30 	subq	$48, %rsp
  40ba94:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  40ba99:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  40ba9e:	48 8b 44 24 38 	movq	56(%rsp), %rax
  40baa3:	0f b6 48 17 	movzbl	23(%rax), %ecx
  40baa7:	f6 c1 80 	testb	$-128, %cl
  40baaa:	74 6a 	je	106 <runtime.typedmemmove+0x86>
  40baac:	48 8b 08 	movq	(%rax), %rcx
  40baaf:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  40bab4:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  40bab9:	48 89 0c 24 	movq	%rcx, (%rsp)
  40babd:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  40bac2:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  40bac7:	e8 34 b6 03 00 	callq	243252 <runtime.memmove>
  40bacc:	0f b6 05 42 7f 0b 00 	movzbl	753474(%rip), %eax
  40bad3:	84 c0 	testb	%al, %al
  40bad5:	75 0a 	jne	10 <runtime.typedmemmove+0x51>
  40bad7:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  40badc:	48 83 c4 30 	addq	$48, %rsp
  40bae0:	c3 	retq
  40bae1:	48 8b 44 24 38 	movq	56(%rsp), %rax
  40bae6:	48 8b 08 	movq	(%rax), %rcx
  40bae9:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  40baee:	48 89 04 24 	movq	%rax, (%rsp)
  40baf2:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40baf7:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40bafc:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40bb01:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40bb06:	48 c7 44 24 18 00 00 00 00 	movq	$0, 24(%rsp)
  40bb0f:	e8 fc 6a ff ff 	callq	-38148 <runtime.cgoCheckMemmove>
  40bb14:	eb c1 	jmp	-63 <runtime.typedmemmove+0x47>
  40bb16:	48 8b 08 	movq	(%rax), %rcx
  40bb19:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  40bb1e:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  40bb23:	48 89 0c 24 	movq	%rcx, (%rsp)
  40bb27:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  40bb2c:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40bb31:	e8 fa 0b 00 00 	callq	3066 <runtime.bulkBarrierPreWrite>
  40bb36:	48 8b 44 24 38 	movq	56(%rsp), %rax
  40bb3b:	e9 6c ff ff ff 	jmp	-148 <runtime.typedmemmove+0x1c>

runtime.reflectcallmove:
  40bb40:	48 83 ec 20 	subq	$32, %rsp
  40bb44:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  40bb49:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  40bb4e:	0f b6 05 bf 7e 0b 00 	movzbl	753343(%rip), %eax
  40bb55:	84 c0 	testb	%al, %al
  40bb57:	74 76 	je	118 <runtime.reflectcallmove+0x8f>
  40bb59:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40bb5e:	48 85 c0 	testq	%rax, %rax
  40bb61:	74 65 	je	101 <runtime.reflectcallmove+0x88>
  40bb63:	0f b6 40 17 	movzbl	23(%rax), %eax
  40bb67:	a8 80 	testb	$-128, %al
  40bb69:	75 56 	jne	86 <runtime.reflectcallmove+0x81>
  40bb6b:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40bb70:	48 83 f8 08 	cmpq	$8, %rax
  40bb74:	73 27 	jae	39 <runtime.reflectcallmove+0x5d>
  40bb76:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  40bb7b:	48 89 0c 24 	movq	%rcx, (%rsp)
  40bb7f:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  40bb84:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40bb89:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40bb8e:	e8 6d b5 03 00 	callq	243053 <runtime.memmove>
  40bb93:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  40bb98:	48 83 c4 20 	addq	$32, %rsp
  40bb9c:	c3 	retq
  40bb9d:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  40bba2:	48 89 0c 24 	movq	%rcx, (%rsp)
  40bba6:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  40bbab:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40bbb0:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40bbb5:	e8 76 0b 00 00 	callq	2934 <runtime.bulkBarrierPreWrite>
  40bbba:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40bbbf:	eb b5 	jmp	-75 <runtime.reflectcallmove+0x36>
  40bbc1:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40bbc6:	eb ae 	jmp	-82 <runtime.reflectcallmove+0x36>
  40bbc8:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40bbcd:	eb a7 	jmp	-89 <runtime.reflectcallmove+0x36>
  40bbcf:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40bbd4:	eb a0 	jmp	-96 <runtime.reflectcallmove+0x36>
  40bbd6:	cc 	int3
  40bbd7:	cc 	int3
  40bbd8:	cc 	int3
  40bbd9:	cc 	int3
  40bbda:	cc 	int3
  40bbdb:	cc 	int3
  40bbdc:	cc 	int3
  40bbdd:	cc 	int3
  40bbde:	cc 	int3
  40bbdf:	cc 	int3

runtime.typedslicecopy:
  40bbe0:	48 83 ec 58 	subq	$88, %rsp
  40bbe4:	48 89 6c 24 50 	movq	%rbp, 80(%rsp)
  40bbe9:	48 8d 6c 24 50 	leaq	80(%rsp), %rbp
  40bbee:	48 8b 44 24 70 	movq	112(%rsp), %rax
  40bbf3:	48 8b 8c 24 88 00 00 00 	movq	136(%rsp), %rcx
  40bbfb:	48 39 c8 	cmpq	%rcx, %rax
  40bbfe:	0f 8e 01 01 00 00 	jle	257 <runtime.typedslicecopy+0x125>
  40bc04:	48 89 ca 	movq	%rcx, %rdx
  40bc07:	48 85 c9 	testq	%rcx, %rcx
  40bc0a:	0f 84 df 00 00 00 	je	223 <runtime.typedslicecopy+0x10f>
  40bc10:	48 89 4c 24 48 	movq	%rcx, 72(%rsp)
  40bc15:	0f b6 1d f9 7d 0b 00 	movzbl	753145(%rip), %ebx
  40bc1c:	84 db 	testb	%bl, %bl
  40bc1e:	75 7a 	jne	122 <runtime.typedslicecopy+0xba>
  40bc20:	48 8b 44 24 60 	movq	96(%rsp), %rax
  40bc25:	48 8b 00 	movq	(%rax), %rax
  40bc28:	48 0f af c1 	imulq	%rcx, %rax
  40bc2c:	0f b6 15 e1 7d 0b 00 	movzbl	753121(%rip), %edx
  40bc33:	84 d2 	testb	%dl, %dl
  40bc35:	75 37 	jne	55 <runtime.typedslicecopy+0x8e>
  40bc37:	48 8b 4c 24 68 	movq	104(%rsp), %rcx
  40bc3c:	48 89 0c 24 	movq	%rcx, (%rsp)
  40bc40:	48 8b 8c 24 80 00 00 00 	movq	128(%rsp), %rcx
  40bc48:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40bc4d:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40bc52:	e8 a9 b4 03 00 	callq	242857 <runtime.memmove>
  40bc57:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40bc5c:	48 89 84 24 98 00 00 00 	movq	%rax, 152(%rsp)
  40bc64:	48 8b 6c 24 50 	movq	80(%rsp), %rbp
  40bc69:	48 83 c4 58 	addq	$88, %rsp
  40bc6d:	c3 	retq
  40bc6e:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  40bc73:	48 8b 4c 24 68 	movq	104(%rsp), %rcx
  40bc78:	48 89 0c 24 	movq	%rcx, (%rsp)
  40bc7c:	48 8b 8c 24 80 00 00 00 	movq	128(%rsp), %rcx
  40bc84:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40bc89:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40bc8e:	e8 9d 0a 00 00 	callq	2717 <runtime.bulkBarrierPreWrite>
  40bc93:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40bc98:	eb 9d 	jmp	-99 <runtime.typedslicecopy+0x57>
  40bc9a:	48 8b 5c 24 60 	movq	96(%rsp), %rbx
  40bc9f:	48 89 1c 24 	movq	%rbx, (%rsp)
  40bca3:	48 8b 74 24 68 	movq	104(%rsp), %rsi
  40bca8:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  40bcad:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40bcb2:	48 8b 44 24 78 	movq	120(%rsp), %rax
  40bcb7:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  40bcbc:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  40bcc4:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  40bcc9:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  40bcce:	48 8b 94 24 90 00 00 00 	movq	144(%rsp), %rdx
  40bcd6:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  40bcdb:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  40bce0:	e8 cb 69 ff ff 	callq	-38453 <runtime.cgoCheckSliceCopy>
  40bce5:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  40bcea:	e9 31 ff ff ff 	jmp	-207 <runtime.typedslicecopy+0x40>
  40bcef:	48 c7 84 24 98 00 00 00 00 00 00 00 	movq	$0, 152(%rsp)
  40bcfb:	48 8b 6c 24 50 	movq	80(%rsp), %rbp
  40bd00:	48 83 c4 58 	addq	$88, %rsp
  40bd04:	c3 	retq
  40bd05:	48 89 ca 	movq	%rcx, %rdx
  40bd08:	48 89 c1 	movq	%rax, %rcx
  40bd0b:	e9 f7 fe ff ff 	jmp	-265 <runtime.typedslicecopy+0x27>

runtime.typedmemclr:
  40bd10:	48 83 ec 20 	subq	$32, %rsp
  40bd14:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  40bd19:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  40bd1e:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40bd23:	0f b6 48 17 	movzbl	23(%rax), %ecx
  40bd27:	f6 c1 80 	testb	$-128, %cl
  40bd2a:	74 20 	je	32 <runtime.typedmemclr+0x3c>
  40bd2c:	48 8b 00 	movq	(%rax), %rax
  40bd2f:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40bd34:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40bd39:	48 89 04 24 	movq	%rax, (%rsp)
  40bd3d:	e8 2e b1 03 00 	callq	241966 <runtime.memclrNoHeapPointers>
  40bd42:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  40bd47:	48 83 c4 20 	addq	$32, %rsp
  40bd4b:	c3 	retq
  40bd4c:	48 8b 08 	movq	(%rax), %rcx
  40bd4f:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  40bd54:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  40bd59:	48 89 0c 24 	movq	%rcx, (%rsp)
  40bd5d:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  40bd66:	e8 c5 09 00 00 	callq	2501 <runtime.bulkBarrierPreWrite>
  40bd6b:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40bd70:	eb ba 	jmp	-70 <runtime.typedmemclr+0x1c>
  40bd72:	cc 	int3
  40bd73:	cc 	int3
  40bd74:	cc 	int3
  40bd75:	cc 	int3
  40bd76:	cc 	int3
  40bd77:	cc 	int3
  40bd78:	cc 	int3
  40bd79:	cc 	int3
  40bd7a:	cc 	int3
  40bd7b:	cc 	int3
  40bd7c:	cc 	int3
  40bd7d:	cc 	int3
  40bd7e:	cc 	int3
  40bd7f:	cc 	int3

runtime.memclrHasPointers:
  40bd80:	48 83 ec 20 	subq	$32, %rsp
  40bd84:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  40bd89:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  40bd8e:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40bd93:	48 89 04 24 	movq	%rax, (%rsp)
  40bd97:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  40bda0:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40bda5:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40bdaa:	e8 81 09 00 00 	callq	2433 <runtime.bulkBarrierPreWrite>
  40bdaf:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40bdb4:	48 89 04 24 	movq	%rax, (%rsp)
  40bdb8:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40bdbd:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40bdc2:	e8 a9 b0 03 00 	callq	241833 <runtime.memclrNoHeapPointers>
  40bdc7:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  40bdcc:	48 83 c4 20 	addq	$32, %rsp
  40bdd0:	c3 	retq
  40bdd1:	cc 	int3
  40bdd2:	cc 	int3
  40bdd3:	cc 	int3
  40bdd4:	cc 	int3
  40bdd5:	cc 	int3
  40bdd6:	cc 	int3
  40bdd7:	cc 	int3
  40bdd8:	cc 	int3
  40bdd9:	cc 	int3
  40bdda:	cc 	int3
  40bddb:	cc 	int3
  40bddc:	cc 	int3
  40bddd:	cc 	int3
  40bdde:	cc 	int3
  40bddf:	cc 	int3

runtime.(*mheap).mapBits:
  40bde0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40bde9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40bded:	0f 86 b1 00 00 00 	jbe	177 <runtime.(*mheap).mapBits+0xc4>
  40bdf3:	48 83 ec 30 	subq	$48, %rsp
  40bdf7:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  40bdfc:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  40be01:	48 8b 44 24 38 	movq	56(%rsp), %rax
  40be06:	84 00 	testb	%al, (%rax)
  40be08:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  40be0d:	48 2b 0d b4 17 0a 00 	subq	661428(%rip), %rcx
  40be14:	48 c1 e9 05 	shrq	$5, %rcx
  40be18:	48 8b 15 81 7b 0b 00 	movq	752513(%rip), %rdx
  40be1f:	48 8b 98 20 13 00 00 	movq	4896(%rax), %rbx
  40be26:	48 81 c1 ff 1f 00 00 	addq	$8191, %rcx
  40be2d:	48 81 e1 00 e0 ff ff 	andq	$-8192, %rcx
  40be34:	48 8d 4c 11 ff 	leaq	-1(%rcx,%rdx), %rcx
  40be39:	48 ff ca 	decq	%rdx
  40be3c:	48 f7 d2 	notq	%rdx
  40be3f:	48 21 ca 	andq	%rcx, %rdx
  40be42:	48 39 d3 	cmpq	%rdx, %rbx
  40be45:	72 0a 	jb	10 <runtime.(*mheap).mapBits+0x71>
  40be47:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  40be4c:	48 83 c4 30 	addq	$48, %rsp
  40be50:	c3 	retq
  40be51:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  40be56:	48 8b 88 18 13 00 00 	movq	4888(%rax), %rcx
  40be5d:	48 29 d1 	subq	%rdx, %rcx
  40be60:	0f b6 b0 48 13 00 00 	movzbl	4936(%rax), %esi
  40be67:	40 88 74 24 10 	movb	%sil, 16(%rsp)
  40be6c:	48 89 0c 24 	movq	%rcx, (%rsp)
  40be70:	48 29 da 	subq	%rbx, %rdx
  40be73:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  40be78:	48 8d 15 19 89 0b 00 	leaq	755993(%rip), %rdx
  40be7f:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  40be84:	e8 b7 36 00 00 	callq	14007 <runtime.sysMap>
  40be89:	48 8b 44 24 20 	movq	32(%rsp), %rax
  40be8e:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  40be93:	48 89 81 20 13 00 00 	movq	%rax, 4896(%rcx)
  40be9a:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  40be9f:	48 83 c4 30 	addq	$48, %rsp
  40bea3:	c3 	retq
  40bea4:	e8 c7 86 03 00 	callq	231111 <runtime.morestack_noctxt>
  40bea9:	e9 32 ff ff ff 	jmp	-206 <runtime.(*mheap).mapBits>
  40beae:	cc 	int3
  40beaf:	cc 	int3

runtime.(*mspan).refillAllocCache:
  40beb0:	48 8b 44 24 08 	movq	8(%rsp), %rax
  40beb5:	48 8b 48 48 	movq	72(%rax), %rcx
  40beb9:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  40bebe:	48 8d 1c 11 	leaq	(%rcx,%rdx), %rbx
  40bec2:	84 03 	testb	%al, (%rbx)
  40bec4:	48 8b 0c 11 	movq	(%rcx,%rdx), %rcx
  40bec8:	48 f7 d1 	notq	%rcx
  40becb:	48 89 48 40 	movq	%rcx, 64(%rax)
  40becf:	c3 	retq

runtime.(*mspan).nextFreeIndex:
  40bed0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40bed9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40bedd:	0f 86 57 01 00 00 	jbe	343 <runtime.(*mspan).nextFreeIndex+0x16a>
  40bee3:	48 83 ec 30 	subq	$48, %rsp
  40bee7:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  40beec:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  40bef1:	48 8b 44 24 38 	movq	56(%rsp), %rax
  40bef6:	48 8b 50 30 	movq	48(%rax), %rdx
  40befa:	48 8b 58 38 	movq	56(%rax), %rbx
  40befe:	48 39 d3 	cmpq	%rdx, %rbx
  40bf01:	0f 84 09 01 00 00 	je	265 <runtime.(*mspan).nextFreeIndex+0x140>
  40bf07:	48 39 da 	cmpq	%rbx, %rdx
  40bf0a:	0f 87 0f 01 00 00 	ja	271 <runtime.(*mspan).nextFreeIndex+0x14f>
  40bf10:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  40bf15:	48 8b 70 40 	movq	64(%rax), %rsi
  40bf19:	48 0f bc f6 	bsfq	%rsi, %rsi
  40bf1d:	bf 40 00 00 00 	movl	$64, %edi
  40bf22:	48 0f 44 f7 	cmoveq	%rdi, %rsi
  40bf26:	eb 3a 	jmp	58 <runtime.(*mspan).nextFreeIndex+0x92>
  40bf28:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  40bf2d:	48 89 04 24 	movq	%rax, (%rsp)
  40bf31:	48 c1 e9 03 	shrq	$3, %rcx
  40bf35:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40bf3a:	e8 71 ff ff ff 	callq	-143 <runtime.(*mspan).refillAllocCache>
  40bf3f:	48 8b 44 24 38 	movq	56(%rsp), %rax
  40bf44:	48 8b 48 40 	movq	64(%rax), %rcx
  40bf48:	48 0f bc c9 	bsfq	%rcx, %rcx
  40bf4c:	bf 40 00 00 00 	movl	$64, %edi
  40bf51:	48 0f 44 cf 	cmoveq	%rdi, %rcx
  40bf55:	48 8b 5c 24 10 	movq	16(%rsp), %rbx
  40bf5a:	48 89 ce 	movq	%rcx, %rsi
  40bf5d:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  40bf62:	48 83 fe 40 	cmpq	$64, %rsi
  40bf66:	75 20 	jne	32 <runtime.(*mspan).nextFreeIndex+0xb8>
  40bf68:	48 8d 4a 40 	leaq	64(%rdx), %rcx
  40bf6c:	48 83 e1 c0 	andq	$-64, %rcx
  40bf70:	48 39 d9 	cmpq	%rbx, %rcx
  40bf73:	72 b3 	jb	-77 <runtime.(*mspan).nextFreeIndex+0x58>
  40bf75:	48 89 58 30 	movq	%rbx, 48(%rax)
  40bf79:	48 89 5c 24 40 	movq	%rbx, 64(%rsp)
  40bf7e:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  40bf83:	48 83 c4 30 	addq	$48, %rsp
  40bf87:	c3 	retq
  40bf88:	48 8d 3c 32 	leaq	(%rdx,%rsi), %rdi
  40bf8c:	48 39 df 	cmpq	%rbx, %rdi
  40bf8f:	73 6c 	jae	108 <runtime.(*mspan).nextFreeIndex+0x12d>
  40bf91:	4c 8b 40 40 	movq	64(%rax), %r8
  40bf95:	48 8d 4e 01 	leaq	1(%rsi), %rcx
  40bf99:	49 d3 e8 	shrq	%cl, %r8
  40bf9c:	48 83 f9 40 	cmpq	$64, %rcx
  40bfa0:	4d 19 c9 	sbbq	%r9, %r9
  40bfa3:	4d 21 c8 	andq	%r9, %r8
  40bfa6:	4c 89 40 40 	movq	%r8, 64(%rax)
  40bfaa:	48 8d 54 32 01 	leaq	1(%rdx,%rsi), %rdx
  40bfaf:	48 f7 c2 3f 00 00 00 	testq	$63, %rdx
  40bfb6:	75 05 	jne	5 <runtime.(*mspan).nextFreeIndex+0xed>
  40bfb8:	48 39 da 	cmpq	%rbx, %rdx
  40bfbb:	75 13 	jne	19 <runtime.(*mspan).nextFreeIndex+0x100>
  40bfbd:	48 89 50 30 	movq	%rdx, 48(%rax)
  40bfc1:	48 89 7c 24 40 	movq	%rdi, 64(%rsp)
  40bfc6:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  40bfcb:	48 83 c4 30 	addq	$48, %rsp
  40bfcf:	c3 	retq
  40bfd0:	48 89 7c 24 20 	movq	%rdi, 32(%rsp)
  40bfd5:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  40bfda:	48 89 04 24 	movq	%rax, (%rsp)
  40bfde:	48 c1 ea 03 	shrq	$3, %rdx
  40bfe2:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  40bfe7:	e8 c4 fe ff ff 	callq	-316 <runtime.(*mspan).refillAllocCache>
  40bfec:	48 8b 44 24 38 	movq	56(%rsp), %rax
  40bff1:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  40bff6:	48 8b 7c 24 20 	movq	32(%rsp), %rdi
  40bffb:	eb c0 	jmp	-64 <runtime.(*mspan).nextFreeIndex+0xed>
  40bffd:	48 89 58 30 	movq	%rbx, 48(%rax)
  40c001:	48 89 5c 24 40 	movq	%rbx, 64(%rsp)
  40c006:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  40c00b:	48 83 c4 30 	addq	$48, %rsp
  40c00f:	c3 	retq
  40c010:	48 89 54 24 40 	movq	%rdx, 64(%rsp)
  40c015:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  40c01a:	48 83 c4 30 	addq	$48, %rsp
  40c01e:	c3 	retq
  40c01f:	48 8d 05 ea f4 05 00 	leaq	390378(%rip), %rax
  40c026:	48 89 04 24 	movq	%rax, (%rsp)
  40c02a:	48 c7 44 24 08 16 00 00 00 	movq	$22, 8(%rsp)
  40c033:	e8 98 51 01 00 	callq	86424 <runtime.throw>
  40c038:	0f 0b 	ud2
  40c03a:	e8 31 85 03 00 	callq	230705 <runtime.morestack_noctxt>
  40c03f:	e9 8c fe ff ff 	jmp	-372 <runtime.(*mspan).nextFreeIndex>
  40c044:	cc 	int3
  40c045:	cc 	int3
  40c046:	cc 	int3
  40c047:	cc 	int3
  40c048:	cc 	int3
  40c049:	cc 	int3
  40c04a:	cc 	int3
  40c04b:	cc 	int3
  40c04c:	cc 	int3
  40c04d:	cc 	int3
  40c04e:	cc 	int3
  40c04f:	cc 	int3

runtime.markBitsForAddr:
  40c050:	48 83 ec 08 	subq	$8, %rsp
  40c054:	48 89 2c 24 	movq	%rbp, (%rsp)
  40c058:	48 8d 2c 24 	leaq	(%rsp), %rbp
  40c05c:	48 8b 44 24 10 	movq	16(%rsp), %rax
  40c061:	48 85 c0 	testq	%rax, %rax
  40c064:	0f 85 98 00 00 00 	jne	152 <runtime.markBitsForAddr+0xb2>
  40c06a:	31 c9 	xorl	%ecx, %ecx
  40c06c:	48 8b 51 18 	movq	24(%rcx), %rdx
  40c070:	48 29 d0 	subq	%rdx, %rax
  40c073:	48 85 c0 	testq	%rax, %rax
  40c076:	75 32 	jne	50 <runtime.markBitsForAddr+0x5a>
  40c078:	31 c0 	xorl	%eax, %eax
  40c07a:	48 89 c2 	movq	%rax, %rdx
  40c07d:	48 c1 e8 03 	shrq	$3, %rax
  40c081:	48 03 41 50 	addq	80(%rcx), %rax
  40c085:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  40c08a:	48 89 d1 	movq	%rdx, %rcx
  40c08d:	48 83 e1 07 	andq	$7, %rcx
  40c091:	b8 01 00 00 00 	movl	$1, %eax
  40c096:	d3 e0 	shll	%cl, %eax
  40c098:	88 44 24 20 	movb	%al, 32(%rsp)
  40c09c:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  40c0a1:	48 8b 2c 24 	movq	(%rsp), %rbp
  40c0a5:	48 83 c4 08 	addq	$8, %rsp
  40c0a9:	c3 	retq
  40c0aa:	0f b7 51 5e 	movzwl	94(%rcx), %edx
  40c0ae:	66 85 d2 	testw	%dx, %dx
  40c0b1:	74 1a 	je	26 <runtime.markBitsForAddr+0x7d>
  40c0b3:	0f b6 51 66 	movzbl	102(%rcx), %edx
  40c0b7:	48 89 cb 	movq	%rcx, %rbx
  40c0ba:	89 d1 	movl	%edx, %ecx
  40c0bc:	48 d3 e8 	shrq	%cl, %rax
  40c0bf:	80 f9 40 	cmpb	$64, %cl
  40c0c2:	48 19 d2 	sbbq	%rdx, %rdx
  40c0c5:	48 21 d0 	andq	%rdx, %rax
  40c0c8:	48 89 d9 	movq	%rbx, %rcx
  40c0cb:	eb ad 	jmp	-83 <runtime.markBitsForAddr+0x2a>
  40c0cd:	0f b6 51 66 	movzbl	102(%rcx), %edx
  40c0d1:	48 89 cb 	movq	%rcx, %rbx
  40c0d4:	89 d1 	movl	%edx, %ecx
  40c0d6:	48 d3 e8 	shrq	%cl, %rax
  40c0d9:	80 f9 40 	cmpb	$64, %cl
  40c0dc:	48 19 d2 	sbbq	%rdx, %rdx
  40c0df:	48 21 d0 	andq	%rdx, %rax
  40c0e2:	0f b7 53 5c 	movzwl	92(%rbx), %edx
  40c0e6:	48 0f af c2 	imulq	%rdx, %rax
  40c0ea:	0f b6 4b 67 	movzbl	103(%rbx), %ecx
  40c0ee:	48 d3 e8 	shrq	%cl, %rax
  40c0f1:	80 f9 40 	cmpb	$64, %cl
  40c0f4:	48 19 d2 	sbbq	%rdx, %rdx
  40c0f7:	48 21 d0 	andq	%rdx, %rax
  40c0fa:	48 89 d9 	movq	%rbx, %rcx
  40c0fd:	e9 78 ff ff ff 	jmp	-136 <runtime.markBitsForAddr+0x2a>
  40c102:	48 8b 15 bf 14 0a 00 	movq	660671(%rip), %rdx
  40c109:	48 39 d0 	cmpq	%rdx, %rax
  40c10c:	0f 82 58 ff ff ff 	jb	-168 <runtime.markBitsForAddr+0x1a>
  40c112:	48 8b 1d b7 14 0a 00 	movq	660663(%rip), %rbx
  40c119:	48 39 d8 	cmpq	%rbx, %rax
  40c11c:	0f 83 48 ff ff ff 	jae	-184 <runtime.markBitsForAddr+0x1a>
  40c122:	48 8b 1d c7 11 0a 00 	movq	659911(%rip), %rbx
  40c129:	48 8b 35 b8 11 0a 00 	movq	659896(%rip), %rsi
  40c130:	48 89 c7 	movq	%rax, %rdi
  40c133:	48 29 d0 	subq	%rdx, %rax
  40c136:	48 c1 e8 0d 	shrq	$13, %rax
  40c13a:	48 39 d8 	cmpq	%rbx, %rax
  40c13d:	73 0c 	jae	12 <runtime.markBitsForAddr+0xfb>
  40c13f:	48 8b 0c c6 	movq	(%rsi,%rax,8), %rcx
  40c143:	48 89 f8 	movq	%rdi, %rax
  40c146:	e9 21 ff ff ff 	jmp	-223 <runtime.markBitsForAddr+0x1c>
  40c14b:	e8 f0 38 01 00 	callq	80112 <runtime.panicindex>
  40c150:	0f 0b 	ud2
  40c152:	cc 	int3
  40c153:	cc 	int3
  40c154:	cc 	int3
  40c155:	cc 	int3
  40c156:	cc 	int3
  40c157:	cc 	int3
  40c158:	cc 	int3
  40c159:	cc 	int3
  40c15a:	cc 	int3
  40c15b:	cc 	int3
  40c15c:	cc 	int3
  40c15d:	cc 	int3
  40c15e:	cc 	int3
  40c15f:	cc 	int3

runtime.heapBitsForSpan:
  40c160:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40c169:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40c16d:	0f 86 21 01 00 00 	jbe	289 <runtime.heapBitsForSpan+0x134>
  40c173:	48 83 ec 28 	subq	$40, %rsp
  40c177:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  40c17c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  40c181:	48 8b 05 40 14 0a 00 	movq	660544(%rip), %rax
  40c188:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  40c18d:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  40c192:	48 39 c1 	cmpq	%rax, %rcx
  40c195:	72 3e 	jb	62 <runtime.heapBitsForSpan+0x75>
  40c197:	48 8b 15 32 14 0a 00 	movq	660530(%rip), %rdx
  40c19e:	48 39 d1 	cmpq	%rdx, %rcx
  40c1a1:	73 32 	jae	50 <runtime.heapBitsForSpan+0x75>
  40c1a3:	48 29 c1 	subq	%rax, %rcx
  40c1a6:	48 8b 05 0b 14 0a 00 	movq	660491(%rip), %rax
  40c1ad:	48 89 ca 	movq	%rcx, %rdx
  40c1b0:	48 c1 e9 05 	shrq	$5, %rcx
  40c1b4:	48 29 c8 	subq	%rcx, %rax
  40c1b7:	48 ff c8 	decq	%rax
  40c1ba:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  40c1bf:	48 c1 ea 03 	shrq	$3, %rdx
  40c1c3:	48 83 e2 03 	andq	$3, %rdx
  40c1c7:	89 54 24 40 	movl	%edx, 64(%rsp)
  40c1cb:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  40c1d0:	48 83 c4 28 	addq	$40, %rsp
  40c1d4:	c3 	retq
  40c1d5:	48 8b 05 f4 13 0a 00 	movq	660468(%rip), %rax
  40c1dc:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40c1e1:	e8 1a 59 01 00 	callq	88346 <runtime.printlock>
  40c1e6:	48 8d 05 d1 e6 05 00 	leaq	386769(%rip), %rax
  40c1ed:	48 89 04 24 	movq	%rax, (%rsp)
  40c1f1:	48 c7 44 24 08 0e 00 00 00 	movq	$14, 8(%rsp)
  40c1fa:	e8 41 62 01 00 	callq	90689 <runtime.printstring>
  40c1ff:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40c204:	48 89 04 24 	movq	%rax, (%rsp)
  40c208:	e8 e3 60 01 00 	callq	90339 <runtime.printhex>
  40c20d:	48 8d 05 1b e7 05 00 	leaq	386843(%rip), %rax
  40c214:	48 89 04 24 	movq	%rax, (%rsp)
  40c218:	48 c7 44 24 08 0f 00 00 00 	movq	$15, 8(%rsp)
  40c221:	e8 1a 62 01 00 	callq	90650 <runtime.printstring>
  40c226:	48 8b 44 24 18 	movq	24(%rsp), %rax
  40c22b:	48 89 04 24 	movq	%rax, (%rsp)
  40c22f:	e8 bc 60 01 00 	callq	90300 <runtime.printhex>
  40c234:	48 8d 05 19 da 05 00 	leaq	383513(%rip), %rax
  40c23b:	48 89 04 24 	movq	%rax, (%rsp)
  40c23f:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  40c248:	e8 f3 61 01 00 	callq	90611 <runtime.printstring>
  40c24d:	48 8b 44 24 10 	movq	16(%rsp), %rax
  40c252:	48 89 04 24 	movq	%rax, (%rsp)
  40c256:	e8 95 60 01 00 	callq	90261 <runtime.printhex>
  40c25b:	48 8d 05 08 da 05 00 	leaq	383496(%rip), %rax
  40c262:	48 89 04 24 	movq	%rax, (%rsp)
  40c266:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  40c26f:	e8 cc 61 01 00 	callq	90572 <runtime.printstring>
  40c274:	e8 07 59 01 00 	callq	88327 <runtime.printunlock>
  40c279:	48 8d 05 9c 09 06 00 	leaq	395676(%rip), %rax
  40c280:	48 89 04 24 	movq	%rax, (%rsp)
  40c284:	48 c7 44 24 08 22 00 00 00 	movq	$34, 8(%rsp)
  40c28d:	e8 3e 4f 01 00 	callq	85822 <runtime.throw>
  40c292:	0f 0b 	ud2
  40c294:	e8 d7 82 03 00 	callq	230103 <runtime.morestack_noctxt>
  40c299:	e9 c2 fe ff ff 	jmp	-318 <runtime.heapBitsForSpan>
  40c29e:	cc 	int3
  40c29f:	cc 	int3

runtime.heapBitsForObject:
  40c2a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40c2a9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40c2ad:	0f 86 69 04 00 00 	jbe	1129 <runtime.heapBitsForObject+0x47c>
  40c2b3:	48 83 ec 50 	subq	$80, %rsp
  40c2b7:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  40c2bc:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  40c2c1:	48 8b 05 00 13 0a 00 	movq	660224(%rip), %rax
  40c2c8:	48 8b 54 24 58 	movq	88(%rsp), %rdx
  40c2cd:	48 39 c2 	cmpq	%rax, %rdx
  40c2d0:	73 3f 	jae	63 <runtime.heapBitsForObject+0x71>
  40c2d2:	48 c7 44 24 70 00 00 00 00 	movq	$0, 112(%rsp)
  40c2db:	48 c7 44 24 78 00 00 00 00 	movq	$0, 120(%rsp)
  40c2e4:	c7 84 24 80 00 00 00 00 00 00 00 	movl	$0, 128(%rsp)
  40c2ef:	48 c7 84 24 88 00 00 00 00 00 00 00 	movq	$0, 136(%rsp)
  40c2fb:	48 c7 84 24 90 00 00 00 00 00 00 00 	movq	$0, 144(%rsp)
  40c307:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  40c30c:	48 83 c4 50 	addq	$80, %rsp
  40c310:	c3 	retq
  40c311:	48 8b 1d b8 12 0a 00 	movq	660152(%rip), %rbx
  40c318:	48 39 da 	cmpq	%rbx, %rdx
  40c31b:	73 b5 	jae	-75 <runtime.heapBitsForObject+0x32>
  40c31d:	48 89 d3 	movq	%rdx, %rbx
  40c320:	48 29 c2 	subq	%rax, %rdx
  40c323:	48 c1 ea 0d 	shrq	$13, %rdx
  40c327:	48 8b 35 c2 0f 0a 00 	movq	659394(%rip), %rsi
  40c32e:	48 8b 3d b3 0f 0a 00 	movq	659379(%rip), %rdi
  40c335:	48 39 f2 	cmpq	%rsi, %rdx
  40c338:	0f 83 d7 03 00 00 	jae	983 <runtime.heapBitsForObject+0x475>
  40c33e:	48 8b 34 d7 	movq	(%rdi,%rdx,8), %rsi
  40c342:	48 85 f6 	testq	%rsi, %rsi
  40c345:	74 10 	je	16 <runtime.heapBitsForObject+0xb7>
  40c347:	48 8b 7e 18 	movq	24(%rsi), %rdi
  40c34b:	48 39 fb 	cmpq	%rdi, %rbx
  40c34e:	0f 83 a9 02 00 00 	jae	681 <runtime.heapBitsForObject+0x35d>
  40c354:	48 85 f6 	testq	%rsi, %rsi
  40c357:	74 08 	je	8 <runtime.heapBitsForObject+0xc1>
  40c359:	0f b6 46 64 	movzbl	100(%rsi), %eax
  40c35d:	3c 02 	cmpb	$2, %al
  40c35f:	75 3b 	jne	59 <runtime.heapBitsForObject+0xfc>
  40c361:	48 c7 44 24 70 00 00 00 00 	movq	$0, 112(%rsp)
  40c36a:	48 c7 44 24 78 00 00 00 00 	movq	$0, 120(%rsp)
  40c373:	c7 84 24 80 00 00 00 00 00 00 00 	movl	$0, 128(%rsp)
  40c37e:	48 89 b4 24 88 00 00 00 	movq	%rsi, 136(%rsp)
  40c386:	48 c7 84 24 90 00 00 00 00 00 00 00 	movq	$0, 144(%rsp)
  40c392:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  40c397:	48 83 c4 50 	addq	$80, %rsp
  40c39b:	c3 	retq
  40c39c:	8b 05 42 77 0b 00 	movl	751426(%rip), %eax
  40c3a2:	85 c0 	testl	%eax, %eax
  40c3a4:	75 3b 	jne	59 <runtime.heapBitsForObject+0x141>
  40c3a6:	48 c7 44 24 70 00 00 00 00 	movq	$0, 112(%rsp)
  40c3af:	48 c7 44 24 78 00 00 00 00 	movq	$0, 120(%rsp)
  40c3b8:	c7 84 24 80 00 00 00 00 00 00 00 	movl	$0, 128(%rsp)
  40c3c3:	48 89 b4 24 88 00 00 00 	movq	%rsi, 136(%rsp)
  40c3cb:	48 c7 84 24 90 00 00 00 00 00 00 00 	movq	$0, 144(%rsp)
  40c3d7:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  40c3dc:	48 83 c4 50 	addq	$80, %rsp
  40c3e0:	c3 	retq
  40c3e1:	48 89 74 24 40 	movq	%rsi, 64(%rsp)
  40c3e6:	48 89 54 24 38 	movq	%rdx, 56(%rsp)
  40c3eb:	e8 10 57 01 00 	callq	87824 <runtime.printlock>
  40c3f0:	e8 0b 57 01 00 	callq	87819 <runtime.printlock>
  40c3f5:	48 8d 05 c7 e8 05 00 	leaq	387271(%rip), %rax
  40c3fc:	48 89 04 24 	movq	%rax, (%rsp)
  40c400:	48 c7 44 24 08 11 00 00 00 	movq	$17, 8(%rsp)
  40c409:	e8 32 60 01 00 	callq	90162 <runtime.printstring>
  40c40e:	48 8b 44 24 58 	movq	88(%rsp), %rax
  40c413:	48 89 04 24 	movq	%rax, (%rsp)
  40c417:	e8 d4 5e 01 00 	callq	89812 <runtime.printhex>
  40c41c:	e8 5f 57 01 00 	callq	87903 <runtime.printunlock>
  40c421:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40c426:	0f b6 48 64 	movzbl	100(%rax), %ecx
  40c42a:	80 f9 01 	cmpb	$1, %cl
  40c42d:	0f 84 a2 01 00 00 	je	418 <runtime.heapBitsForObject+0x335>
  40c433:	e8 c8 56 01 00 	callq	87752 <runtime.printlock>
  40c438:	48 8d 05 b2 eb 05 00 	leaq	388018(%rip), %rax
  40c43f:	48 89 04 24 	movq	%rax, (%rsp)
  40c443:	48 c7 44 24 08 14 00 00 00 	movq	$20, 8(%rsp)
  40c44c:	e8 ef 5f 01 00 	callq	90095 <runtime.printstring>
  40c451:	e8 2a 57 01 00 	callq	87850 <runtime.printunlock>
  40c456:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40c45b:	0f b6 48 64 	movzbl	100(%rax), %ecx
  40c45f:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  40c464:	48 8b 90 80 00 00 00 	movq	128(%rax), %rdx
  40c46b:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  40c470:	48 8b 40 18 	movq	24(%rax), %rax
  40c474:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  40c479:	e8 82 56 01 00 	callq	87682 <runtime.printlock>
  40c47e:	48 8d 05 e8 d8 05 00 	leaq	383208(%rip), %rax
  40c485:	48 89 04 24 	movq	%rax, (%rsp)
  40c489:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  40c492:	e8 a9 5f 01 00 	callq	90025 <runtime.printstring>
  40c497:	48 8b 44 24 38 	movq	56(%rsp), %rax
  40c49c:	48 89 04 24 	movq	%rax, (%rsp)
  40c4a0:	e8 4b 5e 01 00 	callq	89675 <runtime.printhex>
  40c4a5:	48 8d 05 13 e2 05 00 	leaq	385555(%rip), %rax
  40c4ac:	48 89 04 24 	movq	%rax, (%rsp)
  40c4b0:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  40c4b9:	e8 82 5f 01 00 	callq	89986 <runtime.printstring>
  40c4be:	48 8b 44 24 20 	movq	32(%rsp), %rax
  40c4c3:	48 89 04 24 	movq	%rax, (%rsp)
  40c4c7:	e8 24 5e 01 00 	callq	89636 <runtime.printhex>
  40c4cc:	48 8d 05 87 e0 05 00 	leaq	385159(%rip), %rax
  40c4d3:	48 89 04 24 	movq	%rax, (%rsp)
  40c4d7:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  40c4e0:	e8 5b 5f 01 00 	callq	89947 <runtime.printstring>
  40c4e5:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40c4ea:	48 89 04 24 	movq	%rax, (%rsp)
  40c4ee:	e8 fd 5d 01 00 	callq	89597 <runtime.printhex>
  40c4f3:	48 8d 05 6c e0 05 00 	leaq	385132(%rip), %rax
  40c4fa:	48 89 04 24 	movq	%rax, (%rsp)
  40c4fe:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  40c507:	e8 34 5f 01 00 	callq	89908 <runtime.printstring>
  40c50c:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40c511:	48 89 04 24 	movq	%rax, (%rsp)
  40c515:	e8 56 5c 01 00 	callq	89174 <runtime.printuint>
  40c51a:	e8 71 58 01 00 	callq	88177 <runtime.printnl>
  40c51f:	e8 5c 56 01 00 	callq	87644 <runtime.printunlock>
  40c524:	48 8b 44 24 60 	movq	96(%rsp), %rax
  40c529:	48 85 c0 	testq	%rax, %rax
  40c52c:	0f 84 b4 01 00 00 	je	436 <runtime.heapBitsForObject+0x446>
  40c532:	e8 c9 55 01 00 	callq	87497 <runtime.printlock>
  40c537:	48 8d 05 77 00 06 00 	leaq	393335(%rip), %rax
  40c53e:	48 89 04 24 	movq	%rax, (%rsp)
  40c542:	48 c7 44 24 08 1e 00 00 00 	movq	$30, 8(%rsp)
  40c54b:	e8 f0 5e 01 00 	callq	89840 <runtime.printstring>
  40c550:	48 8b 44 24 60 	movq	96(%rsp), %rax
  40c555:	48 89 04 24 	movq	%rax, (%rsp)
  40c559:	e8 92 5d 01 00 	callq	89490 <runtime.printhex>
  40c55e:	48 8d 05 ee d6 05 00 	leaq	382702(%rip), %rax
  40c565:	48 89 04 24 	movq	%rax, (%rsp)
  40c569:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  40c572:	e8 c9 5e 01 00 	callq	89801 <runtime.printstring>
  40c577:	48 8b 44 24 68 	movq	104(%rsp), %rax
  40c57c:	48 89 04 24 	movq	%rax, (%rsp)
  40c580:	e8 6b 5d 01 00 	callq	89451 <runtime.printhex>
  40c585:	48 8d 05 de d6 05 00 	leaq	382686(%rip), %rax
  40c58c:	48 89 04 24 	movq	%rax, (%rsp)
  40c590:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  40c599:	e8 a2 5e 01 00 	callq	89762 <runtime.printstring>
  40c59e:	e8 dd 55 01 00 	callq	87517 <runtime.printunlock>
  40c5a3:	48 8d 05 9d d8 05 00 	leaq	383133(%rip), %rax
  40c5aa:	48 89 04 24 	movq	%rax, (%rsp)
  40c5ae:	48 c7 44 24 08 06 00 00 00 	movq	$6, 8(%rsp)
  40c5b7:	48 8b 44 24 60 	movq	96(%rsp), %rax
  40c5bc:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40c5c1:	48 8b 44 24 68 	movq	104(%rsp), %rax
  40c5c6:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  40c5cb:	e8 40 aa 00 00 	callq	43584 <runtime.gcDumpObject>
  40c5d0:	e9 11 01 00 00 	jmp	273 <runtime.heapBitsForObject+0x446>
  40c5d5:	e8 26 55 01 00 	callq	87334 <runtime.printlock>
  40c5da:	48 8d 05 85 f3 05 00 	leaq	390021(%rip), %rax
  40c5e1:	48 89 04 24 	movq	%rax, (%rsp)
  40c5e5:	48 c7 44 24 08 19 00 00 00 	movq	$25, 8(%rsp)
  40c5ee:	e8 4d 5e 01 00 	callq	89677 <runtime.printstring>
  40c5f3:	e8 88 55 01 00 	callq	87432 <runtime.printunlock>
  40c5f8:	e9 59 fe ff ff 	jmp	-423 <runtime.heapBitsForObject+0x1b6>
  40c5fd:	4c 8b 86 80 00 00 00 	movq	128(%rsi), %r8
  40c604:	4c 39 c3 	cmpq	%r8, %rbx
  40c607:	72 08 	jb	8 <runtime.heapBitsForObject+0x371>
  40c609:	48 85 f6 	testq	%rsi, %rsi
  40c60c:	e9 46 fd ff ff 	jmp	-698 <runtime.heapBitsForObject+0xb7>
  40c611:	44 0f b6 46 64 	movzbl	100(%rsi), %r8d
  40c616:	41 80 f8 01 	cmpb	$1, %r8b
  40c61a:	74 08 	je	8 <runtime.heapBitsForObject+0x384>
  40c61c:	48 85 f6 	testq	%rsi, %rsi
  40c61f:	e9 33 fd ff ff 	jmp	-717 <runtime.heapBitsForObject+0xb7>
  40c624:	0f b7 56 5e 	movzwl	94(%rsi), %edx
  40c628:	66 85 d2 	testw	%dx, %dx
  40c62b:	74 6a 	je	106 <runtime.heapBitsForObject+0x3f7>
  40c62d:	48 29 fb 	subq	%rdi, %rbx
  40c630:	0f b7 d2 	movzwl	%dx, %edx
  40c633:	48 21 da 	andq	%rbx, %rdx
  40c636:	48 8d 1c 3a 	leaq	(%rdx,%rdi), %rbx
  40c63a:	0f b6 4e 66 	movzbl	102(%rsi), %ecx
  40c63e:	48 d3 ea 	shrq	%cl, %rdx
  40c641:	80 f9 40 	cmpb	$64, %cl
  40c644:	48 19 ff 	sbbq	%rdi, %rdi
  40c647:	48 21 fa 	andq	%rdi, %rdx
  40c64a:	48 89 d9 	movq	%rbx, %rcx
  40c64d:	48 29 c3 	subq	%rax, %rbx
  40c650:	48 8b 05 61 0f 0a 00 	movq	659297(%rip), %rax
  40c657:	48 89 df 	movq	%rbx, %rdi
  40c65a:	48 c1 eb 05 	shrq	$5, %rbx
  40c65e:	48 29 d8 	subq	%rbx, %rax
  40c661:	48 ff c8 	decq	%rax
  40c664:	48 89 4c 24 70 	movq	%rcx, 112(%rsp)
  40c669:	48 89 44 24 78 	movq	%rax, 120(%rsp)
  40c66e:	48 c1 ef 03 	shrq	$3, %rdi
  40c672:	48 83 e7 03 	andq	$3, %rdi
  40c676:	89 bc 24 80 00 00 00 	movl	%edi, 128(%rsp)
  40c67d:	48 89 b4 24 88 00 00 00 	movq	%rsi, 136(%rsp)
  40c685:	48 89 94 24 90 00 00 00 	movq	%rdx, 144(%rsp)
  40c68d:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  40c692:	48 83 c4 50 	addq	$80, %rsp
  40c696:	c3 	retq
  40c697:	48 29 fb 	subq	%rdi, %rbx
  40c69a:	48 8b 56 68 	movq	104(%rsi), %rdx
  40c69e:	48 39 d3 	cmpq	%rdx, %rbx
  40c6a1:	72 3b 	jb	59 <runtime.heapBitsForObject+0x43e>
  40c6a3:	0f b6 4e 66 	movzbl	102(%rsi), %ecx
  40c6a7:	48 d3 eb 	shrq	%cl, %rbx
  40c6aa:	80 f9 40 	cmpb	$64, %cl
  40c6ad:	4d 19 c0 	sbbq	%r8, %r8
  40c6b0:	4c 21 c3 	andq	%r8, %rbx
  40c6b3:	44 0f b7 46 5c 	movzwl	92(%rsi), %r8d
  40c6b8:	4c 0f af c3 	imulq	%rbx, %r8
  40c6bc:	0f b6 4e 67 	movzbl	103(%rsi), %ecx
  40c6c0:	49 d3 e8 	shrq	%cl, %r8
  40c6c3:	80 f9 40 	cmpb	$64, %cl
  40c6c6:	48 19 db 	sbbq	%rbx, %rbx
  40c6c9:	49 21 d8 	andq	%rbx, %r8
  40c6cc:	49 0f af d0 	imulq	%r8, %rdx
  40c6d0:	48 01 fa 	addq	%rdi, %rdx
  40c6d3:	48 89 d3 	movq	%rdx, %rbx
  40c6d6:	4c 89 c2 	movq	%r8, %rdx
  40c6d9:	e9 6c ff ff ff 	jmp	-148 <runtime.heapBitsForObject+0x3aa>
  40c6de:	48 89 fa 	movq	%rdi, %rdx
  40c6e1:	45 31 c0 	xorl	%r8d, %r8d
  40c6e4:	eb ed 	jmp	-19 <runtime.heapBitsForObject+0x433>
  40c6e6:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  40c6ef:	48 8b 40 30 	movq	48(%rax), %rax
  40c6f3:	c6 80 29 01 00 00 02 	movb	$2, 297(%rax)
  40c6fa:	48 8d 05 f9 16 06 00 	leaq	399097(%rip), %rax
  40c701:	48 89 04 24 	movq	%rax, (%rsp)
  40c705:	48 c7 44 24 08 3e 00 00 00 	movq	$62, 8(%rsp)
  40c70e:	e8 bd 4a 01 00 	callq	84669 <runtime.throw>
  40c713:	0f 0b 	ud2
  40c715:	e8 26 33 01 00 	callq	78630 <runtime.panicindex>
  40c71a:	0f 0b 	ud2
  40c71c:	e8 4f 7e 03 00 	callq	228943 <runtime.morestack_noctxt>
  40c721:	e9 7a fb ff ff 	jmp	-1158 <runtime.heapBitsForObject>
  40c726:	cc 	int3
  40c727:	cc 	int3
  40c728:	cc 	int3
  40c729:	cc 	int3
  40c72a:	cc 	int3
  40c72b:	cc 	int3
  40c72c:	cc 	int3
  40c72d:	cc 	int3
  40c72e:	cc 	int3
  40c72f:	cc 	int3

runtime.bulkBarrierPreWrite:
  40c730:	48 83 ec 60 	subq	$96, %rsp
  40c734:	48 89 6c 24 58 	movq	%rbp, 88(%rsp)
  40c739:	48 8d 6c 24 58 	leaq	88(%rsp), %rbp
  40c73e:	48 8b 44 24 70 	movq	112(%rsp), %rax
  40c743:	48 8b 54 24 68 	movq	104(%rsp), %rdx
  40c748:	48 89 c3 	movq	%rax, %rbx
  40c74b:	48 09 d0 	orq	%rdx, %rax
  40c74e:	48 8b 74 24 78 	movq	120(%rsp), %rsi
  40c753:	48 09 f0 	orq	%rsi, %rax
  40c756:	48 a9 07 00 00 00 	testq	$7, %rax
  40c75c:	0f 85 80 03 00 00 	jne	896 <runtime.bulkBarrierPreWrite+0x3b2>
  40c762:	0f b6 05 ab 72 0b 00 	movzbl	750251(%rip), %eax
  40c769:	84 c0 	testb	%al, %al
  40c76b:	0f 84 60 03 00 00 	je	864 <runtime.bulkBarrierPreWrite+0x3a1>
  40c771:	48 85 d2 	testq	%rdx, %rdx
  40c774:	0f 85 2d 01 00 00 	jne	301 <runtime.bulkBarrierPreWrite+0x177>
  40c77a:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  40c783:	48 8b 40 30 	movq	48(%rax), %rax
  40c787:	48 8b 80 c0 00 00 00 	movq	192(%rax), %rax
  40c78e:	48 85 c0 	testq	%rax, %rax
  40c791:	74 15 	je	21 <runtime.bulkBarrierPreWrite+0x78>
  40c793:	48 8b 08 	movq	(%rax), %rcx
  40c796:	48 39 d1 	cmpq	%rdx, %rcx
  40c799:	77 0d 	ja	13 <runtime.bulkBarrierPreWrite+0x78>
  40c79b:	48 8b 40 08 	movq	8(%rax), %rax
  40c79f:	48 39 c2 	cmpq	%rax, %rdx
  40c7a2:	0f 82 f5 00 00 00 	jb	245 <runtime.bulkBarrierPreWrite+0x16d>
  40c7a8:	48 8b 05 c9 ae 09 00 	movq	634569(%rip), %rax
  40c7af:	48 85 c0 	testq	%rax, %rax
  40c7b2:	0f 84 dc 00 00 00 	je	220 <runtime.bulkBarrierPreWrite+0x164>
  40c7b8:	48 8b 48 08 	movq	8(%rax), %rcx
  40c7bc:	48 8b 00 	movq	(%rax), %rax
  40c7bf:	31 ff 	xorl	%edi, %edi
  40c7c1:	eb 03 	jmp	3 <runtime.bulkBarrierPreWrite+0x96>
  40c7c3:	48 ff c7 	incq	%rdi
  40c7c6:	48 39 cf 	cmpq	%rcx, %rdi
  40c7c9:	7d 4d 	jge	77 <runtime.bulkBarrierPreWrite+0xe8>
  40c7cb:	4c 8b 04 f8 	movq	(%rax,%rdi,8), %r8
  40c7cf:	4d 8b 88 80 00 00 00 	movq	128(%r8), %r9
  40c7d6:	49 39 d1 	cmpq	%rdx, %r9
  40c7d9:	77 e8 	ja	-24 <runtime.bulkBarrierPreWrite+0x93>
  40c7db:	4d 8b 90 88 00 00 00 	movq	136(%r8), %r10
  40c7e2:	4c 39 d2 	cmpq	%r10, %rdx
  40c7e5:	73 dc 	jae	-36 <runtime.bulkBarrierPreWrite+0x93>
  40c7e7:	49 8b 80 98 01 00 00 	movq	408(%r8), %rax
  40c7ee:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  40c7f3:	48 89 14 24 	movq	%rdx, (%rsp)
  40c7f7:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  40c7fc:	48 89 74 24 10 	movq	%rsi, 16(%rsp)
  40c801:	4c 29 ca 	subq	%r9, %rdx
  40c804:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  40c809:	e8 f2 02 00 00 	callq	754 <runtime.bulkBarrierBitmap>
  40c80e:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  40c813:	48 83 c4 60 	addq	$96, %rsp
  40c817:	c3 	retq
  40c818:	48 8b 05 59 ae 09 00 	movq	634457(%rip), %rax
  40c81f:	48 85 c0 	testq	%rax, %rax
  40c822:	74 6a 	je	106 <runtime.bulkBarrierPreWrite+0x15e>
  40c824:	48 8b 48 08 	movq	8(%rax), %rcx
  40c828:	48 8b 00 	movq	(%rax), %rax
  40c82b:	31 ff 	xorl	%edi, %edi
  40c82d:	eb 03 	jmp	3 <runtime.bulkBarrierPreWrite+0x102>
  40c82f:	48 ff c7 	incq	%rdi
  40c832:	48 39 cf 	cmpq	%rcx, %rdi
  40c835:	7d 4d 	jge	77 <runtime.bulkBarrierPreWrite+0x154>
  40c837:	4c 8b 04 f8 	movq	(%rax,%rdi,8), %r8
  40c83b:	4d 8b 88 90 00 00 00 	movq	144(%r8), %r9
  40c842:	49 39 d1 	cmpq	%rdx, %r9
  40c845:	77 e8 	ja	-24 <runtime.bulkBarrierPreWrite+0xff>
  40c847:	4d 8b 90 98 00 00 00 	movq	152(%r8), %r10
  40c84e:	4c 39 d2 	cmpq	%r10, %rdx
  40c851:	73 dc 	jae	-36 <runtime.bulkBarrierPreWrite+0xff>
  40c853:	49 8b 80 a8 01 00 00 	movq	424(%r8), %rax
  40c85a:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  40c85f:	48 89 14 24 	movq	%rdx, (%rsp)
  40c863:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  40c868:	48 89 74 24 10 	movq	%rsi, 16(%rsp)
  40c86d:	4c 29 ca 	subq	%r9, %rdx
  40c870:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  40c875:	e8 86 02 00 00 	callq	646 <runtime.bulkBarrierBitmap>
  40c87a:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  40c87f:	48 83 c4 60 	addq	$96, %rsp
  40c883:	c3 	retq
  40c884:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  40c889:	48 83 c4 60 	addq	$96, %rsp
  40c88d:	c3 	retq
  40c88e:	31 c0 	xorl	%eax, %eax
  40c890:	31 c9 	xorl	%ecx, %ecx
  40c892:	eb 97 	jmp	-105 <runtime.bulkBarrierPreWrite+0xfb>
  40c894:	31 c9 	xorl	%ecx, %ecx
  40c896:	31 c0 	xorl	%eax, %eax
  40c898:	e9 22 ff ff ff 	jmp	-222 <runtime.bulkBarrierPreWrite+0x8f>
  40c89d:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  40c8a2:	48 83 c4 60 	addq	$96, %rsp
  40c8a6:	c3 	retq
  40c8a7:	48 8b 05 1a 0d 0a 00 	movq	658714(%rip), %rax
  40c8ae:	48 39 c2 	cmpq	%rax, %rdx
  40c8b1:	0f 82 c3 fe ff ff 	jb	-317 <runtime.bulkBarrierPreWrite+0x4a>
  40c8b7:	48 8b 3d 12 0d 0a 00 	movq	658706(%rip), %rdi
  40c8be:	48 39 fa 	cmpq	%rdi, %rdx
  40c8c1:	0f 83 b3 fe ff ff 	jae	-333 <runtime.bulkBarrierPreWrite+0x4a>
  40c8c7:	48 8b 3d 22 0a 0a 00 	movq	657954(%rip), %rdi
  40c8ce:	4c 8b 05 13 0a 0a 00 	movq	657939(%rip), %r8
  40c8d5:	49 89 d1 	movq	%rdx, %r9
  40c8d8:	48 29 c2 	subq	%rax, %rdx
  40c8db:	48 89 d0 	movq	%rdx, %rax
  40c8de:	48 c1 ea 0d 	shrq	$13, %rdx
  40c8e2:	48 39 fa 	cmpq	%rdi, %rdx
  40c8e5:	0f 83 f0 01 00 00 	jae	496 <runtime.bulkBarrierPreWrite+0x3ab>
  40c8eb:	49 8b 14 d0 	movq	(%r8,%rdx,8), %rdx
  40c8ef:	48 85 d2 	testq	%rdx, %rdx
  40c8f2:	74 09 	je	9 <runtime.bulkBarrierPreWrite+0x1cd>
  40c8f4:	48 8b 7a 18 	movq	24(%rdx), %rdi
  40c8f8:	49 39 f9 	cmpq	%rdi, %r9
  40c8fb:	73 08 	jae	8 <runtime.bulkBarrierPreWrite+0x1d5>
  40c8fd:	4c 89 ca 	movq	%r9, %rdx
  40c900:	e9 75 fe ff ff 	jmp	-395 <runtime.bulkBarrierPreWrite+0x4a>
  40c905:	48 8b ba 80 00 00 00 	movq	128(%rdx), %rdi
  40c90c:	49 39 f9 	cmpq	%rdi, %r9
  40c90f:	73 ec 	jae	-20 <runtime.bulkBarrierPreWrite+0x1cd>
  40c911:	0f b6 52 64 	movzbl	100(%rdx), %edx
  40c915:	80 fa 01 	cmpb	$1, %dl
  40c918:	75 e3 	jne	-29 <runtime.bulkBarrierPreWrite+0x1cd>
  40c91a:	64 48 8b 14 25 f8 ff ff ff 	movq	%fs:-8, %rdx
  40c923:	48 8b 52 30 	movq	48(%rdx), %rdx
  40c927:	48 8b ba d0 00 00 00 	movq	208(%rdx), %rdi
  40c92e:	48 89 7c 24 50 	movq	%rdi, 80(%rsp)
  40c933:	84 07 	testb	%al, (%rdi)
  40c935:	84 02 	testb	%al, (%rdx)
  40c937:	48 8d 97 90 12 00 00 	leaq	4752(%rdi), %rdx
  40c93e:	48 89 54 24 48 	movq	%rdx, 72(%rsp)
  40c943:	49 89 c0 	movq	%rax, %r8
  40c946:	48 c1 e8 03 	shrq	$3, %rax
  40c94a:	4c 8b 15 67 0c 0a 00 	movq	658535(%rip), %r10
  40c951:	49 c1 e8 05 	shrq	$5, %r8
  40c955:	4d 29 c2 	subq	%r8, %r10
  40c958:	4d 8d 42 ff 	leaq	-1(%r10), %r8
  40c95c:	48 83 e0 03 	andq	$3, %rax
  40c960:	48 85 db 	testq	%rbx, %rbx
  40c963:	0f 85 b5 00 00 00 	jne	181 <runtime.bulkBarrierPreWrite+0x2ee>
  40c969:	31 c9 	xorl	%ecx, %ecx
  40c96b:	eb 04 	jmp	4 <runtime.bulkBarrierPreWrite+0x241>
  40c96d:	49 8d 4a 08 	leaq	8(%r10), %rcx
  40c971:	48 39 f1 	cmpq	%rsi, %rcx
  40c974:	0f 83 9a 00 00 00 	jae	154 <runtime.bulkBarrierPreWrite+0x2e4>
  40c97a:	41 0f b6 18 	movzbl	(%r8), %ebx
  40c97e:	49 89 ca 	movq	%rcx, %r10
  40c981:	89 c1 	movl	%eax, %ecx
  40c983:	d3 eb 	shrl	%cl, %ebx
  40c985:	0f ba e3 00 	btl	$0, %ebx
  40c989:	73 39 	jae	57 <runtime.bulkBarrierPreWrite+0x294>
  40c98b:	4b 8d 1c 0a 	leaq	(%r10,%r9), %rbx
  40c98f:	84 02 	testb	%al, (%rdx)
  40c991:	4c 8b 9f 90 12 00 00 	movq	4752(%rdi), %r11
  40c998:	48 8b 1b 	movq	(%rbx), %rbx
  40c99b:	49 89 1b 	movq	%rbx, (%r11)
  40c99e:	49 c7 43 08 00 00 00 00 	movq	$0, 8(%r11)
  40c9a6:	48 8b 9f 90 12 00 00 	movq	4752(%rdi), %rbx
  40c9ad:	48 83 c3 10 	addq	$16, %rbx
  40c9b1:	48 89 9f 90 12 00 00 	movq	%rbx, 4752(%rdi)
  40c9b8:	4c 8b 9f 98 12 00 00 	movq	4760(%rdi), %r11
  40c9bf:	49 39 db 	cmpq	%rbx, %r11
  40c9c2:	74 10 	je	16 <runtime.bulkBarrierPreWrite+0x2a4>
  40c9c4:	83 f8 03 	cmpl	$3, %eax
  40c9c7:	73 04 	jae	4 <runtime.bulkBarrierPreWrite+0x29d>
  40c9c9:	ff c0 	incl	%eax
  40c9cb:	eb a0 	jmp	-96 <runtime.bulkBarrierPreWrite+0x23d>
  40c9cd:	49 ff c8 	decq	%r8
  40c9d0:	31 c0 	xorl	%eax, %eax
  40c9d2:	eb 99 	jmp	-103 <runtime.bulkBarrierPreWrite+0x23d>
  40c9d4:	4c 89 54 24 30 	movq	%r10, 48(%rsp)
  40c9d9:	89 44 24 2c 	movl	%eax, 44(%rsp)
  40c9dd:	4c 89 44 24 38 	movq	%r8, 56(%rsp)
  40c9e2:	0f 57 c0 	xorps	%xmm0, %xmm0
  40c9e5:	0f 11 04 24 	movups	%xmm0, (%rsp)
  40c9e9:	e8 02 1b 01 00 	callq	72450 <runtime.wbBufFlush>
  40c9ee:	8b 44 24 2c 	movl	44(%rsp), %eax
  40c9f2:	89 c1 	movl	%eax, %ecx
  40c9f4:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  40c9f9:	48 8b 74 24 78 	movq	120(%rsp), %rsi
  40c9fe:	48 8b 7c 24 50 	movq	80(%rsp), %rdi
  40ca03:	4c 8b 44 24 38 	movq	56(%rsp), %r8
  40ca08:	4c 8b 4c 24 68 	movq	104(%rsp), %r9
  40ca0d:	4c 8b 54 24 30 	movq	48(%rsp), %r10
  40ca12:	eb b0 	jmp	-80 <runtime.bulkBarrierPreWrite+0x294>
  40ca14:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  40ca19:	48 83 c4 60 	addq	$96, %rsp
  40ca1d:	c3 	retq
  40ca1e:	31 c9 	xorl	%ecx, %ecx
  40ca20:	eb 04 	jmp	4 <runtime.bulkBarrierPreWrite+0x2f6>
  40ca22:	49 8d 4b 08 	leaq	8(%r11), %rcx
  40ca26:	48 39 f1 	cmpq	%rsi, %rcx
  40ca29:	73 e9 	jae	-23 <runtime.bulkBarrierPreWrite+0x2e4>
  40ca2b:	45 0f b6 10 	movzbl	(%r8), %r10d
  40ca2f:	49 89 cb 	movq	%rcx, %r11
  40ca32:	89 c1 	movl	%eax, %ecx
  40ca34:	41 d3 ea 	shrl	%cl, %r10d
  40ca37:	41 0f ba e2 00 	btl	$0, %r10d
  40ca3c:	73 3e 	jae	62 <runtime.bulkBarrierPreWrite+0x34c>
  40ca3e:	4f 8d 14 0b 	leaq	(%r11,%r9), %r10
  40ca42:	4d 8d 24 1b 	leaq	(%r11,%rbx), %r12
  40ca46:	84 02 	testb	%al, (%rdx)
  40ca48:	4c 8b af 90 12 00 00 	movq	4752(%rdi), %r13
  40ca4f:	4d 8b 12 	movq	(%r10), %r10
  40ca52:	4d 8b 24 24 	movq	(%r12), %r12
  40ca56:	4d 89 55 00 	movq	%r10, (%r13)
  40ca5a:	4d 89 65 08 	movq	%r12, 8(%r13)
  40ca5e:	4c 8b 97 90 12 00 00 	movq	4752(%rdi), %r10
  40ca65:	49 83 c2 10 	addq	$16, %r10
  40ca69:	4c 89 97 90 12 00 00 	movq	%r10, 4752(%rdi)
  40ca70:	4c 8b a7 98 12 00 00 	movq	4760(%rdi), %r12
  40ca77:	4d 39 d4 	cmpq	%r10, %r12
  40ca7a:	74 10 	je	16 <runtime.bulkBarrierPreWrite+0x35c>
  40ca7c:	83 f8 03 	cmpl	$3, %eax
  40ca7f:	73 04 	jae	4 <runtime.bulkBarrierPreWrite+0x355>
  40ca81:	ff c0 	incl	%eax
  40ca83:	eb 9d 	jmp	-99 <runtime.bulkBarrierPreWrite+0x2f2>
  40ca85:	49 ff c8 	decq	%r8
  40ca88:	31 c0 	xorl	%eax, %eax
  40ca8a:	eb 96 	jmp	-106 <runtime.bulkBarrierPreWrite+0x2f2>
  40ca8c:	4c 89 5c 24 30 	movq	%r11, 48(%rsp)
  40ca91:	89 44 24 28 	movl	%eax, 40(%rsp)
  40ca95:	4c 89 44 24 40 	movq	%r8, 64(%rsp)
  40ca9a:	0f 57 c0 	xorps	%xmm0, %xmm0
  40ca9d:	0f 11 04 24 	movups	%xmm0, (%rsp)
  40caa1:	e8 4a 1a 01 00 	callq	72266 <runtime.wbBufFlush>
  40caa6:	8b 44 24 28 	movl	40(%rsp), %eax
  40caaa:	89 c1 	movl	%eax, %ecx
  40caac:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  40cab1:	48 8b 5c 24 70 	movq	112(%rsp), %rbx
  40cab6:	48 8b 74 24 78 	movq	120(%rsp), %rsi
  40cabb:	48 8b 7c 24 50 	movq	80(%rsp), %rdi
  40cac0:	4c 8b 44 24 40 	movq	64(%rsp), %r8
  40cac5:	4c 8b 4c 24 68 	movq	104(%rsp), %r9
  40caca:	4c 8b 5c 24 30 	movq	48(%rsp), %r11
  40cacf:	eb ab 	jmp	-85 <runtime.bulkBarrierPreWrite+0x34c>
  40cad1:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  40cad6:	48 83 c4 60 	addq	$96, %rsp
  40cada:	c3 	retq
  40cadb:	e8 60 2f 01 00 	callq	77664 <runtime.panicindex>
  40cae0:	0f 0b 	ud2
  40cae2:	48 8d 05 55 07 06 00 	leaq	395093(%rip), %rax
  40cae9:	48 89 04 24 	movq	%rax, (%rsp)
  40caed:	48 c7 44 24 08 28 00 00 00 	movq	$40, 8(%rsp)
  40caf6:	e8 d5 46 01 00 	callq	83669 <runtime.throw>
  40cafb:	0f 0b 	ud2
  40cafd:	cc 	int3
  40cafe:	cc 	int3
  40caff:	cc 	int3

runtime.bulkBarrierBitmap:
  40cb00:	48 83 ec 40 	subq	$64, %rsp
  40cb04:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  40cb09:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  40cb0e:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  40cb17:	48 8b 40 30 	movq	48(%rax), %rax
  40cb1b:	48 8b 90 d0 00 00 00 	movq	208(%rax), %rdx
  40cb22:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  40cb27:	84 02 	testb	%al, (%rdx)
  40cb29:	84 00 	testb	%al, (%rax)
  40cb2b:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  40cb30:	48 89 c8 	movq	%rcx, %rax
  40cb33:	48 c1 e9 03 	shrq	$3, %rcx
  40cb37:	48 c1 e8 06 	shrq	$6, %rax
  40cb3b:	48 83 e1 07 	andq	$7, %rcx
  40cb3f:	bb 01 00 00 00 	movl	$1, %ebx
  40cb44:	d3 e3 	shll	%cl, %ebx
  40cb46:	48 8d b2 90 12 00 00 	leaq	4752(%rdx), %rsi
  40cb4d:	48 89 74 24 20 	movq	%rsi, 32(%rsp)
  40cb52:	48 8b 7c 24 68 	movq	104(%rsp), %rdi
  40cb57:	48 01 f8 	addq	%rdi, %rax
  40cb5a:	31 c9 	xorl	%ecx, %ecx
  40cb5c:	eb 07 	jmp	7 <runtime.bulkBarrierBitmap+0x65>
  40cb5e:	48 8d 48 08 	leaq	8(%rax), %rcx
  40cb62:	4c 89 c0 	movq	%r8, %rax
  40cb65:	48 8b 7c 24 58 	movq	88(%rsp), %rdi
  40cb6a:	48 39 f9 	cmpq	%rdi, %rcx
  40cb6d:	0f 83 71 01 00 00 	jae	369 <runtime.bulkBarrierBitmap+0x1e4>
  40cb73:	84 db 	testb	%bl, %bl
  40cb75:	0f 85 59 01 00 00 	jne	345 <runtime.bulkBarrierBitmap+0x1d4>
  40cb7b:	4c 8d 40 01 	leaq	1(%rax), %r8
  40cb7f:	41 84 00 	testb	%al, (%r8)
  40cb82:	41 b9 01 00 00 00 	movl	$1, %r9d
  40cb88:	42 0f b6 04 08 	movzbl	(%rax,%r9), %eax
  40cb8d:	84 c0 	testb	%al, %al
  40cb8f:	75 06 	jne	6 <runtime.bulkBarrierBitmap+0x97>
  40cb91:	48 8d 41 38 	leaq	56(%rcx), %rax
  40cb95:	eb c7 	jmp	-57 <runtime.bulkBarrierBitmap+0x5e>
  40cb97:	b8 01 00 00 00 	movl	$1, %eax
  40cb9c:	41 0f b6 18 	movzbl	(%r8), %ebx
  40cba0:	84 c3 	testb	%al, %bl
  40cba2:	0f 84 1d 01 00 00 	je	285 <runtime.bulkBarrierBitmap+0x1c5>
  40cba8:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  40cbad:	4c 89 44 24 28 	movq	%r8, 40(%rsp)
  40cbb2:	88 44 24 17 	movb	%al, 23(%rsp)
  40cbb6:	48 8b 5c 24 48 	movq	72(%rsp), %rbx
  40cbbb:	4c 8d 14 19 	leaq	(%rcx,%rbx), %r10
  40cbbf:	4c 8b 5c 24 50 	movq	80(%rsp), %r11
  40cbc4:	4d 85 db 	testq	%r11, %r11
  40cbc7:	75 7f 	jne	127 <runtime.bulkBarrierBitmap+0x148>
  40cbc9:	84 06 	testb	%al, (%rsi)
  40cbcb:	4c 8b a2 90 12 00 00 	movq	4752(%rdx), %r12
  40cbd2:	4d 8b 12 	movq	(%r10), %r10
  40cbd5:	4d 89 14 24 	movq	%r10, (%r12)
  40cbd9:	49 c7 44 24 08 00 00 00 00 	movq	$0, 8(%r12)
  40cbe2:	4c 8b 92 90 12 00 00 	movq	4752(%rdx), %r10
  40cbe9:	49 83 c2 10 	addq	$16, %r10
  40cbed:	4c 89 92 90 12 00 00 	movq	%r10, 4752(%rdx)
  40cbf4:	4c 8b a2 98 12 00 00 	movq	4760(%rdx), %r12
  40cbfb:	4d 39 d4 	cmpq	%r10, %r12
  40cbfe:	74 0c 	je	12 <runtime.bulkBarrierBitmap+0x10c>
  40cc00:	d1 e0 	shll	%eax
  40cc02:	89 c3 	movl	%eax, %ebx
  40cc04:	48 89 c8 	movq	%rcx, %rax
  40cc07:	e9 52 ff ff ff 	jmp	-174 <runtime.bulkBarrierBitmap+0x5e>
  40cc0c:	0f 57 c0 	xorps	%xmm0, %xmm0
  40cc0f:	0f 11 04 24 	movups	%xmm0, (%rsp)
  40cc13:	e8 d8 18 01 00 	callq	71896 <runtime.wbBufFlush>
  40cc18:	0f b6 44 24 17 	movzbl	23(%rsp), %eax
  40cc1d:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  40cc22:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  40cc27:	48 8b 5c 24 48 	movq	72(%rsp), %rbx
  40cc2c:	48 8b 74 24 20 	movq	32(%rsp), %rsi
  40cc31:	48 8b 7c 24 58 	movq	88(%rsp), %rdi
  40cc36:	4c 8b 44 24 28 	movq	40(%rsp), %r8
  40cc3b:	41 b9 01 00 00 00 	movl	$1, %r9d
  40cc41:	4c 8b 5c 24 50 	movq	80(%rsp), %r11
  40cc46:	eb b8 	jmp	-72 <runtime.bulkBarrierBitmap+0x100>
  40cc48:	4e 8d 24 19 	leaq	(%rcx,%r11), %r12
  40cc4c:	84 06 	testb	%al, (%rsi)
  40cc4e:	4c 8b aa 90 12 00 00 	movq	4752(%rdx), %r13
  40cc55:	4d 8b 12 	movq	(%r10), %r10
  40cc58:	4d 8b 24 24 	movq	(%r12), %r12
  40cc5c:	4d 89 55 00 	movq	%r10, (%r13)
  40cc60:	4d 89 65 08 	movq	%r12, 8(%r13)
  40cc64:	4c 8b 92 90 12 00 00 	movq	4752(%rdx), %r10
  40cc6b:	49 83 c2 10 	addq	$16, %r10
  40cc6f:	4c 89 92 90 12 00 00 	movq	%r10, 4752(%rdx)
  40cc76:	4c 8b a2 98 12 00 00 	movq	4760(%rdx), %r12
  40cc7d:	4d 39 d4 	cmpq	%r10, %r12
  40cc80:	0f 85 7a ff ff ff 	jne	-134 <runtime.bulkBarrierBitmap+0x100>
  40cc86:	0f 57 c0 	xorps	%xmm0, %xmm0
  40cc89:	0f 11 04 24 	movups	%xmm0, (%rsp)
  40cc8d:	e8 5e 18 01 00 	callq	71774 <runtime.wbBufFlush>
  40cc92:	0f b6 44 24 17 	movzbl	23(%rsp), %eax
  40cc97:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  40cc9c:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  40cca1:	48 8b 5c 24 48 	movq	72(%rsp), %rbx
  40cca6:	48 8b 74 24 20 	movq	32(%rsp), %rsi
  40ccab:	48 8b 7c 24 58 	movq	88(%rsp), %rdi
  40ccb0:	4c 8b 44 24 28 	movq	40(%rsp), %r8
  40ccb5:	41 b9 01 00 00 00 	movl	$1, %r9d
  40ccbb:	4c 8b 5c 24 50 	movq	80(%rsp), %r11
  40ccc0:	e9 3b ff ff ff 	jmp	-197 <runtime.bulkBarrierBitmap+0x100>
  40ccc5:	48 8b 5c 24 48 	movq	72(%rsp), %rbx
  40ccca:	4c 8b 5c 24 50 	movq	80(%rsp), %r11
  40cccf:	e9 2c ff ff ff 	jmp	-212 <runtime.bulkBarrierBitmap+0x100>
  40ccd4:	41 b9 01 00 00 00 	movl	$1, %r9d
  40ccda:	49 89 c0 	movq	%rax, %r8
  40ccdd:	89 d8 	movl	%ebx, %eax
  40ccdf:	e9 b8 fe ff ff 	jmp	-328 <runtime.bulkBarrierBitmap+0x9c>
  40cce4:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  40cce9:	48 83 c4 40 	addq	$64, %rsp
  40cced:	c3 	retq
  40ccee:	cc 	int3
  40ccef:	cc 	int3

runtime.typeBitsBulkBarrier:
  40ccf0:	48 83 ec 50 	subq	$80, %rsp
  40ccf4:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  40ccf9:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  40ccfe:	48 8b 44 24 58 	movq	88(%rsp), %rax
  40cd03:	48 85 c0 	testq	%rax, %rax
  40cd06:	0f 84 16 02 00 00 	je	534 <runtime.typeBitsBulkBarrier+0x232>
  40cd0c:	48 8b 08 	movq	(%rax), %rcx
  40cd0f:	48 8b 54 24 70 	movq	112(%rsp), %rdx
  40cd14:	48 39 d1 	cmpq	%rdx, %rcx
  40cd17:	0f 85 32 01 00 00 	jne	306 <runtime.typeBitsBulkBarrier+0x15f>
  40cd1d:	0f b6 48 17 	movzbl	23(%rax), %ecx
  40cd21:	f6 c1 40 	testb	$64, %cl
  40cd24:	0f 85 99 00 00 00 	jne	153 <runtime.typeBitsBulkBarrier+0xd3>
  40cd2a:	0f b6 0d e3 6c 0b 00 	movzbl	748771(%rip), %ecx
  40cd31:	84 c9 	testb	%cl, %cl
  40cd33:	0f 84 80 00 00 00 	je	128 <runtime.typeBitsBulkBarrier+0xc9>
  40cd39:	48 8b 48 20 	movq	32(%rax), %rcx
  40cd3d:	31 d2 	xorl	%edx, %edx
  40cd3f:	31 db 	xorl	%ebx, %ebx
  40cd41:	eb 04 	jmp	4 <runtime.typeBitsBulkBarrier+0x57>
  40cd43:	48 83 c2 08 	addq	$8, %rdx
  40cd47:	48 8b 70 08 	movq	8(%rax), %rsi
  40cd4b:	48 39 f2 	cmpq	%rsi, %rdx
  40cd4e:	73 5f 	jae	95 <runtime.typeBitsBulkBarrier+0xbf>
  40cd50:	48 f7 c2 3f 00 00 00 	testq	$63, %rdx
  40cd57:	75 52 	jne	82 <runtime.typeBitsBulkBarrier+0xbb>
  40cd59:	0f b6 19 	movzbl	(%rcx), %ebx
  40cd5c:	48 ff c1 	incq	%rcx
  40cd5f:	0f ba e3 00 	btl	$0, %ebx
  40cd63:	73 de 	jae	-34 <runtime.typeBitsBulkBarrier+0x53>
  40cd65:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  40cd6a:	89 5c 24 1c 	movl	%ebx, 28(%rsp)
  40cd6e:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  40cd73:	48 8b 44 24 68 	movq	104(%rsp), %rax
  40cd78:	48 8d 0c 02 	leaq	(%rdx,%rax), %rcx
  40cd7c:	48 8b 5c 24 60 	movq	96(%rsp), %rbx
  40cd81:	48 8d 34 1a 	leaq	(%rdx,%rbx), %rsi
  40cd85:	48 8b 09 	movq	(%rcx), %rcx
  40cd88:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40cd8d:	48 89 34 24 	movq	%rsi, (%rsp)
  40cd91:	e8 6a ec ff ff 	callq	-5014 <runtime.writebarrierptr_prewrite>
  40cd96:	48 8b 44 24 58 	movq	88(%rsp), %rax
  40cd9b:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  40cda0:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  40cda5:	8b 5c 24 1c 	movl	28(%rsp), %ebx
  40cda9:	eb 98 	jmp	-104 <runtime.typeBitsBulkBarrier+0x53>
  40cdab:	d1 eb 	shrl	%ebx
  40cdad:	eb b0 	jmp	-80 <runtime.typeBitsBulkBarrier+0x6f>
  40cdaf:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  40cdb4:	48 83 c4 50 	addq	$80, %rsp
  40cdb8:	c3 	retq
  40cdb9:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  40cdbe:	48 83 c4 50 	addq	$80, %rsp
  40cdc2:	c3 	retq
  40cdc3:	48 89 04 24 	movq	%rax, (%rsp)
  40cdc7:	e8 a4 1b 03 00 	callq	203684 <runtime.(*_type).string>
  40cdcc:	48 8b 44 24 08 	movq	8(%rsp), %rax
  40cdd1:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  40cdd6:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  40cddb:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  40cde0:	e8 1b 4d 01 00 	callq	85275 <runtime.printlock>
  40cde5:	48 8d 05 1a 05 06 00 	leaq	394522(%rip), %rax
  40cdec:	48 89 04 24 	movq	%rax, (%rsp)
  40cdf0:	48 c7 44 24 08 28 00 00 00 	movq	$40, 8(%rsp)
  40cdf9:	e8 42 56 01 00 	callq	87618 <runtime.printstring>
  40cdfe:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40ce03:	48 89 04 24 	movq	%rax, (%rsp)
  40ce07:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40ce0c:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40ce11:	e8 2a 56 01 00 	callq	87594 <runtime.printstring>
  40ce16:	48 8d 05 03 db 05 00 	leaq	383747(%rip), %rax
  40ce1d:	48 89 04 24 	movq	%rax, (%rsp)
  40ce21:	48 c7 44 24 08 0f 00 00 00 	movq	$15, 8(%rsp)
  40ce2a:	e8 11 56 01 00 	callq	87569 <runtime.printstring>
  40ce2f:	e8 4c 4d 01 00 	callq	85324 <runtime.printunlock>
  40ce34:	48 8d 05 33 00 06 00 	leaq	393267(%rip), %rax
  40ce3b:	48 89 04 24 	movq	%rax, (%rsp)
  40ce3f:	48 c7 44 24 08 24 00 00 00 	movq	$36, 8(%rsp)
  40ce48:	e8 83 43 01 00 	callq	82819 <runtime.throw>
  40ce4d:	0f 0b 	ud2
  40ce4f:	48 89 04 24 	movq	%rax, (%rsp)
  40ce53:	e8 18 1b 03 00 	callq	203544 <runtime.(*_type).string>
  40ce58:	48 8b 44 24 10 	movq	16(%rsp), %rax
  40ce5d:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  40ce62:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  40ce67:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  40ce6c:	48 8b 54 24 58 	movq	88(%rsp), %rdx
  40ce71:	48 8b 12 	movq	(%rdx), %rdx
  40ce74:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  40ce79:	e8 82 4c 01 00 	callq	85122 <runtime.printlock>
  40ce7e:	48 8d 05 81 04 06 00 	leaq	394369(%rip), %rax
  40ce85:	48 89 04 24 	movq	%rax, (%rsp)
  40ce89:	48 c7 44 24 08 28 00 00 00 	movq	$40, 8(%rsp)
  40ce92:	e8 a9 55 01 00 	callq	87465 <runtime.printstring>
  40ce97:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40ce9c:	48 89 04 24 	movq	%rax, (%rsp)
  40cea0:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40cea5:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40ceaa:	e8 91 55 01 00 	callq	87441 <runtime.printstring>
  40ceaf:	48 8d 05 e2 d4 05 00 	leaq	382178(%rip), %rax
  40ceb6:	48 89 04 24 	movq	%rax, (%rsp)
  40ceba:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  40cec3:	e8 78 55 01 00 	callq	87416 <runtime.printstring>
  40cec8:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40cecd:	48 89 04 24 	movq	%rax, (%rsp)
  40ced1:	e8 9a 52 01 00 	callq	86682 <runtime.printuint>
  40ced6:	48 8d 05 6e de 05 00 	leaq	384622(%rip), %rax
  40cedd:	48 89 04 24 	movq	%rax, (%rsp)
  40cee1:	48 c7 44 24 08 12 00 00 00 	movq	$18, 8(%rsp)
  40ceea:	e8 51 55 01 00 	callq	87377 <runtime.printstring>
  40ceef:	48 8b 44 24 70 	movq	112(%rsp), %rax
  40cef4:	48 89 04 24 	movq	%rax, (%rsp)
  40cef8:	e8 73 52 01 00 	callq	86643 <runtime.printuint>
  40cefd:	e8 8e 4e 01 00 	callq	85646 <runtime.printnl>
  40cf02:	e8 79 4c 01 00 	callq	85113 <runtime.printunlock>
  40cf07:	48 8d 05 60 ff 05 00 	leaq	393056(%rip), %rax
  40cf0e:	48 89 04 24 	movq	%rax, (%rsp)
  40cf12:	48 c7 44 24 08 24 00 00 00 	movq	$36, 8(%rsp)
  40cf1b:	e8 b0 42 01 00 	callq	82608 <runtime.throw>
  40cf20:	0f 0b 	ud2
  40cf22:	48 8d 05 a9 04 06 00 	leaq	394409(%rip), %rax
  40cf29:	48 89 04 24 	movq	%rax, (%rsp)
  40cf2d:	48 c7 44 24 08 29 00 00 00 	movq	$41, 8(%rsp)
  40cf36:	e8 95 42 01 00 	callq	82581 <runtime.throw>
  40cf3b:	0f 0b 	ud2
  40cf3d:	cc 	int3
  40cf3e:	cc 	int3
  40cf3f:	cc 	int3

runtime.heapBits.initSpan:
  40cf40:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40cf49:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40cf4d:	0f 86 12 01 00 00 	jbe	274 <runtime.heapBits.initSpan+0x125>
  40cf53:	48 83 ec 28 	subq	$40, %rsp
  40cf57:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  40cf5c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  40cf61:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  40cf66:	48 8b 41 20 	movq	32(%rcx), %rax
  40cf6a:	48 c1 e0 0d 	shlq	$13, %rax
  40cf6e:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  40cf73:	48 8b 51 68 	movq	104(%rcx), %rdx
  40cf77:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  40cf7c:	48 85 d2 	testq	%rdx, %rdx
  40cf7f:	0f 86 be 00 00 00 	jbe	190 <runtime.heapBits.initSpan+0x103>
  40cf85:	48 89 d3 	movq	%rdx, %rbx
  40cf88:	31 d2 	xorl	%edx, %edx
  40cf8a:	48 f7 f3 	divq	%rbx
  40cf8d:	48 c7 41 30 00 00 00 00 	movq	$0, 48(%rcx)
  40cf95:	48 c7 41 40 ff ff ff ff 	movq	$-1, 64(%rcx)
  40cf9d:	48 89 41 38 	movq	%rax, 56(%rcx)
  40cfa1:	0f 57 c0 	xorps	%xmm0, %xmm0
  40cfa4:	0f 11 41 48 	movups	%xmm0, 72(%rcx)
  40cfa8:	48 8b 41 38 	movq	56(%rcx), %rax
  40cfac:	48 89 04 24 	movq	%rax, (%rsp)
  40cfb0:	e8 8b f9 00 00 	callq	63883 <runtime.newMarkBits>
  40cfb5:	48 8b 44 24 08 	movq	8(%rsp), %rax
  40cfba:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  40cfbf:	48 89 41 50 	movq	%rax, 80(%rcx)
  40cfc3:	48 8b 41 38 	movq	56(%rcx), %rax
  40cfc7:	48 89 04 24 	movq	%rax, (%rsp)
  40cfcb:	e8 70 fc 00 00 	callq	64624 <runtime.newAllocBits>
  40cfd0:	48 8b 44 24 08 	movq	8(%rsp), %rax
  40cfd5:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  40cfda:	48 89 41 48 	movq	%rax, 72(%rcx)
  40cfde:	48 8b 44 24 18 	movq	24(%rsp), %rax
  40cfe3:	48 a9 1f 00 00 00 	testq	$31, %rax
  40cfe9:	75 5f 	jne	95 <runtime.heapBits.initSpan+0x10a>
  40cfeb:	48 c1 e8 05 	shrq	$5, %rax
  40cfef:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  40cff4:	48 83 f9 08 	cmpq	$8, %rcx
  40cff8:	75 25 	jne	37 <runtime.heapBits.initSpan+0xdf>
  40cffa:	48 ff c8 	decq	%rax
  40cffd:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  40d002:	48 89 ca 	movq	%rcx, %rdx
  40d005:	48 29 c1 	subq	%rax, %rcx
  40d008:	eb 03 	jmp	3 <runtime.heapBits.initSpan+0xcd>
  40d00a:	48 ff c1 	incq	%rcx
  40d00d:	c6 01 ff 	movb	$-1, (%rcx)
  40d010:	48 39 d1 	cmpq	%rdx, %rcx
  40d013:	75 f5 	jne	-11 <runtime.heapBits.initSpan+0xca>
  40d015:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  40d01a:	48 83 c4 28 	addq	$40, %rsp
  40d01e:	c3 	retq
  40d01f:	48 8d 48 ff 	leaq	-1(%rax), %rcx
  40d023:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  40d028:	48 29 ca 	subq	%rcx, %rdx
  40d02b:	48 89 14 24 	movq	%rdx, (%rsp)
  40d02f:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40d034:	e8 37 9e 03 00 	callq	237111 <runtime.memclrNoHeapPointers>
  40d039:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  40d03e:	48 83 c4 28 	addq	$40, %rsp
  40d042:	c3 	retq
  40d043:	31 c0 	xorl	%eax, %eax
  40d045:	e9 43 ff ff ff 	jmp	-189 <runtime.heapBits.initSpan+0x4d>
  40d04a:	48 8d 05 d7 eb 05 00 	leaq	388055(%rip), %rax
  40d051:	48 89 04 24 	movq	%rax, (%rsp)
  40d055:	48 c7 44 24 08 1a 00 00 00 	movq	$26, 8(%rsp)
  40d05e:	e8 6d 41 01 00 	callq	82285 <runtime.throw>
  40d063:	0f 0b 	ud2
  40d065:	e8 06 75 03 00 	callq	226566 <runtime.morestack_noctxt>
  40d06a:	e9 d1 fe ff ff 	jmp	-303 <runtime.heapBits.initSpan>
  40d06f:	cc 	int3

runtime.heapBits.initCheckmarkSpan:
  40d070:	48 8b 44 24 18 	movq	24(%rsp), %rax
  40d075:	48 83 f8 08 	cmpq	$8, %rax
  40d079:	75 23 	jne	35 <runtime.heapBits.initCheckmarkSpan+0x2e>
  40d07b:	48 8b 44 24 20 	movq	32(%rsp), %rax
  40d080:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  40d085:	31 d2 	xorl	%edx, %edx
  40d087:	eb 0f 	jmp	15 <runtime.heapBits.initCheckmarkSpan+0x28>
  40d089:	0f b6 19 	movzbl	(%rcx), %ebx
  40d08c:	83 e3 f0 	andl	$-16, %ebx
  40d08f:	88 19 	movb	%bl, (%rcx)
  40d091:	48 83 c2 04 	addq	$4, %rdx
  40d095:	48 ff c9 	decq	%rcx
  40d098:	48 39 c2 	cmpq	%rax, %rdx
  40d09b:	72 ec 	jb	-20 <runtime.heapBits.initCheckmarkSpan+0x19>
  40d09d:	c3 	retq
  40d09e:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  40d0a3:	48 8b 5c 24 08 	movq	8(%rsp), %rbx
  40d0a8:	8b 74 24 10 	movl	16(%rsp), %esi
  40d0ac:	31 c9 	xorl	%ecx, %ecx
  40d0ae:	eb 4e 	jmp	78 <runtime.heapBits.initCheckmarkSpan+0x8e>
  40d0b0:	0f b6 3b 	movzbl	(%rbx), %edi
  40d0b3:	44 8d 46 01 	leal	1(%rsi), %r8d
  40d0b7:	49 89 c9 	movq	%rcx, %r9
  40d0ba:	44 89 c1 	movl	%r8d, %ecx
  40d0bd:	41 ba 10 00 00 00 	movl	$16, %r10d
  40d0c3:	41 d3 e2 	shll	%cl, %r10d
  40d0c6:	83 f9 20 	cmpl	$32, %ecx
  40d0c9:	45 19 c0 	sbbl	%r8d, %r8d
  40d0cc:	45 21 d0 	andl	%r10d, %r8d
  40d0cf:	41 f7 d0 	notl	%r8d
  40d0d2:	41 21 f8 	andl	%edi, %r8d
  40d0d5:	44 88 03 	movb	%r8b, (%rbx)
  40d0d8:	49 8d 49 01 	leaq	1(%r9), %rcx
  40d0dc:	48 89 c7 	movq	%rax, %rdi
  40d0df:	48 c1 e8 03 	shrq	$3, %rax
  40d0e3:	41 89 f0 	movl	%esi, %r8d
  40d0e6:	49 8d 34 00 	leaq	(%r8,%rax), %rsi
  40d0ea:	49 89 f0 	movq	%rsi, %r8
  40d0ed:	48 c1 ee 02 	shrq	$2, %rsi
  40d0f1:	49 83 e0 03 	andq	$3, %r8
  40d0f5:	48 29 f3 	subq	%rsi, %rbx
  40d0f8:	48 89 f8 	movq	%rdi, %rax
  40d0fb:	4c 89 c6 	movq	%r8, %rsi
  40d0fe:	48 39 d1 	cmpq	%rdx, %rcx
  40d101:	72 ad 	jb	-83 <runtime.heapBits.initCheckmarkSpan+0x40>
  40d103:	c3 	retq
  40d104:	cc 	int3
  40d105:	cc 	int3
  40d106:	cc 	int3
  40d107:	cc 	int3
  40d108:	cc 	int3
  40d109:	cc 	int3
  40d10a:	cc 	int3
  40d10b:	cc 	int3
  40d10c:	cc 	int3
  40d10d:	cc 	int3
  40d10e:	cc 	int3
  40d10f:	cc 	int3

runtime.heapBits.clearCheckmarkSpan:
  40d110:	48 8b 44 24 18 	movq	24(%rsp), %rax
  40d115:	48 83 f8 08 	cmpq	$8, %rax
  40d119:	75 22 	jne	34 <runtime.heapBits.clearCheckmarkSpan+0x2d>
  40d11b:	48 8b 44 24 20 	movq	32(%rsp), %rax
  40d120:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  40d125:	31 d2 	xorl	%edx, %edx
  40d127:	eb 0f 	jmp	15 <runtime.heapBits.clearCheckmarkSpan+0x28>
  40d129:	0f b6 19 	movzbl	(%rcx), %ebx
  40d12c:	83 cb 0f 	orl	$15, %ebx
  40d12f:	88 19 	movb	%bl, (%rcx)
  40d131:	48 83 c2 04 	addq	$4, %rdx
  40d135:	48 ff c9 	decq	%rcx
  40d138:	48 39 c2 	cmpq	%rax, %rdx
  40d13b:	72 ec 	jb	-20 <runtime.heapBits.clearCheckmarkSpan+0x19>
  40d13d:	c3 	retq
  40d13e:	cc 	int3
  40d13f:	cc 	int3

runtime.(*mspan).countAlloc:
  40d140:	48 8b 44 24 08 	movq	8(%rsp), %rax
  40d145:	48 8b 48 38 	movq	56(%rax), %rcx
  40d149:	48 89 ca 	movq	%rcx, %rdx
  40d14c:	48 c1 e9 03 	shrq	$3, %rcx
  40d150:	31 db 	xorl	%ebx, %ebx
  40d152:	31 f6 	xorl	%esi, %esi
  40d154:	eb 25 	jmp	37 <runtime.(*mspan).countAlloc+0x3b>
  40d156:	48 8b 78 50 	movq	80(%rax), %rdi
  40d15a:	4c 8d 04 3b 	leaq	(%rbx,%rdi), %r8
  40d15e:	41 84 00 	testb	%al, (%r8)
  40d161:	4c 8d 43 01 	leaq	1(%rbx), %r8
  40d165:	0f b6 3c 3b 	movzbl	(%rbx,%rdi), %edi
  40d169:	4c 8d 0d f0 81 09 00 	leaq	623088(%rip), %r9
  40d170:	41 0f b6 3c 39 	movzbl	(%r9,%rdi), %edi
  40d175:	48 01 fe 	addq	%rdi, %rsi
  40d178:	4c 89 c3 	movq	%r8, %rbx
  40d17b:	48 39 cb 	cmpq	%rcx, %rbx
  40d17e:	72 d6 	jb	-42 <runtime.(*mspan).countAlloc+0x16>
  40d180:	48 89 d3 	movq	%rdx, %rbx
  40d183:	48 83 e2 07 	andq	$7, %rdx
  40d187:	48 f7 c3 07 00 00 00 	testq	$7, %rbx
  40d18e:	74 34 	je	52 <runtime.(*mspan).countAlloc+0x84>
  40d190:	48 8b 40 50 	movq	80(%rax), %rax
  40d194:	48 8d 1c 01 	leaq	(%rcx,%rax), %rbx
  40d198:	84 03 	testb	%al, (%rbx)
  40d19a:	0f b6 04 01 	movzbl	(%rcx,%rax), %eax
  40d19e:	48 89 d1 	movq	%rdx, %rcx
  40d1a1:	bb 01 00 00 00 	movl	$1, %ebx
  40d1a6:	d3 e3 	shll	%cl, %ebx
  40d1a8:	8d 53 ff 	leal	-1(%rbx), %edx
  40d1ab:	21 d0 	andl	%edx, %eax
  40d1ad:	0f b6 c0 	movzbl	%al, %eax
  40d1b0:	48 8d 15 a9 81 09 00 	leaq	623017(%rip), %rdx
  40d1b7:	0f b6 04 10 	movzbl	(%rax,%rdx), %eax
  40d1bb:	48 01 f0 	addq	%rsi, %rax
  40d1be:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40d1c3:	c3 	retq
  40d1c4:	48 89 f0 	movq	%rsi, %rax
  40d1c7:	eb f5 	jmp	-11 <runtime.(*mspan).countAlloc+0x7e>
  40d1c9:	cc 	int3
  40d1ca:	cc 	int3
  40d1cb:	cc 	int3
  40d1cc:	cc 	int3
  40d1cd:	cc 	int3
  40d1ce:	cc 	int3
  40d1cf:	cc 	int3

runtime.heapBitsSetType:
  40d1d0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40d1d9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40d1dd:	0f 86 04 06 00 00 	jbe	1540 <runtime.heapBitsSetType+0x617>
  40d1e3:	48 83 ec 50 	subq	$80, %rsp
  40d1e7:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  40d1ec:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  40d1f1:	48 8b 54 24 60 	movq	96(%rsp), %rdx
  40d1f6:	48 83 fa 08 	cmpq	$8, %rdx
  40d1fa:	0f 84 3c 05 00 00 	je	1340 <runtime.heapBitsSetType+0x56c>
  40d200:	48 8b 5c 24 70 	movq	112(%rsp), %rbx
  40d205:	48 8b 73 20 	movq	32(%rbx), %rsi
  40d209:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  40d20e:	48 2b 0d b3 03 0a 00 	subq	656307(%rip), %rcx
  40d215:	48 89 cf 	movq	%rcx, %rdi
  40d218:	48 c1 e9 03 	shrq	$3, %rcx
  40d21c:	4c 8b 05 95 03 0a 00 	movq	656277(%rip), %r8
  40d223:	48 c1 ef 05 	shrq	$5, %rdi
  40d227:	49 29 f8 	subq	%rdi, %r8
  40d22a:	49 8d 78 ff 	leaq	-1(%r8), %rdi
  40d22e:	48 83 e1 03 	andq	$3, %rcx
  40d232:	48 83 fa 10 	cmpq	$16, %rdx
  40d236:	0f 84 a3 04 00 00 	je	1187 <runtime.heapBitsSetType+0x50f>
  40d23c:	44 0f b6 43 17 	movzbl	23(%rbx), %r8d
  40d241:	41 f6 c0 40 	testb	$64, %r8b
  40d245:	0f 85 54 04 00 00 	jne	1108 <runtime.heapBitsSetType+0x4cf>
  40d24b:	4c 8b 03 	movq	(%rbx), %r8
  40d24e:	48 8b 44 24 68 	movq	104(%rsp), %rax
  40d253:	49 39 c0 	cmpq	%rax, %r8
  40d256:	0f 83 20 04 00 00 	jae	1056 <runtime.heapBitsSetType+0x4ac>
  40d25c:	4c 8b 4b 08 	movq	8(%rbx), %r9
  40d260:	49 c1 e9 03 	shrq	$3, %r9
  40d264:	49 83 f9 39 	cmpq	$57, %r9
  40d268:	0f 87 d0 03 00 00 	ja	976 <runtime.heapBitsSetType+0x46e>
  40d26e:	49 89 f2 	movq	%rsi, %r10
  40d271:	45 31 db 	xorl	%r11d, %r11d
  40d274:	45 31 e4 	xorl	%r12d, %r12d
  40d277:	eb 27 	jmp	39 <runtime.heapBitsSetType+0xd0>
  40d279:	4d 8d 6b 08 	leaq	8(%r11), %r13
  40d27d:	44 0f b6 36 	movzbl	(%rsi), %r14d
  40d281:	49 89 cf 	movq	%rcx, %r15
  40d284:	4c 89 d9 	movq	%r11, %rcx
  40d287:	49 d3 e6 	shlq	%cl, %r14
  40d28a:	48 83 f9 40 	cmpq	$64, %rcx
  40d28e:	4c 89 f9 	movq	%r15, %rcx
  40d291:	4d 19 ff 	sbbq	%r15, %r15
  40d294:	4d 21 fe 	andq	%r15, %r14
  40d297:	4d 09 f4 	orq	%r14, %r12
  40d29a:	48 ff c6 	incq	%rsi
  40d29d:	4d 89 eb 	movq	%r13, %r11
  40d2a0:	4d 39 cb 	cmpq	%r9, %r11
  40d2a3:	72 d4 	jb	-44 <runtime.heapBitsSetType+0xa9>
  40d2a5:	4c 89 c6 	movq	%r8, %rsi
  40d2a8:	49 c1 e8 03 	shrq	$3, %r8
  40d2ac:	4f 8d 0c 00 	leaq	(%r8,%r8), %r9
  40d2b0:	49 83 f9 39 	cmpq	$57, %r9
  40d2b4:	0f 87 73 03 00 00 	ja	883 <runtime.heapBitsSetType+0x45d>
  40d2ba:	4d 89 c1 	movq	%r8, %r9
  40d2bd:	eb 20 	jmp	32 <runtime.heapBitsSetType+0x10f>
  40d2bf:	49 89 cb 	movq	%rcx, %r11
  40d2c2:	4c 89 c1 	movq	%r8, %rcx
  40d2c5:	4d 89 e5 	movq	%r12, %r13
  40d2c8:	49 d3 e4 	shlq	%cl, %r12
  40d2cb:	48 83 f9 40 	cmpq	$64, %rcx
  40d2cf:	4d 19 f6 	sbbq	%r14, %r14
  40d2d2:	4d 21 f4 	andq	%r14, %r12
  40d2d5:	4d 09 ec 	orq	%r13, %r12
  40d2d8:	4c 8d 04 09 	leaq	(%rcx,%rcx), %r8
  40d2dc:	4c 89 d9 	movq	%r11, %rcx
  40d2df:	49 83 f8 40 	cmpq	$64, %r8
  40d2e3:	76 da 	jbe	-38 <runtime.heapBitsSetType+0xef>
  40d2e5:	45 84 c9 	testb	%r9b, %r9b
  40d2e8:	0f 84 f2 04 00 00 	je	1266 <runtime.heapBitsSetType+0x610>
  40d2ee:	45 0f b6 c1 	movzbl	%r9b, %r8d
  40d2f2:	41 bb 39 00 00 00 	movl	$57, %r11d
  40d2f8:	45 0f b6 db 	movzbl	%r11b, %r11d
  40d2fc:	49 89 c5 	movq	%rax, %r13
  40d2ff:	44 89 d8 	movl	%r11d, %eax
  40d302:	49 89 d3 	movq	%rdx, %r11
  40d305:	31 d2 	xorl	%edx, %edx
  40d307:	66 41 f7 f0 	divw	%r8w
  40d30b:	0f b6 d0 	movzbl	%al, %edx
  40d30e:	49 0f af d1 	imulq	%r9, %rdx
  40d312:	48 89 c8 	movq	%rcx, %rax
  40d315:	48 89 d1 	movq	%rdx, %rcx
  40d318:	41 b8 01 00 00 00 	movl	$1, %r8d
  40d31e:	49 d3 e0 	shlq	%cl, %r8
  40d321:	48 83 f9 40 	cmpq	$64, %rcx
  40d325:	4d 19 c9 	sbbq	%r9, %r9
  40d328:	4d 21 c8 	andq	%r9, %r8
  40d32b:	49 ff c8 	decq	%r8
  40d32e:	4d 21 c4 	andq	%r8, %r12
  40d331:	31 d2 	xorl	%edx, %edx
  40d333:	45 31 c0 	xorl	%r8d, %r8d
  40d336:	49 89 c9 	movq	%rcx, %r9
  40d339:	48 85 d2 	testq	%rdx, %rdx
  40d33c:	0f 84 e3 02 00 00 	je	739 <runtime.heapBitsSetType+0x455>
  40d342:	44 0f b6 32 	movzbl	(%rdx), %r14d
  40d346:	48 ff c2 	incq	%rdx
  40d349:	b9 08 00 00 00 	movl	$8, %ecx
  40d34e:	49 39 f5 	cmpq	%rsi, %r13
  40d351:	0f 85 9c 02 00 00 	jne	668 <runtime.heapBitsSetType+0x423>
  40d357:	48 8b 73 08 	movq	8(%rbx), %rsi
  40d35b:	48 c1 ee 03 	shrq	$3, %rsi
  40d35f:	48 85 f6 	testq	%rsi, %rsi
  40d362:	0f 84 f9 03 00 00 	je	1017 <runtime.heapBitsSetType+0x591>
  40d368:	48 83 fe 02 	cmpq	$2, %rsi
  40d36c:	0f 83 79 02 00 00 	jae	633 <runtime.heapBitsSetType+0x41b>
  40d372:	bb 02 00 00 00 	movl	$2, %ebx
  40d377:	85 c0 	testl	%eax, %eax
  40d379:	0f 85 16 02 00 00 	jne	534 <runtime.heapBitsSetType+0x3c5>
  40d37f:	4c 89 f0 	movq	%r14, %rax
  40d382:	49 83 e6 0f 	andq	$15, %r14
  40d386:	49 81 ce d0 00 00 00 	orq	$208, %r14
  40d38d:	48 83 fb 04 	cmpq	$4, %rbx
  40d391:	0f 87 8d 00 00 00 	ja	141 <runtime.heapBitsSetType+0x254>
  40d397:	b8 04 00 00 00 	movl	$4, %eax
  40d39c:	48 39 d8 	cmpq	%rbx, %rax
  40d39f:	76 7e 	jbe	126 <runtime.heapBitsSetType+0x24f>
  40d3a1:	48 89 c2 	movq	%rax, %rdx
  40d3a4:	48 29 d8 	subq	%rbx, %rax
  40d3a7:	48 8d 48 fc 	leaq	-4(%rax), %rcx
  40d3ab:	48 f7 d9 	negq	%rcx
  40d3ae:	b8 01 00 00 00 	movl	$1, %eax
  40d3b3:	48 d3 e0 	shlq	%cl, %rax
  40d3b6:	48 83 f9 40 	cmpq	$64, %rcx
  40d3ba:	48 19 db 	sbbq	%rbx, %rbx
  40d3bd:	48 21 d8 	andq	%rbx, %rax
  40d3c0:	48 ff c8 	decq	%rax
  40d3c3:	48 89 c3 	movq	%rax, %rbx
  40d3c6:	48 c1 e0 04 	shlq	$4, %rax
  40d3ca:	48 09 d8 	orq	%rbx, %rax
  40d3cd:	49 21 c6 	andq	%rax, %r14
  40d3d0:	49 c1 eb 03 	shrq	$3, %r11
  40d3d4:	4c 39 da 	cmpq	%r11, %rdx
  40d3d7:	77 3b 	ja	59 <runtime.heapBitsSetType+0x244>
  40d3d9:	44 88 37 	movb	%r14b, (%rdi)
  40d3dc:	48 8d 42 04 	leaq	4(%rdx), %rax
  40d3e0:	48 8d 4f ff 	leaq	-1(%rdi), %rcx
  40d3e4:	eb 0a 	jmp	10 <runtime.heapBitsSetType+0x220>
  40d3e6:	c6 01 00 	movb	$0, (%rcx)
  40d3e9:	48 83 c0 04 	addq	$4, %rax
  40d3ed:	48 ff c9 	decq	%rcx
  40d3f0:	4c 39 d8 	cmpq	%r11, %rax
  40d3f3:	76 f1 	jbe	-15 <runtime.heapBitsSetType+0x216>
  40d3f5:	31 d2 	xorl	%edx, %edx
  40d3f7:	49 8d 5b 02 	leaq	2(%r11), %rbx
  40d3fb:	48 39 c3 	cmpq	%rax, %rbx
  40d3fe:	75 0a 	jne	10 <runtime.heapBitsSetType+0x23a>
  40d400:	0f b6 01 	movzbl	(%rcx), %eax
  40d403:	83 e0 cc 	andl	$-52, %eax
  40d406:	09 c2 	orl	%eax, %edx
  40d408:	88 11 	movb	%dl, (%rcx)
  40d40a:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  40d40f:	48 83 c4 50 	addq	$80, %rsp
  40d413:	c3 	retq
  40d414:	48 89 d0 	movq	%rdx, %rax
  40d417:	48 89 f9 	movq	%rdi, %rcx
  40d41a:	4c 89 f2 	movq	%r14, %rdx
  40d41d:	eb d8 	jmp	-40 <runtime.heapBitsSetType+0x227>
  40d41f:	48 89 c2 	movq	%rax, %rdx
  40d422:	eb ac 	jmp	-84 <runtime.heapBitsSetType+0x200>
  40d424:	44 88 37 	movb	%r14b, (%rdi)
  40d427:	48 c1 e8 04 	shrq	$4, %rax
  40d42b:	48 8d 71 fc 	leaq	-4(%rcx), %rsi
  40d42f:	48 ff cf 	decq	%rdi
  40d432:	b9 04 00 00 00 	movl	$4, %ecx
  40d437:	48 83 c6 fc 	addq	$-4, %rsi
  40d43b:	eb 28 	jmp	40 <runtime.heapBitsSetType+0x295>
  40d43d:	41 84 06 	testb	%al, (%r14)
  40d440:	49 c7 c6 ff ff ff ff 	movq	$-1, %r14
  40d447:	45 88 2c 3e 	movb	%r13b, (%r14,%rdi)
  40d44b:	48 c1 ea 04 	shrq	$4, %rdx
  40d44f:	48 83 c7 fe 	addq	$-2, %rdi
  40d453:	49 89 c5 	movq	%rax, %r13
  40d456:	48 89 d0 	movq	%rdx, %rax
  40d459:	4c 89 ea 	movq	%r13, %rdx
  40d45c:	49 89 cf 	movq	%rcx, %r15
  40d45f:	48 89 f1 	movq	%rsi, %rcx
  40d462:	4c 89 fe 	movq	%r15, %rsi
  40d465:	49 89 c5 	movq	%rax, %r13
  40d468:	48 83 e0 0f 	andq	$15, %rax
  40d46c:	48 0d f0 00 00 00 	orq	$240, %rax
  40d472:	4c 8d 71 04 	leaq	4(%rcx), %r14
  40d476:	49 39 de 	cmpq	%rbx, %r14
  40d479:	0f 83 08 01 00 00 	jae	264 <runtime.heapBitsSetType+0x3b7>
  40d47f:	88 07 	movb	%al, (%rdi)
  40d481:	49 c1 ed 04 	shrq	$4, %r13
  40d485:	4c 39 c2 	cmpq	%r8, %rdx
  40d488:	74 5f 	je	95 <runtime.heapBitsSetType+0x319>
  40d48a:	48 83 fe 08 	cmpq	$8, %rsi
  40d48e:	73 4a 	jae	74 <runtime.heapBitsSetType+0x30a>
  40d490:	0f b6 02 	movzbl	(%rdx), %eax
  40d493:	49 89 ce 	movq	%rcx, %r14
  40d496:	48 89 f1 	movq	%rsi, %rcx
  40d499:	48 d3 e0 	shlq	%cl, %rax
  40d49c:	48 83 f9 40 	cmpq	$64, %rcx
  40d4a0:	4d 19 ff 	sbbq	%r15, %r15
  40d4a3:	49 21 c7 	andq	%rax, %r15
  40d4a6:	4d 09 fd 	orq	%r15, %r13
  40d4a9:	48 8d 42 01 	leaq	1(%rdx), %rax
  40d4ad:	4c 89 ea 	movq	%r13, %rdx
  40d4b0:	49 83 e5 0f 	andq	$15, %r13
  40d4b4:	49 81 cd f0 00 00 00 	orq	$240, %r13
  40d4bb:	49 8d 76 08 	leaq	8(%r14), %rsi
  40d4bf:	4c 8d 77 ff 	leaq	-1(%rdi), %r14
  40d4c3:	48 39 de 	cmpq	%rbx, %rsi
  40d4c6:	0f 82 71 ff ff ff 	jb	-143 <runtime.heapBitsSetType+0x26d>
  40d4cc:	48 89 f0 	movq	%rsi, %rax
  40d4cf:	4c 89 f7 	movq	%r14, %rdi
  40d4d2:	4d 89 ee 	movq	%r13, %r14
  40d4d5:	e9 c2 fe ff ff 	jmp	-318 <runtime.heapBitsSetType+0x1cc>
  40d4da:	48 83 c6 f8 	addq	$-8, %rsi
  40d4de:	49 89 ce 	movq	%rcx, %r14
  40d4e1:	48 89 d0 	movq	%rdx, %rax
  40d4e4:	48 89 f1 	movq	%rsi, %rcx
  40d4e7:	eb c4 	jmp	-60 <runtime.heapBitsSetType+0x2dd>
  40d4e9:	48 85 d2 	testq	%rdx, %rdx
  40d4ec:	74 56 	je	86 <runtime.heapBitsSetType+0x374>
  40d4ee:	0f b6 02 	movzbl	(%rdx), %eax
  40d4f1:	48 89 ca 	movq	%rcx, %rdx
  40d4f4:	48 89 f1 	movq	%rsi, %rcx
  40d4f7:	48 d3 e0 	shlq	%cl, %rax
  40d4fa:	48 83 f9 40 	cmpq	$64, %rcx
  40d4fe:	4d 19 f6 	sbbq	%r14, %r14
  40d501:	49 21 c6 	andq	%rax, %r14
  40d504:	4d 09 f5 	orq	%r14, %r13
  40d507:	4a 8d 04 09 	leaq	(%rcx,%r9), %rax
  40d50b:	48 83 f8 08 	cmpq	$8, %rax
  40d50f:	73 29 	jae	41 <runtime.heapBitsSetType+0x36a>
  40d511:	41 0f b6 32 	movzbl	(%r10), %esi
  40d515:	48 89 c1 	movq	%rax, %rcx
  40d518:	48 d3 e6 	shlq	%cl, %rsi
  40d51b:	48 83 f8 40 	cmpq	$64, %rax
  40d51f:	4d 19 f6 	sbbq	%r14, %r14
  40d522:	4c 21 f6 	andq	%r14, %rsi
  40d525:	49 09 f5 	orq	%rsi, %r13
  40d528:	49 8d 72 01 	leaq	1(%r10), %rsi
  40d52c:	49 89 d6 	movq	%rdx, %r14
  40d52f:	48 89 c1 	movq	%rax, %rcx
  40d532:	48 89 f0 	movq	%rsi, %rax
  40d535:	e9 73 ff ff ff 	jmp	-141 <runtime.heapBitsSetType+0x2dd>
  40d53a:	4a 8d 44 09 f8 	leaq	-8(%rcx,%r9), %rax
  40d53f:	4c 89 d6 	movq	%r10, %rsi
  40d542:	eb e8 	jmp	-24 <runtime.heapBitsSetType+0x35c>
  40d544:	48 83 fe 08 	cmpq	$8, %rsi
  40d548:	73 32 	jae	50 <runtime.heapBitsSetType+0x3ac>
  40d54a:	48 89 c8 	movq	%rcx, %rax
  40d54d:	48 89 f1 	movq	%rsi, %rcx
  40d550:	4d 89 e6 	movq	%r12, %r14
  40d553:	49 d3 e4 	shlq	%cl, %r12
  40d556:	48 83 f9 40 	cmpq	$64, %rcx
  40d55a:	4d 19 ff 	sbbq	%r15, %r15
  40d55d:	4d 21 fc 	andq	%r15, %r12
  40d560:	4d 09 ec 	orq	%r13, %r12
  40d563:	4a 8d 34 09 	leaq	(%rcx,%r9), %rsi
  40d567:	4c 8d 7e f8 	leaq	-8(%rsi), %r15
  40d56b:	48 89 d6 	movq	%rdx, %rsi
  40d56e:	4d 89 e5 	movq	%r12, %r13
  40d571:	48 89 c2 	movq	%rax, %rdx
  40d574:	4d 89 f4 	movq	%r14, %r12
  40d577:	4c 89 f8 	movq	%r15, %rax
  40d57a:	eb b0 	jmp	-80 <runtime.heapBitsSetType+0x35c>
  40d57c:	48 89 c8 	movq	%rcx, %rax
  40d57f:	4d 89 e6 	movq	%r12, %r14
  40d582:	4d 89 ec 	movq	%r13, %r12
  40d585:	eb e0 	jmp	-32 <runtime.heapBitsSetType+0x397>
  40d587:	4c 89 f6 	movq	%r14, %rsi
  40d58a:	49 89 fe 	movq	%rdi, %r14
  40d58d:	49 89 c5 	movq	%rax, %r13
  40d590:	e9 37 ff ff ff 	jmp	-201 <runtime.heapBitsSetType+0x2fc>
  40d595:	83 f8 02 	cmpl	$2, %eax
  40d598:	0f 85 a8 01 00 00 	jne	424 <runtime.heapBitsSetType+0x576>
  40d59e:	4c 89 f0 	movq	%r14, %rax
  40d5a1:	49 83 e6 03 	andq	$3, %r14
  40d5a5:	49 c1 e6 02 	shlq	$2, %r14
  40d5a9:	49 83 ce 40 	orq	$64, %r14
  40d5ad:	0f b6 37 	movzbl	(%rdi), %esi
  40d5b0:	83 e6 b3 	andl	$-77, %esi
  40d5b3:	44 09 f6 	orl	%r14d, %esi
  40d5b6:	40 88 37 	movb	%sil, (%rdi)
  40d5b9:	48 8d 77 ff 	leaq	-1(%rdi), %rsi
  40d5bd:	48 83 fb 02 	cmpq	$2, %rbx
  40d5c1:	77 10 	ja	16 <runtime.heapBitsSetType+0x403>
  40d5c3:	b8 06 00 00 00 	movl	$6, %eax
  40d5c8:	48 89 f7 	movq	%rsi, %rdi
  40d5cb:	45 31 f6 	xorl	%r14d, %r14d
  40d5ce:	e9 c9 fd ff ff 	jmp	-567 <runtime.heapBitsSetType+0x1cc>
  40d5d3:	48 c1 e8 02 	shrq	$2, %rax
  40d5d7:	4c 8d 69 fe 	leaq	-2(%rcx), %r13
  40d5db:	b9 02 00 00 00 	movl	$2, %ecx
  40d5e0:	48 89 f7 	movq	%rsi, %rdi
  40d5e3:	4c 89 ee 	movq	%r13, %rsi
  40d5e6:	e9 4c fe ff ff 	jmp	-436 <runtime.heapBitsSetType+0x267>
  40d5eb:	48 89 f3 	movq	%rsi, %rbx
  40d5ee:	e9 84 fd ff ff 	jmp	-636 <runtime.heapBitsSetType+0x1a7>
  40d5f3:	48 85 f6 	testq	%rsi, %rsi
  40d5f6:	0f 84 dd 01 00 00 	je	477 <runtime.heapBitsSetType+0x609>
  40d5fc:	49 89 c7 	movq	%rax, %r15
  40d5ff:	4c 89 e8 	movq	%r13, %rax
  40d602:	49 89 d5 	movq	%rdx, %r13
  40d605:	31 d2 	xorl	%edx, %edx
  40d607:	48 f7 f6 	divq	%rsi
  40d60a:	4c 89 ea 	movq	%r13, %rdx
  40d60d:	4c 8d 68 ff 	leaq	-1(%rax), %r13
  40d611:	49 0f af f5 	imulq	%r13, %rsi
  40d615:	48 03 73 08 	addq	8(%rbx), %rsi
  40d619:	48 c1 ee 03 	shrq	$3, %rsi
  40d61d:	4c 89 f8 	movq	%r15, %rax
  40d620:	e9 3a fd ff ff 	jmp	-710 <runtime.heapBitsSetType+0x18f>
  40d625:	4d 89 e6 	movq	%r12, %r14
  40d628:	e9 21 fd ff ff 	jmp	-735 <runtime.heapBitsSetType+0x17e>
  40d62d:	49 89 d3 	movq	%rdx, %r11
  40d630:	49 89 c5 	movq	%rax, %r13
  40d633:	48 89 c8 	movq	%rcx, %rax
  40d636:	4c 89 c1 	movq	%r8, %rcx
  40d639:	e9 f3 fc ff ff 	jmp	-781 <runtime.heapBitsSetType+0x161>
  40d63e:	4d 8d 71 07 	leaq	7(%r9), %r14
  40d642:	49 c1 ee 03 	shrq	$3, %r14
  40d646:	4d 8d 7e ff 	leaq	-1(%r14), %r15
  40d64a:	4d 89 c1 	movq	%r8, %r9
  40d64d:	49 c1 e9 03 	shrq	$3, %r9
  40d651:	49 c1 e7 03 	shlq	$3, %r15
  40d655:	4d 29 f9 	subq	%r15, %r9
  40d658:	49 89 f2 	movq	%rsi, %r10
  40d65b:	4e 8d 74 36 ff 	leaq	-1(%rsi,%r14), %r14
  40d660:	4c 89 c6 	movq	%r8, %rsi
  40d663:	49 89 d3 	movq	%rdx, %r11
  40d666:	49 89 c5 	movq	%rax, %r13
  40d669:	4c 89 d2 	movq	%r10, %rdx
  40d66c:	4d 89 f0 	movq	%r14, %r8
  40d66f:	45 31 e4 	xorl	%r12d, %r12d
  40d672:	48 89 c8 	movq	%rcx, %rax
  40d675:	31 c9 	xorl	%ecx, %ecx
  40d677:	e9 bd fc ff ff 	jmp	-835 <runtime.heapBitsSetType+0x169>
  40d67c:	49 89 f2 	movq	%rsi, %r10
  40d67f:	49 89 d3 	movq	%rdx, %r11
  40d682:	49 89 c5 	movq	%rax, %r13
  40d685:	4c 89 d2 	movq	%r10, %rdx
  40d688:	45 31 e4 	xorl	%r12d, %r12d
  40d68b:	4d 89 e1 	movq	%r12, %r9
  40d68e:	48 89 c8 	movq	%rcx, %rax
  40d691:	4c 89 c6 	movq	%r8, %rsi
  40d694:	4c 89 c9 	movq	%r9, %rcx
  40d697:	45 31 c0 	xorl	%r8d, %r8d
  40d69a:	e9 9a fc ff ff 	jmp	-870 <runtime.heapBitsSetType+0x169>
  40d69f:	48 8b 43 08 	movq	8(%rbx), %rax
  40d6a3:	48 8b 1b 	movq	(%rbx), %rbx
  40d6a6:	48 89 5c 24 18 	movq	%rbx, 24(%rsp)
  40d6ab:	48 89 3c 24 	movq	%rdi, (%rsp)
  40d6af:	89 4c 24 08 	movl	%ecx, 8(%rsp)
  40d6b3:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40d6b8:	48 8b 44 24 68 	movq	104(%rsp), %rax
  40d6bd:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  40d6c2:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  40d6c7:	48 8d 46 04 	leaq	4(%rsi), %rax
  40d6cb:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  40d6d0:	e8 2b 01 00 00 	callq	299 <runtime.heapBitsSetTypeGCProg>
  40d6d5:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  40d6da:	48 83 c4 50 	addq	$80, %rsp
  40d6de:	c3 	retq
  40d6df:	48 8b 03 	movq	(%rbx), %rax
  40d6e2:	48 83 f8 08 	cmpq	$8, %rax
  40d6e6:	75 1f 	jne	31 <runtime.heapBitsSetType+0x537>
  40d6e8:	0f b6 07 	movzbl	(%rdi), %eax
  40d6eb:	ba 13 00 00 00 	movl	$19, %edx
  40d6f0:	d3 e2 	shll	%cl, %edx
  40d6f2:	83 f9 20 	cmpl	$32, %ecx
  40d6f5:	19 db 	sbbl	%ebx, %ebx
  40d6f7:	21 da 	andl	%ebx, %edx
  40d6f9:	09 d0 	orl	%edx, %eax
  40d6fb:	88 07 	movb	%al, (%rdi)
  40d6fd:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  40d702:	48 83 c4 50 	addq	$80, %rsp
  40d706:	c3 	retq
  40d707:	0f b6 06 	movzbl	(%rsi), %eax
  40d70a:	83 e0 03 	andl	$3, %eax
  40d70d:	83 c8 10 	orl	$16, %eax
  40d710:	0f b6 17 	movzbl	(%rdi), %edx
  40d713:	bb 33 00 00 00 	movl	$51, %ebx
  40d718:	d3 e3 	shll	%cl, %ebx
  40d71a:	83 f9 20 	cmpl	$32, %ecx
  40d71d:	19 f6 	sbbl	%esi, %esi
  40d71f:	21 f3 	andl	%esi, %ebx
  40d721:	f7 d3 	notl	%ebx
  40d723:	21 d3 	andl	%edx, %ebx
  40d725:	d3 e0 	shll	%cl, %eax
  40d727:	83 f9 20 	cmpl	$32, %ecx
  40d72a:	19 d2 	sbbl	%edx, %edx
  40d72c:	21 d0 	andl	%edx, %eax
  40d72e:	09 d8 	orl	%ebx, %eax
  40d730:	88 07 	movb	%al, (%rdi)
  40d732:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  40d737:	48 83 c4 50 	addq	$80, %rsp
  40d73b:	c3 	retq
  40d73c:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  40d741:	48 83 c4 50 	addq	$80, %rsp
  40d745:	c3 	retq
  40d746:	48 8d 05 dc f2 05 00 	leaq	389852(%rip), %rax
  40d74d:	48 89 04 24 	movq	%rax, (%rsp)
  40d751:	48 c7 44 24 08 21 00 00 00 	movq	$33, 8(%rsp)
  40d75a:	e8 71 3a 01 00 	callq	80497 <runtime.throw>
  40d75f:	0f 0b 	ud2
  40d761:	48 89 1c 24 	movq	%rbx, (%rsp)
  40d765:	e8 06 12 03 00 	callq	201222 <runtime.(*_type).string>
  40d76a:	48 8b 44 24 10 	movq	16(%rsp), %rax
  40d76f:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  40d774:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  40d779:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  40d77e:	e8 7d 43 01 00 	callq	82813 <runtime.printlock>
  40d783:	48 8d 05 d6 df 05 00 	leaq	384982(%rip), %rax
  40d78a:	48 89 04 24 	movq	%rax, (%rsp)
  40d78e:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  40d797:	e8 a4 4c 01 00 	callq	85156 <runtime.printstring>
  40d79c:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40d7a1:	48 89 04 24 	movq	%rax, (%rsp)
  40d7a5:	48 8b 44 24 38 	movq	56(%rsp), %rax
  40d7aa:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40d7af:	e8 8c 4c 01 00 	callq	85132 <runtime.printstring>
  40d7b4:	e8 d7 45 01 00 	callq	83415 <runtime.printnl>
  40d7b9:	e8 c2 43 01 00 	callq	82882 <runtime.printunlock>
  40d7be:	48 8d 05 0d ff 05 00 	leaq	392973(%rip), %rax
  40d7c5:	48 89 04 24 	movq	%rax, (%rsp)
  40d7c9:	48 c7 44 24 08 2d 00 00 00 	movq	$45, 8(%rsp)
  40d7d2:	e8 f9 39 01 00 	callq	80377 <runtime.throw>
  40d7d7:	0f 0b 	ud2
  40d7d9:	e8 42 23 01 00 	callq	74562 <runtime.panicdivide>
  40d7de:	0f 0b 	ud2
  40d7e0:	e8 3b 23 01 00 	callq	74555 <runtime.panicdivide>
  40d7e5:	0f 0b 	ud2
  40d7e7:	e8 84 6d 03 00 	callq	224644 <runtime.morestack_noctxt>
  40d7ec:	e9 df f9 ff ff 	jmp	-1569 <runtime.heapBitsSetType>
  40d7f1:	cc 	int3
  40d7f2:	cc 	int3
  40d7f3:	cc 	int3
  40d7f4:	cc 	int3
  40d7f5:	cc 	int3
  40d7f6:	cc 	int3
  40d7f7:	cc 	int3
  40d7f8:	cc 	int3
  40d7f9:	cc 	int3
  40d7fa:	cc 	int3
  40d7fb:	cc 	int3
  40d7fc:	cc 	int3
  40d7fd:	cc 	int3
  40d7fe:	cc 	int3
  40d7ff:	cc 	int3

runtime.heapBitsSetTypeGCProg:
  40d800:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40d809:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40d80d:	0f 86 4f 03 00 00 	jbe	847 <runtime.heapBitsSetTypeGCProg+0x362>
  40d813:	48 83 ec 60 	subq	$96, %rsp
  40d817:	48 89 6c 24 58 	movq	%rbp, 88(%rsp)
  40d81c:	48 8d 6c 24 58 	leaq	88(%rsp), %rbp
  40d821:	48 8b 8c 24 90 00 00 00 	movq	144(%rsp), %rcx
  40d829:	48 f7 c1 1f 00 00 00 	testq	$31, %rcx
  40d830:	0f 85 11 03 00 00 	jne	785 <runtime.heapBitsSetTypeGCProg+0x347>
  40d836:	48 8b 94 24 80 00 00 00 	movq	128(%rsp), %rdx
  40d83e:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  40d846:	48 39 c2 	cmpq	%rax, %rdx
  40d849:	0f 84 f1 01 00 00 	je	497 <runtime.heapBitsSetTypeGCProg+0x240>
  40d84f:	48 85 d2 	testq	%rdx, %rdx
  40d852:	0f 84 6b 02 00 00 	je	619 <runtime.heapBitsSetTypeGCProg+0x2c3>
  40d858:	48 89 d3 	movq	%rdx, %rbx
  40d85b:	31 d2 	xorl	%edx, %edx
  40d85d:	48 f7 f3 	divq	%rbx
  40d860:	48 c7 44 24 30 00 00 00 00 	movq	$0, 48(%rsp)
  40d869:	0f 57 c0 	xorps	%xmm0, %xmm0
  40d86c:	0f 11 44 24 38 	movups	%xmm0, 56(%rsp)
  40d871:	0f 11 44 24 48 	movups	%xmm0, 72(%rsp)
  40d876:	48 89 da 	movq	%rbx, %rdx
  40d879:	48 c1 eb 03 	shrq	$3, %rbx
  40d87d:	48 8b 74 24 78 	movq	120(%rsp), %rsi
  40d882:	48 89 f7 	movq	%rsi, %rdi
  40d885:	48 c1 ee 03 	shrq	$3, %rsi
  40d889:	49 89 d8 	movq	%rbx, %r8
  40d88c:	48 29 f3 	subq	%rsi, %rbx
  40d88f:	48 85 db 	testq	%rbx, %rbx
  40d892:	0f 86 a1 01 00 00 	jbe	417 <runtime.heapBitsSetTypeGCProg+0x239>
  40d898:	66 c7 44 24 30 01 00 	movw	$1, 48(%rsp)
  40d89f:	48 83 fb 01 	cmpq	$1, %rbx
  40d8a3:	0f 86 86 01 00 00 	jbe	390 <runtime.heapBitsSetTypeGCProg+0x22f>
  40d8a9:	c6 44 24 32 81 	movb	$-127, 50(%rsp)
  40d8ae:	48 ff cb 	decq	%rbx
  40d8b1:	be 03 00 00 00 	movl	$3, %esi
  40d8b6:	eb 18 	jmp	24 <runtime.heapBitsSetTypeGCProg+0xd0>
  40d8b8:	49 89 d9 	movq	%rbx, %r9
  40d8bb:	48 81 cb 80 00 00 00 	orq	$128, %rbx
  40d8c2:	88 5c 34 30 	movb	%bl, 48(%rsp,%rsi)
  40d8c6:	49 c1 e9 07 	shrq	$7, %r9
  40d8ca:	48 ff c6 	incq	%rsi
  40d8cd:	4c 89 cb 	movq	%r9, %rbx
  40d8d0:	48 81 fb 80 00 00 00 	cmpq	$128, %rbx
  40d8d7:	72 0b 	jb	11 <runtime.heapBitsSetTypeGCProg+0xe4>
  40d8d9:	48 83 fe 28 	cmpq	$40, %rsi
  40d8dd:	72 d9 	jb	-39 <runtime.heapBitsSetTypeGCProg+0xb8>
  40d8df:	e9 d8 01 00 00 	jmp	472 <runtime.heapBitsSetTypeGCProg+0x2bc>
  40d8e4:	48 83 fe 28 	cmpq	$40, %rsi
  40d8e8:	0f 83 c7 01 00 00 	jae	455 <runtime.heapBitsSetTypeGCProg+0x2b5>
  40d8ee:	88 5c 34 30 	movb	%bl, 48(%rsp,%rsi)
  40d8f2:	48 8d 5e 01 	leaq	1(%rsi), %rbx
  40d8f6:	48 83 fb 28 	cmpq	$40, %rbx
  40d8fa:	0f 83 ae 01 00 00 	jae	430 <runtime.heapBitsSetTypeGCProg+0x2ae>
  40d900:	c6 44 1c 30 80 	movb	$-128, 48(%rsp,%rbx)
  40d905:	48 ff c3 	incq	%rbx
  40d908:	eb 19 	jmp	25 <runtime.heapBitsSetTypeGCProg+0x123>
  40d90a:	4c 89 c6 	movq	%r8, %rsi
  40d90d:	49 81 c8 80 00 00 00 	orq	$128, %r8
  40d914:	44 88 44 1c 30 	movb	%r8b, 48(%rsp,%rbx)
  40d919:	48 c1 ee 07 	shrq	$7, %rsi
  40d91d:	48 ff c3 	incq	%rbx
  40d920:	49 89 f0 	movq	%rsi, %r8
  40d923:	49 81 f8 80 00 00 00 	cmpq	$128, %r8
  40d92a:	72 0b 	jb	11 <runtime.heapBitsSetTypeGCProg+0x137>
  40d92c:	48 83 fb 28 	cmpq	$40, %rbx
  40d930:	72 d8 	jb	-40 <runtime.heapBitsSetTypeGCProg+0x10a>
  40d932:	e9 70 01 00 00 	jmp	368 <runtime.heapBitsSetTypeGCProg+0x2a7>
  40d937:	48 83 fb 28 	cmpq	$40, %rbx
  40d93b:	0f 83 5f 01 00 00 	jae	351 <runtime.heapBitsSetTypeGCProg+0x2a0>
  40d941:	44 88 44 1c 30 	movb	%r8b, 48(%rsp,%rbx)
  40d946:	48 ff c3 	incq	%rbx
  40d949:	48 ff c8 	decq	%rax
  40d94c:	48 89 c6 	movq	%rax, %rsi
  40d94f:	eb 17 	jmp	23 <runtime.heapBitsSetTypeGCProg+0x168>
  40d951:	49 89 c0 	movq	%rax, %r8
  40d954:	48 0d 80 00 00 00 	orq	$128, %rax
  40d95a:	88 44 1c 30 	movb	%al, 48(%rsp,%rbx)
  40d95e:	49 c1 e8 07 	shrq	$7, %r8
  40d962:	48 ff c3 	incq	%rbx
  40d965:	4c 89 c0 	movq	%r8, %rax
  40d968:	48 3d 80 00 00 00 	cmpq	$128, %rax
  40d96e:	72 0b 	jb	11 <runtime.heapBitsSetTypeGCProg+0x17b>
  40d970:	48 83 fb 28 	cmpq	$40, %rbx
  40d974:	72 db 	jb	-37 <runtime.heapBitsSetTypeGCProg+0x151>
  40d976:	e9 1e 01 00 00 	jmp	286 <runtime.heapBitsSetTypeGCProg+0x299>
  40d97b:	48 83 fb 28 	cmpq	$40, %rbx
  40d97f:	0f 83 0d 01 00 00 	jae	269 <runtime.heapBitsSetTypeGCProg+0x292>
  40d985:	88 44 1c 30 	movb	%al, 48(%rsp,%rbx)
  40d989:	48 8d 43 01 	leaq	1(%rbx), %rax
  40d98d:	48 83 f8 28 	cmpq	$40, %rax
  40d991:	0f 83 f4 00 00 00 	jae	244 <runtime.heapBitsSetTypeGCProg+0x28b>
  40d997:	48 89 74 24 28 	movq	%rsi, 40(%rsp)
  40d99c:	c6 44 1c 31 00 	movb	$0, 49(%rsp,%rbx)
  40d9a1:	48 8d 44 24 30 	leaq	48(%rsp), %rax
  40d9a6:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40d9ab:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  40d9b3:	48 89 04 24 	movq	%rax, (%rsp)
  40d9b7:	48 8b 44 24 68 	movq	104(%rsp), %rax
  40d9bc:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40d9c1:	48 c7 44 24 18 02 00 00 00 	movq	$2, 24(%rsp)
  40d9ca:	e8 c1 02 00 00 	callq	705 <runtime.runGCProg>
  40d9cf:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  40d9d7:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  40d9dc:	48 0f af c1 	imulq	%rcx, %rax
  40d9e0:	48 8b 4c 24 78 	movq	120(%rsp), %rcx
  40d9e5:	48 01 c8 	addq	%rcx, %rax
  40d9e8:	48 c1 e8 03 	shrq	$3, %rax
  40d9ec:	48 83 c0 03 	addq	$3, %rax
  40d9f0:	48 c1 e8 02 	shrq	$2, %rax
  40d9f4:	48 8b 8c 24 90 00 00 00 	movq	144(%rsp), %rcx
  40d9fc:	48 c1 e9 05 	shrq	$5, %rcx
  40da00:	48 8b 54 24 68 	movq	104(%rsp), %rdx
  40da05:	48 89 d3 	movq	%rdx, %rbx
  40da08:	48 29 c2 	subq	%rax, %rdx
  40da0b:	48 29 cb 	subq	%rcx, %rbx
  40da0e:	48 89 d8 	movq	%rbx, %rax
  40da11:	48 ff c0 	incq	%rax
  40da14:	48 89 04 24 	movq	%rax, (%rsp)
  40da18:	48 29 da 	subq	%rbx, %rdx
  40da1b:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  40da20:	e8 4b 94 03 00 	callq	234571 <runtime.memclrNoHeapPointers>
  40da25:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  40da2a:	48 83 c4 60 	addq	$96, %rsp
  40da2e:	c3 	retq
  40da2f:	bb 02 00 00 00 	movl	$2, %ebx
  40da34:	e9 bd fe ff ff 	jmp	-323 <runtime.heapBitsSetTypeGCProg+0xf6>
  40da39:	31 db 	xorl	%ebx, %ebx
  40da3b:	e9 b6 fe ff ff 	jmp	-330 <runtime.heapBitsSetTypeGCProg+0xf6>
  40da40:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  40da48:	48 89 04 24 	movq	%rax, (%rsp)
  40da4c:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  40da55:	48 8b 44 24 68 	movq	104(%rsp), %rax
  40da5a:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40da5f:	48 c7 44 24 18 02 00 00 00 	movq	$2, 24(%rsp)
  40da68:	e8 23 02 00 00 	callq	547 <runtime.runGCProg>
  40da6d:	48 8b 44 24 20 	movq	32(%rsp), %rax
  40da72:	48 89 c1 	movq	%rax, %rcx
  40da75:	48 c1 e0 03 	shlq	$3, %rax
  40da79:	48 8b 54 24 78 	movq	120(%rsp), %rdx
  40da7e:	48 39 d0 	cmpq	%rdx, %rax
  40da81:	75 47 	jne	71 <runtime.heapBitsSetTypeGCProg+0x2ca>
  40da83:	48 89 c8 	movq	%rcx, %rax
  40da86:	e9 61 ff ff ff 	jmp	-159 <runtime.heapBitsSetTypeGCProg+0x1ec>
  40da8b:	e8 b0 1f 01 00 	callq	73648 <runtime.panicindex>
  40da90:	0f 0b 	ud2
  40da92:	e8 a9 1f 01 00 	callq	73641 <runtime.panicindex>
  40da97:	0f 0b 	ud2
  40da99:	e8 a2 1f 01 00 	callq	73634 <runtime.panicindex>
  40da9e:	0f 0b 	ud2
  40daa0:	e8 9b 1f 01 00 	callq	73627 <runtime.panicindex>
  40daa5:	0f 0b 	ud2
  40daa7:	e8 94 1f 01 00 	callq	73620 <runtime.panicindex>
  40daac:	0f 0b 	ud2
  40daae:	e8 8d 1f 01 00 	callq	73613 <runtime.panicindex>
  40dab3:	0f 0b 	ud2
  40dab5:	e8 86 1f 01 00 	callq	73606 <runtime.panicindex>
  40daba:	0f 0b 	ud2
  40dabc:	e8 7f 1f 01 00 	callq	73599 <runtime.panicindex>
  40dac1:	0f 0b 	ud2
  40dac3:	e8 58 20 01 00 	callq	73816 <runtime.panicdivide>
  40dac8:	0f 0b 	ud2
  40daca:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  40dacf:	e8 2c 40 01 00 	callq	81964 <runtime.printlock>
  40dad4:	48 8d 05 c5 fa 05 00 	leaq	391877(%rip), %rax
  40dadb:	48 89 04 24 	movq	%rax, (%rsp)
  40dadf:	48 c7 44 24 08 2b 00 00 00 	movq	$43, 8(%rsp)
  40dae8:	e8 53 49 01 00 	callq	84307 <runtime.printstring>
  40daed:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40daf2:	48 89 04 24 	movq	%rax, (%rsp)
  40daf6:	e8 75 46 01 00 	callq	83573 <runtime.printuint>
  40dafb:	48 8d 05 ce cc 05 00 	leaq	380110(%rip), %rax
  40db02:	48 89 04 24 	movq	%rax, (%rsp)
  40db06:	48 c7 44 24 08 0e 00 00 00 	movq	$14, 8(%rsp)
  40db0f:	e8 2c 49 01 00 	callq	84268 <runtime.printstring>
  40db14:	48 8b 44 24 78 	movq	120(%rsp), %rax
  40db19:	48 89 04 24 	movq	%rax, (%rsp)
  40db1d:	e8 4e 46 01 00 	callq	83534 <runtime.printuint>
  40db22:	e8 69 42 01 00 	callq	82537 <runtime.printnl>
  40db27:	e8 54 40 01 00 	callq	82004 <runtime.printunlock>
  40db2c:	48 8d 05 17 fa 05 00 	leaq	391703(%rip), %rax
  40db33:	48 89 04 24 	movq	%rax, (%rsp)
  40db37:	48 c7 44 24 08 2b 00 00 00 	movq	$43, 8(%rsp)
  40db40:	e8 8b 36 01 00 	callq	79499 <runtime.throw>
  40db45:	0f 0b 	ud2
  40db47:	48 8d 05 df f5 05 00 	leaq	390623(%rip), %rax
  40db4e:	48 89 04 24 	movq	%rax, (%rsp)
  40db52:	48 c7 44 24 08 27 00 00 00 	movq	$39, 8(%rsp)
  40db5b:	e8 70 36 01 00 	callq	79472 <runtime.throw>
  40db60:	0f 0b 	ud2
  40db62:	e8 09 6a 03 00 	callq	223753 <runtime.morestack_noctxt>
  40db67:	e9 94 fc ff ff 	jmp	-876 <runtime.heapBitsSetTypeGCProg>
  40db6c:	cc 	int3
  40db6d:	cc 	int3
  40db6e:	cc 	int3
  40db6f:	cc 	int3

runtime.progToPointerMask:
  40db70:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40db79:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40db7d:	0f 86 00 01 00 00 	jbe	256 <runtime.progToPointerMask+0x113>
  40db83:	48 83 ec 48 	subq	$72, %rsp
  40db87:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  40db8c:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  40db91:	48 8b 44 24 58 	movq	88(%rsp), %rax
  40db96:	48 c1 e8 03 	shrq	$3, %rax
  40db9a:	48 83 c0 07 	addq	$7, %rax
  40db9e:	48 c1 e8 03 	shrq	$3, %rax
  40dba2:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  40dba7:	48 8d 48 01 	leaq	1(%rax), %rcx
  40dbab:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  40dbb0:	48 89 0c 24 	movq	%rcx, (%rsp)
  40dbb4:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  40dbbd:	48 8d 15 cc 6b 0b 00 	leaq	748492(%rip), %rdx
  40dbc4:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  40dbc9:	e8 d2 d8 ff ff 	callq	-10030 <runtime.persistentalloc>
  40dbce:	48 8b 44 24 18 	movq	24(%rsp), %rax
  40dbd3:	84 00 	testb	%al, (%rax)
  40dbd5:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  40dbda:	48 81 f9 00 00 00 40 	cmpq	$1073741824, %rcx
  40dbe1:	0f 87 95 00 00 00 	ja	149 <runtime.progToPointerMask+0x10c>
  40dbe7:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  40dbec:	48 39 ca 	cmpq	%rcx, %rdx
  40dbef:	0f 83 80 00 00 00 	jae	128 <runtime.progToPointerMask+0x105>
  40dbf5:	c6 04 02 a1 	movb	$-95, (%rdx,%rax)
  40dbf9:	48 85 c9 	testq	%rcx, %rcx
  40dbfc:	76 70 	jbe	112 <runtime.progToPointerMask+0xfe>
  40dbfe:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  40dc03:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40dc08:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  40dc0d:	48 89 0c 24 	movq	%rcx, (%rsp)
  40dc11:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  40dc1a:	48 c7 44 24 18 01 00 00 00 	movq	$1, 24(%rsp)
  40dc23:	e8 68 00 00 00 	callq	104 <runtime.runGCProg>
  40dc28:	48 8b 44 24 20 	movq	32(%rsp), %rax
  40dc2d:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  40dc32:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  40dc37:	0f b6 14 0a 	movzbl	(%rdx,%rcx), %edx
  40dc3b:	80 fa a1 	cmpb	$-95, %dl
  40dc3e:	75 13 	jne	19 <runtime.progToPointerMask+0xe3>
  40dc40:	89 44 24 60 	movl	%eax, 96(%rsp)
  40dc44:	48 89 4c 24 68 	movq	%rcx, 104(%rsp)
  40dc49:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  40dc4e:	48 83 c4 48 	addq	$72, %rsp
  40dc52:	c3 	retq
  40dc53:	48 8d 05 ae e1 05 00 	leaq	385454(%rip), %rax
  40dc5a:	48 89 04 24 	movq	%rax, (%rsp)
  40dc5e:	48 c7 44 24 08 1b 00 00 00 	movq	$27, 8(%rsp)
  40dc67:	e8 64 35 01 00 	callq	79204 <runtime.throw>
  40dc6c:	0f 0b 	ud2
  40dc6e:	e8 cd 1d 01 00 	callq	73165 <runtime.panicindex>
  40dc73:	0f 0b 	ud2
  40dc75:	e8 c6 1d 01 00 	callq	73158 <runtime.panicindex>
  40dc7a:	0f 0b 	ud2
  40dc7c:	e8 2f 1e 01 00 	callq	73263 <runtime.panicslice>
  40dc81:	0f 0b 	ud2
  40dc83:	e8 e8 68 03 00 	callq	223464 <runtime.morestack_noctxt>
  40dc88:	e9 e3 fe ff ff 	jmp	-285 <runtime.progToPointerMask>
  40dc8d:	cc 	int3
  40dc8e:	cc 	int3
  40dc8f:	cc 	int3

runtime.runGCProg:
  40dc90:	48 83 ec 08 	subq	$8, %rsp
  40dc94:	48 89 2c 24 	movq	%rbp, (%rsp)
  40dc98:	48 8d 2c 24 	leaq	(%rsp), %rbp
  40dc9c:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  40dca1:	48 8b 5c 24 28 	movq	40(%rsp), %rbx
  40dca6:	48 8b 74 24 18 	movq	24(%rsp), %rsi
  40dcab:	48 8b 7c 24 10 	movq	16(%rsp), %rdi
  40dcb0:	48 89 d0 	movq	%rdx, %rax
  40dcb3:	31 c9 	xorl	%ecx, %ecx
  40dcb5:	49 89 c8 	movq	%rcx, %r8
  40dcb8:	eb 04 	jmp	4 <runtime.runGCProg+0x2e>
  40dcba:	48 83 c1 f8 	addq	$-8, %rcx
  40dcbe:	48 83 f9 08 	cmpq	$8, %rcx
  40dcc2:	72 51 	jb	81 <runtime.runGCProg+0x85>
  40dcc4:	48 83 fb 01 	cmpq	$1, %rbx
  40dcc8:	75 0c 	jne	12 <runtime.runGCProg+0x46>
  40dcca:	44 88 02 	movb	%r8b, (%rdx)
  40dccd:	49 c1 e8 08 	shrq	$8, %r8
  40dcd1:	48 ff c2 	incq	%rdx
  40dcd4:	eb e4 	jmp	-28 <runtime.runGCProg+0x2a>
  40dcd6:	4d 89 c1 	movq	%r8, %r9
  40dcd9:	49 83 e0 0f 	andq	$15, %r8
  40dcdd:	49 81 c8 f0 00 00 00 	orq	$240, %r8
  40dce4:	44 88 02 	movb	%r8b, (%rdx)
  40dce7:	4c 8d 52 ff 	leaq	-1(%rdx), %r10
  40dceb:	41 84 02 	testb	%al, (%r10)
  40dcee:	4d 89 c8 	movq	%r9, %r8
  40dcf1:	49 c1 e9 04 	shrq	$4, %r9
  40dcf5:	49 83 e1 0f 	andq	$15, %r9
  40dcf9:	49 81 c9 f0 00 00 00 	orq	$240, %r9
  40dd00:	49 c7 c2 ff ff ff ff 	movq	$-1, %r10
  40dd07:	46 88 0c 12 	movb	%r9b, (%rdx,%r10)
  40dd0b:	49 c1 e8 08 	shrq	$8, %r8
  40dd0f:	48 83 c2 fe 	addq	$-2, %rdx
  40dd13:	eb a5 	jmp	-91 <runtime.runGCProg+0x2a>
  40dd15:	44 0f b6 0f 	movzbl	(%rdi), %r9d
  40dd19:	4d 89 ca 	movq	%r9, %r10
  40dd1c:	49 83 e1 7f 	andq	$127, %r9
  40dd20:	48 ff c7 	incq	%rdi
  40dd23:	41 0f ba e2 07 	btl	$7, %r10d
  40dd28:	0f 82 5d 01 00 00 	jb	349 <runtime.runGCProg+0x1fb>
  40dd2e:	49 f7 c2 7f 00 00 00 	testq	$127, %r10
  40dd35:	0f 85 94 00 00 00 	jne	148 <runtime.runGCProg+0x13f>
  40dd3b:	48 85 f6 	testq	%rsi, %rsi
  40dd3e:	74 10 	je	16 <runtime.runGCProg+0xc0>
  40dd40:	31 ff 	xorl	%edi, %edi
  40dd42:	49 89 f9 	movq	%rdi, %r9
  40dd45:	48 89 f7 	movq	%rsi, %rdi
  40dd48:	4c 89 ce 	movq	%r9, %rsi
  40dd4b:	e9 6e ff ff ff 	jmp	-146 <runtime.runGCProg+0x2e>
  40dd50:	48 83 fb 01 	cmpq	$1, %rbx
  40dd54:	75 3a 	jne	58 <runtime.runGCProg+0x100>
  40dd56:	48 89 d3 	movq	%rdx, %rbx
  40dd59:	48 29 c2 	subq	%rax, %rdx
  40dd5c:	48 8d 04 d1 	leaq	(%rcx,%rdx,8), %rax
  40dd60:	48 89 ca 	movq	%rcx, %rdx
  40dd63:	48 f7 d9 	negq	%rcx
  40dd66:	48 83 e1 07 	andq	$7, %rcx
  40dd6a:	48 01 d1 	addq	%rdx, %rcx
  40dd6d:	eb 0e 	jmp	14 <runtime.runGCProg+0xed>
  40dd6f:	44 88 03 	movb	%r8b, (%rbx)
  40dd72:	48 83 c1 f8 	addq	$-8, %rcx
  40dd76:	49 c1 e8 08 	shrq	$8, %r8
  40dd7a:	48 ff c3 	incq	%rbx
  40dd7d:	48 85 c9 	testq	%rcx, %rcx
  40dd80:	77 ed 	ja	-19 <runtime.runGCProg+0xdf>
  40dd82:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  40dd87:	48 8b 2c 24 	movq	(%rsp), %rbp
  40dd8b:	48 83 c4 08 	addq	$8, %rsp
  40dd8f:	c3 	retq
  40dd90:	48 89 d3 	movq	%rdx, %rbx
  40dd93:	48 29 d0 	subq	%rdx, %rax
  40dd96:	48 8d 04 81 	leaq	(%rcx,%rax,4), %rax
  40dd9a:	48 89 ca 	movq	%rcx, %rdx
  40dd9d:	48 f7 d9 	negq	%rcx
  40dda0:	48 83 e1 03 	andq	$3, %rcx
  40dda4:	48 01 d1 	addq	%rdx, %rcx
  40dda7:	eb 1f 	jmp	31 <runtime.runGCProg+0x138>
  40dda9:	4c 89 c2 	movq	%r8, %rdx
  40ddac:	49 83 e0 0f 	andq	$15, %r8
  40ddb0:	49 81 c8 f0 00 00 00 	orq	$240, %r8
  40ddb7:	44 88 03 	movb	%r8b, (%rbx)
  40ddba:	48 83 c1 fc 	addq	$-4, %rcx
  40ddbe:	48 c1 ea 04 	shrq	$4, %rdx
  40ddc2:	48 ff cb 	decq	%rbx
  40ddc5:	49 89 d0 	movq	%rdx, %r8
  40ddc8:	48 85 c9 	testq	%rcx, %rcx
  40ddcb:	77 dc 	ja	-36 <runtime.runGCProg+0x119>
  40ddcd:	eb b3 	jmp	-77 <runtime.runGCProg+0xf2>
  40ddcf:	49 c1 e9 03 	shrq	$3, %r9
  40ddd3:	45 31 db 	xorl	%r11d, %r11d
  40ddd6:	eb 06 	jmp	6 <runtime.runGCProg+0x14e>
  40ddd8:	49 ff c3 	incq	%r11
  40dddb:	48 ff c7 	incq	%rdi
  40ddde:	4d 39 cb 	cmpq	%r9, %r11
  40dde1:	73 67 	jae	103 <runtime.runGCProg+0x1ba>
  40dde3:	44 0f b6 27 	movzbl	(%rdi), %r12d
  40dde7:	49 d3 e4 	shlq	%cl, %r12
  40ddea:	48 83 f9 40 	cmpq	$64, %rcx
  40ddee:	4d 19 ed 	sbbq	%r13, %r13
  40ddf1:	4d 21 ec 	andq	%r13, %r12
  40ddf4:	4d 09 e0 	orq	%r12, %r8
  40ddf7:	48 83 fb 01 	cmpq	$1, %rbx
  40ddfb:	75 0c 	jne	12 <runtime.runGCProg+0x179>
  40ddfd:	44 88 02 	movb	%r8b, (%rdx)
  40de00:	49 c1 e8 08 	shrq	$8, %r8
  40de04:	48 ff c2 	incq	%rdx
  40de07:	eb cf 	jmp	-49 <runtime.runGCProg+0x148>
  40de09:	4d 89 c4 	movq	%r8, %r12
  40de0c:	49 83 e0 0f 	andq	$15, %r8
  40de10:	49 81 c8 f0 00 00 00 	orq	$240, %r8
  40de17:	44 88 02 	movb	%r8b, (%rdx)
  40de1a:	4c 8d 6a ff 	leaq	-1(%rdx), %r13
  40de1e:	41 84 45 00 	testb	%al, (%r13)
  40de22:	4d 89 e0 	movq	%r12, %r8
  40de25:	49 c1 ec 04 	shrq	$4, %r12
  40de29:	49 83 e4 0f 	andq	$15, %r12
  40de2d:	49 81 cc f0 00 00 00 	orq	$240, %r12
  40de34:	49 c7 c5 ff ff ff ff 	movq	$-1, %r13
  40de3b:	45 88 64 15 00 	movb	%r12b, (%r13,%rdx)
  40de40:	49 c1 e8 08 	shrq	$8, %r8
  40de44:	48 83 c2 fe 	addq	$-2, %rdx
  40de48:	eb 8e 	jmp	-114 <runtime.runGCProg+0x148>
  40de4a:	4d 89 d1 	movq	%r10, %r9
  40de4d:	49 83 e2 07 	andq	$7, %r10
  40de51:	49 f7 c1 07 00 00 00 	testq	$7, %r9
  40de58:	76 2c 	jbe	44 <runtime.runGCProg+0x1f6>
  40de5a:	44 0f b6 0f 	movzbl	(%rdi), %r9d
  40de5e:	49 d3 e1 	shlq	%cl, %r9
  40de61:	48 83 f9 40 	cmpq	$64, %rcx
  40de65:	4d 19 db 	sbbq	%r11, %r11
  40de68:	4d 21 d9 	andq	%r11, %r9
  40de6b:	4d 09 c8 	orq	%r9, %r8
  40de6e:	4d 8d 0c 0a 	leaq	(%r10,%rcx), %r9
  40de72:	48 ff c7 	incq	%rdi
  40de75:	4c 89 c9 	movq	%r9, %rcx
  40de78:	49 89 f2 	movq	%rsi, %r10
  40de7b:	48 89 fe 	movq	%rdi, %rsi
  40de7e:	4c 89 d7 	movq	%r10, %rdi
  40de81:	e9 bc fe ff ff 	jmp	-324 <runtime.runGCProg+0xb2>
  40de86:	49 89 c9 	movq	%rcx, %r9
  40de89:	eb ea 	jmp	-22 <runtime.runGCProg+0x1e5>
  40de8b:	49 f7 c2 7f 00 00 00 	testq	$127, %r10
  40de92:	0f 85 76 04 00 00 	jne	1142 <runtime.runGCProg+0x67e>
  40de98:	45 31 d2 	xorl	%r10d, %r10d
  40de9b:	eb 07 	jmp	7 <runtime.runGCProg+0x214>
  40de9d:	4c 8d 51 07 	leaq	7(%rcx), %r10
  40dea1:	4c 89 e9 	movq	%r13, %rcx
  40dea4:	44 0f b6 1f 	movzbl	(%rdi), %r11d
  40dea8:	4d 89 dc 	movq	%r11, %r12
  40deab:	49 83 e3 7f 	andq	$127, %r11
  40deaf:	49 89 cd 	movq	%rcx, %r13
  40deb2:	4c 89 d1 	movq	%r10, %rcx
  40deb5:	49 d3 e3 	shlq	%cl, %r11
  40deb8:	48 83 f9 40 	cmpq	$64, %rcx
  40debc:	4d 19 f6 	sbbq	%r14, %r14
  40debf:	4d 21 de 	andq	%r11, %r14
  40dec2:	4d 09 f1 	orq	%r14, %r9
  40dec5:	48 ff c7 	incq	%rdi
  40dec8:	41 0f ba e4 07 	btl	$7, %r12d
  40decd:	72 ce 	jb	-50 <runtime.runGCProg+0x20d>
  40decf:	31 c9 	xorl	%ecx, %ecx
  40ded1:	45 31 d2 	xorl	%r10d, %r10d
  40ded4:	eb 07 	jmp	7 <runtime.runGCProg+0x24d>
  40ded6:	4c 8d 51 07 	leaq	7(%rcx), %r10
  40deda:	4c 89 f1 	movq	%r14, %rcx
  40dedd:	44 0f b6 1f 	movzbl	(%rdi), %r11d
  40dee1:	4d 89 dc 	movq	%r11, %r12
  40dee4:	49 83 e3 7f 	andq	$127, %r11
  40dee8:	49 89 ce 	movq	%rcx, %r14
  40deeb:	4c 89 d1 	movq	%r10, %rcx
  40deee:	49 d3 e3 	shlq	%cl, %r11
  40def1:	48 83 f9 40 	cmpq	$64, %rcx
  40def5:	4d 19 ff 	sbbq	%r15, %r15
  40def8:	4d 21 fb 	andq	%r15, %r11
  40defb:	4d 09 de 	orq	%r11, %r14
  40defe:	48 ff c7 	incq	%rdi
  40df01:	41 0f ba e4 07 	btl	$7, %r12d
  40df06:	72 ce 	jb	-50 <runtime.runGCProg+0x246>
  40df08:	4d 0f af f1 	imulq	%r9, %r14
  40df0c:	49 83 f9 39 	cmpq	$57, %r9
  40df10:	0f 87 f2 01 00 00 	ja	498 <runtime.runGCProg+0x478>
  40df16:	48 83 fb 01 	cmpq	$1, %rbx
  40df1a:	0f 85 bc 01 00 00 	jne	444 <runtime.runGCProg+0x44c>
  40df20:	4c 8d 52 ff 	leaq	-1(%rdx), %r10
  40df24:	4c 89 e9 	movq	%r13, %rcx
  40df27:	4d 89 c3 	movq	%r8, %r11
  40df2a:	eb 12 	jmp	18 <runtime.runGCProg+0x2ae>
  40df2c:	49 c1 e0 08 	shlq	$8, %r8
  40df30:	45 0f b6 22 	movzbl	(%r10), %r12d
  40df34:	4d 09 e0 	orq	%r12, %r8
  40df37:	49 83 c5 08 	addq	$8, %r13
  40df3b:	49 ff ca 	decq	%r10
  40df3e:	4d 39 cd 	cmpq	%r9, %r13
  40df41:	72 e9 	jb	-23 <runtime.runGCProg+0x29c>
  40df43:	4d 39 cd 	cmpq	%r9, %r13
  40df46:	0f 86 85 01 00 00 	jbe	389 <runtime.runGCProg+0x441>
  40df4c:	4d 29 cd 	subq	%r9, %r13
  40df4f:	49 89 ca 	movq	%rcx, %r10
  40df52:	4c 89 e9 	movq	%r13, %rcx
  40df55:	49 d3 e8 	shrq	%cl, %r8
  40df58:	48 83 f9 40 	cmpq	$64, %rcx
  40df5c:	4d 19 e4 	sbbq	%r12, %r12
  40df5f:	4d 21 e0 	andq	%r12, %r8
  40df62:	49 83 f9 01 	cmpq	$1, %r9
  40df66:	0f 85 e5 00 00 00 	jne	229 <runtime.runGCProg+0x3c1>
  40df6c:	49 83 f8 01 	cmpq	$1, %r8
  40df70:	0f 85 d3 00 00 00 	jne	211 <runtime.runGCProg+0x3b9>
  40df76:	b9 39 00 00 00 	movl	$57, %ecx
  40df7b:	49 b8 ff ff ff ff ff ff ff 01 	movabsq	$144115188075855871, %r8
  40df85:	eb 20 	jmp	32 <runtime.runGCProg+0x317>
  40df87:	44 88 1a 	movb	%r11b, (%rdx)
  40df8a:	49 c1 eb 08 	shrq	$8, %r11
  40df8e:	49 83 c0 f8 	addq	$-8, %r8
  40df92:	48 ff c2 	incq	%rdx
  40df95:	49 83 f8 08 	cmpq	$8, %r8
  40df99:	73 ec 	jae	-20 <runtime.runGCProg+0x2f7>
  40df9b:	4d 29 ce 	subq	%r9, %r14
  40df9e:	4c 89 c9 	movq	%r9, %rcx
  40dfa1:	4d 89 c2 	movq	%r8, %r10
  40dfa4:	4d 89 e0 	movq	%r12, %r8
  40dfa7:	49 39 ce 	cmpq	%rcx, %r14
  40dfaa:	72 4c 	jb	76 <runtime.runGCProg+0x368>
  40dfac:	49 89 c9 	movq	%rcx, %r9
  40dfaf:	4c 89 d1 	movq	%r10, %rcx
  40dfb2:	4d 89 c4 	movq	%r8, %r12
  40dfb5:	49 d3 e0 	shlq	%cl, %r8
  40dfb8:	48 83 f9 40 	cmpq	$64, %rcx
  40dfbc:	4d 19 ed 	sbbq	%r13, %r13
  40dfbf:	4d 21 e8 	andq	%r13, %r8
  40dfc2:	4d 09 c3 	orq	%r8, %r11
  40dfc5:	4d 8d 04 09 	leaq	(%r9,%rcx), %r8
  40dfc9:	48 83 fb 01 	cmpq	$1, %rbx
  40dfcd:	74 c6 	je	-58 <runtime.runGCProg+0x305>
  40dfcf:	eb 1f 	jmp	31 <runtime.runGCProg+0x360>
  40dfd1:	4d 89 da 	movq	%r11, %r10
  40dfd4:	49 83 e3 0f 	andq	$15, %r11
  40dfd8:	49 81 cb f0 00 00 00 	orq	$240, %r11
  40dfdf:	44 88 1a 	movb	%r11b, (%rdx)
  40dfe2:	49 c1 ea 04 	shrq	$4, %r10
  40dfe6:	49 83 c0 fc 	addq	$-4, %r8
  40dfea:	48 ff ca 	decq	%rdx
  40dfed:	4d 89 d3 	movq	%r10, %r11
  40dff0:	49 83 f8 04 	cmpq	$4, %r8
  40dff4:	73 db 	jae	-37 <runtime.runGCProg+0x341>
  40dff6:	eb a3 	jmp	-93 <runtime.runGCProg+0x30b>
  40dff8:	4d 85 f6 	testq	%r14, %r14
  40dffb:	76 47 	jbe	71 <runtime.runGCProg+0x3b4>
  40dffd:	4c 89 f1 	movq	%r14, %rcx
  40e000:	41 b9 01 00 00 00 	movl	$1, %r9d
  40e006:	49 d3 e1 	shlq	%cl, %r9
  40e009:	48 83 f9 40 	cmpq	$64, %rcx
  40e00d:	4d 19 e4 	sbbq	%r12, %r12
  40e010:	4d 21 e1 	andq	%r12, %r9
  40e013:	49 ff c9 	decq	%r9
  40e016:	4d 21 c8 	andq	%r9, %r8
  40e019:	4c 89 d1 	movq	%r10, %rcx
  40e01c:	49 d3 e0 	shlq	%cl, %r8
  40e01f:	48 83 f9 40 	cmpq	$64, %rcx
  40e023:	4d 19 c9 	sbbq	%r9, %r9
  40e026:	4d 21 c8 	andq	%r9, %r8
  40e029:	4d 09 c3 	orq	%r8, %r11
  40e02c:	4e 8d 04 31 	leaq	(%rcx,%r14), %r8
  40e030:	4c 89 c1 	movq	%r8, %rcx
  40e033:	4d 89 d8 	movq	%r11, %r8
  40e036:	49 89 f1 	movq	%rsi, %r9
  40e039:	48 89 fe 	movq	%rdi, %rsi
  40e03c:	4c 89 cf 	movq	%r9, %rdi
  40e03f:	e9 fe fc ff ff 	jmp	-770 <runtime.runGCProg+0xb2>
  40e044:	4d 89 d0 	movq	%r10, %r8
  40e047:	eb e7 	jmp	-25 <runtime.runGCProg+0x3a0>
  40e049:	4c 89 f1 	movq	%r14, %rcx
  40e04c:	e9 56 ff ff ff 	jmp	-170 <runtime.runGCProg+0x317>
  40e051:	4f 8d 24 09 	leaq	(%r9,%r9), %r12
  40e055:	49 83 fc 39 	cmpq	$57, %r12
  40e059:	77 6b 	ja	107 <runtime.runGCProg+0x436>
  40e05b:	4c 89 c9 	movq	%r9, %rcx
  40e05e:	eb 20 	jmp	32 <runtime.runGCProg+0x3f0>
  40e060:	49 89 cc 	movq	%rcx, %r12
  40e063:	4c 89 c9 	movq	%r9, %rcx
  40e066:	4d 89 c5 	movq	%r8, %r13
  40e069:	49 d3 e0 	shlq	%cl, %r8
  40e06c:	48 83 f9 40 	cmpq	$64, %rcx
  40e070:	4d 19 ff 	sbbq	%r15, %r15
  40e073:	4d 21 f8 	andq	%r15, %r8
  40e076:	4d 09 e8 	orq	%r13, %r8
  40e079:	4c 8d 0c 09 	leaq	(%rcx,%rcx), %r9
  40e07d:	4c 89 e1 	movq	%r12, %rcx
  40e080:	49 83 f9 40 	cmpq	$64, %r9
  40e084:	76 da 	jbe	-38 <runtime.runGCProg+0x3d0>
  40e086:	48 85 c9 	testq	%rcx, %rcx
  40e089:	0f 84 87 02 00 00 	je	647 <runtime.runGCProg+0x686>
  40e08f:	49 89 c1 	movq	%rax, %r9
  40e092:	b8 39 00 00 00 	movl	$57, %eax
  40e097:	49 89 d4 	movq	%rdx, %r12
  40e09a:	31 d2 	xorl	%edx, %edx
  40e09c:	48 f7 f1 	divq	%rcx
  40e09f:	48 0f af c8 	imulq	%rax, %rcx
  40e0a3:	ba 01 00 00 00 	movl	$1, %edx
  40e0a8:	48 d3 e2 	shlq	%cl, %rdx
  40e0ab:	48 83 f9 40 	cmpq	$64, %rcx
  40e0af:	4d 19 ed 	sbbq	%r13, %r13
  40e0b2:	4c 21 ea 	andq	%r13, %rdx
  40e0b5:	48 ff ca 	decq	%rdx
  40e0b8:	49 21 d0 	andq	%rdx, %r8
  40e0bb:	4c 89 c8 	movq	%r9, %rax
  40e0be:	4c 89 e2 	movq	%r12, %rdx
  40e0c1:	e9 e1 fe ff ff 	jmp	-287 <runtime.runGCProg+0x317>
  40e0c6:	49 89 d4 	movq	%rdx, %r12
  40e0c9:	4c 89 c9 	movq	%r9, %rcx
  40e0cc:	49 89 c1 	movq	%rax, %r9
  40e0cf:	eb ea 	jmp	-22 <runtime.runGCProg+0x42b>
  40e0d1:	49 89 ca 	movq	%rcx, %r10
  40e0d4:	4d 89 e9 	movq	%r13, %r9
  40e0d7:	e9 86 fe ff ff 	jmp	-378 <runtime.runGCProg+0x2d2>
  40e0dc:	4c 8d 52 01 	leaq	1(%rdx), %r10
  40e0e0:	4c 89 e9 	movq	%r13, %rcx
  40e0e3:	4d 89 c3 	movq	%r8, %r11
  40e0e6:	eb 16 	jmp	22 <runtime.runGCProg+0x46e>
  40e0e8:	49 c1 e0 04 	shlq	$4, %r8
  40e0ec:	45 0f b6 22 	movzbl	(%r10), %r12d
  40e0f0:	49 83 e4 0f 	andq	$15, %r12
  40e0f4:	4d 09 e0 	orq	%r12, %r8
  40e0f7:	49 83 c5 04 	addq	$4, %r13
  40e0fb:	49 ff c2 	incq	%r10
  40e0fe:	4d 39 cd 	cmpq	%r9, %r13
  40e101:	72 e5 	jb	-27 <runtime.runGCProg+0x458>
  40e103:	e9 3b fe ff ff 	jmp	-453 <runtime.runGCProg+0x2b3>
  40e108:	4d 29 e9 	subq	%r13, %r9
  40e10b:	48 83 fb 01 	cmpq	$1, %rbx
  40e10f:	0f 85 f2 00 00 00 	jne	242 <runtime.runGCProg+0x577>
  40e115:	4d 8d 51 07 	leaq	7(%r9), %r10
  40e119:	49 c1 ea 03 	shrq	$3, %r10
  40e11d:	4d 89 cb 	movq	%r9, %r11
  40e120:	49 83 e1 07 	andq	$7, %r9
  40e124:	49 89 d4 	movq	%rdx, %r12
  40e127:	4c 29 d2 	subq	%r10, %rdx
  40e12a:	49 89 d2 	movq	%rdx, %r10
  40e12d:	49 f7 c3 07 00 00 00 	testq	$7, %r11
  40e134:	0f 84 c2 00 00 00 	je	194 <runtime.runGCProg+0x56c>
  40e13a:	0f b6 12 	movzbl	(%rdx), %edx
  40e13d:	49 8d 49 f8 	leaq	-8(%r9), %rcx
  40e141:	48 f7 d9 	negq	%rcx
  40e144:	48 d3 ea 	shrq	%cl, %rdx
  40e147:	48 83 f9 40 	cmpq	$64, %rcx
  40e14b:	4d 19 db 	sbbq	%r11, %r11
  40e14e:	4c 21 da 	andq	%r11, %rdx
  40e151:	4c 89 e9 	movq	%r13, %rcx
  40e154:	48 d3 e2 	shlq	%cl, %rdx
  40e157:	48 83 f9 40 	cmpq	$64, %rcx
  40e15b:	4d 19 db 	sbbq	%r11, %r11
  40e15e:	4c 21 da 	andq	%r11, %rdx
  40e161:	49 09 d0 	orq	%rdx, %r8
  40e164:	49 8d 14 09 	leaq	(%r9,%rcx), %rdx
  40e168:	4d 29 ce 	subq	%r9, %r14
  40e16b:	4d 8d 4a 01 	leaq	1(%r10), %r9
  40e16f:	4c 89 f1 	movq	%r14, %rcx
  40e172:	49 c1 ee 03 	shrq	$3, %r14
  40e176:	eb 2e 	jmp	46 <runtime.runGCProg+0x516>
  40e178:	45 0f b6 11 	movzbl	(%r9), %r10d
  40e17c:	49 89 cb 	movq	%rcx, %r11
  40e17f:	48 89 d1 	movq	%rdx, %rcx
  40e182:	49 d3 e2 	shlq	%cl, %r10
  40e185:	48 83 f9 40 	cmpq	$64, %rcx
  40e189:	4d 19 ed 	sbbq	%r13, %r13
  40e18c:	4d 21 ea 	andq	%r13, %r10
  40e18f:	4d 09 d0 	orq	%r10, %r8
  40e192:	45 88 04 24 	movb	%r8b, (%r12)
  40e196:	49 ff ce 	decq	%r14
  40e199:	49 c1 e8 08 	shrq	$8, %r8
  40e19d:	49 ff c1 	incq	%r9
  40e1a0:	49 ff c4 	incq	%r12
  40e1a3:	4c 89 d9 	movq	%r11, %rcx
  40e1a6:	4d 85 f6 	testq	%r14, %r14
  40e1a9:	77 cd 	ja	-51 <runtime.runGCProg+0x4e8>
  40e1ab:	49 89 ca 	movq	%rcx, %r10
  40e1ae:	48 83 e1 07 	andq	$7, %rcx
  40e1b2:	49 f7 c2 07 00 00 00 	testq	$7, %r10
  40e1b9:	76 2d 	jbe	45 <runtime.runGCProg+0x558>
  40e1bb:	45 0f b6 09 	movzbl	(%r9), %r9d
  40e1bf:	41 ba 01 00 00 00 	movl	$1, %r10d
  40e1c5:	49 d3 e2 	shlq	%cl, %r10
  40e1c8:	49 ff ca 	decq	%r10
  40e1cb:	4d 21 ca 	andq	%r9, %r10
  40e1ce:	49 89 c9 	movq	%rcx, %r9
  40e1d1:	48 89 d1 	movq	%rdx, %rcx
  40e1d4:	49 d3 e2 	shlq	%cl, %r10
  40e1d7:	48 83 f9 40 	cmpq	$64, %rcx
  40e1db:	4d 19 db 	sbbq	%r11, %r11
  40e1de:	4d 21 da 	andq	%r11, %r10
  40e1e1:	4d 09 d0 	orq	%r10, %r8
  40e1e4:	49 8d 14 09 	leaq	(%r9,%rcx), %rdx
  40e1e8:	48 89 d1 	movq	%rdx, %rcx
  40e1eb:	4c 89 e2 	movq	%r12, %rdx
  40e1ee:	49 89 f1 	movq	%rsi, %r9
  40e1f1:	48 89 fe 	movq	%rdi, %rsi
  40e1f4:	4c 89 cf 	movq	%r9, %rdi
  40e1f7:	e9 46 fb ff ff 	jmp	-1210 <runtime.runGCProg+0xb2>
  40e1fc:	49 89 d1 	movq	%rdx, %r9
  40e1ff:	4c 89 ea 	movq	%r13, %rdx
  40e202:	e9 68 ff ff ff 	jmp	-152 <runtime.runGCProg+0x4df>
  40e207:	4d 8d 51 03 	leaq	3(%r9), %r10
  40e20b:	49 c1 ea 02 	shrq	$2, %r10
  40e20f:	4d 89 cb 	movq	%r9, %r11
  40e212:	49 83 e1 03 	andq	$3, %r9
  40e216:	4e 8d 24 12 	leaq	(%rdx,%r10), %r12
  40e21a:	49 f7 c3 03 00 00 00 	testq	$3, %r11
  40e221:	0f 84 dc 00 00 00 	je	220 <runtime.runGCProg+0x673>
  40e227:	41 84 04 24 	testb	%al, (%r12)
  40e22b:	46 0f b6 1c 12 	movzbl	(%rdx,%r10), %r11d
  40e230:	49 83 e3 0f 	andq	$15, %r11
  40e234:	49 8d 49 fc 	leaq	-4(%r9), %rcx
  40e238:	48 f7 d9 	negq	%rcx
  40e23b:	49 d3 eb 	shrq	%cl, %r11
  40e23e:	48 83 f9 40 	cmpq	$64, %rcx
  40e242:	4d 19 e4 	sbbq	%r12, %r12
  40e245:	4d 21 e3 	andq	%r12, %r11
  40e248:	4c 89 e9 	movq	%r13, %rcx
  40e24b:	49 d3 e3 	shlq	%cl, %r11
  40e24e:	48 83 f9 40 	cmpq	$64, %rcx
  40e252:	4d 19 e4 	sbbq	%r12, %r12
  40e255:	4d 21 e3 	andq	%r12, %r11
  40e258:	4d 09 d8 	orq	%r11, %r8
  40e25b:	4d 8d 1c 09 	leaq	(%r9,%rcx), %r11
  40e25f:	4d 29 ce 	subq	%r9, %r14
  40e262:	4e 8d 4c 12 ff 	leaq	-1(%rdx,%r10), %r9
  40e267:	4c 89 f1 	movq	%r14, %rcx
  40e26a:	49 c1 ee 02 	shrq	$2, %r14
  40e26e:	eb 42 	jmp	66 <runtime.runGCProg+0x622>
  40e270:	45 0f b6 11 	movzbl	(%r9), %r10d
  40e274:	49 83 e2 0f 	andq	$15, %r10
  40e278:	49 89 cc 	movq	%rcx, %r12
  40e27b:	4c 89 d9 	movq	%r11, %rcx
  40e27e:	49 d3 e2 	shlq	%cl, %r10
  40e281:	48 83 f9 40 	cmpq	$64, %rcx
  40e285:	4d 19 ed 	sbbq	%r13, %r13
  40e288:	4d 21 ea 	andq	%r13, %r10
  40e28b:	4d 09 d0 	orq	%r10, %r8
  40e28e:	4d 89 c2 	movq	%r8, %r10
  40e291:	49 83 e0 0f 	andq	$15, %r8
  40e295:	49 81 c8 f0 00 00 00 	orq	$240, %r8
  40e29c:	44 88 02 	movb	%r8b, (%rdx)
  40e29f:	49 ff ce 	decq	%r14
  40e2a2:	49 c1 ea 04 	shrq	$4, %r10
  40e2a6:	49 ff c9 	decq	%r9
  40e2a9:	48 ff ca 	decq	%rdx
  40e2ac:	4c 89 e1 	movq	%r12, %rcx
  40e2af:	4d 89 d0 	movq	%r10, %r8
  40e2b2:	4d 85 f6 	testq	%r14, %r14
  40e2b5:	77 b9 	ja	-71 <runtime.runGCProg+0x5e0>
  40e2b7:	49 89 ca 	movq	%rcx, %r10
  40e2ba:	48 83 e1 03 	andq	$3, %rcx
  40e2be:	49 f7 c2 03 00 00 00 	testq	$3, %r10
  40e2c5:	76 37 	jbe	55 <runtime.runGCProg+0x66e>
  40e2c7:	45 0f b6 09 	movzbl	(%r9), %r9d
  40e2cb:	41 ba 01 00 00 00 	movl	$1, %r10d
  40e2d1:	49 d3 e2 	shlq	%cl, %r10
  40e2d4:	49 ff ca 	decq	%r10
  40e2d7:	4d 21 ca 	andq	%r9, %r10
  40e2da:	49 89 c9 	movq	%rcx, %r9
  40e2dd:	4c 89 d9 	movq	%r11, %rcx
  40e2e0:	49 d3 e2 	shlq	%cl, %r10
  40e2e3:	48 83 f9 40 	cmpq	$64, %rcx
  40e2e7:	4d 19 e4 	sbbq	%r12, %r12
  40e2ea:	4d 21 e2 	andq	%r12, %r10
  40e2ed:	4d 09 d0 	orq	%r10, %r8
  40e2f0:	49 01 c9 	addq	%rcx, %r9
  40e2f3:	49 89 d4 	movq	%rdx, %r12
  40e2f6:	4c 89 ca 	movq	%r9, %rdx
  40e2f9:	e9 ea fe ff ff 	jmp	-278 <runtime.runGCProg+0x558>
  40e2fe:	4d 89 d9 	movq	%r11, %r9
  40e301:	eb f0 	jmp	-16 <runtime.runGCProg+0x663>
  40e303:	4d 89 e1 	movq	%r12, %r9
  40e306:	4d 89 eb 	movq	%r13, %r11
  40e309:	e9 59 ff ff ff 	jmp	-167 <runtime.runGCProg+0x5d7>
  40e30e:	49 89 cd 	movq	%rcx, %r13
  40e311:	e9 b9 fb ff ff 	jmp	-1095 <runtime.runGCProg+0x23f>
  40e316:	e8 05 18 01 00 	callq	71685 <runtime.panicdivide>
  40e31b:	0f 0b 	ud2
  40e31d:	cc 	int3
  40e31e:	cc 	int3
  40e31f:	cc 	int3

runtime.allocmcache:
  40e320:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40e329:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40e32d:	0f 86 89 00 00 00 	jbe	137 <runtime.allocmcache+0x9c>
  40e333:	48 83 ec 20 	subq	$32, %rsp
  40e337:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  40e33c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  40e341:	48 8d 05 58 df 09 00 	leaq	647000(%rip), %rax
  40e348:	48 89 04 24 	movq	%rax, (%rsp)
  40e34c:	e8 cf b1 ff ff 	callq	-20017 <runtime.lock>
  40e351:	48 8d 05 60 14 0a 00 	leaq	660576(%rip), %rax
  40e358:	48 89 04 24 	movq	%rax, (%rsp)
  40e35c:	e8 df 16 00 00 	callq	5855 <runtime.(*fixalloc).alloc>
  40e361:	48 8b 44 24 08 	movq	8(%rsp), %rax
  40e366:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40e36b:	48 8d 0d 2e df 09 00 	leaq	646958(%rip), %rcx
  40e372:	48 89 0c 24 	movq	%rcx, (%rsp)
  40e376:	e8 45 b3 ff ff 	callq	-19643 <runtime.unlock>
  40e37b:	48 8b 44 24 10 	movq	16(%rsp), %rax
  40e380:	31 c9 	xorl	%ecx, %ecx
  40e382:	eb 11 	jmp	17 <runtime.allocmcache+0x75>
  40e384:	84 00 	testb	%al, (%rax)
  40e386:	48 8d 15 f3 94 09 00 	leaq	627955(%rip), %rdx
  40e38d:	48 89 54 c8 28 	movq	%rdx, 40(%rax,%rcx,8)
  40e392:	48 ff c1 	incq	%rcx
  40e395:	48 81 f9 86 00 00 00 	cmpq	$134, %rcx
  40e39c:	7c e6 	jl	-26 <runtime.allocmcache+0x64>
  40e39e:	e8 2d cf ff ff 	callq	-12499 <runtime.nextSample>
  40e3a3:	8b 04 24 	movl	(%rsp), %eax
  40e3a6:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  40e3ab:	89 01 	movl	%eax, (%rcx)
  40e3ad:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  40e3b2:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  40e3b7:	48 83 c4 20 	addq	$32, %rsp
  40e3bb:	c3 	retq
  40e3bc:	e8 af 61 03 00 	callq	221615 <runtime.morestack_noctxt>
  40e3c1:	e9 5a ff ff ff 	jmp	-166 <runtime.allocmcache>
  40e3c6:	cc 	int3
  40e3c7:	cc 	int3
  40e3c8:	cc 	int3
  40e3c9:	cc 	int3
  40e3ca:	cc 	int3
  40e3cb:	cc 	int3
  40e3cc:	cc 	int3
  40e3cd:	cc 	int3
  40e3ce:	cc 	int3
  40e3cf:	cc 	int3

runtime.freemcache:
  40e3d0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40e3d9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40e3dd:	76 3c 	jbe	60 <runtime.freemcache+0x4b>
  40e3df:	48 83 ec 20 	subq	$32, %rsp
  40e3e3:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  40e3e8:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  40e3ed:	48 8d 05 6c 3a 03 00 	leaq	211564(%rip), %rax
  40e3f4:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40e3f9:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40e3fe:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40e403:	48 8d 44 24 08 	leaq	8(%rsp), %rax
  40e408:	48 89 04 24 	movq	%rax, (%rsp)
  40e40c:	e8 0f 60 03 00 	callq	221199 <runtime.systemstack>
  40e411:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  40e416:	48 83 c4 20 	addq	$32, %rsp
  40e41a:	c3 	retq
  40e41b:	e8 50 61 03 00 	callq	221520 <runtime.morestack_noctxt>
  40e420:	eb ae 	jmp	-82 <runtime.freemcache>
  40e422:	cc 	int3
  40e423:	cc 	int3
  40e424:	cc 	int3
  40e425:	cc 	int3
  40e426:	cc 	int3
  40e427:	cc 	int3
  40e428:	cc 	int3
  40e429:	cc 	int3
  40e42a:	cc 	int3
  40e42b:	cc 	int3
  40e42c:	cc 	int3
  40e42d:	cc 	int3
  40e42e:	cc 	int3
  40e42f:	cc 	int3

runtime.(*mcache).refill:
  40e430:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40e439:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40e43d:	0f 86 21 01 00 00 	jbe	289 <runtime.(*mcache).refill+0x134>
  40e443:	48 83 ec 28 	subq	$40, %rsp
  40e447:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  40e44c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  40e451:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  40e45a:	48 8b 48 30 	movq	48(%rax), %rcx
  40e45e:	ff 81 00 01 00 00 	incl	256(%rcx)
  40e464:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  40e469:	84 01 	testb	%al, (%rcx)
  40e46b:	0f b6 54 24 38 	movzbl	56(%rsp), %edx
  40e470:	0f b6 d2 	movzbl	%dl, %edx
  40e473:	48 81 fa 86 00 00 00 	cmpq	$134, %rdx
  40e47a:	0f 83 dd 00 00 00 	jae	221 <runtime.(*mcache).refill+0x12d>
  40e480:	48 8b 5c d1 28 	movq	40(%rcx,%rdx,8), %rbx
  40e485:	0f b7 73 60 	movzwl	96(%rbx), %esi
  40e489:	48 8b 7b 38 	movq	56(%rbx), %rdi
  40e48d:	48 39 fe 	cmpq	%rdi, %rsi
  40e490:	0f 85 ac 00 00 00 	jne	172 <runtime.(*mcache).refill+0x112>
  40e496:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  40e49b:	48 8d 35 de 93 09 00 	leaq	627678(%rip), %rsi
  40e4a2:	48 39 f3 	cmpq	%rsi, %rbx
  40e4a5:	74 04 	je	4 <runtime.(*mcache).refill+0x7b>
  40e4a7:	c6 43 63 00 	movb	$0, 99(%rbx)
  40e4ab:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  40e4b0:	48 c1 e2 06 	shlq	$6, %rdx
  40e4b4:	48 8d 0d e5 dd 09 00 	leaq	646629(%rip), %rcx
  40e4bb:	48 8d 8c 11 50 13 00 00 	leaq	4944(%rcx,%rdx), %rcx
  40e4c3:	48 89 0c 24 	movq	%rcx, (%rsp)
  40e4c7:	e8 54 01 00 00 	callq	340 <runtime.(*mcentral).cacheSpan>
  40e4cc:	48 8b 44 24 08 	movq	8(%rsp), %rax
  40e4d1:	48 85 c0 	testq	%rax, %rax
  40e4d4:	74 51 	je	81 <runtime.(*mcache).refill+0xf7>
  40e4d6:	0f b7 48 60 	movzwl	96(%rax), %ecx
  40e4da:	48 8b 50 38 	movq	56(%rax), %rdx
  40e4de:	48 39 d1 	cmpq	%rdx, %rcx
  40e4e1:	74 29 	je	41 <runtime.(*mcache).refill+0xdc>
  40e4e3:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  40e4e8:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  40e4ed:	48 89 44 ca 28 	movq	%rax, 40(%rdx,%rcx,8)
  40e4f2:	48 8b 44 24 18 	movq	24(%rsp), %rax
  40e4f7:	48 8b 40 30 	movq	48(%rax), %rax
  40e4fb:	83 80 00 01 00 00 ff 	addl	$-1, 256(%rax)
  40e502:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  40e507:	48 83 c4 28 	addq	$40, %rsp
  40e50b:	c3 	retq
  40e50c:	48 8d 05 3f d0 05 00 	leaq	380991(%rip), %rax
  40e513:	48 89 04 24 	movq	%rax, (%rsp)
  40e517:	48 c7 44 24 08 16 00 00 00 	movq	$22, 8(%rsp)
  40e520:	e8 ab 2c 01 00 	callq	76971 <runtime.throw>
  40e525:	0f 0b 	ud2
  40e527:	48 8d 05 47 c2 05 00 	leaq	377415(%rip), %rax
  40e52e:	48 89 04 24 	movq	%rax, (%rsp)
  40e532:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  40e53b:	e8 90 2c 01 00 	callq	76944 <runtime.throw>
  40e540:	0f 0b 	ud2
  40e542:	48 8d 05 6d ed 05 00 	leaq	388461(%rip), %rax
  40e549:	48 89 04 24 	movq	%rax, (%rsp)
  40e54d:	48 c7 44 24 08 28 00 00 00 	movq	$40, 8(%rsp)
  40e556:	e8 75 2c 01 00 	callq	76917 <runtime.throw>
  40e55b:	0f 0b 	ud2
  40e55d:	e8 de 14 01 00 	callq	70878 <runtime.panicindex>
  40e562:	0f 0b 	ud2
  40e564:	e8 07 60 03 00 	callq	221191 <runtime.morestack_noctxt>
  40e569:	e9 c2 fe ff ff 	jmp	-318 <runtime.(*mcache).refill>
  40e56e:	cc 	int3
  40e56f:	cc 	int3

runtime.(*mcache).releaseAll:
  40e570:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40e579:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40e57d:	0f 86 89 00 00 00 	jbe	137 <runtime.(*mcache).releaseAll+0x9c>
  40e583:	48 83 ec 20 	subq	$32, %rsp
  40e587:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  40e58c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  40e591:	31 c0 	xorl	%eax, %eax
  40e593:	eb 03 	jmp	3 <runtime.(*mcache).releaseAll+0x28>
  40e595:	48 ff c0 	incq	%rax
  40e598:	48 3d 86 00 00 00 	cmpq	$134, %rax
  40e59e:	7d 56 	jge	86 <runtime.(*mcache).releaseAll+0x86>
  40e5a0:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  40e5a5:	84 01 	testb	%al, (%rcx)
  40e5a7:	48 8b 54 c1 28 	movq	40(%rcx,%rax,8), %rdx
  40e5ac:	48 8d 1d cd 92 09 00 	leaq	627405(%rip), %rbx
  40e5b3:	48 39 da 	cmpq	%rbx, %rdx
  40e5b6:	74 dd 	je	-35 <runtime.(*mcache).releaseAll+0x25>
  40e5b8:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40e5bd:	48 c1 e0 06 	shlq	$6, %rax
  40e5c1:	48 8d 1d d8 dc 09 00 	leaq	646360(%rip), %rbx
  40e5c8:	48 8d 84 03 50 13 00 00 	leaq	4944(%rbx,%rax), %rax
  40e5d0:	48 89 04 24 	movq	%rax, (%rsp)
  40e5d4:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  40e5d9:	e8 82 04 00 00 	callq	1154 <runtime.(*mcentral).uncacheSpan>
  40e5de:	48 8b 44 24 10 	movq	16(%rsp), %rax
  40e5e3:	48 8d 1d 96 92 09 00 	leaq	627350(%rip), %rbx
  40e5ea:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  40e5ef:	48 89 5c c1 28 	movq	%rbx, 40(%rcx,%rax,8)
  40e5f4:	eb 9f 	jmp	-97 <runtime.(*mcache).releaseAll+0x25>
  40e5f6:	0f 57 c0 	xorps	%xmm0, %xmm0
  40e5f9:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40e5fe:	0f 11 40 10 	movups	%xmm0, 16(%rax)
  40e602:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  40e607:	48 83 c4 20 	addq	$32, %rsp
  40e60b:	c3 	retq
  40e60c:	e8 5f 5f 03 00 	callq	221023 <runtime.morestack_noctxt>
  40e611:	e9 5a ff ff ff 	jmp	-166 <runtime.(*mcache).releaseAll>
  40e616:	cc 	int3
  40e617:	cc 	int3
  40e618:	cc 	int3
  40e619:	cc 	int3
  40e61a:	cc 	int3
  40e61b:	cc 	int3
  40e61c:	cc 	int3
  40e61d:	cc 	int3
  40e61e:	cc 	int3
  40e61f:	cc 	int3

runtime.(*mcentral).cacheSpan:
  40e620:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40e629:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40e62d:	0f 86 1d 04 00 00 	jbe	1053 <runtime.(*mcentral).cacheSpan+0x430>
  40e633:	48 83 ec 40 	subq	$64, %rsp
  40e637:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  40e63c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  40e641:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40e646:	0f b6 48 08 	movzbl	8(%rax), %ecx
  40e64a:	d0 e9 	shrb	%cl
  40e64c:	48 0f be c9 	movsbq	%cl, %rcx
  40e650:	48 83 f9 43 	cmpq	$67, %rcx
  40e654:	0f 83 ef 03 00 00 	jae	1007 <runtime.(*mcentral).cacheSpan+0x429>
  40e65a:	48 8d 05 5f 6a 09 00 	leaq	617055(%rip), %rax
  40e661:	0f b6 04 08 	movzbl	(%rax,%rcx), %eax
  40e665:	48 c1 e0 0d 	shlq	$13, %rax
  40e669:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  40e66e:	48 89 04 24 	movq	%rax, (%rsp)
  40e672:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  40e67b:	e8 c0 a2 00 00 	callq	41664 <runtime.deductSweepCredit>
  40e680:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40e685:	48 89 04 24 	movq	%rax, (%rsp)
  40e689:	e8 92 ae ff ff 	callq	-20846 <runtime.lock>
  40e68e:	0f b6 05 3b 51 0a 00 	movzbl	676155(%rip), %eax
  40e695:	84 c0 	testb	%al, %al
  40e697:	0f 85 80 03 00 00 	jne	896 <runtime.(*mcentral).cacheSpan+0x3fd>
  40e69d:	8b 0d 1d ec 09 00 	movl	650269(%rip), %ecx
  40e6a3:	89 4c 24 1c 	movl	%ecx, 28(%rsp)
  40e6a7:	e9 58 03 00 00 	jmp	856 <runtime.(*mcentral).cacheSpan+0x3e4>
  40e6ac:	48 8b 1b 	movq	(%rbx), %rbx
  40e6af:	48 85 db 	testq	%rbx, %rbx
  40e6b2:	0f 84 eb 01 00 00 	je	491 <runtime.(*mcentral).cacheSpan+0x283>
  40e6b8:	48 89 5c 24 28 	movq	%rbx, 40(%rsp)
  40e6bd:	8b 73 58 	movl	88(%rbx), %esi
  40e6c0:	8d 41 fe 	leal	-2(%rcx), %eax
  40e6c3:	39 c6 	cmpl	%eax, %esi
  40e6c5:	75 15 	jne	21 <runtime.(*mcentral).cacheSpan+0xbc>
  40e6c7:	8d 71 ff 	leal	-1(%rcx), %esi
  40e6ca:	f0 	lock
  40e6cb:	0f b1 73 58 	cmpxchgl	%esi, 88(%rbx)
  40e6cf:	40 0f 94 c6 	sete	%sil
  40e6d3:	40 84 f6 	testb	%sil, %sil
  40e6d6:	0f 85 6c 01 00 00 	jne	364 <runtime.(*mcentral).cacheSpan+0x228>
  40e6dc:	8b 73 58 	movl	88(%rbx), %esi
  40e6df:	8d 79 ff 	leal	-1(%rcx), %edi
  40e6e2:	39 fe 	cmpl	%edi, %esi
  40e6e4:	74 c6 	je	-58 <runtime.(*mcentral).cacheSpan+0x8c>
  40e6e6:	48 8d 42 10 	leaq	16(%rdx), %rax
  40e6ea:	48 89 04 24 	movq	%rax, (%rsp)
  40e6ee:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  40e6f3:	e8 b8 d9 00 00 	callq	55736 <runtime.(*mSpanList).remove>
  40e6f8:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40e6fd:	48 8d 48 20 	leaq	32(%rax), %rcx
  40e701:	48 89 0c 24 	movq	%rcx, (%rsp)
  40e705:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  40e70a:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40e70f:	e8 5c dc 00 00 	callq	56412 <runtime.(*mSpanList).insertBack>
  40e714:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40e719:	48 89 04 24 	movq	%rax, (%rsp)
  40e71d:	e8 9e af ff ff 	callq	-20578 <runtime.unlock>
  40e722:	31 c0 	xorl	%eax, %eax
  40e724:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  40e729:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  40e72e:	0f b6 15 9b 50 0a 00 	movzbl	675995(%rip), %edx
  40e735:	84 d2 	testb	%dl, %dl
  40e737:	74 08 	je	8 <runtime.(*mcentral).cacheSpan+0x121>
  40e739:	84 c0 	testb	%al, %al
  40e73b:	0f 84 f8 00 00 00 	je	248 <runtime.(*mcentral).cacheSpan+0x219>
  40e741:	48 8b 41 20 	movq	32(%rcx), %rax
  40e745:	48 8b 51 68 	movq	104(%rcx), %rdx
  40e749:	48 85 d2 	testq	%rdx, %rdx
  40e74c:	0f 84 f0 02 00 00 	je	752 <runtime.(*mcentral).cacheSpan+0x422>
  40e752:	48 c1 e0 0d 	shlq	$13, %rax
  40e756:	48 89 d3 	movq	%rdx, %rbx
  40e759:	31 d2 	xorl	%edx, %edx
  40e75b:	48 f7 f3 	divq	%rbx
  40e75e:	0f b7 51 60 	movzwl	96(%rcx), %edx
  40e762:	0f b7 da 	movzwl	%dx, %ebx
  40e765:	29 d8 	subl	%ebx, %eax
  40e767:	85 c0 	testl	%eax, %eax
  40e769:	0f 84 b8 02 00 00 	je	696 <runtime.(*mcentral).cacheSpan+0x407>
  40e76f:	48 8b 59 30 	movq	48(%rcx), %rbx
  40e773:	48 8b 71 38 	movq	56(%rcx), %rsi
  40e777:	48 39 f3 	cmpq	%rsi, %rbx
  40e77a:	0f 84 a7 02 00 00 	je	679 <runtime.(*mcentral).cacheSpan+0x407>
  40e780:	0f b7 d2 	movzwl	%dx, %edx
  40e783:	48 39 d6 	cmpq	%rdx, %rsi
  40e786:	0f 84 9b 02 00 00 	je	667 <runtime.(*mcentral).cacheSpan+0x407>
  40e78c:	48 63 c0 	movslq	%eax, %rax
  40e78f:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  40e794:	f0 	lock
  40e795:	48 0f c1 42 30 	xaddq	%rax, 48(%rdx)
  40e79a:	0f b7 41 60 	movzwl	96(%rcx), %eax
  40e79e:	48 8b 51 68 	movq	104(%rcx), %rdx
  40e7a2:	48 0f af c2 	imulq	%rdx, %rax
  40e7a6:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  40e7ab:	48 29 c2 	subq	%rax, %rdx
  40e7ae:	48 8d 05 8b 76 0b 00 	leaq	751243(%rip), %rax
  40e7b5:	f0 	lock
  40e7b6:	48 0f c1 10 	xaddq	%rdx, (%rax)
  40e7ba:	0f b6 05 0f 50 0a 00 	movzbl	675855(%rip), %eax
  40e7c1:	84 c0 	testb	%al, %al
  40e7c3:	75 68 	jne	104 <runtime.(*mcentral).cacheSpan+0x20d>
  40e7c5:	8b 05 09 51 0b 00 	movl	741641(%rip), %eax
  40e7cb:	85 c0 	testl	%eax, %eax
  40e7cd:	75 47 	jne	71 <runtime.(*mcentral).cacheSpan+0x1f6>
  40e7cf:	c6 41 63 01 	movb	$1, 99(%rcx)
  40e7d3:	48 8b 41 30 	movq	48(%rcx), %rax
  40e7d7:	48 89 0c 24 	movq	%rcx, (%rsp)
  40e7db:	48 83 e0 c0 	andq	$-64, %rax
  40e7df:	48 c1 e8 03 	shrq	$3, %rax
  40e7e3:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40e7e8:	e8 c3 d6 ff ff 	callq	-10557 <runtime.(*mspan).refillAllocCache>
  40e7ed:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40e7f2:	48 8b 48 40 	movq	64(%rax), %rcx
  40e7f6:	48 8b 50 30 	movq	48(%rax), %rdx
  40e7fa:	48 89 cb 	movq	%rcx, %rbx
  40e7fd:	48 89 d1 	movq	%rdx, %rcx
  40e800:	48 d3 eb 	shrq	%cl, %rbx
  40e803:	48 89 58 40 	movq	%rbx, 64(%rax)
  40e807:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  40e80c:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  40e811:	48 83 c4 40 	addq	$64, %rsp
  40e815:	c3 	retq
  40e816:	48 8d 05 03 54 0b 00 	leaq	742403(%rip), %rax
  40e81d:	48 89 04 24 	movq	%rax, (%rsp)
  40e821:	e8 9a 1a 00 00 	callq	6810 <runtime.(*gcControllerState).revise>
  40e826:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  40e82b:	eb a2 	jmp	-94 <runtime.(*mcentral).cacheSpan+0x1af>
  40e82d:	e8 ae c7 02 00 	callq	182190 <runtime.traceHeapAlloc>
  40e832:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  40e837:	eb 8c 	jmp	-116 <runtime.(*mcentral).cacheSpan+0x1a5>
  40e839:	e8 72 be 02 00 	callq	179826 <runtime.traceGCSweepDone>
  40e83e:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  40e843:	e9 f9 fe ff ff 	jmp	-263 <runtime.(*mcentral).cacheSpan+0x121>
  40e848:	48 8d 42 10 	leaq	16(%rdx), %rax
  40e84c:	48 89 04 24 	movq	%rax, (%rsp)
  40e850:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  40e855:	e8 56 d8 00 00 	callq	55382 <runtime.(*mSpanList).remove>
  40e85a:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40e85f:	48 8d 48 20 	leaq	32(%rax), %rcx
  40e863:	48 89 0c 24 	movq	%rcx, (%rsp)
  40e867:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  40e86c:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40e871:	e8 fa da 00 00 	callq	56058 <runtime.(*mSpanList).insertBack>
  40e876:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40e87b:	48 89 04 24 	movq	%rax, (%rsp)
  40e87f:	e8 3c ae ff ff 	callq	-20932 <runtime.unlock>
  40e884:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40e889:	48 89 04 24 	movq	%rax, (%rsp)
  40e88d:	c6 44 24 08 01 	movb	$1, 8(%rsp)
  40e892:	e8 29 97 00 00 	callq	38697 <runtime.(*mspan).sweep>
  40e897:	31 c0 	xorl	%eax, %eax
  40e899:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  40e89e:	e9 86 fe ff ff 	jmp	-378 <runtime.(*mcentral).cacheSpan+0x109>
  40e8a3:	48 8b 5a 20 	movq	32(%rdx), %rbx
  40e8a7:	eb 03 	jmp	3 <runtime.(*mcentral).cacheSpan+0x28c>
  40e8a9:	48 8b 1b 	movq	(%rbx), %rbx
  40e8ac:	48 85 db 	testq	%rbx, %rbx
  40e8af:	74 29 	je	41 <runtime.(*mcentral).cacheSpan+0x2ba>
  40e8b1:	8b 73 58 	movl	88(%rbx), %esi
  40e8b4:	8d 41 fe 	leal	-2(%rcx), %eax
  40e8b7:	39 c6 	cmpl	%eax, %esi
  40e8b9:	75 15 	jne	21 <runtime.(*mcentral).cacheSpan+0x2b0>
  40e8bb:	8d 71 ff 	leal	-1(%rcx), %esi
  40e8be:	f0 	lock
  40e8bf:	0f b1 73 58 	cmpxchgl	%esi, 88(%rbx)
  40e8c3:	40 0f 94 c6 	sete	%sil
  40e8c7:	40 84 f6 	testb	%sil, %sil
  40e8ca:	0f 85 ac 00 00 00 	jne	172 <runtime.(*mcentral).cacheSpan+0x35c>
  40e8d0:	8b 73 58 	movl	88(%rbx), %esi
  40e8d3:	8d 79 ff 	leal	-1(%rcx), %edi
  40e8d6:	39 fe 	cmpl	%edi, %esi
  40e8d8:	74 cf 	je	-49 <runtime.(*mcentral).cacheSpan+0x289>
  40e8da:	0f b6 05 ef 4e 0a 00 	movzbl	675567(%rip), %eax
  40e8e1:	88 44 24 1b 	movb	%al, 27(%rsp)
  40e8e5:	84 c0 	testb	%al, %al
  40e8e7:	0f 85 80 00 00 00 	jne	128 <runtime.(*mcentral).cacheSpan+0x34d>
  40e8ed:	48 89 14 24 	movq	%rdx, (%rsp)
  40e8f1:	e8 ca ad ff ff 	callq	-21046 <runtime.unlock>
  40e8f6:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40e8fb:	48 89 04 24 	movq	%rax, (%rsp)
  40e8ff:	e8 0c 04 00 00 	callq	1036 <runtime.(*mcentral).grow>
  40e904:	48 8b 44 24 08 	movq	8(%rsp), %rax
  40e909:	48 85 c0 	testq	%rax, %rax
  40e90c:	74 4c 	je	76 <runtime.(*mcentral).cacheSpan+0x33a>
  40e90e:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  40e913:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40e918:	48 89 04 24 	movq	%rax, (%rsp)
  40e91c:	e8 ff ab ff ff 	callq	-21505 <runtime.lock>
  40e921:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40e926:	48 8d 48 20 	leaq	32(%rax), %rcx
  40e92a:	48 89 0c 24 	movq	%rcx, (%rsp)
  40e92e:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  40e933:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40e938:	e8 33 da 00 00 	callq	55859 <runtime.(*mSpanList).insertBack>
  40e93d:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40e942:	48 89 04 24 	movq	%rax, (%rsp)
  40e946:	e8 75 ad ff ff 	callq	-21131 <runtime.unlock>
  40e94b:	0f b6 44 24 1b 	movzbl	27(%rsp), %eax
  40e950:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  40e955:	e9 cf fd ff ff 	jmp	-561 <runtime.(*mcentral).cacheSpan+0x109>
  40e95a:	48 c7 44 24 50 00 00 00 00 	movq	$0, 80(%rsp)
  40e963:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  40e968:	48 83 c4 40 	addq	$64, %rsp
  40e96c:	c3 	retq
  40e96d:	e8 3e bd 02 00 	callq	179518 <runtime.traceGCSweepDone>
  40e972:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  40e977:	e9 71 ff ff ff 	jmp	-143 <runtime.(*mcentral).cacheSpan+0x2cd>
  40e97c:	48 89 5c 24 28 	movq	%rbx, 40(%rsp)
  40e981:	48 8d 42 20 	leaq	32(%rdx), %rax
  40e985:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  40e98a:	48 89 04 24 	movq	%rax, (%rsp)
  40e98e:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  40e993:	e8 18 d7 00 00 	callq	55064 <runtime.(*mSpanList).remove>
  40e998:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40e99d:	48 89 04 24 	movq	%rax, (%rsp)
  40e9a1:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40e9a6:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40e9ab:	e8 c0 d9 00 00 	callq	55744 <runtime.(*mSpanList).insertBack>
  40e9b0:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40e9b5:	48 89 04 24 	movq	%rax, (%rsp)
  40e9b9:	e8 02 ad ff ff 	callq	-21246 <runtime.unlock>
  40e9be:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40e9c3:	48 89 04 24 	movq	%rax, (%rsp)
  40e9c7:	c6 44 24 08 01 	movb	$1, 8(%rsp)
  40e9cc:	e8 ef 95 00 00 	callq	38383 <runtime.(*mspan).sweep>
  40e9d1:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40e9d6:	48 89 04 24 	movq	%rax, (%rsp)
  40e9da:	e8 f1 d4 ff ff 	callq	-11023 <runtime.(*mspan).nextFreeIndex>
  40e9df:	48 8b 44 24 08 	movq	8(%rsp), %rax
  40e9e4:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  40e9e9:	48 8b 51 38 	movq	56(%rcx), %rdx
  40e9ed:	48 39 d0 	cmpq	%rdx, %rax
  40e9f0:	75 20 	jne	32 <runtime.(*mcentral).cacheSpan+0x3f2>
  40e9f2:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40e9f7:	48 89 04 24 	movq	%rax, (%rsp)
  40e9fb:	e8 20 ab ff ff 	callq	-21728 <runtime.lock>
  40ea00:	8b 4c 24 1c 	movl	28(%rsp), %ecx
  40ea04:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  40ea09:	48 8b 5a 10 	movq	16(%rdx), %rbx
  40ea0d:	e9 9d fc ff ff 	jmp	-867 <runtime.(*mcentral).cacheSpan+0x8f>
  40ea12:	48 89 41 30 	movq	%rax, 48(%rcx)
  40ea16:	31 c0 	xorl	%eax, %eax
  40ea18:	e9 0c fd ff ff 	jmp	-756 <runtime.(*mcentral).cacheSpan+0x109>
  40ea1d:	e8 5e bb 02 00 	callq	179038 <runtime.traceGCSweepStart>
  40ea22:	e9 76 fc ff ff 	jmp	-906 <runtime.(*mcentral).cacheSpan+0x7d>
  40ea27:	48 8d 05 08 cf 05 00 	leaq	380680(%rip), %rax
  40ea2e:	48 89 04 24 	movq	%rax, (%rsp)
  40ea32:	48 c7 44 24 08 18 00 00 00 	movq	$24, 8(%rsp)
  40ea3b:	e8 90 27 01 00 	callq	75664 <runtime.throw>
  40ea40:	0f 0b 	ud2
  40ea42:	e8 d9 10 01 00 	callq	69849 <runtime.panicdivide>
  40ea47:	0f 0b 	ud2
  40ea49:	e8 f2 0f 01 00 	callq	69618 <runtime.panicindex>
  40ea4e:	0f 0b 	ud2
  40ea50:	e8 1b 5b 03 00 	callq	219931 <runtime.morestack_noctxt>
  40ea55:	e9 c6 fb ff ff 	jmp	-1082 <runtime.(*mcentral).cacheSpan>
  40ea5a:	cc 	int3
  40ea5b:	cc 	int3
  40ea5c:	cc 	int3
  40ea5d:	cc 	int3
  40ea5e:	cc 	int3
  40ea5f:	cc 	int3

runtime.(*mcentral).uncacheSpan:
  40ea60:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40ea69:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40ea6d:	0f 86 fe 00 00 00 	jbe	254 <runtime.(*mcentral).uncacheSpan+0x111>
  40ea73:	48 83 ec 20 	subq	$32, %rsp
  40ea77:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  40ea7c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  40ea81:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40ea86:	84 00 	testb	%al, (%rax)
  40ea88:	48 89 04 24 	movq	%rax, (%rsp)
  40ea8c:	e8 8f aa ff ff 	callq	-21873 <runtime.lock>
  40ea91:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40ea96:	c6 40 63 00 	movb	$0, 99(%rax)
  40ea9a:	0f b7 48 60 	movzwl	96(%rax), %ecx
  40ea9e:	66 85 c9 	testw	%cx, %cx
  40eaa1:	0f 84 af 00 00 00 	je	175 <runtime.(*mcentral).uncacheSpan+0xf6>
  40eaa7:	48 8b 50 20 	movq	32(%rax), %rdx
  40eaab:	48 8b 58 68 	movq	104(%rax), %rbx
  40eaaf:	48 85 db 	testq	%rbx, %rbx
  40eab2:	0f 84 97 00 00 00 	je	151 <runtime.(*mcentral).uncacheSpan+0xef>
  40eab8:	48 c1 e2 0d 	shlq	$13, %rdx
  40eabc:	48 89 c6 	movq	%rax, %rsi
  40eabf:	48 89 d0 	movq	%rdx, %rax
  40eac2:	31 d2 	xorl	%edx, %edx
  40eac4:	48 f7 f3 	divq	%rbx
  40eac7:	0f b7 c9 	movzwl	%cx, %ecx
  40eaca:	29 c8 	subl	%ecx, %eax
  40eacc:	85 c0 	testl	%eax, %eax
  40eace:	7f 18 	jg	24 <runtime.(*mcentral).uncacheSpan+0x88>
  40ead0:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40ead5:	48 89 04 24 	movq	%rax, (%rsp)
  40ead9:	e8 e2 ab ff ff 	callq	-21534 <runtime.unlock>
  40eade:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  40eae3:	48 83 c4 20 	addq	$32, %rsp
  40eae7:	c3 	retq
  40eae8:	89 44 24 14 	movl	%eax, 20(%rsp)
  40eaec:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40eaf1:	48 8d 48 20 	leaq	32(%rax), %rcx
  40eaf5:	48 89 0c 24 	movq	%rcx, (%rsp)
  40eaf9:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  40eafe:	e8 ad d5 00 00 	callq	54701 <runtime.(*mSpanList).remove>
  40eb03:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40eb08:	48 8d 48 10 	leaq	16(%rax), %rcx
  40eb0c:	48 89 0c 24 	movq	%rcx, (%rsp)
  40eb10:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  40eb15:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40eb1a:	e8 31 d7 00 00 	callq	55089 <runtime.(*mSpanList).insert>
  40eb1f:	8b 44 24 14 	movl	20(%rsp), %eax
  40eb23:	48 63 c0 	movslq	%eax, %rax
  40eb26:	48 f7 d8 	negq	%rax
  40eb29:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  40eb2e:	48 8b 49 68 	movq	104(%rcx), %rcx
  40eb32:	48 0f af c8 	imulq	%rax, %rcx
  40eb36:	48 8d 15 03 73 0b 00 	leaq	750339(%rip), %rdx
  40eb3d:	f0 	lock
  40eb3e:	48 0f c1 0a 	xaddq	%rcx, (%rdx)
  40eb42:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  40eb47:	f0 	lock
  40eb48:	48 0f c1 41 30 	xaddq	%rax, 48(%rcx)
  40eb4d:	eb 81 	jmp	-127 <runtime.(*mcentral).uncacheSpan+0x70>
  40eb4f:	e8 cc 0f 01 00 	callq	69580 <runtime.panicdivide>
  40eb54:	0f 0b 	ud2
  40eb56:	48 8d 05 c5 e3 05 00 	leaq	385989(%rip), %rax
  40eb5d:	48 89 04 24 	movq	%rax, (%rsp)
  40eb61:	48 c7 44 24 08 24 00 00 00 	movq	$36, 8(%rsp)
  40eb6a:	e8 61 26 01 00 	callq	75361 <runtime.throw>
  40eb6f:	0f 0b 	ud2
  40eb71:	e8 fa 59 03 00 	callq	219642 <runtime.morestack_noctxt>
  40eb76:	e9 e5 fe ff ff 	jmp	-283 <runtime.(*mcentral).uncacheSpan>
  40eb7b:	cc 	int3
  40eb7c:	cc 	int3
  40eb7d:	cc 	int3
  40eb7e:	cc 	int3
  40eb7f:	cc 	int3

runtime.(*mcentral).freeSpan:
  40eb80:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40eb89:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40eb8d:	0f 86 6b 01 00 00 	jbe	363 <runtime.(*mcentral).freeSpan+0x17e>
  40eb93:	48 83 ec 20 	subq	$32, %rsp
  40eb97:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  40eb9c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  40eba1:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40eba6:	0f b6 48 63 	movzbl	99(%rax), %ecx
  40ebaa:	84 c9 	testb	%cl, %cl
  40ebac:	0f 85 31 01 00 00 	jne	305 <runtime.(*mcentral).freeSpan+0x163>
  40ebb2:	c6 40 65 01 	movb	$1, 101(%rax)
  40ebb6:	0f b6 4c 24 38 	movzbl	56(%rsp), %ecx
  40ebbb:	84 c9 	testb	%cl, %cl
  40ebbd:	74 25 	je	37 <runtime.(*mcentral).freeSpan+0x64>
  40ebbf:	48 8b 48 10 	movq	16(%rax), %rcx
  40ebc3:	48 85 c9 	testq	%rcx, %rcx
  40ebc6:	0f 84 fc 00 00 00 	je	252 <runtime.(*mcentral).freeSpan+0x148>
  40ebcc:	8b 0d ee e6 09 00 	movl	648942(%rip), %ecx
  40ebd2:	87 48 58 	xchgl	%ecx, 88(%rax)
  40ebd5:	c6 44 24 40 00 	movb	$0, 64(%rsp)
  40ebda:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  40ebdf:	48 83 c4 20 	addq	$32, %rsp
  40ebe3:	c3 	retq
  40ebe4:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40ebe9:	84 00 	testb	%al, (%rax)
  40ebeb:	48 89 04 24 	movq	%rax, (%rsp)
  40ebef:	e8 2c a9 ff ff 	callq	-22228 <runtime.lock>
  40ebf4:	0f b6 44 24 39 	movzbl	57(%rsp), %eax
  40ebf9:	84 c0 	testb	%al, %al
  40ebfb:	0f 85 8a 00 00 00 	jne	138 <runtime.(*mcentral).freeSpan+0x10b>
  40ec01:	8b 05 b9 e6 09 00 	movl	648889(%rip), %eax
  40ec07:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  40ec0c:	87 41 58 	xchgl	%eax, 88(%rcx)
  40ec0f:	0f b7 41 60 	movzwl	96(%rcx), %eax
  40ec13:	66 85 c0 	testw	%ax, %ax
  40ec16:	74 1d 	je	29 <runtime.(*mcentral).freeSpan+0xb5>
  40ec18:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40ec1d:	48 89 04 24 	movq	%rax, (%rsp)
  40ec21:	e8 9a aa ff ff 	callq	-21862 <runtime.unlock>
  40ec26:	c6 44 24 40 00 	movb	$0, 64(%rsp)
  40ec2b:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  40ec30:	48 83 c4 20 	addq	$32, %rsp
  40ec34:	c3 	retq
  40ec35:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40ec3a:	48 8d 50 10 	leaq	16(%rax), %rdx
  40ec3e:	48 89 14 24 	movq	%rdx, (%rsp)
  40ec42:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40ec47:	e8 64 d4 00 00 	callq	54372 <runtime.(*mSpanList).remove>
  40ec4c:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40ec51:	48 89 04 24 	movq	%rax, (%rsp)
  40ec55:	e8 66 aa ff ff 	callq	-21914 <runtime.unlock>
  40ec5a:	48 8d 05 3f d6 09 00 	leaq	644671(%rip), %rax
  40ec61:	48 89 04 24 	movq	%rax, (%rsp)
  40ec65:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40ec6a:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40ec6f:	c7 44 24 10 00 00 00 00 	movl	$0, 16(%rsp)
  40ec77:	e8 14 c8 00 00 	callq	51220 <runtime.(*mheap).freeSpan>
  40ec7c:	c6 44 24 40 01 	movb	$1, 64(%rsp)
  40ec81:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  40ec86:	48 83 c4 20 	addq	$32, %rsp
  40ec8a:	c3 	retq
  40ec8b:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40ec90:	48 8d 48 20 	leaq	32(%rax), %rcx
  40ec94:	48 89 0c 24 	movq	%rcx, (%rsp)
  40ec98:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  40ec9d:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40eca2:	e8 09 d4 00 00 	callq	54281 <runtime.(*mSpanList).remove>
  40eca7:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40ecac:	48 8d 48 10 	leaq	16(%rax), %rcx
  40ecb0:	48 89 0c 24 	movq	%rcx, (%rsp)
  40ecb4:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  40ecb9:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40ecbe:	e8 8d d5 00 00 	callq	54669 <runtime.(*mSpanList).insert>
  40ecc3:	e9 39 ff ff ff 	jmp	-199 <runtime.(*mcentral).freeSpan+0x81>
  40ecc8:	48 8d 05 93 d3 05 00 	leaq	381843(%rip), %rax
  40eccf:	48 89 04 24 	movq	%rax, (%rsp)
  40ecd3:	48 c7 44 24 08 1c 00 00 00 	movq	$28, 8(%rsp)
  40ecdc:	e8 ef 24 01 00 	callq	74991 <runtime.throw>
  40ece1:	0f 0b 	ud2
  40ece3:	48 8d 05 0a cf 05 00 	leaq	380682(%rip), %rax
  40ecea:	48 89 04 24 	movq	%rax, (%rsp)
  40ecee:	48 c7 44 24 08 1a 00 00 00 	movq	$26, 8(%rsp)
  40ecf7:	e8 d4 24 01 00 	callq	74964 <runtime.throw>
  40ecfc:	0f 0b 	ud2
  40ecfe:	e8 6d 58 03 00 	callq	219245 <runtime.morestack_noctxt>
  40ed03:	e9 78 fe ff ff 	jmp	-392 <runtime.(*mcentral).freeSpan>
  40ed08:	cc 	int3
  40ed09:	cc 	int3
  40ed0a:	cc 	int3
  40ed0b:	cc 	int3
  40ed0c:	cc 	int3
  40ed0d:	cc 	int3
  40ed0e:	cc 	int3
  40ed0f:	cc 	int3

runtime.(*mcentral).grow:
  40ed10:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40ed19:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40ed1d:	0f 86 0e 01 00 00 	jbe	270 <runtime.(*mcentral).grow+0x121>
  40ed23:	48 83 ec 40 	subq	$64, %rsp
  40ed27:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  40ed2c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  40ed31:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  40ed36:	0f b6 49 08 	movzbl	8(%rcx), %ecx
  40ed3a:	89 ca 	movl	%ecx, %edx
  40ed3c:	d0 e9 	shrb	%cl
  40ed3e:	48 0f be c9 	movsbq	%cl, %rcx
  40ed42:	48 83 f9 43 	cmpq	$67, %rcx
  40ed46:	0f 83 de 00 00 00 	jae	222 <runtime.(*mcentral).grow+0x11a>
  40ed4c:	48 8d 1d 6d 63 09 00 	leaq	615277(%rip), %rbx
  40ed53:	0f b6 04 0b 	movzbl	(%rbx,%rcx), %eax
  40ed57:	48 8d 1d 62 64 09 00 	leaq	615522(%rip), %rbx
  40ed5e:	0f b7 0c 4b 	movzwl	(%rbx,%rcx,2), %ecx
  40ed62:	48 85 c9 	testq	%rcx, %rcx
  40ed65:	0f 84 b8 00 00 00 	je	184 <runtime.(*mcentral).grow+0x113>
  40ed6b:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  40ed70:	48 89 c3 	movq	%rax, %rbx
  40ed73:	48 c1 e0 0d 	shlq	$13, %rax
  40ed77:	89 d6 	movl	%edx, %esi
  40ed79:	31 d2 	xorl	%edx, %edx
  40ed7b:	48 f7 f1 	divq	%rcx
  40ed7e:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  40ed83:	40 88 74 24 10 	movb	%sil, 16(%rsp)
  40ed88:	48 8d 15 11 d5 09 00 	leaq	644369(%rip), %rdx
  40ed8f:	48 89 14 24 	movq	%rdx, (%rsp)
  40ed93:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  40ed98:	66 c7 44 24 11 00 01 	movw	$256, 17(%rsp)
  40ed9f:	e8 6c be 00 00 	callq	48748 <runtime.(*mheap).alloc>
  40eda4:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  40eda9:	48 85 c9 	testq	%rcx, %rcx
  40edac:	74 62 	je	98 <runtime.(*mcentral).grow+0x100>
  40edae:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  40edb3:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40edb8:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  40edbd:	48 0f af c2 	imulq	%rdx, %rax
  40edc1:	48 8d 51 18 	leaq	24(%rcx), %rdx
  40edc5:	48 03 02 	addq	(%rdx), %rax
  40edc8:	48 89 81 80 00 00 00 	movq	%rax, 128(%rcx)
  40edcf:	48 8b 41 18 	movq	24(%rcx), %rax
  40edd3:	48 89 04 24 	movq	%rax, (%rsp)
  40edd7:	e8 84 d3 ff ff 	callq	-11388 <runtime.heapBitsForSpan>
  40eddc:	8b 44 24 10 	movl	16(%rsp), %eax
  40ede0:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  40ede5:	48 89 0c 24 	movq	%rcx, (%rsp)
  40ede9:	89 44 24 08 	movl	%eax, 8(%rsp)
  40eded:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40edf2:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40edf7:	e8 44 e1 ff ff 	callq	-7868 <runtime.heapBits.initSpan>
  40edfc:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40ee01:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  40ee06:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  40ee0b:	48 83 c4 40 	addq	$64, %rsp
  40ee0f:	c3 	retq
  40ee10:	48 c7 44 24 50 00 00 00 00 	movq	$0, 80(%rsp)
  40ee19:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  40ee1e:	48 83 c4 40 	addq	$64, %rsp
  40ee22:	c3 	retq
  40ee23:	e8 f8 0c 01 00 	callq	68856 <runtime.panicdivide>
  40ee28:	0f 0b 	ud2
  40ee2a:	e8 11 0c 01 00 	callq	68625 <runtime.panicindex>
  40ee2f:	0f 0b 	ud2
  40ee31:	e8 3a 57 03 00 	callq	218938 <runtime.morestack_noctxt>
  40ee36:	e9 d5 fe ff ff 	jmp	-299 <runtime.(*mcentral).grow>
  40ee3b:	cc 	int3
  40ee3c:	cc 	int3
  40ee3d:	cc 	int3
  40ee3e:	cc 	int3
  40ee3f:	cc 	int3

runtime.addrspace_free:
  40ee40:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40ee49:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40ee4d:	0f 86 84 00 00 00 	jbe	132 <runtime.addrspace_free+0x97>
  40ee53:	48 83 ec 30 	subq	$48, %rsp
  40ee57:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  40ee5c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  40ee61:	31 c0 	xorl	%eax, %eax
  40ee63:	eb 10 	jmp	16 <runtime.addrspace_free+0x35>
  40ee65:	48 8b 0d 34 4b 0b 00 	movq	740148(%rip), %rcx
  40ee6c:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  40ee71:	48 8d 04 0a 	leaq	(%rdx,%rcx), %rax
  40ee75:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  40ee7a:	48 39 c8 	cmpq	%rcx, %rax
  40ee7d:	73 49 	jae	73 <runtime.addrspace_free+0x88>
  40ee7f:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  40ee84:	48 8d 0d 16 4a 0b 00 	leaq	739862(%rip), %rcx
  40ee8b:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  40ee90:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  40ee95:	48 8d 14 01 	leaq	(%rcx,%rax), %rdx
  40ee99:	48 89 14 24 	movq	%rdx, (%rsp)
  40ee9d:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  40eea6:	e8 d5 8a 03 00 	callq	232149 <runtime.mincore>
  40eeab:	8b 44 24 18 	movl	24(%rsp), %eax
  40eeaf:	83 f8 ea 	cmpl	$-22, %eax
  40eeb2:	74 b1 	je	-79 <runtime.addrspace_free+0x25>
  40eeb4:	83 f8 f4 	cmpl	$-12, %eax
  40eeb7:	74 ac 	je	-84 <runtime.addrspace_free+0x25>
  40eeb9:	c6 44 24 48 00 	movb	$0, 72(%rsp)
  40eebe:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  40eec3:	48 83 c4 30 	addq	$48, %rsp
  40eec7:	c3 	retq
  40eec8:	c6 44 24 48 01 	movb	$1, 72(%rsp)
  40eecd:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  40eed2:	48 83 c4 30 	addq	$48, %rsp
  40eed6:	c3 	retq
  40eed7:	e8 94 56 03 00 	callq	218772 <runtime.morestack_noctxt>
  40eedc:	e9 5f ff ff ff 	jmp	-161 <runtime.addrspace_free>
  40eee1:	cc 	int3
  40eee2:	cc 	int3
  40eee3:	cc 	int3
  40eee4:	cc 	int3
  40eee5:	cc 	int3
  40eee6:	cc 	int3
  40eee7:	cc 	int3
  40eee8:	cc 	int3
  40eee9:	cc 	int3
  40eeea:	cc 	int3
  40eeeb:	cc 	int3
  40eeec:	cc 	int3
  40eeed:	cc 	int3
  40eeee:	cc 	int3
  40eeef:	cc 	int3

runtime.mmap_fixed:
  40eef0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40eef9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40eefd:	0f 86 11 01 00 00 	jbe	273 <runtime.mmap_fixed+0x124>
  40ef03:	48 83 ec 48 	subq	$72, %rsp
  40ef07:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  40ef0c:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  40ef11:	48 8b 44 24 50 	movq	80(%rsp), %rax
  40ef16:	48 89 04 24 	movq	%rax, (%rsp)
  40ef1a:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  40ef1f:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40ef24:	8b 54 24 60 	movl	96(%rsp), %edx
  40ef28:	89 54 24 10 	movl	%edx, 16(%rsp)
  40ef2c:	8b 5c 24 64 	movl	100(%rsp), %ebx
  40ef30:	89 5c 24 14 	movl	%ebx, 20(%rsp)
  40ef34:	8b 74 24 68 	movl	104(%rsp), %esi
  40ef38:	89 74 24 18 	movl	%esi, 24(%rsp)
  40ef3c:	8b 7c 24 6c 	movl	108(%rsp), %edi
  40ef40:	89 7c 24 1c 	movl	%edi, 28(%rsp)
  40ef44:	e8 27 30 ff ff 	callq	-53209 <runtime.mmap>
  40ef49:	48 8b 44 24 20 	movq	32(%rsp), %rax
  40ef4e:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  40ef53:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  40ef58:	48 39 d0 	cmpq	%rdx, %rax
  40ef5b:	75 14 	jne	20 <runtime.mmap_fixed+0x81>
  40ef5d:	48 89 44 24 70 	movq	%rax, 112(%rsp)
  40ef62:	48 89 4c 24 78 	movq	%rcx, 120(%rsp)
  40ef67:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  40ef6c:	48 83 c4 48 	addq	$72, %rsp
  40ef70:	c3 	retq
  40ef71:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  40ef76:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  40ef7b:	48 89 14 24 	movq	%rdx, (%rsp)
  40ef7f:	48 8b 44 24 58 	movq	88(%rsp), %rax
  40ef84:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40ef89:	e8 b2 fe ff ff 	callq	-334 <runtime.addrspace_free>
  40ef8e:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  40ef93:	84 c0 	testb	%al, %al
  40ef95:	74 6e 	je	110 <runtime.mmap_fixed+0x115>
  40ef97:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40ef9c:	48 85 c0 	testq	%rax, %rax
  40ef9f:	74 4a 	je	74 <runtime.mmap_fixed+0xfb>
  40efa1:	48 8b 44 24 50 	movq	80(%rsp), %rax
  40efa6:	48 89 04 24 	movq	%rax, (%rsp)
  40efaa:	48 8b 44 24 58 	movq	88(%rsp), %rax
  40efaf:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40efb4:	8b 44 24 60 	movl	96(%rsp), %eax
  40efb8:	89 44 24 10 	movl	%eax, 16(%rsp)
  40efbc:	8b 44 24 64 	movl	100(%rsp), %eax
  40efc0:	83 c8 10 	orl	$16, %eax
  40efc3:	89 44 24 14 	movl	%eax, 20(%rsp)
  40efc7:	8b 44 24 68 	movl	104(%rsp), %eax
  40efcb:	89 44 24 18 	movl	%eax, 24(%rsp)
  40efcf:	8b 44 24 6c 	movl	108(%rsp), %eax
  40efd3:	89 44 24 1c 	movl	%eax, 28(%rsp)
  40efd7:	e8 94 2f ff ff 	callq	-53356 <runtime.mmap>
  40efdc:	48 8b 44 24 20 	movq	32(%rsp), %rax
  40efe1:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  40efe6:	e9 72 ff ff ff 	jmp	-142 <runtime.mmap_fixed+0x6d>
  40efeb:	48 8b 44 24 38 	movq	56(%rsp), %rax
  40eff0:	48 89 04 24 	movq	%rax, (%rsp)
  40eff4:	48 8b 44 24 58 	movq	88(%rsp), %rax
  40eff9:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40effe:	e8 ed 30 ff ff 	callq	-53011 <runtime.munmap>
  40f003:	eb 9c 	jmp	-100 <runtime.mmap_fixed+0xb1>
  40f005:	48 8b 44 24 38 	movq	56(%rsp), %rax
  40f00a:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  40f00f:	e9 49 ff ff ff 	jmp	-183 <runtime.mmap_fixed+0x6d>
  40f014:	e8 57 55 03 00 	callq	218455 <runtime.morestack_noctxt>
  40f019:	e9 d2 fe ff ff 	jmp	-302 <runtime.mmap_fixed>
  40f01e:	cc 	int3
  40f01f:	cc 	int3

runtime.sysAlloc:
  40f020:	48 83 ec 48 	subq	$72, %rsp
  40f024:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  40f029:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  40f02e:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  40f036:	48 8b 44 24 50 	movq	80(%rsp), %rax
  40f03b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40f040:	48 b9 03 00 00 00 22 00 00 00 	movabsq	$146028888067, %rcx
  40f04a:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  40f04f:	b9 ff ff ff ff 	movl	$4294967295, %ecx
  40f054:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  40f059:	e8 12 2f ff ff 	callq	-53486 <runtime.mmap>
  40f05e:	48 8b 44 24 20 	movq	32(%rsp), %rax
  40f063:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  40f068:	48 85 c9 	testq	%rcx, %rcx
  40f06b:	0f 84 8e 00 00 00 	je	142 <runtime.sysAlloc+0xdf>
  40f071:	48 83 f9 0d 	cmpq	$13, %rcx
  40f075:	74 4a 	je	74 <runtime.sysAlloc+0xa1>
  40f077:	48 83 f9 0b 	cmpq	$11, %rcx
  40f07b:	74 13 	je	19 <runtime.sysAlloc+0x70>
  40f07d:	48 c7 44 24 60 00 00 00 00 	movq	$0, 96(%rsp)
  40f086:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  40f08b:	48 83 c4 48 	addq	$72, %rsp
  40f08f:	c3 	retq
  40f090:	e8 6b 2a 01 00 	callq	76395 <runtime.printlock>
  40f095:	48 8d 05 e6 ec 05 00 	leaq	388326(%rip), %rax
  40f09c:	48 89 04 24 	movq	%rax, (%rsp)
  40f0a0:	48 c7 44 24 08 3b 00 00 00 	movq	$59, 8(%rsp)
  40f0a9:	e8 92 33 01 00 	callq	78738 <runtime.printstring>
  40f0ae:	e8 cd 2a 01 00 	callq	76493 <runtime.printunlock>
  40f0b3:	c7 04 24 02 00 00 00 	movl	$2, (%rsp)
  40f0ba:	e8 11 87 03 00 	callq	231185 <runtime.exit>
  40f0bf:	eb bc 	jmp	-68 <runtime.sysAlloc+0x5d>
  40f0c1:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  40f0c6:	e8 35 2a 01 00 	callq	76341 <runtime.printlock>
  40f0cb:	48 8d 05 1c d2 05 00 	leaq	381468(%rip), %rax
  40f0d2:	48 89 04 24 	movq	%rax, (%rsp)
  40f0d6:	48 c7 44 24 08 1d 00 00 00 	movq	$29, 8(%rsp)
  40f0df:	e8 5c 33 01 00 	callq	78684 <runtime.printstring>
  40f0e4:	e8 97 2a 01 00 	callq	76439 <runtime.printunlock>
  40f0e9:	c7 04 24 02 00 00 00 	movl	$2, (%rsp)
  40f0f0:	e8 db 86 03 00 	callq	231131 <runtime.exit>
  40f0f5:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  40f0fa:	e9 78 ff ff ff 	jmp	-136 <runtime.sysAlloc+0x57>
  40f0ff:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  40f104:	48 8b 44 24 58 	movq	88(%rsp), %rax
  40f109:	48 89 04 24 	movq	%rax, (%rsp)
  40f10d:	48 8b 44 24 50 	movq	80(%rsp), %rax
  40f112:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40f117:	e8 d4 f1 00 00 	callq	61908 <runtime.mSysStatInc>
  40f11c:	48 8b 44 24 38 	movq	56(%rsp), %rax
  40f121:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  40f126:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  40f12b:	48 83 c4 48 	addq	$72, %rsp
  40f12f:	c3 	retq

runtime.sysUnused:
  40f130:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40f139:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40f13d:	0f 86 68 01 00 00 	jbe	360 <runtime.sysUnused+0x17b>
  40f143:	48 83 ec 30 	subq	$48, %rsp
  40f147:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  40f14c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  40f151:	48 8b 44 24 38 	movq	56(%rsp), %rax
  40f156:	48 89 c1 	movq	%rax, %rcx
  40f159:	48 a9 ff ff 1f 00 	testq	$2097151, %rax
  40f15f:	0f 84 21 01 00 00 	je	289 <runtime.sysUnused+0x156>
  40f165:	48 89 c2 	movq	%rax, %rdx
  40f168:	48 25 00 00 e0 ff 	andq	$-2097152, %rax
  40f16e:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  40f173:	48 8d 34 13 	leaq	(%rbx,%rdx), %rsi
  40f177:	48 f7 c6 ff ff 1f 00 	testq	$2097151, %rsi
  40f17e:	0f 84 fb 00 00 00 	je	251 <runtime.sysUnused+0x14f>
  40f184:	48 8d 54 13 ff 	leaq	-1(%rbx,%rdx), %rdx
  40f189:	48 81 e2 00 00 e0 ff 	andq	$-2097152, %rdx
  40f190:	48 85 c0 	testq	%rax, %rax
  40f193:	74 13 	je	19 <runtime.sysUnused+0x78>
  40f195:	48 8d b0 00 00 20 00 	leaq	2097152(%rax), %rsi
  40f19c:	48 39 d6 	cmpq	%rdx, %rsi
  40f19f:	0f 84 b1 00 00 00 	je	177 <runtime.sysUnused+0x126>
  40f1a5:	48 85 c0 	testq	%rax, %rax
  40f1a8:	75 6f 	jne	111 <runtime.sysUnused+0xe9>
  40f1aa:	48 85 d2 	testq	%rdx, %rdx
  40f1ad:	74 05 	je	5 <runtime.sysUnused+0x84>
  40f1af:	48 39 d0 	cmpq	%rdx, %rax
  40f1b2:	75 3f 	jne	63 <runtime.sysUnused+0xc3>
  40f1b4:	48 89 c8 	movq	%rcx, %rax
  40f1b7:	48 8b 15 e2 47 0b 00 	movq	739298(%rip), %rdx
  40f1be:	48 ff ca 	decq	%rdx
  40f1c1:	48 85 d1 	testq	%rdx, %rcx
  40f1c4:	0f 85 c6 00 00 00 	jne	198 <runtime.sysUnused+0x160>
  40f1ca:	48 85 d3 	testq	%rdx, %rbx
  40f1cd:	0f 85 bd 00 00 00 	jne	189 <runtime.sysUnused+0x160>
  40f1d3:	48 89 04 24 	movq	%rax, (%rsp)
  40f1d7:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  40f1dc:	c7 44 24 10 04 00 00 00 	movl	$4, 16(%rsp)
  40f1e4:	e8 07 8c 03 00 	callq	232455 <runtime.madvise>
  40f1e9:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  40f1ee:	48 83 c4 30 	addq	$48, %rsp
  40f1f2:	c3 	retq
  40f1f3:	48 89 14 24 	movq	%rdx, (%rsp)
  40f1f7:	48 c7 44 24 08 00 00 20 00 	movq	$2097152, 8(%rsp)
  40f200:	c7 44 24 10 0f 00 00 00 	movl	$15, 16(%rsp)
  40f208:	e8 e3 8b 03 00 	callq	232419 <runtime.madvise>
  40f20d:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  40f212:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  40f217:	eb 9b 	jmp	-101 <runtime.sysUnused+0x84>
  40f219:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  40f21e:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  40f223:	48 89 04 24 	movq	%rax, (%rsp)
  40f227:	48 c7 44 24 08 00 00 20 00 	movq	$2097152, 8(%rsp)
  40f230:	c7 44 24 10 0f 00 00 00 	movl	$15, 16(%rsp)
  40f238:	e8 b3 8b 03 00 	callq	232371 <runtime.madvise>
  40f23d:	48 8b 44 24 20 	movq	32(%rsp), %rax
  40f242:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  40f247:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  40f24c:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  40f251:	e9 54 ff ff ff 	jmp	-172 <runtime.sysUnused+0x7a>
  40f256:	48 89 04 24 	movq	%rax, (%rsp)
  40f25a:	48 c7 44 24 08 00 00 40 00 	movq	$4194304, 8(%rsp)
  40f263:	c7 44 24 10 0f 00 00 00 	movl	$15, 16(%rsp)
  40f26b:	e8 80 8b 03 00 	callq	232320 <runtime.madvise>
  40f270:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  40f275:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  40f27a:	e9 35 ff ff ff 	jmp	-203 <runtime.sysUnused+0x84>
  40f27f:	31 d2 	xorl	%edx, %edx
  40f281:	e9 0a ff ff ff 	jmp	-246 <runtime.sysUnused+0x60>
  40f286:	48 89 c2 	movq	%rax, %rdx
  40f289:	31 c0 	xorl	%eax, %eax
  40f28b:	e9 de fe ff ff 	jmp	-290 <runtime.sysUnused+0x3e>
  40f290:	48 8d 05 1f bd 05 00 	leaq	376095(%rip), %rax
  40f297:	48 89 04 24 	movq	%rax, (%rsp)
  40f29b:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  40f2a4:	e8 27 1f 01 00 	callq	73511 <runtime.throw>
  40f2a9:	0f 0b 	ud2
  40f2ab:	e8 c0 52 03 00 	callq	217792 <runtime.morestack_noctxt>
  40f2b0:	e9 7b fe ff ff 	jmp	-389 <runtime.sysUnused>
  40f2b5:	cc 	int3
  40f2b6:	cc 	int3
  40f2b7:	cc 	int3
  40f2b8:	cc 	int3
  40f2b9:	cc 	int3
  40f2ba:	cc 	int3
  40f2bb:	cc 	int3
  40f2bc:	cc 	int3
  40f2bd:	cc 	int3
  40f2be:	cc 	int3
  40f2bf:	cc 	int3

runtime.sysUsed:
  40f2c0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40f2c9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40f2cd:	76 5c 	jbe	92 <runtime.sysUsed+0x6b>
  40f2cf:	48 83 ec 20 	subq	$32, %rsp
  40f2d3:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  40f2d8:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  40f2dd:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40f2e2:	48 8d 88 ff ff 1f 00 	leaq	2097151(%rax), %rcx
  40f2e9:	48 81 e1 00 00 e0 ff 	andq	$-2097152, %rcx
  40f2f0:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  40f2f5:	48 01 d0 	addq	%rdx, %rax
  40f2f8:	48 25 00 00 e0 ff 	andq	$-2097152, %rax
  40f2fe:	48 39 c1 	cmpq	%rax, %rcx
  40f301:	72 0a 	jb	10 <runtime.sysUsed+0x4d>
  40f303:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  40f308:	48 83 c4 20 	addq	$32, %rsp
  40f30c:	c3 	retq
  40f30d:	48 89 ca 	movq	%rcx, %rdx
  40f310:	48 89 0c 24 	movq	%rcx, (%rsp)
  40f314:	48 29 d0 	subq	%rdx, %rax
  40f317:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40f31c:	c7 44 24 10 0e 00 00 00 	movl	$14, 16(%rsp)
  40f324:	e8 c7 8a 03 00 	callq	232135 <runtime.madvise>
  40f329:	eb d8 	jmp	-40 <runtime.sysUsed+0x43>
  40f32b:	e8 40 52 03 00 	callq	217664 <runtime.morestack_noctxt>
  40f330:	eb 8e 	jmp	-114 <runtime.sysUsed>
  40f332:	cc 	int3
  40f333:	cc 	int3
  40f334:	cc 	int3
  40f335:	cc 	int3
  40f336:	cc 	int3
  40f337:	cc 	int3
  40f338:	cc 	int3
  40f339:	cc 	int3
  40f33a:	cc 	int3
  40f33b:	cc 	int3
  40f33c:	cc 	int3
  40f33d:	cc 	int3
  40f33e:	cc 	int3
  40f33f:	cc 	int3

runtime.sysFree:
  40f340:	48 83 ec 18 	subq	$24, %rsp
  40f344:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  40f349:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  40f34e:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40f353:	48 89 04 24 	movq	%rax, (%rsp)
  40f357:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40f35c:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40f361:	e8 3a f0 00 00 	callq	61498 <runtime.mSysStatDec>
  40f366:	48 8b 44 24 20 	movq	32(%rsp), %rax
  40f36b:	48 89 04 24 	movq	%rax, (%rsp)
  40f36f:	48 8b 44 24 28 	movq	40(%rsp), %rax
  40f374:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40f379:	e8 72 2d ff ff 	callq	-53902 <runtime.munmap>
  40f37e:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  40f383:	48 83 c4 18 	addq	$24, %rsp
  40f387:	c3 	retq
  40f388:	cc 	int3
  40f389:	cc 	int3
  40f38a:	cc 	int3
  40f38b:	cc 	int3
  40f38c:	cc 	int3
  40f38d:	cc 	int3
  40f38e:	cc 	int3
  40f38f:	cc 	int3

runtime.sysFault:
  40f390:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40f399:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40f39d:	76 49 	jbe	73 <runtime.sysFault+0x58>
  40f39f:	48 83 ec 38 	subq	$56, %rsp
  40f3a3:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  40f3a8:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  40f3ad:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40f3b2:	48 89 04 24 	movq	%rax, (%rsp)
  40f3b6:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40f3bb:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40f3c0:	48 b8 00 00 00 00 32 00 00 00 	movabsq	$214748364800, %rax
  40f3ca:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40f3cf:	b8 ff ff ff ff 	movl	$4294967295, %eax
  40f3d4:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  40f3d9:	e8 92 2b ff ff 	callq	-54382 <runtime.mmap>
  40f3de:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  40f3e3:	48 83 c4 38 	addq	$56, %rsp
  40f3e7:	c3 	retq
  40f3e8:	e8 83 51 03 00 	callq	217475 <runtime.morestack_noctxt>
  40f3ed:	eb a1 	jmp	-95 <runtime.sysFault>
  40f3ef:	cc 	int3

runtime.sysReserve:
  40f3f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40f3f9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40f3fd:	0f 86 2e 01 00 00 	jbe	302 <runtime.sysReserve+0x141>
  40f403:	48 83 ec 38 	subq	$56, %rsp
  40f407:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  40f40c:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  40f411:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40f416:	48 b9 00 00 00 00 01 00 00 00 	movabsq	$4294967296, %rcx
  40f420:	48 39 c8 	cmpq	%rcx, %rax
  40f423:	0f 86 a3 00 00 00 	jbe	163 <runtime.sysReserve+0xdc>
  40f429:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40f42e:	48 89 04 24 	movq	%rax, (%rsp)
  40f432:	48 c7 44 24 08 00 00 01 00 	movq	$65536, 8(%rsp)
  40f43b:	48 b9 00 00 00 00 22 00 00 00 	movabsq	$146028888064, %rcx
  40f445:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  40f44a:	b9 ff ff ff ff 	movl	$4294967295, %ecx
  40f44f:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  40f454:	e8 97 fa ff ff 	callq	-1385 <runtime.mmap_fixed>
  40f459:	48 8b 44 24 20 	movq	32(%rsp), %rax
  40f45e:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  40f463:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  40f468:	48 39 d0 	cmpq	%rdx, %rax
  40f46b:	74 2c 	je	44 <runtime.sysReserve+0xa9>
  40f46d:	48 85 c9 	testq	%rcx, %rcx
  40f470:	74 13 	je	19 <runtime.sysReserve+0x95>
  40f472:	48 c7 44 24 58 00 00 00 00 	movq	$0, 88(%rsp)
  40f47b:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  40f480:	48 83 c4 38 	addq	$56, %rsp
  40f484:	c3 	retq
  40f485:	48 89 04 24 	movq	%rax, (%rsp)
  40f489:	48 c7 44 24 08 00 00 01 00 	movq	$65536, 8(%rsp)
  40f492:	e8 59 2c ff ff 	callq	-54183 <runtime.munmap>
  40f497:	eb d9 	jmp	-39 <runtime.sysReserve+0x82>
  40f499:	48 85 c9 	testq	%rcx, %rcx
  40f49c:	75 cf 	jne	-49 <runtime.sysReserve+0x7d>
  40f49e:	48 89 04 24 	movq	%rax, (%rsp)
  40f4a2:	48 c7 44 24 08 00 00 01 00 	movq	$65536, 8(%rsp)
  40f4ab:	e8 40 2c ff ff 	callq	-54208 <runtime.munmap>
  40f4b0:	48 8b 44 24 50 	movq	80(%rsp), %rax
  40f4b5:	c6 00 00 	movb	$0, (%rax)
  40f4b8:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40f4bd:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  40f4c2:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  40f4c7:	48 83 c4 38 	addq	$56, %rsp
  40f4cb:	c3 	retq
  40f4cc:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  40f4d1:	48 89 0c 24 	movq	%rcx, (%rsp)
  40f4d5:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40f4da:	48 b8 00 00 00 00 22 00 00 00 	movabsq	$146028888064, %rax
  40f4e4:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40f4e9:	b8 ff ff ff ff 	movl	$4294967295, %eax
  40f4ee:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  40f4f3:	e8 78 2a ff ff 	callq	-54664 <runtime.mmap>
  40f4f8:	48 8b 44 24 20 	movq	32(%rsp), %rax
  40f4fd:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  40f502:	48 85 c9 	testq	%rcx, %rcx
  40f505:	74 13 	je	19 <runtime.sysReserve+0x12a>
  40f507:	48 c7 44 24 58 00 00 00 00 	movq	$0, 88(%rsp)
  40f510:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  40f515:	48 83 c4 38 	addq	$56, %rsp
  40f519:	c3 	retq
  40f51a:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  40f51f:	c6 01 01 	movb	$1, (%rcx)
  40f522:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  40f527:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  40f52c:	48 83 c4 38 	addq	$56, %rsp
  40f530:	c3 	retq
  40f531:	e8 3a 50 03 00 	callq	217146 <runtime.morestack_noctxt>
  40f536:	e9 b5 fe ff ff 	jmp	-331 <runtime.sysReserve>
  40f53b:	cc 	int3
  40f53c:	cc 	int3
  40f53d:	cc 	int3
  40f53e:	cc 	int3
  40f53f:	cc 	int3

runtime.sysMap:
  40f540:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40f549:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40f54d:	0f 86 f9 01 00 00 	jbe	505 <runtime.sysMap+0x20c>
  40f553:	48 83 ec 48 	subq	$72, %rsp
  40f557:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  40f55c:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  40f561:	48 8b 44 24 68 	movq	104(%rsp), %rax
  40f566:	48 89 04 24 	movq	%rax, (%rsp)
  40f56a:	48 8b 44 24 58 	movq	88(%rsp), %rax
  40f56f:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40f574:	e8 77 ed 00 00 	callq	60791 <runtime.mSysStatInc>
  40f579:	0f b6 44 24 60 	movzbl	96(%rsp), %eax
  40f57e:	84 c0 	testb	%al, %al
  40f580:	74 5e 	je	94 <runtime.sysMap+0xa0>
  40f582:	48 8b 44 24 50 	movq	80(%rsp), %rax
  40f587:	48 89 04 24 	movq	%rax, (%rsp)
  40f58b:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  40f590:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40f595:	48 b9 03 00 00 00 32 00 00 00 	movabsq	$214748364803, %rcx
  40f59f:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  40f5a4:	b9 ff ff ff ff 	movl	$4294967295, %ecx
  40f5a9:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  40f5ae:	e8 bd 29 ff ff 	callq	-54851 <runtime.mmap>
  40f5b3:	48 8b 44 24 20 	movq	32(%rsp), %rax
  40f5b8:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  40f5bd:	48 83 f9 0c 	cmpq	$12, %rcx
  40f5c1:	0f 84 9c 00 00 00 	je	156 <runtime.sysMap+0x123>
  40f5c7:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  40f5cc:	48 39 d0 	cmpq	%rdx, %rax
  40f5cf:	75 77 	jne	119 <runtime.sysMap+0x108>
  40f5d1:	48 85 c9 	testq	%rcx, %rcx
  40f5d4:	75 72 	jne	114 <runtime.sysMap+0x108>
  40f5d6:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  40f5db:	48 83 c4 48 	addq	$72, %rsp
  40f5df:	c3 	retq
  40f5e0:	48 8b 44 24 50 	movq	80(%rsp), %rax
  40f5e5:	48 89 04 24 	movq	%rax, (%rsp)
  40f5e9:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  40f5ee:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40f5f3:	48 b9 03 00 00 00 22 00 00 00 	movabsq	$146028888067, %rcx
  40f5fd:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  40f602:	b9 ff ff ff ff 	movl	$4294967295, %ecx
  40f607:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  40f60c:	e8 df f8 ff ff 	callq	-1825 <runtime.mmap_fixed>
  40f611:	48 8b 44 24 20 	movq	32(%rsp), %rax
  40f616:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  40f61b:	48 83 f9 0c 	cmpq	$12, %rcx
  40f61f:	0f 84 0c 01 00 00 	je	268 <runtime.sysMap+0x1f1>
  40f625:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  40f62a:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  40f62f:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  40f634:	48 39 d0 	cmpq	%rdx, %rax
  40f637:	75 45 	jne	69 <runtime.sysMap+0x13e>
  40f639:	48 85 c9 	testq	%rcx, %rcx
  40f63c:	75 40 	jne	64 <runtime.sysMap+0x13e>
  40f63e:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  40f643:	48 83 c4 48 	addq	$72, %rsp
  40f647:	c3 	retq
  40f648:	48 8d 05 7e e2 05 00 	leaq	385662(%rip), %rax
  40f64f:	48 89 04 24 	movq	%rax, (%rsp)
  40f653:	48 c7 44 24 08 30 00 00 00 	movq	$48, 8(%rsp)
  40f65c:	e8 6f 1b 01 00 	callq	72559 <runtime.throw>
  40f661:	0f 0b 	ud2
  40f663:	48 8d 05 64 be 05 00 	leaq	376420(%rip), %rax
  40f66a:	48 89 04 24 	movq	%rax, (%rsp)
  40f66e:	48 c7 44 24 08 16 00 00 00 	movq	$22, 8(%rsp)
  40f677:	e8 54 1b 01 00 	callq	72532 <runtime.throw>
  40f67c:	0f 0b 	ud2
  40f67e:	e8 7d 24 01 00 	callq	74877 <runtime.printlock>
  40f683:	48 8d 05 2b d9 05 00 	leaq	383275(%rip), %rax
  40f68a:	48 89 04 24 	movq	%rax, (%rsp)
  40f68e:	48 c7 44 24 08 25 00 00 00 	movq	$37, 8(%rsp)
  40f697:	e8 a4 2d 01 00 	callq	77220 <runtime.printstring>
  40f69c:	48 8b 44 24 50 	movq	80(%rsp), %rax
  40f6a1:	48 89 04 24 	movq	%rax, (%rsp)
  40f6a5:	e8 56 2d 01 00 	callq	77142 <runtime.printpointer>
  40f6aa:	48 8d 05 2d a6 05 00 	leaq	370221(%rip), %rax
  40f6b1:	48 89 04 24 	movq	%rax, (%rsp)
  40f6b5:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  40f6be:	e8 7d 2d 01 00 	callq	77181 <runtime.printstring>
  40f6c3:	48 8b 44 24 38 	movq	56(%rsp), %rax
  40f6c8:	48 89 04 24 	movq	%rax, (%rsp)
  40f6cc:	e8 2f 2d 01 00 	callq	77103 <runtime.printpointer>
  40f6d1:	48 8d 05 09 a7 05 00 	leaq	370441(%rip), %rax
  40f6d8:	48 89 04 24 	movq	%rax, (%rsp)
  40f6dc:	48 c7 44 24 08 06 00 00 00 	movq	$6, 8(%rsp)
  40f6e5:	e8 56 2d 01 00 	callq	77142 <runtime.printstring>
  40f6ea:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40f6ef:	48 89 04 24 	movq	%rax, (%rsp)
  40f6f3:	e8 88 2b 01 00 	callq	76680 <runtime.printint>
  40f6f8:	48 8d 05 6b a5 05 00 	leaq	370027(%rip), %rax
  40f6ff:	48 89 04 24 	movq	%rax, (%rsp)
  40f703:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  40f70c:	e8 2f 2d 01 00 	callq	77103 <runtime.printstring>
  40f711:	e8 6a 24 01 00 	callq	74858 <runtime.printunlock>
  40f716:	48 8d 05 29 d0 05 00 	leaq	380969(%rip), %rax
  40f71d:	48 89 04 24 	movq	%rax, (%rsp)
  40f721:	48 c7 44 24 08 1f 00 00 00 	movq	$31, 8(%rsp)
  40f72a:	e8 a1 1a 01 00 	callq	72353 <runtime.throw>
  40f72f:	0f 0b 	ud2
  40f731:	48 8d 05 96 bd 05 00 	leaq	376214(%rip), %rax
  40f738:	48 89 04 24 	movq	%rax, (%rsp)
  40f73c:	48 c7 44 24 08 16 00 00 00 	movq	$22, 8(%rsp)
  40f745:	e8 86 1a 01 00 	callq	72326 <runtime.throw>
  40f74a:	0f 0b 	ud2
  40f74c:	e8 1f 4e 03 00 	callq	216607 <runtime.morestack_noctxt>
  40f751:	e9 ea fd ff ff 	jmp	-534 <runtime.sysMap>
  40f756:	cc 	int3
  40f757:	cc 	int3
  40f758:	cc 	int3
  40f759:	cc 	int3
  40f75a:	cc 	int3
  40f75b:	cc 	int3
  40f75c:	cc 	int3
  40f75d:	cc 	int3
  40f75e:	cc 	int3
  40f75f:	cc 	int3

runtime.queuefinalizer:
  40f760:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40f769:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40f76d:	0f 86 21 02 00 00 	jbe	545 <runtime.queuefinalizer+0x234>
  40f773:	48 83 ec 28 	subq	$40, %rsp
  40f777:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  40f77c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  40f781:	8b 05 55 41 0b 00 	movl	737621(%rip), %eax
  40f787:	85 c0 	testl	%eax, %eax
  40f789:	0f 85 ea 01 00 00 	jne	490 <runtime.queuefinalizer+0x219>
  40f78f:	48 8d 05 d2 41 0b 00 	leaq	737746(%rip), %rax
  40f796:	48 89 04 24 	movq	%rax, (%rsp)
  40f79a:	e8 81 9d ff ff 	callq	-25215 <runtime.lock>
  40f79f:	48 8b 05 ba 7e 09 00 	movq	622266(%rip), %rax
  40f7a6:	48 85 c0 	testq	%rax, %rax
  40f7a9:	74 0c 	je	12 <runtime.queuefinalizer+0x57>
  40f7ab:	8b 48 10 	movl	16(%rax), %ecx
  40f7ae:	83 f9 65 	cmpl	$101, %ecx
  40f7b1:	0f 85 de 00 00 00 	jne	222 <runtime.queuefinalizer+0x135>
  40f7b7:	48 8b 0d 92 7e 09 00 	movq	622226(%rip), %rcx
  40f7be:	48 85 c9 	testq	%rcx, %rcx
  40f7c1:	0f 85 aa 00 00 00 	jne	170 <runtime.queuefinalizer+0x111>
  40f7c7:	48 c7 04 24 00 10 00 00 	movq	$4096, (%rsp)
  40f7cf:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  40f7d8:	48 8d 05 b9 4f 0b 00 	leaq	741305(%rip), %rax
  40f7df:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  40f7e4:	e8 b7 bc ff ff 	callq	-17225 <runtime.persistentalloc>
  40f7e9:	48 8b 44 24 18 	movq	24(%rsp), %rax
  40f7ee:	48 89 05 5b 7e 09 00 	movq	%rax, 622171(%rip)
  40f7f5:	48 8b 0d 14 7e 09 00 	movq	622100(%rip), %rcx
  40f7fc:	48 89 08 	movq	%rcx, (%rax)
  40f7ff:	48 8b 05 4a 7e 09 00 	movq	622154(%rip), %rax
  40f806:	48 89 05 03 7e 09 00 	movq	%rax, 622083(%rip)
  40f80d:	0f b6 05 ec 42 0b 00 	movzbl	738028(%rip), %eax
  40f814:	84 c0 	testb	%al, %al
  40f816:	75 59 	jne	89 <runtime.queuefinalizer+0x111>
  40f818:	31 c0 	xorl	%eax, %eax
  40f81a:	eb 19 	jmp	25 <runtime.queuefinalizer+0xd5>
  40f81c:	48 8d 0d ed 57 09 00 	leaq	612333(%rip), %rcx
  40f823:	0f b6 1c 19 	movzbl	(%rcx,%rbx), %ebx
  40f827:	48 8d 35 d2 42 0b 00 	leaq	738002(%rip), %rsi
  40f82e:	88 1c 16 	movb	%bl, (%rsi,%rdx)
  40f831:	48 8d 42 01 	leaq	1(%rdx), %rax
  40f835:	48 83 f8 40 	cmpq	$64, %rax
  40f839:	7d 36 	jge	54 <runtime.queuefinalizer+0x111>
  40f83b:	48 89 c1 	movq	%rax, %rcx
  40f83e:	48 b8 cd cc cc cc cc cc cc cc 	movabsq	$-3689348814741910323, %rax
  40f848:	48 f7 e9 	imulq	%rcx
  40f84b:	48 01 ca 	addq	%rcx, %rdx
  40f84e:	48 c1 fa 02 	sarq	$2, %rdx
  40f852:	48 89 cb 	movq	%rcx, %rbx
  40f855:	48 c1 f9 3f 	sarq	$63, %rcx
  40f859:	48 29 ca 	subq	%rcx, %rdx
  40f85c:	48 8d 0c 92 	leaq	(%rdx,%rdx,4), %rcx
  40f860:	48 89 da 	movq	%rbx, %rdx
  40f863:	48 29 cb 	subq	%rcx, %rbx
  40f866:	48 83 fb 05 	cmpq	$5, %rbx
  40f86a:	72 b0 	jb	-80 <runtime.queuefinalizer+0xbc>
  40f86c:	e9 01 01 00 00 	jmp	257 <runtime.queuefinalizer+0x212>
  40f871:	48 8b 0d d8 7d 09 00 	movq	622040(%rip), %rcx
  40f878:	48 8b 51 08 	movq	8(%rcx), %rdx
  40f87c:	48 89 15 cd 7d 09 00 	movq	%rdx, 622029(%rip)
  40f883:	48 8b 15 d6 7d 09 00 	movq	622038(%rip), %rdx
  40f88a:	48 89 51 08 	movq	%rdx, 8(%rcx)
  40f88e:	48 89 0d cb 7d 09 00 	movq	%rcx, 622027(%rip)
  40f895:	48 8b 0d c4 7d 09 00 	movq	622020(%rip), %rcx
  40f89c:	8b 51 10 	movl	16(%rcx), %edx
  40f89f:	48 83 fa 65 	cmpq	$101, %rdx
  40f8a3:	0f 83 c2 00 00 00 	jae	194 <runtime.queuefinalizer+0x20b>
  40f8a9:	bb 01 00 00 00 	movl	$1, %ebx
  40f8ae:	f0 	lock
  40f8af:	0f c1 59 10 	xaddl	%ebx, 16(%rcx)
  40f8b3:	48 8d 14 92 	leaq	(%rdx,%rdx,4), %rdx
  40f8b7:	48 8d 7c d1 18 	leaq	24(%rcx,%rdx,8), %rdi
  40f8bc:	8b 1d 4e 41 0b 00 	movl	737614(%rip), %ebx
  40f8c2:	85 db 	testl	%ebx, %ebx
  40f8c4:	0f 85 92 00 00 00 	jne	146 <runtime.queuefinalizer+0x1fc>
  40f8ca:	48 8b 5c 24 38 	movq	56(%rsp), %rbx
  40f8cf:	48 89 5c d1 18 	movq	%rbx, 24(%rcx,%rdx,8)
  40f8d4:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  40f8d9:	48 89 5c d1 28 	movq	%rbx, 40(%rcx,%rdx,8)
  40f8de:	8b 1d 2c 41 0b 00 	movl	737580(%rip), %ebx
  40f8e4:	48 8d 7c d1 30 	leaq	48(%rcx,%rdx,8), %rdi
  40f8e9:	48 8d 74 d1 38 	leaq	56(%rcx,%rdx,8), %rsi
  40f8ee:	4c 8d 44 d1 20 	leaq	32(%rcx,%rdx,8), %r8
  40f8f3:	85 db 	testl	%ebx, %ebx
  40f8f5:	75 3f 	jne	63 <runtime.queuefinalizer+0x1d6>
  40f8f7:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40f8fc:	48 89 44 d1 30 	movq	%rax, 48(%rcx,%rdx,8)
  40f901:	48 8b 44 24 50 	movq	80(%rsp), %rax
  40f906:	48 89 44 d1 38 	movq	%rax, 56(%rcx,%rdx,8)
  40f90b:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40f910:	48 89 44 d1 20 	movq	%rax, 32(%rcx,%rdx,8)
  40f915:	c6 05 8a 3f 0b 00 01 	movb	$1, 737162(%rip)
  40f91c:	48 8d 05 45 40 0b 00 	leaq	737349(%rip), %rax
  40f923:	48 89 04 24 	movq	%rax, (%rsp)
  40f927:	e8 94 9d ff ff 	callq	-25196 <runtime.unlock>
  40f92c:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  40f931:	48 83 c4 28 	addq	$40, %rsp
  40f935:	c3 	retq
  40f936:	48 8b 44 24 48 	movq	72(%rsp), %rax
  40f93b:	e8 60 6f 03 00 	callq	225120 <runtime.gcWriteBarrier>
  40f940:	48 89 f7 	movq	%rsi, %rdi
  40f943:	48 8b 44 24 50 	movq	80(%rsp), %rax
  40f948:	e8 53 6f 03 00 	callq	225107 <runtime.gcWriteBarrier>
  40f94d:	4c 89 c7 	movq	%r8, %rdi
  40f950:	48 8b 44 24 30 	movq	48(%rsp), %rax
  40f955:	e8 46 6f 03 00 	callq	225094 <runtime.gcWriteBarrier>
  40f95a:	eb b9 	jmp	-71 <runtime.queuefinalizer+0x1b5>
  40f95c:	48 8b 44 24 38 	movq	56(%rsp), %rax
  40f961:	e8 3a 6f 03 00 	callq	225082 <runtime.gcWriteBarrier>
  40f966:	e9 69 ff ff ff 	jmp	-151 <runtime.queuefinalizer+0x174>
  40f96b:	e8 d0 00 01 00 	callq	65744 <runtime.panicindex>
  40f970:	0f 0b 	ud2
  40f972:	e8 c9 00 01 00 	callq	65737 <runtime.panicindex>
  40f977:	0f 0b 	ud2
  40f979:	48 8d 05 6e bf 05 00 	leaq	376686(%rip), %rax
  40f980:	48 89 04 24 	movq	%rax, (%rsp)
  40f984:	48 c7 44 24 08 18 00 00 00 	movq	$24, 8(%rsp)
  40f98d:	e8 3e 18 01 00 	callq	71742 <runtime.throw>
  40f992:	0f 0b 	ud2
  40f994:	e8 d7 4b 03 00 	callq	216023 <runtime.morestack_noctxt>
  40f999:	e9 c2 fd ff ff 	jmp	-574 <runtime.queuefinalizer>
  40f99e:	cc 	int3
  40f99f:	cc 	int3

runtime.wakefing:
  40f9a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40f9a9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40f9ad:	76 7a 	jbe	122 <runtime.wakefing+0x89>
  40f9af:	48 83 ec 18 	subq	$24, %rsp
  40f9b3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  40f9b8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  40f9bd:	48 8d 05 a4 3f 0b 00 	leaq	737188(%rip), %rax
  40f9c4:	48 89 04 24 	movq	%rax, (%rsp)
  40f9c8:	e8 53 9b ff ff 	callq	-25773 <runtime.lock>
  40f9cd:	0f b6 05 d1 3e 0b 00 	movzbl	736977(%rip), %eax
  40f9d4:	84 c0 	testb	%al, %al
  40f9d6:	74 4d 	je	77 <runtime.wakefing+0x85>
  40f9d8:	0f b6 05 c7 3e 0b 00 	movzbl	736967(%rip), %eax
  40f9df:	84 c0 	testb	%al, %al
  40f9e1:	74 3e 	je	62 <runtime.wakefing+0x81>
  40f9e3:	c6 05 bb 3e 0b 00 00 	movb	$0, 736955(%rip)
  40f9ea:	c6 05 b5 3e 0b 00 00 	movb	$0, 736949(%rip)
  40f9f1:	48 8b 05 60 7c 09 00 	movq	621664(%rip), %rax
  40f9f8:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40f9fd:	48 8d 0d 64 3f 0b 00 	leaq	737124(%rip), %rcx
  40fa04:	48 89 0c 24 	movq	%rcx, (%rsp)
  40fa08:	e8 b3 9c ff ff 	callq	-25421 <runtime.unlock>
  40fa0d:	48 8b 44 24 08 	movq	8(%rsp), %rax
  40fa12:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  40fa17:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  40fa1c:	48 83 c4 18 	addq	$24, %rsp
  40fa20:	c3 	retq
  40fa21:	31 c0 	xorl	%eax, %eax
  40fa23:	eb d3 	jmp	-45 <runtime.wakefing+0x58>
  40fa25:	31 c0 	xorl	%eax, %eax
  40fa27:	eb cf 	jmp	-49 <runtime.wakefing+0x58>
  40fa29:	e8 42 4b 03 00 	callq	215874 <runtime.morestack_noctxt>
  40fa2e:	e9 6d ff ff ff 	jmp	-147 <runtime.wakefing>
  40fa33:	cc 	int3
  40fa34:	cc 	int3
  40fa35:	cc 	int3
  40fa36:	cc 	int3
  40fa37:	cc 	int3
  40fa38:	cc 	int3
  40fa39:	cc 	int3
  40fa3a:	cc 	int3
  40fa3b:	cc 	int3
  40fa3c:	cc 	int3
  40fa3d:	cc 	int3
  40fa3e:	cc 	int3
  40fa3f:	cc 	int3

runtime.(*fixalloc).alloc:
  40fa40:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40fa49:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40fa4d:	0f 86 50 01 00 00 	jbe	336 <runtime.(*fixalloc).alloc+0x163>
  40fa53:	48 83 ec 38 	subq	$56, %rsp
  40fa57:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  40fa5c:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  40fa61:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40fa66:	48 8b 08 	movq	(%rax), %rcx
  40fa69:	48 85 c9 	testq	%rcx, %rcx
  40fa6c:	0f 84 f3 00 00 00 	je	243 <runtime.(*fixalloc).alloc+0x125>
  40fa72:	48 8b 58 18 	movq	24(%rax), %rbx
  40fa76:	48 85 db 	testq	%rbx, %rbx
  40fa79:	74 46 	je	70 <runtime.(*fixalloc).alloc+0x81>
  40fa7b:	48 8b 0b 	movq	(%rbx), %rcx
  40fa7e:	48 89 48 18 	movq	%rcx, 24(%rax)
  40fa82:	48 8b 08 	movq	(%rax), %rcx
  40fa85:	48 03 48 30 	addq	48(%rax), %rcx
  40fa89:	48 89 48 30 	movq	%rcx, 48(%rax)
  40fa8d:	0f b6 48 40 	movzbl	64(%rax), %ecx
  40fa91:	84 c9 	testb	%cl, %cl
  40fa93:	75 0f 	jne	15 <runtime.(*fixalloc).alloc+0x64>
  40fa95:	48 89 5c 24 48 	movq	%rbx, 72(%rsp)
  40fa9a:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  40fa9f:	48 83 c4 38 	addq	$56, %rsp
  40faa3:	c3 	retq
  40faa4:	48 89 5c 24 28 	movq	%rbx, 40(%rsp)
  40faa9:	48 8b 00 	movq	(%rax), %rax
  40faac:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40fab1:	48 89 1c 24 	movq	%rbx, (%rsp)
  40fab5:	e8 b6 73 03 00 	callq	226230 <runtime.memclrNoHeapPointers>
  40faba:	48 8b 5c 24 28 	movq	40(%rsp), %rbx
  40fabf:	eb d4 	jmp	-44 <runtime.(*fixalloc).alloc+0x55>
  40fac1:	8b 58 28 	movl	40(%rax), %ebx
  40fac4:	48 39 cb 	cmpq	%rcx, %rbx
  40fac7:	72 60 	jb	96 <runtime.(*fixalloc).alloc+0xe9>
  40fac9:	48 8b 48 20 	movq	32(%rax), %rcx
  40facd:	48 8b 50 08 	movq	8(%rax), %rdx
  40fad1:	48 85 d2 	testq	%rdx, %rdx
  40fad4:	75 30 	jne	48 <runtime.(*fixalloc).alloc+0xc6>
  40fad6:	48 8b 10 	movq	(%rax), %rdx
  40fad9:	48 03 50 20 	addq	32(%rax), %rdx
  40fadd:	48 89 50 20 	movq	%rdx, 32(%rax)
  40fae1:	8b 50 28 	movl	40(%rax), %edx
  40fae4:	48 8b 18 	movq	(%rax), %rbx
  40fae7:	29 da 	subl	%ebx, %edx
  40fae9:	89 50 28 	movl	%edx, 40(%rax)
  40faec:	48 8b 10 	movq	(%rax), %rdx
  40faef:	48 03 50 30 	addq	48(%rax), %rdx
  40faf3:	48 89 50 30 	movq	%rdx, 48(%rax)
  40faf7:	48 89 4c 24 48 	movq	%rcx, 72(%rsp)
  40fafc:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  40fb01:	48 83 c4 38 	addq	$56, %rsp
  40fb05:	c3 	retq
  40fb06:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  40fb0b:	48 8b 58 10 	movq	16(%rax), %rbx
  40fb0f:	48 89 1c 24 	movq	%rbx, (%rsp)
  40fb13:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40fb18:	48 8b 1a 	movq	(%rdx), %rbx
  40fb1b:	ff d3 	callq	*%rbx
  40fb1d:	48 8b 44 24 40 	movq	64(%rsp), %rax
  40fb22:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  40fb27:	eb ad 	jmp	-83 <runtime.(*fixalloc).alloc+0x96>
  40fb29:	48 8b 48 38 	movq	56(%rax), %rcx
  40fb2d:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  40fb32:	48 c7 04 24 00 40 00 00 	movq	$16384, (%rsp)
  40fb3a:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  40fb43:	e8 58 b9 ff ff 	callq	-18088 <runtime.persistentalloc>
  40fb48:	48 8b 44 24 18 	movq	24(%rsp), %rax
  40fb4d:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  40fb52:	48 89 41 20 	movq	%rax, 32(%rcx)
  40fb56:	c7 41 28 00 40 00 00 	movl	$16384, 40(%rcx)
  40fb5d:	48 89 c8 	movq	%rcx, %rax
  40fb60:	e9 64 ff ff ff 	jmp	-156 <runtime.(*fixalloc).alloc+0x89>
  40fb65:	e8 96 1f 01 00 	callq	73622 <runtime.printlock>
  40fb6a:	48 8d 05 7e df 05 00 	leaq	384894(%rip), %rax
  40fb71:	48 89 04 24 	movq	%rax, (%rsp)
  40fb75:	48 c7 44 24 08 34 00 00 00 	movq	$52, 8(%rsp)
  40fb7e:	e8 bd 28 01 00 	callq	75965 <runtime.printstring>
  40fb83:	e8 f8 1f 01 00 	callq	73720 <runtime.printunlock>
  40fb88:	48 8d 05 ba bb 05 00 	leaq	375738(%rip), %rax
  40fb8f:	48 89 04 24 	movq	%rax, (%rsp)
  40fb93:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  40fb9c:	e8 2f 16 01 00 	callq	71215 <runtime.throw>
  40fba1:	0f 0b 	ud2
  40fba3:	e8 c8 49 03 00 	callq	215496 <runtime.morestack_noctxt>
  40fba8:	e9 93 fe ff ff 	jmp	-365 <runtime.(*fixalloc).alloc>
  40fbad:	cc 	int3
  40fbae:	cc 	int3
  40fbaf:	cc 	int3

runtime.gcinit:
  40fbb0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40fbb9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40fbbd:	0f 86 ba 00 00 00 	jbe	186 <runtime.gcinit+0xcd>
  40fbc3:	48 83 ec 18 	subq	$24, %rsp
  40fbc7:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  40fbcc:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  40fbd1:	c7 05 e9 d6 09 00 01 00 00 00 	movl	$1, 644841(%rip)
  40fbdb:	f2 0f 10 05 dd 4e 06 00 	movsd	413405(%rip), %xmm0
  40fbe3:	f2 0f 11 05 45 62 0b 00 	movsd	%xmm0, 746053(%rip)
  40fbeb:	48 8b 05 46 54 09 00 	movq	611398(%rip), %rax
  40fbf2:	48 85 c0 	testq	%rax, %rax
  40fbf5:	7c 6b 	jl	107 <runtime.gcinit+0xb2>
  40fbf7:	0f 57 c0 	xorps	%xmm0, %xmm0
  40fbfa:	f2 48 0f 2a c0 	cvtsi2sdq	%rax, %xmm0
  40fbff:	f2 0f 10 0d e1 4e 06 00 	movsd	413409(%rip), %xmm1
  40fc07:	f2 0f 5e c1 	divsd	%xmm1, %xmm0
  40fc0b:	f2 0f 10 0d 05 4f 06 00 	movsd	413445(%rip), %xmm1
  40fc13:	66 0f 2e c8 	ucomisd	%xmm0, %xmm1
  40fc17:	76 31 	jbe	49 <runtime.gcinit+0x9a>
  40fc19:	f2 48 0f 2c c0 	cvttsd2si	%xmm0, %rax
  40fc1e:	48 89 05 2b 62 0b 00 	movq	%rax, 746027(%rip)
  40fc25:	e8 66 00 00 00 	callq	102 <runtime.readgogc>
  40fc2a:	e8 b1 01 00 00 	callq	433 <runtime/debug.setGCPercent>
  40fc2f:	48 b8 01 00 00 00 01 00 00 00 	movabsq	$4294967297, %rax
  40fc39:	48 89 05 44 82 09 00 	movq	%rax, 623172(%rip)
  40fc40:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  40fc45:	48 83 c4 18 	addq	$24, %rsp
  40fc49:	c3 	retq
  40fc4a:	f2 0f 5c c1 	subsd	%xmm1, %xmm0
  40fc4e:	f2 48 0f 2c c0 	cvttsd2si	%xmm0, %rax
  40fc53:	48 b9 00 00 00 00 00 00 00 80 	movabsq	$-9223372036854775808, %rcx
  40fc5d:	48 09 c8 	orq	%rcx, %rax
  40fc60:	eb bc 	jmp	-68 <runtime.gcinit+0x6e>
  40fc62:	48 89 c1 	movq	%rax, %rcx
  40fc65:	48 83 e0 01 	andq	$1, %rax
  40fc69:	48 d1 e9 	shrq	%rcx
  40fc6c:	48 09 c1 	orq	%rax, %rcx
  40fc6f:	0f 57 c0 	xorps	%xmm0, %xmm0
  40fc72:	f2 48 0f 2a c1 	cvtsi2sdq	%rcx, %xmm0
  40fc77:	f2 0f 58 c0 	addsd	%xmm0, %xmm0
  40fc7b:	eb 82 	jmp	-126 <runtime.gcinit+0x4f>
  40fc7d:	e8 ee 48 03 00 	callq	215278 <runtime.morestack_noctxt>
  40fc82:	e9 29 ff ff ff 	jmp	-215 <runtime.gcinit>
  40fc87:	cc 	int3
  40fc88:	cc 	int3
  40fc89:	cc 	int3
  40fc8a:	cc 	int3
  40fc8b:	cc 	int3
  40fc8c:	cc 	int3
  40fc8d:	cc 	int3
  40fc8e:	cc 	int3
  40fc8f:	cc 	int3

runtime.readgogc:
  40fc90:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40fc99:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40fc9d:	0f 86 97 00 00 00 	jbe	151 <runtime.readgogc+0xaa>
  40fca3:	48 83 ec 28 	subq	$40, %rsp
  40fca7:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  40fcac:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  40fcb1:	48 8d 05 3e a0 05 00 	leaq	368702(%rip), %rax
  40fcb8:	48 89 04 24 	movq	%rax, (%rsp)
  40fcbc:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  40fcc5:	e8 a6 4d ff ff 	callq	-45658 <runtime.gogetenv>
  40fcca:	48 8b 44 24 18 	movq	24(%rsp), %rax
  40fccf:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  40fcd4:	48 83 f8 03 	cmpq	$3, %rax
  40fcd8:	75 13 	jne	19 <runtime.readgogc+0x5d>
  40fcda:	0f b7 11 	movzwl	(%rcx), %edx
  40fcdd:	66 81 fa 6f 66 	cmpw	$26223, %dx
  40fce2:	75 09 	jne	9 <runtime.readgogc+0x5d>
  40fce4:	0f b6 51 02 	movzbl	2(%rcx), %edx
  40fce8:	80 fa 66 	cmpb	$102, %dl
  40fceb:	74 3b 	je	59 <runtime.readgogc+0x98>
  40fced:	48 89 0c 24 	movq	%rcx, (%rsp)
  40fcf1:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40fcf6:	e8 35 79 02 00 	callq	162101 <runtime.atoi32>
  40fcfb:	8b 44 24 10 	movl	16(%rsp), %eax
  40fcff:	0f b6 4c 24 14 	movzbl	20(%rsp), %ecx
  40fd04:	84 c9 	testb	%cl, %cl
  40fd06:	74 0e 	je	14 <runtime.readgogc+0x86>
  40fd08:	89 44 24 30 	movl	%eax, 48(%rsp)
  40fd0c:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  40fd11:	48 83 c4 28 	addq	$40, %rsp
  40fd15:	c3 	retq
  40fd16:	c7 44 24 30 64 00 00 00 	movl	$100, 48(%rsp)
  40fd1e:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  40fd23:	48 83 c4 28 	addq	$40, %rsp
  40fd27:	c3 	retq
  40fd28:	c7 44 24 30 ff ff ff ff 	movl	$4294967295, 48(%rsp)
  40fd30:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  40fd35:	48 83 c4 28 	addq	$40, %rsp
  40fd39:	c3 	retq
  40fd3a:	e8 31 48 03 00 	callq	215089 <runtime.morestack_noctxt>
  40fd3f:	e9 4c ff ff ff 	jmp	-180 <runtime.readgogc>
  40fd44:	cc 	int3
  40fd45:	cc 	int3
  40fd46:	cc 	int3
  40fd47:	cc 	int3
  40fd48:	cc 	int3
  40fd49:	cc 	int3
  40fd4a:	cc 	int3
  40fd4b:	cc 	int3
  40fd4c:	cc 	int3
  40fd4d:	cc 	int3
  40fd4e:	cc 	int3
  40fd4f:	cc 	int3

runtime.gcenable:
  40fd50:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40fd59:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40fd5d:	76 71 	jbe	113 <runtime.gcenable+0x80>
  40fd5f:	48 83 ec 28 	subq	$40, %rsp
  40fd63:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  40fd68:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  40fd6d:	48 8d 05 ec 6d 04 00 	leaq	290284(%rip), %rax
  40fd74:	48 89 04 24 	movq	%rax, (%rsp)
  40fd78:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  40fd81:	e8 4a 30 ff ff 	callq	-53174 <runtime.makechan>
  40fd86:	48 8b 44 24 10 	movq	16(%rsp), %rax
  40fd8b:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  40fd90:	c7 04 24 08 00 00 00 	movl	$8, (%rsp)
  40fd97:	48 8d 0d 12 e2 05 00 	leaq	385554(%rip), %rcx
  40fd9e:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  40fda3:	e8 48 a5 01 00 	callq	107848 <runtime.newproc>
  40fda8:	48 8b 44 24 18 	movq	24(%rsp), %rax
  40fdad:	48 89 04 24 	movq	%rax, (%rsp)
  40fdb1:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  40fdba:	e8 01 3e ff ff 	callq	-49663 <runtime.chanrecv1>
  40fdbf:	c6 05 0a 5a 0b 00 01 	movb	$1, 743946(%rip)
  40fdc6:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  40fdcb:	48 83 c4 28 	addq	$40, %rsp
  40fdcf:	c3 	retq
  40fdd0:	e8 9b 47 03 00 	callq	214939 <runtime.morestack_noctxt>
  40fdd5:	e9 76 ff ff ff 	jmp	-138 <runtime.gcenable>
  40fdda:	cc 	int3
  40fddb:	cc 	int3
  40fddc:	cc 	int3
  40fddd:	cc 	int3
  40fdde:	cc 	int3
  40fddf:	cc 	int3

runtime/debug.setGCPercent:
  40fde0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40fde9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40fded:	0f 86 2c 01 00 00 	jbe	300 <runtime/debug.setGCPercent+0x13f>
  40fdf3:	48 83 ec 38 	subq	$56, %rsp
  40fdf7:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  40fdfc:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  40fe01:	48 8d 05 98 c4 09 00 	leaq	640152(%rip), %rax
  40fe08:	48 89 04 24 	movq	%rax, (%rsp)
  40fe0c:	e8 0f 97 ff ff 	callq	-26865 <runtime.lock>
  40fe11:	8b 05 c1 3a 0b 00 	movl	735937(%rip), %eax
  40fe17:	89 44 24 2c 	movl	%eax, 44(%rsp)
  40fe1b:	8b 4c 24 40 	movl	64(%rsp), %ecx
  40fe1f:	85 c9 	testl	%ecx, %ecx
  40fe21:	7d 05 	jge	5 <runtime/debug.setGCPercent+0x48>
  40fe23:	b9 ff ff ff ff 	movl	$4294967295, %ecx
  40fe28:	89 4c 24 40 	movl	%ecx, 64(%rsp)
  40fe2c:	89 0d a6 3a 0b 00 	movl	%ecx, 735910(%rip)
  40fe32:	48 63 d1 	movslq	%ecx, %rdx
  40fe35:	48 c1 e2 16 	shlq	$22, %rdx
  40fe39:	48 d1 ea 	shrq	%rdx
  40fe3c:	48 b8 0b d7 a3 70 3d 0a d7 a3 	movabsq	$-6640827866535438581, %rax
  40fe46:	48 f7 e2 	mulq	%rdx
  40fe49:	48 c1 ea 05 	shrq	$5, %rdx
  40fe4d:	48 89 15 e4 51 09 00 	movq	%rdx, 610788(%rip)
  40fe54:	f2 0f 10 05 d4 5f 0b 00 	movsd	745428(%rip), %xmm0
  40fe5c:	f2 0f 11 04 24 	movsd	%xmm0, (%rsp)
  40fe61:	e8 ea 0e 00 00 	callq	3818 <runtime.gcSetTriggerRatio>
  40fe66:	48 8d 0d 33 c4 09 00 	leaq	640051(%rip), %rcx
  40fe6d:	48 89 0c 24 	movq	%rcx, (%rsp)
  40fe71:	e8 4a 98 ff ff 	callq	-26550 <runtime.unlock>
  40fe76:	8b 4c 24 40 	movl	64(%rsp), %ecx
  40fe7a:	85 c9 	testl	%ecx, %ecx
  40fe7c:	7c 12 	jl	18 <runtime/debug.setGCPercent+0xb0>
  40fe7e:	8b 44 24 2c 	movl	44(%rsp), %eax
  40fe82:	89 44 24 48 	movl	%eax, 72(%rsp)
  40fe86:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  40fe8b:	48 83 c4 38 	addq	$56, %rsp
  40fe8f:	c3 	retq
  40fe90:	48 8d 05 41 80 09 00 	leaq	622657(%rip), %rax
  40fe97:	48 89 04 24 	movq	%rax, (%rsp)
  40fe9b:	e8 80 96 ff ff 	callq	-27008 <runtime.lock>
  40fea0:	8b 05 36 3a 0b 00 	movl	735798(%rip), %eax
  40fea6:	83 f8 01 	cmpl	$1, %eax
  40fea9:	75 5f 	jne	95 <runtime/debug.setGCPercent+0x12a>
  40feab:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  40feb4:	48 8b 0d 25 80 09 00 	movq	622629(%rip), %rcx
  40febb:	48 89 88 b8 00 00 00 	movq	%rcx, 184(%rax)
  40fec2:	48 8d 0d 17 80 09 00 	leaq	622615(%rip), %rcx
  40fec9:	84 01 	testb	%al, (%rcx)
  40fecb:	48 89 05 0e 80 09 00 	movq	%rax, 622606(%rip)
  40fed2:	48 8d 05 ff 7f 09 00 	leaq	622591(%rip), %rax
  40fed9:	48 89 04 24 	movq	%rax, (%rsp)
  40fedd:	48 8d 05 56 ae 05 00 	leaq	372310(%rip), %rax
  40fee4:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  40fee9:	48 c7 44 24 10 11 00 00 00 	movq	$17, 16(%rsp)
  40fef2:	c6 44 24 18 14 	movb	$20, 24(%rsp)
  40fef7:	48 c7 44 24 20 01 00 00 00 	movq	$1, 32(%rsp)
  40ff00:	e8 5b 30 01 00 	callq	77915 <runtime.goparkunlock>
  40ff05:	e9 74 ff ff ff 	jmp	-140 <runtime/debug.setGCPercent+0x9e>
  40ff0a:	48 8d 05 c7 7f 09 00 	leaq	622535(%rip), %rax
  40ff11:	48 89 04 24 	movq	%rax, (%rsp)
  40ff15:	e8 a6 97 ff ff 	callq	-26714 <runtime.unlock>
  40ff1a:	e9 5f ff ff ff 	jmp	-161 <runtime/debug.setGCPercent+0x9e>
  40ff1f:	e8 4c 46 03 00 	callq	214604 <runtime.morestack_noctxt>
  40ff24:	e9 b7 fe ff ff 	jmp	-329 <runtime/debug.setGCPercent>
  40ff29:	cc 	int3
  40ff2a:	cc 	int3
  40ff2b:	cc 	int3
  40ff2c:	cc 	int3
  40ff2d:	cc 	int3
  40ff2e:	cc 	int3
  40ff2f:	cc 	int3

runtime.(*gcControllerState).startCycle:
  40ff30:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  40ff39:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  40ff3d:	0f 86 6d 03 00 00 	jbe	877 <runtime.(*gcControllerState).startCycle+0x380>
  40ff43:	48 83 ec 48 	subq	$72, %rsp
  40ff47:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  40ff4c:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  40ff51:	0f 57 c0 	xorps	%xmm0, %xmm0
  40ff54:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  40ff59:	0f 11 01 	movups	%xmm0, (%rcx)
  40ff5c:	0f 11 41 10 	movups	%xmm0, 16(%rcx)
  40ff60:	0f 11 41 20 	movups	%xmm0, 32(%rcx)
  40ff64:	48 8b 15 cd 5e 0b 00 	movq	745165(%rip), %rdx
  40ff6b:	48 8b 1d c6 50 09 00 	movq	610502(%rip), %rbx
  40ff72:	48 39 da 	cmpq	%rbx, %rdx
  40ff75:	0f 87 28 03 00 00 	ja	808 <runtime.(*gcControllerState).startCycle+0x373>
  40ff7b:	48 85 d2 	testq	%rdx, %rdx
  40ff7e:	0f 8c 01 03 00 00 	jl	769 <runtime.(*gcControllerState).startCycle+0x355>
  40ff84:	0f 57 c9 	xorps	%xmm1, %xmm1
  40ff87:	f2 48 0f 2a ca 	cvtsi2sdq	%rdx, %xmm1
  40ff8c:	f2 0f 10 15 9c 5e 0b 00 	movsd	745116(%rip), %xmm2
  40ff94:	f2 0f 10 1d 34 4b 06 00 	movsd	412468(%rip), %xmm3
  40ff9c:	f2 0f 58 d3 	addsd	%xmm3, %xmm2
  40ffa0:	f2 0f 5e ca 	divsd	%xmm2, %xmm1
  40ffa4:	f2 0f 10 15 6c 4b 06 00 	movsd	412524(%rip), %xmm2
  40ffac:	66 0f 2e d1 	ucomisd	%xmm1, %xmm2
  40ffb0:	0f 86 b4 02 00 00 	jbe	692 <runtime.(*gcControllerState).startCycle+0x33a>
  40ffb6:	f2 48 0f 2c d1 	cvttsd2si	%xmm1, %rdx
  40ffbb:	48 89 15 8e 5e 0b 00 	movq	%rdx, 745102(%rip)
  40ffc2:	48 8b 15 87 5e 0b 00 	movq	745095(%rip), %rdx
  40ffc9:	48 63 1d 08 39 0b 00 	movslq	735496(%rip), %rbx
  40ffd0:	48 0f af da 	imulq	%rdx, %rbx
  40ffd4:	48 d1 eb 	shrq	%rbx
  40ffd7:	48 b8 0b d7 a3 70 3d 0a d7 a3 	movabsq	$-6640827866535438581, %rax
  40ffe1:	48 89 d6 	movq	%rdx, %rsi
  40ffe4:	48 f7 e3 	mulq	%rbx
  40ffe7:	48 c1 ea 05 	shrq	$5, %rdx
  40ffeb:	48 01 f2 	addq	%rsi, %rdx
  40ffee:	48 89 15 b3 47 0b 00 	movq	%rdx, 739251(%rip)
  40fff5:	8b 15 dd 38 0b 00 	movl	735453(%rip), %edx
  40fffb:	85 d2 	testl	%edx, %edx
  40fffd:	7d 0b 	jge	11 <runtime.(*gcControllerState).startCycle+0xda>
  40ffff:	48 c7 05 9e 47 0b 00 ff ff ff ff 	movq	$-1, 739230(%rip)
  41000a:	48 8b 05 97 47 0b 00 	movq	739223(%rip), %rax
  410011:	48 8b 15 28 5e 0b 00 	movq	745000(%rip), %rdx
  410018:	48 81 c2 00 00 10 00 	addq	$1048576, %rdx
  41001f:	48 39 d0 	cmpq	%rdx, %rax
  410022:	73 07 	jae	7 <runtime.(*gcControllerState).startCycle+0xfb>
  410024:	48 89 15 7d 47 0b 00 	movq	%rdx, 739197(%rip)
  41002b:	8b 05 af 38 0b 00 	movl	735407(%rip), %eax
  410031:	0f 57 c9 	xorps	%xmm1, %xmm1
  410034:	f2 0f 2a c8 	cvtsi2sdl	%eax, %xmm1
  410038:	f2 0f 10 15 68 4a 06 00 	movsd	412264(%rip), %xmm2
  410040:	f2 0f 59 ca 	mulsd	%xmm2, %xmm1
  410044:	f2 0f 10 15 6c 4a 06 00 	movsd	412268(%rip), %xmm2
  41004c:	f2 0f 58 d1 	addsd	%xmm1, %xmm2
  410050:	f2 48 0f 2c c2 	cvttsd2si	%xmm2, %rax
  410055:	48 89 41 38 	movq	%rax, 56(%rcx)
  410059:	0f 57 d2 	xorps	%xmm2, %xmm2
  41005c:	f2 48 0f 2a d0 	cvtsi2sdq	%rax, %xmm2
  410061:	0f 10 e2 	movups	%xmm2, %xmm4
  410064:	f2 0f 5e d1 	divsd	%xmm1, %xmm2
  410068:	f2 0f 5c d3 	subsd	%xmm3, %xmm2
  41006c:	f2 0f 10 1d b4 4a 06 00 	movsd	412340(%rip), %xmm3
  410074:	66 0f 2e da 	ucomisd	%xmm2, %xmm3
  410078:	0f 86 cd 01 00 00 	jbe	461 <runtime.(*gcControllerState).startCycle+0x31b>
  41007e:	66 0f 2e e1 	ucomisd	%xmm1, %xmm4
  410082:	76 07 	jbe	7 <runtime.(*gcControllerState).startCycle+0x15b>
  410084:	48 ff c8 	decq	%rax
  410087:	48 89 41 38 	movq	%rax, 56(%rcx)
  41008b:	48 8b 41 38 	movq	56(%rcx), %rax
  41008f:	0f 57 d2 	xorps	%xmm2, %xmm2
  410092:	f2 48 0f 2a d0 	cvtsi2sdq	%rax, %xmm2
  410097:	f2 0f 5c ca 	subsd	%xmm2, %xmm1
  41009b:	8b 05 3f 38 0b 00 	movl	735295(%rip), %eax
  4100a1:	0f 57 d2 	xorps	%xmm2, %xmm2
  4100a4:	f2 0f 2a d0 	cvtsi2sdl	%eax, %xmm2
  4100a8:	f2 0f 5e ca 	divsd	%xmm2, %xmm1
  4100ac:	f2 0f 11 49 50 	movsd	%xmm1, 80(%rcx)
  4100b1:	48 8b 05 f8 75 09 00 	movq	620024(%rip), %rax
  4100b8:	48 8b 15 f9 75 09 00 	movq	620025(%rip), %rdx
  4100bf:	31 db 	xorl	%ebx, %ebx
  4100c1:	eb 10 	jmp	16 <runtime.(*gcControllerState).startCycle+0x1a3>
  4100c3:	48 8b 34 d8 	movq	(%rax,%rbx,8), %rsi
  4100c7:	84 06 	testb	%al, (%rsi)
  4100c9:	0f 11 86 48 12 00 00 	movups	%xmm0, 4680(%rsi)
  4100d0:	48 ff c3 	incq	%rbx
  4100d3:	48 39 d3 	cmpq	%rdx, %rbx
  4100d6:	7c eb 	jl	-21 <runtime.(*gcControllerState).startCycle+0x193>
  4100d8:	48 89 0c 24 	movq	%rcx, (%rsp)
  4100dc:	e8 df 01 00 00 	callq	479 <runtime.(*gcControllerState).revise>
  4100e1:	8b 05 e9 39 0b 00 	movl	735721(%rip), %eax
  4100e7:	85 c0 	testl	%eax, %eax
  4100e9:	7f 0a 	jg	10 <runtime.(*gcControllerState).startCycle+0x1c5>
  4100eb:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  4100f0:	48 83 c4 48 	addq	$72, %rsp
  4100f4:	c3 	retq
  4100f5:	48 8b 44 24 50 	movq	80(%rsp), %rax
  4100fa:	f2 0f 10 40 40 	movsd	64(%rax), %xmm0
  4100ff:	f2 0f 11 44 24 38 	movsd	%xmm0, 56(%rsp)
  410105:	48 8b 0d 3c 5d 0b 00 	movq	744764(%rip), %rcx
  41010c:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  410111:	48 8b 15 a0 7d 09 00 	movq	621984(%rip), %rdx
  410118:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  41011d:	48 8b 1d 84 46 0b 00 	movq	738948(%rip), %rbx
  410124:	48 89 5c 24 20 	movq	%rbx, 32(%rsp)
  410129:	48 8b 70 38 	movq	56(%rax), %rsi
  41012d:	48 89 74 24 18 	movq	%rsi, 24(%rsp)
  410132:	f2 0f 10 48 50 	movsd	80(%rax), %xmm1
  410137:	f2 0f 11 4c 24 10 	movsd	%xmm1, 16(%rsp)
  41013d:	e8 be 19 01 00 	callq	72126 <runtime.printlock>
  410142:	48 8d 05 38 b0 05 00 	leaq	372792(%rip), %rax
  410149:	48 89 04 24 	movq	%rax, (%rsp)
  41014d:	48 c7 44 24 08 14 00 00 00 	movq	$20, 8(%rsp)
  410156:	e8 e5 22 01 00 	callq	74469 <runtime.printstring>
  41015b:	f2 0f 10 44 24 38 	movsd	56(%rsp), %xmm0
  410161:	f2 0f 11 04 24 	movsd	%xmm0, (%rsp)
  410166:	e8 e5 1c 01 00 	callq	72933 <runtime.printfloat>
  41016b:	48 8d 05 e1 9c 05 00 	leaq	367841(%rip), %rax
  410172:	48 89 04 24 	movq	%rax, (%rsp)
  410176:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  41017f:	e8 bc 22 01 00 	callq	74428 <runtime.printstring>
  410184:	48 8b 44 24 30 	movq	48(%rsp), %rax
  410189:	48 c1 e8 14 	shrq	$20, %rax
  41018d:	48 89 04 24 	movq	%rax, (%rsp)
  410191:	e8 da 1f 01 00 	callq	73690 <runtime.printuint>
  410196:	48 8d 05 c4 9c 05 00 	leaq	367812(%rip), %rax
  41019d:	48 89 04 24 	movq	%rax, (%rsp)
  4101a1:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  4101aa:	e8 91 22 01 00 	callq	74385 <runtime.printstring>
  4101af:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4101b4:	48 c1 e8 14 	shrq	$20, %rax
  4101b8:	48 89 04 24 	movq	%rax, (%rsp)
  4101bc:	e8 af 1f 01 00 	callq	73647 <runtime.printuint>
  4101c1:	48 8d 05 a6 9a 05 00 	leaq	367270(%rip), %rax
  4101c8:	48 89 04 24 	movq	%rax, (%rsp)
  4101cc:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  4101d5:	e8 66 22 01 00 	callq	74342 <runtime.printstring>
  4101da:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4101df:	48 c1 e8 14 	shrq	$20, %rax
  4101e3:	48 89 04 24 	movq	%rax, (%rsp)
  4101e7:	e8 84 1f 01 00 	callq	73604 <runtime.printuint>
  4101ec:	48 8d 05 64 a4 05 00 	leaq	369764(%rip), %rax
  4101f3:	48 89 04 24 	movq	%rax, (%rsp)
  4101f7:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  410200:	e8 3b 22 01 00 	callq	74299 <runtime.printstring>
  410205:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41020a:	48 89 04 24 	movq	%rax, (%rsp)
  41020e:	e8 6d 20 01 00 	callq	73837 <runtime.printint>
  410213:	48 8d 05 39 9a 05 00 	leaq	367161(%rip), %rax
  41021a:	48 89 04 24 	movq	%rax, (%rsp)
  41021e:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  410227:	e8 14 22 01 00 	callq	74260 <runtime.printstring>
  41022c:	f2 0f 10 44 24 10 	movsd	16(%rsp), %xmm0
  410232:	f2 0f 11 04 24 	movsd	%xmm0, (%rsp)
  410237:	e8 14 1c 01 00 	callq	72724 <runtime.printfloat>
  41023c:	e8 4f 1b 01 00 	callq	72527 <runtime.printnl>
  410241:	e8 3a 19 01 00 	callq	71994 <runtime.printunlock>
  410246:	e9 a0 fe ff ff 	jmp	-352 <runtime.(*gcControllerState).startCycle+0x1bb>
  41024b:	f2 0f 10 1d 5d 48 06 00 	movsd	411741(%rip), %xmm3
  410253:	66 0f 2e d3 	ucomisd	%xmm3, %xmm2
  410257:	0f 87 21 fe ff ff 	ja	-479 <runtime.(*gcControllerState).startCycle+0x14e>
  41025d:	0f 57 c9 	xorps	%xmm1, %xmm1
  410260:	f2 0f 11 49 50 	movsd	%xmm1, 80(%rcx)
  410265:	e9 47 fe ff ff 	jmp	-441 <runtime.(*gcControllerState).startCycle+0x181>
  41026a:	f2 0f 5c ca 	subsd	%xmm2, %xmm1
  41026e:	f2 48 0f 2c d1 	cvttsd2si	%xmm1, %rdx
  410273:	48 bb 00 00 00 00 00 00 00 80 	movabsq	$-9223372036854775808, %rbx
  41027d:	48 09 da 	orq	%rbx, %rdx
  410280:	e9 36 fd ff ff 	jmp	-714 <runtime.(*gcControllerState).startCycle+0x8b>
  410285:	48 89 d3 	movq	%rdx, %rbx
  410288:	48 83 e2 01 	andq	$1, %rdx
  41028c:	48 d1 eb 	shrq	%rbx
  41028f:	48 09 da 	orq	%rbx, %rdx
  410292:	0f 57 c9 	xorps	%xmm1, %xmm1
  410295:	f2 48 0f 2a ca 	cvtsi2sdq	%rdx, %xmm1
  41029a:	f2 0f 58 c9 	addsd	%xmm1, %xmm1
  41029e:	e9 e9 fc ff ff 	jmp	-791 <runtime.(*gcControllerState).startCycle+0x5c>
  4102a3:	f2 0f 10 1d 25 48 06 00 	movsd	411685(%rip), %xmm3
  4102ab:	e9 12 fd ff ff 	jmp	-750 <runtime.(*gcControllerState).startCycle+0x92>
  4102b0:	e8 bb 42 03 00 	callq	213691 <runtime.morestack_noctxt>
  4102b5:	e9 76 fc ff ff 	jmp	-906 <runtime.(*gcControllerState).startCycle>
  4102ba:	cc 	int3
  4102bb:	cc 	int3
  4102bc:	cc 	int3
  4102bd:	cc 	int3
  4102be:	cc 	int3
  4102bf:	cc 	int3

runtime.(*gcControllerState).revise:
  4102c0:	8b 05 12 36 0b 00 	movl	734738(%rip), %eax
  4102c6:	85 c0 	testl	%eax, %eax
  4102c8:	7d 05 	jge	5 <runtime.(*gcControllerState).revise+0xf>
  4102ca:	b8 a0 86 01 00 	movl	$100000, %eax
  4102cf:	48 8b 0d 6a 5b 0b 00 	movq	744298(%rip), %rcx
  4102d6:	48 8b 15 cb 44 0b 00 	movq	738507(%rip), %rdx
  4102dd:	48 39 d1 	cmpq	%rdx, %rcx
  4102e0:	0f 87 9e 00 00 00 	ja	158 <runtime.(*gcControllerState).revise+0xc4>
  4102e6:	48 8b 1d 5b 5b 0b 00 	movq	744283(%rip), %rbx
  4102ed:	48 85 db 	testq	%rbx, %rbx
  4102f0:	7c 74 	jl	116 <runtime.(*gcControllerState).revise+0xa6>
  4102f2:	0f 57 c0 	xorps	%xmm0, %xmm0
  4102f5:	f2 48 0f 2a c3 	cvtsi2sdq	%rbx, %xmm0
  4102fa:	f2 0f 10 0d 06 48 06 00 	movsd	411654(%rip), %xmm1
  410302:	f2 0f 59 c8 	mulsd	%xmm0, %xmm1
  410306:	83 c0 64 	addl	$100, %eax
  410309:	0f 57 c0 	xorps	%xmm0, %xmm0
  41030c:	f2 0f 2a c0 	cvtsi2sdl	%eax, %xmm0
  410310:	f2 0f 5e c8 	divsd	%xmm0, %xmm1
  410314:	f2 48 0f 2c c1 	cvttsd2si	%xmm1, %rax
  410319:	48 8b 5c 24 08 	movq	8(%rsp), %rbx
  41031e:	48 2b 03 	subq	(%rbx), %rax
  410321:	48 3d e8 03 00 00 	cmpq	$1000, %rax
  410327:	7d 05 	jge	5 <runtime.(*gcControllerState).revise+0x6e>
  410329:	b8 e8 03 00 00 	movl	$1000, %eax
  41032e:	48 29 ca 	subq	%rcx, %rdx
  410331:	48 85 d2 	testq	%rdx, %rdx
  410334:	7f 2b 	jg	43 <runtime.(*gcControllerState).revise+0xa1>
  410336:	b9 01 00 00 00 	movl	$1, %ecx
  41033b:	0f 57 c0 	xorps	%xmm0, %xmm0
  41033e:	f2 48 0f 2a c1 	cvtsi2sdq	%rcx, %xmm0
  410343:	0f 57 c9 	xorps	%xmm1, %xmm1
  410346:	f2 48 0f 2a c8 	cvtsi2sdq	%rax, %xmm1
  41034b:	0f 10 d1 	movups	%xmm1, %xmm2
  41034e:	f2 0f 5e c8 	divsd	%xmm0, %xmm1
  410352:	f2 0f 11 4b 40 	movsd	%xmm1, 64(%rbx)
  410357:	f2 0f 5e c2 	divsd	%xmm2, %xmm0
  41035b:	f2 0f 11 43 48 	movsd	%xmm0, 72(%rbx)
  410360:	c3 	retq
  410361:	48 89 d1 	movq	%rdx, %rcx
  410364:	eb d5 	jmp	-43 <runtime.(*gcControllerState).revise+0x7b>
  410366:	48 89 de 	movq	%rbx, %rsi
  410369:	48 d1 eb 	shrq	%rbx
  41036c:	48 83 e6 01 	andq	$1, %rsi
  410370:	48 09 de 	orq	%rbx, %rsi
  410373:	0f 57 c0 	xorps	%xmm0, %xmm0
  410376:	f2 48 0f 2a c6 	cvtsi2sdq	%rsi, %xmm0
  41037b:	f2 0f 58 c0 	addsd	%xmm0, %xmm0
  41037f:	e9 76 ff ff ff 	jmp	-138 <runtime.(*gcControllerState).revise+0x3a>
  410384:	48 85 d2 	testq	%rdx, %rdx
  410387:	7c 25 	jl	37 <runtime.(*gcControllerState).revise+0xee>
  410389:	0f 57 c0 	xorps	%xmm0, %xmm0
  41038c:	f2 48 0f 2a c2 	cvtsi2sdq	%rdx, %xmm0
  410391:	f2 0f 10 0d 3f 47 06 00 	movsd	411455(%rip), %xmm1
  410399:	f2 0f 59 c8 	mulsd	%xmm0, %xmm1
  41039d:	f2 48 0f 2c d1 	cvttsd2si	%xmm1, %rdx
  4103a2:	48 8b 05 9f 5a 0b 00 	movq	744095(%rip), %rax
  4103a9:	e9 6b ff ff ff 	jmp	-149 <runtime.(*gcControllerState).revise+0x59>
  4103ae:	48 89 d0 	movq	%rdx, %rax
  4103b1:	48 83 e2 01 	andq	$1, %rdx
  4103b5:	48 d1 e8 	shrq	%rax
  4103b8:	48 09 c2 	orq	%rax, %rdx
  4103bb:	0f 57 c0 	xorps	%xmm0, %xmm0
  4103be:	f2 48 0f 2a c2 	cvtsi2sdq	%rdx, %xmm0
  4103c3:	f2 0f 58 c0 	addsd	%xmm0, %xmm0
  4103c7:	eb c8 	jmp	-56 <runtime.(*gcControllerState).revise+0xd1>
  4103c9:	cc 	int3
  4103ca:	cc 	int3
  4103cb:	cc 	int3
  4103cc:	cc 	int3
  4103cd:	cc 	int3
  4103ce:	cc 	int3
  4103cf:	cc 	int3

runtime.(*gcControllerState).endCycle:
  4103d0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4103d9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4103dd:	0f 86 84 04 00 00 	jbe	1156 <runtime.(*gcControllerState).endCycle+0x497>
  4103e3:	48 81 ec 80 00 00 00 	subq	$128, %rsp
  4103ea:	48 89 6c 24 78 	movq	%rbp, 120(%rsp)
  4103ef:	48 8d 6c 24 78 	leaq	120(%rsp), %rbp
  4103f4:	0f b6 05 ad 7a 09 00 	movzbl	621229(%rip), %eax
  4103fb:	84 c0 	testb	%al, %al
  4103fd:	0f 85 46 04 00 00 	jne	1094 <runtime.(*gcControllerState).endCycle+0x479>
  410403:	8b 05 cf 34 0b 00 	movl	734415(%rip), %eax
  410409:	0f 57 c0 	xorps	%xmm0, %xmm0
  41040c:	f2 0f 2a c0 	cvtsi2sdl	%eax, %xmm0
  410410:	f2 0f 10 0d f0 46 06 00 	movsd	411376(%rip), %xmm1
  410418:	f2 0f 5e c1 	divsd	%xmm1, %xmm0
  41041c:	48 8b 05 1d 5a 0b 00 	movq	743965(%rip), %rax
  410423:	48 85 c0 	testq	%rax, %rax
  410426:	0f 8c ff 03 00 00 	jl	1023 <runtime.(*gcControllerState).endCycle+0x45b>
  41042c:	0f 57 c9 	xorps	%xmm1, %xmm1
  41042f:	f2 48 0f 2a c8 	cvtsi2sdq	%rax, %xmm1
  410434:	f2 0f 11 44 24 18 	movsd	%xmm0, 24(%rsp)
  41043a:	f2 0f 11 4c 24 70 	movsd	%xmm1, 112(%rsp)
  410440:	48 8b 05 09 5a 0b 00 	movq	743945(%rip), %rax
  410447:	48 85 c0 	testq	%rax, %rax
  41044a:	0f 8c bd 03 00 00 	jl	957 <runtime.(*gcControllerState).endCycle+0x43d>
  410450:	0f 57 d2 	xorps	%xmm2, %xmm2
  410453:	f2 48 0f 2a d0 	cvtsi2sdq	%rax, %xmm2
  410458:	f2 0f 11 54 24 68 	movsd	%xmm2, 104(%rsp)
  41045e:	e8 cd 75 03 00 	callq	226765 <runtime.nanotime>
  410463:	f2 0f 10 44 24 70 	movsd	112(%rsp), %xmm0
  410469:	f2 0f 10 4c 24 68 	movsd	104(%rsp), %xmm1
  41046f:	f2 0f 5e c1 	divsd	%xmm1, %xmm0
  410473:	f2 0f 10 0d 55 46 06 00 	movsd	411221(%rip), %xmm1
  41047b:	f2 0f 5c c1 	subsd	%xmm1, %xmm0
  41047f:	48 8b 04 24 	movq	(%rsp), %rax
  410483:	48 8b 8c 24 88 00 00 00 	movq	136(%rsp), %rcx
  41048b:	48 2b 41 30 	subq	48(%rcx), %rax
  41048f:	48 85 c0 	testq	%rax, %rax
  410492:	0f 8e 68 03 00 00 	jle	872 <runtime.(*gcControllerState).endCycle+0x430>
  410498:	48 8b 51 10 	movq	16(%rcx), %rdx
  41049c:	0f 57 d2 	xorps	%xmm2, %xmm2
  41049f:	f2 48 0f 2a d2 	cvtsi2sdq	%rdx, %xmm2
  4104a4:	48 63 15 35 34 0b 00 	movslq	734261(%rip), %rdx
  4104ab:	48 0f af c2 	imulq	%rdx, %rax
  4104af:	0f 57 db 	xorps	%xmm3, %xmm3
  4104b2:	f2 48 0f 2a d8 	cvtsi2sdq	%rax, %xmm3
  4104b7:	f2 0f 5e d3 	divsd	%xmm3, %xmm2
  4104bb:	f2 0f 10 1d e5 45 06 00 	movsd	411109(%rip), %xmm3
  4104c3:	f2 0f 58 da 	addsd	%xmm2, %xmm3
  4104c7:	f2 0f 10 15 61 59 0b 00 	movsd	743777(%rip), %xmm2
  4104cf:	f2 0f 10 64 24 18 	movsd	24(%rsp), %xmm4
  4104d5:	f2 0f 5c e2 	subsd	%xmm2, %xmm4
  4104d9:	f2 0f 10 35 cf 45 06 00 	movsd	411087(%rip), %xmm6
  4104e1:	0f 10 fb 	movups	%xmm3, %xmm7
  4104e4:	f2 0f 5e de 	divsd	%xmm6, %xmm3
  4104e8:	44 0f 10 c0 	movups	%xmm0, %xmm8
  4104ec:	f2 0f 5c c2 	subsd	%xmm2, %xmm0
  4104f0:	44 0f 10 c8 	movups	%xmm0, %xmm9
  4104f4:	f2 0f 59 c3 	mulsd	%xmm3, %xmm0
  4104f8:	44 0f 10 d4 	movups	%xmm4, %xmm10
  4104fc:	f2 0f 5c e0 	subsd	%xmm0, %xmm4
  410500:	f2 0f 10 05 b0 45 06 00 	movsd	411056(%rip), %xmm0
  410508:	f2 0f 59 c4 	mulsd	%xmm4, %xmm0
  41050c:	f2 0f 58 c2 	addsd	%xmm2, %xmm0
  410510:	f2 0f 11 44 24 10 	movsd	%xmm0, 16(%rsp)
  410516:	8b 05 b4 35 0b 00 	movl	734644(%rip), %eax
  41051c:	85 c0 	testl	%eax, %eax
  41051e:	0f 8e a2 02 00 00 	jle	674 <runtime.(*gcControllerState).endCycle+0x3f6>
  410524:	f2 44 0f 11 44 24 70 	movsd	%xmm8, 112(%rsp)
  41052b:	f2 0f 11 54 24 68 	movsd	%xmm2, 104(%rsp)
  410531:	f2 44 0f 11 54 24 60 	movsd	%xmm10, 96(%rsp)
  410538:	f2 0f 11 7c 24 58 	movsd	%xmm7, 88(%rsp)
  41053e:	f2 0f 11 5c 24 50 	movsd	%xmm3, 80(%rsp)
  410544:	f2 44 0f 11 4c 24 48 	movsd	%xmm9, 72(%rsp)
  41054b:	48 8b 05 fe 58 0b 00 	movq	743678(%rip), %rax
  410552:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  410557:	48 8b 15 da 58 0b 00 	movq	743642(%rip), %rdx
  41055e:	48 89 54 24 38 	movq	%rdx, 56(%rsp)
  410563:	48 8b 1d d6 58 0b 00 	movq	743638(%rip), %rbx
  41056a:	48 89 5c 24 30 	movq	%rbx, 48(%rsp)
  41056f:	48 85 c0 	testq	%rax, %rax
  410572:	0f 8c 6a 02 00 00 	jl	618 <runtime.(*gcControllerState).endCycle+0x412>
  410578:	0f 57 e4 	xorps	%xmm4, %xmm4
  41057b:	f2 48 0f 2a e0 	cvtsi2sdq	%rax, %xmm4
  410580:	f2 0f 11 64 24 40 	movsd	%xmm4, 64(%rsp)
  410586:	48 8b 01 	movq	(%rcx), %rax
  410589:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  41058e:	e8 6d 15 01 00 	callq	71021 <runtime.printlock>
  410593:	48 8d 05 98 a5 05 00 	leaq	370072(%rip), %rax
  41059a:	48 89 04 24 	movq	%rax, (%rsp)
  41059e:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  4105a7:	e8 94 1e 01 00 	callq	73364 <runtime.printstring>
  4105ac:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4105b1:	48 89 04 24 	movq	%rax, (%rsp)
  4105b5:	e8 b6 1b 01 00 	callq	72630 <runtime.printuint>
  4105ba:	48 8d 05 a7 97 05 00 	leaq	366503(%rip), %rax
  4105c1:	48 89 04 24 	movq	%rax, (%rsp)
  4105c5:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  4105ce:	e8 6d 1e 01 00 	callq	73325 <runtime.printstring>
  4105d3:	f2 0f 10 44 24 68 	movsd	104(%rsp), %xmm0
  4105d9:	f2 0f 11 04 24 	movsd	%xmm0, (%rsp)
  4105de:	e8 6d 18 01 00 	callq	71789 <runtime.printfloat>
  4105e3:	48 8d 05 51 97 05 00 	leaq	366417(%rip), %rax
  4105ea:	48 89 04 24 	movq	%rax, (%rsp)
  4105ee:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  4105f7:	e8 44 1e 01 00 	callq	73284 <runtime.printstring>
  4105fc:	48 8b 44 24 38 	movq	56(%rsp), %rax
  410601:	48 89 04 24 	movq	%rax, (%rsp)
  410605:	e8 66 1b 01 00 	callq	72550 <runtime.printuint>
  41060a:	48 8d 05 4d 97 05 00 	leaq	366413(%rip), %rax
  410611:	48 89 04 24 	movq	%rax, (%rsp)
  410615:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  41061e:	e8 1d 1e 01 00 	callq	73245 <runtime.printstring>
  410623:	f2 0f 10 44 24 70 	movsd	112(%rsp), %xmm0
  410629:	f2 0f 11 04 24 	movsd	%xmm0, (%rsp)
  41062e:	e8 1d 18 01 00 	callq	71709 <runtime.printfloat>
  410633:	48 8d 05 06 97 05 00 	leaq	366342(%rip), %rax
  41063a:	48 89 04 24 	movq	%rax, (%rsp)
  41063e:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  410647:	e8 f4 1d 01 00 	callq	73204 <runtime.printstring>
  41064c:	48 8b 44 24 30 	movq	48(%rsp), %rax
  410651:	48 89 04 24 	movq	%rax, (%rsp)
  410655:	e8 16 1b 01 00 	callq	72470 <runtime.printuint>
  41065a:	48 8d 05 02 97 05 00 	leaq	366338(%rip), %rax
  410661:	48 89 04 24 	movq	%rax, (%rsp)
  410665:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  41066e:	e8 cd 1d 01 00 	callq	73165 <runtime.printstring>
  410673:	f2 0f 10 44 24 18 	movsd	24(%rsp), %xmm0
  410679:	f2 0f 11 04 24 	movsd	%xmm0, (%rsp)
  41067e:	e8 cd 17 01 00 	callq	71629 <runtime.printfloat>
  410683:	48 8d 05 bb 96 05 00 	leaq	366267(%rip), %rax
  41068a:	48 89 04 24 	movq	%rax, (%rsp)
  41068e:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  410697:	e8 a4 1d 01 00 	callq	73124 <runtime.printstring>
  41069c:	f2 0f 10 05 2c 44 06 00 	movsd	410668(%rip), %xmm0
  4106a4:	f2 0f 10 4c 24 18 	movsd	24(%rsp), %xmm1
  4106aa:	f2 0f 58 c1 	addsd	%xmm1, %xmm0
  4106ae:	f2 0f 10 4c 24 40 	movsd	64(%rsp), %xmm1
  4106b4:	f2 0f 59 c1 	mulsd	%xmm1, %xmm0
  4106b8:	f2 48 0f 2c c0 	cvttsd2si	%xmm0, %rax
  4106bd:	48 89 04 24 	movq	%rax, (%rsp)
  4106c1:	e8 ba 1b 01 00 	callq	72634 <runtime.printint>
  4106c6:	48 8d 05 be 96 05 00 	leaq	366270(%rip), %rax
  4106cd:	48 89 04 24 	movq	%rax, (%rsp)
  4106d1:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  4106da:	e8 61 1d 01 00 	callq	73057 <runtime.printstring>
  4106df:	f2 0f 10 44 24 58 	movsd	88(%rsp), %xmm0
  4106e5:	f2 0f 11 04 24 	movsd	%xmm0, (%rsp)
  4106ea:	e8 61 17 01 00 	callq	71521 <runtime.printfloat>
  4106ef:	48 8d 05 9a 96 05 00 	leaq	366234(%rip), %rax
  4106f6:	48 89 04 24 	movq	%rax, (%rsp)
  4106fa:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  410703:	e8 38 1d 01 00 	callq	73016 <runtime.printstring>
  410708:	f2 0f 10 05 a0 43 06 00 	movsd	410528(%rip), %xmm0
  410710:	f2 0f 11 04 24 	movsd	%xmm0, (%rsp)
  410715:	e8 36 17 01 00 	callq	71478 <runtime.printfloat>
  41071a:	48 8d 05 2e 96 05 00 	leaq	366126(%rip), %rax
  410721:	48 89 04 24 	movq	%rax, (%rsp)
  410725:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  41072e:	e8 0d 1d 01 00 	callq	72973 <runtime.printstring>
  410733:	48 8b 44 24 20 	movq	32(%rsp), %rax
  410738:	48 89 04 24 	movq	%rax, (%rsp)
  41073c:	e8 3f 1b 01 00 	callq	72511 <runtime.printint>
  410741:	48 8d 05 47 98 05 00 	leaq	366663(%rip), %rax
  410748:	48 89 04 24 	movq	%rax, (%rsp)
  41074c:	48 c7 44 24 08 08 00 00 00 	movq	$8, 8(%rsp)
  410755:	e8 e6 1c 01 00 	callq	72934 <runtime.printstring>
  41075a:	f2 0f 10 44 24 60 	movsd	96(%rsp), %xmm0
  410760:	f2 0f 11 04 24 	movsd	%xmm0, (%rsp)
  410765:	e8 e6 16 01 00 	callq	71398 <runtime.printfloat>
  41076a:	48 8d 05 0f 9b 05 00 	leaq	367375(%rip), %rax
  410771:	48 89 04 24 	movq	%rax, (%rsp)
  410775:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  41077e:	e8 bd 1c 01 00 	callq	72893 <runtime.printstring>
  410783:	f2 0f 10 44 24 48 	movsd	72(%rsp), %xmm0
  410789:	f2 0f 11 04 24 	movsd	%xmm0, (%rsp)
  41078e:	e8 bd 16 01 00 	callq	71357 <runtime.printfloat>
  410793:	48 8d 05 23 99 05 00 	leaq	366883(%rip), %rax
  41079a:	48 89 04 24 	movq	%rax, (%rsp)
  41079e:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  4107a7:	e8 94 1c 01 00 	callq	72852 <runtime.printstring>
  4107ac:	f2 0f 10 44 24 50 	movsd	80(%rsp), %xmm0
  4107b2:	f2 0f 11 04 24 	movsd	%xmm0, (%rsp)
  4107b7:	e8 94 16 01 00 	callq	71316 <runtime.printfloat>
  4107bc:	e8 cf 15 01 00 	callq	71119 <runtime.printnl>
  4107c1:	e8 ba 13 01 00 	callq	70586 <runtime.printunlock>
  4107c6:	f2 0f 10 44 24 10 	movsd	16(%rsp), %xmm0
  4107cc:	f2 0f 11 84 24 90 00 00 00 	movsd	%xmm0, 144(%rsp)
  4107d5:	48 8b 6c 24 78 	movq	120(%rsp), %rbp
  4107da:	48 81 c4 80 00 00 00 	addq	$128, %rsp
  4107e1:	c3 	retq
  4107e2:	48 89 c6 	movq	%rax, %rsi
  4107e5:	48 83 e0 01 	andq	$1, %rax
  4107e9:	48 d1 ee 	shrq	%rsi
  4107ec:	48 09 f0 	orq	%rsi, %rax
  4107ef:	0f 57 e4 	xorps	%xmm4, %xmm4
  4107f2:	f2 48 0f 2a e0 	cvtsi2sdq	%rax, %xmm4
  4107f7:	f2 0f 58 e4 	addsd	%xmm4, %xmm4
  4107fb:	e9 80 fd ff ff 	jmp	-640 <runtime.(*gcControllerState).endCycle+0x1b0>
  410800:	f2 0f 10 1d a0 42 06 00 	movsd	410272(%rip), %xmm3
  410808:	e9 ba fc ff ff 	jmp	-838 <runtime.(*gcControllerState).endCycle+0xf7>
  41080d:	48 89 c1 	movq	%rax, %rcx
  410810:	48 83 e0 01 	andq	$1, %rax
  410814:	48 d1 e9 	shrq	%rcx
  410817:	48 09 c8 	orq	%rcx, %rax
  41081a:	0f 57 d2 	xorps	%xmm2, %xmm2
  41081d:	f2 48 0f 2a d0 	cvtsi2sdq	%rax, %xmm2
  410822:	f2 0f 58 d2 	addsd	%xmm2, %xmm2
  410826:	e9 2d fc ff ff 	jmp	-979 <runtime.(*gcControllerState).endCycle+0x88>
  41082b:	48 89 c1 	movq	%rax, %rcx
  41082e:	48 83 e0 01 	andq	$1, %rax
  410832:	48 d1 e9 	shrq	%rcx
  410835:	48 09 c8 	orq	%rcx, %rax
  410838:	0f 57 c9 	xorps	%xmm1, %xmm1
  41083b:	f2 48 0f 2a c8 	cvtsi2sdq	%rax, %xmm1
  410840:	f2 0f 58 c9 	addsd	%xmm1, %xmm1
  410844:	e9 eb fb ff ff 	jmp	-1045 <runtime.(*gcControllerState).endCycle+0x64>
  410849:	f2 0f 10 05 df 55 0b 00 	movsd	742879(%rip), %xmm0
  410851:	f2 0f 11 84 24 90 00 00 00 	movsd	%xmm0, 144(%rsp)
  41085a:	48 8b 6c 24 78 	movq	120(%rsp), %rbp
  41085f:	48 81 c4 80 00 00 00 	addq	$128, %rsp
  410866:	c3 	retq
  410867:	e8 04 3d 03 00 	callq	212228 <runtime.morestack_noctxt>
  41086c:	e9 5f fb ff ff 	jmp	-1185 <runtime.(*gcControllerState).endCycle>
  410871:	cc 	int3
  410872:	cc 	int3
  410873:	cc 	int3
  410874:	cc 	int3
  410875:	cc 	int3
  410876:	cc 	int3
  410877:	cc 	int3
  410878:	cc 	int3
  410879:	cc 	int3
  41087a:	cc 	int3
  41087b:	cc 	int3
  41087c:	cc 	int3
  41087d:	cc 	int3
  41087e:	cc 	int3
  41087f:	cc 	int3

runtime.(*gcControllerState).enlistWorker:
  410880:	48 83 ec 08 	subq	$8, %rsp
  410884:	48 89 2c 24 	movq	%rbp, (%rsp)
  410888:	48 8d 2c 24 	leaq	(%rsp), %rbp
  41088c:	48 8b 44 24 10 	movq	16(%rsp), %rax
  410891:	48 8b 40 38 	movq	56(%rax), %rax
  410895:	48 85 c0 	testq	%rax, %rax
  410898:	0f 8e 5e 01 00 00 	jle	350 <runtime.(*gcControllerState).enlistWorker+0x17c>
  41089e:	8b 05 3c 30 0b 00 	movl	733244(%rip), %eax
  4108a4:	83 f8 01 	cmpl	$1, %eax
  4108a7:	0f 8e 46 01 00 00 	jle	326 <runtime.(*gcControllerState).enlistWorker+0x173>
  4108ad:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4108b6:	48 85 c0 	testq	%rax, %rax
  4108b9:	0f 84 2b 01 00 00 	je	299 <runtime.(*gcControllerState).enlistWorker+0x16a>
  4108bf:	48 8b 40 30 	movq	48(%rax), %rax
  4108c3:	48 85 c0 	testq	%rax, %rax
  4108c6:	0f 84 1e 01 00 00 	je	286 <runtime.(*gcControllerState).enlistWorker+0x16a>
  4108cc:	48 8b 80 d0 00 00 00 	movq	208(%rax), %rax
  4108d3:	48 85 c0 	testq	%rax, %rax
  4108d6:	0f 84 0e 01 00 00 	je	270 <runtime.(*gcControllerState).enlistWorker+0x16a>
  4108dc:	8b 40 08 	movl	8(%rax), %eax
  4108df:	31 c9 	xorl	%ecx, %ecx
  4108e1:	eb 03 	jmp	3 <runtime.(*gcControllerState).enlistWorker+0x66>
  4108e3:	48 ff c1 	incq	%rcx
  4108e6:	48 83 f9 05 	cmpq	$5, %rcx
  4108ea:	0f 8d f1 00 00 00 	jge	241 <runtime.(*gcControllerState).enlistWorker+0x161>
  4108f0:	64 48 8b 14 25 f8 ff ff ff 	movq	%fs:-8, %rdx
  4108f9:	48 8b 52 30 	movq	48(%rdx), %rdx
  4108fd:	8b 1d dd 2f 0b 00 	movl	733149(%rip), %ebx
  410903:	8b b2 20 01 00 00 	movl	288(%rdx), %esi
  410909:	8b ba 24 01 00 00 	movl	292(%rdx), %edi
  41090f:	89 ba 20 01 00 00 	movl	%edi, 288(%rdx)
  410915:	41 89 f0 	movl	%esi, %r8d
  410918:	c1 e6 11 	shll	$17, %esi
  41091b:	44 31 c6 	xorl	%r8d, %esi
  41091e:	41 89 f8 	movl	%edi, %r8d
  410921:	31 f7 	xorl	%esi, %edi
  410923:	c1 ee 07 	shrl	$7, %esi
  410926:	31 fe 	xorl	%edi, %esi
  410928:	44 89 c7 	movl	%r8d, %edi
  41092b:	41 c1 e8 10 	shrl	$16, %r8d
  41092f:	41 31 f0 	xorl	%esi, %r8d
  410932:	44 89 82 24 01 00 00 	movl	%r8d, 292(%rdx)
  410939:	8d 53 ff 	leal	-1(%rbx), %edx
  41093c:	42 8d 1c 07 	leal	(%rdi,%r8), %ebx
  410940:	48 0f af da 	imulq	%rdx, %rbx
  410944:	48 c1 eb 20 	shrq	$32, %rbx
  410948:	39 c3 	cmpl	%eax, %ebx
  41094a:	0f 8c 89 00 00 00 	jl	137 <runtime.(*gcControllerState).enlistWorker+0x159>
  410950:	8d 53 01 	leal	1(%rbx), %edx
  410953:	48 8b 1d 5e 6d 09 00 	movq	617822(%rip), %rbx
  41095a:	48 8b 35 4f 6d 09 00 	movq	617807(%rip), %rsi
  410961:	48 63 d2 	movslq	%edx, %rdx
  410964:	48 39 da 	cmpq	%rbx, %rdx
  410967:	0f 83 98 00 00 00 	jae	152 <runtime.(*gcControllerState).enlistWorker+0x185>
  41096d:	48 8b 14 d6 	movq	(%rsi,%rdx,8), %rdx
  410971:	8b 5a 0c 	movl	12(%rdx), %ebx
  410974:	83 fb 01 	cmpl	$1, %ebx
  410977:	0f 85 66 ff ff ff 	jne	-154 <runtime.(*gcControllerState).enlistWorker+0x63>
  41097d:	48 8b 52 40 	movq	64(%rdx), %rdx
  410981:	48 85 d2 	testq	%rdx, %rdx
  410984:	74 12 	je	18 <runtime.(*gcControllerState).enlistWorker+0x118>
  410986:	64 48 8b 1c 25 f8 ff ff ff 	movq	%fs:-8, %rbx
  41098f:	48 8b 5b 30 	movq	48(%rbx), %rbx
  410993:	48 39 da 	cmpq	%rbx, %rdx
  410996:	75 13 	jne	19 <runtime.(*gcControllerState).enlistWorker+0x12b>
  410998:	31 d2 	xorl	%edx, %edx
  41099a:	84 d2 	testb	%dl, %dl
  41099c:	0f 84 41 ff ff ff 	je	-191 <runtime.(*gcControllerState).enlistWorker+0x63>
  4109a2:	48 8b 2c 24 	movq	(%rsp), %rbp
  4109a6:	48 83 c4 08 	addq	$8, %rsp
  4109aa:	c3 	retq
  4109ab:	48 8b 9a c0 00 00 00 	movq	192(%rdx), %rbx
  4109b2:	48 85 db 	testq	%rbx, %rbx
  4109b5:	74 08 	je	8 <runtime.(*gcControllerState).enlistWorker+0x13f>
  4109b7:	48 8b 12 	movq	(%rdx), %rdx
  4109ba:	48 39 d3 	cmpq	%rdx, %rbx
  4109bd:	75 04 	jne	4 <runtime.(*gcControllerState).enlistWorker+0x143>
  4109bf:	31 d2 	xorl	%edx, %edx
  4109c1:	eb d7 	jmp	-41 <runtime.(*gcControllerState).enlistWorker+0x11a>
  4109c3:	c6 83 c0 00 00 00 01 	movb	$1, 192(%rbx)
  4109ca:	48 c7 43 10 de fa ff ff 	movq	$-1314, 16(%rbx)
  4109d2:	ba 01 00 00 00 	movl	$1, %edx
  4109d7:	eb c1 	jmp	-63 <runtime.(*gcControllerState).enlistWorker+0x11a>
  4109d9:	48 89 da 	movq	%rbx, %rdx
  4109dc:	e9 72 ff ff ff 	jmp	-142 <runtime.(*gcControllerState).enlistWorker+0xd3>
  4109e1:	48 8b 2c 24 	movq	(%rsp), %rbp
  4109e5:	48 83 c4 08 	addq	$8, %rsp
  4109e9:	c3 	retq
  4109ea:	48 8b 2c 24 	movq	(%rsp), %rbp
  4109ee:	48 83 c4 08 	addq	$8, %rsp
  4109f2:	c3 	retq
  4109f3:	48 8b 2c 24 	movq	(%rsp), %rbp
  4109f7:	48 83 c4 08 	addq	$8, %rsp
  4109fb:	c3 	retq
  4109fc:	48 8b 2c 24 	movq	(%rsp), %rbp
  410a00:	48 83 c4 08 	addq	$8, %rsp
  410a04:	c3 	retq
  410a05:	e8 36 f0 00 00 	callq	61494 <runtime.panicindex>
  410a0a:	0f 0b 	ud2
  410a0c:	cc 	int3
  410a0d:	cc 	int3
  410a0e:	cc 	int3
  410a0f:	cc 	int3

runtime.(*gcControllerState).findRunnableGCWorker:
  410a10:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  410a19:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  410a1d:	0f 86 58 02 00 00 	jbe	600 <runtime.(*gcControllerState).findRunnableGCWorker+0x26b>
  410a23:	48 83 ec 20 	subq	$32, %rsp
  410a27:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  410a2c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  410a31:	8b 05 9d 2e 0b 00 	movl	732829(%rip), %eax
  410a37:	85 c0 	testl	%eax, %eax
  410a39:	0f 84 21 02 00 00 	je	545 <runtime.(*gcControllerState).findRunnableGCWorker+0x250>
  410a3f:	48 8b 44 24 30 	movq	48(%rsp), %rax
  410a44:	84 00 	testb	%al, (%rax)
  410a46:	48 8b 88 58 12 00 00 	movq	4696(%rax), %rcx
  410a4d:	48 85 c9 	testq	%rcx, %rcx
  410a50:	0f 84 f7 01 00 00 	je	503 <runtime.(*gcControllerState).findRunnableGCWorker+0x23d>
  410a56:	48 8d 88 70 12 00 00 	leaq	4720(%rax), %rcx
  410a5d:	84 01 	testb	%al, (%rcx)
  410a5f:	48 8b 88 70 12 00 00 	movq	4720(%rax), %rcx
  410a66:	48 85 c9 	testq	%rcx, %rcx
  410a69:	0f 84 d4 01 00 00 	je	468 <runtime.(*gcControllerState).findRunnableGCWorker+0x233>
  410a6f:	48 8b 49 10 	movq	16(%rcx), %rcx
  410a73:	48 85 c9 	testq	%rcx, %rcx
  410a76:	0f 85 c0 01 00 00 	jne	448 <runtime.(*gcControllerState).findRunnableGCWorker+0x22c>
  410a7c:	48 8b 88 78 12 00 00 	movq	4728(%rax), %rcx
  410a83:	48 8b 49 10 	movq	16(%rcx), %rcx
  410a87:	48 85 c9 	testq	%rcx, %rcx
  410a8a:	0f 94 c1 	sete	%cl
  410a8d:	84 c9 	testb	%cl, %cl
  410a8f:	0f 84 9d 01 00 00 	je	413 <runtime.(*gcControllerState).findRunnableGCWorker+0x222>
  410a95:	48 8b 0d 04 73 09 00 	movq	619268(%rip), %rcx
  410a9c:	48 85 c9 	testq	%rcx, %rcx
  410a9f:	0f 85 83 01 00 00 	jne	387 <runtime.(*gcControllerState).findRunnableGCWorker+0x218>
  410aa5:	8b 0d 7d 73 09 00 	movl	619389(%rip), %ecx
  410aab:	8b 15 7b 73 09 00 	movl	619387(%rip), %edx
  410ab1:	39 d1 	cmpl	%edx, %ecx
  410ab3:	0f 83 68 01 00 00 	jae	360 <runtime.(*gcControllerState).findRunnableGCWorker+0x211>
  410ab9:	b9 01 00 00 00 	movl	$1, %ecx
  410abe:	84 c9 	testb	%cl, %cl
  410ac0:	0f 84 48 01 00 00 	je	328 <runtime.(*gcControllerState).findRunnableGCWorker+0x1fe>
  410ac6:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  410acb:	48 8d 51 38 	leaq	56(%rcx), %rdx
  410acf:	84 02 	testb	%al, (%rdx)
  410ad1:	48 8b 51 38 	movq	56(%rcx), %rdx
  410ad5:	48 85 d2 	testq	%rdx, %rdx
  410ad8:	0f 8e 29 01 00 00 	jle	297 <runtime.(*gcControllerState).findRunnableGCWorker+0x1f7>
  410ade:	48 c7 c2 ff ff ff ff 	movq	$-1, %rdx
  410ae5:	f0 	lock
  410ae6:	48 0f c1 51 38 	xaddq	%rdx, 56(%rcx)
  410aeb:	48 ff ca 	decq	%rdx
  410aee:	48 85 d2 	testq	%rdx, %rdx
  410af1:	0f 8c 05 01 00 00 	jl	261 <runtime.(*gcControllerState).findRunnableGCWorker+0x1ec>
  410af7:	ba 01 00 00 00 	movl	$1, %edx
  410afc:	84 d2 	testb	%dl, %dl
  410afe:	74 67 	je	103 <runtime.(*gcControllerState).findRunnableGCWorker+0x157>
  410b00:	48 c7 80 60 12 00 00 00 00 00 00 	movq	$0, 4704(%rax)
  410b0b:	48 8b 80 58 12 00 00 	movq	4696(%rax), %rax
  410b12:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  410b17:	48 89 04 24 	movq	%rax, (%rsp)
  410b1b:	48 b9 04 00 00 00 01 00 00 00 	movabsq	$4294967300, %rcx
  410b25:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  410b2a:	e8 51 3f 01 00 	callq	81745 <runtime.casgstatus>
  410b2f:	0f b6 05 9a 2c 0a 00 	movzbl	666778(%rip), %eax
  410b36:	84 c0 	testb	%al, %al
  410b38:	75 14 	jne	20 <runtime.(*gcControllerState).findRunnableGCWorker+0x13e>
  410b3a:	48 8b 44 24 10 	movq	16(%rsp), %rax
  410b3f:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  410b44:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  410b49:	48 83 c4 20 	addq	$32, %rsp
  410b4d:	c3 	retq
  410b4e:	48 8b 44 24 10 	movq	16(%rsp), %rax
  410b53:	48 89 04 24 	movq	%rax, (%rsp)
  410b57:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  410b60:	e8 5b a1 02 00 	callq	172379 <runtime.traceGoUnpark>
  410b65:	eb d3 	jmp	-45 <runtime.(*gcControllerState).findRunnableGCWorker+0x12a>
  410b67:	f2 0f 10 41 50 	movsd	80(%rcx), %xmm0
  410b6c:	0f 57 c9 	xorps	%xmm1, %xmm1
  410b6f:	66 0f 2e c1 	ucomisd	%xmm1, %xmm0
  410b73:	75 02 	jne	2 <runtime.(*gcControllerState).findRunnableGCWorker+0x167>
  410b75:	7b 72 	jnp	114 <runtime.(*gcControllerState).findRunnableGCWorker+0x1d9>
  410b77:	e8 b4 6e 03 00 	callq	224948 <runtime.nanotime>
  410b7c:	48 8b 04 24 	movq	(%rsp), %rax
  410b80:	48 2b 05 c9 30 0b 00 	subq	733385(%rip), %rax
  410b87:	48 85 c0 	testq	%rax, %rax
  410b8a:	7e 56 	jle	86 <runtime.(*gcControllerState).findRunnableGCWorker+0x1d2>
  410b8c:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  410b91:	48 8b 91 50 12 00 00 	movq	4688(%rcx), %rdx
  410b98:	0f 57 c0 	xorps	%xmm0, %xmm0
  410b9b:	f2 48 0f 2a c2 	cvtsi2sdq	%rdx, %xmm0
  410ba0:	0f 57 c9 	xorps	%xmm1, %xmm1
  410ba3:	f2 48 0f 2a c8 	cvtsi2sdq	%rax, %xmm1
  410ba8:	f2 0f 5e c1 	divsd	%xmm1, %xmm0
  410bac:	48 8b 44 24 28 	movq	40(%rsp), %rax
  410bb1:	f2 0f 10 48 50 	movsd	80(%rax), %xmm1
  410bb6:	66 0f 2e c1 	ucomisd	%xmm1, %xmm0
  410bba:	77 13 	ja	19 <runtime.(*gcControllerState).findRunnableGCWorker+0x1bf>
  410bbc:	48 c7 81 60 12 00 00 01 00 00 00 	movq	$1, 4704(%rcx)
  410bc7:	48 89 c8 	movq	%rcx, %rax
  410bca:	e9 3c ff ff ff 	jmp	-196 <runtime.(*gcControllerState).findRunnableGCWorker+0xfb>
  410bcf:	48 c7 44 24 38 00 00 00 00 	movq	$0, 56(%rsp)
  410bd8:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  410bdd:	48 83 c4 20 	addq	$32, %rsp
  410be1:	c3 	retq
  410be2:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  410be7:	eb d3 	jmp	-45 <runtime.(*gcControllerState).findRunnableGCWorker+0x1ac>
  410be9:	48 c7 44 24 38 00 00 00 00 	movq	$0, 56(%rsp)
  410bf2:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  410bf7:	48 83 c4 20 	addq	$32, %rsp
  410bfb:	c3 	retq
  410bfc:	ba 01 00 00 00 	movl	$1, %edx
  410c01:	f0 	lock
  410c02:	48 0f c1 51 38 	xaddq	%rdx, 56(%rcx)
  410c07:	31 d2 	xorl	%edx, %edx
  410c09:	e9 ee fe ff ff 	jmp	-274 <runtime.(*gcControllerState).findRunnableGCWorker+0xec>
  410c0e:	48 c7 44 24 38 00 00 00 00 	movq	$0, 56(%rsp)
  410c17:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  410c1c:	48 83 c4 20 	addq	$32, %rsp
  410c20:	c3 	retq
  410c21:	31 c9 	xorl	%ecx, %ecx
  410c23:	e9 96 fe ff ff 	jmp	-362 <runtime.(*gcControllerState).findRunnableGCWorker+0xae>
  410c28:	b9 01 00 00 00 	movl	$1, %ecx
  410c2d:	e9 8c fe ff ff 	jmp	-372 <runtime.(*gcControllerState).findRunnableGCWorker+0xae>
  410c32:	b9 01 00 00 00 	movl	$1, %ecx
  410c37:	e9 82 fe ff ff 	jmp	-382 <runtime.(*gcControllerState).findRunnableGCWorker+0xae>
  410c3c:	31 c9 	xorl	%ecx, %ecx
  410c3e:	e9 4a fe ff ff 	jmp	-438 <runtime.(*gcControllerState).findRunnableGCWorker+0x7d>
  410c43:	b9 01 00 00 00 	movl	$1, %ecx
  410c48:	e9 40 fe ff ff 	jmp	-448 <runtime.(*gcControllerState).findRunnableGCWorker+0x7d>
  410c4d:	48 c7 44 24 38 00 00 00 00 	movq	$0, 56(%rsp)
  410c56:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  410c5b:	48 83 c4 20 	addq	$32, %rsp
  410c5f:	c3 	retq
  410c60:	48 8d 05 27 cf 05 00 	leaq	380711(%rip), %rax
  410c67:	48 89 04 24 	movq	%rax, (%rsp)
  410c6b:	48 c7 44 24 08 36 00 00 00 	movq	$54, 8(%rsp)
  410c74:	e8 57 05 01 00 	callq	66903 <runtime.throw>
  410c79:	0f 0b 	ud2
  410c7b:	e8 f0 38 03 00 	callq	211184 <runtime.morestack_noctxt>
  410c80:	e9 8b fd ff ff 	jmp	-629 <runtime.(*gcControllerState).findRunnableGCWorker>
  410c85:	cc 	int3
  410c86:	cc 	int3
  410c87:	cc 	int3
  410c88:	cc 	int3
  410c89:	cc 	int3
  410c8a:	cc 	int3
  410c8b:	cc 	int3
  410c8c:	cc 	int3
  410c8d:	cc 	int3
  410c8e:	cc 	int3
  410c8f:	cc 	int3

runtime.pollFractionalWorkerExit:
  410c90:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  410c99:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  410c9d:	0f 86 98 00 00 00 	jbe	152 <runtime.pollFractionalWorkerExit+0xab>
  410ca3:	48 83 ec 10 	subq	$16, %rsp
  410ca7:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  410cac:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  410cb1:	e8 7a 6d 03 00 	callq	224634 <runtime.nanotime>
  410cb6:	48 8b 04 24 	movq	(%rsp), %rax
  410cba:	48 8b 0d 8f 2f 0b 00 	movq	733071(%rip), %rcx
  410cc1:	48 89 c2 	movq	%rax, %rdx
  410cc4:	48 29 c8 	subq	%rcx, %rax
  410cc7:	48 85 c0 	testq	%rax, %rax
  410cca:	7f 0f 	jg	15 <runtime.pollFractionalWorkerExit+0x4b>
  410ccc:	c6 44 24 18 01 	movb	$1, 24(%rsp)
  410cd1:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  410cd6:	48 83 c4 10 	addq	$16, %rsp
  410cda:	c3 	retq
  410cdb:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  410ce4:	48 8b 49 30 	movq	48(%rcx), %rcx
  410ce8:	48 8b 89 d0 00 00 00 	movq	208(%rcx), %rcx
  410cef:	84 01 	testb	%al, (%rcx)
  410cf1:	48 8b 99 68 12 00 00 	movq	4712(%rcx), %rbx
  410cf8:	48 29 da 	subq	%rbx, %rdx
  410cfb:	48 03 91 50 12 00 00 	addq	4688(%rcx), %rdx
  410d02:	f2 0f 10 05 d6 3d 06 00 	movsd	409046(%rip), %xmm0
  410d0a:	f2 0f 59 05 5e 2f 0b 00 	mulsd	733022(%rip), %xmm0
  410d12:	0f 57 c9 	xorps	%xmm1, %xmm1
  410d15:	f2 48 0f 2a ca 	cvtsi2sdq	%rdx, %xmm1
  410d1a:	0f 57 d2 	xorps	%xmm2, %xmm2
  410d1d:	f2 48 0f 2a d0 	cvtsi2sdq	%rax, %xmm2
  410d22:	f2 0f 5e ca 	divsd	%xmm2, %xmm1
  410d26:	66 0f 2e c8 	ucomisd	%xmm0, %xmm1
  410d2a:	0f 97 c0 	seta	%al
  410d2d:	88 44 24 18 	movb	%al, 24(%rsp)
  410d31:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  410d36:	48 83 c4 10 	addq	$16, %rsp
  410d3a:	c3 	retq
  410d3b:	e8 30 38 03 00 	callq	210992 <runtime.morestack_noctxt>
  410d40:	e9 4b ff ff ff 	jmp	-181 <runtime.pollFractionalWorkerExit>
  410d45:	cc 	int3
  410d46:	cc 	int3
  410d47:	cc 	int3
  410d48:	cc 	int3
  410d49:	cc 	int3
  410d4a:	cc 	int3
  410d4b:	cc 	int3
  410d4c:	cc 	int3
  410d4d:	cc 	int3
  410d4e:	cc 	int3
  410d4f:	cc 	int3

runtime.gcSetTriggerRatio:
  410d50:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  410d59:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  410d5d:	0f 86 06 04 00 00 	jbe	1030 <runtime.gcSetTriggerRatio+0x419>
  410d63:	48 83 ec 40 	subq	$64, %rsp
  410d67:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  410d6c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  410d71:	0f 57 c0 	xorps	%xmm0, %xmm0
  410d74:	f2 0f 10 4c 24 48 	movsd	72(%rsp), %xmm1
  410d7a:	66 0f 2e c1 	ucomisd	%xmm1, %xmm0
  410d7e:	0f 86 53 02 00 00 	jbe	595 <runtime.gcSetTriggerRatio+0x287>
  410d84:	0f 57 c9 	xorps	%xmm1, %xmm1
  410d87:	f2 0f 11 0d a1 50 0b 00 	movsd	%xmm1, 741537(%rip)
  410d8f:	8b 0d 43 2b 0b 00 	movl	731971(%rip), %ecx
  410d95:	85 c9 	testl	%ecx, %ecx
  410d97:	0f 8c 2e 02 00 00 	jl	558 <runtime.gcSetTriggerRatio+0x27b>
  410d9d:	48 8b 0d ac 50 0b 00 	movq	741548(%rip), %rcx
  410da4:	48 85 c9 	testq	%rcx, %rcx
  410da7:	0f 8c 00 02 00 00 	jl	512 <runtime.gcSetTriggerRatio+0x25d>
  410dad:	0f 57 d2 	xorps	%xmm2, %xmm2
  410db0:	f2 48 0f 2a d1 	cvtsi2sdq	%rcx, %xmm2
  410db5:	f2 0f 10 1d 13 3d 06 00 	movsd	408851(%rip), %xmm3
  410dbd:	f2 0f 58 d9 	addsd	%xmm1, %xmm3
  410dc1:	f2 0f 59 da 	mulsd	%xmm2, %xmm3
  410dc5:	f2 0f 10 15 4b 3d 06 00 	movsd	408907(%rip), %xmm2
  410dcd:	66 0f 2e d3 	ucomisd	%xmm3, %xmm2
  410dd1:	0f 86 bb 01 00 00 	jbe	443 <runtime.gcSetTriggerRatio+0x242>
  410dd7:	f2 48 0f 2c cb 	cvttsd2si	%xmm3, %rcx
  410ddc:	48 8b 15 55 42 09 00 	movq	606805(%rip), %rdx
  410de3:	8b 1d db c4 09 00 	movl	640219(%rip), %ebx
  410de9:	85 db 	testl	%ebx, %ebx
  410deb:	0f 84 64 01 00 00 	je	356 <runtime.gcSetTriggerRatio+0x205>
  410df1:	48 39 d1 	cmpq	%rdx, %rcx
  410df4:	0f 83 50 01 00 00 	jae	336 <runtime.gcSetTriggerRatio+0x1fa>
  410dfa:	48 89 d0 	movq	%rdx, %rax
  410dfd:	48 85 d2 	testq	%rdx, %rdx
  410e00:	0f 8c 12 02 00 00 	jl	530 <runtime.gcSetTriggerRatio+0x2c8>
  410e06:	48 89 15 2b 50 0b 00 	movq	%rdx, 741419(%rip)
  410e0d:	8b 0d c5 2a 0b 00 	movl	731845(%rip), %ecx
  410e13:	85 c9 	testl	%ecx, %ecx
  410e15:	0f 8c 20 01 00 00 	jl	288 <runtime.gcSetTriggerRatio+0x1eb>
  410e1b:	48 8b 1d 2e 50 0b 00 	movq	741422(%rip), %rbx
  410e22:	48 63 c9 	movslq	%ecx, %rcx
  410e25:	48 0f af cb 	imulq	%rbx, %rcx
  410e29:	48 d1 e9 	shrq	%rcx
  410e2c:	48 b8 0b d7 a3 70 3d 0a d7 a3 	movabsq	$-6640827866535438581, %rax
  410e36:	48 89 d6 	movq	%rdx, %rsi
  410e39:	48 f7 e1 	mulq	%rcx
  410e3c:	48 c1 ea 05 	shrq	$5, %rdx
  410e40:	48 8d 0c 13 	leaq	(%rbx,%rdx), %rcx
  410e44:	48 39 f1 	cmpq	%rsi, %rcx
  410e47:	0f 83 e3 00 00 00 	jae	227 <runtime.gcSetTriggerRatio+0x1e0>
  410e4d:	48 89 f0 	movq	%rsi, %rax
  410e50:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  410e55:	48 89 35 4c 39 0b 00 	movq	%rsi, 735564(%rip)
  410e5c:	0f b6 0d 6d 29 0a 00 	movzbl	665965(%rip), %ecx
  410e63:	84 c9 	testb	%cl, %cl
  410e65:	0f 85 b3 00 00 00 	jne	179 <runtime.gcSetTriggerRatio+0x1ce>
  410e6b:	8b 0d 6b 2a 0b 00 	movl	731755(%rip), %ecx
  410e71:	85 c9 	testl	%ecx, %ecx
  410e73:	0f 85 88 00 00 00 	jne	136 <runtime.gcSetTriggerRatio+0x1b1>
  410e79:	8b 0d 45 c4 09 00 	movl	640069(%rip), %ecx
  410e7f:	85 c9 	testl	%ecx, %ecx
  410e81:	74 12 	je	18 <runtime.gcSetTriggerRatio+0x145>
  410e83:	f2 0f 11 05 ed c4 09 00 	movsd	%xmm0, 640237(%rip)
  410e8b:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  410e90:	48 83 c4 40 	addq	$64, %rsp
  410e94:	c3 	retq
  410e95:	48 8b 0d a4 4f 0b 00 	movq	741284(%rip), %rcx
  410e9c:	48 29 c8 	subq	%rcx, %rax
  410e9f:	48 05 00 00 f0 ff 	addq	$-1048576, %rax
  410ea5:	48 3d 00 20 00 00 	cmpq	$8192, %rax
  410eab:	7d 05 	jge	5 <runtime.gcSetTriggerRatio+0x162>
  410ead:	b8 00 20 00 00 	movl	$8192, %eax
  410eb2:	48 8b 15 a7 c4 09 00 	movq	640167(%rip), %rdx
  410eb9:	48 8b 1d 98 c4 09 00 	movq	640152(%rip), %rbx
  410ec0:	48 29 d3 	subq	%rdx, %rbx
  410ec3:	48 85 db 	testq	%rbx, %rbx
  410ec6:	7f 0a 	jg	10 <runtime.gcSetTriggerRatio+0x182>
  410ec8:	f2 0f 11 05 a8 c4 09 00 	movsd	%xmm0, 640168(%rip)
  410ed0:	eb b9 	jmp	-71 <runtime.gcSetTriggerRatio+0x13b>
  410ed2:	0f 57 c0 	xorps	%xmm0, %xmm0
  410ed5:	f2 48 0f 2a c3 	cvtsi2sdq	%rbx, %xmm0
  410eda:	0f 57 c9 	xorps	%xmm1, %xmm1
  410edd:	f2 48 0f 2a c8 	cvtsi2sdq	%rax, %xmm1
  410ee2:	f2 0f 5e c1 	divsd	%xmm1, %xmm0
  410ee6:	f2 0f 11 05 8a c4 09 00 	movsd	%xmm0, 640138(%rip)
  410eee:	48 89 0d 7b c4 09 00 	movq	%rcx, 640123(%rip)
  410ef5:	48 8d 05 6c c4 09 00 	leaq	640108(%rip), %rax
  410efc:	48 87 10 	xchgq	%rdx, (%rax)
  410eff:	eb 8a 	jmp	-118 <runtime.gcSetTriggerRatio+0x13b>
  410f01:	48 8d 05 18 2d 0b 00 	leaq	732440(%rip), %rax
  410f08:	48 89 04 24 	movq	%rax, (%rsp)
  410f0c:	e8 af f3 ff ff 	callq	-3153 <runtime.(*gcControllerState).revise>
  410f11:	48 8b 44 24 30 	movq	48(%rsp), %rax
  410f16:	0f 57 c0 	xorps	%xmm0, %xmm0
  410f19:	e9 5b ff ff ff 	jmp	-165 <runtime.gcSetTriggerRatio+0x129>
  410f1e:	e8 3d a1 02 00 	callq	172349 <runtime.traceNextGC>
  410f23:	48 8b 44 24 30 	movq	48(%rsp), %rax
  410f28:	0f 57 c0 	xorps	%xmm0, %xmm0
  410f2b:	e9 3b ff ff ff 	jmp	-197 <runtime.gcSetTriggerRatio+0x11b>
  410f30:	48 89 f0 	movq	%rsi, %rax
  410f33:	48 89 ce 	movq	%rcx, %rsi
  410f36:	e9 15 ff ff ff 	jmp	-235 <runtime.gcSetTriggerRatio+0x100>
  410f3b:	48 89 d0 	movq	%rdx, %rax
  410f3e:	48 c7 c6 ff ff ff ff 	movq	$-1, %rsi
  410f45:	e9 06 ff ff ff 	jmp	-250 <runtime.gcSetTriggerRatio+0x100>
  410f4a:	48 89 d0 	movq	%rdx, %rax
  410f4d:	48 89 ca 	movq	%rcx, %rdx
  410f50:	e9 a8 fe ff ff 	jmp	-344 <runtime.gcSetTriggerRatio+0xad>
  410f55:	48 8b 1d e4 4e 0b 00 	movq	741092(%rip), %rbx
  410f5c:	48 63 35 75 29 0b 00 	movslq	731509(%rip), %rsi
  410f63:	48 c1 e6 14 	shlq	$20, %rsi
  410f67:	48 d1 ee 	shrq	%rsi
  410f6a:	48 b8 0b d7 a3 70 3d 0a d7 a3 	movabsq	$-6640827866535438581, %rax
  410f74:	48 89 d7 	movq	%rdx, %rdi
  410f77:	48 f7 e6 	mulq	%rsi
  410f7a:	48 c1 ea 05 	shrq	$5, %rdx
  410f7e:	48 01 da 	addq	%rbx, %rdx
  410f81:	48 39 fa 	cmpq	%rdi, %rdx
  410f84:	0f 87 67 fe ff ff 	ja	-409 <runtime.gcSetTriggerRatio+0xa1>
  410f8a:	48 89 fa 	movq	%rdi, %rdx
  410f8d:	e9 5f fe ff ff 	jmp	-417 <runtime.gcSetTriggerRatio+0xa1>
  410f92:	f2 0f 5c da 	subsd	%xmm2, %xmm3
  410f96:	f2 48 0f 2c cb 	cvttsd2si	%xmm3, %rcx
  410f9b:	48 ba 00 00 00 00 00 00 00 80 	movabsq	$-9223372036854775808, %rdx
  410fa5:	48 09 d1 	orq	%rdx, %rcx
  410fa8:	e9 2f fe ff ff 	jmp	-465 <runtime.gcSetTriggerRatio+0x8c>
  410fad:	48 89 ca 	movq	%rcx, %rdx
  410fb0:	48 83 e1 01 	andq	$1, %rcx
  410fb4:	48 d1 ea 	shrq	%rdx
  410fb7:	48 09 d1 	orq	%rdx, %rcx
  410fba:	0f 57 d2 	xorps	%xmm2, %xmm2
  410fbd:	f2 48 0f 2a d1 	cvtsi2sdq	%rcx, %xmm2
  410fc2:	f2 0f 58 d2 	addsd	%xmm2, %xmm2
  410fc6:	e9 ea fd ff ff 	jmp	-534 <runtime.gcSetTriggerRatio+0x65>
  410fcb:	48 c7 c2 ff ff ff ff 	movq	$-1, %rdx
  410fd2:	e9 2f fe ff ff 	jmp	-465 <runtime.gcSetTriggerRatio+0xb6>
  410fd7:	8b 0d fb 28 0b 00 	movl	731387(%rip), %ecx
  410fdd:	85 c9 	testl	%ecx, %ecx
  410fdf:	7c 32 	jl	50 <runtime.gcSetTriggerRatio+0x2c3>
  410fe1:	0f 57 d2 	xorps	%xmm2, %xmm2
  410fe4:	f2 0f 2a d1 	cvtsi2sdl	%ecx, %xmm2
  410fe8:	f2 0f 10 1d d8 3a 06 00 	movsd	408280(%rip), %xmm3
  410ff0:	f2 0f 59 d3 	mulsd	%xmm3, %xmm2
  410ff4:	f2 0f 10 1d 0c 3b 06 00 	movsd	408332(%rip), %xmm3
  410ffc:	f2 0f 5e d3 	divsd	%xmm3, %xmm2
  411000:	66 0f 2e ca 	ucomisd	%xmm2, %xmm1
  411004:	76 08 	jbe	8 <runtime.gcSetTriggerRatio+0x2be>
  411006:	0f 10 ca 	movups	%xmm2, %xmm1
  411009:	e9 79 fd ff ff 	jmp	-647 <runtime.gcSetTriggerRatio+0x37>
  41100e:	0f 10 d1 	movups	%xmm1, %xmm2
  411011:	eb f3 	jmp	-13 <runtime.gcSetTriggerRatio+0x2b6>
  411013:	0f 10 d1 	movups	%xmm1, %xmm2
  411016:	eb ee 	jmp	-18 <runtime.gcSetTriggerRatio+0x2b6>
  411018:	f2 0f 11 4c 24 48 	movsd	%xmm1, 72(%rsp)
  41101e:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  411023:	48 8b 05 7e 37 0b 00 	movq	735102(%rip), %rax
  41102a:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  41102f:	48 8b 0d 1a 4e 0b 00 	movq	740890(%rip), %rcx
  411036:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  41103b:	48 8b 15 fe 4d 0b 00 	movq	740862(%rip), %rdx
  411042:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  411047:	48 8b 1d 6a 6e 09 00 	movq	618090(%rip), %rbx
  41104e:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  411053:	e8 a8 0a 01 00 	callq	68264 <runtime.printlock>
  411058:	48 8d 05 53 9c 05 00 	leaq	367699(%rip), %rax
  41105f:	48 89 04 24 	movq	%rax, (%rsp)
  411063:	48 c7 44 24 08 11 00 00 00 	movq	$17, 8(%rsp)
  41106c:	e8 cf 13 01 00 	callq	70607 <runtime.printstring>
  411071:	48 8b 44 24 28 	movq	40(%rsp), %rax
  411076:	48 89 04 24 	movq	%rax, (%rsp)
  41107a:	e8 f1 10 01 00 	callq	69873 <runtime.printuint>
  41107f:	48 8d 05 05 96 05 00 	leaq	366085(%rip), %rax
  411086:	48 89 04 24 	movq	%rax, (%rsp)
  41108a:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  411093:	e8 a8 13 01 00 	callq	70568 <runtime.printstring>
  411098:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41109d:	48 89 04 24 	movq	%rax, (%rsp)
  4110a1:	e8 ca 10 01 00 	callq	69834 <runtime.printuint>
  4110a6:	48 8d 05 17 93 05 00 	leaq	365335(%rip), %rax
  4110ad:	48 89 04 24 	movq	%rax, (%rsp)
  4110b1:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  4110ba:	e8 81 13 01 00 	callq	70529 <runtime.printstring>
  4110bf:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4110c4:	48 89 04 24 	movq	%rax, (%rsp)
  4110c8:	e8 a3 10 01 00 	callq	69795 <runtime.printuint>
  4110cd:	48 8d 05 ce 9a 05 00 	leaq	367310(%rip), %rax
  4110d4:	48 89 04 24 	movq	%rax, (%rsp)
  4110d8:	48 c7 44 24 08 11 00 00 00 	movq	$17, 8(%rsp)
  4110e1:	e8 5a 13 01 00 	callq	70490 <runtime.printstring>
  4110e6:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4110eb:	48 89 04 24 	movq	%rax, (%rsp)
  4110ef:	e8 7c 10 01 00 	callq	69756 <runtime.printuint>
  4110f4:	48 8d 05 94 96 05 00 	leaq	366228(%rip), %rax
  4110fb:	48 89 04 24 	movq	%rax, (%rsp)
  4110ff:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  411108:	e8 33 13 01 00 	callq	70451 <runtime.printstring>
  41110d:	f2 0f 10 44 24 48 	movsd	72(%rsp), %xmm0
  411113:	f2 0f 11 04 24 	movsd	%xmm0, (%rsp)
  411118:	e8 33 0d 01 00 	callq	68915 <runtime.printfloat>
  41111d:	48 8d 05 fa 93 05 00 	leaq	365562(%rip), %rax
  411124:	48 89 04 24 	movq	%rax, (%rsp)
  411128:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  411131:	e8 0a 13 01 00 	callq	70410 <runtime.printstring>
  411136:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41113b:	48 89 04 24 	movq	%rax, (%rsp)
  41113f:	e8 2c 10 01 00 	callq	69676 <runtime.printuint>
  411144:	e8 47 0c 01 00 	callq	68679 <runtime.printnl>
  411149:	e8 32 0a 01 00 	callq	68146 <runtime.printunlock>
  41114e:	48 8d 05 b4 9f 05 00 	leaq	368564(%rip), %rax
  411155:	48 89 04 24 	movq	%rax, (%rsp)
  411159:	48 c7 44 24 08 14 00 00 00 	movq	$20, 8(%rsp)
  411162:	e8 69 00 01 00 	callq	65641 <runtime.throw>
  411167:	0f 0b 	ud2
  411169:	e8 02 34 03 00 	callq	209922 <runtime.morestack_noctxt>
  41116e:	e9 dd fb ff ff 	jmp	-1059 <runtime.gcSetTriggerRatio>
  411173:	cc 	int3
  411174:	cc 	int3
  411175:	cc 	int3
  411176:	cc 	int3
  411177:	cc 	int3
  411178:	cc 	int3
  411179:	cc 	int3
  41117a:	cc 	int3
  41117b:	cc 	int3
  41117c:	cc 	int3
  41117d:	cc 	int3
  41117e:	cc 	int3
  41117f:	cc 	int3

runtime.gcStart:
  411180:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  411189:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41118d:	0f 86 66 05 00 00 	jbe	1382 <runtime.gcStart+0x579>
  411193:	48 83 ec 28 	subq	$40, %rsp
  411197:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  41119c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  4111a1:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4111aa:	48 8b 48 30 	movq	48(%rax), %rcx
  4111ae:	ff 81 00 01 00 00 	incl	256(%rcx)
  4111b4:	48 8b 48 30 	movq	48(%rax), %rcx
  4111b8:	84 00 	testb	%al, (%rax)
  4111ba:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4111c3:	48 8b 11 	movq	(%rcx), %rdx
  4111c6:	48 39 d0 	cmpq	%rdx, %rax
  4111c9:	0f 84 f9 04 00 00 	je	1273 <runtime.gcStart+0x548>
  4111cf:	8b 91 00 01 00 00 	movl	256(%rcx), %edx
  4111d5:	83 fa 01 	cmpl	$1, %edx
  4111d8:	0f 8f ea 04 00 00 	jg	1258 <runtime.gcStart+0x548>
  4111de:	48 8b 99 f8 00 00 00 	movq	248(%rcx), %rbx
  4111e5:	48 85 db 	testq	%rbx, %rbx
  4111e8:	0f 85 da 04 00 00 	jne	1242 <runtime.gcStart+0x548>
  4111ee:	8d 5a ff 	leal	-1(%rdx), %ebx
  4111f1:	89 99 00 01 00 00 	movl	%ebx, 256(%rcx)
  4111f7:	83 fa 01 	cmpl	$1, %edx
  4111fa:	75 1b 	jne	27 <runtime.gcStart+0x97>
  4111fc:	0f b6 88 c0 00 00 00 	movzbl	192(%rax), %ecx
  411203:	84 c9 	testb	%cl, %cl
  411205:	74 10 	je	16 <runtime.gcStart+0x97>
  411207:	48 c7 40 10 de fa ff ff 	movq	$-1314, 16(%rax)
  41120f:	eb 06 	jmp	6 <runtime.gcStart+0x97>
  411211:	ff 05 dd 65 09 00 	incl	615901(%rip)
  411217:	0f b6 05 b2 45 0b 00 	movzbl	738738(%rip), %eax
  41121e:	84 c0 	testb	%al, %al
  411220:	74 0e 	je	14 <runtime.gcStart+0xb0>
  411222:	8b 05 cc 26 0b 00 	movl	730828(%rip), %eax
  411228:	85 c0 	testl	%eax, %eax
  41122a:	0f 84 df 03 00 00 	je	991 <runtime.gcStart+0x48f>
  411230:	31 c0 	xorl	%eax, %eax
  411232:	84 c0 	testb	%al, %al
  411234:	74 0f 	je	15 <runtime.gcStart+0xc5>
  411236:	e8 35 6c 00 00 	callq	27701 <runtime.gosweepone>
  41123b:	48 8b 04 24 	movq	(%rsp), %rax
  41123f:	48 83 f8 ff 	cmpq	$-1, %rax
  411243:	75 cc 	jne	-52 <runtime.gcStart+0x91>
  411245:	48 8d 05 38 6c 09 00 	leaq	617528(%rip), %rax
  41124c:	48 89 04 24 	movq	%rax, (%rsp)
  411250:	e8 0b ed 01 00 	callq	126219 <runtime.semacquire>
  411255:	0f b6 05 74 45 0b 00 	movzbl	738676(%rip), %eax
  41125c:	84 c0 	testb	%al, %al
  41125e:	74 0e 	je	14 <runtime.gcStart+0xee>
  411260:	8b 05 8e 26 0b 00 	movl	730766(%rip), %eax
  411266:	85 c0 	testl	%eax, %eax
  411268:	0f 84 f0 02 00 00 	je	752 <runtime.gcStart+0x3de>
  41126e:	31 c0 	xorl	%eax, %eax
  411270:	84 c0 	testb	%al, %al
  411272:	0f 84 cc 02 00 00 	je	716 <runtime.gcStart+0x3c4>
  411278:	48 8b 44 24 38 	movq	56(%rsp), %rax
  41127d:	48 85 c0 	testq	%rax, %rax
  411280:	0f 85 b2 02 00 00 	jne	690 <runtime.gcStart+0x3b8>
  411286:	b8 01 00 00 00 	movl	$1, %eax
  41128b:	88 05 17 6c 09 00 	movb	%al, 617495(%rip)
  411291:	48 8b 44 24 30 	movq	48(%rsp), %rax
  411296:	48 85 c0 	testq	%rax, %rax
  411299:	75 14 	jne	20 <runtime.gcStart+0x12f>
  41129b:	8b 0d 3b 28 0b 00 	movl	731195(%rip), %ecx
  4112a1:	83 f9 01 	cmpl	$1, %ecx
  4112a4:	0f 85 7b 02 00 00 	jne	635 <runtime.gcStart+0x3a5>
  4112aa:	b8 01 00 00 00 	movl	$1, %eax
  4112af:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  4112b4:	48 8d 0d 51 3d 09 00 	leaq	605521(%rip), %rcx
  4112bb:	48 89 0c 24 	movq	%rcx, (%rsp)
  4112bf:	e8 9c ec 01 00 	callq	126108 <runtime.semacquire>
  4112c4:	0f b6 05 05 25 0a 00 	movzbl	664837(%rip), %eax
  4112cb:	84 c0 	testb	%al, %al
  4112cd:	0f 85 48 02 00 00 	jne	584 <runtime.gcStart+0x39b>
  4112d3:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4112d8:	48 85 c0 	testq	%rax, %rax
  4112db:	0f 84 30 02 00 00 	je	560 <runtime.gcStart+0x391>
  4112e1:	e8 aa 1c 00 00 	callq	7338 <runtime.gcResetMarkState>
  4112e6:	8b 05 f4 25 0b 00 	movl	730612(%rip), %eax
  4112ec:	89 05 fa 6b 09 00 	movl	%eax, 617466(%rip)
  4112f2:	89 05 f8 6b 09 00 	movl	%eax, 617464(%rip)
  4112f8:	8b 05 ee 6b 09 00 	movl	617454(%rip), %eax
  4112fe:	8b 0d e0 25 0b 00 	movl	730592(%rip), %ecx
  411304:	39 c8 	cmpl	%ecx, %eax
  411306:	7e 06 	jle	6 <runtime.gcStart+0x18e>
  411308:	89 0d de 6b 09 00 	movl	%ecx, 617438(%rip)
  41130e:	48 8b 05 2b 4b 0b 00 	movq	740139(%rip), %rax
  411315:	48 89 05 0c 6c 09 00 	movq	%rax, 617484(%rip)
  41131c:	48 c7 05 f1 6b 09 00 00 00 00 00 	movq	$0, 617457(%rip)
  411327:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41132c:	48 89 05 6d 6b 09 00 	movq	%rax, 617325(%rip)
  411333:	e8 f8 66 03 00 	callq	222968 <runtime.nanotime>
  411338:	48 8b 04 24 	movq	(%rsp), %rax
  41133c:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  411341:	48 89 05 b0 6b 09 00 	movq	%rax, 617392(%rip)
  411348:	48 8b 44 24 08 	movq	8(%rsp), %rax
  41134d:	48 89 05 cc 6b 09 00 	movq	%rax, 617420(%rip)
  411354:	0f b6 05 75 24 0a 00 	movzbl	664693(%rip), %eax
  41135b:	84 c0 	testb	%al, %al
  41135d:	0f 85 9c 01 00 00 	jne	412 <runtime.gcStart+0x37f>
  411363:	48 8d 05 9e ce 05 00 	leaq	380574(%rip), %rax
  41136a:	48 89 04 24 	movq	%rax, (%rsp)
  41136e:	e8 ad 30 03 00 	callq	209069 <runtime.systemstack>
  411373:	48 8d 05 26 cd 05 00 	leaq	380198(%rip), %rax
  41137a:	48 89 04 24 	movq	%rax, (%rsp)
  41137e:	e8 9d 30 03 00 	callq	209053 <runtime.systemstack>
  411383:	e8 b8 1c 00 00 	callq	7352 <runtime.clearpools>
  411388:	ff 05 5a 6b 09 00 	incl	617306(%rip)
  41138e:	48 8b 44 24 30 	movq	48(%rsp), %rax
  411393:	48 85 c0 	testq	%rax, %rax
  411396:	74 70 	je	112 <runtime.gcStart+0x288>
  411398:	0f b6 05 31 24 0a 00 	movzbl	664625(%rip), %eax
  41139f:	84 c0 	testb	%al, %al
  4113a1:	75 51 	jne	81 <runtime.gcStart+0x274>
  4113a3:	e8 88 66 03 00 	callq	222856 <runtime.nanotime>
  4113a8:	48 8b 04 24 	movq	(%rsp), %rax
  4113ac:	48 89 05 4d 6b 09 00 	movq	%rax, 617293(%rip)
  4113b3:	48 89 05 4e 6b 09 00 	movq	%rax, 617294(%rip)
  4113ba:	48 8b 05 67 6b 09 00 	movq	617319(%rip), %rax
  4113c1:	48 89 05 78 6b 09 00 	movq	%rax, 617336(%rip)
  4113c8:	f2 0f 10 05 60 4a 0b 00 	movsd	739936(%rip), %xmm0
  4113d0:	f2 0f 11 04 24 	movsd	%xmm0, (%rsp)
  4113d5:	e8 c6 05 00 00 	callq	1478 <runtime.gcMarkTermination>
  4113da:	48 8d 05 a3 6a 09 00 	leaq	617123(%rip), %rax
  4113e1:	48 89 04 24 	movq	%rax, (%rsp)
  4113e5:	e8 a6 ee 01 00 	callq	126630 <runtime.semrelease>
  4113ea:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4113ef:	48 83 c4 28 	addq	$40, %rsp
  4113f3:	c3 	retq
  4113f4:	e8 27 91 02 00 	callq	168231 <runtime.traceGCSTWDone>
  4113f9:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  411401:	e8 aa 90 02 00 	callq	168106 <runtime.traceGCSTWStart>
  411406:	eb 9b 	jmp	-101 <runtime.gcStart+0x223>
  411408:	48 8d 05 11 28 0b 00 	leaq	731153(%rip), %rax
  41140f:	48 89 04 24 	movq	%rax, (%rsp)
  411413:	e8 18 eb ff ff 	callq	-5352 <runtime.(*gcControllerState).startCycle>
  411418:	48 8b 05 89 33 0b 00 	movq	734089(%rip), %rax
  41141f:	48 89 05 1a 6b 09 00 	movq	%rax, 617242(%rip)
  411426:	b8 01 00 00 00 	movl	$1, %eax
  41142b:	48 8d 0d aa 24 0b 00 	leaq	730282(%rip), %rcx
  411432:	87 01 	xchgl	%eax, (%rcx)
  411434:	8b 05 a2 24 0b 00 	movl	730274(%rip), %eax
  41143a:	83 f8 01 	cmpl	$1, %eax
  41143d:	0f 85 b1 00 00 00 	jne	177 <runtime.gcStart+0x374>
  411443:	b8 01 00 00 00 	movl	$1, %eax
  411448:	88 05 c6 25 0b 00 	movb	%al, 730566(%rip)
  41144e:	84 c0 	testb	%al, %al
  411450:	0f 84 92 00 00 00 	je	146 <runtime.gcStart+0x368>
  411456:	b8 01 00 00 00 	movl	$1, %eax
  41145b:	88 05 af 25 0b 00 	movb	%al, 730543(%rip)
  411461:	c7 05 c5 69 09 00 ff ff ff ff 	movl	$4294967295, 616901(%rip)
  41146b:	c7 05 cb 69 09 00 ff ff ff ff 	movl	$4294967295, 616907(%rip)
  411475:	e8 46 29 00 00 	callq	10566 <runtime.gcMarkRootPrepare>
  41147a:	e8 91 61 00 00 	callq	24977 <runtime.gcMarkTinyAllocs>
  41147f:	b8 01 00 00 00 	movl	$1, %eax
  411484:	48 8d 0d 49 24 0b 00 	leaq	730185(%rip), %rcx
  41148b:	87 01 	xchgl	%eax, (%rcx)
  41148d:	48 8b 44 24 08 	movq	8(%rsp), %rax
  411492:	48 89 05 b7 27 0b 00 	movq	%rax, 731063(%rip)
  411499:	48 8d 05 b0 0a 03 00 	leaq	199344(%rip), %rax
  4114a0:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  4114a5:	48 8d 44 24 08 	leaq	8(%rsp), %rax
  4114aa:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4114af:	48 8d 44 24 10 	leaq	16(%rsp), %rax
  4114b4:	48 89 04 24 	movq	%rax, (%rsp)
  4114b8:	e8 63 2f 03 00 	callq	208739 <runtime.systemstack>
  4114bd:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4114c2:	48 2b 05 57 6a 09 00 	subq	617047(%rip), %rax
  4114c9:	48 03 05 48 6a 09 00 	addq	617032(%rip), %rax
  4114d0:	48 89 05 41 6a 09 00 	movq	%rax, 617025(%rip)
  4114d7:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4114dc:	48 89 05 1d 6a 09 00 	movq	%rax, 616989(%rip)
  4114e3:	e9 f2 fe ff ff 	jmp	-270 <runtime.gcStart+0x25a>
  4114e8:	0f b6 05 26 25 0b 00 	movzbl	730406(%rip), %eax
  4114ef:	e9 67 ff ff ff 	jmp	-153 <runtime.gcStart+0x2db>
  4114f4:	83 f8 02 	cmpl	$2, %eax
  4114f7:	0f 94 c0 	sete	%al
  4114fa:	e9 49 ff ff ff 	jmp	-183 <runtime.gcStart+0x2c8>
  4114ff:	48 c7 04 24 01 00 00 00 	movq	$1, (%rsp)
  411507:	e8 a4 8f 02 00 	callq	167844 <runtime.traceGCSTWStart>
  41150c:	e9 52 fe ff ff 	jmp	-430 <runtime.gcStart+0x1e3>
  411511:	e8 ea 0f 00 00 	callq	4074 <runtime.gcBgMarkStartWorkers>
  411516:	e9 c6 fd ff ff 	jmp	-570 <runtime.gcStart+0x161>
  41151b:	e8 b0 8e 02 00 	callq	167600 <runtime.traceGCStart>
  411520:	e9 ae fd ff ff 	jmp	-594 <runtime.gcStart+0x153>
  411525:	83 f9 02 	cmpl	$2, %ecx
  411528:	0f 85 81 fd ff ff 	jne	-639 <runtime.gcStart+0x12f>
  41152e:	b8 02 00 00 00 	movl	$2, %eax
  411533:	e9 77 fd ff ff 	jmp	-649 <runtime.gcStart+0x12f>
  411538:	48 83 f8 03 	cmpq	$3, %rax
  41153c:	0f 94 c0 	sete	%al
  41153f:	e9 47 fd ff ff 	jmp	-697 <runtime.gcStart+0x10b>
  411544:	48 8d 05 39 69 09 00 	leaq	616761(%rip), %rax
  41154b:	48 89 04 24 	movq	%rax, (%rsp)
  41154f:	e8 3c ed 01 00 	callq	126268 <runtime.semrelease>
  411554:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  411559:	48 83 c4 28 	addq	$40, %rsp
  41155d:	c3 	retq
  41155e:	48 8b 44 24 38 	movq	56(%rsp), %rax
  411563:	48 85 c0 	testq	%rax, %rax
  411566:	75 0a 	jne	10 <runtime.gcStart+0x3f2>
  411568:	b8 01 00 00 00 	movl	$1, %eax
  41156d:	e9 fe fc ff ff 	jmp	-770 <runtime.gcStart+0xf0>
  411572:	8b 0d 64 23 0b 00 	movl	729956(%rip), %ecx
  411578:	85 c9 	testl	%ecx, %ecx
  41157a:	74 07 	je	7 <runtime.gcStart+0x403>
  41157c:	31 c0 	xorl	%eax, %eax
  41157e:	e9 ed fc ff ff 	jmp	-787 <runtime.gcStart+0xf0>
  411583:	48 83 f8 01 	cmpq	$1, %rax
  411587:	75 1b 	jne	27 <runtime.gcStart+0x424>
  411589:	48 8b 0d b0 48 0b 00 	movq	739504(%rip), %rcx
  411590:	48 8b 15 a1 48 0b 00 	movq	739489(%rip), %rdx
  411597:	48 39 d1 	cmpq	%rdx, %rcx
  41159a:	0f 93 c1 	setae	%cl
  41159d:	89 c8 	movl	%ecx, %eax
  41159f:	e9 cc fc ff ff 	jmp	-820 <runtime.gcStart+0xf0>
  4115a4:	48 83 f8 02 	cmpq	$2, %rax
  4115a8:	75 3d 	jne	61 <runtime.gcStart+0x467>
  4115aa:	8b 0d 28 23 0b 00 	movl	729896(%rip), %ecx
  4115b0:	85 c9 	testl	%ecx, %ecx
  4115b2:	7d 07 	jge	7 <runtime.gcStart+0x43b>
  4115b4:	31 c0 	xorl	%eax, %eax
  4115b6:	e9 b5 fc ff ff 	jmp	-843 <runtime.gcStart+0xf0>
  4115bb:	48 8b 0d 5e 48 0b 00 	movq	739422(%rip), %rcx
  4115c2:	48 85 c9 	testq	%rcx, %rcx
  4115c5:	74 1c 	je	28 <runtime.gcStart+0x463>
  4115c7:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  4115cc:	48 29 ca 	subq	%rcx, %rdx
  4115cf:	48 8b 0d 5a 3a 09 00 	movq	604762(%rip), %rcx
  4115d6:	48 39 ca 	cmpq	%rcx, %rdx
  4115d9:	0f 9f c1 	setg	%cl
  4115dc:	89 c8 	movl	%ecx, %eax
  4115de:	e9 8d fc ff ff 	jmp	-883 <runtime.gcStart+0xf0>
  4115e3:	31 c9 	xorl	%ecx, %ecx
  4115e5:	eb f5 	jmp	-11 <runtime.gcStart+0x45c>
  4115e7:	48 83 f8 03 	cmpq	$3, %rax
  4115eb:	75 18 	jne	24 <runtime.gcStart+0x485>
  4115ed:	8b 0d f5 68 09 00 	movl	616693(%rip), %ecx
  4115f3:	8b 54 24 48 	movl	72(%rsp), %edx
  4115f7:	29 ca 	subl	%ecx, %edx
  4115f9:	85 d2 	testl	%edx, %edx
  4115fb:	0f 9f c1 	setg	%cl
  4115fe:	89 c8 	movl	%ecx, %eax
  411600:	e9 6b fc ff ff 	jmp	-917 <runtime.gcStart+0xf0>
  411605:	b8 01 00 00 00 	movl	$1, %eax
  41160a:	e9 61 fc ff ff 	jmp	-927 <runtime.gcStart+0xf0>
  41160f:	48 8b 44 24 38 	movq	56(%rsp), %rax
  411614:	48 85 c0 	testq	%rax, %rax
  411617:	75 0a 	jne	10 <runtime.gcStart+0x4a3>
  411619:	b8 01 00 00 00 	movl	$1, %eax
  41161e:	e9 0f fc ff ff 	jmp	-1009 <runtime.gcStart+0xb2>
  411623:	8b 0d b3 22 0b 00 	movl	729779(%rip), %ecx
  411629:	85 c9 	testl	%ecx, %ecx
  41162b:	74 07 	je	7 <runtime.gcStart+0x4b4>
  41162d:	31 c0 	xorl	%eax, %eax
  41162f:	e9 fe fb ff ff 	jmp	-1026 <runtime.gcStart+0xb2>
  411634:	48 83 f8 01 	cmpq	$1, %rax
  411638:	75 1b 	jne	27 <runtime.gcStart+0x4d5>
  41163a:	48 8b 0d ff 47 0b 00 	movq	739327(%rip), %rcx
  411641:	48 8b 15 f0 47 0b 00 	movq	739312(%rip), %rdx
  411648:	48 39 d1 	cmpq	%rdx, %rcx
  41164b:	0f 93 c1 	setae	%cl
  41164e:	89 c8 	movl	%ecx, %eax
  411650:	e9 dd fb ff ff 	jmp	-1059 <runtime.gcStart+0xb2>
  411655:	48 83 f8 02 	cmpq	$2, %rax
  411659:	75 45 	jne	69 <runtime.gcStart+0x520>
  41165b:	8b 0d 77 22 0b 00 	movl	729719(%rip), %ecx
  411661:	85 c9 	testl	%ecx, %ecx
  411663:	7d 07 	jge	7 <runtime.gcStart+0x4ec>
  411665:	31 c0 	xorl	%eax, %eax
  411667:	e9 c6 fb ff ff 	jmp	-1082 <runtime.gcStart+0xb2>
  41166c:	48 8b 0d ad 47 0b 00 	movq	739245(%rip), %rcx
  411673:	48 85 c9 	testq	%rcx, %rcx
  411676:	74 1f 	je	31 <runtime.gcStart+0x517>
  411678:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  41167d:	48 89 d3 	movq	%rdx, %rbx
  411680:	48 29 ca 	subq	%rcx, %rdx
  411683:	48 8b 0d a6 39 09 00 	movq	604582(%rip), %rcx
  41168a:	48 39 ca 	cmpq	%rcx, %rdx
  41168d:	0f 9f c1 	setg	%cl
  411690:	89 c8 	movl	%ecx, %eax
  411692:	e9 9b fb ff ff 	jmp	-1125 <runtime.gcStart+0xb2>
  411697:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  41169c:	31 c9 	xorl	%ecx, %ecx
  41169e:	eb f0 	jmp	-16 <runtime.gcStart+0x510>
  4116a0:	48 83 f8 03 	cmpq	$3, %rax
  4116a4:	75 18 	jne	24 <runtime.gcStart+0x53e>
  4116a6:	8b 0d 3c 68 09 00 	movl	616508(%rip), %ecx
  4116ac:	8b 54 24 48 	movl	72(%rsp), %edx
  4116b0:	29 ca 	subl	%ecx, %edx
  4116b2:	85 d2 	testl	%edx, %edx
  4116b4:	0f 9f c1 	setg	%cl
  4116b7:	89 c8 	movl	%ecx, %eax
  4116b9:	e9 74 fb ff ff 	jmp	-1164 <runtime.gcStart+0xb2>
  4116be:	b8 01 00 00 00 	movl	$1, %eax
  4116c3:	e9 6a fb ff ff 	jmp	-1174 <runtime.gcStart+0xb2>
  4116c8:	8b 91 00 01 00 00 	movl	256(%rcx), %edx
  4116ce:	8d 5a ff 	leal	-1(%rdx), %ebx
  4116d1:	89 99 00 01 00 00 	movl	%ebx, 256(%rcx)
  4116d7:	83 fa 01 	cmpl	$1, %edx
  4116da:	75 13 	jne	19 <runtime.gcStart+0x56f>
  4116dc:	0f b6 88 c0 00 00 00 	movzbl	192(%rax), %ecx
  4116e3:	84 c9 	testb	%cl, %cl
  4116e5:	74 08 	je	8 <runtime.gcStart+0x56f>
  4116e7:	48 c7 40 10 de fa ff ff 	movq	$-1314, 16(%rax)
  4116ef:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4116f4:	48 83 c4 28 	addq	$40, %rsp
  4116f8:	c3 	retq
  4116f9:	e8 72 2e 03 00 	callq	208498 <runtime.morestack_noctxt>
  4116fe:	e9 7d fa ff ff 	jmp	-1411 <runtime.gcStart>
  411703:	cc 	int3
  411704:	cc 	int3
  411705:	cc 	int3
  411706:	cc 	int3
  411707:	cc 	int3
  411708:	cc 	int3
  411709:	cc 	int3
  41170a:	cc 	int3
  41170b:	cc 	int3
  41170c:	cc 	int3
  41170d:	cc 	int3
  41170e:	cc 	int3
  41170f:	cc 	int3

runtime.gcMarkDone:
  411710:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  411719:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41171d:	0f 86 69 02 00 00 	jbe	617 <runtime.gcMarkDone+0x27c>
  411723:	48 83 ec 20 	subq	$32, %rsp
  411727:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  41172c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  411731:	48 8d 05 50 67 09 00 	leaq	616272(%rip), %rax
  411738:	48 89 04 24 	movq	%rax, (%rsp)
  41173c:	e8 1f e8 01 00 	callq	124959 <runtime.semacquire>
  411741:	8b 05 95 21 0b 00 	movl	729493(%rip), %eax
  411747:	83 f8 01 	cmpl	$1, %eax
  41174a:	0f 85 11 02 00 00 	jne	529 <runtime.gcMarkDone+0x251>
  411750:	8b 05 ea 66 09 00 	movl	616170(%rip), %eax
  411756:	8b 0d d4 66 09 00 	movl	616148(%rip), %ecx
  41175c:	39 c8 	cmpl	%ecx, %eax
  41175e:	0f 85 fd 01 00 00 	jne	509 <runtime.gcMarkDone+0x251>
  411764:	48 8b 05 35 66 09 00 	movq	615989(%rip), %rax
  41176b:	48 85 c0 	testq	%rax, %rax
  41176e:	0f 85 0e 02 00 00 	jne	526 <runtime.gcMarkDone+0x272>
  411774:	8b 05 ae 66 09 00 	movl	616110(%rip), %eax
  41177a:	8b 0d ac 66 09 00 	movl	616108(%rip), %ecx
  411780:	39 c8 	cmpl	%ecx, %eax
  411782:	0f 83 f3 01 00 00 	jae	499 <runtime.gcMarkDone+0x26b>
  411788:	b8 01 00 00 00 	movl	$1, %eax
  41178d:	84 c0 	testb	%al, %al
  41178f:	0f 85 cc 01 00 00 	jne	460 <runtime.gcMarkDone+0x251>
  411795:	48 b8 01 00 00 00 ff ff ff ff 	movabsq	$-4294967295, %rax
  41179f:	48 8d 0d b2 24 0b 00 	leaq	730290(%rip), %rcx
  4117a6:	f0 	lock
  4117a7:	48 0f c1 01 	xaddq	%rax, (%rcx)
  4117ab:	f2 0f 10 05 bd 24 0b 00 	movsd	730301(%rip), %xmm0
  4117b3:	0f 57 c9 	xorps	%xmm1, %xmm1
  4117b6:	f2 0f 11 0d b2 24 0b 00 	movsd	%xmm1, 730290(%rip)
  4117be:	0f b6 05 e2 20 0b 00 	movzbl	729314(%rip), %eax
  4117c5:	84 c0 	testb	%al, %al
  4117c7:	0f 85 bb 00 00 00 	jne	187 <runtime.gcMarkDone+0x178>
  4117cd:	f2 0f 11 44 24 10 	movsd	%xmm0, 16(%rsp)
  4117d3:	c6 05 cd 20 0b 00 01 	movb	$1, 729293(%rip)
  4117da:	b8 ff ff ff ff 	movl	$4294967295, %eax
  4117df:	48 8d 0d 5a 66 09 00 	leaq	616026(%rip), %rcx
  4117e6:	f0 	lock
  4117e7:	0f c1 01 	xaddl	%eax, (%rcx)
  4117ea:	48 8d 05 97 66 09 00 	leaq	616087(%rip), %rax
  4117f1:	48 89 04 24 	movq	%rax, (%rsp)
  4117f5:	e8 96 ea 01 00 	callq	125590 <runtime.semrelease>
  4117fa:	48 8d 05 8f c8 05 00 	leaq	379023(%rip), %rax
  411801:	48 89 04 24 	movq	%rax, (%rsp)
  411805:	e8 16 2c 03 00 	callq	207894 <runtime.systemstack>
  41180a:	e8 51 27 00 00 	callq	10065 <runtime.gcMarkRootCheck>
  41180f:	b8 ff ff ff ff 	movl	$4294967295, %eax
  411814:	48 8d 0d 3d 24 0b 00 	leaq	730173(%rip), %rcx
  41181b:	f0 	lock
  41181c:	48 0f c1 01 	xaddq	%rax, (%rcx)
  411820:	f2 0f 10 44 24 10 	movsd	16(%rsp), %xmm0
  411826:	f2 0f 11 05 42 24 0b 00 	movsd	%xmm0, 730178(%rip)
  41182e:	b8 01 00 00 00 	movl	$1, %eax
  411833:	48 8d 0d 06 66 09 00 	leaq	615942(%rip), %rcx
  41183a:	f0 	lock
  41183b:	0f c1 01 	xaddl	%eax, (%rcx)
  41183e:	ff c0 	incl	%eax
  411840:	8b 0d ea 65 09 00 	movl	615914(%rip), %ecx
  411846:	39 c1 	cmpl	%eax, %ecx
  411848:	75 29 	jne	41 <runtime.gcMarkDone+0x163>
  41184a:	48 8b 05 4f 65 09 00 	movq	615759(%rip), %rax
  411851:	48 85 c0 	testq	%rax, %rax
  411854:	75 2b 	jne	43 <runtime.gcMarkDone+0x171>
  411856:	8b 05 cc 65 09 00 	movl	615884(%rip), %eax
  41185c:	8b 0d ca 65 09 00 	movl	615882(%rip), %ecx
  411862:	39 c8 	cmpl	%ecx, %eax
  411864:	73 17 	jae	23 <runtime.gcMarkDone+0x16d>
  411866:	b8 01 00 00 00 	movl	$1, %eax
  41186b:	84 c0 	testb	%al, %al
  41186d:	0f 84 be fe ff ff 	je	-322 <runtime.gcMarkDone+0x21>
  411873:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  411878:	48 83 c4 20 	addq	$32, %rsp
  41187c:	c3 	retq
  41187d:	31 c0 	xorl	%eax, %eax
  41187f:	eb ea 	jmp	-22 <runtime.gcMarkDone+0x15b>
  411881:	b8 01 00 00 00 	movl	$1, %eax
  411886:	eb e3 	jmp	-29 <runtime.gcMarkDone+0x15b>
  411888:	e8 a3 61 03 00 	callq	221603 <runtime.nanotime>
  41188d:	48 8b 04 24 	movq	(%rsp), %rax
  411891:	48 89 05 70 66 09 00 	movq	%rax, 616048(%rip)
  411898:	48 89 05 81 66 09 00 	movq	%rax, 616065(%rip)
  41189f:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4118a8:	48 8b 40 30 	movq	48(%rax), %rax
  4118ac:	48 c7 80 f8 00 00 00 05 00 00 00 	movq	$5, 248(%rax)
  4118b7:	8b 0d 53 21 0b 00 	movl	729427(%rip), %ecx
  4118bd:	48 8d b8 f0 00 00 00 	leaq	240(%rax), %rdi
  4118c4:	85 c9 	testl	%ecx, %ecx
  4118c6:	0f 85 84 00 00 00 	jne	132 <runtime.gcMarkDone+0x240>
  4118cc:	48 8d 0d fe 84 05 00 	leaq	361726(%rip), %rcx
  4118d3:	48 89 88 f0 00 00 00 	movq	%rcx, 240(%rax)
  4118da:	0f b6 05 ef 1e 0a 00 	movzbl	663279(%rip), %eax
  4118e1:	84 c0 	testb	%al, %al
  4118e3:	75 5c 	jne	92 <runtime.gcMarkDone+0x231>
  4118e5:	48 8d 05 1c c9 05 00 	leaq	379164(%rip), %rax
  4118ec:	48 89 04 24 	movq	%rax, (%rsp)
  4118f0:	e8 2b 2b 03 00 	callq	207659 <runtime.systemstack>
  4118f5:	c6 05 84 65 09 00 01 	movb	$1, 615812(%rip)
  4118fc:	31 c0 	xorl	%eax, %eax
  4118fe:	48 8d 0d cf 1f 0b 00 	leaq	729039(%rip), %rcx
  411905:	87 01 	xchgl	%eax, (%rcx)
  411907:	e8 c4 36 00 00 	callq	14020 <runtime.gcWakeAllAssists>
  41190c:	48 8d 05 75 65 09 00 	leaq	615797(%rip), %rax
  411913:	48 89 04 24 	movq	%rax, (%rsp)
  411917:	e8 74 e9 01 00 	callq	125300 <runtime.semrelease>
  41191c:	48 8d 05 fd 22 0b 00 	leaq	729853(%rip), %rax
  411923:	48 89 04 24 	movq	%rax, (%rsp)
  411927:	e8 a4 ea ff ff 	callq	-5468 <runtime.(*gcControllerState).endCycle>
  41192c:	f2 0f 10 44 24 08 	movsd	8(%rsp), %xmm0
  411932:	f2 0f 11 04 24 	movsd	%xmm0, (%rsp)
  411937:	e8 64 00 00 00 	callq	100 <runtime.gcMarkTermination>
  41193c:	e9 32 ff ff ff 	jmp	-206 <runtime.gcMarkDone+0x163>
  411941:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  411949:	e8 62 8b 02 00 	callq	166754 <runtime.traceGCSTWStart>
  41194e:	eb 95 	jmp	-107 <runtime.gcMarkDone+0x1d5>
  411950:	48 8d 05 7a 84 05 00 	leaq	361594(%rip), %rax
  411957:	e8 44 4f 03 00 	callq	216900 <runtime.gcWriteBarrier>
  41195c:	e9 79 ff ff ff 	jmp	-135 <runtime.gcMarkDone+0x1ca>
  411961:	48 8d 05 20 65 09 00 	leaq	615712(%rip), %rax
  411968:	48 89 04 24 	movq	%rax, (%rsp)
  41196c:	e8 1f e9 01 00 	callq	125215 <runtime.semrelease>
  411971:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  411976:	48 83 c4 20 	addq	$32, %rsp
  41197a:	c3 	retq
  41197b:	31 c0 	xorl	%eax, %eax
  41197d:	e9 0b fe ff ff 	jmp	-501 <runtime.gcMarkDone+0x7d>
  411982:	b8 01 00 00 00 	movl	$1, %eax
  411987:	e9 01 fe ff ff 	jmp	-511 <runtime.gcMarkDone+0x7d>
  41198c:	e8 df 2b 03 00 	callq	207839 <runtime.morestack_noctxt>
  411991:	e9 7a fd ff ff 	jmp	-646 <runtime.gcMarkDone>
  411996:	cc 	int3
  411997:	cc 	int3
  411998:	cc 	int3
  411999:	cc 	int3
  41199a:	cc 	int3
  41199b:	cc 	int3
  41199c:	cc 	int3
  41199d:	cc 	int3
  41199e:	cc 	int3
  41199f:	cc 	int3

runtime.gcMarkTermination:
  4119a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4119a9:	48 8d 84 24 b8 fe ff ff 	leaq	-328(%rsp), %rax
  4119b1:	48 3b 41 10 	cmpq	16(%rcx), %rax
  4119b5:	0f 86 30 0b 00 00 	jbe	2864 <runtime.gcMarkTermination+0xb4b>
  4119bb:	48 81 ec c8 01 00 00 	subq	$456, %rsp
  4119c2:	48 89 ac 24 c0 01 00 00 	movq	%rbp, 448(%rsp)
  4119ca:	48 8d ac 24 c0 01 00 00 	leaq	448(%rsp), %rbp
  4119d2:	31 c0 	xorl	%eax, %eax
  4119d4:	48 8d 0d f9 1e 0b 00 	leaq	728825(%rip), %rcx
  4119db:	87 01 	xchgl	%eax, (%rcx)
  4119dd:	c6 05 c3 1e 0b 00 00 	movb	$0, 728771(%rip)
  4119e4:	b8 02 00 00 00 	movl	$2, %eax
  4119e9:	48 8d 0d ec 1e 0b 00 	leaq	728812(%rip), %rcx
  4119f0:	87 01 	xchgl	%eax, (%rcx)
  4119f2:	8b 05 e4 1e 0b 00 	movl	728804(%rip), %eax
  4119f8:	83 f8 01 	cmpl	$1, %eax
  4119fb:	0f 85 c4 0a 00 00 	jne	2756 <runtime.gcMarkTermination+0xb25>
  411a01:	b8 01 00 00 00 	movl	$1, %eax
  411a06:	88 05 08 20 0b 00 	movb	%al, 729096(%rip)
  411a0c:	84 c0 	testb	%al, %al
  411a0e:	0f 84 a5 0a 00 00 	je	2725 <runtime.gcMarkTermination+0xb19>
  411a14:	b8 01 00 00 00 	movl	$1, %eax
  411a19:	88 05 f1 1f 0b 00 	movb	%al, 729073(%rip)
  411a1f:	48 8b 05 1a 44 0b 00 	movq	738330(%rip), %rax
  411a26:	48 89 05 03 65 09 00 	movq	%rax, 615683(%rip)
  411a2d:	e8 fe 5f 03 00 	callq	221182 <runtime.nanotime>
  411a32:	48 8b 04 24 	movq	(%rsp), %rax
  411a36:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  411a3b:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  411a44:	48 8b 48 30 	movq	48(%rax), %rcx
  411a48:	ff 81 00 01 00 00 	incl	256(%rcx)
  411a4e:	48 8b 48 30 	movq	48(%rax), %rcx
  411a52:	48 89 8c 24 78 01 00 00 	movq	%rcx, 376(%rsp)
  411a5a:	84 00 	testb	%al, (%rax)
  411a5c:	48 c7 81 f8 00 00 00 05 00 00 00 	movq	$5, 248(%rcx)
  411a67:	8b 05 a3 1f 0b 00 	movl	728995(%rip), %eax
  411a6d:	48 8d b9 f0 00 00 00 	leaq	240(%rcx), %rdi
  411a74:	48 89 bc 24 98 01 00 00 	movq	%rdi, 408(%rsp)
  411a7c:	85 c0 	testl	%eax, %eax
  411a7e:	0f 85 24 0a 00 00 	jne	2596 <runtime.gcMarkTermination+0xb08>
  411a84:	48 8d 05 46 83 05 00 	leaq	361286(%rip), %rax
  411a8b:	48 89 81 f0 00 00 00 	movq	%rax, 240(%rcx)
  411a92:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  411a9b:	48 89 84 24 88 01 00 00 	movq	%rax, 392(%rsp)
  411aa3:	48 8b 48 30 	movq	48(%rax), %rcx
  411aa7:	c6 81 29 01 00 00 02 	movb	$2, 297(%rcx)
  411aae:	48 8b 48 30 	movq	48(%rax), %rcx
  411ab2:	48 8b 89 c0 00 00 00 	movq	192(%rcx), %rcx
  411ab9:	48 89 8c 24 80 01 00 00 	movq	%rcx, 384(%rsp)
  411ac1:	48 89 0c 24 	movq	%rcx, (%rsp)
  411ac5:	48 ba 02 00 00 00 04 00 00 00 	movabsq	$17179869186, %rdx
  411acf:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  411ad4:	e8 a7 2f 01 00 	callq	77735 <runtime.casgstatus>
  411ad9:	48 8b 84 24 80 01 00 00 	movq	384(%rsp), %rax
  411ae1:	48 c7 80 b0 00 00 00 12 00 00 00 	movq	$18, 176(%rax)
  411aec:	8b 0d 1e 1f 0b 00 	movl	728862(%rip), %ecx
  411af2:	48 8d b8 a8 00 00 00 	leaq	168(%rax), %rdi
  411af9:	85 c9 	testl	%ecx, %ecx
  411afb:	0f 85 96 09 00 00 	jne	2454 <runtime.gcMarkTermination+0xaf7>
  411b01:	48 8d 0d 9d 92 05 00 	leaq	365213(%rip), %rcx
  411b08:	48 89 88 a8 00 00 00 	movq	%rcx, 168(%rax)
  411b0f:	48 8d 05 3a 05 03 00 	leaq	197946(%rip), %rax
  411b16:	48 89 84 24 b0 01 00 00 	movq	%rax, 432(%rsp)
  411b1e:	48 8d 44 24 48 	leaq	72(%rsp), %rax
  411b23:	48 89 84 24 b8 01 00 00 	movq	%rax, 440(%rsp)
  411b2b:	48 8d 8c 24 b0 01 00 00 	leaq	432(%rsp), %rcx
  411b33:	48 89 0c 24 	movq	%rcx, (%rsp)
  411b37:	e8 e4 28 03 00 	callq	207076 <runtime.systemstack>
  411b3c:	48 8d 05 4d 05 03 00 	leaq	197965(%rip), %rax
  411b43:	48 89 84 24 a0 01 00 00 	movq	%rax, 416(%rsp)
  411b4b:	48 8d 44 24 48 	leaq	72(%rsp), %rax
  411b50:	48 89 84 24 a8 01 00 00 	movq	%rax, 424(%rsp)
  411b58:	48 8d 84 24 a0 01 00 00 	leaq	416(%rsp), %rax
  411b60:	48 89 04 24 	movq	%rax, (%rsp)
  411b64:	e8 b7 28 03 00 	callq	207031 <runtime.systemstack>
  411b69:	48 8b 84 24 88 01 00 00 	movq	392(%rsp), %rax
  411b71:	48 8b 40 30 	movq	48(%rax), %rax
  411b75:	c6 80 29 01 00 00 00 	movb	$0, 297(%rax)
  411b7c:	48 8b 84 24 80 01 00 00 	movq	384(%rsp), %rax
  411b84:	48 89 04 24 	movq	%rax, (%rsp)
  411b88:	48 b8 04 00 00 00 02 00 00 00 	movabsq	$8589934596, %rax
  411b92:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  411b97:	e8 e4 2e 01 00 	callq	77540 <runtime.casgstatus>
  411b9c:	0f b6 05 2d 1c 0a 00 	movzbl	662573(%rip), %eax
  411ba3:	84 c0 	testb	%al, %al
  411ba5:	0f 85 e2 08 00 00 	jne	2274 <runtime.gcMarkTermination+0xaed>
  411bab:	48 8b 8c 24 78 01 00 00 	movq	376(%rsp), %rcx
  411bb3:	48 c7 81 f8 00 00 00 00 00 00 00 	movq	$0, 248(%rcx)
  411bbe:	8b 15 4c 1e 0b 00 	movl	728652(%rip), %edx
  411bc4:	85 d2 	testl	%edx, %edx
  411bc6:	0f 85 ad 08 00 00 	jne	2221 <runtime.gcMarkTermination+0xad9>
  411bcc:	48 c7 81 f0 00 00 00 00 00 00 00 	movq	$0, 240(%rcx)
  411bd7:	8b 05 ff 1c 0b 00 	movl	728319(%rip), %eax
  411bdd:	85 c0 	testl	%eax, %eax
  411bdf:	0f 85 eb 08 00 00 	jne	2283 <runtime.gcMarkTermination+0xb30>
  411be5:	f2 0f 10 84 24 d0 01 00 00 	movsd	464(%rsp), %xmm0
  411bee:	f2 0f 11 04 24 	movsd	%xmm0, (%rsp)
  411bf3:	e8 58 f1 ff ff 	callq	-3752 <runtime.gcSetTriggerRatio>
  411bf8:	e8 33 5e 03 00 	callq	220723 <runtime.nanotime>
  411bfd:	48 8b 04 24 	movq	(%rsp), %rax
  411c01:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  411c06:	e8 d5 77 02 00 	callq	161749 <time.now>
  411c0b:	48 8b 04 24 	movq	(%rsp), %rax
  411c0f:	48 63 4c 24 08 	movslq	8(%rsp), %rcx
  411c14:	48 8b 15 05 63 09 00 	movq	615173(%rip), %rdx
  411c1b:	48 8b 5c 24 68 	movq	104(%rsp), %rbx
  411c20:	48 89 de 	movq	%rbx, %rsi
  411c23:	48 29 d3 	subq	%rdx, %rbx
  411c26:	48 03 1d eb 62 09 00 	addq	615147(%rip), %rbx
  411c2d:	48 89 1d e4 62 09 00 	movq	%rbx, 615140(%rip)
  411c34:	48 89 35 d5 62 09 00 	movq	%rsi, 615125(%rip)
  411c3b:	48 69 c0 00 ca 9a 3b 	imulq	$1000000000, %rax, %rax
  411c42:	48 01 c8 	addq	%rcx, %rax
  411c45:	48 8d 0d 64 2b 0b 00 	leaq	732004(%rip), %rcx
  411c4c:	48 89 c2 	movq	%rax, %rdx
  411c4f:	48 87 01 	xchgq	%rax, (%rcx)
  411c52:	48 8d 05 c7 41 0b 00 	leaq	737735(%rip), %rax
  411c59:	48 89 f1 	movq	%rsi, %rcx
  411c5c:	48 87 30 	xchgq	%rsi, (%rax)
  411c5f:	0f b6 05 5a 3b 0b 00 	movzbl	736090(%rip), %eax
  411c66:	48 8b 1d ab 62 09 00 	movq	615083(%rip), %rbx
  411c6d:	48 8d 35 4c 2b 0b 00 	leaq	731980(%rip), %rsi
  411c74:	48 89 1c c6 	movq	%rbx, (%rsi,%rax,8)
  411c78:	0f b6 05 41 3b 0b 00 	movzbl	736065(%rip), %eax
  411c7f:	48 8d 1d 3a 33 0b 00 	leaq	734010(%rip), %rbx
  411c86:	48 89 14 c3 	movq	%rdx, (%rbx,%rax,8)
  411c8a:	48 8b 05 27 2b 0b 00 	movq	731943(%rip), %rax
  411c91:	48 03 05 80 62 09 00 	addq	615040(%rip), %rax
  411c98:	48 89 05 19 2b 0b 00 	movq	%rax, 731929(%rip)
  411c9f:	48 63 05 46 62 09 00 	movslq	614982(%rip), %rax
  411ca6:	48 8b 15 53 62 09 00 	movq	614995(%rip), %rdx
  411cad:	48 2b 15 44 62 09 00 	subq	614980(%rip), %rdx
  411cb4:	48 0f af d0 	imulq	%rax, %rdx
  411cb8:	48 89 54 24 40 	movq	%rdx, 64(%rsp)
  411cbd:	48 8b 1d 74 1f 0b 00 	movq	728948(%rip), %rbx
  411cc4:	48 03 1d 65 1f 0b 00 	addq	728933(%rip), %rbx
  411ccb:	48 03 1d 6e 1f 0b 00 	addq	728942(%rip), %rbx
  411cd2:	48 8b 35 37 62 09 00 	movq	614967(%rip), %rsi
  411cd9:	48 2b 35 28 62 09 00 	subq	614952(%rip), %rsi
  411ce0:	48 0f af c6 	imulq	%rsi, %rax
  411ce4:	48 89 44 24 70 	movq	%rax, 112(%rsp)
  411ce9:	48 01 d3 	addq	%rdx, %rbx
  411cec:	48 01 c3 	addq	%rax, %rbx
  411cef:	48 03 1d ba 61 09 00 	addq	614842(%rip), %rbx
  411cf6:	48 89 1d b3 61 09 00 	movq	%rbx, 614835(%rip)
  411cfd:	48 8b 35 34 5d 09 00 	movq	613684(%rip), %rsi
  411d04:	48 29 f1 	subq	%rsi, %rcx
  411d07:	48 63 35 d2 1b 0b 00 	movslq	728018(%rip), %rsi
  411d0e:	48 0f af f1 	imulq	%rcx, %rsi
  411d12:	48 03 35 27 5d 09 00 	addq	613671(%rip), %rsi
  411d19:	0f 57 c0 	xorps	%xmm0, %xmm0
  411d1c:	f2 48 0f 2a c3 	cvtsi2sdq	%rbx, %xmm0
  411d21:	0f 57 c9 	xorps	%xmm1, %xmm1
  411d24:	f2 48 0f 2a ce 	cvtsi2sdq	%rsi, %xmm1
  411d29:	f2 0f 5e c1 	divsd	%xmm1, %xmm0
  411d2d:	f2 0f 11 05 93 3a 0b 00 	movsd	%xmm0, 735891(%rip)
  411d35:	48 c7 05 b4 5a 09 00 00 00 00 00 	movq	$0, 613044(%rip)
  411d40:	0f b6 0d 61 61 09 00 	movzbl	614753(%rip), %ecx
  411d47:	84 c9 	testb	%cl, %cl
  411d49:	74 06 	je	6 <runtime.gcMarkTermination+0x3b1>
  411d4b:	ff 05 73 3a 0b 00 	incl	735859(%rip)
  411d51:	48 8d 05 80 61 09 00 	leaq	614784(%rip), %rax
  411d58:	48 89 04 24 	movq	%rax, (%rsp)
  411d5c:	e8 bf 77 ff ff 	callq	-34881 <runtime.lock>
  411d61:	ff 05 59 3a 0b 00 	incl	735833(%rip)
  411d67:	48 8b 05 72 61 09 00 	movq	614770(%rip), %rax
  411d6e:	48 89 04 24 	movq	%rax, (%rsp)
  411d72:	e8 f9 69 01 00 	callq	92665 <runtime.injectglist>
  411d77:	48 c7 05 5e 61 09 00 00 00 00 00 	movq	$0, 614750(%rip)
  411d82:	48 8d 05 4f 61 09 00 	leaq	614735(%rip), %rax
  411d89:	48 89 04 24 	movq	%rax, (%rsp)
  411d8d:	e8 2e 79 ff ff 	callq	-34514 <runtime.unlock>
  411d92:	e8 19 b6 00 00 	callq	46617 <runtime.mProf_NextCycle>
  411d97:	48 8d 05 fa c2 05 00 	leaq	377594(%rip), %rax
  411d9e:	48 89 04 24 	movq	%rax, (%rsp)
  411da2:	e8 79 26 03 00 	callq	206457 <runtime.systemstack>
  411da7:	e8 84 b6 00 00 	callq	46724 <runtime.mProf_Flush>
  411dac:	e8 3f 7e 00 00 	callq	32319 <runtime.prepareFreeWorkbufs>
  411db1:	48 8d 05 b8 c2 05 00 	leaq	377528(%rip), %rax
  411db8:	48 89 04 24 	movq	%rax, (%rsp)
  411dbc:	e8 5f 26 03 00 	callq	206431 <runtime.systemstack>
  411dc1:	8b 05 19 1d 0b 00 	movl	728345(%rip), %eax
  411dc7:	85 c0 	testl	%eax, %eax
  411dc9:	0f 8e 2a 06 00 00 	jle	1578 <runtime.gcMarkTermination+0xa59>
  411dcf:	f2 0f 10 05 31 2d 06 00 	movsd	404785(%rip), %xmm0
  411dd7:	f2 0f 59 05 e9 39 0b 00 	mulsd	735721(%rip), %xmm0
  411ddf:	f2 0f 11 84 24 b8 00 00 00 	movsd	%xmm0, 184(%rsp)
  411de8:	48 c7 84 24 c0 00 00 00 00 00 00 00 	movq	$0, 192(%rsp)
  411df4:	0f 57 c9 	xorps	%xmm1, %xmm1
  411df7:	0f 11 8c 24 c8 00 00 00 	movups	%xmm1, 200(%rsp)
  411dff:	e8 fc fc 00 00 	callq	64764 <runtime.printlock>
  411e04:	48 8b 05 ed 60 09 00 	movq	614637(%rip), %rax
  411e0b:	48 2b 05 ae 1b 0b 00 	subq	727982(%rip), %rax
  411e12:	48 89 c1 	movq	%rax, %rcx
  411e15:	48 b8 b6 69 6c af 05 bd 37 86 	movabsq	$-8775337516792518218, %rax
  411e1f:	48 f7 e1 	mulq	%rcx
  411e22:	48 c1 ea 13 	shrq	$19, %rdx
  411e26:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  411e2b:	48 8d 84 24 c0 00 00 00 	leaq	192(%rsp), %rax
  411e33:	48 89 04 24 	movq	%rax, (%rsp)
  411e37:	48 c7 44 24 08 18 00 00 00 	movq	$24, 8(%rsp)
  411e40:	48 c7 44 24 10 18 00 00 00 	movq	$24, 16(%rsp)
  411e49:	48 c7 44 24 20 03 00 00 00 	movq	$3, 32(%rsp)
  411e52:	e8 f9 14 00 00 	callq	5369 <runtime.itoaDiv>
  411e57:	8b 05 63 39 0b 00 	movl	735587(%rip), %eax
  411e5d:	48 89 84 24 b0 00 00 00 	movq	%rax, 176(%rsp)
  411e65:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  411e6a:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  411e6f:	48 8b 5c 24 28 	movq	40(%rsp), %rbx
  411e74:	48 8d b4 24 30 01 00 00 	leaq	304(%rsp), %rsi
  411e7c:	48 89 34 24 	movq	%rsi, (%rsp)
  411e80:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  411e85:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  411e8a:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  411e8f:	e8 3c 52 02 00 	callq	152124 <runtime.slicebytetostring>
  411e94:	48 8b 44 24 28 	movq	40(%rsp), %rax
  411e99:	48 89 84 24 a8 00 00 00 	movq	%rax, 168(%rsp)
  411ea1:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  411ea6:	48 89 8c 24 90 01 00 00 	movq	%rcx, 400(%rsp)
  411eae:	e8 4d fc 00 00 	callq	64589 <runtime.printlock>
  411eb3:	48 8d 05 f1 7d 05 00 	leaq	359921(%rip), %rax
  411eba:	48 89 04 24 	movq	%rax, (%rsp)
  411ebe:	48 c7 44 24 08 03 00 00 00 	movq	$3, 8(%rsp)
  411ec7:	e8 74 05 01 00 	callq	66932 <runtime.printstring>
  411ecc:	48 8b 84 24 b0 00 00 00 	movq	176(%rsp), %rax
  411ed4:	48 89 04 24 	movq	%rax, (%rsp)
  411ed8:	e8 93 02 01 00 	callq	66195 <runtime.printuint>
  411edd:	48 8d 05 7e 7d 05 00 	leaq	359806(%rip), %rax
  411ee4:	48 89 04 24 	movq	%rax, (%rsp)
  411ee8:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  411ef1:	e8 4a 05 01 00 	callq	66890 <runtime.printstring>
  411ef6:	48 8b 84 24 90 01 00 00 	movq	400(%rsp), %rax
  411efe:	48 89 04 24 	movq	%rax, (%rsp)
  411f02:	48 8b 84 24 a8 00 00 00 	movq	168(%rsp), %rax
  411f0a:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  411f0f:	e8 2c 05 01 00 	callq	66860 <runtime.printstring>
  411f14:	48 8d 05 5f 7d 05 00 	leaq	359775(%rip), %rax
  411f1b:	48 89 04 24 	movq	%rax, (%rsp)
  411f1f:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  411f28:	e8 13 05 01 00 	callq	66835 <runtime.printstring>
  411f2d:	f2 0f 10 84 24 b8 00 00 00 	movsd	184(%rsp), %xmm0
  411f36:	f2 48 0f 2c c0 	cvttsd2si	%xmm0, %rax
  411f3b:	48 89 04 24 	movq	%rax, (%rsp)
  411f3f:	e8 3c 03 01 00 	callq	66364 <runtime.printint>
  411f44:	48 8d 05 4e 7d 05 00 	leaq	359758(%rip), %rax
  411f4b:	48 89 04 24 	movq	%rax, (%rsp)
  411f4f:	48 c7 44 24 08 03 00 00 00 	movq	$3, 8(%rsp)
  411f58:	e8 e3 04 01 00 	callq	66787 <runtime.printstring>
  411f5d:	e8 1e fc 00 00 	callq	64542 <runtime.printunlock>
  411f62:	48 8b 05 8f 5f 09 00 	movq	614287(%rip), %rax
  411f69:	48 c7 84 24 d8 00 00 00 00 00 00 00 	movq	$0, 216(%rsp)
  411f75:	0f 57 c0 	xorps	%xmm0, %xmm0
  411f78:	0f 11 84 24 e0 00 00 00 	movups	%xmm0, 224(%rsp)
  411f80:	48 8b 0d 79 5f 09 00 	movq	614265(%rip), %rcx
  411f87:	48 89 8c 24 d8 00 00 00 	movq	%rcx, 216(%rsp)
  411f8f:	48 8b 0d 72 5f 09 00 	movq	614258(%rip), %rcx
  411f96:	48 89 8c 24 e0 00 00 00 	movq	%rcx, 224(%rsp)
  411f9e:	48 8b 0d 6b 5f 09 00 	movq	614251(%rip), %rcx
  411fa5:	48 89 8c 24 e8 00 00 00 	movq	%rcx, 232(%rsp)
  411fad:	31 c9 	xorl	%ecx, %ecx
  411faf:	e9 ad 00 00 00 	jmp	173 <runtime.gcMarkTermination+0x6c1>
  411fb4:	48 8d 8c 24 c0 00 00 00 	leaq	192(%rsp), %rcx
  411fbc:	48 89 0c 24 	movq	%rcx, (%rsp)
  411fc0:	48 c7 44 24 08 18 00 00 00 	movq	$24, 8(%rsp)
  411fc9:	48 c7 44 24 10 18 00 00 00 	movq	$24, 16(%rsp)
  411fd2:	48 29 c2 	subq	%rax, %rdx
  411fd5:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  411fda:	e8 51 14 00 00 	callq	5201 <runtime.fmtNSAsMS>
  411fdf:	48 8b 44 24 20 	movq	32(%rsp), %rax
  411fe4:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  411fe9:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  411fee:	48 8d 9c 24 10 01 00 00 	leaq	272(%rsp), %rbx
  411ff6:	48 89 1c 24 	movq	%rbx, (%rsp)
  411ffa:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  411fff:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  412004:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  412009:	e8 c2 50 02 00 	callq	151746 <runtime.slicebytetostring>
  41200e:	48 8b 44 24 20 	movq	32(%rsp), %rax
  412013:	48 89 84 24 90 01 00 00 	movq	%rax, 400(%rsp)
  41201b:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  412020:	48 89 8c 24 a8 00 00 00 	movq	%rcx, 168(%rsp)
  412028:	e8 d3 fa 00 00 	callq	64211 <runtime.printlock>
  41202d:	48 8b 84 24 90 01 00 00 	movq	400(%rsp), %rax
  412035:	48 89 04 24 	movq	%rax, (%rsp)
  412039:	48 8b 84 24 a8 00 00 00 	movq	168(%rsp), %rax
  412041:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  412046:	e8 f5 03 01 00 	callq	66549 <runtime.printstring>
  41204b:	e8 30 fb 00 00 	callq	64304 <runtime.printunlock>
  412050:	48 8b 44 24 78 	movq	120(%rsp), %rax
  412055:	48 8d 48 01 	leaq	1(%rax), %rcx
  412059:	0f 57 c0 	xorps	%xmm0, %xmm0
  41205c:	48 8b 44 24 58 	movq	88(%rsp), %rax
  412061:	48 83 f9 03 	cmpq	$3, %rcx
  412065:	7d 52 	jge	82 <runtime.gcMarkTermination+0x719>
  412067:	48 89 4c 24 78 	movq	%rcx, 120(%rsp)
  41206c:	48 8b 94 cc d8 00 00 00 	movq	216(%rsp,%rcx,8), %rdx
  412074:	48 89 54 24 58 	movq	%rdx, 88(%rsp)
  412079:	48 85 c9 	testq	%rcx, %rcx
  41207c:	0f 84 32 ff ff ff 	je	-206 <runtime.gcMarkTermination+0x614>
  412082:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  412087:	e8 74 fa 00 00 	callq	64116 <runtime.printlock>
  41208c:	48 8d 05 c0 7b 05 00 	leaq	359360(%rip), %rax
  412093:	48 89 04 24 	movq	%rax, (%rsp)
  412097:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  4120a0:	e8 9b 03 01 00 	callq	66459 <runtime.printstring>
  4120a5:	e8 d6 fa 00 00 	callq	64214 <runtime.printunlock>
  4120aa:	48 8b 44 24 50 	movq	80(%rsp), %rax
  4120af:	48 8b 54 24 58 	movq	88(%rsp), %rdx
  4120b4:	e9 fb fe ff ff 	jmp	-261 <runtime.gcMarkTermination+0x614>
  4120b9:	e8 42 fa 00 00 	callq	64066 <runtime.printlock>
  4120be:	48 8d 05 36 83 05 00 	leaq	361270(%rip), %rax
  4120c5:	48 89 04 24 	movq	%rax, (%rsp)
  4120c9:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  4120d2:	e8 69 03 01 00 	callq	66409 <runtime.printstring>
  4120d7:	e8 a4 fa 00 00 	callq	64164 <runtime.printunlock>
  4120dc:	48 c7 84 24 50 01 00 00 00 00 00 00 	movq	$0, 336(%rsp)
  4120e8:	0f 57 c0 	xorps	%xmm0, %xmm0
  4120eb:	0f 11 84 24 58 01 00 00 	movups	%xmm0, 344(%rsp)
  4120f3:	0f 11 84 24 68 01 00 00 	movups	%xmm0, 360(%rsp)
  4120fb:	48 8b 44 24 40 	movq	64(%rsp), %rax
  412100:	48 89 84 24 50 01 00 00 	movq	%rax, 336(%rsp)
  412108:	48 8b 05 21 1b 0b 00 	movq	727841(%rip), %rax
  41210f:	48 89 84 24 58 01 00 00 	movq	%rax, 344(%rsp)
  412117:	48 8b 05 22 1b 0b 00 	movq	727842(%rip), %rax
  41211e:	48 03 05 13 1b 0b 00 	addq	727827(%rip), %rax
  412125:	48 89 84 24 60 01 00 00 	movq	%rax, 352(%rsp)
  41212d:	48 8b 05 14 1b 0b 00 	movq	727828(%rip), %rax
  412134:	48 89 84 24 68 01 00 00 	movq	%rax, 360(%rsp)
  41213c:	48 8b 44 24 70 	movq	112(%rsp), %rax
  412141:	48 89 84 24 70 01 00 00 	movq	%rax, 368(%rsp)
  412149:	31 c0 	xorl	%eax, %eax
  41214b:	e9 a9 00 00 00 	jmp	169 <runtime.gcMarkTermination+0x859>
  412150:	48 8d 84 24 c0 00 00 00 	leaq	192(%rsp), %rax
  412158:	48 89 04 24 	movq	%rax, (%rsp)
  41215c:	48 c7 44 24 08 18 00 00 00 	movq	$24, 8(%rsp)
  412165:	48 c7 44 24 10 18 00 00 00 	movq	$24, 16(%rsp)
  41216e:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  412173:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  412178:	e8 b3 12 00 00 	callq	4787 <runtime.fmtNSAsMS>
  41217d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  412182:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  412187:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  41218c:	48 8d 9c 24 f0 00 00 00 	leaq	240(%rsp), %rbx
  412194:	48 89 1c 24 	movq	%rbx, (%rsp)
  412198:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  41219d:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  4121a2:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4121a7:	e8 24 4f 02 00 	callq	151332 <runtime.slicebytetostring>
  4121ac:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4121b1:	48 89 84 24 a8 00 00 00 	movq	%rax, 168(%rsp)
  4121b9:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  4121be:	48 89 8c 24 90 01 00 00 	movq	%rcx, 400(%rsp)
  4121c6:	e8 35 f9 00 00 	callq	63797 <runtime.printlock>
  4121cb:	48 8b 84 24 90 01 00 00 	movq	400(%rsp), %rax
  4121d3:	48 89 04 24 	movq	%rax, (%rsp)
  4121d7:	48 8b 84 24 a8 00 00 00 	movq	168(%rsp), %rax
  4121df:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4121e4:	e8 57 02 01 00 	callq	66135 <runtime.printstring>
  4121e9:	e8 92 f9 00 00 	callq	63890 <runtime.printunlock>
  4121ee:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  4121f6:	48 ff c0 	incq	%rax
  4121f9:	48 83 f8 05 	cmpq	$5, %rax
  4121fd:	0f 8d 87 00 00 00 	jge	135 <runtime.gcMarkTermination+0x8ea>
  412203:	48 89 84 24 80 00 00 00 	movq	%rax, 128(%rsp)
  41220b:	48 8b 8c c4 50 01 00 00 	movq	336(%rsp,%rax,8), %rcx
  412213:	48 89 4c 24 60 	movq	%rcx, 96(%rsp)
  412218:	48 83 f8 02 	cmpq	$2, %rax
  41221c:	75 28 	jne	40 <runtime.gcMarkTermination+0x8a6>
  41221e:	e8 dd f8 00 00 	callq	63709 <runtime.printlock>
  412223:	48 8d 05 2d 7a 05 00 	leaq	358957(%rip), %rax
  41222a:	48 89 04 24 	movq	%rax, (%rsp)
  41222e:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  412237:	e8 04 02 01 00 	callq	66052 <runtime.printstring>
  41223c:	e8 3f f9 00 00 	callq	63807 <runtime.printunlock>
  412241:	e9 0a ff ff ff 	jmp	-246 <runtime.gcMarkTermination+0x7b0>
  412246:	48 83 f8 03 	cmpq	$3, %rax
  41224a:	74 d2 	je	-46 <runtime.gcMarkTermination+0x87e>
  41224c:	48 85 c0 	testq	%rax, %rax
  41224f:	0f 84 fb fe ff ff 	je	-261 <runtime.gcMarkTermination+0x7b0>
  412255:	e8 a6 f8 00 00 	callq	63654 <runtime.printlock>
  41225a:	48 8d 05 f2 79 05 00 	leaq	358898(%rip), %rax
  412261:	48 89 04 24 	movq	%rax, (%rsp)
  412265:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  41226e:	e8 cd 01 01 00 	callq	65997 <runtime.printstring>
  412273:	e8 08 f9 00 00 	callq	63752 <runtime.printunlock>
  412278:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  412280:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  412285:	e9 c6 fe ff ff 	jmp	-314 <runtime.gcMarkTermination+0x7b0>
  41228a:	48 63 05 5f 5c 09 00 	movslq	613471(%rip), %rax
  412291:	48 89 84 24 a0 00 00 00 	movq	%rax, 160(%rsp)
  412299:	48 8b 0d 88 5c 09 00 	movq	613512(%rip), %rcx
  4122a0:	48 89 8c 24 b0 00 00 00 	movq	%rcx, 176(%rsp)
  4122a8:	48 8b 15 81 5c 09 00 	movq	613505(%rip), %rdx
  4122af:	48 89 94 24 98 00 00 00 	movq	%rdx, 152(%rsp)
  4122b7:	48 8b 1d 7a 5c 09 00 	movq	613498(%rip), %rbx
  4122be:	48 89 9c 24 90 00 00 00 	movq	%rbx, 144(%rsp)
  4122c6:	48 8b 35 73 5c 09 00 	movq	613491(%rip), %rsi
  4122cd:	48 89 b4 24 88 00 00 00 	movq	%rsi, 136(%rsp)
  4122d5:	e8 26 f8 00 00 	callq	63526 <runtime.printlock>
  4122da:	48 8d 05 a6 7d 05 00 	leaq	359846(%rip), %rax
  4122e1:	48 89 04 24 	movq	%rax, (%rsp)
  4122e5:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  4122ee:	e8 4d 01 01 00 	callq	65869 <runtime.printstring>
  4122f3:	48 8b 84 24 b0 00 00 00 	movq	176(%rsp), %rax
  4122fb:	48 c1 e8 14 	shrq	$20, %rax
  4122ff:	48 89 04 24 	movq	%rax, (%rsp)
  412303:	e8 68 fe 00 00 	callq	65128 <runtime.printuint>
  412308:	48 8d 05 5f 79 05 00 	leaq	358751(%rip), %rax
  41230f:	48 89 04 24 	movq	%rax, (%rsp)
  412313:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  41231c:	e8 1f 01 01 00 	callq	65823 <runtime.printstring>
  412321:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  412329:	48 c1 e8 14 	shrq	$20, %rax
  41232d:	48 89 04 24 	movq	%rax, (%rsp)
  412331:	e8 3a fe 00 00 	callq	65082 <runtime.printuint>
  412336:	48 8d 05 31 79 05 00 	leaq	358705(%rip), %rax
  41233d:	48 89 04 24 	movq	%rax, (%rsp)
  412341:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  41234a:	e8 f1 00 01 00 	callq	65777 <runtime.printstring>
  41234f:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  412357:	48 c1 e8 14 	shrq	$20, %rax
  41235b:	48 89 04 24 	movq	%rax, (%rsp)
  41235f:	e8 0c fe 00 00 	callq	65036 <runtime.printuint>
  412364:	48 8d 05 df 79 05 00 	leaq	358879(%rip), %rax
  41236b:	48 89 04 24 	movq	%rax, (%rsp)
  41236f:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  412378:	e8 c3 00 01 00 	callq	65731 <runtime.printstring>
  41237d:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  412385:	48 c1 e8 14 	shrq	$20, %rax
  412389:	48 89 04 24 	movq	%rax, (%rsp)
  41238d:	e8 de fd 00 00 	callq	64990 <runtime.printuint>
  412392:	48 8d 05 dd 7e 05 00 	leaq	360157(%rip), %rax
  412399:	48 89 04 24 	movq	%rax, (%rsp)
  41239d:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  4123a6:	e8 95 00 01 00 	callq	65685 <runtime.printstring>
  4123ab:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  4123b3:	48 89 04 24 	movq	%rax, (%rsp)
  4123b7:	e8 c4 fe 00 00 	callq	65220 <runtime.printint>
  4123bc:	48 8d 05 a1 78 05 00 	leaq	358561(%rip), %rax
  4123c3:	48 89 04 24 	movq	%rax, (%rsp)
  4123c7:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  4123d0:	e8 6b 00 01 00 	callq	65643 <runtime.printstring>
  4123d5:	e8 a6 f7 00 00 	callq	63398 <runtime.printunlock>
  4123da:	0f b6 05 c7 5a 09 00 	movzbl	613063(%rip), %eax
  4123e1:	84 c0 	testb	%al, %al
  4123e3:	75 6c 	jne	108 <runtime.gcMarkTermination+0xab1>
  4123e5:	e8 16 f7 00 00 	callq	63254 <runtime.printlock>
  4123ea:	e8 a1 f9 00 00 	callq	63905 <runtime.printnl>
  4123ef:	e8 8c f7 00 00 	callq	63372 <runtime.printunlock>
  4123f4:	e8 87 f7 00 00 	callq	63367 <runtime.printunlock>
  4123f9:	48 8d 05 0c 2c 09 00 	leaq	601100(%rip), %rax
  412400:	48 89 04 24 	movq	%rax, (%rsp)
  412404:	e8 87 de 01 00 	callq	122503 <runtime.semrelease>
  412409:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  412412:	48 8b 8c 24 78 01 00 00 	movq	376(%rsp), %rcx
  41241a:	8b 91 00 01 00 00 	movl	256(%rcx), %edx
  412420:	8d 5a ff 	leal	-1(%rdx), %ebx
  412423:	89 99 00 01 00 00 	movl	%ebx, 256(%rcx)
  412429:	83 fa 01 	cmpl	$1, %edx
  41242c:	75 13 	jne	19 <runtime.gcMarkTermination+0xaa1>
  41242e:	0f b6 88 c0 00 00 00 	movzbl	192(%rax), %ecx
  412435:	84 c9 	testb	%cl, %cl
  412437:	74 08 	je	8 <runtime.gcMarkTermination+0xaa1>
  412439:	48 c7 40 10 de fa ff ff 	movq	$-1314, 16(%rax)
  412441:	48 8b ac 24 c0 01 00 00 	movq	448(%rsp), %rbp
  412449:	48 81 c4 c8 01 00 00 	addq	$456, %rsp
  412450:	c3 	retq
  412451:	e8 aa f6 00 00 	callq	63146 <runtime.printlock>
  412456:	48 8d 05 e2 7b 05 00 	leaq	359394(%rip), %rax
  41245d:	48 89 04 24 	movq	%rax, (%rsp)
  412461:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  41246a:	e8 d1 ff 00 00 	callq	65489 <runtime.printstring>
  41246f:	e8 0c f7 00 00 	callq	63244 <runtime.printunlock>
  412474:	e9 6c ff ff ff 	jmp	-148 <runtime.gcMarkTermination+0xa45>
  412479:	48 8b bc 24 98 01 00 00 	movq	408(%rsp), %rdi
  412481:	31 c0 	xorl	%eax, %eax
  412483:	e8 18 44 03 00 	callq	214040 <runtime.gcWriteBarrier>
  412488:	e9 4a f7 ff ff 	jmp	-2230 <runtime.gcMarkTermination+0x237>
  41248d:	e8 be 7f 02 00 	callq	163774 <runtime.traceGCDone>
  412492:	e9 14 f7 ff ff 	jmp	-2284 <runtime.gcMarkTermination+0x20b>
  412497:	48 8d 05 07 89 05 00 	leaq	362759(%rip), %rax
  41249e:	e8 fd 43 03 00 	callq	214013 <runtime.gcWriteBarrier>
  4124a3:	e9 67 f6 ff ff 	jmp	-2457 <runtime.gcMarkTermination+0x16f>
  4124a8:	48 8d 05 22 79 05 00 	leaq	358690(%rip), %rax
  4124af:	e8 ec 43 03 00 	callq	213996 <runtime.gcWriteBarrier>
  4124b4:	e9 d9 f5 ff ff 	jmp	-2599 <runtime.gcMarkTermination+0xf2>
  4124b9:	0f b6 05 55 15 0b 00 	movzbl	726357(%rip), %eax
  4124c0:	e9 54 f5 ff ff 	jmp	-2732 <runtime.gcMarkTermination+0x79>
  4124c5:	83 f8 02 	cmpl	$2, %eax
  4124c8:	0f 94 c0 	sete	%al
  4124cb:	e9 36 f5 ff ff 	jmp	-2762 <runtime.gcMarkTermination+0x66>
  4124d0:	48 8d 05 86 9d 05 00 	leaq	368006(%rip), %rax
  4124d7:	48 89 04 24 	movq	%rax, (%rsp)
  4124db:	48 c7 44 24 08 1d 00 00 00 	movq	$29, 8(%rsp)
  4124e4:	e8 e7 ec 00 00 	callq	60647 <runtime.throw>
  4124e9:	0f 0b 	ud2
  4124eb:	e8 80 20 03 00 	callq	204928 <runtime.morestack_noctxt>
  4124f0:	e9 ab f4 ff ff 	jmp	-2901 <runtime.gcMarkTermination>
  4124f5:	cc 	int3
  4124f6:	cc 	int3
  4124f7:	cc 	int3
  4124f8:	cc 	int3
  4124f9:	cc 	int3
  4124fa:	cc 	int3
  4124fb:	cc 	int3
  4124fc:	cc 	int3
  4124fd:	cc 	int3
  4124fe:	cc 	int3
  4124ff:	cc 	int3

runtime.gcBgMarkStartWorkers:
  412500:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  412509:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41250d:	0f 86 ae 00 00 00 	jbe	174 <runtime.gcBgMarkStartWorkers+0xc1>
  412513:	48 83 ec 38 	subq	$56, %rsp
  412517:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  41251c:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  412521:	48 8b 05 90 51 09 00 	movq	610704(%rip), %rax
  412528:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  41252d:	48 8b 0d 7c 51 09 00 	movq	610684(%rip), %rcx
  412534:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  412539:	31 d2 	xorl	%edx, %edx
  41253b:	eb 03 	jmp	3 <runtime.gcBgMarkStartWorkers+0x40>
  41253d:	48 ff c2 	incq	%rdx
  412540:	48 39 c2 	cmpq	%rax, %rdx
  412543:	7d 72 	jge	114 <runtime.gcBgMarkStartWorkers+0xb7>
  412545:	48 8b 1c d1 	movq	(%rcx,%rdx,8), %rbx
  412549:	84 03 	testb	%al, (%rbx)
  41254b:	48 8b b3 58 12 00 00 	movq	4696(%rbx), %rsi
  412552:	48 85 f6 	testq	%rsi, %rsi
  412555:	75 e6 	jne	-26 <runtime.gcBgMarkStartWorkers+0x3d>
  412557:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  41255c:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  412561:	c7 04 24 08 00 00 00 	movl	$8, (%rsp)
  412568:	48 8d 05 11 bb 05 00 	leaq	375569(%rip), %rax
  41256f:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  412574:	e8 77 7d 01 00 	callq	97655 <runtime.newproc>
  412579:	48 8d 05 10 59 09 00 	leaq	612624(%rip), %rax
  412580:	48 89 04 24 	movq	%rax, (%rsp)
  412584:	48 c7 44 24 08 ff ff ff ff 	movq	$-1, 8(%rsp)
  41258d:	e8 fe 75 ff ff 	callq	-35330 <runtime.notetsleepg>
  412592:	48 8d 05 f7 58 09 00 	leaq	612599(%rip), %rax
  412599:	84 00 	testb	%al, (%rax)
  41259b:	48 c7 05 ea 58 09 00 00 00 00 00 	movq	$0, 612586(%rip)
  4125a6:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4125ab:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  4125b0:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  4125b5:	eb 86 	jmp	-122 <runtime.gcBgMarkStartWorkers+0x3d>
  4125b7:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  4125bc:	48 83 c4 38 	addq	$56, %rsp
  4125c0:	c3 	retq
  4125c1:	e8 aa 1f 03 00 	callq	204714 <runtime.morestack_noctxt>
  4125c6:	e9 35 ff ff ff 	jmp	-203 <runtime.gcBgMarkStartWorkers>
  4125cb:	cc 	int3
  4125cc:	cc 	int3
  4125cd:	cc 	int3
  4125ce:	cc 	int3
  4125cf:	cc 	int3

runtime.gcBgMarkWorker:
  4125d0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4125d9:	48 8d 44 24 f8 	leaq	-8(%rsp), %rax
  4125de:	48 3b 41 10 	cmpq	16(%rcx), %rax
  4125e2:	0f 86 e8 04 00 00 	jbe	1256 <runtime.gcBgMarkWorker+0x500>
  4125e8:	48 81 ec 88 00 00 00 	subq	$136, %rsp
  4125ef:	48 89 ac 24 80 00 00 00 	movq	%rbp, 128(%rsp)
  4125f7:	48 8d ac 24 80 00 00 00 	leaq	128(%rsp), %rbp
  4125ff:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  412608:	48 89 4c 24 50 	movq	%rcx, 80(%rsp)
  41260d:	48 8b 51 30 	movq	48(%rcx), %rdx
  412611:	48 c7 82 f8 00 00 00 0e 00 00 00 	movq	$14, 248(%rdx)
  41261c:	8b 1d ee 13 0b 00 	movl	725998(%rip), %ebx
  412622:	48 8d ba f0 00 00 00 	leaq	240(%rdx), %rdi
  412629:	85 db 	testl	%ebx, %ebx
  41262b:	0f 85 44 03 00 00 	jne	836 <runtime.gcBgMarkWorker+0x3a5>
  412631:	48 8d 05 fa 81 05 00 	leaq	360954(%rip), %rax
  412638:	48 89 82 f0 00 00 00 	movq	%rax, 240(%rdx)
  41263f:	48 8d 05 ba b5 04 00 	leaq	308666(%rip), %rax
  412646:	48 89 04 24 	movq	%rax, (%rsp)
  41264a:	e8 d1 8a ff ff 	callq	-29999 <runtime.newobject>
  41264f:	48 8b 44 24 50 	movq	80(%rsp), %rax
  412654:	48 8b 48 30 	movq	48(%rax), %rcx
  412658:	48 8b 54 24 08 	movq	8(%rsp), %rdx
  41265d:	48 c7 81 f8 00 00 00 00 00 00 00 	movq	$0, 248(%rcx)
  412668:	8b 1d a2 13 0b 00 	movl	725922(%rip), %ebx
  41266e:	48 8d b9 f0 00 00 00 	leaq	240(%rcx), %rdi
  412675:	85 db 	testl	%ebx, %ebx
  412677:	0f 85 ec 02 00 00 	jne	748 <runtime.gcBgMarkWorker+0x399>
  41267d:	48 c7 81 f0 00 00 00 00 00 00 00 	movq	$0, 240(%rcx)
  412688:	48 89 54 24 60 	movq	%rdx, 96(%rsp)
  41268d:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  412696:	48 8b 48 30 	movq	48(%rax), %rcx
  41269a:	ff 81 00 01 00 00 	incl	256(%rcx)
  4126a0:	48 8b 40 30 	movq	48(%rax), %rax
  4126a4:	48 89 02 	movq	%rax, (%rdx)
  4126a7:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  4126af:	48 89 42 08 	movq	%rax, 8(%rdx)
  4126b3:	48 8d 05 d6 57 09 00 	leaq	612310(%rip), %rax
  4126ba:	48 89 04 24 	movq	%rax, (%rsp)
  4126be:	e8 cd 70 ff ff 	callq	-36659 <runtime.notewakeup>
  4126c3:	48 8d 05 ae b9 05 00 	leaq	375214(%rip), %rax
  4126ca:	48 89 04 24 	movq	%rax, (%rsp)
  4126ce:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  4126d3:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4126d8:	48 8d 15 63 83 05 00 	leaq	361315(%rip), %rdx
  4126df:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  4126e4:	48 c7 44 24 18 10 00 00 00 	movq	$16, 24(%rsp)
  4126ed:	c6 44 24 20 14 	movb	$20, 32(%rsp)
  4126f2:	48 c7 44 24 28 00 00 00 00 	movq	$0, 40(%rsp)
  4126fb:	e8 f0 06 01 00 	callq	67312 <runtime.gopark>
  412700:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  412708:	84 00 	testb	%al, (%rax)
  41270a:	48 8b 88 58 12 00 00 	movq	4696(%rax), %rcx
  412711:	48 8d 90 58 12 00 00 	leaq	4696(%rax), %rdx
  412718:	48 8b 5c 24 50 	movq	80(%rsp), %rbx
  41271d:	48 39 d9 	cmpq	%rbx, %rcx
  412720:	0f 85 33 02 00 00 	jne	563 <runtime.gcBgMarkWorker+0x389>
  412726:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41272f:	48 8b 71 30 	movq	48(%rcx), %rsi
  412733:	ff 86 00 01 00 00 	incl	256(%rsi)
  412739:	48 8b 49 30 	movq	48(%rcx), %rcx
  41273d:	48 8b 74 24 60 	movq	96(%rsp), %rsi
  412742:	48 89 0e 	movq	%rcx, (%rsi)
  412745:	8b 0d 89 11 0b 00 	movl	725385(%rip), %ecx
  41274b:	85 c9 	testl	%ecx, %ecx
  41274d:	0f 84 62 03 00 00 	je	866 <runtime.gcBgMarkWorker+0x4e5>
  412753:	48 89 54 24 58 	movq	%rdx, 88(%rsp)
  412758:	e8 d3 52 03 00 	callq	217811 <runtime.nanotime>
  41275d:	48 8b 04 24 	movq	(%rsp), %rax
  412761:	48 8b 8c 24 90 00 00 00 	movq	144(%rsp), %rcx
  412769:	48 89 81 68 12 00 00 	movq	%rax, 4712(%rcx)
  412770:	ba ff ff ff ff 	movl	$4294967295, %edx
  412775:	48 8d 1d c4 56 09 00 	leaq	612036(%rip), %rbx
  41277c:	f0 	lock
  41277d:	0f c1 13 	xaddl	%edx, (%rbx)
  412780:	ff ca 	decl	%edx
  412782:	8b 35 a8 56 09 00 	movl	612008(%rip), %esi
  412788:	39 f2 	cmpl	%esi, %edx
  41278a:	0f 84 a7 02 00 00 	je	679 <runtime.gcBgMarkWorker+0x467>
  412790:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  412795:	48 8d 05 74 fb 02 00 	leaq	195444(%rip), %rax
  41279c:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  4127a1:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  4127a6:	48 89 54 24 70 	movq	%rdx, 112(%rsp)
  4127ab:	48 89 4c 24 78 	movq	%rcx, 120(%rsp)
  4127b0:	48 8d 5c 24 68 	leaq	104(%rsp), %rbx
  4127b5:	48 89 1c 24 	movq	%rbx, (%rsp)
  4127b9:	e8 62 1c 03 00 	callq	203874 <runtime.systemstack>
  4127be:	0f b6 05 e2 10 0b 00 	movzbl	725218(%rip), %eax
  4127c5:	84 c0 	testb	%al, %al
  4127c7:	0f 85 6f 01 00 00 	jne	367 <runtime.gcBgMarkWorker+0x36c>
  4127cd:	e8 5e 52 03 00 	callq	217694 <runtime.nanotime>
  4127d2:	48 8b 04 24 	movq	(%rsp), %rax
  4127d6:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  4127db:	48 29 c8 	subq	%rcx, %rax
  4127de:	48 8b 8c 24 90 00 00 00 	movq	144(%rsp), %rcx
  4127e6:	48 8b 91 60 12 00 00 	movq	4704(%rcx), %rdx
  4127ed:	48 85 d2 	testq	%rdx, %rdx
  4127f0:	0f 85 08 01 00 00 	jne	264 <runtime.gcBgMarkWorker+0x32e>
  4127f6:	48 8d 15 3b 14 0b 00 	leaq	726075(%rip), %rdx
  4127fd:	f0 	lock
  4127fe:	48 0f c1 02 	xaddq	%rax, (%rdx)
  412802:	b8 01 00 00 00 	movl	$1, %eax
  412807:	48 8d 15 4a 14 0b 00 	leaq	726090(%rip), %rdx
  41280e:	f0 	lock
  41280f:	48 0f c1 02 	xaddq	%rax, (%rdx)
  412813:	b8 01 00 00 00 	movl	$1, %eax
  412818:	48 8d 15 21 56 09 00 	leaq	611873(%rip), %rdx
  41281f:	f0 	lock
  412820:	0f c1 02 	xaddl	%eax, (%rdx)
  412823:	ff c0 	incl	%eax
  412825:	8b 15 05 56 09 00 	movl	611845(%rip), %edx
  41282b:	39 d0 	cmpl	%edx, %eax
  41282d:	0f 87 53 01 00 00 	ja	339 <runtime.gcBgMarkWorker+0x3b6>
  412833:	0f 85 8a fe ff ff 	jne	-374 <runtime.gcBgMarkWorker+0xf3>
  412839:	48 8b 05 60 55 09 00 	movq	611680(%rip), %rax
  412840:	48 85 c0 	testq	%rax, %rax
  412843:	0f 85 ab 00 00 00 	jne	171 <runtime.gcBgMarkWorker+0x324>
  412849:	8b 05 d9 55 09 00 	movl	611801(%rip), %eax
  41284f:	8b 15 d7 55 09 00 	movl	611799(%rip), %edx
  412855:	39 d0 	cmpl	%edx, %eax
  412857:	0f 83 90 00 00 00 	jae	144 <runtime.gcBgMarkWorker+0x31d>
  41285d:	b8 01 00 00 00 	movl	$1, %eax
  412862:	84 c0 	testb	%al, %al
  412864:	0f 85 59 fe ff ff 	jne	-423 <runtime.gcBgMarkWorker+0xf3>
  41286a:	48 8b 44 24 58 	movq	88(%rsp), %rax
  41286f:	84 00 	testb	%al, (%rax)
  412871:	31 c0 	xorl	%eax, %eax
  412873:	48 89 81 58 12 00 00 	movq	%rax, 4696(%rcx)
  41287a:	48 8b 44 24 60 	movq	96(%rsp), %rax
  41287f:	48 8b 10 	movq	(%rax), %rdx
  412882:	64 48 8b 1c 25 f8 ff ff ff 	movq	%fs:-8, %rbx
  41288b:	8b b2 00 01 00 00 	movl	256(%rdx), %esi
  412891:	8d 7e ff 	leal	-1(%rsi), %edi
  412894:	89 ba 00 01 00 00 	movl	%edi, 256(%rdx)
  41289a:	83 fe 01 	cmpl	$1, %esi
  41289d:	75 13 	jne	19 <runtime.gcBgMarkWorker+0x2e2>
  41289f:	0f b6 93 c0 00 00 00 	movzbl	192(%rbx), %edx
  4128a6:	84 d2 	testb	%dl, %dl
  4128a8:	74 08 	je	8 <runtime.gcBgMarkWorker+0x2e2>
  4128aa:	48 c7 43 10 de fa ff ff 	movq	$-1314, 16(%rbx)
  4128b2:	e8 59 ee ff ff 	callq	-4519 <runtime.gcMarkDone>
  4128b7:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4128c0:	48 8b 48 30 	movq	48(%rax), %rcx
  4128c4:	ff 81 00 01 00 00 	incl	256(%rcx)
  4128ca:	48 8b 40 30 	movq	48(%rax), %rax
  4128ce:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  4128d3:	48 89 01 	movq	%rax, (%rcx)
  4128d6:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  4128de:	48 89 c2 	movq	%rax, %rdx
  4128e1:	48 89 41 08 	movq	%rax, 8(%rcx)
  4128e5:	48 89 d1 	movq	%rdx, %rcx
  4128e8:	e9 d6 fd ff ff 	jmp	-554 <runtime.gcBgMarkWorker+0xf3>
  4128ed:	31 c0 	xorl	%eax, %eax
  4128ef:	e9 6e ff ff ff 	jmp	-146 <runtime.gcBgMarkWorker+0x292>
  4128f4:	b8 01 00 00 00 	movl	$1, %eax
  4128f9:	e9 64 ff ff ff 	jmp	-156 <runtime.gcBgMarkWorker+0x292>
  4128fe:	48 83 fa 01 	cmpq	$1, %rdx
  412902:	75 1d 	jne	29 <runtime.gcBgMarkWorker+0x351>
  412904:	48 8d 15 35 13 0b 00 	leaq	725813(%rip), %rdx
  41290b:	48 89 c3 	movq	%rax, %rbx
  41290e:	f0 	lock
  41290f:	48 0f c1 02 	xaddq	%rax, (%rdx)
  412913:	f0 	lock
  412914:	48 0f c1 99 50 12 00 00 	xaddq	%rbx, 4688(%rcx)
  41291c:	e9 f2 fe ff ff 	jmp	-270 <runtime.gcBgMarkWorker+0x243>
  412921:	48 83 fa 02 	cmpq	$2, %rdx
  412925:	0f 85 e8 fe ff ff 	jne	-280 <runtime.gcBgMarkWorker+0x243>
  41292b:	48 8d 15 16 13 0b 00 	leaq	725782(%rip), %rdx
  412932:	f0 	lock
  412933:	48 0f c1 02 	xaddq	%rax, (%rdx)
  412937:	e9 d7 fe ff ff 	jmp	-297 <runtime.gcBgMarkWorker+0x243>
  41293c:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  412944:	48 8d 88 70 12 00 00 	leaq	4720(%rax), %rcx
  41294b:	48 89 0c 24 	movq	%rcx, (%rsp)
  41294f:	e8 2c 69 00 00 	callq	26924 <runtime.(*gcWork).dispose>
  412954:	e9 74 fe ff ff 	jmp	-396 <runtime.gcBgMarkWorker+0x1fd>
  412959:	48 8b ac 24 80 00 00 00 	movq	128(%rsp), %rbp
  412961:	48 81 c4 88 00 00 00 	addq	$136, %rsp
  412968:	c3 	retq
  412969:	31 c0 	xorl	%eax, %eax
  41296b:	e8 30 3f 03 00 	callq	212784 <runtime.gcWriteBarrier>
  412970:	e9 13 fd ff ff 	jmp	-749 <runtime.gcBgMarkWorker+0xb8>
  412975:	48 8d 05 b6 7e 05 00 	leaq	360118(%rip), %rax
  41297c:	e8 1f 3f 03 00 	callq	212767 <runtime.gcWriteBarrier>
  412981:	e9 b9 fc ff ff 	jmp	-839 <runtime.gcBgMarkWorker+0x6f>
  412986:	89 44 24 34 	movl	%eax, 52(%rsp)
  41298a:	89 54 24 3c 	movl	%edx, 60(%rsp)
  41298e:	48 8b 81 60 12 00 00 	movq	4704(%rcx), %rax
  412995:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  41299a:	e8 61 f1 00 00 	callq	61793 <runtime.printlock>
  41299f:	48 8d 05 65 99 05 00 	leaq	366949(%rip), %rax
  4129a6:	48 89 04 24 	movq	%rax, (%rsp)
  4129aa:	48 c7 44 24 08 1d 00 00 00 	movq	$29, 8(%rsp)
  4129b3:	e8 88 fa 00 00 	callq	64136 <runtime.printstring>
  4129b8:	48 8b 44 24 48 	movq	72(%rsp), %rax
  4129bd:	48 89 04 24 	movq	%rax, (%rsp)
  4129c1:	e8 ba f8 00 00 	callq	63674 <runtime.printint>
  4129c6:	48 8d 05 19 7d 05 00 	leaq	359705(%rip), %rax
  4129cd:	48 89 04 24 	movq	%rax, (%rsp)
  4129d1:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  4129da:	e8 61 fa 00 00 	callq	64097 <runtime.printstring>
  4129df:	8b 44 24 34 	movl	52(%rsp), %eax
  4129e3:	48 89 04 24 	movq	%rax, (%rsp)
  4129e7:	e8 84 f7 00 00 	callq	63364 <runtime.printuint>
  4129ec:	48 8d 05 e6 7c 05 00 	leaq	359654(%rip), %rax
  4129f3:	48 89 04 24 	movq	%rax, (%rsp)
  4129f7:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  412a00:	e8 3b fa 00 00 	callq	64059 <runtime.printstring>
  412a05:	8b 44 24 3c 	movl	60(%rsp), %eax
  412a09:	48 89 04 24 	movq	%rax, (%rsp)
  412a0d:	e8 5e f7 00 00 	callq	63326 <runtime.printuint>
  412a12:	e8 79 f3 00 00 	callq	62329 <runtime.printnl>
  412a17:	e8 64 f1 00 00 	callq	61796 <runtime.printunlock>
  412a1c:	48 8d 05 0c 8e 05 00 	leaq	364044(%rip), %rax
  412a23:	48 89 04 24 	movq	%rax, (%rsp)
  412a27:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  412a30:	e8 9b e7 00 00 	callq	59291 <runtime.throw>
  412a35:	0f 0b 	ud2
  412a37:	89 54 24 38 	movl	%edx, 56(%rsp)
  412a3b:	89 74 24 3c 	movl	%esi, 60(%rsp)
  412a3f:	e8 bc f0 00 00 	callq	61628 <runtime.printlock>
  412a44:	48 8d 05 fb 88 05 00 	leaq	362747(%rip), %rax
  412a4b:	48 89 04 24 	movq	%rax, (%rsp)
  412a4f:	48 c7 44 24 08 15 00 00 00 	movq	$21, 8(%rsp)
  412a58:	e8 e3 f9 00 00 	callq	63971 <runtime.printstring>
  412a5d:	8b 44 24 38 	movl	56(%rsp), %eax
  412a61:	48 89 04 24 	movq	%rax, (%rsp)
  412a65:	e8 06 f7 00 00 	callq	63238 <runtime.printuint>
  412a6a:	48 8d 05 68 7c 05 00 	leaq	359528(%rip), %rax
  412a71:	48 89 04 24 	movq	%rax, (%rsp)
  412a75:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  412a7e:	e8 bd f9 00 00 	callq	63933 <runtime.printstring>
  412a83:	8b 44 24 3c 	movl	60(%rsp), %eax
  412a87:	48 89 04 24 	movq	%rax, (%rsp)
  412a8b:	e8 e0 f6 00 00 	callq	63200 <runtime.printuint>
  412a90:	e8 fb f2 00 00 	callq	62203 <runtime.printnl>
  412a95:	e8 e6 f0 00 00 	callq	61670 <runtime.printunlock>
  412a9a:	48 8d 05 c6 94 05 00 	leaq	365766(%rip), %rax
  412aa1:	48 89 04 24 	movq	%rax, (%rsp)
  412aa5:	48 c7 44 24 08 1b 00 00 00 	movq	$27, 8(%rsp)
  412aae:	e8 1d e7 00 00 	callq	59165 <runtime.throw>
  412ab3:	0f 0b 	ud2
  412ab5:	48 8d 05 d8 a5 05 00 	leaq	370136(%rip), %rax
  412abc:	48 89 04 24 	movq	%rax, (%rsp)
  412ac0:	48 c7 44 24 08 26 00 00 00 	movq	$38, 8(%rsp)
  412ac9:	e8 02 e7 00 00 	callq	59138 <runtime.throw>
  412ace:	0f 0b 	ud2
  412ad0:	e8 9b 1a 03 00 	callq	203419 <runtime.morestack_noctxt>
  412ad5:	e9 f6 fa ff ff 	jmp	-1290 <runtime.gcBgMarkWorker>
  412ada:	cc 	int3
  412adb:	cc 	int3
  412adc:	cc 	int3
  412add:	cc 	int3
  412ade:	cc 	int3
  412adf:	cc 	int3

runtime.gcMark:
  412ae0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  412ae9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  412aed:	0f 86 dc 02 00 00 	jbe	732 <runtime.gcMark+0x2ef>
  412af3:	48 83 ec 20 	subq	$32, %rsp
  412af7:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  412afc:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  412b01:	8b 05 b9 0f 0b 00 	movl	724921(%rip), %eax
  412b07:	85 c0 	testl	%eax, %eax
  412b09:	0f 8f 4a 02 00 00 	jg	586 <runtime.gcMark+0x279>
  412b0f:	8b 05 c7 0d 0b 00 	movl	724423(%rip), %eax
  412b15:	83 f8 02 	cmpl	$2, %eax
  412b18:	0f 85 96 02 00 00 	jne	662 <runtime.gcMark+0x2d4>
  412b1e:	48 8b 44 24 28 	movq	40(%rsp), %rax
  412b23:	48 89 05 0e 53 09 00 	movq	%rax, 611086(%rip)
  412b2a:	e8 91 12 00 00 	callq	4753 <runtime.gcMarkRootPrepare>
  412b2f:	48 c7 05 06 53 09 00 00 00 00 00 	movq	$0, 611078(%rip)
  412b3a:	e8 a1 16 01 00 	callq	71329 <runtime.gcprocs>
  412b3f:	8b 04 24 	movl	(%rsp), %eax
  412b42:	89 05 e8 52 09 00 	movl	%eax, 611048(%rip)
  412b48:	48 8b 05 51 52 09 00 	movq	610897(%rip), %rax
  412b4f:	48 85 c0 	testq	%rax, %rax
  412b52:	0f 85 f5 01 00 00 	jne	501 <runtime.gcMark+0x26d>
  412b58:	48 8b 05 01 53 09 00 	movq	611073(%rip), %rax
  412b5f:	48 03 05 02 53 09 00 	addq	611074(%rip), %rax
  412b66:	48 03 05 03 53 09 00 	addq	611075(%rip), %rax
  412b6d:	48 03 05 04 53 09 00 	addq	611076(%rip), %rax
  412b74:	48 85 c0 	testq	%rax, %rax
  412b77:	0f 85 d0 01 00 00 	jne	464 <runtime.gcMark+0x26d>
  412b7d:	c6 05 cc 52 09 00 00 	movb	$0, 611020(%rip)
  412b84:	8b 05 a6 52 09 00 	movl	610982(%rip), %eax
  412b8a:	83 f8 01 	cmpl	$1, %eax
  412b8d:	0f 87 93 01 00 00 	ja	403 <runtime.gcMark+0x246>
  412b93:	e8 28 07 00 00 	callq	1832 <runtime.gchelperstart>
  412b98:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  412ba1:	48 8b 40 30 	movq	48(%rax), %rax
  412ba5:	48 8b 88 d0 00 00 00 	movq	208(%rax), %rcx
  412bac:	84 01 	testb	%al, (%rcx)
  412bae:	84 00 	testb	%al, (%rax)
  412bb0:	48 8d 81 70 12 00 00 	leaq	4720(%rcx), %rax
  412bb7:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  412bbc:	0f b6 0d 8d 52 09 00 	movzbl	610957(%rip), %ecx
  412bc3:	84 c9 	testb	%cl, %cl
  412bc5:	0f 84 44 01 00 00 	je	324 <runtime.gcMark+0x22f>
  412bcb:	48 89 04 24 	movq	%rax, (%rsp)
  412bcf:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  412bd8:	e8 f3 32 00 00 	callq	13043 <runtime.gcDrain>
  412bdd:	48 8b 44 24 10 	movq	16(%rsp), %rax
  412be2:	48 89 04 24 	movq	%rax, (%rsp)
  412be6:	e8 95 66 00 00 	callq	26261 <runtime.(*gcWork).dispose>
  412beb:	8b 05 db 0e 0b 00 	movl	724699(%rip), %eax
  412bf1:	85 c0 	testl	%eax, %eax
  412bf3:	0f 8f 0c 01 00 00 	jg	268 <runtime.gcMark+0x225>
  412bf9:	48 8b 05 a0 51 09 00 	movq	610720(%rip), %rax
  412c00:	48 85 c0 	testq	%rax, %rax
  412c03:	0f 85 90 01 00 00 	jne	400 <runtime.gcMark+0x2b9>
  412c09:	8b 05 21 52 09 00 	movl	610849(%rip), %eax
  412c0f:	83 f8 01 	cmpl	$1, %eax
  412c12:	0f 87 d8 00 00 00 	ja	216 <runtime.gcMark+0x210>
  412c18:	c6 05 61 52 09 00 01 	movb	$1, 610913(%rip)
  412c1f:	48 8b 05 8a 4a 09 00 	movq	608906(%rip), %rax
  412c26:	48 8b 0d 8b 4a 09 00 	movq	608907(%rip), %rcx
  412c2d:	31 d2 	xorl	%edx, %edx
  412c2f:	eb 03 	jmp	3 <runtime.gcMark+0x154>
  412c31:	48 ff c2 	incq	%rdx
  412c34:	48 39 ca 	cmpq	%rcx, %rdx
  412c37:	7d 6c 	jge	108 <runtime.gcMark+0x1c5>
  412c39:	48 8b 1c d0 	movq	(%rax,%rdx,8), %rbx
  412c3d:	84 03 	testb	%al, (%rbx)
  412c3f:	48 8d b3 70 12 00 00 	leaq	4720(%rbx), %rsi
  412c46:	84 06 	testb	%al, (%rsi)
  412c48:	48 8b b3 70 12 00 00 	movq	4720(%rbx), %rsi
  412c4f:	48 85 f6 	testq	%rsi, %rsi
  412c52:	74 4a 	je	74 <runtime.gcMark+0x1be>
  412c54:	48 8b 76 10 	movq	16(%rsi), %rsi
  412c58:	48 85 f6 	testq	%rsi, %rsi
  412c5b:	75 3d 	jne	61 <runtime.gcMark+0x1ba>
  412c5d:	48 8b b3 78 12 00 00 	movq	4728(%rbx), %rsi
  412c64:	48 8b 76 10 	movq	16(%rsi), %rsi
  412c68:	48 85 f6 	testq	%rsi, %rsi
  412c6b:	40 0f 94 c6 	sete	%sil
  412c6f:	40 84 f6 	testb	%sil, %sil
  412c72:	0f 84 06 01 00 00 	je	262 <runtime.gcMark+0x29e>
  412c78:	48 8b b3 88 12 00 00 	movq	4744(%rbx), %rsi
  412c7f:	48 85 f6 	testq	%rsi, %rsi
  412c82:	0f 85 db 00 00 00 	jne	219 <runtime.gcMark+0x283>
  412c88:	48 8b 9b 80 12 00 00 	movq	4736(%rbx), %rbx
  412c8f:	48 85 db 	testq	%rbx, %rbx
  412c92:	0f 85 cb 00 00 00 	jne	203 <runtime.gcMark+0x283>
  412c98:	eb 97 	jmp	-105 <runtime.gcMark+0x151>
  412c9a:	31 f6 	xorl	%esi, %esi
  412c9c:	eb d1 	jmp	-47 <runtime.gcMark+0x18f>
  412c9e:	be 01 00 00 00 	movl	$1, %esi
  412ca3:	eb ca 	jmp	-54 <runtime.gcMark+0x18f>
  412ca5:	e8 66 b4 00 00 	callq	46182 <runtime.cachestats>
  412caa:	48 8b 05 6f 51 09 00 	movq	610671(%rip), %rax
  412cb1:	48 89 05 98 31 0b 00 	movq	%rax, 733592(%rip)
  412cb8:	48 8b 05 61 51 09 00 	movq	610657(%rip), %rax
  412cbf:	48 89 05 7a 31 0b 00 	movq	%rax, 733562(%rip)
  412cc6:	48 8b 05 53 0f 0b 00 	movq	724819(%rip), %rax
  412ccd:	48 89 05 74 31 0b 00 	movq	%rax, 733556(%rip)
  412cd4:	0f b6 05 f5 0a 0a 00 	movzbl	658165(%rip), %eax
  412cdb:	84 c0 	testb	%al, %al
  412cdd:	75 0a 	jne	10 <runtime.gcMark+0x209>
  412cdf:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  412ce4:	48 83 c4 20 	addq	$32, %rsp
  412ce8:	c3 	retq
  412ce9:	e8 f2 82 02 00 	callq	164594 <runtime.traceHeapAlloc>
  412cee:	eb ef 	jmp	-17 <runtime.gcMark+0x1ff>
  412cf0:	48 8d 05 51 51 09 00 	leaq	610641(%rip), %rax
  412cf7:	48 89 04 24 	movq	%rax, (%rsp)
  412cfb:	e8 50 6b ff ff 	callq	-38064 <runtime.notesleep>
  412d00:	e9 13 ff ff ff 	jmp	-237 <runtime.gcMark+0x138>
  412d05:	e8 56 12 00 00 	callq	4694 <runtime.gcMarkRootCheck>
  412d0a:	e9 ea fe ff ff 	jmp	-278 <runtime.gcMark+0x119>
  412d0f:	48 89 04 24 	movq	%rax, (%rsp)
  412d13:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  412d1c:	e8 af 31 00 00 	callq	12719 <runtime.gcDrain>
  412d21:	e9 b7 fe ff ff 	jmp	-329 <runtime.gcMark+0xfd>
  412d26:	48 8d 05 1b 51 09 00 	leaq	610587(%rip), %rax
  412d2d:	84 00 	testb	%al, (%rax)
  412d2f:	48 c7 05 0e 51 09 00 00 00 00 00 	movq	$0, 610574(%rip)
  412d3a:	8b 05 f0 50 09 00 	movl	610544(%rip), %eax
  412d40:	89 04 24 	movl	%eax, (%rsp)
  412d43:	e8 c8 15 01 00 	callq	71112 <runtime.helpgc>
  412d48:	e9 46 fe ff ff 	jmp	-442 <runtime.gcMark+0xb3>
  412d4d:	c6 05 fc 50 09 00 01 	movb	$1, 610556(%rip)
  412d54:	e9 2b fe ff ff 	jmp	-469 <runtime.gcMark+0xa4>
  412d59:	e8 f2 b1 00 00 	callq	45554 <runtime.tracegc>
  412d5e:	e9 ac fd ff ff 	jmp	-596 <runtime.gcMark+0x2f>
  412d63:	48 8d 05 33 ab 05 00 	leaq	371507(%rip), %rax
  412d6a:	48 89 04 24 	movq	%rax, (%rsp)
  412d6e:	48 c7 44 24 08 30 00 00 00 	movq	$48, 8(%rsp)
  412d77:	e8 54 e4 00 00 	callq	58452 <runtime.throw>
  412d7c:	0f 0b 	ud2
  412d7e:	48 8d 05 e9 aa 05 00 	leaq	371433(%rip), %rax
  412d85:	48 89 04 24 	movq	%rax, (%rsp)
  412d89:	48 c7 44 24 08 2f 00 00 00 	movq	$47, 8(%rsp)
  412d92:	e8 39 e4 00 00 	callq	58425 <runtime.throw>
  412d97:	0f 0b 	ud2
  412d99:	48 8d 05 72 7b 05 00 	leaq	359282(%rip), %rax
  412da0:	48 89 04 24 	movq	%rax, (%rsp)
  412da4:	48 c7 44 24 08 0e 00 00 00 	movq	$14, 8(%rsp)
  412dad:	e8 1e e4 00 00 	callq	58398 <runtime.throw>
  412db2:	0f 0b 	ud2
  412db4:	48 8d 05 e4 ae 05 00 	leaq	372452(%rip), %rax
  412dbb:	48 89 04 24 	movq	%rax, (%rsp)
  412dbf:	48 c7 44 24 08 38 00 00 00 	movq	$56, 8(%rsp)
  412dc8:	e8 03 e4 00 00 	callq	58371 <runtime.throw>
  412dcd:	0f 0b 	ud2
  412dcf:	e8 9c 17 03 00 	callq	202652 <runtime.morestack_noctxt>
  412dd4:	e9 07 fd ff ff 	jmp	-761 <runtime.gcMark>
  412dd9:	cc 	int3
  412dda:	cc 	int3
  412ddb:	cc 	int3
  412ddc:	cc 	int3
  412ddd:	cc 	int3
  412dde:	cc 	int3
  412ddf:	cc 	int3

runtime.gcSweep:
  412de0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  412de9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  412ded:	0f 86 84 01 00 00 	jbe	388 <runtime.gcSweep+0x197>
  412df3:	48 83 ec 20 	subq	$32, %rsp
  412df7:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  412dfc:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  412e01:	8b 05 d5 0a 0b 00 	movl	723669(%rip), %eax
  412e07:	85 c0 	testl	%eax, %eax
  412e09:	0f 85 4d 01 00 00 	jne	333 <runtime.gcSweep+0x17c>
  412e0f:	48 8d 05 8a 94 09 00 	leaq	627850(%rip), %rax
  412e16:	48 89 04 24 	movq	%rax, (%rsp)
  412e1a:	e8 01 67 ff ff 	callq	-39167 <runtime.lock>
  412e1f:	83 05 9a a4 09 00 02 	addl	$2, 631962(%rip)
  412e26:	c7 05 94 a4 09 00 00 00 00 00 	movl	$0, 631956(%rip)
  412e30:	8b 05 8a a4 09 00 	movl	631946(%rip), %eax
  412e36:	d1 e8 	shrl	%eax
  412e38:	83 e0 01 	andl	$1, %eax
  412e3b:	48 8d 04 80 	leaq	(%rax,%rax,4), %rax
  412e3f:	48 8d 0d ba a4 09 00 	leaq	631994(%rip), %rcx
  412e46:	8b 44 c1 20 	movl	32(%rcx,%rax,8), %eax
  412e4a:	85 c0 	testl	%eax, %eax
  412e4c:	0f 85 ef 00 00 00 	jne	239 <runtime.gcSweep+0x161>
  412e52:	48 c7 05 03 a5 09 00 00 00 00 00 	movq	$0, 632067(%rip)
  412e5d:	48 8d 05 3c 94 09 00 	leaq	627772(%rip), %rax
  412e64:	48 89 04 24 	movq	%rax, (%rsp)
  412e68:	e8 53 68 ff ff 	callq	-38829 <runtime.unlock>
  412e6d:	48 8b 44 24 28 	movq	40(%rsp), %rax
  412e72:	48 83 f8 02 	cmpq	$2, %rax
  412e76:	75 6d 	jne	109 <runtime.gcSweep+0x105>
  412e78:	48 8d 05 21 94 09 00 	leaq	627745(%rip), %rax
  412e7f:	48 89 04 24 	movq	%rax, (%rsp)
  412e83:	e8 98 66 ff ff 	callq	-39272 <runtime.lock>
  412e88:	0f 57 c0 	xorps	%xmm0, %xmm0
  412e8b:	f2 0f 11 05 e5 a4 09 00 	movsd	%xmm0, 632037(%rip)
  412e93:	48 8d 05 06 94 09 00 	leaq	627718(%rip), %rax
  412e9a:	48 89 04 24 	movq	%rax, (%rsp)
  412e9e:	e8 1d 68 ff ff 	callq	-38883 <runtime.unlock>
  412ea3:	eb 06 	jmp	6 <runtime.gcSweep+0xcb>
  412ea5:	ff 05 4d 49 09 00 	incl	608589(%rip)
  412eab:	e8 10 4c 00 00 	callq	19472 <runtime.sweepone>
  412eb0:	48 8b 04 24 	movq	(%rsp), %rax
  412eb4:	48 83 f8 ff 	cmpq	$-1, %rax
  412eb8:	75 eb 	jne	-21 <runtime.gcSweep+0xc5>
  412eba:	e8 31 6d 00 00 	callq	27953 <runtime.prepareFreeWorkbufs>
  412ebf:	c6 04 24 00 	movb	$0, (%rsp)
  412ec3:	e8 d8 6d 00 00 	callq	28120 <runtime.freeSomeWbufs>
  412ec8:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  412ecd:	84 c0 	testb	%al, %al
  412ecf:	75 ee 	jne	-18 <runtime.gcSweep+0xdf>
  412ed1:	e8 da a4 00 00 	callq	42202 <runtime.mProf_NextCycle>
  412ed6:	e8 55 a5 00 00 	callq	42325 <runtime.mProf_Flush>
  412edb:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  412ee0:	48 83 c4 20 	addq	$32, %rsp
  412ee4:	c3 	retq
  412ee5:	48 8d 05 f4 48 09 00 	leaq	608500(%rip), %rax
  412eec:	48 89 04 24 	movq	%rax, (%rsp)
  412ef0:	e8 2b 66 ff ff 	callq	-39381 <runtime.lock>
  412ef5:	0f b6 05 f4 48 09 00 	movzbl	608500(%rip), %eax
  412efc:	84 c0 	testb	%al, %al
  412efe:	75 1a 	jne	26 <runtime.gcSweep+0x13a>
  412f00:	48 8d 05 d9 48 09 00 	leaq	608473(%rip), %rax
  412f07:	48 89 04 24 	movq	%rax, (%rsp)
  412f0b:	e8 b0 67 ff ff 	callq	-38992 <runtime.unlock>
  412f10:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  412f15:	48 83 c4 20 	addq	$32, %rsp
  412f19:	c3 	retq
  412f1a:	c6 05 cf 48 09 00 00 	movb	$0, 608463(%rip)
  412f21:	48 8b 05 c0 48 09 00 	movq	608448(%rip), %rax
  412f28:	48 89 04 24 	movq	%rax, (%rsp)
  412f2c:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  412f35:	c6 44 24 10 01 	movb	$1, 16(%rsp)
  412f3a:	e8 11 10 01 00 	callq	69649 <runtime.ready>
  412f3f:	eb bf 	jmp	-65 <runtime.gcSweep+0x120>
  412f41:	48 8d 05 11 82 05 00 	leaq	360977(%rip), %rax
  412f48:	48 89 04 24 	movq	%rax, (%rsp)
  412f4c:	48 c7 44 24 08 14 00 00 00 	movq	$20, 8(%rsp)
  412f55:	e8 76 e2 00 00 	callq	57974 <runtime.throw>
  412f5a:	0f 0b 	ud2
  412f5c:	48 8d 05 46 a4 05 00 	leaq	369734(%rip), %rax
  412f63:	48 89 04 24 	movq	%rax, (%rsp)
  412f67:	48 c7 44 24 08 29 00 00 00 	movq	$41, 8(%rsp)
  412f70:	e8 5b e2 00 00 	callq	57947 <runtime.throw>
  412f75:	0f 0b 	ud2
  412f77:	e8 f4 15 03 00 	callq	202228 <runtime.morestack_noctxt>
  412f7c:	e9 5f fe ff ff 	jmp	-417 <runtime.gcSweep>
  412f81:	cc 	int3
  412f82:	cc 	int3
  412f83:	cc 	int3
  412f84:	cc 	int3
  412f85:	cc 	int3
  412f86:	cc 	int3
  412f87:	cc 	int3
  412f88:	cc 	int3
  412f89:	cc 	int3
  412f8a:	cc 	int3
  412f8b:	cc 	int3
  412f8c:	cc 	int3
  412f8d:	cc 	int3
  412f8e:	cc 	int3
  412f8f:	cc 	int3

runtime.gcResetMarkState:
  412f90:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  412f99:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  412f9d:	0f 86 8a 00 00 00 	jbe	138 <runtime.gcResetMarkState+0x9d>
  412fa3:	48 83 ec 10 	subq	$16, %rsp
  412fa7:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  412fac:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  412fb1:	48 8d 05 60 09 0b 00 	leaq	723296(%rip), %rax
  412fb8:	48 89 04 24 	movq	%rax, (%rsp)
  412fbc:	e8 5f 65 ff ff 	callq	-39585 <runtime.lock>
  412fc1:	48 8b 05 d0 46 09 00 	movq	607952(%rip), %rax
  412fc8:	48 8b 0d c1 46 09 00 	movq	607937(%rip), %rcx
  412fcf:	31 d2 	xorl	%edx, %edx
  412fd1:	eb 1b 	jmp	27 <runtime.gcResetMarkState+0x5e>
  412fd3:	48 8b 1c d1 	movq	(%rcx,%rdx,8), %rbx
  412fd7:	66 c7 83 c3 00 00 00 00 00 	movw	$0, 195(%rbx)
  412fe0:	48 c7 83 70 01 00 00 00 00 00 00 	movq	$0, 368(%rbx)
  412feb:	48 ff c2 	incq	%rdx
  412fee:	48 39 c2 	cmpq	%rax, %rdx
  412ff1:	7c e0 	jl	-32 <runtime.gcResetMarkState+0x43>
  412ff3:	48 8d 05 1e 09 0b 00 	leaq	723230(%rip), %rax
  412ffa:	48 89 04 24 	movq	%rax, (%rsp)
  412ffe:	e8 bd 66 ff ff 	callq	-39235 <runtime.unlock>
  413003:	48 c7 05 12 4e 09 00 00 00 00 00 	movq	$0, 609810(%rip)
  41300e:	48 8b 05 2b 2e 0b 00 	movq	732715(%rip), %rax
  413015:	48 89 05 9c 4e 09 00 	movq	%rax, 609948(%rip)
  41301c:	c6 05 5d 4e 09 00 00 	movb	$0, 609885(%rip)
  413023:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  413028:	48 83 c4 10 	addq	$16, %rsp
  41302c:	c3 	retq
  41302d:	e8 3e 15 03 00 	callq	202046 <runtime.morestack_noctxt>
  413032:	e9 59 ff ff ff 	jmp	-167 <runtime.gcResetMarkState>
  413037:	cc 	int3
  413038:	cc 	int3
  413039:	cc 	int3
  41303a:	cc 	int3
  41303b:	cc 	int3
  41303c:	cc 	int3
  41303d:	cc 	int3
  41303e:	cc 	int3
  41303f:	cc 	int3

runtime.clearpools:
  413040:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  413049:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41304d:	0f 86 5d 01 00 00 	jbe	349 <runtime.clearpools+0x170>
  413053:	48 83 ec 10 	subq	$16, %rsp
  413057:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  41305c:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  413061:	48 8b 15 18 46 09 00 	movq	607768(%rip), %rdx
  413068:	48 85 d2 	testq	%rdx, %rdx
  41306b:	0f 85 35 01 00 00 	jne	309 <runtime.clearpools+0x166>
  413071:	48 8d 05 38 49 09 00 	leaq	608568(%rip), %rax
  413078:	48 89 04 24 	movq	%rax, (%rsp)
  41307c:	e8 9f 64 ff ff 	callq	-39777 <runtime.lock>
  413081:	48 8b 05 30 49 09 00 	movq	608560(%rip), %rax
  413088:	eb 03 	jmp	3 <runtime.clearpools+0x4d>
  41308a:	48 89 c8 	movq	%rcx, %rax
  41308d:	48 85 c0 	testq	%rax, %rax
  413090:	74 25 	je	37 <runtime.clearpools+0x77>
  413092:	48 8b 48 10 	movq	16(%rax), %rcx
  413096:	48 8d 78 10 	leaq	16(%rax), %rdi
  41309a:	8b 15 70 09 0b 00 	movl	723312(%rip), %edx
  4130a0:	85 d2 	testl	%edx, %edx
  4130a2:	75 0a 	jne	10 <runtime.clearpools+0x6e>
  4130a4:	48 c7 40 10 00 00 00 00 	movq	$0, 16(%rax)
  4130ac:	eb dc 	jmp	-36 <runtime.clearpools+0x4a>
  4130ae:	31 c0 	xorl	%eax, %eax
  4130b0:	e8 eb 37 03 00 	callq	210923 <runtime.gcWriteBarrier>
  4130b5:	eb d3 	jmp	-45 <runtime.clearpools+0x4a>
  4130b7:	8b 0d 53 09 0b 00 	movl	723283(%rip), %ecx
  4130bd:	85 c9 	testl	%ecx, %ecx
  4130bf:	0f 85 ce 00 00 00 	jne	206 <runtime.clearpools+0x153>
  4130c5:	48 c7 05 e8 48 09 00 00 00 00 00 	movq	$0, 608488(%rip)
  4130d0:	48 8d 05 d9 48 09 00 	leaq	608473(%rip), %rax
  4130d7:	48 89 04 24 	movq	%rax, (%rsp)
  4130db:	e8 e0 65 ff ff 	callq	-39456 <runtime.unlock>
  4130e0:	48 8d 05 d9 48 09 00 	leaq	608473(%rip), %rax
  4130e7:	48 89 04 24 	movq	%rax, (%rsp)
  4130eb:	e8 30 64 ff ff 	callq	-39888 <runtime.lock>
  4130f0:	31 c0 	xorl	%eax, %eax
  4130f2:	eb 57 	jmp	87 <runtime.clearpools+0x10b>
  4130f4:	48 89 da 	movq	%rbx, %rdx
  4130f7:	48 85 d2 	testq	%rdx, %rdx
  4130fa:	74 36 	je	54 <runtime.clearpools+0xf2>
  4130fc:	48 8b 5a 28 	movq	40(%rdx), %rbx
  413100:	48 8d 72 28 	leaq	40(%rdx), %rsi
  413104:	44 8b 05 05 09 0b 00 	movl	723205(%rip), %r8d
  41310b:	45 85 c0 	testl	%r8d, %r8d
  41310e:	75 0a 	jne	10 <runtime.clearpools+0xda>
  413110:	48 c7 42 28 00 00 00 00 	movq	$0, 40(%rdx)
  413118:	eb da 	jmp	-38 <runtime.clearpools+0xb4>
  41311a:	48 89 fa 	movq	%rdi, %rdx
  41311d:	48 89 f7 	movq	%rsi, %rdi
  413120:	49 89 c0 	movq	%rax, %r8
  413123:	31 c0 	xorl	%eax, %eax
  413125:	e8 76 37 03 00 	callq	210806 <runtime.gcWriteBarrier>
  41312a:	4c 89 c0 	movq	%r8, %rax
  41312d:	48 89 d7 	movq	%rdx, %rdi
  413130:	eb c2 	jmp	-62 <runtime.clearpools+0xb4>
  413132:	8b 15 d8 08 0b 00 	movl	723160(%rip), %edx
  413138:	85 d2 	testl	%edx, %edx
  41313a:	75 2e 	jne	46 <runtime.clearpools+0x12a>
  41313c:	48 c7 84 c1 a8 00 00 00 00 00 00 00 	movq	$0, 168(%rcx,%rax,8)
  413148:	48 ff c0 	incq	%rax
  41314b:	48 83 f8 05 	cmpq	$5, %rax
  41314f:	7d 28 	jge	40 <runtime.clearpools+0x139>
  413151:	48 8d 0d c8 47 09 00 	leaq	608200(%rip), %rcx
  413158:	48 8b 94 c1 a8 00 00 00 	movq	168(%rcx,%rax,8), %rdx
  413160:	48 8d bc c1 a8 00 00 00 	leaq	168(%rcx,%rax,8), %rdi
  413168:	eb 8d 	jmp	-115 <runtime.clearpools+0xb7>
  41316a:	48 89 c2 	movq	%rax, %rdx
  41316d:	31 c0 	xorl	%eax, %eax
  41316f:	e8 2c 37 03 00 	callq	210732 <runtime.gcWriteBarrier>
  413174:	48 89 d0 	movq	%rdx, %rax
  413177:	eb cf 	jmp	-49 <runtime.clearpools+0x108>
  413179:	48 8d 05 40 48 09 00 	leaq	608320(%rip), %rax
  413180:	48 89 04 24 	movq	%rax, (%rsp)
  413184:	e8 37 65 ff ff 	callq	-39625 <runtime.unlock>
  413189:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  41318e:	48 83 c4 10 	addq	$16, %rsp
  413192:	c3 	retq
  413193:	48 8d 3d 1e 48 09 00 	leaq	608286(%rip), %rdi
  41319a:	31 c0 	xorl	%eax, %eax
  41319c:	e8 ff 36 03 00 	callq	210687 <runtime.gcWriteBarrier>
  4131a1:	e9 2a ff ff ff 	jmp	-214 <runtime.clearpools+0x90>
  4131a6:	48 8b 02 	movq	(%rdx), %rax
  4131a9:	ff d0 	callq	*%rax
  4131ab:	e9 c1 fe ff ff 	jmp	-319 <runtime.clearpools+0x31>
  4131b0:	e8 bb 13 03 00 	callq	201659 <runtime.morestack_noctxt>
  4131b5:	e9 86 fe ff ff 	jmp	-378 <runtime.clearpools>
  4131ba:	cc 	int3
  4131bb:	cc 	int3
  4131bc:	cc 	int3
  4131bd:	cc 	int3
  4131be:	cc 	int3
  4131bf:	cc 	int3

runtime.gchelper:
  4131c0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4131c9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4131cd:	0f 86 e2 00 00 00 	jbe	226 <runtime.gchelper+0xf5>
  4131d3:	48 83 ec 28 	subq	$40, %rsp
  4131d7:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  4131dc:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  4131e1:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4131ea:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4131ef:	48 8b 48 30 	movq	48(%rax), %rcx
  4131f3:	c6 81 29 01 00 00 02 	movb	$2, 297(%rcx)
  4131fa:	e8 c1 00 00 00 	callq	193 <runtime.gchelperstart>
  4131ff:	8b 05 d7 06 0b 00 	movl	722647(%rip), %eax
  413205:	83 f8 02 	cmpl	$2, %eax
  413208:	75 4d 	jne	77 <runtime.gchelper+0x97>
  41320a:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41320f:	48 8b 48 30 	movq	48(%rax), %rcx
  413213:	48 8b 91 d0 00 00 00 	movq	208(%rcx), %rdx
  41321a:	84 02 	testb	%al, (%rdx)
  41321c:	84 00 	testb	%al, (%rax)
  41321e:	84 01 	testb	%al, (%rcx)
  413220:	48 8d 8a 70 12 00 00 	leaq	4720(%rdx), %rcx
  413227:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  41322c:	0f b6 15 1d 4c 09 00 	movzbl	609309(%rip), %edx
  413233:	84 d2 	testb	%dl, %dl
  413235:	74 6a 	je	106 <runtime.gchelper+0xe1>
  413237:	48 89 0c 24 	movq	%rcx, (%rsp)
  41323b:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  413244:	e8 87 2c 00 00 	callq	11399 <runtime.gcDrain>
  413249:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41324e:	48 89 04 24 	movq	%rax, (%rsp)
  413252:	e8 29 60 00 00 	callq	24617 <runtime.(*gcWork).dispose>
  413257:	8b 05 d3 4b 09 00 	movl	609235(%rip), %eax
  41325d:	b9 01 00 00 00 	movl	$1, %ecx
  413262:	48 8d 15 db 4b 09 00 	leaq	609243(%rip), %rdx
  413269:	f0 	lock
  41326a:	0f c1 0a 	xaddl	%ecx, (%rdx)
  41326d:	ff c1 	incl	%ecx
  41326f:	ff c8 	decl	%eax
  413271:	39 c8 	cmpl	%ecx, %eax
  413273:	74 1a 	je	26 <runtime.gchelper+0xcf>
  413275:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41327a:	48 8b 40 30 	movq	48(%rax), %rax
  41327e:	c6 80 29 01 00 00 00 	movb	$0, 297(%rax)
  413285:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  41328a:	48 83 c4 28 	addq	$40, %rsp
  41328e:	c3 	retq
  41328f:	48 8d 05 b2 4b 09 00 	leaq	609202(%rip), %rax
  413296:	48 89 04 24 	movq	%rax, (%rsp)
  41329a:	e8 f1 64 ff ff 	callq	-39695 <runtime.notewakeup>
  41329f:	eb d4 	jmp	-44 <runtime.gchelper+0xb5>
  4132a1:	48 89 0c 24 	movq	%rcx, (%rsp)
  4132a5:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  4132ae:	e8 1d 2c 00 00 	callq	11293 <runtime.gcDrain>
  4132b3:	eb 94 	jmp	-108 <runtime.gchelper+0x89>
  4132b5:	e8 b6 12 03 00 	callq	201398 <runtime.morestack_noctxt>
  4132ba:	e9 01 ff ff ff 	jmp	-255 <runtime.gchelper>
  4132bf:	cc 	int3

runtime.gchelperstart:
  4132c0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4132c9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4132cd:	76 6e 	jbe	110 <runtime.gchelperstart+0x7d>
  4132cf:	48 83 ec 18 	subq	$24, %rsp
  4132d3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  4132d8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  4132dd:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4132e6:	48 8b 48 30 	movq	48(%rax), %rcx
  4132ea:	8b 91 10 01 00 00 	movl	272(%rcx), %edx
  4132f0:	83 fa 20 	cmpl	$32, %edx
  4132f3:	73 2d 	jae	45 <runtime.gchelperstart+0x62>
  4132f5:	48 8b 09 	movq	(%rcx), %rcx
  4132f8:	48 39 c8 	cmpq	%rcx, %rax
  4132fb:	75 0a 	jne	10 <runtime.gchelperstart+0x47>
  4132fd:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  413302:	48 83 c4 18 	addq	$24, %rsp
  413306:	c3 	retq
  413307:	48 8d 05 d5 94 05 00 	leaq	365781(%rip), %rax
  41330e:	48 89 04 24 	movq	%rax, (%rsp)
  413312:	48 c7 44 24 08 20 00 00 00 	movq	$32, 8(%rsp)
  41331b:	e8 b0 de 00 00 	callq	57008 <runtime.throw>
  413320:	0f 0b 	ud2
  413322:	48 8d 05 a9 8d 05 00 	leaq	363945(%rip), %rax
  413329:	48 89 04 24 	movq	%rax, (%rsp)
  41332d:	48 c7 44 24 08 1c 00 00 00 	movq	$28, 8(%rsp)
  413336:	e8 95 de 00 00 	callq	56981 <runtime.throw>
  41333b:	0f 0b 	ud2
  41333d:	e8 2e 12 03 00 	callq	201262 <runtime.morestack_noctxt>
  413342:	e9 79 ff ff ff 	jmp	-135 <runtime.gchelperstart>
  413347:	cc 	int3
  413348:	cc 	int3
  413349:	cc 	int3
  41334a:	cc 	int3
  41334b:	cc 	int3
  41334c:	cc 	int3
  41334d:	cc 	int3
  41334e:	cc 	int3
  41334f:	cc 	int3

runtime.itoaDiv:
  413350:	48 83 ec 08 	subq	$8, %rsp
  413354:	48 89 2c 24 	movq	%rbp, (%rsp)
  413358:	48 8d 2c 24 	leaq	(%rsp), %rbp
  41335c:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  413361:	48 8d 51 ff 	leaq	-1(%rcx), %rdx
  413365:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  41336a:	48 89 d6 	movq	%rdx, %rsi
  41336d:	48 29 da 	subq	%rbx, %rdx
  413370:	48 8b 5c 24 10 	movq	16(%rsp), %rbx
  413375:	48 8b 7c 24 28 	movq	40(%rsp), %rdi
  41337a:	eb 06 	jmp	6 <runtime.itoaDiv+0x32>
  41337c:	48 89 d7 	movq	%rdx, %rdi
  41337f:	4c 89 c2 	movq	%r8, %rdx
  413382:	48 83 ff 0a 	cmpq	$10, %rdi
  413386:	72 49 	jb	73 <runtime.itoaDiv+0x81>
  413388:	48 b8 cd cc cc cc cc cc cc cc 	movabsq	$-3689348814741910323, %rax
  413392:	49 89 d0 	movq	%rdx, %r8
  413395:	48 f7 e7 	mulq	%rdi
  413398:	48 c1 ea 03 	shrq	$3, %rdx
  41339c:	4c 8d 0c 92 	leaq	(%rdx,%rdx,4), %r9
  4133a0:	49 d1 e1 	shlq	%r9
  4133a3:	4c 29 cf 	subq	%r9, %rdi
  4133a6:	48 39 ce 	cmpq	%rcx, %rsi
  4133a9:	73 78 	jae	120 <runtime.itoaDiv+0xd3>
  4133ab:	48 83 c7 30 	addq	$48, %rdi
  4133af:	40 88 3c 33 	movb	%dil, (%rbx,%rsi)
  4133b3:	48 8d 7e ff 	leaq	-1(%rsi), %rdi
  4133b7:	4c 39 c7 	cmpq	%r8, %rdi
  4133ba:	75 10 	jne	16 <runtime.itoaDiv+0x7c>
  4133bc:	48 39 cf 	cmpq	%rcx, %rdi
  4133bf:	73 5b 	jae	91 <runtime.itoaDiv+0xcc>
  4133c1:	c6 44 1e ff 2e 	movb	$46, -1(%rsi,%rbx)
  4133c6:	48 83 c6 fe 	addq	$-2, %rsi
  4133ca:	eb b0 	jmp	-80 <runtime.itoaDiv+0x2c>
  4133cc:	48 89 fe 	movq	%rdi, %rsi
  4133cf:	eb ab 	jmp	-85 <runtime.itoaDiv+0x2c>
  4133d1:	48 39 d6 	cmpq	%rdx, %rsi
  4133d4:	7d b2 	jge	-78 <runtime.itoaDiv+0x38>
  4133d6:	48 39 ce 	cmpq	%rcx, %rsi
  4133d9:	73 3a 	jae	58 <runtime.itoaDiv+0xc5>
  4133db:	48 8d 47 30 	leaq	48(%rdi), %rax
  4133df:	88 04 33 	movb	%al, (%rbx,%rsi)
  4133e2:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4133e7:	48 29 f0 	subq	%rsi, %rax
  4133ea:	48 89 c2 	movq	%rax, %rdx
  4133ed:	48 f7 d8 	negq	%rax
  4133f0:	48 c1 f8 3f 	sarq	$63, %rax
  4133f4:	48 21 f0 	andq	%rsi, %rax
  4133f7:	48 01 d8 	addq	%rbx, %rax
  4133fa:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  4133ff:	48 29 f1 	subq	%rsi, %rcx
  413402:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  413407:	48 89 54 24 48 	movq	%rdx, 72(%rsp)
  41340c:	48 8b 2c 24 	movq	(%rsp), %rbp
  413410:	48 83 c4 08 	addq	$8, %rsp
  413414:	c3 	retq
  413415:	e8 26 c6 00 00 	callq	50726 <runtime.panicindex>
  41341a:	0f 0b 	ud2
  41341c:	e8 1f c6 00 00 	callq	50719 <runtime.panicindex>
  413421:	0f 0b 	ud2
  413423:	e8 18 c6 00 00 	callq	50712 <runtime.panicindex>
  413428:	0f 0b 	ud2
  41342a:	cc 	int3
  41342b:	cc 	int3
  41342c:	cc 	int3
  41342d:	cc 	int3
  41342e:	cc 	int3
  41342f:	cc 	int3

runtime.fmtNSAsMS:
  413430:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  413439:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41343d:	0f 86 6c 01 00 00 	jbe	364 <runtime.fmtNSAsMS+0x17f>
  413443:	48 83 ec 48 	subq	$72, %rsp
  413447:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  41344c:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  413451:	48 8b 44 24 68 	movq	104(%rsp), %rax
  413456:	48 3d 80 96 98 00 	cmpq	$10000000, %rax
  41345c:	0f 83 d7 00 00 00 	jae	215 <runtime.fmtNSAsMS+0x109>
  413462:	48 d1 e8 	shrq	%rax
  413465:	48 b9 3c df 4f 8d 97 6e 12 83 	movabsq	$-9002011107970261188, %rcx
  41346f:	48 f7 e1 	mulq	%rcx
  413472:	48 c1 ea 08 	shrq	$8, %rdx
  413476:	48 f7 c2 ff ff ff ff 	testq	$-1, %rdx
  41347d:	74 7f 	je	127 <runtime.fmtNSAsMS+0xce>
  41347f:	b8 03 00 00 00 	movl	$3, %eax
  413484:	eb 1b 	jmp	27 <runtime.fmtNSAsMS+0x71>
  413486:	48 89 c1 	movq	%rax, %rcx
  413489:	48 89 d0 	movq	%rdx, %rax
  41348c:	48 bb cd cc cc cc cc cc cc cc 	movabsq	$-3689348814741910323, %rbx
  413496:	48 f7 e3 	mulq	%rbx
  413499:	48 c1 ea 03 	shrq	$3, %rdx
  41349d:	48 8d 41 ff 	leaq	-1(%rcx), %rax
  4134a1:	48 83 fa 64 	cmpq	$100, %rdx
  4134a5:	73 df 	jae	-33 <runtime.fmtNSAsMS+0x56>
  4134a7:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  4134ac:	48 89 0c 24 	movq	%rcx, (%rsp)
  4134b0:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  4134b5:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4134ba:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  4134bf:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  4134c4:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  4134c9:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  4134ce:	e8 7d fe ff ff 	callq	-387 <runtime.itoaDiv>
  4134d3:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4134d8:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4134dd:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  4134e2:	48 89 44 24 70 	movq	%rax, 112(%rsp)
  4134e7:	48 89 4c 24 78 	movq	%rcx, 120(%rsp)
  4134ec:	48 89 94 24 80 00 00 00 	movq	%rdx, 128(%rsp)
  4134f4:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  4134f9:	48 83 c4 48 	addq	$72, %rsp
  4134fd:	c3 	retq
  4134fe:	48 8b 44 24 58 	movq	88(%rsp), %rax
  413503:	48 85 c0 	testq	%rax, %rax
  413506:	0f 86 9c 00 00 00 	jbe	156 <runtime.fmtNSAsMS+0x178>
  41350c:	48 8b 44 24 50 	movq	80(%rsp), %rax
  413511:	c6 00 30 	movb	$48, (%rax)
  413514:	48 89 44 24 70 	movq	%rax, 112(%rsp)
  413519:	48 c7 44 24 78 01 00 00 00 	movq	$1, 120(%rsp)
  413522:	48 8b 44 24 60 	movq	96(%rsp), %rax
  413527:	48 89 84 24 80 00 00 00 	movq	%rax, 128(%rsp)
  41352f:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  413534:	48 83 c4 48 	addq	$72, %rsp
  413538:	c3 	retq
  413539:	48 89 c1 	movq	%rax, %rcx
  41353c:	48 b8 b6 69 6c af 05 bd 37 86 	movabsq	$-8775337516792518218, %rax
  413546:	48 f7 e1 	mulq	%rcx
  413549:	48 c1 ea 13 	shrq	$19, %rdx
  41354d:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  413552:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  413557:	48 89 0c 24 	movq	%rcx, (%rsp)
  41355b:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  413560:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  413565:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  41356a:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  41356f:	48 c7 44 24 20 00 00 00 00 	movq	$0, 32(%rsp)
  413578:	e8 d3 fd ff ff 	callq	-557 <runtime.itoaDiv>
  41357d:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  413582:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  413587:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  41358c:	48 89 54 24 70 	movq	%rdx, 112(%rsp)
  413591:	48 89 5c 24 78 	movq	%rbx, 120(%rsp)
  413596:	48 89 8c 24 80 00 00 00 	movq	%rcx, 128(%rsp)
  41359e:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  4135a3:	48 83 c4 48 	addq	$72, %rsp
  4135a7:	c3 	retq
  4135a8:	e8 93 c4 00 00 	callq	50323 <runtime.panicindex>
  4135ad:	0f 0b 	ud2
  4135af:	e8 bc 0f 03 00 	callq	200636 <runtime.morestack_noctxt>
  4135b4:	e9 77 fe ff ff 	jmp	-393 <runtime.fmtNSAsMS>
  4135b9:	cc 	int3
  4135ba:	cc 	int3
  4135bb:	cc 	int3
  4135bc:	cc 	int3
  4135bd:	cc 	int3
  4135be:	cc 	int3
  4135bf:	cc 	int3

runtime.(*mTreap).insert:
  4135c0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4135c9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4135cd:	0f 86 c6 02 00 00 	jbe	710 <runtime.(*mTreap).insert+0x2d9>
  4135d3:	48 83 ec 40 	subq	$64, %rsp
  4135d7:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  4135dc:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  4135e1:	48 8b 44 24 50 	movq	80(%rsp), %rax
  4135e6:	48 8b 48 20 	movq	32(%rax), %rcx
  4135ea:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  4135ef:	48 8b 1a 	movq	(%rdx), %rbx
  4135f2:	48 89 d6 	movq	%rdx, %rsi
  4135f5:	31 ff 	xorl	%edi, %edi
  4135f7:	eb 0c 	jmp	12 <runtime.(*mTreap).insert+0x45>
  4135f9:	4c 8b 03 	movq	(%rbx), %r8
  4135fc:	48 89 d7 	movq	%rdx, %rdi
  4135ff:	48 89 da 	movq	%rbx, %rdx
  413602:	4c 89 c3 	movq	%r8, %rbx
  413605:	48 85 db 	testq	%rbx, %rbx
  413608:	74 4b 	je	75 <runtime.(*mTreap).insert+0x95>
  41360a:	48 8b 53 18 	movq	24(%rbx), %rdx
  41360e:	48 39 ca 	cmpq	%rcx, %rdx
  413611:	73 05 	jae	5 <runtime.(*mTreap).insert+0x58>
  413613:	48 89 da 	movq	%rbx, %rdx
  413616:	eb e1 	jmp	-31 <runtime.(*mTreap).insert+0x39>
  413618:	76 0f 	jbe	15 <runtime.(*mTreap).insert+0x69>
  41361a:	48 8d 53 08 	leaq	8(%rbx), %rdx
  41361e:	48 89 d7 	movq	%rdx, %rdi
  413621:	48 89 da 	movq	%rbx, %rdx
  413624:	48 89 fb 	movq	%rdi, %rbx
  413627:	eb d0 	jmp	-48 <runtime.(*mTreap).insert+0x39>
  413629:	48 8b 53 20 	movq	32(%rbx), %rdx
  41362d:	48 89 c7 	movq	%rax, %rdi
  413630:	48 39 c2 	cmpq	%rax, %rdx
  413633:	73 0e 	jae	14 <runtime.(*mTreap).insert+0x83>
  413635:	48 89 d8 	movq	%rbx, %rax
  413638:	48 89 da 	movq	%rbx, %rdx
  41363b:	48 89 c3 	movq	%rax, %rbx
  41363e:	48 89 f8 	movq	%rdi, %rax
  413641:	eb db 	jmp	-37 <runtime.(*mTreap).insert+0x5e>
  413643:	0f 86 35 02 00 00 	jbe	565 <runtime.(*mTreap).insert+0x2be>
  413649:	48 8d 53 08 	leaq	8(%rbx), %rdx
  41364d:	48 89 d8 	movq	%rbx, %rax
  413650:	48 89 d3 	movq	%rdx, %rbx
  413653:	eb e3 	jmp	-29 <runtime.(*mTreap).insert+0x78>
  413655:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  41365a:	48 89 7c 24 20 	movq	%rdi, 32(%rsp)
  41365f:	48 8d 05 9a c1 09 00 	leaq	639386(%rip), %rax
  413666:	48 89 04 24 	movq	%rax, (%rsp)
  41366a:	e8 d1 c3 ff ff 	callq	-15407 <runtime.(*fixalloc).alloc>
  41366f:	48 8b 44 24 08 	movq	8(%rsp), %rax
  413674:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  413679:	0f 57 c0 	xorps	%xmm0, %xmm0
  41367c:	0f 11 00 	movups	%xmm0, (%rax)
  41367f:	48 c7 40 10 00 00 00 00 	movq	$0, 16(%rax)
  413687:	48 c7 40 20 00 00 00 00 	movq	$0, 32(%rax)
  41368f:	48 c7 40 18 00 00 00 00 	movq	$0, 24(%rax)
  413697:	c7 40 28 00 00 00 00 	movl	$0, 40(%rax)
  41369e:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  4136a3:	48 8b 51 20 	movq	32(%rcx), %rdx
  4136a7:	48 89 50 18 	movq	%rdx, 24(%rax)
  4136ab:	64 48 8b 14 25 f8 ff ff ff 	movq	%fs:-8, %rdx
  4136b4:	48 8b 52 30 	movq	48(%rdx), %rdx
  4136b8:	8b 9a 20 01 00 00 	movl	288(%rdx), %ebx
  4136be:	8b b2 24 01 00 00 	movl	292(%rdx), %esi
  4136c4:	89 b2 20 01 00 00 	movl	%esi, 288(%rdx)
  4136ca:	89 df 	movl	%ebx, %edi
  4136cc:	c1 e3 11 	shll	$17, %ebx
  4136cf:	31 fb 	xorl	%edi, %ebx
  4136d1:	89 f7 	movl	%esi, %edi
  4136d3:	31 de 	xorl	%ebx, %esi
  4136d5:	c1 eb 07 	shrl	$7, %ebx
  4136d8:	31 f3 	xorl	%esi, %ebx
  4136da:	89 fe 	movl	%edi, %esi
  4136dc:	c1 ef 10 	shrl	$16, %edi
  4136df:	31 df 	xorl	%ebx, %edi
  4136e1:	89 ba 24 01 00 00 	movl	%edi, 292(%rdx)
  4136e7:	8d 14 3e 	leal	(%rsi,%rdi), %edx
  4136ea:	89 50 28 	movl	%edx, 40(%rax)
  4136ed:	48 89 48 20 	movq	%rcx, 32(%rax)
  4136f1:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  4136f6:	48 89 48 10 	movq	%rcx, 16(%rax)
  4136fa:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  4136ff:	48 89 01 	movq	%rax, (%rcx)
  413702:	eb 05 	jmp	5 <runtime.(*mTreap).insert+0x149>
  413704:	48 8b 44 24 30 	movq	48(%rsp), %rax
  413709:	48 8b 48 10 	movq	16(%rax), %rcx
  41370d:	48 85 c9 	testq	%rcx, %rcx
  413710:	74 56 	je	86 <runtime.(*mTreap).insert+0x1a8>
  413712:	8b 51 28 	movl	40(%rcx), %edx
  413715:	8b 58 28 	movl	40(%rax), %ebx
  413718:	39 da 	cmpl	%ebx, %edx
  41371a:	76 4c 	jbe	76 <runtime.(*mTreap).insert+0x1a8>
  41371c:	48 8b 50 20 	movq	32(%rax), %rdx
  413720:	48 8b 52 20 	movq	32(%rdx), %rdx
  413724:	48 8b 58 18 	movq	24(%rax), %rbx
  413728:	48 39 da 	cmpq	%rbx, %rdx
  41372b:	75 60 	jne	96 <runtime.(*mTreap).insert+0x1cd>
  41372d:	48 8b 51 08 	movq	8(%rcx), %rdx
  413731:	48 39 c2 	cmpq	%rax, %rdx
  413734:	74 1d 	je	29 <runtime.(*mTreap).insert+0x193>
  413736:	48 8b 11 	movq	(%rcx), %rdx
  413739:	48 39 c2 	cmpq	%rax, %rdx
  41373c:	75 34 	jne	52 <runtime.(*mTreap).insert+0x1b2>
  41373e:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  413743:	48 8b 44 24 48 	movq	72(%rsp), %rax
  413748:	48 89 04 24 	movq	%rax, (%rsp)
  41374c:	e8 df 04 00 00 	callq	1247 <runtime.(*mTreap).rotateLeft>
  413751:	eb b1 	jmp	-79 <runtime.(*mTreap).insert+0x144>
  413753:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  413758:	48 8b 44 24 48 	movq	72(%rsp), %rax
  41375d:	48 89 04 24 	movq	%rax, (%rsp)
  413761:	e8 9a 05 00 00 	callq	1434 <runtime.(*mTreap).rotateRight>
  413766:	eb 9c 	jmp	-100 <runtime.(*mTreap).insert+0x144>
  413768:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  41376d:	48 83 c4 40 	addq	$64, %rsp
  413771:	c3 	retq
  413772:	48 8d 05 d9 93 05 00 	leaq	365529(%rip), %rax
  413779:	48 89 04 24 	movq	%rax, (%rsp)
  41377d:	48 c7 44 24 08 21 00 00 00 	movq	$33, 8(%rsp)
  413786:	e8 45 da 00 00 	callq	55877 <runtime.throw>
  41378b:	0f 0b 	ud2
  41378d:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  413792:	e8 69 e3 00 00 	callq	58217 <runtime.printlock>
  413797:	48 8d 05 b9 77 05 00 	leaq	358329(%rip), %rax
  41379e:	48 89 04 24 	movq	%rax, (%rsp)
  4137a2:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  4137ab:	e8 90 ec 00 00 	callq	60560 <runtime.printstring>
  4137b0:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4137b5:	48 89 04 24 	movq	%rax, (%rsp)
  4137b9:	e8 42 ec 00 00 	callq	60482 <runtime.printpointer>
  4137be:	48 8d 05 35 70 05 00 	leaq	356405(%rip), %rax
  4137c5:	48 89 04 24 	movq	%rax, (%rsp)
  4137c9:	48 c7 44 24 08 0e 00 00 00 	movq	$14, 8(%rsp)
  4137d2:	e8 69 ec 00 00 	callq	60521 <runtime.printstring>
  4137d7:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4137dc:	48 89 04 24 	movq	%rax, (%rsp)
  4137e0:	e8 8b e9 00 00 	callq	59787 <runtime.printuint>
  4137e5:	e8 a6 e5 00 00 	callq	58790 <runtime.printnl>
  4137ea:	e8 91 e3 00 00 	callq	58257 <runtime.printunlock>
  4137ef:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4137f4:	48 8b 40 20 	movq	32(%rax), %rax
  4137f8:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  4137fd:	48 8b 48 20 	movq	32(%rax), %rcx
  413801:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  413806:	e8 f5 e2 00 00 	callq	58101 <runtime.printlock>
  41380b:	48 8d 05 99 82 05 00 	leaq	361113(%rip), %rax
  413812:	48 89 04 24 	movq	%rax, (%rsp)
  413816:	48 c7 44 24 08 19 00 00 00 	movq	$25, 8(%rsp)
  41381f:	e8 1c ec 00 00 	callq	60444 <runtime.printstring>
  413824:	48 8b 44 24 28 	movq	40(%rsp), %rax
  413829:	48 89 04 24 	movq	%rax, (%rsp)
  41382d:	e8 ce eb 00 00 	callq	60366 <runtime.printpointer>
  413832:	48 8d 05 b5 75 05 00 	leaq	357813(%rip), %rax
  413839:	48 89 04 24 	movq	%rax, (%rsp)
  41383d:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  413846:	e8 f5 eb 00 00 	callq	60405 <runtime.printstring>
  41384b:	48 8b 44 24 10 	movq	16(%rsp), %rax
  413850:	48 89 04 24 	movq	%rax, (%rsp)
  413854:	e8 17 e9 00 00 	callq	59671 <runtime.printuint>
  413859:	e8 32 e5 00 00 	callq	58674 <runtime.printnl>
  41385e:	e8 1d e3 00 00 	callq	58141 <runtime.printunlock>
  413863:	48 8d 05 3a 94 05 00 	leaq	365626(%rip), %rax
  41386a:	48 89 04 24 	movq	%rax, (%rsp)
  41386e:	48 c7 44 24 08 22 00 00 00 	movq	$34, 8(%rsp)
  413877:	e8 54 d9 00 00 	callq	55636 <runtime.throw>
  41387c:	0f 0b 	ud2
  41387e:	48 8d 05 26 8e 05 00 	leaq	364070(%rip), %rax
  413885:	48 89 04 24 	movq	%rax, (%rsp)
  413889:	48 c7 44 24 08 1f 00 00 00 	movq	$31, 8(%rsp)
  413892:	e8 39 d9 00 00 	callq	55609 <runtime.throw>
  413897:	0f 0b 	ud2
  413899:	e8 d2 0c 03 00 	callq	199890 <runtime.morestack_noctxt>
  41389e:	e9 1d fd ff ff 	jmp	-739 <runtime.(*mTreap).insert>
  4138a3:	cc 	int3
  4138a4:	cc 	int3
  4138a5:	cc 	int3
  4138a6:	cc 	int3
  4138a7:	cc 	int3
  4138a8:	cc 	int3
  4138a9:	cc 	int3
  4138aa:	cc 	int3
  4138ab:	cc 	int3
  4138ac:	cc 	int3
  4138ad:	cc 	int3
  4138ae:	cc 	int3
  4138af:	cc 	int3

runtime.(*mTreap).removeNode:
  4138b0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4138b9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4138bd:	0f 86 19 01 00 00 	jbe	281 <runtime.(*mTreap).removeNode+0x12c>
  4138c3:	48 83 ec 18 	subq	$24, %rsp
  4138c7:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  4138cc:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  4138d1:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4138d6:	48 8b 48 20 	movq	32(%rax), %rcx
  4138da:	48 8b 49 20 	movq	32(%rcx), %rcx
  4138de:	48 8b 50 18 	movq	24(%rax), %rdx
  4138e2:	48 39 d1 	cmpq	%rdx, %rcx
  4138e5:	0f 85 d6 00 00 00 	jne	214 <runtime.(*mTreap).removeNode+0x111>
  4138eb:	eb 05 	jmp	5 <runtime.(*mTreap).removeNode+0x42>
  4138ed:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4138f2:	48 8b 08 	movq	(%rax), %rcx
  4138f5:	48 85 c9 	testq	%rcx, %rcx
  4138f8:	74 3f 	je	63 <runtime.(*mTreap).removeNode+0x89>
  4138fa:	74 13 	je	19 <runtime.(*mTreap).removeNode+0x5f>
  4138fc:	48 8b 50 08 	movq	8(%rax), %rdx
  413900:	48 85 d2 	testq	%rdx, %rdx
  413903:	74 1f 	je	31 <runtime.(*mTreap).removeNode+0x74>
  413905:	8b 52 28 	movl	40(%rdx), %edx
  413908:	8b 49 28 	movl	40(%rcx), %ecx
  41390b:	39 ca 	cmpl	%ecx, %edx
  41390d:	73 15 	jae	21 <runtime.(*mTreap).removeNode+0x74>
  41390f:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  413914:	48 89 0c 24 	movq	%rcx, (%rsp)
  413918:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41391d:	e8 de 03 00 00 	callq	990 <runtime.(*mTreap).rotateRight>
  413922:	eb c9 	jmp	-55 <runtime.(*mTreap).removeNode+0x3d>
  413924:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  413929:	48 89 0c 24 	movq	%rcx, (%rsp)
  41392d:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  413932:	e8 f9 02 00 00 	callq	761 <runtime.(*mTreap).rotateLeft>
  413937:	eb b4 	jmp	-76 <runtime.(*mTreap).removeNode+0x3d>
  413939:	48 8b 50 08 	movq	8(%rax), %rdx
  41393d:	48 85 d2 	testq	%rdx, %rdx
  413940:	74 05 	je	5 <runtime.(*mTreap).removeNode+0x97>
  413942:	48 85 c9 	testq	%rcx, %rcx
  413945:	eb b3 	jmp	-77 <runtime.(*mTreap).removeNode+0x4a>
  413947:	48 8b 48 10 	movq	16(%rax), %rcx
  41394b:	48 85 c9 	testq	%rcx, %rcx
  41394e:	74 63 	je	99 <runtime.(*mTreap).removeNode+0x103>
  413950:	48 8b 51 08 	movq	8(%rcx), %rdx
  413954:	48 39 c2 	cmpq	%rax, %rdx
  413957:	75 51 	jne	81 <runtime.(*mTreap).removeNode+0xfa>
  413959:	48 c7 41 08 00 00 00 00 	movq	$0, 8(%rcx)
  413961:	48 c7 40 20 00 00 00 00 	movq	$0, 32(%rax)
  413969:	48 c7 40 18 00 00 00 00 	movq	$0, 24(%rax)
  413971:	48 8d 0d 88 be 09 00 	leaq	638600(%rip), %rcx
  413978:	84 01 	testb	%al, (%rcx)
  41397a:	48 8b 0d af be 09 00 	movq	638639(%rip), %rcx
  413981:	48 2b 0d 78 be 09 00 	subq	638584(%rip), %rcx
  413988:	48 89 0d a1 be 09 00 	movq	%rcx, 638625(%rip)
  41398f:	48 8b 0d 82 be 09 00 	movq	638594(%rip), %rcx
  413996:	48 89 08 	movq	%rcx, (%rax)
  413999:	48 89 05 78 be 09 00 	movq	%rax, 638584(%rip)
  4139a0:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  4139a5:	48 83 c4 18 	addq	$24, %rsp
  4139a9:	c3 	retq
  4139aa:	48 c7 01 00 00 00 00 	movq	$0, (%rcx)
  4139b1:	eb ae 	jmp	-82 <runtime.(*mTreap).removeNode+0xb1>
  4139b3:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  4139b8:	48 c7 01 00 00 00 00 	movq	$0, (%rcx)
  4139bf:	eb a0 	jmp	-96 <runtime.(*mTreap).removeNode+0xb1>
  4139c1:	48 8d 05 28 98 05 00 	leaq	366632(%rip), %rax
  4139c8:	48 89 04 24 	movq	%rax, (%rsp)
  4139cc:	48 c7 44 24 08 27 00 00 00 	movq	$39, 8(%rsp)
  4139d5:	e8 f6 d7 00 00 	callq	55286 <runtime.throw>
  4139da:	0f 0b 	ud2
  4139dc:	e8 8f 0b 03 00 	callq	199567 <runtime.morestack_noctxt>
  4139e1:	e9 ca fe ff ff 	jmp	-310 <runtime.(*mTreap).removeNode>
  4139e6:	cc 	int3
  4139e7:	cc 	int3
  4139e8:	cc 	int3
  4139e9:	cc 	int3
  4139ea:	cc 	int3
  4139eb:	cc 	int3
  4139ec:	cc 	int3
  4139ed:	cc 	int3
  4139ee:	cc 	int3
  4139ef:	cc 	int3

runtime.(*mTreap).remove:
  4139f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4139f9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4139fd:	0f 86 a3 00 00 00 	jbe	163 <runtime.(*mTreap).remove+0xb6>
  413a03:	48 83 ec 20 	subq	$32, %rsp
  413a07:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  413a0c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  413a11:	48 8b 44 24 28 	movq	40(%rsp), %rax
  413a16:	48 8b 08 	movq	(%rax), %rcx
  413a19:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  413a1e:	48 85 c9 	testq	%rcx, %rcx
  413a21:	74 55 	je	85 <runtime.(*mTreap).remove+0x88>
  413a23:	48 8b 59 20 	movq	32(%rcx), %rbx
  413a27:	48 85 db 	testq	%rbx, %rbx
  413a2a:	74 5f 	je	95 <runtime.(*mTreap).remove+0x9b>
  413a2c:	48 8b 71 18 	movq	24(%rcx), %rsi
  413a30:	48 39 d6 	cmpq	%rdx, %rsi
  413a33:	73 05 	jae	5 <runtime.(*mTreap).remove+0x4a>
  413a35:	48 8b 09 	movq	(%rcx), %rcx
  413a38:	eb e4 	jmp	-28 <runtime.(*mTreap).remove+0x2e>
  413a3a:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  413a3f:	48 8b 71 08 	movq	8(%rcx), %rsi
  413a43:	48 85 f6 	testq	%rsi, %rsi
  413a46:	74 0e 	je	14 <runtime.(*mTreap).remove+0x66>
  413a48:	48 8b 7e 18 	movq	24(%rsi), %rdi
  413a4c:	48 39 d7 	cmpq	%rdx, %rdi
  413a4f:	72 05 	jb	5 <runtime.(*mTreap).remove+0x66>
  413a51:	48 89 f1 	movq	%rsi, %rcx
  413a54:	eb c8 	jmp	-56 <runtime.(*mTreap).remove+0x2e>
  413a56:	48 89 04 24 	movq	%rax, (%rsp)
  413a5a:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  413a5f:	e8 4c fe ff ff 	callq	-436 <runtime.(*mTreap).removeNode>
  413a64:	48 8b 44 24 10 	movq	16(%rsp), %rax
  413a69:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  413a6e:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  413a73:	48 83 c4 20 	addq	$32, %rsp
  413a77:	c3 	retq
  413a78:	48 c7 44 24 38 00 00 00 00 	movq	$0, 56(%rsp)
  413a81:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  413a86:	48 83 c4 20 	addq	$32, %rsp
  413a8a:	c3 	retq
  413a8b:	48 8d 05 e1 90 05 00 	leaq	364769(%rip), %rax
  413a92:	48 89 04 24 	movq	%rax, (%rsp)
  413a96:	48 c7 44 24 08 21 00 00 00 	movq	$33, 8(%rsp)
  413a9f:	e8 2c d7 00 00 	callq	55084 <runtime.throw>
  413aa4:	0f 0b 	ud2
  413aa6:	e8 c5 0a 03 00 	callq	199365 <runtime.morestack_noctxt>
  413aab:	e9 40 ff ff ff 	jmp	-192 <runtime.(*mTreap).remove>

runtime.(*mTreap).removeSpan:
  413ab0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  413ab9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  413abd:	76 76 	jbe	118 <runtime.(*mTreap).removeSpan+0x85>
  413abf:	48 83 ec 18 	subq	$24, %rsp
  413ac3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  413ac8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  413acd:	48 8b 44 24 28 	movq	40(%rsp), %rax
  413ad2:	48 8b 48 20 	movq	32(%rax), %rcx
  413ad6:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  413adb:	48 8b 1a 	movq	(%rdx), %rbx
  413ade:	48 8b 73 20 	movq	32(%rbx), %rsi
  413ae2:	48 39 c6 	cmpq	%rax, %rsi
  413ae5:	74 36 	je	54 <runtime.(*mTreap).removeSpan+0x6d>
  413ae7:	48 8b 7b 18 	movq	24(%rbx), %rdi
  413aeb:	48 39 cf 	cmpq	%rcx, %rdi
  413aee:	73 05 	jae	5 <runtime.(*mTreap).removeSpan+0x45>
  413af0:	48 8b 1b 	movq	(%rbx), %rbx
  413af3:	eb e9 	jmp	-23 <runtime.(*mTreap).removeSpan+0x2e>
  413af5:	76 06 	jbe	6 <runtime.(*mTreap).removeSpan+0x4d>
  413af7:	48 8b 5b 08 	movq	8(%rbx), %rbx
  413afb:	eb e1 	jmp	-31 <runtime.(*mTreap).removeSpan+0x2e>
  413afd:	48 89 c7 	movq	%rax, %rdi
  413b00:	48 39 c6 	cmpq	%rax, %rsi
  413b03:	73 0b 	jae	11 <runtime.(*mTreap).removeSpan+0x60>
  413b05:	48 8b 03 	movq	(%rbx), %rax
  413b08:	48 89 c3 	movq	%rax, %rbx
  413b0b:	48 89 f8 	movq	%rdi, %rax
  413b0e:	eb ce 	jmp	-50 <runtime.(*mTreap).removeSpan+0x2e>
  413b10:	76 06 	jbe	6 <runtime.(*mTreap).removeSpan+0x68>
  413b12:	48 8b 43 08 	movq	8(%rbx), %rax
  413b16:	eb f0 	jmp	-16 <runtime.(*mTreap).removeSpan+0x58>
  413b18:	48 89 d8 	movq	%rbx, %rax
  413b1b:	eb eb 	jmp	-21 <runtime.(*mTreap).removeSpan+0x58>
  413b1d:	48 89 14 24 	movq	%rdx, (%rsp)
  413b21:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  413b26:	e8 85 fd ff ff 	callq	-635 <runtime.(*mTreap).removeNode>
  413b2b:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  413b30:	48 83 c4 18 	addq	$24, %rsp
  413b34:	c3 	retq
  413b35:	e8 36 0a 03 00 	callq	199222 <runtime.morestack_noctxt>
  413b3a:	e9 71 ff ff ff 	jmp	-143 <runtime.(*mTreap).removeSpan>
  413b3f:	cc 	int3

runtime.scavengetreap:
  413b40:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  413b49:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  413b4d:	0f 86 c9 00 00 00 	jbe	201 <runtime.scavengetreap+0xdc>
  413b53:	48 83 ec 30 	subq	$48, %rsp
  413b57:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  413b5c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  413b61:	48 8b 44 24 38 	movq	56(%rsp), %rax
  413b66:	48 85 c0 	testq	%rax, %rax
  413b69:	0f 84 9a 00 00 00 	je	154 <runtime.scavengetreap+0xc9>
  413b6f:	48 89 04 24 	movq	%rax, (%rsp)
  413b73:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  413b78:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  413b7d:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  413b82:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  413b87:	e8 84 7f 00 00 	callq	32644 <runtime.scavengeTreapNode>
  413b8c:	48 8b 44 24 18 	movq	24(%rsp), %rax
  413b91:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  413b96:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  413b9b:	48 8b 51 08 	movq	8(%rcx), %rdx
  413b9f:	48 89 14 24 	movq	%rdx, (%rsp)
  413ba3:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  413ba8:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  413bad:	48 8b 5c 24 48 	movq	72(%rsp), %rbx
  413bb2:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  413bb7:	e8 84 ff ff ff 	callq	-124 <runtime.scavengetreap>
  413bbc:	48 8b 44 24 20 	movq	32(%rsp), %rax
  413bc1:	48 03 44 24 18 	addq	24(%rsp), %rax
  413bc6:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  413bcb:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  413bd0:	48 8b 09 	movq	(%rcx), %rcx
  413bd3:	48 89 0c 24 	movq	%rcx, (%rsp)
  413bd7:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  413bdc:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  413be1:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  413be6:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  413beb:	e8 50 ff ff ff 	callq	-176 <runtime.scavengetreap>
  413bf0:	48 8b 44 24 20 	movq	32(%rsp), %rax
  413bf5:	48 03 44 24 18 	addq	24(%rsp), %rax
  413bfa:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  413bff:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  413c04:	48 83 c4 30 	addq	$48, %rsp
  413c08:	c3 	retq
  413c09:	48 c7 44 24 50 00 00 00 00 	movq	$0, 80(%rsp)
  413c12:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  413c17:	48 83 c4 30 	addq	$48, %rsp
  413c1b:	c3 	retq
  413c1c:	e8 4f 09 03 00 	callq	198991 <runtime.morestack_noctxt>
  413c21:	e9 1a ff ff ff 	jmp	-230 <runtime.scavengetreap>
  413c26:	cc 	int3
  413c27:	cc 	int3
  413c28:	cc 	int3
  413c29:	cc 	int3
  413c2a:	cc 	int3
  413c2b:	cc 	int3
  413c2c:	cc 	int3
  413c2d:	cc 	int3
  413c2e:	cc 	int3
  413c2f:	cc 	int3

runtime.(*mTreap).rotateLeft:
  413c30:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  413c39:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  413c3d:	0f 86 a4 00 00 00 	jbe	164 <runtime.(*mTreap).rotateLeft+0xb7>
  413c43:	48 83 ec 18 	subq	$24, %rsp
  413c47:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  413c4c:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  413c51:	48 8b 44 24 28 	movq	40(%rsp), %rax
  413c56:	48 8b 08 	movq	(%rax), %rcx
  413c59:	48 8b 50 10 	movq	16(%rax), %rdx
  413c5d:	48 8b 58 08 	movq	8(%rax), %rbx
  413c61:	48 8b 71 08 	movq	8(%rcx), %rsi
  413c65:	48 8b 39 	movq	(%rcx), %rdi
  413c68:	48 89 41 08 	movq	%rax, 8(%rcx)
  413c6c:	48 89 48 10 	movq	%rcx, 16(%rax)
  413c70:	48 89 39 	movq	%rdi, (%rcx)
  413c73:	48 85 ff 	testq	%rdi, %rdi
  413c76:	74 04 	je	4 <runtime.(*mTreap).rotateLeft+0x4c>
  413c78:	48 89 4f 10 	movq	%rcx, 16(%rdi)
  413c7c:	48 89 58 08 	movq	%rbx, 8(%rax)
  413c80:	48 85 db 	testq	%rbx, %rbx
  413c83:	74 04 	je	4 <runtime.(*mTreap).rotateLeft+0x59>
  413c85:	48 89 43 10 	movq	%rax, 16(%rbx)
  413c89:	48 89 30 	movq	%rsi, (%rax)
  413c8c:	48 85 f6 	testq	%rsi, %rsi
  413c8f:	74 04 	je	4 <runtime.(*mTreap).rotateLeft+0x65>
  413c91:	48 89 46 10 	movq	%rax, 16(%rsi)
  413c95:	48 89 51 10 	movq	%rdx, 16(%rcx)
  413c99:	48 85 d2 	testq	%rdx, %rdx
  413c9c:	74 24 	je	36 <runtime.(*mTreap).rotateLeft+0x92>
  413c9e:	48 8b 5a 08 	movq	8(%rdx), %rbx
  413ca2:	48 39 c3 	cmpq	%rax, %rbx
  413ca5:	75 0e 	jne	14 <runtime.(*mTreap).rotateLeft+0x85>
  413ca7:	48 89 4a 08 	movq	%rcx, 8(%rdx)
  413cab:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  413cb0:	48 83 c4 18 	addq	$24, %rsp
  413cb4:	c3 	retq
  413cb5:	48 8b 1a 	movq	(%rdx), %rbx
  413cb8:	48 39 c3 	cmpq	%rax, %rbx
  413cbb:	75 0f 	jne	15 <runtime.(*mTreap).rotateLeft+0x9c>
  413cbd:	48 89 0a 	movq	%rcx, (%rdx)
  413cc0:	eb e9 	jmp	-23 <runtime.(*mTreap).rotateLeft+0x7b>
  413cc2:	48 8b 44 24 20 	movq	32(%rsp), %rax
  413cc7:	48 89 08 	movq	%rcx, (%rax)
  413cca:	eb df 	jmp	-33 <runtime.(*mTreap).rotateLeft+0x7b>
  413ccc:	48 8d 05 c9 80 05 00 	leaq	360649(%rip), %rax
  413cd3:	48 89 04 24 	movq	%rax, (%rsp)
  413cd7:	48 c7 44 24 08 1b 00 00 00 	movq	$27, 8(%rsp)
  413ce0:	e8 eb d4 00 00 	callq	54507 <runtime.throw>
  413ce5:	0f 0b 	ud2
  413ce7:	e8 84 08 03 00 	callq	198788 <runtime.morestack_noctxt>
  413cec:	e9 3f ff ff ff 	jmp	-193 <runtime.(*mTreap).rotateLeft>
  413cf1:	cc 	int3
  413cf2:	cc 	int3
  413cf3:	cc 	int3
  413cf4:	cc 	int3
  413cf5:	cc 	int3
  413cf6:	cc 	int3
  413cf7:	cc 	int3
  413cf8:	cc 	int3
  413cf9:	cc 	int3
  413cfa:	cc 	int3
  413cfb:	cc 	int3
  413cfc:	cc 	int3
  413cfd:	cc 	int3
  413cfe:	cc 	int3
  413cff:	cc 	int3

runtime.(*mTreap).rotateRight:
  413d00:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  413d09:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  413d0d:	0f 86 a0 00 00 00 	jbe	160 <runtime.(*mTreap).rotateRight+0xb3>
  413d13:	48 83 ec 18 	subq	$24, %rsp
  413d17:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  413d1c:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  413d21:	48 8b 44 24 28 	movq	40(%rsp), %rax
  413d26:	48 8b 48 08 	movq	8(%rax), %rcx
  413d2a:	48 8b 50 10 	movq	16(%rax), %rdx
  413d2e:	48 8b 18 	movq	(%rax), %rbx
  413d31:	48 8b 71 08 	movq	8(%rcx), %rsi
  413d35:	48 8b 39 	movq	(%rcx), %rdi
  413d38:	48 85 f6 	testq	%rsi, %rsi
  413d3b:	74 04 	je	4 <runtime.(*mTreap).rotateRight+0x41>
  413d3d:	48 89 4e 10 	movq	%rcx, 16(%rsi)
  413d41:	48 89 01 	movq	%rax, (%rcx)
  413d44:	48 89 48 10 	movq	%rcx, 16(%rax)
  413d48:	48 89 78 08 	movq	%rdi, 8(%rax)
  413d4c:	48 85 ff 	testq	%rdi, %rdi
  413d4f:	74 04 	je	4 <runtime.(*mTreap).rotateRight+0x55>
  413d51:	48 89 47 10 	movq	%rax, 16(%rdi)
  413d55:	48 89 18 	movq	%rbx, (%rax)
  413d58:	48 85 db 	testq	%rbx, %rbx
  413d5b:	74 04 	je	4 <runtime.(*mTreap).rotateRight+0x61>
  413d5d:	48 89 43 10 	movq	%rax, 16(%rbx)
  413d61:	48 89 51 10 	movq	%rdx, 16(%rcx)
  413d65:	48 85 d2 	testq	%rdx, %rdx
  413d68:	74 24 	je	36 <runtime.(*mTreap).rotateRight+0x8e>
  413d6a:	48 8b 5a 08 	movq	8(%rdx), %rbx
  413d6e:	48 39 c3 	cmpq	%rax, %rbx
  413d71:	75 0e 	jne	14 <runtime.(*mTreap).rotateRight+0x81>
  413d73:	48 89 4a 08 	movq	%rcx, 8(%rdx)
  413d77:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  413d7c:	48 83 c4 18 	addq	$24, %rsp
  413d80:	c3 	retq
  413d81:	48 8b 1a 	movq	(%rdx), %rbx
  413d84:	48 39 c3 	cmpq	%rax, %rbx
  413d87:	75 0f 	jne	15 <runtime.(*mTreap).rotateRight+0x98>
  413d89:	48 89 0a 	movq	%rcx, (%rdx)
  413d8c:	eb e9 	jmp	-23 <runtime.(*mTreap).rotateRight+0x77>
  413d8e:	48 8b 44 24 20 	movq	32(%rsp), %rax
  413d93:	48 89 08 	movq	%rcx, (%rax)
  413d96:	eb df 	jmp	-33 <runtime.(*mTreap).rotateRight+0x77>
  413d98:	48 8d 05 87 83 05 00 	leaq	361351(%rip), %rax
  413d9f:	48 89 04 24 	movq	%rax, (%rsp)
  413da3:	48 c7 44 24 08 1c 00 00 00 	movq	$28, 8(%rsp)
  413dac:	e8 1f d4 00 00 	callq	54303 <runtime.throw>
  413db1:	0f 0b 	ud2
  413db3:	e8 b8 07 03 00 	callq	198584 <runtime.morestack_noctxt>
  413db8:	e9 43 ff ff ff 	jmp	-189 <runtime.(*mTreap).rotateRight>
  413dbd:	cc 	int3
  413dbe:	cc 	int3
  413dbf:	cc 	int3

runtime.gcMarkRootPrepare:
  413dc0:	8b 05 16 fb 0a 00 	movl	719638(%rip), %eax
  413dc6:	83 f8 02 	cmpl	$2, %eax
  413dc9:	0f 85 81 01 00 00 	jne	385 <runtime.gcMarkRootPrepare+0x190>
  413dcf:	48 63 05 0a fb 0a 00 	movslq	719626(%rip), %rax
  413dd6:	48 89 05 7b 40 09 00 	movq	%rax, 606331(%rip)
  413ddd:	0f 57 c0 	xorps	%xmm0, %xmm0
  413de0:	0f 11 05 79 40 09 00 	movups	%xmm0, 606329(%rip)
  413de7:	0f b6 05 92 40 09 00 	movzbl	606354(%rip), %eax
  413dee:	84 c0 	testb	%al, %al
  413df0:	0f 85 aa 00 00 00 	jne	170 <runtime.gcMarkRootPrepare+0xe0>
  413df6:	48 8b 05 7b 38 09 00 	movq	604283(%rip), %rax
  413dfd:	48 85 c0 	testq	%rax, %rax
  413e00:	0f 84 41 01 00 00 	je	321 <runtime.gcMarkRootPrepare+0x187>
  413e06:	48 8b 48 08 	movq	8(%rax), %rcx
  413e0a:	48 8b 00 	movq	(%rax), %rax
  413e0d:	31 d2 	xorl	%edx, %edx
  413e0f:	eb 03 	jmp	3 <runtime.gcMarkRootPrepare+0x54>
  413e11:	48 ff c2 	incq	%rdx
  413e14:	48 39 ca 	cmpq	%rcx, %rdx
  413e17:	7d 32 	jge	50 <runtime.gcMarkRootPrepare+0x8b>
  413e19:	48 8b 1c d0 	movq	(%rax,%rdx,8), %rbx
  413e1d:	48 8b b3 88 00 00 00 	movq	136(%rbx), %rsi
  413e24:	48 2b b3 80 00 00 00 	subq	128(%rbx), %rsi
  413e2b:	48 8b 1d 2e 40 09 00 	movq	606254(%rip), %rbx
  413e32:	48 81 c6 ff ff 03 00 	addq	$262143, %rsi
  413e39:	48 c1 ee 12 	shrq	$18, %rsi
  413e3d:	48 39 de 	cmpq	%rbx, %rsi
  413e40:	7e cf 	jle	-49 <runtime.gcMarkRootPrepare+0x51>
  413e42:	48 89 35 17 40 09 00 	movq	%rsi, 606231(%rip)
  413e49:	eb c6 	jmp	-58 <runtime.gcMarkRootPrepare+0x51>
  413e4b:	48 8b 05 26 38 09 00 	movq	604198(%rip), %rax
  413e52:	48 85 c0 	testq	%rax, %rax
  413e55:	0f 84 e3 00 00 00 	je	227 <runtime.gcMarkRootPrepare+0x17e>
  413e5b:	48 8b 08 	movq	(%rax), %rcx
  413e5e:	48 8b 40 08 	movq	8(%rax), %rax
  413e62:	31 d2 	xorl	%edx, %edx
  413e64:	eb 03 	jmp	3 <runtime.gcMarkRootPrepare+0xa9>
  413e66:	48 ff c2 	incq	%rdx
  413e69:	48 39 c2 	cmpq	%rax, %rdx
  413e6c:	7d 32 	jge	50 <runtime.gcMarkRootPrepare+0xe0>
  413e6e:	48 8b 1c d1 	movq	(%rcx,%rdx,8), %rbx
  413e72:	48 8b b3 98 00 00 00 	movq	152(%rbx), %rsi
  413e79:	48 2b b3 90 00 00 00 	subq	144(%rbx), %rsi
  413e80:	48 8b 1d e1 3f 09 00 	movq	606177(%rip), %rbx
  413e87:	48 81 c6 ff ff 03 00 	addq	$262143, %rsi
  413e8e:	48 c1 ee 12 	shrq	$18, %rsi
  413e92:	48 39 de 	cmpq	%rbx, %rsi
  413e95:	7e cf 	jle	-49 <runtime.gcMarkRootPrepare+0xa6>
  413e97:	48 89 35 ca 3f 09 00 	movq	%rsi, 606154(%rip)
  413e9e:	eb c6 	jmp	-58 <runtime.gcMarkRootPrepare+0xa6>
  413ea0:	0f b6 05 d9 3f 09 00 	movzbl	606169(%rip), %eax
  413ea7:	84 c0 	testb	%al, %al
  413ea9:	74 57 	je	87 <runtime.gcMarkRootPrepare+0x142>
  413eab:	0f 11 05 be 3f 09 00 	movups	%xmm0, 606142(%rip)
  413eb2:	8b 05 20 fc 0a 00 	movl	719904(%rip), %eax
  413eb8:	85 c0 	testl	%eax, %eax
  413eba:	7e 0e 	jle	14 <runtime.gcMarkRootPrepare+0x10a>
  413ebc:	48 8b 05 4d fa 0a 00 	movq	719437(%rip), %rax
  413ec3:	48 89 05 ae 3f 09 00 	movq	%rax, 606126(%rip)
  413eca:	c7 05 54 3f 09 00 00 00 00 00 	movl	$0, 606036(%rip)
  413ed4:	48 8b 05 7d 3f 09 00 	movq	606077(%rip), %rax
  413edb:	48 03 05 7e 3f 09 00 	addq	606078(%rip), %rax
  413ee2:	48 03 05 7f 3f 09 00 	addq	606079(%rip), %rax
  413ee9:	48 03 05 80 3f 09 00 	addq	606080(%rip), %rax
  413ef0:	48 03 05 81 3f 09 00 	addq	606081(%rip), %rax
  413ef7:	48 83 c0 02 	addq	$2, %rax
  413efb:	89 05 2b 3f 09 00 	movl	%eax, 605995(%rip)
  413f01:	c3 	retq
  413f02:	8b 05 b8 93 09 00 	movl	627640(%rip), %eax
  413f08:	d1 e8 	shrl	%eax
  413f0a:	83 e0 01 	andl	$1, %eax
  413f0d:	48 8d 04 80 	leaq	(%rax,%rax,4), %rax
  413f11:	48 8d 0d e8 93 09 00 	leaq	627688(%rip), %rcx
  413f18:	48 8d 44 c1 20 	leaq	32(%rcx,%rax,8), %rax
  413f1d:	8b 00 	movl	(%rax), %eax
  413f1f:	05 ff 01 00 00 	addl	$511, %eax
  413f24:	c1 e8 09 	shrl	$9, %eax
  413f27:	48 89 05 42 3f 09 00 	movq	%rax, 606018(%rip)
  413f2e:	48 8b 05 db f9 0a 00 	movq	719323(%rip), %rax
  413f35:	48 89 05 3c 3f 09 00 	movq	%rax, 606012(%rip)
  413f3c:	eb 8c 	jmp	-116 <runtime.gcMarkRootPrepare+0x10a>
  413f3e:	31 c9 	xorl	%ecx, %ecx
  413f40:	31 c0 	xorl	%eax, %eax
  413f42:	e9 1b ff ff ff 	jmp	-229 <runtime.gcMarkRootPrepare+0xa2>
  413f47:	31 c9 	xorl	%ecx, %ecx
  413f49:	31 c0 	xorl	%eax, %eax
  413f4b:	e9 bd fe ff ff 	jmp	-323 <runtime.gcMarkRootPrepare+0x4d>
  413f50:	48 c7 05 fd 3e 09 00 00 00 00 00 	movq	$0, 605949(%rip)
  413f5b:	e9 7d fe ff ff 	jmp	-387 <runtime.gcMarkRootPrepare+0x1d>

runtime.gcMarkRootCheck:
  413f60:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  413f69:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  413f6d:	0f 86 89 02 00 00 	jbe	649 <runtime.gcMarkRootCheck+0x29c>
  413f73:	48 83 ec 38 	subq	$56, %rsp
  413f77:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  413f7c:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  413f81:	8b 05 a1 3e 09 00 	movl	605857(%rip), %eax
  413f87:	8b 0d 9f 3e 09 00 	movl	605855(%rip), %ecx
  413f8d:	39 c8 	cmpl	%ecx, %eax
  413f8f:	0f 82 ee 01 00 00 	jb	494 <runtime.gcMarkRootCheck+0x223>
  413f95:	48 8d 05 7c f9 0a 00 	leaq	719228(%rip), %rax
  413f9c:	48 89 04 24 	movq	%rax, (%rsp)
  413fa0:	e8 7b 55 ff ff 	callq	-43653 <runtime.lock>
  413fa5:	8b 05 31 f9 0a 00 	movl	719153(%rip), %eax
  413fab:	83 f8 02 	cmpl	$2, %eax
  413fae:	75 65 	jne	101 <runtime.gcMarkRootCheck+0xb5>
  413fb0:	8b 05 22 fb 0a 00 	movl	719650(%rip), %eax
  413fb6:	85 c0 	testl	%eax, %eax
  413fb8:	7e 5b 	jle	91 <runtime.gcMarkRootCheck+0xb5>
  413fba:	31 c0 	xorl	%eax, %eax
  413fbc:	eb 03 	jmp	3 <runtime.gcMarkRootCheck+0x61>
  413fbe:	48 ff c0 	incq	%rax
  413fc1:	48 8b 0d d0 36 09 00 	movq	603856(%rip), %rcx
  413fc8:	48 8b 15 c1 36 09 00 	movq	603841(%rip), %rdx
  413fcf:	48 39 c8 	cmpq	%rcx, %rax
  413fd2:	7d 27 	jge	39 <runtime.gcMarkRootCheck+0x9b>
  413fd4:	48 8b 0c c2 	movq	(%rdx,%rax,8), %rcx
  413fd8:	0f b6 91 c3 00 00 00 	movzbl	195(%rcx), %edx
  413fdf:	84 d2 	testb	%dl, %dl
  413fe1:	74 0b 	je	11 <runtime.gcMarkRootCheck+0x8e>
  413fe3:	0f b6 91 c4 00 00 00 	movzbl	196(%rcx), %edx
  413fea:	84 d2 	testb	%dl, %dl
  413fec:	75 d0 	jne	-48 <runtime.gcMarkRootCheck+0x5e>
  413fee:	8b 91 90 00 00 00 	movl	144(%rcx), %edx
  413ff4:	83 fa 06 	cmpl	$6, %edx
  413ff7:	75 55 	jne	85 <runtime.gcMarkRootCheck+0xee>
  413ff9:	eb c3 	jmp	-61 <runtime.gcMarkRootCheck+0x5e>
  413ffb:	48 8d 05 16 f9 0a 00 	leaq	719126(%rip), %rax
  414002:	48 89 04 24 	movq	%rax, (%rsp)
  414006:	e8 b5 56 ff ff 	callq	-43339 <runtime.unlock>
  41400b:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  414010:	48 83 c4 38 	addq	$56, %rsp
  414014:	c3 	retq
  414015:	31 c0 	xorl	%eax, %eax
  414017:	eb 03 	jmp	3 <runtime.gcMarkRootCheck+0xbc>
  414019:	48 ff c0 	incq	%rax
  41401c:	48 8b 0d 55 3e 09 00 	movq	605781(%rip), %rcx
  414023:	48 39 c8 	cmpq	%rcx, %rax
  414026:	7d d3 	jge	-45 <runtime.gcMarkRootCheck+0x9b>
  414028:	48 8b 0d 61 36 09 00 	movq	603745(%rip), %rcx
  41402f:	48 8b 15 62 36 09 00 	movq	603746(%rip), %rdx
  414036:	48 39 d0 	cmpq	%rdx, %rax
  414039:	0f 83 3d 01 00 00 	jae	317 <runtime.gcMarkRootCheck+0x21c>
  41403f:	48 8b 0c c1 	movq	(%rcx,%rax,8), %rcx
  414043:	0f b6 91 c3 00 00 00 	movzbl	195(%rcx), %edx
  41404a:	84 d2 	testb	%dl, %dl
  41404c:	75 cb 	jne	-53 <runtime.gcMarkRootCheck+0xb9>
  41404e:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  414053:	8b 81 90 00 00 00 	movl	144(%rcx), %eax
  414059:	89 44 24 14 	movl	%eax, 20(%rsp)
  41405d:	48 8b 91 98 00 00 00 	movq	152(%rcx), %rdx
  414064:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  414069:	0f b6 99 c3 00 00 00 	movzbl	195(%rcx), %ebx
  414070:	88 5c 24 13 	movb	%bl, 19(%rsp)
  414074:	0f b6 b1 c4 00 00 00 	movzbl	196(%rcx), %esi
  41407b:	40 88 74 24 12 	movb	%sil, 18(%rsp)
  414080:	e8 7b da 00 00 	callq	55931 <runtime.printlock>
  414085:	48 8d 05 22 5c 05 00 	leaq	351266(%rip), %rax
  41408c:	48 89 04 24 	movq	%rax, (%rsp)
  414090:	48 c7 44 24 08 03 00 00 00 	movq	$3, 8(%rsp)
  414099:	e8 a2 e3 00 00 	callq	58274 <runtime.printstring>
  41409e:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4140a3:	48 89 04 24 	movq	%rax, (%rsp)
  4140a7:	e8 54 e3 00 00 	callq	58196 <runtime.printpointer>
  4140ac:	48 8d 05 52 5d 05 00 	leaq	351570(%rip), %rax
  4140b3:	48 89 04 24 	movq	%rax, (%rsp)
  4140b7:	48 c7 44 24 08 06 00 00 00 	movq	$6, 8(%rsp)
  4140c0:	e8 7b e3 00 00 	callq	58235 <runtime.printstring>
  4140c5:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4140ca:	48 89 04 24 	movq	%rax, (%rsp)
  4140ce:	e8 ad e1 00 00 	callq	57773 <runtime.printint>
  4140d3:	48 8d 05 0d 5f 05 00 	leaq	352013(%rip), %rax
  4140da:	48 89 04 24 	movq	%rax, (%rsp)
  4140de:	48 c7 44 24 08 08 00 00 00 	movq	$8, 8(%rsp)
  4140e7:	e8 54 e3 00 00 	callq	58196 <runtime.printstring>
  4140ec:	8b 44 24 14 	movl	20(%rsp), %eax
  4140f0:	89 c0 	movl	%eax, %eax
  4140f2:	48 89 04 24 	movq	%rax, (%rsp)
  4140f6:	e8 75 e0 00 00 	callq	57461 <runtime.printuint>
  4140fb:	48 8d 05 04 64 05 00 	leaq	353284(%rip), %rax
  414102:	48 89 04 24 	movq	%rax, (%rsp)
  414106:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  41410f:	e8 2c e3 00 00 	callq	58156 <runtime.printstring>
  414114:	0f b6 44 24 13 	movzbl	19(%rsp), %eax
  414119:	88 04 24 	movb	%al, (%rsp)
  41411c:	e8 bf dc 00 00 	callq	56511 <runtime.printbool>
  414121:	48 8d 05 56 65 05 00 	leaq	353622(%rip), %rax
  414128:	48 89 04 24 	movq	%rax, (%rsp)
  41412c:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  414135:	e8 06 e3 00 00 	callq	58118 <runtime.printstring>
  41413a:	0f b6 44 24 12 	movzbl	18(%rsp), %eax
  41413f:	88 04 24 	movb	%al, (%rsp)
  414142:	e8 99 dc 00 00 	callq	56473 <runtime.printbool>
  414147:	e8 44 dc 00 00 	callq	56388 <runtime.printnl>
  41414c:	e8 2f da 00 00 	callq	55855 <runtime.printunlock>
  414151:	48 8d 05 c0 f7 0a 00 	leaq	718784(%rip), %rax
  414158:	48 89 04 24 	movq	%rax, (%rsp)
  41415c:	e8 5f 55 ff ff 	callq	-43681 <runtime.unlock>
  414161:	48 8d 05 5d 68 05 00 	leaq	354397(%rip), %rax
  414168:	48 89 04 24 	movq	%rax, (%rsp)
  41416c:	48 c7 44 24 08 0f 00 00 00 	movq	$15, 8(%rsp)
  414175:	e8 56 d0 00 00 	callq	53334 <runtime.throw>
  41417a:	0f 0b 	ud2
  41417c:	e8 bf b8 00 00 	callq	47295 <runtime.panicindex>
  414181:	0f 0b 	ud2
  414183:	89 44 24 1c 	movl	%eax, 28(%rsp)
  414187:	89 4c 24 18 	movl	%ecx, 24(%rsp)
  41418b:	e8 70 d9 00 00 	callq	55664 <runtime.printlock>
  414190:	8b 44 24 1c 	movl	28(%rsp), %eax
  414194:	48 89 04 24 	movq	%rax, (%rsp)
  414198:	e8 d3 df 00 00 	callq	57299 <runtime.printuint>
  41419d:	48 8d 05 2a 5b 05 00 	leaq	351018(%rip), %rax
  4141a4:	48 89 04 24 	movq	%rax, (%rsp)
  4141a8:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  4141b1:	e8 8a e2 00 00 	callq	57994 <runtime.printstring>
  4141b6:	8b 44 24 18 	movl	24(%rsp), %eax
  4141ba:	48 89 04 24 	movq	%rax, (%rsp)
  4141be:	e8 ad df 00 00 	callq	57261 <runtime.printuint>
  4141c3:	48 8d 05 13 6e 05 00 	leaq	355859(%rip), %rax
  4141ca:	48 89 04 24 	movq	%rax, (%rsp)
  4141ce:	48 c7 44 24 08 14 00 00 00 	movq	$20, 8(%rsp)
  4141d7:	e8 64 e2 00 00 	callq	57956 <runtime.printstring>
  4141dc:	e8 9f d9 00 00 	callq	55711 <runtime.printunlock>
  4141e1:	48 8d 05 c0 74 05 00 	leaq	357568(%rip), %rax
  4141e8:	48 89 04 24 	movq	%rax, (%rsp)
  4141ec:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  4141f5:	e8 d6 cf 00 00 	callq	53206 <runtime.throw>
  4141fa:	0f 0b 	ud2
  4141fc:	e8 6f 03 03 00 	callq	197487 <runtime.morestack_noctxt>
  414201:	e9 5a fd ff ff 	jmp	-678 <runtime.gcMarkRootCheck>
  414206:	cc 	int3
  414207:	cc 	int3
  414208:	cc 	int3
  414209:	cc 	int3
  41420a:	cc 	int3
  41420b:	cc 	int3
  41420c:	cc 	int3
  41420d:	cc 	int3
  41420e:	cc 	int3
  41420f:	cc 	int3

runtime.markroot:
  414210:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  414219:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41421d:	0f 86 3f 03 00 00 	jbe	831 <runtime.markroot+0x352>
  414223:	48 83 ec 78 	subq	$120, %rsp
  414227:	48 89 6c 24 70 	movq	%rbp, 112(%rsp)
  41422c:	48 8d 6c 24 70 	leaq	112(%rsp), %rbp
  414231:	48 8b 05 20 3c 09 00 	movq	605216(%rip), %rax
  414238:	8d 48 02 	leal	2(%rax), %ecx
  41423b:	48 8b 15 1e 3c 09 00 	movq	605214(%rip), %rdx
  414242:	01 d0 	addl	%edx, %eax
  414244:	48 8b 15 1d 3c 09 00 	movq	605213(%rip), %rdx
  41424b:	01 c2 	addl	%eax, %edx
  41424d:	48 8b 1d 1c 3c 09 00 	movq	605212(%rip), %rbx
  414254:	01 d3 	addl	%edx, %ebx
  414256:	48 8b 35 1b 3c 09 00 	movq	605211(%rip), %rsi
  41425d:	01 de 	addl	%ebx, %esi
  41425f:	8b bc 24 88 00 00 00 	movl	136(%rsp), %edi
  414266:	83 ff 02 	cmpl	$2, %edi
  414269:	72 08 	jb	8 <runtime.markroot+0x63>
  41426b:	39 cf 	cmpl	%ecx, %edi
  41426d:	0f 82 bc 02 00 00 	jb	700 <runtime.markroot+0x31f>
  414273:	83 c0 02 	addl	$2, %eax
  414276:	39 f9 	cmpl	%edi, %ecx
  414278:	0f 87 af 00 00 00 	ja	175 <runtime.markroot+0x11d>
  41427e:	39 c7 	cmpl	%eax, %edi
  414280:	0f 83 a7 00 00 00 	jae	167 <runtime.markroot+0x11d>
  414286:	48 8b 05 eb 33 09 00 	movq	603115(%rip), %rax
  41428d:	48 85 c0 	testq	%rax, %rax
  414290:	0f 84 8e 00 00 00 	je	142 <runtime.markroot+0x114>
  414296:	48 8b 10 	movq	(%rax), %rdx
  414299:	48 8b 40 08 	movq	8(%rax), %rax
  41429d:	89 4c 24 28 	movl	%ecx, 40(%rsp)
  4142a1:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  4142a6:	48 89 54 24 50 	movq	%rdx, 80(%rsp)
  4142ab:	31 db 	xorl	%ebx, %ebx
  4142ad:	eb 66 	jmp	102 <runtime.markroot+0x105>
  4142af:	48 89 5c 24 40 	movq	%rbx, 64(%rsp)
  4142b4:	48 8b 04 da 	movq	(%rdx,%rbx,8), %rax
  4142b8:	48 8b b0 80 00 00 00 	movq	128(%rax), %rsi
  4142bf:	4c 8b 80 88 00 00 00 	movq	136(%rax), %r8
  4142c6:	48 8b 80 98 01 00 00 	movq	408(%rax), %rax
  4142cd:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  4142d2:	48 89 34 24 	movq	%rsi, (%rsp)
  4142d6:	49 29 f0 	subq	%rsi, %r8
  4142d9:	4c 89 44 24 08 	movq	%r8, 8(%rsp)
  4142de:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  4142e6:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4142eb:	29 cf 	subl	%ecx, %edi
  4142ed:	48 89 7c 24 20 	movq	%rdi, 32(%rsp)
  4142f2:	e8 79 02 00 00 	callq	633 <runtime.markrootBlock>
  4142f7:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4142fc:	48 8d 58 01 	leaq	1(%rax), %rbx
  414300:	48 8b 44 24 30 	movq	48(%rsp), %rax
  414305:	8b 4c 24 28 	movl	40(%rsp), %ecx
  414309:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  41430e:	8b bc 24 88 00 00 00 	movl	136(%rsp), %edi
  414315:	48 39 c3 	cmpq	%rax, %rbx
  414318:	7c 95 	jl	-107 <runtime.markroot+0x9f>
  41431a:	48 8b 6c 24 70 	movq	112(%rsp), %rbp
  41431f:	48 83 c4 78 	addq	$120, %rsp
  414323:	c3 	retq
  414324:	31 c0 	xorl	%eax, %eax
  414326:	31 d2 	xorl	%edx, %edx
  414328:	e9 70 ff ff ff 	jmp	-144 <runtime.markroot+0x8d>
  41432d:	8d 4a 02 	leal	2(%rdx), %ecx
  414330:	39 f8 	cmpl	%edi, %eax
  414332:	0f 87 aa 00 00 00 	ja	170 <runtime.markroot+0x1d2>
  414338:	39 cf 	cmpl	%ecx, %edi
  41433a:	0f 83 a2 00 00 00 	jae	162 <runtime.markroot+0x1d2>
  414340:	48 8b 0d 31 33 09 00 	movq	602929(%rip), %rcx
  414347:	48 85 c9 	testq	%rcx, %rcx
  41434a:	0f 84 89 00 00 00 	je	137 <runtime.markroot+0x1c9>
  414350:	48 8b 11 	movq	(%rcx), %rdx
  414353:	48 8b 49 08 	movq	8(%rcx), %rcx
  414357:	89 44 24 2c 	movl	%eax, 44(%rsp)
  41435b:	48 89 54 24 50 	movq	%rdx, 80(%rsp)
  414360:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  414365:	31 db 	xorl	%ebx, %ebx
  414367:	eb 66 	jmp	102 <runtime.markroot+0x1bf>
  414369:	48 89 5c 24 40 	movq	%rbx, 64(%rsp)
  41436e:	48 8b 0c da 	movq	(%rdx,%rbx,8), %rcx
  414372:	48 8b b1 90 00 00 00 	movq	144(%rcx), %rsi
  414379:	4c 8b 81 98 00 00 00 	movq	152(%rcx), %r8
  414380:	48 8b 89 a8 01 00 00 	movq	424(%rcx), %rcx
  414387:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  41438c:	48 89 34 24 	movq	%rsi, (%rsp)
  414390:	49 29 f0 	subq	%rsi, %r8
  414393:	4c 89 44 24 08 	movq	%r8, 8(%rsp)
  414398:	48 8b 8c 24 80 00 00 00 	movq	128(%rsp), %rcx
  4143a0:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  4143a5:	29 c7 	subl	%eax, %edi
  4143a7:	48 89 7c 24 20 	movq	%rdi, 32(%rsp)
  4143ac:	e8 bf 01 00 00 	callq	447 <runtime.markrootBlock>
  4143b1:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4143b6:	48 8d 58 01 	leaq	1(%rax), %rbx
  4143ba:	8b 44 24 2c 	movl	44(%rsp), %eax
  4143be:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  4143c3:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  4143c8:	8b bc 24 88 00 00 00 	movl	136(%rsp), %edi
  4143cf:	48 39 cb 	cmpq	%rcx, %rbx
  4143d2:	7c 95 	jl	-107 <runtime.markroot+0x159>
  4143d4:	e9 41 ff ff ff 	jmp	-191 <runtime.markroot+0x10a>
  4143d9:	31 d2 	xorl	%edx, %edx
  4143db:	31 c9 	xorl	%ecx, %ecx
  4143dd:	e9 75 ff ff ff 	jmp	-139 <runtime.markroot+0x147>
  4143e2:	85 ff 	testl	%edi, %edi
  4143e4:	75 67 	jne	103 <runtime.markroot+0x23d>
  4143e6:	0f b6 05 93 3a 09 00 	movzbl	604819(%rip), %eax
  4143ed:	84 c0 	testb	%al, %al
  4143ef:	0f 85 25 ff ff ff 	jne	-219 <runtime.markroot+0x10a>
  4143f5:	48 8b 05 14 32 09 00 	movq	602644(%rip), %rax
  4143fc:	eb 45 	jmp	69 <runtime.markroot+0x233>
  4143fe:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  414403:	8b 48 10 	movl	16(%rax), %ecx
  414406:	48 8d 50 18 	leaq	24(%rax), %rdx
  41440a:	48 8d 1d ef f6 0a 00 	leaq	718575(%rip), %rbx
  414411:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  414416:	48 89 14 24 	movq	%rdx, (%rsp)
  41441a:	89 c9 	movl	%ecx, %ecx
  41441c:	48 8d 0c 89 	leaq	(%rcx,%rcx,4), %rcx
  414420:	48 c1 e1 03 	shlq	$3, %rcx
  414424:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  414429:	48 8b 8c 24 80 00 00 00 	movq	128(%rsp), %rcx
  414431:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  414436:	e8 05 21 00 00 	callq	8453 <runtime.scanblock>
  41443b:	48 8b 44 24 48 	movq	72(%rsp), %rax
  414440:	48 8b 00 	movq	(%rax), %rax
  414443:	48 85 c0 	testq	%rax, %rax
  414446:	75 b6 	jne	-74 <runtime.markroot+0x1ee>
  414448:	e9 cd fe ff ff 	jmp	-307 <runtime.markroot+0x10a>
  41444d:	83 ff 01 	cmpl	$1, %edi
  414450:	75 24 	jne	36 <runtime.markroot+0x266>
  414452:	0f b6 05 27 3a 09 00 	movzbl	604711(%rip), %eax
  414459:	84 c0 	testb	%al, %al
  41445b:	0f 85 b9 fe ff ff 	jne	-327 <runtime.markroot+0x10a>
  414461:	48 8d 05 90 9c 05 00 	leaq	367760(%rip), %rax
  414468:	48 89 04 24 	movq	%rax, (%rsp)
  41446c:	e8 af ff 02 00 	callq	196527 <runtime.systemstack>
  414471:	e9 a4 fe ff ff 	jmp	-348 <runtime.markroot+0x10a>
  414476:	8d 43 02 	leal	2(%rbx), %eax
  414479:	39 f9 	cmpl	%edi, %ecx
  41447b:	77 08 	ja	8 <runtime.markroot+0x275>
  41447d:	39 c7 	cmpl	%eax, %edi
  41447f:	0f 82 8d 00 00 00 	jb	141 <runtime.markroot+0x302>
  414485:	39 f8 	cmpl	%edi, %eax
  414487:	0f 87 ba 00 00 00 	ja	186 <runtime.markroot+0x337>
  41448d:	8d 4e 02 	leal	2(%rsi), %ecx
  414490:	39 cf 	cmpl	%ecx, %edi
  414492:	0f 83 af 00 00 00 	jae	175 <runtime.markroot+0x337>
  414498:	48 8b 0d f9 31 09 00 	movq	602617(%rip), %rcx
  41449f:	48 8b 15 ea 31 09 00 	movq	602602(%rip), %rdx
  4144a6:	29 c7 	subl	%eax, %edi
  4144a8:	48 39 cf 	cmpq	%rcx, %rdi
  4144ab:	0f 83 8f 00 00 00 	jae	143 <runtime.markroot+0x330>
  4144b1:	48 8b 04 fa 	movq	(%rdx,%rdi,8), %rax
  4144b5:	8b 88 90 00 00 00 	movl	144(%rax), %ecx
  4144bb:	83 f9 04 	cmpl	$4, %ecx
  4144be:	75 4b 	jne	75 <runtime.markroot+0x2fb>
  4144c0:	48 8b 88 a0 00 00 00 	movq	160(%rax), %rcx
  4144c7:	48 85 c9 	testq	%rcx, %rcx
  4144ca:	75 0e 	jne	14 <runtime.markroot+0x2ca>
  4144cc:	48 8b 0d 65 39 09 00 	movq	604517(%rip), %rcx
  4144d3:	48 89 88 a0 00 00 00 	movq	%rcx, 160(%rax)
  4144da:	48 8d 0d ff df 02 00 	leaq	188415(%rip), %rcx
  4144e1:	48 89 4c 24 58 	movq	%rcx, 88(%rsp)
  4144e6:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  4144eb:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  4144f3:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  4144f8:	48 8d 44 24 58 	leaq	88(%rsp), %rax
  4144fd:	48 89 04 24 	movq	%rax, (%rsp)
  414501:	e8 1a ff 02 00 	callq	196378 <runtime.systemstack>
  414506:	e9 0f fe ff ff 	jmp	-497 <runtime.markroot+0x10a>
  41450b:	83 f9 03 	cmpl	$3, %ecx
  41450e:	74 b0 	je	-80 <runtime.markroot+0x2b0>
  414510:	eb c8 	jmp	-56 <runtime.markroot+0x2ca>
  414512:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  41451a:	48 89 04 24 	movq	%rax, (%rsp)
  41451e:	29 cf 	subl	%ecx, %edi
  414520:	48 89 7c 24 08 	movq	%rdi, 8(%rsp)
  414525:	e8 36 02 00 00 	callq	566 <runtime.markrootSpans>
  41452a:	e9 eb fd ff ff 	jmp	-533 <runtime.markroot+0x10a>
  41452f:	8d 47 fe 	leal	-2(%rdi), %eax
  414532:	48 89 04 24 	movq	%rax, (%rsp)
  414536:	e8 55 9c 00 00 	callq	40021 <runtime.flushmcache>
  41453b:	e9 da fd ff ff 	jmp	-550 <runtime.markroot+0x10a>
  414540:	e8 fb b4 00 00 	callq	46331 <runtime.panicindex>
  414545:	0f 0b 	ud2
  414547:	48 8d 05 71 69 05 00 	leaq	354673(%rip), %rax
  41454e:	48 89 04 24 	movq	%rax, (%rsp)
  414552:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  41455b:	e8 70 cc 00 00 	callq	52336 <runtime.throw>
  414560:	0f 0b 	ud2
  414562:	e8 09 00 03 00 	callq	196617 <runtime.morestack_noctxt>
  414567:	e9 a4 fc ff ff 	jmp	-860 <runtime.markroot>
  41456c:	cc 	int3
  41456d:	cc 	int3
  41456e:	cc 	int3
  41456f:	cc 	int3

runtime.markrootBlock:
  414570:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  414579:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41457d:	0f 86 84 00 00 00 	jbe	132 <runtime.markrootBlock+0x97>
  414583:	48 83 ec 28 	subq	$40, %rsp
  414587:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  41458c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  414591:	48 8b 44 24 50 	movq	80(%rsp), %rax
  414596:	48 89 c1 	movq	%rax, %rcx
  414599:	48 c1 e0 12 	shlq	$18, %rax
  41459d:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  4145a2:	48 8d 1c 10 	leaq	(%rax,%rdx), %rbx
  4145a6:	48 8b 74 24 38 	movq	56(%rsp), %rsi
  4145ab:	48 01 d6 	addq	%rdx, %rsi
  4145ae:	48 39 f3 	cmpq	%rsi, %rbx
  4145b1:	73 4a 	jae	74 <runtime.markrootBlock+0x8d>
  4145b3:	48 c1 e1 0c 	shlq	$12, %rcx
  4145b7:	48 8d 84 02 00 00 04 00 	leaq	262144(%rdx,%rax), %rax
  4145bf:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  4145c4:	48 01 d1 	addq	%rdx, %rcx
  4145c7:	48 39 f0 	cmpq	%rsi, %rax
  4145ca:	76 2a 	jbe	42 <runtime.markrootBlock+0x86>
  4145cc:	48 29 de 	subq	%rbx, %rsi
  4145cf:	48 89 1c 24 	movq	%rbx, (%rsp)
  4145d3:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  4145d8:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  4145dd:	48 8b 44 24 48 	movq	72(%rsp), %rax
  4145e2:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4145e7:	e8 54 1f 00 00 	callq	8020 <runtime.scanblock>
  4145ec:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4145f1:	48 83 c4 28 	addq	$40, %rsp
  4145f5:	c3 	retq
  4145f6:	be 00 00 04 00 	movl	$262144, %esi
  4145fb:	eb d2 	jmp	-46 <runtime.markrootBlock+0x5f>
  4145fd:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  414602:	48 83 c4 28 	addq	$40, %rsp
  414606:	c3 	retq
  414607:	e8 64 ff 02 00 	callq	196452 <runtime.morestack_noctxt>
  41460c:	e9 5f ff ff ff 	jmp	-161 <runtime.markrootBlock>
  414611:	cc 	int3
  414612:	cc 	int3
  414613:	cc 	int3
  414614:	cc 	int3
  414615:	cc 	int3
  414616:	cc 	int3
  414617:	cc 	int3
  414618:	cc 	int3
  414619:	cc 	int3
  41461a:	cc 	int3
  41461b:	cc 	int3
  41461c:	cc 	int3
  41461d:	cc 	int3
  41461e:	cc 	int3
  41461f:	cc 	int3

runtime.markrootFreeGStacks:
  414620:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  414629:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41462d:	0f 86 1e 01 00 00 	jbe	286 <runtime.markrootFreeGStacks+0x131>
  414633:	48 83 ec 28 	subq	$40, %rsp
  414637:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  41463c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  414641:	48 8d 05 48 33 09 00 	leaq	602952(%rip), %rax
  414648:	48 89 04 24 	movq	%rax, (%rsp)
  41464c:	e8 cf 4e ff ff 	callq	-45361 <runtime.lock>
  414651:	48 8b 05 40 33 09 00 	movq	602944(%rip), %rax
  414658:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  41465d:	8b 0d ad f3 0a 00 	movl	717741(%rip), %ecx
  414663:	85 c9 	testl	%ecx, %ecx
  414665:	0f 85 d3 00 00 00 	jne	211 <runtime.markrootFreeGStacks+0x11e>
  41466b:	48 c7 05 22 33 09 00 00 00 00 00 	movq	$0, 602914(%rip)
  414676:	48 8d 05 13 33 09 00 	leaq	602899(%rip), %rax
  41467d:	48 89 04 24 	movq	%rax, (%rsp)
  414681:	e8 3a 50 ff ff 	callq	-44998 <runtime.unlock>
  414686:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41468b:	48 85 c0 	testq	%rax, %rax
  41468e:	0f 84 a0 00 00 00 	je	160 <runtime.markrootFreeGStacks+0x114>
  414694:	48 89 c1 	movq	%rax, %rcx
  414697:	48 89 ca 	movq	%rcx, %rdx
  41469a:	eb 1f 	jmp	31 <runtime.markrootFreeGStacks+0x9b>
  41469c:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4146a1:	48 89 04 24 	movq	%rax, (%rsp)
  4146a5:	e8 26 23 02 00 	callq	140070 <runtime.shrinkstack>
  4146aa:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  4146af:	48 8b 82 b8 00 00 00 	movq	184(%rdx), %rax
  4146b6:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  4146bb:	48 85 c0 	testq	%rax, %rax
  4146be:	75 dc 	jne	-36 <runtime.markrootFreeGStacks+0x7c>
  4146c0:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  4146c5:	48 8d 05 c4 32 09 00 	leaq	602820(%rip), %rax
  4146cc:	48 89 04 24 	movq	%rax, (%rsp)
  4146d0:	e8 4b 4e ff ff 	callq	-45493 <runtime.lock>
  4146d5:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4146da:	48 8d 88 b8 00 00 00 	leaq	184(%rax), %rcx
  4146e1:	84 01 	testb	%al, (%rcx)
  4146e3:	48 8b 0d b6 32 09 00 	movq	602806(%rip), %rcx
  4146ea:	48 89 88 b8 00 00 00 	movq	%rcx, 184(%rax)
  4146f1:	8b 05 19 f3 0a 00 	movl	717593(%rip), %eax
  4146f7:	85 c0 	testl	%eax, %eax
  4146f9:	75 26 	jne	38 <runtime.markrootFreeGStacks+0x101>
  4146fb:	48 8b 44 24 10 	movq	16(%rsp), %rax
  414700:	48 89 05 99 32 09 00 	movq	%rax, 602777(%rip)
  414707:	48 8d 05 82 32 09 00 	leaq	602754(%rip), %rax
  41470e:	48 89 04 24 	movq	%rax, (%rsp)
  414712:	e8 a9 4f ff ff 	callq	-45143 <runtime.unlock>
  414717:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  41471c:	48 83 c4 28 	addq	$40, %rsp
  414720:	c3 	retq
  414721:	48 8d 3d 78 32 09 00 	leaq	602744(%rip), %rdi
  414728:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41472d:	e8 6e 21 03 00 	callq	205166 <runtime.gcWriteBarrier>
  414732:	eb d3 	jmp	-45 <runtime.markrootFreeGStacks+0xe7>
  414734:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  414739:	48 83 c4 28 	addq	$40, %rsp
  41473d:	c3 	retq
  41473e:	48 8d 3d 53 32 09 00 	leaq	602707(%rip), %rdi
  414745:	31 c0 	xorl	%eax, %eax
  414747:	e8 54 21 03 00 	callq	205140 <runtime.gcWriteBarrier>
  41474c:	e9 25 ff ff ff 	jmp	-219 <runtime.markrootFreeGStacks+0x56>
  414751:	e8 1a fe 02 00 	callq	196122 <runtime.morestack_noctxt>
  414756:	e9 c5 fe ff ff 	jmp	-315 <runtime.markrootFreeGStacks>
  41475b:	cc 	int3
  41475c:	cc 	int3
  41475d:	cc 	int3
  41475e:	cc 	int3
  41475f:	cc 	int3

runtime.markrootSpans:
  414760:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  414769:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41476d:	0f 86 1f 02 00 00 	jbe	543 <runtime.markrootSpans+0x232>
  414773:	48 83 ec 68 	subq	$104, %rsp
  414777:	48 89 6c 24 60 	movq	%rbp, 96(%rsp)
  41477c:	48 8d 6c 24 60 	leaq	96(%rsp), %rbp
  414781:	0f b6 05 f8 36 09 00 	movzbl	603896(%rip), %eax
  414788:	84 c0 	testb	%al, %al
  41478a:	0f 85 e7 01 00 00 	jne	487 <runtime.markrootSpans+0x217>
  414790:	8b 05 2a 8b 09 00 	movl	625450(%rip), %eax
  414796:	89 44 24 28 	movl	%eax, 40(%rsp)
  41479a:	d1 e8 	shrl	%eax
  41479c:	83 e0 01 	andl	$1, %eax
  41479f:	48 8d 04 80 	leaq	(%rax,%rax,4), %rax
  4147a3:	48 8d 15 56 8b 09 00 	leaq	625494(%rip), %rdx
  4147aa:	48 8d 04 c2 	leaq	(%rdx,%rax,8), %rax
  4147ae:	48 89 04 24 	movq	%rax, (%rsp)
  4147b2:	48 8b 44 24 78 	movq	120(%rsp), %rax
  4147b7:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4147bc:	e8 8f 44 00 00 	callq	17551 <runtime.(*gcSweepBuf).block>
  4147c1:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4147c6:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  4147cb:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  4147d0:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  4147d5:	31 d2 	xorl	%edx, %edx
  4147d7:	eb 03 	jmp	3 <runtime.markrootSpans+0x7c>
  4147d9:	48 ff c2 	incq	%rdx
  4147dc:	48 39 c2 	cmpq	%rax, %rdx
  4147df:	0f 8d 1b 01 00 00 	jge	283 <runtime.markrootSpans+0x1a0>
  4147e5:	48 8b 1c d1 	movq	(%rcx,%rdx,8), %rbx
  4147e9:	0f b6 73 64 	movzbl	100(%rbx), %esi
  4147ed:	40 80 fe 01 	cmpb	$1, %sil
  4147f1:	75 e6 	jne	-26 <runtime.markrootSpans+0x79>
  4147f3:	0f b6 35 c5 f0 0a 00 	movzbl	716997(%rip), %esi
  4147fa:	40 84 f6 	testb	%sil, %sil
  4147fd:	0f 84 ed 00 00 00 	je	237 <runtime.markrootSpans+0x190>
  414803:	48 8b b3 90 00 00 00 	movq	144(%rbx), %rsi
  41480a:	48 85 f6 	testq	%rsi, %rsi
  41480d:	74 ca 	je	-54 <runtime.markrootSpans+0x79>
  41480f:	48 89 54 24 38 	movq	%rdx, 56(%rsp)
  414814:	48 89 5c 24 48 	movq	%rbx, 72(%rsp)
  414819:	48 8d 83 88 00 00 00 	leaq	136(%rbx), %rax
  414820:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  414825:	48 89 04 24 	movq	%rax, (%rsp)
  414829:	e8 f2 4c ff ff 	callq	-45838 <runtime.lock>
  41482e:	48 8b 44 24 48 	movq	72(%rsp), %rax
  414833:	48 8b 88 90 00 00 00 	movq	144(%rax), %rcx
  41483a:	eb 03 	jmp	3 <runtime.markrootSpans+0xdf>
  41483c:	48 8b 09 	movq	(%rcx), %rcx
  41483f:	48 85 c9 	testq	%rcx, %rcx
  414842:	0f 84 86 00 00 00 	je	134 <runtime.markrootSpans+0x16e>
  414848:	0f b6 51 0a 	movzbl	10(%rcx), %edx
  41484c:	80 fa 01 	cmpb	$1, %dl
  41484f:	75 eb 	jne	-21 <runtime.markrootSpans+0xdc>
  414851:	0f b7 51 08 	movzwl	8(%rcx), %edx
  414855:	48 8b 58 68 	movq	104(%rax), %rbx
  414859:	48 8b 70 18 	movq	24(%rax), %rsi
  41485d:	48 85 db 	testq	%rbx, %rbx
  414860:	0f 84 a4 00 00 00 	je	164 <runtime.markrootSpans+0x1aa>
  414866:	48 89 4c 24 50 	movq	%rcx, 80(%rsp)
  41486b:	48 89 d0 	movq	%rdx, %rax
  41486e:	31 d2 	xorl	%edx, %edx
  414870:	48 f7 f3 	divq	%rbx
  414873:	48 0f af c3 	imulq	%rbx, %rax
  414877:	48 8d 0c 06 	leaq	(%rsi,%rax), %rcx
  41487b:	48 89 0c 24 	movq	%rcx, (%rsp)
  41487f:	48 8b 4c 24 70 	movq	112(%rsp), %rcx
  414884:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  414889:	e8 42 1e 00 00 	callq	7746 <runtime.scanobject>
  41488e:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  414893:	48 8d 51 10 	leaq	16(%rcx), %rdx
  414897:	48 8d 1d 62 07 09 00 	leaq	591714(%rip), %rbx
  41489e:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  4148a3:	48 89 14 24 	movq	%rdx, (%rsp)
  4148a7:	48 c7 44 24 08 08 00 00 00 	movq	$8, 8(%rsp)
  4148b0:	48 8b 54 24 70 	movq	112(%rsp), %rdx
  4148b5:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  4148ba:	e8 81 1c 00 00 	callq	7297 <runtime.scanblock>
  4148bf:	48 8b 44 24 48 	movq	72(%rsp), %rax
  4148c4:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  4148c9:	e9 6e ff ff ff 	jmp	-146 <runtime.markrootSpans+0xdc>
  4148ce:	48 8b 44 24 58 	movq	88(%rsp), %rax
  4148d3:	48 89 04 24 	movq	%rax, (%rsp)
  4148d7:	e8 e4 4d ff ff 	callq	-45596 <runtime.unlock>
  4148dc:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4148e1:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  4148e6:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  4148eb:	e9 e9 fe ff ff 	jmp	-279 <runtime.markrootSpans+0x79>
  4148f0:	8b 73 58 	movl	88(%rbx), %esi
  4148f3:	8b 7c 24 28 	movl	40(%rsp), %edi
  4148f7:	39 fe 	cmpl	%edi, %esi
  4148f9:	75 16 	jne	22 <runtime.markrootSpans+0x1b1>
  4148fb:	e9 03 ff ff ff 	jmp	-253 <runtime.markrootSpans+0xa3>
  414900:	48 8b 6c 24 60 	movq	96(%rsp), %rbp
  414905:	48 83 c4 68 	addq	$104, %rsp
  414909:	c3 	retq
  41490a:	e8 11 b2 00 00 	callq	45585 <runtime.panicdivide>
  41490f:	0f 0b 	ud2
  414911:	89 74 24 2c 	movl	%esi, 44(%rsp)
  414915:	e8 e6 d1 00 00 	callq	53734 <runtime.printlock>
  41491a:	48 8d 05 2c 55 05 00 	leaq	349484(%rip), %rax
  414921:	48 89 04 24 	movq	%rax, (%rsp)
  414925:	48 c7 44 24 08 06 00 00 00 	movq	$6, 8(%rsp)
  41492e:	e8 0d db 00 00 	callq	56077 <runtime.printstring>
  414933:	8b 44 24 2c 	movl	44(%rsp), %eax
  414937:	48 89 04 24 	movq	%rax, (%rsp)
  41493b:	e8 30 d8 00 00 	callq	55344 <runtime.printuint>
  414940:	e8 fb d3 00 00 	callq	54267 <runtime.printsp>
  414945:	8b 44 24 28 	movl	40(%rsp), %eax
  414949:	48 89 04 24 	movq	%rax, (%rsp)
  41494d:	e8 1e d8 00 00 	callq	55326 <runtime.printuint>
  414952:	e8 39 d4 00 00 	callq	54329 <runtime.printnl>
  414957:	e8 24 d2 00 00 	callq	53796 <runtime.printunlock>
  41495c:	48 8d 05 6f 61 05 00 	leaq	352623(%rip), %rax
  414963:	48 89 04 24 	movq	%rax, (%rsp)
  414967:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  414970:	e8 5b c8 00 00 	callq	51291 <runtime.throw>
  414975:	0f 0b 	ud2
  414977:	48 8d 05 a8 84 05 00 	leaq	361640(%rip), %rax
  41497e:	48 89 04 24 	movq	%rax, (%rsp)
  414982:	48 c7 44 24 08 24 00 00 00 	movq	$36, 8(%rsp)
  41498b:	e8 40 c8 00 00 	callq	51264 <runtime.throw>
  414990:	0f 0b 	ud2
  414992:	e8 d9 fb 02 00 	callq	195545 <runtime.morestack_noctxt>
  414997:	e9 c4 fd ff ff 	jmp	-572 <runtime.markrootSpans>
  41499c:	cc 	int3
  41499d:	cc 	int3
  41499e:	cc 	int3
  41499f:	cc 	int3

runtime.gcAssistAlloc:
  4149a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4149a9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4149ad:	0f 86 36 02 00 00 	jbe	566 <runtime.gcAssistAlloc+0x249>
  4149b3:	48 83 ec 38 	subq	$56, %rsp
  4149b7:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  4149bc:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  4149c1:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4149c6:	48 8b 48 30 	movq	48(%rax), %rcx
  4149ca:	64 48 8b 14 25 f8 ff ff ff 	movq	%fs:-8, %rdx
  4149d3:	48 8b 09 	movq	(%rcx), %rcx
  4149d6:	48 39 ca 	cmpq	%rcx, %rdx
  4149d9:	0f 84 00 02 00 00 	je	512 <runtime.gcAssistAlloc+0x23f>
  4149df:	48 8b 4a 30 	movq	48(%rdx), %rcx
  4149e3:	8b 91 00 01 00 00 	movl	256(%rcx), %edx
  4149e9:	85 d2 	testl	%edx, %edx
  4149eb:	0f 8f e4 01 00 00 	jg	484 <runtime.gcAssistAlloc+0x235>
  4149f1:	48 8b 89 f8 00 00 00 	movq	248(%rcx), %rcx
  4149f8:	48 85 c9 	testq	%rcx, %rcx
  4149fb:	0f 85 d4 01 00 00 	jne	468 <runtime.gcAssistAlloc+0x235>
  414a01:	31 c9 	xorl	%ecx, %ecx
  414a03:	eb 0a 	jmp	10 <runtime.gcAssistAlloc+0x6f>
  414a05:	48 8b 44 24 40 	movq	64(%rsp), %rax
  414a0a:	0f b6 4c 24 0f 	movzbl	15(%rsp), %ecx
  414a0f:	48 8b 90 70 01 00 00 	movq	368(%rax), %rdx
  414a16:	48 f7 da 	negq	%rdx
  414a19:	0f 57 c0 	xorps	%xmm0, %xmm0
  414a1c:	f2 48 0f 2a c2 	cvtsi2sdq	%rdx, %xmm0
  414a21:	f2 0f 59 05 37 f2 0a 00 	mulsd	717367(%rip), %xmm0
  414a29:	f2 48 0f 2c d8 	cvttsd2si	%xmm0, %rbx
  414a2e:	48 81 fb 00 00 01 00 	cmpq	$65536, %rbx
  414a35:	7d 1e 	jge	30 <runtime.gcAssistAlloc+0xb5>
  414a37:	f2 0f 10 05 29 f2 0a 00 	movsd	717353(%rip), %xmm0
  414a3f:	f2 0f 10 0d c9 00 06 00 	movsd	393417(%rip), %xmm1
  414a47:	f2 0f 59 c8 	mulsd	%xmm0, %xmm1
  414a4b:	f2 48 0f 2c d1 	cvttsd2si	%xmm1, %rdx
  414a50:	bb 00 00 01 00 	movl	$65536, %ebx
  414a55:	48 8b 35 cc f1 0a 00 	movq	717260(%rip), %rsi
  414a5c:	48 85 f6 	testq	%rsi, %rsi
  414a5f:	7e 4d 	jle	77 <runtime.gcAssistAlloc+0x10e>
  414a61:	48 39 de 	cmpq	%rbx, %rsi
  414a64:	0f 8d 55 01 00 00 	jge	341 <runtime.gcAssistAlloc+0x21f>
  414a6a:	0f 57 c0 	xorps	%xmm0, %xmm0
  414a6d:	f2 48 0f 2a c6 	cvtsi2sdq	%rsi, %xmm0
  414a72:	f2 0f 59 05 ee f1 0a 00 	mulsd	717294(%rip), %xmm0
  414a7a:	f2 48 0f 2c d0 	cvttsd2si	%xmm0, %rdx
  414a7f:	48 03 90 70 01 00 00 	addq	368(%rax), %rdx
  414a86:	48 ff c2 	incq	%rdx
  414a89:	48 89 90 70 01 00 00 	movq	%rdx, 368(%rax)
  414a90:	48 89 f2 	movq	%rsi, %rdx
  414a93:	48 f7 de 	negq	%rsi
  414a96:	48 8d 3d 8b f1 0a 00 	leaq	717195(%rip), %rdi
  414a9d:	f0 	lock
  414a9e:	48 0f c1 37 	xaddq	%rsi, (%rdi)
  414aa2:	48 29 d3 	subq	%rdx, %rbx
  414aa5:	48 85 db 	testq	%rbx, %rbx
  414aa8:	0f 84 fc 00 00 00 	je	252 <runtime.gcAssistAlloc+0x20a>
  414aae:	0f b6 15 1b ed 09 00 	movzbl	650523(%rip), %edx
  414ab5:	84 d2 	testb	%dl, %dl
  414ab7:	74 0d 	je	13 <runtime.gcAssistAlloc+0x126>
  414ab9:	84 c9 	testb	%cl, %cl
  414abb:	0f 84 cb 00 00 00 	je	203 <runtime.gcAssistAlloc+0x1ec>
  414ac1:	b9 01 00 00 00 	movl	$1, %ecx
  414ac6:	88 4c 24 0f 	movb	%cl, 15(%rsp)
  414aca:	48 8d 15 3f db 02 00 	leaq	187199(%rip), %rdx
  414ad1:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  414ad6:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  414adb:	48 89 5c 24 28 	movq	%rbx, 40(%rsp)
  414ae0:	48 8d 5c 24 18 	leaq	24(%rsp), %rbx
  414ae5:	48 89 1c 24 	movq	%rbx, (%rsp)
  414ae9:	e8 32 f9 02 00 	callq	194866 <runtime.systemstack>
  414aee:	48 8b 44 24 40 	movq	64(%rsp), %rax
  414af3:	48 8b 88 88 00 00 00 	movq	136(%rax), %rcx
  414afa:	48 8d b8 88 00 00 00 	leaq	136(%rax), %rdi
  414b01:	8b 15 09 ef 0a 00 	movl	716553(%rip), %edx
  414b07:	85 d2 	testl	%edx, %edx
  414b09:	75 72 	jne	114 <runtime.gcAssistAlloc+0x1dd>
  414b0b:	48 c7 80 88 00 00 00 00 00 00 00 	movq	$0, 136(%rax)
  414b16:	48 85 c9 	testq	%rcx, %rcx
  414b19:	75 56 	jne	86 <runtime.gcAssistAlloc+0x1d1>
  414b1b:	48 8b 88 70 01 00 00 	movq	368(%rax), %rcx
  414b22:	48 85 c9 	testq	%rcx, %rcx
  414b25:	7d 30 	jge	48 <runtime.gcAssistAlloc+0x1b7>
  414b27:	0f b6 88 c0 00 00 00 	movzbl	192(%rax), %ecx
  414b2e:	84 c9 	testb	%cl, %cl
  414b30:	74 14 	je	20 <runtime.gcAssistAlloc+0x1a6>
  414b32:	e8 89 e2 00 00 	callq	57993 <runtime.Gosched>
  414b37:	48 8b 44 24 40 	movq	64(%rsp), %rax
  414b3c:	0f b6 4c 24 0f 	movzbl	15(%rsp), %ecx
  414b41:	e9 c9 fe ff ff 	jmp	-311 <runtime.gcAssistAlloc+0x6f>
  414b46:	e8 15 05 00 00 	callq	1301 <runtime.gcParkAssist>
  414b4b:	0f b6 04 24 	movzbl	(%rsp), %eax
  414b4f:	84 c0 	testb	%al, %al
  414b51:	0f 84 ae fe ff ff 	je	-338 <runtime.gcAssistAlloc+0x65>
  414b57:	0f b6 44 24 0f 	movzbl	15(%rsp), %eax
  414b5c:	84 c0 	testb	%al, %al
  414b5e:	75 0a 	jne	10 <runtime.gcAssistAlloc+0x1ca>
  414b60:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  414b65:	48 83 c4 38 	addq	$56, %rsp
  414b69:	c3 	retq
  414b6a:	e8 81 5c 02 00 	callq	154753 <runtime.traceGCMarkAssistDone>
  414b6f:	eb ef 	jmp	-17 <runtime.gcAssistAlloc+0x1c0>
  414b71:	e8 9a cb ff ff 	callq	-13414 <runtime.gcMarkDone>
  414b76:	48 8b 44 24 40 	movq	64(%rsp), %rax
  414b7b:	eb 9e 	jmp	-98 <runtime.gcAssistAlloc+0x17b>
  414b7d:	48 89 c2 	movq	%rax, %rdx
  414b80:	31 c0 	xorl	%eax, %eax
  414b82:	e8 19 1d 03 00 	callq	204057 <runtime.gcWriteBarrier>
  414b87:	48 89 d0 	movq	%rdx, %rax
  414b8a:	eb 8a 	jmp	-118 <runtime.gcAssistAlloc+0x176>
  414b8c:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  414b91:	e8 fa 5b 02 00 	callq	154618 <runtime.traceGCMarkAssistStart>
  414b96:	48 8b 44 24 40 	movq	64(%rsp), %rax
  414b9b:	48 8b 5c 24 10 	movq	16(%rsp), %rbx
  414ba0:	b9 01 00 00 00 	movl	$1, %ecx
  414ba5:	e9 1c ff ff ff 	jmp	-228 <runtime.gcAssistAlloc+0x126>
  414baa:	84 c9 	testb	%cl, %cl
  414bac:	75 0a 	jne	10 <runtime.gcAssistAlloc+0x218>
  414bae:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  414bb3:	48 83 c4 38 	addq	$56, %rsp
  414bb7:	c3 	retq
  414bb8:	e8 33 5c 02 00 	callq	154675 <runtime.traceGCMarkAssistDone>
  414bbd:	eb ef 	jmp	-17 <runtime.gcAssistAlloc+0x20e>
  414bbf:	48 03 90 70 01 00 00 	addq	368(%rax), %rdx
  414bc6:	48 89 90 70 01 00 00 	movq	%rdx, 368(%rax)
  414bcd:	48 89 de 	movq	%rbx, %rsi
  414bd0:	e9 bb fe ff ff 	jmp	-325 <runtime.gcAssistAlloc+0xf0>
  414bd5:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  414bda:	48 83 c4 38 	addq	$56, %rsp
  414bde:	c3 	retq
  414bdf:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  414be4:	48 83 c4 38 	addq	$56, %rsp
  414be8:	c3 	retq
  414be9:	e8 82 f9 02 00 	callq	194946 <runtime.morestack_noctxt>
  414bee:	e9 ad fd ff ff 	jmp	-595 <runtime.gcAssistAlloc>
  414bf3:	cc 	int3
  414bf4:	cc 	int3
  414bf5:	cc 	int3
  414bf6:	cc 	int3
  414bf7:	cc 	int3
  414bf8:	cc 	int3
  414bf9:	cc 	int3
  414bfa:	cc 	int3
  414bfb:	cc 	int3
  414bfc:	cc 	int3
  414bfd:	cc 	int3
  414bfe:	cc 	int3
  414bff:	cc 	int3

runtime.gcAssistAlloc1:
  414c00:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  414c09:	48 3b 61 18 	cmpq	24(%rcx), %rsp
  414c0d:	0f 86 a5 03 00 00 	jbe	933 <runtime.gcAssistAlloc1+0x3b8>
  414c13:	48 83 ec 50 	subq	$80, %rsp
  414c17:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  414c1c:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  414c21:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  414c26:	84 01 	testb	%al, (%rcx)
  414c28:	8b 15 e2 ed 0a 00 	movl	716258(%rip), %edx
  414c2e:	48 8d b9 88 00 00 00 	leaq	136(%rcx), %rdi
  414c35:	85 d2 	testl	%edx, %edx
  414c37:	0f 85 4b 02 00 00 	jne	587 <runtime.gcAssistAlloc1+0x288>
  414c3d:	48 c7 81 88 00 00 00 00 00 00 00 	movq	$0, 136(%rcx)
  414c48:	8b 05 86 ec 0a 00 	movl	715910(%rip), %eax
  414c4e:	85 c0 	testl	%eax, %eax
  414c50:	75 15 	jne	21 <runtime.gcAssistAlloc1+0x67>
  414c52:	48 c7 81 70 01 00 00 00 00 00 00 	movq	$0, 368(%rcx)
  414c5d:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  414c62:	48 83 c4 50 	addq	$80, %rsp
  414c66:	c3 	retq
  414c67:	48 89 7c 24 40 	movq	%rdi, 64(%rsp)
  414c6c:	e8 bf 2d 03 00 	callq	208319 <runtime.nanotime>
  414c71:	48 8b 04 24 	movq	(%rsp), %rax
  414c75:	b9 ff ff ff ff 	movl	$4294967295, %ecx
  414c7a:	48 8d 15 bf 31 09 00 	leaq	602559(%rip), %rdx
  414c81:	f0 	lock
  414c82:	0f c1 0a 	xaddl	%ecx, (%rdx)
  414c85:	ff c9 	decl	%ecx
  414c87:	8b 1d a3 31 09 00 	movl	602531(%rip), %ebx
  414c8d:	39 d9 	cmpl	%ebx, %ecx
  414c8f:	0f 84 a5 02 00 00 	je	677 <runtime.gcAssistAlloc1+0x33a>
  414c95:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  414c9a:	48 8b 44 24 58 	movq	88(%rsp), %rax
  414c9f:	48 89 04 24 	movq	%rax, (%rsp)
  414ca3:	48 b9 02 00 00 00 04 00 00 00 	movabsq	$17179869186, %rcx
  414cad:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  414cb2:	e8 c9 fd 00 00 	callq	64969 <runtime.casgstatus>
  414cb7:	48 8b 44 24 58 	movq	88(%rsp), %rax
  414cbc:	48 c7 80 b0 00 00 00 11 00 00 00 	movq	$17, 176(%rax)
  414cc7:	8b 0d 43 ed 0a 00 	movl	716099(%rip), %ecx
  414ccd:	48 8d b8 a8 00 00 00 	leaq	168(%rax), %rdi
  414cd4:	85 c9 	testl	%ecx, %ecx
  414cd6:	0f 85 9b 01 00 00 	jne	411 <runtime.gcAssistAlloc1+0x277>
  414cdc:	48 8d 0d f2 5e 05 00 	leaq	351986(%rip), %rcx
  414ce3:	48 89 88 a8 00 00 00 	movq	%rcx, 168(%rax)
  414cea:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  414cf3:	48 8b 40 30 	movq	48(%rax), %rax
  414cf7:	48 8b 88 d0 00 00 00 	movq	208(%rax), %rcx
  414cfe:	84 01 	testb	%al, (%rcx)
  414d00:	84 00 	testb	%al, (%rax)
  414d02:	48 8d 81 70 12 00 00 	leaq	4720(%rcx), %rax
  414d09:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  414d0e:	48 89 04 24 	movq	%rax, (%rsp)
  414d12:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  414d17:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  414d1c:	e8 1f 16 00 00 	callq	5663 <runtime.gcDrainN>
  414d21:	48 8b 44 24 10 	movq	16(%rsp), %rax
  414d26:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  414d2b:	0f b6 0d 75 eb 0a 00 	movzbl	715637(%rip), %ecx
  414d32:	84 c9 	testb	%cl, %cl
  414d34:	0f 85 2a 01 00 00 	jne	298 <runtime.gcAssistAlloc1+0x264>
  414d3a:	48 8b 44 24 58 	movq	88(%rsp), %rax
  414d3f:	48 89 04 24 	movq	%rax, (%rsp)
  414d43:	48 b9 04 00 00 00 02 00 00 00 	movabsq	$8589934596, %rcx
  414d4d:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  414d52:	e8 29 fd 00 00 	callq	64809 <runtime.casgstatus>
  414d57:	48 8b 44 24 28 	movq	40(%rsp), %rax
  414d5c:	0f 57 c0 	xorps	%xmm0, %xmm0
  414d5f:	f2 48 0f 2a c0 	cvtsi2sdq	%rax, %xmm0
  414d64:	f2 0f 59 05 fc ee 0a 00 	mulsd	716540(%rip), %xmm0
  414d6c:	f2 48 0f 2c c0 	cvttsd2si	%xmm0, %rax
  414d71:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  414d76:	48 03 81 70 01 00 00 	addq	368(%rcx), %rax
  414d7d:	48 ff c0 	incq	%rax
  414d80:	48 89 81 70 01 00 00 	movq	%rax, 368(%rcx)
  414d87:	b8 01 00 00 00 	movl	$1, %eax
  414d8c:	48 8d 15 ad 30 09 00 	leaq	602285(%rip), %rdx
  414d93:	f0 	lock
  414d94:	0f c1 02 	xaddl	%eax, (%rdx)
  414d97:	ff c0 	incl	%eax
  414d99:	8b 15 91 30 09 00 	movl	602257(%rip), %edx
  414d9f:	39 d0 	cmpl	%edx, %eax
  414da1:	0f 87 ed 00 00 00 	ja	237 <runtime.gcAssistAlloc1+0x294>
  414da7:	75 2d 	jne	45 <runtime.gcAssistAlloc1+0x1d6>
  414da9:	48 8b 15 f0 2f 09 00 	movq	602096(%rip), %rdx
  414db0:	48 85 d2 	testq	%rdx, %rdx
  414db3:	0f 85 a1 00 00 00 	jne	161 <runtime.gcAssistAlloc1+0x25a>
  414db9:	8b 15 69 30 09 00 	movl	602217(%rip), %edx
  414dbf:	8b 1d 67 30 09 00 	movl	602215(%rip), %ebx
  414dc5:	39 da 	cmpl	%ebx, %edx
  414dc7:	0f 83 86 00 00 00 	jae	134 <runtime.gcAssistAlloc1+0x253>
  414dcd:	b8 01 00 00 00 	movl	$1, %eax
  414dd2:	84 c0 	testb	%al, %al
  414dd4:	74 5b 	je	91 <runtime.gcAssistAlloc1+0x231>
  414dd6:	e8 55 2c 03 00 	callq	207957 <runtime.nanotime>
  414ddb:	48 8b 44 24 58 	movq	88(%rsp), %rax
  414de0:	48 8b 40 30 	movq	48(%rax), %rax
  414de4:	48 8b 80 d0 00 00 00 	movq	208(%rax), %rax
  414deb:	84 00 	testb	%al, (%rax)
  414ded:	48 8b 0c 24 	movq	(%rsp), %rcx
  414df1:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  414df6:	48 29 d1 	subq	%rdx, %rcx
  414df9:	48 03 88 48 12 00 00 	addq	4680(%rax), %rcx
  414e00:	48 89 88 48 12 00 00 	movq	%rcx, 4680(%rax)
  414e07:	48 81 f9 88 13 00 00 	cmpq	$5000, %rcx
  414e0e:	7e 17 	jle	23 <runtime.gcAssistAlloc1+0x227>
  414e10:	48 8d 15 19 ee 0a 00 	leaq	716313(%rip), %rdx
  414e17:	f0 	lock
  414e18:	48 0f c1 0a 	xaddq	%rcx, (%rdx)
  414e1c:	48 c7 80 48 12 00 00 00 00 00 00 	movq	$0, 4680(%rax)
  414e27:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  414e2c:	48 83 c4 50 	addq	$80, %rsp
  414e30:	c3 	retq
  414e31:	8b 15 d9 eb 0a 00 	movl	715737(%rip), %edx
  414e37:	85 d2 	testl	%edx, %edx
  414e39:	75 09 	jne	9 <runtime.gcAssistAlloc1+0x244>
  414e3b:	48 89 89 88 00 00 00 	movq	%rcx, 136(%rcx)
  414e42:	eb 92 	jmp	-110 <runtime.gcAssistAlloc1+0x1d6>
  414e44:	48 8b 7c 24 40 	movq	64(%rsp), %rdi
  414e49:	48 89 c8 	movq	%rcx, %rax
  414e4c:	e8 4f 1a 03 00 	callq	203343 <runtime.gcWriteBarrier>
  414e51:	eb 83 	jmp	-125 <runtime.gcAssistAlloc1+0x1d6>
  414e53:	31 c0 	xorl	%eax, %eax
  414e55:	e9 78 ff ff ff 	jmp	-136 <runtime.gcAssistAlloc1+0x1d2>
  414e5a:	b8 01 00 00 00 	movl	$1, %eax
  414e5f:	e9 6e ff ff ff 	jmp	-146 <runtime.gcAssistAlloc1+0x1d2>
  414e64:	48 8b 44 24 38 	movq	56(%rsp), %rax
  414e69:	48 89 04 24 	movq	%rax, (%rsp)
  414e6d:	e8 0e 44 00 00 	callq	17422 <runtime.(*gcWork).dispose>
  414e72:	e9 c3 fe ff ff 	jmp	-317 <runtime.gcAssistAlloc1+0x13a>
  414e77:	48 8d 05 57 5d 05 00 	leaq	351575(%rip), %rax
  414e7e:	e8 1d 1a 03 00 	callq	203293 <runtime.gcWriteBarrier>
  414e83:	e9 62 fe ff ff 	jmp	-414 <runtime.gcAssistAlloc1+0xea>
  414e88:	31 c0 	xorl	%eax, %eax
  414e8a:	e8 11 1a 03 00 	callq	203281 <runtime.gcWriteBarrier>
  414e8f:	e9 b4 fd ff ff 	jmp	-588 <runtime.gcAssistAlloc1+0x48>
  414e94:	89 44 24 1c 	movl	%eax, 28(%rsp)
  414e98:	89 54 24 24 	movl	%edx, 36(%rsp)
  414e9c:	e8 5f cc 00 00 	callq	52319 <runtime.printlock>
  414ea1:	48 8d 05 9e 64 05 00 	leaq	353438(%rip), %rax
  414ea8:	48 89 04 24 	movq	%rax, (%rsp)
  414eac:	48 c7 44 24 08 15 00 00 00 	movq	$21, 8(%rsp)
  414eb5:	e8 86 d5 00 00 	callq	54662 <runtime.printstring>
  414eba:	8b 44 24 1c 	movl	28(%rsp), %eax
  414ebe:	48 89 04 24 	movq	%rax, (%rsp)
  414ec2:	e8 a9 d2 00 00 	callq	53929 <runtime.printuint>
  414ec7:	48 8d 05 0b 58 05 00 	leaq	350219(%rip), %rax
  414ece:	48 89 04 24 	movq	%rax, (%rsp)
  414ed2:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  414edb:	e8 60 d5 00 00 	callq	54624 <runtime.printstring>
  414ee0:	8b 44 24 24 	movl	36(%rsp), %eax
  414ee4:	48 89 04 24 	movq	%rax, (%rsp)
  414ee8:	e8 83 d2 00 00 	callq	53891 <runtime.printuint>
  414eed:	48 8d 05 d5 60 05 00 	leaq	352469(%rip), %rax
  414ef4:	48 89 04 24 	movq	%rax, (%rsp)
  414ef8:	48 c7 44 24 08 14 00 00 00 	movq	$20, 8(%rsp)
  414f01:	e8 3a d5 00 00 	callq	54586 <runtime.printstring>
  414f06:	0f b6 05 9a e9 0a 00 	movzbl	715162(%rip), %eax
  414f0d:	88 04 24 	movb	%al, (%rsp)
  414f10:	e8 cb ce 00 00 	callq	52939 <runtime.printbool>
  414f15:	e8 76 ce 00 00 	callq	52854 <runtime.printnl>
  414f1a:	e8 61 cc 00 00 	callq	52321 <runtime.printunlock>
  414f1f:	48 8d 05 09 69 05 00 	leaq	354569(%rip), %rax
  414f26:	48 89 04 24 	movq	%rax, (%rsp)
  414f2a:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  414f33:	e8 98 c2 00 00 	callq	49816 <runtime.throw>
  414f38:	0f 0b 	ud2
  414f3a:	89 4c 24 20 	movl	%ecx, 32(%rsp)
  414f3e:	89 5c 24 24 	movl	%ebx, 36(%rsp)
  414f42:	e8 b9 cb 00 00 	callq	52153 <runtime.printlock>
  414f47:	48 8d 05 96 65 05 00 	leaq	353686(%rip), %rax
  414f4e:	48 89 04 24 	movq	%rax, (%rsp)
  414f52:	48 c7 44 24 08 16 00 00 00 	movq	$22, 8(%rsp)
  414f5b:	e8 e0 d4 00 00 	callq	54496 <runtime.printstring>
  414f60:	8b 44 24 20 	movl	32(%rsp), %eax
  414f64:	48 89 04 24 	movq	%rax, (%rsp)
  414f68:	e8 03 d2 00 00 	callq	53763 <runtime.printuint>
  414f6d:	48 8d 05 65 57 05 00 	leaq	350053(%rip), %rax
  414f74:	48 89 04 24 	movq	%rax, (%rsp)
  414f78:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  414f81:	e8 ba d4 00 00 	callq	54458 <runtime.printstring>
  414f86:	8b 44 24 24 	movl	36(%rsp), %eax
  414f8a:	48 89 04 24 	movq	%rax, (%rsp)
  414f8e:	e8 dd d1 00 00 	callq	53725 <runtime.printuint>
  414f93:	e8 f8 cd 00 00 	callq	52728 <runtime.printnl>
  414f98:	e8 e3 cb 00 00 	callq	52195 <runtime.printunlock>
  414f9d:	48 8d 05 41 5f 05 00 	leaq	352065(%rip), %rax
  414fa4:	48 89 04 24 	movq	%rax, (%rsp)
  414fa8:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  414fb1:	e8 1a c2 00 00 	callq	49690 <runtime.throw>
  414fb6:	0f 0b 	ud2
  414fb8:	e8 43 1d 02 00 	callq	138563 <runtime.morestackc>
  414fbd:	e9 3e fc ff ff 	jmp	-962 <runtime.gcAssistAlloc1>
  414fc2:	cc 	int3
  414fc3:	cc 	int3
  414fc4:	cc 	int3
  414fc5:	cc 	int3
  414fc6:	cc 	int3
  414fc7:	cc 	int3
  414fc8:	cc 	int3
  414fc9:	cc 	int3
  414fca:	cc 	int3
  414fcb:	cc 	int3
  414fcc:	cc 	int3
  414fcd:	cc 	int3
  414fce:	cc 	int3
  414fcf:	cc 	int3

runtime.gcWakeAllAssists:
  414fd0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  414fd9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  414fdd:	76 6c 	jbe	108 <runtime.gcWakeAllAssists+0x7b>
  414fdf:	48 83 ec 10 	subq	$16, %rsp
  414fe3:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  414fe8:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  414fed:	48 8d 05 cc 2e 09 00 	leaq	601804(%rip), %rax
  414ff4:	48 89 04 24 	movq	%rax, (%rsp)
  414ff8:	e8 23 45 ff ff 	callq	-47837 <runtime.lock>
  414ffd:	48 8b 05 c4 2e 09 00 	movq	601796(%rip), %rax
  415004:	48 89 04 24 	movq	%rax, (%rsp)
  415008:	e8 63 37 01 00 	callq	79715 <runtime.injectglist>
  41500d:	48 8d 05 b4 2e 09 00 	leaq	601780(%rip), %rax
  415014:	84 00 	testb	%al, (%rax)
  415016:	31 c0 	xorl	%eax, %eax
  415018:	48 89 05 a9 2e 09 00 	movq	%rax, 601769(%rip)
  41501f:	48 8d 05 aa 2e 09 00 	leaq	601770(%rip), %rax
  415026:	84 00 	testb	%al, (%rax)
  415028:	31 c0 	xorl	%eax, %eax
  41502a:	48 89 05 9f 2e 09 00 	movq	%rax, 601759(%rip)
  415031:	48 8d 05 88 2e 09 00 	leaq	601736(%rip), %rax
  415038:	48 89 04 24 	movq	%rax, (%rsp)
  41503c:	e8 7f 46 ff ff 	callq	-47489 <runtime.unlock>
  415041:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  415046:	48 83 c4 10 	addq	$16, %rsp
  41504a:	c3 	retq
  41504b:	e8 20 f5 02 00 	callq	193824 <runtime.morestack_noctxt>
  415050:	e9 7b ff ff ff 	jmp	-133 <runtime.gcWakeAllAssists>
  415055:	cc 	int3
  415056:	cc 	int3
  415057:	cc 	int3
  415058:	cc 	int3
  415059:	cc 	int3
  41505a:	cc 	int3
  41505b:	cc 	int3
  41505c:	cc 	int3
  41505d:	cc 	int3
  41505e:	cc 	int3
  41505f:	cc 	int3

runtime.gcParkAssist:
  415060:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  415069:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41506d:	0f 86 53 01 00 00 	jbe	339 <runtime.gcParkAssist+0x166>
  415073:	48 83 ec 30 	subq	$48, %rsp
  415077:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  41507c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  415081:	48 8d 05 38 2e 09 00 	leaq	601656(%rip), %rax
  415088:	48 89 04 24 	movq	%rax, (%rsp)
  41508c:	e8 8f 44 ff ff 	callq	-47985 <runtime.lock>
  415091:	8b 05 3d e8 0a 00 	movl	714813(%rip), %eax
  415097:	85 c0 	testl	%eax, %eax
  415099:	0f 84 08 01 00 00 	je	264 <runtime.gcParkAssist+0x147>
  41509f:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4150a8:	48 8b 0d 19 2e 09 00 	movq	601625(%rip), %rcx
  4150af:	48 8b 15 1a 2e 09 00 	movq	601626(%rip), %rdx
  4150b6:	48 85 c9 	testq	%rcx, %rcx
  4150b9:	0f 85 ca 00 00 00 	jne	202 <runtime.gcParkAssist+0x129>
  4150bf:	48 8d 1d 02 2e 09 00 	leaq	601602(%rip), %rbx
  4150c6:	84 03 	testb	%al, (%rbx)
  4150c8:	48 89 c3 	movq	%rax, %rbx
  4150cb:	48 89 05 f6 2d 09 00 	movq	%rax, 601590(%rip)
  4150d2:	48 8d 05 f7 2d 09 00 	leaq	601591(%rip), %rax
  4150d9:	84 00 	testb	%al, (%rax)
  4150db:	48 89 d8 	movq	%rbx, %rax
  4150de:	48 89 1d eb 2d 09 00 	movq	%rbx, 601579(%rip)
  4150e5:	48 8d 98 b8 00 00 00 	leaq	184(%rax), %rbx
  4150ec:	84 03 	testb	%al, (%rbx)
  4150ee:	31 db 	xorl	%ebx, %ebx
  4150f0:	48 89 98 b8 00 00 00 	movq	%rbx, 184(%rax)
  4150f7:	48 8b 05 2a eb 0a 00 	movq	715562(%rip), %rax
  4150fe:	48 85 c0 	testq	%rax, %rax
  415101:	7e 44 	jle	68 <runtime.gcParkAssist+0xe7>
  415103:	48 89 0d be 2d 09 00 	movq	%rcx, 601534(%rip)
  41510a:	48 89 15 bf 2d 09 00 	movq	%rdx, 601535(%rip)
  415111:	48 85 d2 	testq	%rdx, %rdx
  415114:	74 12 	je	18 <runtime.gcParkAssist+0xc8>
  415116:	48 8d 82 b8 00 00 00 	leaq	184(%rdx), %rax
  41511d:	84 00 	testb	%al, (%rax)
  41511f:	31 c0 	xorl	%eax, %eax
  415121:	48 89 82 b8 00 00 00 	movq	%rax, 184(%rdx)
  415128:	48 8d 05 91 2d 09 00 	leaq	601489(%rip), %rax
  41512f:	48 89 04 24 	movq	%rax, (%rsp)
  415133:	e8 88 45 ff ff 	callq	-47736 <runtime.unlock>
  415138:	c6 44 24 38 00 	movb	$0, 56(%rsp)
  41513d:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  415142:	48 83 c4 30 	addq	$48, %rsp
  415146:	c3 	retq
  415147:	48 8d 05 72 2d 09 00 	leaq	601458(%rip), %rax
  41514e:	48 89 04 24 	movq	%rax, (%rsp)
  415152:	48 8d 05 cb 56 05 00 	leaq	349899(%rip), %rax
  415159:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41515e:	48 c7 44 24 10 0e 00 00 00 	movq	$14, 16(%rsp)
  415167:	c6 44 24 18 2a 	movb	$42, 24(%rsp)
  41516c:	48 c7 44 24 20 02 00 00 00 	movq	$2, 32(%rsp)
  415175:	e8 e6 dd 00 00 	callq	56806 <runtime.goparkunlock>
  41517a:	c6 44 24 38 01 	movb	$1, 56(%rsp)
  41517f:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  415184:	48 83 c4 30 	addq	$48, %rsp
  415188:	c3 	retq
  415189:	48 89 d6 	movq	%rdx, %rsi
  41518c:	48 8d ba b8 00 00 00 	leaq	184(%rdx), %rdi
  415193:	84 07 	testb	%al, (%rdi)
  415195:	48 89 c3 	movq	%rax, %rbx
  415198:	48 89 82 b8 00 00 00 	movq	%rax, 184(%rdx)
  41519f:	48 89 f2 	movq	%rsi, %rdx
  4151a2:	e9 2b ff ff ff 	jmp	-213 <runtime.gcParkAssist+0x72>
  4151a7:	48 8d 05 12 2d 09 00 	leaq	601362(%rip), %rax
  4151ae:	48 89 04 24 	movq	%rax, (%rsp)
  4151b2:	e8 09 45 ff ff 	callq	-47863 <runtime.unlock>
  4151b7:	c6 44 24 38 01 	movb	$1, 56(%rsp)
  4151bc:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  4151c1:	48 83 c4 30 	addq	$48, %rsp
  4151c5:	c3 	retq
  4151c6:	e8 a5 f3 02 00 	callq	193445 <runtime.morestack_noctxt>
  4151cb:	e9 90 fe ff ff 	jmp	-368 <runtime.gcParkAssist>

runtime.gcFlushBgCredit:
  4151d0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4151d9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4151dd:	0f 86 ae 01 00 00 	jbe	430 <runtime.gcFlushBgCredit+0x1c1>
  4151e3:	48 83 ec 38 	subq	$56, %rsp
  4151e7:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  4151ec:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  4151f1:	48 8b 05 d0 2c 09 00 	movq	601296(%rip), %rax
  4151f8:	48 85 c0 	testq	%rax, %rax
  4151fb:	0f 84 75 01 00 00 	je	373 <runtime.gcFlushBgCredit+0x1a6>
  415201:	48 8b 44 24 40 	movq	64(%rsp), %rax
  415206:	0f 57 c0 	xorps	%xmm0, %xmm0
  415209:	f2 48 0f 2a c0 	cvtsi2sdq	%rax, %xmm0
  41520e:	f2 0f 59 05 52 ea 0a 00 	mulsd	715346(%rip), %xmm0
  415216:	f2 0f 11 44 24 20 	movsd	%xmm0, 32(%rsp)
  41521c:	48 8d 05 9d 2c 09 00 	leaq	601245(%rip), %rax
  415223:	48 89 04 24 	movq	%rax, (%rsp)
  415227:	e8 f4 42 ff ff 	callq	-48396 <runtime.lock>
  41522c:	f2 0f 10 44 24 20 	movsd	32(%rsp), %xmm0
  415232:	f2 48 0f 2c c0 	cvttsd2si	%xmm0, %rax
  415237:	48 8b 0d 8a 2c 09 00 	movq	601226(%rip), %rcx
  41523e:	eb 3d 	jmp	61 <runtime.gcFlushBgCredit+0xad>
  415240:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  415245:	48 c7 81 70 01 00 00 00 00 00 00 	movq	$0, 368(%rcx)
  415250:	48 8b 81 b8 00 00 00 	movq	184(%rcx), %rax
  415257:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  41525c:	48 89 0c 24 	movq	%rcx, (%rsp)
  415260:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  415269:	c6 44 24 10 00 	movb	$0, 16(%rsp)
  41526e:	e8 dd ec 00 00 	callq	60637 <runtime.ready>
  415273:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  415278:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41527d:	48 85 c9 	testq	%rcx, %rcx
  415280:	0f 84 e2 00 00 00 	je	226 <runtime.gcFlushBgCredit+0x198>
  415286:	48 85 c0 	testq	%rax, %rax
  415289:	0f 8e ce 00 00 00 	jle	206 <runtime.gcFlushBgCredit+0x18d>
  41528f:	48 8b 91 70 01 00 00 	movq	368(%rcx), %rdx
  415296:	48 01 d0 	addq	%rdx, %rax
  415299:	48 85 c0 	testq	%rax, %rax
  41529c:	7d a2 	jge	-94 <runtime.gcFlushBgCredit+0x70>
  41529e:	48 89 81 70 01 00 00 	movq	%rax, 368(%rcx)
  4152a5:	48 8b 81 b8 00 00 00 	movq	184(%rcx), %rax
  4152ac:	48 85 c0 	testq	%rax, %rax
  4152af:	0f 84 a3 00 00 00 	je	163 <runtime.gcFlushBgCredit+0x188>
  4152b5:	48 c7 81 b8 00 00 00 00 00 00 00 	movq	$0, 184(%rcx)
  4152c0:	48 8b 15 09 2c 09 00 	movq	601097(%rip), %rdx
  4152c7:	48 8d 9a b8 00 00 00 	leaq	184(%rdx), %rbx
  4152ce:	84 03 	testb	%al, (%rbx)
  4152d0:	48 89 cb 	movq	%rcx, %rbx
  4152d3:	48 89 8a b8 00 00 00 	movq	%rcx, 184(%rdx)
  4152da:	48 8d 0d ef 2b 09 00 	leaq	601071(%rip), %rcx
  4152e1:	84 01 	testb	%al, (%rcx)
  4152e3:	48 89 1d e6 2b 09 00 	movq	%rbx, 601062(%rip)
  4152ea:	31 c9 	xorl	%ecx, %ecx
  4152ec:	48 8d 15 d5 2b 09 00 	leaq	601045(%rip), %rdx
  4152f3:	84 02 	testb	%al, (%rdx)
  4152f5:	48 89 c2 	movq	%rax, %rdx
  4152f8:	48 89 05 c9 2b 09 00 	movq	%rax, 601033(%rip)
  4152ff:	48 85 d2 	testq	%rdx, %rdx
  415302:	74 40 	je	64 <runtime.gcFlushBgCredit+0x174>
  415304:	48 85 c9 	testq	%rcx, %rcx
  415307:	7e 21 	jle	33 <runtime.gcFlushBgCredit+0x15a>
  415309:	0f 57 c0 	xorps	%xmm0, %xmm0
  41530c:	f2 48 0f 2a c1 	cvtsi2sdq	%rcx, %xmm0
  415311:	f2 0f 59 05 47 e9 0a 00 	mulsd	715079(%rip), %xmm0
  415319:	f2 48 0f 2c c0 	cvttsd2si	%xmm0, %rax
  41531e:	48 8d 0d 03 e9 0a 00 	leaq	715011(%rip), %rcx
  415325:	f0 	lock
  415326:	48 0f c1 01 	xaddq	%rax, (%rcx)
  41532a:	48 8d 05 8f 2b 09 00 	leaq	600975(%rip), %rax
  415331:	48 89 04 24 	movq	%rax, (%rsp)
  415335:	e8 86 43 ff ff 	callq	-48250 <runtime.unlock>
  41533a:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  41533f:	48 83 c4 38 	addq	$56, %rsp
  415343:	c3 	retq
  415344:	48 8d 05 85 2b 09 00 	leaq	600965(%rip), %rax
  41534b:	84 00 	testb	%al, (%rax)
  41534d:	31 c0 	xorl	%eax, %eax
  41534f:	48 89 05 7a 2b 09 00 	movq	%rax, 600954(%rip)
  415356:	eb ac 	jmp	-84 <runtime.gcFlushBgCredit+0x134>
  415358:	48 89 c8 	movq	%rcx, %rax
  41535b:	eb 8d 	jmp	-115 <runtime.gcFlushBgCredit+0x11a>
  41535d:	48 89 c2 	movq	%rax, %rdx
  415360:	48 89 c8 	movq	%rcx, %rax
  415363:	48 89 d1 	movq	%rdx, %rcx
  415366:	eb 84 	jmp	-124 <runtime.gcFlushBgCredit+0x11c>
  415368:	48 89 c2 	movq	%rax, %rdx
  41536b:	48 89 c8 	movq	%rcx, %rax
  41536e:	48 89 d1 	movq	%rdx, %rcx
  415371:	e9 76 ff ff ff 	jmp	-138 <runtime.gcFlushBgCredit+0x11c>
  415376:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41537b:	48 8d 0d a6 e8 0a 00 	leaq	714918(%rip), %rcx
  415382:	f0 	lock
  415383:	48 0f c1 01 	xaddq	%rax, (%rcx)
  415387:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  41538c:	48 83 c4 38 	addq	$56, %rsp
  415390:	c3 	retq
  415391:	e8 da f1 02 00 	callq	192986 <runtime.morestack_noctxt>
  415396:	e9 35 fe ff ff 	jmp	-459 <runtime.gcFlushBgCredit>
  41539b:	cc 	int3
  41539c:	cc 	int3
  41539d:	cc 	int3
  41539e:	cc 	int3
  41539f:	cc 	int3

runtime.scanstack:
  4153a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4153a9:	48 8d 84 24 f0 fe ff ff 	leaq	-272(%rsp), %rax
  4153b1:	48 3b 41 18 	cmpq	24(%rcx), %rax
  4153b5:	0f 86 64 04 00 00 	jbe	1124 <runtime.scanstack+0x47f>
  4153bb:	48 81 ec 90 01 00 00 	subq	$400, %rsp
  4153c2:	48 89 ac 24 88 01 00 00 	movq	%rbp, 392(%rsp)
  4153ca:	48 8d ac 24 88 01 00 00 	leaq	392(%rsp), %rbp
  4153d2:	48 8b 84 24 98 01 00 00 	movq	408(%rsp), %rax
  4153da:	0f b6 88 c4 00 00 00 	movzbl	196(%rax), %ecx
  4153e1:	84 c9 	testb	%cl, %cl
  4153e3:	0f 85 c5 01 00 00 	jne	453 <runtime.scanstack+0x20e>
  4153e9:	8b 88 90 00 00 00 	movl	144(%rax), %ecx
  4153ef:	0f ba e1 0c 	btl	$12, %ecx
  4153f3:	0f 83 6d 03 00 00 	jae	877 <runtime.scanstack+0x3c6>
  4153f9:	8b 88 90 00 00 00 	movl	144(%rax), %ecx
  4153ff:	81 e1 ff ef ff ff 	andl	$4294963199, %ecx
  415405:	83 f9 02 	cmpl	$2, %ecx
  415408:	0f 87 7b 01 00 00 	ja	379 <runtime.scanstack+0x1e9>
  41540e:	83 f9 01 	cmpl	$1, %ecx
  415411:	0f 85 68 01 00 00 	jne	360 <runtime.scanstack+0x1df>
  415417:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  415420:	48 39 c8 	cmpq	%rcx, %rax
  415423:	0f 84 b0 01 00 00 	je	432 <runtime.scanstack+0x239>
  415429:	48 8b 48 30 	movq	48(%rax), %rcx
  41542d:	48 85 c9 	testq	%rcx, %rcx
  415430:	74 0e 	je	14 <runtime.scanstack+0xa0>
  415432:	8b 89 10 01 00 00 	movl	272(%rcx), %ecx
  415438:	85 c9 	testl	%ecx, %ecx
  41543a:	0f 85 7e 01 00 00 	jne	382 <runtime.scanstack+0x21e>
  415440:	0f b6 0d 39 2a 09 00 	movzbl	600633(%rip), %ecx
  415447:	84 c9 	testb	%cl, %cl
  415449:	0f 84 1a 01 00 00 	je	282 <runtime.scanstack+0x1c9>
  41544f:	48 8b 48 50 	movq	80(%rax), %rcx
  415453:	48 8d 50 50 	leaq	80(%rax), %rdx
  415457:	48 85 c9 	testq	%rcx, %rcx
  41545a:	0f 85 d1 00 00 00 	jne	209 <runtime.scanstack+0x191>
  415460:	48 8d 7c 24 70 	leaq	112(%rsp), %rdi
  415465:	0f 57 c0 	xorps	%xmm0, %xmm0
  415468:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  41546d:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  415472:	e8 0d 16 03 00 	callq	202253 <runtime.duffzero+0xe4>
  415477:	48 8b 6d 00 	movq	(%rbp), %rbp
  41547b:	48 8d 0d de d1 02 00 	leaq	184798(%rip), %rcx
  415482:	48 89 8c 24 70 01 00 00 	movq	%rcx, 368(%rsp)
  41548a:	48 8d 4c 24 70 	leaq	112(%rsp), %rcx
  41548f:	48 89 8c 24 78 01 00 00 	movq	%rcx, 376(%rsp)
  415497:	48 8b 8c 24 a0 01 00 00 	movq	416(%rsp), %rcx
  41549f:	48 89 8c 24 80 01 00 00 	movq	%rcx, 384(%rsp)
  4154a7:	48 c7 04 24 ff ff ff ff 	movq	$-1, (%rsp)
  4154af:	48 c7 44 24 08 ff ff ff ff 	movq	$-1, 8(%rsp)
  4154b8:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  4154c1:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4154c6:	0f 11 44 24 20 	movups	%xmm0, 32(%rsp)
  4154cb:	48 c7 44 24 30 ff ff ff 7f 	movq	$2147483647, 48(%rsp)
  4154d4:	48 8d 8c 24 70 01 00 00 	leaq	368(%rsp), %rcx
  4154dc:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  4154e1:	0f 11 44 24 40 	movups	%xmm0, 64(%rsp)
  4154e6:	e8 45 5e 02 00 	callq	155205 <runtime.gentraceback>
  4154eb:	48 8b 84 24 98 01 00 00 	movq	408(%rsp), %rax
  4154f3:	48 89 04 24 	movq	%rax, (%rsp)
  4154f7:	48 8d 8c 24 70 01 00 00 	leaq	368(%rsp), %rcx
  4154ff:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  415504:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  41550d:	e8 1e 5c 02 00 	callq	154654 <runtime.tracebackdefers>
  415512:	48 8b 84 24 98 01 00 00 	movq	408(%rsp), %rax
  41551a:	c6 80 c4 00 00 00 01 	movb	$1, 196(%rax)
  415521:	48 8b ac 24 88 01 00 00 	movq	392(%rsp), %rbp
  415529:	48 81 c4 90 01 00 00 	addq	$400, %rsp
  415530:	c3 	retq
  415531:	48 8d 05 c8 fa 08 00 	leaq	588488(%rip), %rax
  415538:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  41553d:	48 89 14 24 	movq	%rdx, (%rsp)
  415541:	48 c7 44 24 08 08 00 00 00 	movq	$8, 8(%rsp)
  41554a:	48 8b 84 24 a0 01 00 00 	movq	416(%rsp), %rax
  415552:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  415557:	e8 e4 0f 00 00 	callq	4068 <runtime.scanblock>
  41555c:	48 8b 84 24 98 01 00 00 	movq	408(%rsp), %rax
  415564:	e9 f7 fe ff ff 	jmp	-265 <runtime.scanstack+0xc0>
  415569:	48 89 04 24 	movq	%rax, (%rsp)
  41556d:	e8 5e 14 02 00 	callq	136286 <runtime.shrinkstack>
  415572:	48 8b 84 24 98 01 00 00 	movq	408(%rsp), %rax
  41557a:	e9 d0 fe ff ff 	jmp	-304 <runtime.scanstack+0xaf>
  41557f:	83 f9 02 	cmpl	$2, %ecx
  415582:	74 70 	je	112 <runtime.scanstack+0x254>
  415584:	e9 24 01 00 00 	jmp	292 <runtime.scanstack+0x30d>
  415589:	8d 51 fd 	leal	-3(%rcx), %edx
  41558c:	83 fa 01 	cmpl	$1, %edx
  41558f:	0f 86 82 fe ff ff 	jbe	-382 <runtime.scanstack+0x77>
  415595:	83 f9 06 	cmpl	$6, %ecx
  415598:	0f 85 0f 01 00 00 	jne	271 <runtime.scanstack+0x30d>
  41559e:	48 8b ac 24 88 01 00 00 	movq	392(%rsp), %rbp
  4155a6:	48 81 c4 90 01 00 00 	addq	$400, %rsp
  4155ad:	c3 	retq
  4155ae:	48 8b ac 24 88 01 00 00 	movq	392(%rsp), %rbp
  4155b6:	48 81 c4 90 01 00 00 	addq	$400, %rsp
  4155bd:	c3 	retq
  4155be:	48 8d 05 1e 64 05 00 	leaq	353310(%rip), %rax
  4155c5:	48 89 04 24 	movq	%rax, (%rsp)
  4155c9:	48 c7 44 24 08 19 00 00 00 	movq	$25, 8(%rsp)
  4155d2:	e8 f9 bb 00 00 	callq	48121 <runtime.throw>
  4155d7:	0f 0b 	ud2
  4155d9:	48 8d 05 ae 62 05 00 	leaq	352942(%rip), %rax
  4155e0:	48 89 04 24 	movq	%rax, (%rsp)
  4155e4:	48 c7 44 24 08 18 00 00 00 	movq	$24, 8(%rsp)
  4155ed:	e8 de bb 00 00 	callq	48094 <runtime.throw>
  4155f2:	0f 0b 	ud2
  4155f4:	8b 88 90 00 00 00 	movl	144(%rax), %ecx
  4155fa:	89 4c 24 5c 	movl	%ecx, 92(%rsp)
  4155fe:	48 8b 90 98 00 00 00 	movq	152(%rax), %rdx
  415605:	48 89 54 24 68 	movq	%rdx, 104(%rsp)
  41560a:	e8 f1 c4 00 00 	callq	50417 <runtime.printlock>
  41560f:	48 8d 05 28 50 05 00 	leaq	348200(%rip), %rax
  415616:	48 89 04 24 	movq	%rax, (%rsp)
  41561a:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  415623:	e8 18 ce 00 00 	callq	52760 <runtime.printstring>
  415628:	48 8b 84 24 98 01 00 00 	movq	408(%rsp), %rax
  415630:	48 89 04 24 	movq	%rax, (%rsp)
  415634:	e8 c7 cd 00 00 	callq	52679 <runtime.printpointer>
  415639:	48 8d 05 52 48 05 00 	leaq	346194(%rip), %rax
  415640:	48 89 04 24 	movq	%rax, (%rsp)
  415644:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  41564d:	e8 ee cd 00 00 	callq	52718 <runtime.printstring>
  415652:	48 8b 44 24 68 	movq	104(%rsp), %rax
  415657:	48 89 04 24 	movq	%rax, (%rsp)
  41565b:	e8 20 cc 00 00 	callq	52256 <runtime.printint>
  415660:	48 8d 05 ad 57 05 00 	leaq	350125(%rip), %rax
  415667:	48 89 04 24 	movq	%rax, (%rsp)
  41566b:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  415674:	e8 c7 cd 00 00 	callq	52679 <runtime.printstring>
  415679:	8b 44 24 5c 	movl	92(%rsp), %eax
  41567d:	89 c0 	movl	%eax, %eax
  41567f:	48 89 04 24 	movq	%rax, (%rsp)
  415683:	e8 e8 ca 00 00 	callq	51944 <runtime.printuint>
  415688:	e8 03 c7 00 00 	callq	50947 <runtime.printnl>
  41568d:	e8 ee c4 00 00 	callq	50414 <runtime.printunlock>
  415692:	48 8d 05 6a 72 05 00 	leaq	356970(%rip), %rax
  415699:	48 89 04 24 	movq	%rax, (%rsp)
  41569d:	48 c7 44 24 08 20 00 00 00 	movq	$32, 8(%rsp)
  4156a6:	e8 25 bb 00 00 	callq	47909 <runtime.throw>
  4156ab:	0f 0b 	ud2
  4156ad:	8b 88 90 00 00 00 	movl	144(%rax), %ecx
  4156b3:	89 4c 24 64 	movl	%ecx, 100(%rsp)
  4156b7:	48 8b 90 98 00 00 00 	movq	152(%rax), %rdx
  4156be:	48 89 54 24 68 	movq	%rdx, 104(%rsp)
  4156c3:	e8 38 c4 00 00 	callq	50232 <runtime.printlock>
  4156c8:	48 8d 05 6f 4f 05 00 	leaq	348015(%rip), %rax
  4156cf:	48 89 04 24 	movq	%rax, (%rsp)
  4156d3:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  4156dc:	e8 5f cd 00 00 	callq	52575 <runtime.printstring>
  4156e1:	48 8b 84 24 98 01 00 00 	movq	408(%rsp), %rax
  4156e9:	48 89 04 24 	movq	%rax, (%rsp)
  4156ed:	e8 0e cd 00 00 	callq	52494 <runtime.printpointer>
  4156f2:	48 8d 05 99 47 05 00 	leaq	346009(%rip), %rax
  4156f9:	48 89 04 24 	movq	%rax, (%rsp)
  4156fd:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  415706:	e8 35 cd 00 00 	callq	52533 <runtime.printstring>
  41570b:	48 8b 44 24 68 	movq	104(%rsp), %rax
  415710:	48 89 04 24 	movq	%rax, (%rsp)
  415714:	e8 67 cb 00 00 	callq	52071 <runtime.printint>
  415719:	48 8d 05 f4 56 05 00 	leaq	349940(%rip), %rax
  415720:	48 89 04 24 	movq	%rax, (%rsp)
  415724:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  41572d:	e8 0e cd 00 00 	callq	52494 <runtime.printstring>
  415732:	8b 44 24 64 	movl	100(%rsp), %eax
  415736:	89 c0 	movl	%eax, %eax
  415738:	48 89 04 24 	movq	%rax, (%rsp)
  41573c:	e8 2f ca 00 00 	callq	51759 <runtime.printuint>
  415741:	e8 4a c6 00 00 	callq	50762 <runtime.printnl>
  415746:	e8 35 c4 00 00 	callq	50229 <runtime.printunlock>
  41574b:	48 8d 05 0b 55 05 00 	leaq	349451(%rip), %rax
  415752:	48 89 04 24 	movq	%rax, (%rsp)
  415756:	48 c7 44 24 08 11 00 00 00 	movq	$17, 8(%rsp)
  41575f:	e8 6c ba 00 00 	callq	47724 <runtime.throw>
  415764:	0f 0b 	ud2
  415766:	8b 88 90 00 00 00 	movl	144(%rax), %ecx
  41576c:	89 4c 24 60 	movl	%ecx, 96(%rsp)
  415770:	48 8b 90 98 00 00 00 	movq	152(%rax), %rdx
  415777:	48 89 54 24 68 	movq	%rdx, 104(%rsp)
  41577c:	e8 7f c3 00 00 	callq	50047 <runtime.printlock>
  415781:	48 8d 05 72 5d 05 00 	leaq	351602(%rip), %rax
  415788:	48 89 04 24 	movq	%rax, (%rsp)
  41578c:	48 c7 44 24 08 16 00 00 00 	movq	$22, 8(%rsp)
  415795:	e8 a6 cc 00 00 	callq	52390 <runtime.printstring>
  41579a:	48 8b 84 24 98 01 00 00 	movq	408(%rsp), %rax
  4157a2:	48 89 04 24 	movq	%rax, (%rsp)
  4157a6:	e8 55 cc 00 00 	callq	52309 <runtime.printpointer>
  4157ab:	48 8d 05 e0 46 05 00 	leaq	345824(%rip), %rax
  4157b2:	48 89 04 24 	movq	%rax, (%rsp)
  4157b6:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  4157bf:	e8 7c cc 00 00 	callq	52348 <runtime.printstring>
  4157c4:	48 8b 44 24 68 	movq	104(%rsp), %rax
  4157c9:	48 89 04 24 	movq	%rax, (%rsp)
  4157cd:	e8 ae ca 00 00 	callq	51886 <runtime.printint>
  4157d2:	48 8d 05 3b 56 05 00 	leaq	349755(%rip), %rax
  4157d9:	48 89 04 24 	movq	%rax, (%rsp)
  4157dd:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  4157e6:	e8 55 cc 00 00 	callq	52309 <runtime.printstring>
  4157eb:	8b 44 24 60 	movl	96(%rsp), %eax
  4157ef:	89 c0 	movl	%eax, %eax
  4157f1:	48 89 04 24 	movq	%rax, (%rsp)
  4157f5:	e8 f6 ca 00 00 	callq	51958 <runtime.printhex>
  4157fa:	e8 91 c5 00 00 	callq	50577 <runtime.printnl>
  4157ff:	e8 7c c3 00 00 	callq	50044 <runtime.printunlock>
  415804:	48 8d 05 1b 5d 05 00 	leaq	351515(%rip), %rax
  41580b:	48 89 04 24 	movq	%rax, (%rsp)
  41580f:	48 c7 44 24 08 16 00 00 00 	movq	$22, 8(%rsp)
  415818:	e8 b3 b9 00 00 	callq	47539 <runtime.throw>
  41581d:	0f 0b 	ud2
  41581f:	e8 dc 14 02 00 	callq	136412 <runtime.morestackc>
  415824:	e9 77 fb ff ff 	jmp	-1161 <runtime.scanstack>
  415829:	cc 	int3
  41582a:	cc 	int3
  41582b:	cc 	int3
  41582c:	cc 	int3
  41582d:	cc 	int3
  41582e:	cc 	int3
  41582f:	cc 	int3

runtime.scanframeworker:
  415830:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  415839:	48 8d 44 24 e8 	leaq	-24(%rsp), %rax
  41583e:	48 3b 41 10 	cmpq	16(%rcx), %rax
  415842:	0f 86 77 06 00 00 	jbe	1655 <runtime.scanframeworker+0x68f>
  415848:	48 81 ec 98 00 00 00 	subq	$152, %rsp
  41584f:	48 89 ac 24 90 00 00 00 	movq	%rbp, 144(%rsp)
  415857:	48 8d ac 24 90 00 00 00 	leaq	144(%rsp), %rbp
  41585f:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  415867:	48 8b 48 08 	movq	8(%rax), %rcx
  41586b:	48 8b 10 	movq	(%rax), %rdx
  41586e:	48 8b 58 18 	movq	24(%rax), %rbx
  415872:	48 85 db 	testq	%rbx, %rbx
  415875:	0f 84 01 02 00 00 	je	513 <runtime.scanframeworker+0x24c>
  41587b:	48 8b 32 	movq	(%rdx), %rsi
  41587e:	48 39 f3 	cmpq	%rsi, %rbx
  415881:	74 03 	je	3 <runtime.scanframeworker+0x56>
  415883:	48 ff cb 	decq	%rbx
  415886:	48 89 5c 24 38 	movq	%rbx, 56(%rsp)
  41588b:	48 89 8c 24 88 00 00 00 	movq	%rcx, 136(%rsp)
  415893:	48 89 94 24 80 00 00 00 	movq	%rdx, 128(%rsp)
  41589b:	48 89 14 24 	movq	%rdx, (%rsp)
  41589f:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4158a4:	c7 44 24 10 00 00 00 00 	movl	$0, 16(%rsp)
  4158ac:	48 89 5c 24 18 	movq	%rbx, 24(%rsp)
  4158b1:	48 8b 84 24 a8 00 00 00 	movq	168(%rsp), %rax
  4158b9:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  4158be:	e8 7d 35 02 00 	callq	144765 <runtime.pcdatavalue>
  4158c3:	48 8d 44 24 10 	leaq	16(%rsp), %rax
  4158c8:	8b 4c 24 28 	movl	40(%rsp), %ecx
  4158cc:	83 f9 ff 	cmpl	$-1, %ecx
  4158cf:	75 02 	jne	2 <runtime.scanframeworker+0xa3>
  4158d1:	31 c9 	xorl	%ecx, %ecx
  4158d3:	89 4c 24 34 	movl	%ecx, 52(%rsp)
  4158d7:	48 8b 94 24 a0 00 00 00 	movq	160(%rsp), %rdx
  4158df:	48 8b 5a 38 	movq	56(%rdx), %rbx
  4158e3:	48 2b 5a 28 	subq	40(%rdx), %rbx
  4158e7:	48 85 db 	testq	%rbx, %rbx
  4158ea:	0f 87 cd 00 00 00 	ja	205 <runtime.scanframeworker+0x18d>
  4158f0:	48 8b 42 48 	movq	72(%rdx), %rax
  4158f4:	48 85 c0 	testq	%rax, %rax
  4158f7:	76 3a 	jbe	58 <runtime.scanframeworker+0x103>
  4158f9:	48 8b 42 50 	movq	80(%rdx), %rax
  4158fd:	48 85 c0 	testq	%rax, %rax
  415900:	74 41 	je	65 <runtime.scanframeworker+0x113>
  415902:	48 8b 48 08 	movq	8(%rax), %rcx
  415906:	8b 00 	movl	(%rax), %eax
  415908:	48 8b 52 40 	movq	64(%rdx), %rdx
  41590c:	48 89 14 24 	movq	%rdx, (%rsp)
  415910:	48 63 c0 	movslq	%eax, %rax
  415913:	48 c1 e0 03 	shlq	$3, %rax
  415917:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41591c:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  415921:	48 8b 84 24 b0 00 00 00 	movq	176(%rsp), %rax
  415929:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  41592e:	e8 0d 0c 00 00 	callq	3085 <runtime.scanblock>
  415933:	48 8b ac 24 90 00 00 00 	movq	144(%rsp), %rbp
  41593b:	48 81 c4 98 00 00 00 	addq	$152, %rsp
  415942:	c3 	retq
  415943:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  41594b:	48 89 04 24 	movq	%rax, (%rsp)
  41594f:	48 8b 8c 24 88 00 00 00 	movq	136(%rsp), %rcx
  415957:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41595c:	c7 44 24 10 00 00 00 00 	movl	$0, 16(%rsp)
  415964:	e8 87 35 02 00 	callq	144775 <runtime.funcdata>
  415969:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41596e:	48 85 c0 	testq	%rax, %rax
  415971:	0f 84 3a 02 00 00 	je	570 <runtime.scanframeworker+0x381>
  415977:	8b 08 	movl	(%rax), %ecx
  415979:	85 c9 	testl	%ecx, %ecx
  41597b:	0f 8e 30 02 00 00 	jle	560 <runtime.scanframeworker+0x381>
  415981:	48 89 44 24 78 	movq	%rax, 120(%rsp)
  415986:	8b 54 24 34 	movl	52(%rsp), %edx
  41598a:	85 d2 	testl	%edx, %edx
  41598c:	0f 8c fa 00 00 00 	jl	250 <runtime.scanframeworker+0x25c>
  415992:	39 ca 	cmpl	%ecx, %edx
  415994:	0f 8d f2 00 00 00 	jge	242 <runtime.scanframeworker+0x25c>
  41599a:	48 89 04 24 	movq	%rax, (%rsp)
  41599e:	89 54 24 08 	movl	%edx, 8(%rsp)
  4159a2:	e8 49 38 02 00 	callq	145481 <runtime.stackmapdata>
  4159a7:	8b 44 24 10 	movl	16(%rsp), %eax
  4159ab:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  4159b0:	48 8b 94 24 a0 00 00 00 	movq	160(%rsp), %rdx
  4159b8:	e9 4b ff ff ff 	jmp	-181 <runtime.scanframeworker+0xd8>
  4159bd:	48 89 44 24 70 	movq	%rax, 112(%rsp)
  4159c2:	48 89 5c 24 40 	movq	%rbx, 64(%rsp)
  4159c7:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  4159cf:	48 89 04 24 	movq	%rax, (%rsp)
  4159d3:	48 8b 8c 24 88 00 00 00 	movq	136(%rsp), %rcx
  4159db:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4159e0:	c7 44 24 10 01 00 00 00 	movl	$1, 16(%rsp)
  4159e8:	e8 03 35 02 00 	callq	144643 <runtime.funcdata>
  4159ed:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4159f2:	48 85 c0 	testq	%rax, %rax
  4159f5:	0f 84 d0 03 00 00 	je	976 <runtime.scanframeworker+0x59b>
  4159fb:	8b 08 	movl	(%rax), %ecx
  4159fd:	85 c9 	testl	%ecx, %ecx
  4159ff:	0f 8e c6 03 00 00 	jle	966 <runtime.scanframeworker+0x59b>
  415a05:	48 89 44 24 78 	movq	%rax, 120(%rsp)
  415a0a:	8b 54 24 34 	movl	52(%rsp), %edx
  415a0e:	85 d2 	testl	%edx, %edx
  415a10:	0f 8c 90 02 00 00 	jl	656 <runtime.scanframeworker+0x476>
  415a16:	39 ca 	cmpl	%ecx, %edx
  415a18:	0f 8d 88 02 00 00 	jge	648 <runtime.scanframeworker+0x476>
  415a1e:	48 89 04 24 	movq	%rax, (%rsp)
  415a22:	89 54 24 08 	movl	%edx, 8(%rsp)
  415a26:	e8 c5 37 02 00 	callq	145349 <runtime.stackmapdata>
  415a2b:	48 8b 44 24 18 	movq	24(%rsp), %rax
  415a30:	48 8b 4c 24 70 	movq	112(%rsp), %rcx
  415a35:	48 63 09 	movslq	(%rcx), %rcx
  415a38:	48 c1 e1 03 	shlq	$3, %rcx
  415a3c:	48 8b 94 24 a0 00 00 00 	movq	160(%rsp), %rdx
  415a44:	48 8b 5a 38 	movq	56(%rdx), %rbx
  415a48:	48 29 cb 	subq	%rcx, %rbx
  415a4b:	48 89 1c 24 	movq	%rbx, (%rsp)
  415a4f:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  415a54:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  415a59:	48 8b 84 24 b0 00 00 00 	movq	176(%rsp), %rax
  415a61:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  415a66:	e8 d5 0a 00 00 	callq	2773 <runtime.scanblock>
  415a6b:	8b 4c 24 34 	movl	52(%rsp), %ecx
  415a6f:	48 8b 94 24 a0 00 00 00 	movq	160(%rsp), %rdx
  415a77:	e9 74 fe ff ff 	jmp	-396 <runtime.scanframeworker+0xc0>
  415a7c:	48 8b ac 24 90 00 00 00 	movq	144(%rsp), %rbp
  415a84:	48 81 c4 98 00 00 00 	addq	$152, %rsp
  415a8b:	c3 	retq
  415a8c:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  415a94:	48 89 04 24 	movq	%rax, (%rsp)
  415a98:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  415aa0:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  415aa5:	e8 56 2e 02 00 	callq	142934 <runtime.funcname>
  415aaa:	48 8b 44 24 78 	movq	120(%rsp), %rax
  415aaf:	48 63 00 	movslq	(%rax), %rax
  415ab2:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  415ab7:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  415abc:	48 89 4c 24 68 	movq	%rcx, 104(%rsp)
  415ac1:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  415ac6:	48 89 54 24 58 	movq	%rdx, 88(%rsp)
  415acb:	e8 30 c0 00 00 	callq	49200 <runtime.printlock>
  415ad0:	48 8d 05 93 54 05 00 	leaq	349331(%rip), %rax
  415ad7:	48 89 04 24 	movq	%rax, (%rsp)
  415adb:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  415ae4:	e8 57 c9 00 00 	callq	51543 <runtime.printstring>
  415ae9:	8b 44 24 34 	movl	52(%rsp), %eax
  415aed:	48 63 c0 	movslq	%eax, %rax
  415af0:	48 89 04 24 	movq	%rax, (%rsp)
  415af4:	e8 87 c7 00 00 	callq	51079 <runtime.printint>
  415af9:	48 8d 05 54 42 05 00 	leaq	344660(%rip), %rax
  415b00:	48 89 04 24 	movq	%rax, (%rsp)
  415b04:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  415b0d:	e8 2e c9 00 00 	callq	51502 <runtime.printstring>
  415b12:	48 8b 44 24 60 	movq	96(%rsp), %rax
  415b17:	48 89 04 24 	movq	%rax, (%rsp)
  415b1b:	e8 60 c7 00 00 	callq	51040 <runtime.printint>
  415b20:	48 8d 05 5b 64 05 00 	leaq	353371(%rip), %rax
  415b27:	48 89 04 24 	movq	%rax, (%rsp)
  415b2b:	48 c7 44 24 08 1c 00 00 00 	movq	$28, 8(%rsp)
  415b34:	e8 07 c9 00 00 	callq	51463 <runtime.printstring>
  415b39:	48 8b 44 24 68 	movq	104(%rsp), %rax
  415b3e:	48 89 04 24 	movq	%rax, (%rsp)
  415b42:	48 8b 44 24 58 	movq	88(%rsp), %rax
  415b47:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  415b4c:	e8 ef c8 00 00 	callq	51439 <runtime.printstring>
  415b51:	48 8d 05 4b 48 05 00 	leaq	346187(%rip), %rax
  415b58:	48 89 04 24 	movq	%rax, (%rsp)
  415b5c:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  415b65:	e8 d6 c8 00 00 	callq	51414 <runtime.printstring>
  415b6a:	48 8b 44 24 38 	movq	56(%rsp), %rax
  415b6f:	48 89 04 24 	movq	%rax, (%rsp)
  415b73:	e8 f8 c5 00 00 	callq	50680 <runtime.printuint>
  415b78:	48 8d 05 eb 40 05 00 	leaq	344299(%rip), %rax
  415b7f:	48 89 04 24 	movq	%rax, (%rsp)
  415b83:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  415b8c:	e8 af c8 00 00 	callq	51375 <runtime.printstring>
  415b91:	e8 ea bf 00 00 	callq	49130 <runtime.printunlock>
  415b96:	48 8d 05 28 63 05 00 	leaq	353064(%rip), %rax
  415b9d:	48 89 04 24 	movq	%rax, (%rsp)
  415ba1:	48 c7 44 24 08 1b 00 00 00 	movq	$27, 8(%rsp)
  415baa:	e8 21 b6 00 00 	callq	46625 <runtime.throw>
  415baf:	0f 0b 	ud2
  415bb1:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  415bb9:	48 89 04 24 	movq	%rax, (%rsp)
  415bbd:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  415bc5:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  415bca:	e8 31 2d 02 00 	callq	142641 <runtime.funcname>
  415bcf:	48 8b 44 24 10 	movq	16(%rsp), %rax
  415bd4:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  415bd9:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  415bde:	48 89 4c 24 58 	movq	%rcx, 88(%rsp)
  415be3:	48 8b 94 24 a0 00 00 00 	movq	160(%rsp), %rdx
  415beb:	48 8b 5a 40 	movq	64(%rdx), %rbx
  415bef:	48 89 5c 24 50 	movq	%rbx, 80(%rsp)
  415bf4:	48 8b 52 48 	movq	72(%rdx), %rdx
  415bf8:	48 89 54 24 48 	movq	%rdx, 72(%rsp)
  415bfd:	e8 fe be 00 00 	callq	48894 <runtime.printlock>
  415c02:	48 8d 05 ad 4d 05 00 	leaq	347565(%rip), %rax
  415c09:	48 89 04 24 	movq	%rax, (%rsp)
  415c0d:	48 c7 44 24 08 0f 00 00 00 	movq	$15, 8(%rsp)
  415c16:	e8 25 c8 00 00 	callq	51237 <runtime.printstring>
  415c1b:	48 8b 44 24 68 	movq	104(%rsp), %rax
  415c20:	48 89 04 24 	movq	%rax, (%rsp)
  415c24:	48 8b 44 24 58 	movq	88(%rsp), %rax
  415c29:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  415c2e:	e8 0d c8 00 00 	callq	51213 <runtime.printstring>
  415c33:	48 8d 05 ce 4b 05 00 	leaq	347086(%rip), %rax
  415c3a:	48 89 04 24 	movq	%rax, (%rsp)
  415c3e:	48 c7 44 24 08 0e 00 00 00 	movq	$14, 8(%rsp)
  415c47:	e8 f4 c7 00 00 	callq	51188 <runtime.printstring>
  415c4c:	48 8b 44 24 50 	movq	80(%rsp), %rax
  415c51:	48 89 04 24 	movq	%rax, (%rsp)
  415c55:	e8 96 c6 00 00 	callq	50838 <runtime.printhex>
  415c5a:	48 8d 05 f2 3f 05 00 	leaq	344050(%rip), %rax
  415c61:	48 89 04 24 	movq	%rax, (%rsp)
  415c65:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  415c6e:	e8 cd c7 00 00 	callq	51149 <runtime.printstring>
  415c73:	48 8b 44 24 48 	movq	72(%rsp), %rax
  415c78:	48 89 04 24 	movq	%rax, (%rsp)
  415c7c:	e8 6f c6 00 00 	callq	50799 <runtime.printhex>
  415c81:	e8 0a c1 00 00 	callq	49418 <runtime.printnl>
  415c86:	e8 f5 be 00 00 	callq	48885 <runtime.printunlock>
  415c8b:	48 8d 05 80 4e 05 00 	leaq	347776(%rip), %rax
  415c92:	48 89 04 24 	movq	%rax, (%rsp)
  415c96:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  415c9f:	e8 2c b5 00 00 	callq	46380 <runtime.throw>
  415ca4:	0f 0b 	ud2
  415ca6:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  415cae:	48 89 04 24 	movq	%rax, (%rsp)
  415cb2:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  415cba:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  415cbf:	e8 3c 2c 02 00 	callq	142396 <runtime.funcname>
  415cc4:	48 8b 44 24 78 	movq	120(%rsp), %rax
  415cc9:	48 63 00 	movslq	(%rax), %rax
  415ccc:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  415cd1:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  415cd6:	48 89 4c 24 68 	movq	%rcx, 104(%rsp)
  415cdb:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  415ce0:	48 89 54 24 58 	movq	%rdx, 88(%rsp)
  415ce5:	e8 16 be 00 00 	callq	48662 <runtime.printlock>
  415cea:	48 8d 05 79 52 05 00 	leaq	348793(%rip), %rax
  415cf1:	48 89 04 24 	movq	%rax, (%rsp)
  415cf5:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  415cfe:	e8 3d c7 00 00 	callq	51005 <runtime.printstring>
  415d03:	8b 44 24 34 	movl	52(%rsp), %eax
  415d07:	48 63 c0 	movslq	%eax, %rax
  415d0a:	48 89 04 24 	movq	%rax, (%rsp)
  415d0e:	e8 6d c5 00 00 	callq	50541 <runtime.printint>
  415d13:	48 8d 05 3a 40 05 00 	leaq	344122(%rip), %rax
  415d1a:	48 89 04 24 	movq	%rax, (%rsp)
  415d1e:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  415d27:	e8 14 c7 00 00 	callq	50964 <runtime.printstring>
  415d2c:	48 8b 44 24 60 	movq	96(%rsp), %rax
  415d31:	48 89 04 24 	movq	%rax, (%rsp)
  415d35:	e8 46 c5 00 00 	callq	50502 <runtime.printint>
  415d3a:	48 8d 05 b2 66 05 00 	leaq	353970(%rip), %rax
  415d41:	48 89 04 24 	movq	%rax, (%rsp)
  415d45:	48 c7 44 24 08 1e 00 00 00 	movq	$30, 8(%rsp)
  415d4e:	e8 ed c6 00 00 	callq	50925 <runtime.printstring>
  415d53:	48 8b 44 24 68 	movq	104(%rsp), %rax
  415d58:	48 89 04 24 	movq	%rax, (%rsp)
  415d5c:	48 8b 44 24 58 	movq	88(%rsp), %rax
  415d61:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  415d66:	e8 d5 c6 00 00 	callq	50901 <runtime.printstring>
  415d6b:	48 8d 05 31 46 05 00 	leaq	345649(%rip), %rax
  415d72:	48 89 04 24 	movq	%rax, (%rsp)
  415d76:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  415d7f:	e8 bc c6 00 00 	callq	50876 <runtime.printstring>
  415d84:	48 8b 44 24 38 	movq	56(%rsp), %rax
  415d89:	48 89 04 24 	movq	%rax, (%rsp)
  415d8d:	e8 de c3 00 00 	callq	50142 <runtime.printuint>
  415d92:	48 8d 05 d1 3e 05 00 	leaq	343761(%rip), %rax
  415d99:	48 89 04 24 	movq	%rax, (%rsp)
  415d9d:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  415da6:	e8 95 c6 00 00 	callq	50837 <runtime.printstring>
  415dab:	e8 d0 bd 00 00 	callq	48592 <runtime.printunlock>
  415db0:	48 8d 05 0e 61 05 00 	leaq	352526(%rip), %rax
  415db7:	48 89 04 24 	movq	%rax, (%rsp)
  415dbb:	48 c7 44 24 08 1b 00 00 00 	movq	$27, 8(%rsp)
  415dc4:	e8 07 b4 00 00 	callq	46087 <runtime.throw>
  415dc9:	0f 0b 	ud2
  415dcb:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  415dd3:	48 89 04 24 	movq	%rax, (%rsp)
  415dd7:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  415ddf:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  415de4:	e8 17 2b 02 00 	callq	142103 <runtime.funcname>
  415de9:	48 8b 44 24 10 	movq	16(%rsp), %rax
  415dee:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  415df3:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  415df8:	48 89 4c 24 58 	movq	%rcx, 88(%rsp)
  415dfd:	48 8b 94 24 a0 00 00 00 	movq	160(%rsp), %rdx
  415e05:	48 8b 52 38 	movq	56(%rdx), %rdx
  415e09:	48 89 54 24 50 	movq	%rdx, 80(%rsp)
  415e0e:	e8 ed bc 00 00 	callq	48365 <runtime.printlock>
  415e13:	48 8d 05 9c 4b 05 00 	leaq	347036(%rip), %rax
  415e1a:	48 89 04 24 	movq	%rax, (%rsp)
  415e1e:	48 c7 44 24 08 0f 00 00 00 	movq	$15, 8(%rsp)
  415e27:	e8 14 c6 00 00 	callq	50708 <runtime.printstring>
  415e2c:	48 8b 44 24 68 	movq	104(%rsp), %rax
  415e31:	48 89 04 24 	movq	%rax, (%rsp)
  415e35:	48 8b 44 24 58 	movq	88(%rsp), %rax
  415e3a:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  415e3f:	e8 fc c5 00 00 	callq	50684 <runtime.printstring>
  415e44:	48 8d 05 d7 4b 05 00 	leaq	347095(%rip), %rax
  415e4b:	48 89 04 24 	movq	%rax, (%rsp)
  415e4f:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  415e58:	e8 e3 c5 00 00 	callq	50659 <runtime.printstring>
  415e5d:	48 8b 44 24 50 	movq	80(%rsp), %rax
  415e62:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  415e67:	48 29 c8 	subq	%rcx, %rax
  415e6a:	48 89 04 24 	movq	%rax, (%rsp)
  415e6e:	e8 7d c4 00 00 	callq	50301 <runtime.printhex>
  415e73:	48 8d 05 d9 3d 05 00 	leaq	343513(%rip), %rax
  415e7a:	48 89 04 24 	movq	%rax, (%rsp)
  415e7e:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  415e87:	e8 b4 c5 00 00 	callq	50612 <runtime.printstring>
  415e8c:	48 8b 44 24 40 	movq	64(%rsp), %rax
  415e91:	48 89 04 24 	movq	%rax, (%rsp)
  415e95:	e8 56 c4 00 00 	callq	50262 <runtime.printhex>
  415e9a:	e8 f1 be 00 00 	callq	48881 <runtime.printnl>
  415e9f:	e8 dc bc 00 00 	callq	48348 <runtime.printunlock>
  415ea4:	48 8d 05 67 4c 05 00 	leaq	347239(%rip), %rax
  415eab:	48 89 04 24 	movq	%rax, (%rsp)
  415eaf:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  415eb8:	e8 13 b3 00 00 	callq	45843 <runtime.throw>
  415ebd:	0f 0b 	ud2
  415ebf:	e8 ac e6 02 00 	callq	190124 <runtime.morestack_noctxt>
  415ec4:	e9 67 f9 ff ff 	jmp	-1689 <runtime.scanframeworker>
  415ec9:	cc 	int3
  415eca:	cc 	int3
  415ecb:	cc 	int3
  415ecc:	cc 	int3
  415ecd:	cc 	int3
  415ece:	cc 	int3
  415ecf:	cc 	int3

runtime.gcDrain:
  415ed0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  415ed9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  415edd:	0f 86 47 04 00 00 	jbe	1095 <runtime.gcDrain+0x45a>
  415ee3:	48 83 ec 50 	subq	$80, %rsp
  415ee7:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  415eec:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  415ef1:	0f b6 05 1c db 0a 00 	movzbl	711452(%rip), %eax
  415ef8:	84 c0 	testb	%al, %al
  415efa:	0f 84 0f 04 00 00 	je	1039 <runtime.gcDrain+0x43f>
  415f00:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  415f09:	48 8b 40 30 	movq	48(%rax), %rax
  415f0d:	48 8b 80 c0 00 00 00 	movq	192(%rax), %rax
  415f14:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  415f19:	48 8b 51 18 	movq	24(%rcx), %rdx
  415f1d:	48 8b 5c 24 60 	movq	96(%rsp), %rbx
  415f22:	48 f7 c3 18 00 00 00 	testq	$24, %rbx
  415f29:	0f 84 c8 03 00 00 	je	968 <runtime.gcDrain+0x427>
  415f2f:	0f ba e3 03 	btl	$3, %ebx
  415f33:	0f 83 a5 03 00 00 	jae	933 <runtime.gcDrain+0x40e>
  415f39:	48 8d 35 70 82 05 00 	leaq	361072(%rip), %rsi
  415f40:	48 8d ba a0 86 01 00 	leaq	100000(%rdx), %rdi
  415f47:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  415f4c:	48 89 74 24 40 	movq	%rsi, 64(%rsp)
  415f51:	44 8b 05 d0 1e 09 00 	movl	597712(%rip), %r8d
  415f58:	44 8b 0d cd 1e 09 00 	movl	597709(%rip), %r9d
  415f5f:	0f ba e3 00 	btl	$0, %ebx
  415f63:	0f ba e3 02 	btl	$2, %ebx
  415f67:	45 39 c8 	cmpl	%r9d, %r8d
  415f6a:	0f 83 65 03 00 00 	jae	869 <runtime.gcDrain+0x405>
  415f70:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  415f75:	48 89 7c 24 18 	movq	%rdi, 24(%rsp)
  415f7a:	0f ba e3 00 	btl	$0, %ebx
  415f7e:	eb 1e 	jmp	30 <runtime.gcDrain+0xce>
  415f80:	48 8b 44 24 38 	movq	56(%rsp), %rax
  415f85:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  415f8a:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  415f8f:	48 8b 5c 24 60 	movq	96(%rsp), %rbx
  415f94:	48 8b 74 24 40 	movq	64(%rsp), %rsi
  415f99:	48 8b 7c 24 18 	movq	24(%rsp), %rdi
  415f9e:	73 11 	jae	17 <runtime.gcDrain+0xe1>
  415fa0:	44 0f b6 80 c0 00 00 00 	movzbl	192(%rax), %r8d
  415fa8:	45 84 c0 	testb	%r8b, %r8b
  415fab:	0f 85 1b 03 00 00 	jne	795 <runtime.gcDrain+0x3fc>
  415fb1:	41 b8 01 00 00 00 	movl	$1, %r8d
  415fb7:	4c 8d 0d 6a 1e 09 00 	leaq	597610(%rip), %r9
  415fbe:	f0 	lock
  415fbf:	45 0f c1 01 	xaddl	%r8d, (%r9)
  415fc3:	44 8b 15 62 1e 09 00 	movl	597602(%rip), %r10d
  415fca:	45 39 d0 	cmpl	%r10d, %r8d
  415fcd:	0f 83 96 00 00 00 	jae	150 <runtime.gcDrain+0x199>
  415fd3:	48 89 0c 24 	movq	%rcx, (%rsp)
  415fd7:	44 89 44 24 08 	movl	%r8d, 8(%rsp)
  415fdc:	e8 2f e2 ff ff 	callq	-7633 <runtime.markroot>
  415fe1:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  415fe6:	48 85 d2 	testq	%rdx, %rdx
  415fe9:	75 0b 	jne	11 <runtime.gcDrain+0x126>
  415feb:	48 8b 44 24 60 	movq	96(%rsp), %rax
  415ff0:	0f ba e0 00 	btl	$0, %eax
  415ff4:	eb 8a 	jmp	-118 <runtime.gcDrain+0xb0>
  415ff6:	48 8b 02 	movq	(%rdx), %rax
  415ff9:	ff d0 	callq	*%rax
  415ffb:	0f b6 04 24 	movzbl	(%rsp), %eax
  415fff:	84 c0 	testb	%al, %al
  416001:	75 13 	jne	19 <runtime.gcDrain+0x146>
  416003:	48 8b 44 24 60 	movq	96(%rsp), %rax
  416008:	0f ba e0 00 	btl	$0, %eax
  41600c:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  416011:	e9 6a ff ff ff 	jmp	-150 <runtime.gcDrain+0xb0>
  416016:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41601b:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  416020:	48 8b 51 18 	movq	24(%rcx), %rdx
  416024:	48 85 d2 	testq	%rdx, %rdx
  416027:	7e 1f 	jle	31 <runtime.gcDrain+0x178>
  416029:	48 8d 1d f0 db 0a 00 	leaq	711664(%rip), %rbx
  416030:	f0 	lock
  416031:	48 0f c1 13 	xaddq	%rdx, (%rbx)
  416035:	48 8b 54 24 60 	movq	96(%rsp), %rdx
  41603a:	0f ba e2 02 	btl	$2, %edx
  41603e:	72 12 	jb	18 <runtime.gcDrain+0x182>
  416040:	48 c7 41 18 00 00 00 00 	movq	$0, 24(%rcx)
  416048:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  41604d:	48 83 c4 50 	addq	$80, %rsp
  416051:	c3 	retq
  416052:	48 8b 51 18 	movq	24(%rcx), %rdx
  416056:	48 29 c2 	subq	%rax, %rdx
  416059:	48 89 14 24 	movq	%rdx, (%rsp)
  41605d:	e8 6e f1 ff ff 	callq	-3730 <runtime.gcFlushBgCredit>
  416062:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  416067:	eb d7 	jmp	-41 <runtime.gcDrain+0x170>
  416069:	0f ba e3 00 	btl	$0, %ebx
  41606d:	48 f7 c3 1b 00 00 00 	testq	$27, %rbx
  416074:	0f ba e3 00 	btl	$0, %ebx
  416078:	eb 17 	jmp	23 <runtime.gcDrain+0x1c1>
  41607a:	48 8b 44 24 38 	movq	56(%rsp), %rax
  41607f:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  416084:	48 8b 5c 24 60 	movq	96(%rsp), %rbx
  416089:	48 89 f7 	movq	%rsi, %rdi
  41608c:	48 8b 74 24 40 	movq	64(%rsp), %rsi
  416091:	73 11 	jae	17 <runtime.gcDrain+0x1d4>
  416093:	44 0f b6 80 c0 00 00 00 	movzbl	192(%rax), %r8d
  41609b:	45 84 c0 	testb	%r8b, %r8b
  41609e:	0f 85 20 02 00 00 	jne	544 <runtime.gcDrain+0x3f4>
  4160a4:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  4160a9:	48 89 7c 24 18 	movq	%rdi, 24(%rsp)
  4160ae:	4c 8b 05 eb 1c 09 00 	movq	597227(%rip), %r8
  4160b5:	4d 85 c0 	testq	%r8, %r8
  4160b8:	0f 84 d3 01 00 00 	je	467 <runtime.gcDrain+0x3c1>
  4160be:	48 f7 c3 1b 00 00 00 	testq	$27, %rbx
  4160c5:	0f 84 95 01 00 00 	je	405 <runtime.gcDrain+0x390>
  4160cb:	4c 8b 01 	movq	(%rcx), %r8
  4160ce:	4d 85 c0 	testq	%r8, %r8
  4160d1:	0f 84 81 01 00 00 	je	385 <runtime.gcDrain+0x388>
  4160d7:	4d 8b 48 10 	movq	16(%r8), %r9
  4160db:	4d 85 c9 	testq	%r9, %r9
  4160de:	0f 85 55 01 00 00 	jne	341 <runtime.gcDrain+0x369>
  4160e4:	45 31 c0 	xorl	%r8d, %r8d
  4160e7:	4d 85 c0 	testq	%r8, %r8
  4160ea:	0f 84 18 01 00 00 	je	280 <runtime.gcDrain+0x338>
  4160f0:	4d 85 c0 	testq	%r8, %r8
  4160f3:	0f 84 07 01 00 00 	je	263 <runtime.gcDrain+0x330>
  4160f9:	4c 89 04 24 	movq	%r8, (%rsp)
  4160fd:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  416102:	e8 c9 05 00 00 	callq	1481 <runtime.scanobject>
  416107:	48 8b 44 24 58 	movq	88(%rsp), %rax
  41610c:	48 8b 48 18 	movq	24(%rax), %rcx
  416110:	48 81 f9 d0 07 00 00 	cmpq	$2000, %rcx
  416117:	0f 8c c6 00 00 00 	jl	198 <runtime.gcDrain+0x313>
  41611d:	48 8d 1d fc da 0a 00 	leaq	711420(%rip), %rbx
  416124:	f0 	lock
  416125:	48 0f c1 0b 	xaddq	%rcx, (%rbx)
  416129:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  41612e:	0f ba e1 02 	btl	$2, %ecx
  416132:	0f 82 85 00 00 00 	jb	133 <runtime.gcDrain+0x2ed>
  416138:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  41613d:	48 8b 58 18 	movq	24(%rax), %rbx
  416141:	48 c7 40 18 00 00 00 00 	movq	$0, 24(%rax)
  416149:	48 8b 74 24 18 	movq	24(%rsp), %rsi
  41614e:	48 29 de 	subq	%rbx, %rsi
  416151:	48 85 f6 	testq	%rsi, %rsi
  416154:	7f 59 	jg	89 <runtime.gcDrain+0x2df>
  416156:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  41615b:	48 85 db 	testq	%rbx, %rbx
  41615e:	75 10 	jne	16 <runtime.gcDrain+0x2a0>
  416160:	48 81 c6 a0 86 01 00 	addq	$100000, %rsi
  416167:	0f ba e1 00 	btl	$0, %ecx
  41616b:	e9 0a ff ff ff 	jmp	-246 <runtime.gcDrain+0x1aa>
  416170:	48 89 74 24 28 	movq	%rsi, 40(%rsp)
  416175:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  41617a:	48 8b 03 	movq	(%rbx), %rax
  41617d:	48 89 da 	movq	%rbx, %rdx
  416180:	ff d0 	callq	*%rax
  416182:	0f b6 04 24 	movzbl	(%rsp), %eax
  416186:	84 c0 	testb	%al, %al
  416188:	75 1b 	jne	27 <runtime.gcDrain+0x2d5>
  41618a:	48 8b 44 24 58 	movq	88(%rsp), %rax
  41618f:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  416194:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  416199:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  41619e:	48 8b 74 24 28 	movq	40(%rsp), %rsi
  4161a3:	eb bb 	jmp	-69 <runtime.gcDrain+0x290>
  4161a5:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4161aa:	e9 6c fe ff ff 	jmp	-404 <runtime.gcDrain+0x14b>
  4161af:	0f ba e1 00 	btl	$0, %ecx
  4161b3:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  4161b8:	e9 bd fe ff ff 	jmp	-323 <runtime.gcDrain+0x1aa>
  4161bd:	48 8b 48 18 	movq	24(%rax), %rcx
  4161c1:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  4161c6:	48 29 d1 	subq	%rdx, %rcx
  4161c9:	48 89 0c 24 	movq	%rcx, (%rsp)
  4161cd:	e8 fe ef ff ff 	callq	-4098 <runtime.gcFlushBgCredit>
  4161d2:	48 8b 44 24 58 	movq	88(%rsp), %rax
  4161d7:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  4161dc:	31 d2 	xorl	%edx, %edx
  4161de:	e9 5a ff ff ff 	jmp	-166 <runtime.gcDrain+0x26d>
  4161e3:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  4161e8:	0f ba e1 00 	btl	$0, %ecx
  4161ec:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  4161f1:	48 8b 74 24 18 	movq	24(%rsp), %rsi
  4161f6:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  4161fb:	e9 7a fe ff ff 	jmp	-390 <runtime.gcDrain+0x1aa>
  416200:	48 89 d0 	movq	%rdx, %rax
  416203:	e9 13 fe ff ff 	jmp	-493 <runtime.gcDrain+0x14b>
  416208:	48 89 0c 24 	movq	%rcx, (%rsp)
  41620c:	e8 8f 2e 00 00 	callq	11919 <runtime.(*gcWork).tryGet>
  416211:	4c 8b 44 24 08 	movq	8(%rsp), %r8
  416216:	48 8b 44 24 38 	movq	56(%rsp), %rax
  41621b:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  416220:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  416225:	48 8b 5c 24 60 	movq	96(%rsp), %rbx
  41622a:	48 8b 74 24 40 	movq	64(%rsp), %rsi
  41622f:	48 8b 7c 24 18 	movq	24(%rsp), %rdi
  416234:	e9 b7 fe ff ff 	jmp	-329 <runtime.gcDrain+0x220>
  416239:	4d 8d 51 ff 	leaq	-1(%r9), %r10
  41623d:	4d 89 50 10 	movq	%r10, 16(%r8)
  416241:	49 81 fa fd 00 00 00 	cmpq	$253, %r10
  416248:	0f 83 ba 00 00 00 	jae	186 <runtime.gcDrain+0x438>
  41624e:	4f 8b 44 c8 10 	movq	16(%r8,%r9,8), %r8
  416253:	e9 8f fe ff ff 	jmp	-369 <runtime.gcDrain+0x217>
  416258:	45 31 c0 	xorl	%r8d, %r8d
  41625b:	e9 87 fe ff ff 	jmp	-377 <runtime.gcDrain+0x217>
  416260:	48 89 0c 24 	movq	%rcx, (%rsp)
  416264:	e8 27 2f 00 00 	callq	12071 <runtime.(*gcWork).get>
  416269:	4c 8b 44 24 08 	movq	8(%rsp), %r8
  41626e:	48 8b 44 24 38 	movq	56(%rsp), %rax
  416273:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  416278:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  41627d:	48 8b 5c 24 60 	movq	96(%rsp), %rbx
  416282:	48 8b 74 24 40 	movq	64(%rsp), %rsi
  416287:	48 8b 7c 24 18 	movq	24(%rsp), %rdi
  41628c:	e9 5f fe ff ff 	jmp	-417 <runtime.gcDrain+0x220>
  416291:	48 89 0c 24 	movq	%rcx, (%rsp)
  416295:	e8 c6 30 00 00 	callq	12486 <runtime.(*gcWork).balance>
  41629a:	48 8b 5c 24 60 	movq	96(%rsp), %rbx
  41629f:	48 f7 c3 1b 00 00 00 	testq	$27, %rbx
  4162a6:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4162ab:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  4162b0:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  4162b5:	48 8b 74 24 40 	movq	64(%rsp), %rsi
  4162ba:	48 8b 7c 24 18 	movq	24(%rsp), %rdi
  4162bf:	e9 01 fe ff ff 	jmp	-511 <runtime.gcDrain+0x1f5>
  4162c4:	48 89 d0 	movq	%rdx, %rax
  4162c7:	e9 4f fd ff ff 	jmp	-689 <runtime.gcDrain+0x14b>
  4162cc:	0f ba e3 00 	btl	$0, %ebx
  4162d0:	e9 98 fd ff ff 	jmp	-616 <runtime.gcDrain+0x19d>
  4162d5:	0f ba e3 00 	btl	$0, %ebx
  4162d9:	e9 8f fd ff ff 	jmp	-625 <runtime.gcDrain+0x19d>
  4162de:	0f ba e3 04 	btl	$4, %ebx
  4162e2:	73 0c 	jae	12 <runtime.gcDrain+0x420>
  4162e4:	48 8d 35 bd 7e 05 00 	leaq	360125(%rip), %rsi
  4162eb:	e9 50 fc ff ff 	jmp	-944 <runtime.gcDrain+0x70>
  4162f0:	31 f6 	xorl	%esi, %esi
  4162f2:	e9 49 fc ff ff 	jmp	-951 <runtime.gcDrain+0x70>
  4162f7:	48 bf ff ff ff ff ff ff ff 7f 	movabsq	$9223372036854775807, %rdi
  416301:	31 f6 	xorl	%esi, %esi
  416303:	e9 3f fc ff ff 	jmp	-961 <runtime.gcDrain+0x77>
  416308:	e8 33 97 00 00 	callq	38707 <runtime.panicindex>
  41630d:	0f 0b 	ud2
  41630f:	48 8d 05 64 53 05 00 	leaq	349028(%rip), %rax
  416316:	48 89 04 24 	movq	%rax, (%rsp)
  41631a:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  416323:	e8 a8 ae 00 00 	callq	44712 <runtime.throw>
  416328:	0f 0b 	ud2
  41632a:	e8 41 e2 02 00 	callq	188993 <runtime.morestack_noctxt>
  41632f:	e9 9c fb ff ff 	jmp	-1124 <runtime.gcDrain>
  416334:	cc 	int3
  416335:	cc 	int3
  416336:	cc 	int3
  416337:	cc 	int3
  416338:	cc 	int3
  416339:	cc 	int3
  41633a:	cc 	int3
  41633b:	cc 	int3
  41633c:	cc 	int3
  41633d:	cc 	int3
  41633e:	cc 	int3
  41633f:	cc 	int3

runtime.gcDrainN:
  416340:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  416349:	48 3b 61 18 	cmpq	24(%rcx), %rsp
  41634d:	0f 86 e2 01 00 00 	jbe	482 <runtime.gcDrainN+0x1f5>
  416353:	48 83 ec 28 	subq	$40, %rsp
  416357:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  41635c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  416361:	0f b6 05 ac d6 0a 00 	movzbl	710316(%rip), %eax
  416368:	84 c0 	testb	%al, %al
  41636a:	0f 84 aa 01 00 00 	je	426 <runtime.gcDrainN+0x1da>
  416370:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  416379:	48 8b 40 30 	movq	48(%rax), %rax
  41637d:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  416382:	48 8b 51 18 	movq	24(%rcx), %rdx
  416386:	48 f7 da 	negq	%rdx
  416389:	48 8b 80 c0 00 00 00 	movq	192(%rax), %rax
  416390:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  416395:	eb 0d 	jmp	13 <runtime.gcDrainN+0x64>
  416397:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  41639c:	48 89 c2 	movq	%rax, %rdx
  41639f:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4163a4:	0f b6 98 c0 00 00 00 	movzbl	192(%rax), %ebx
  4163ab:	84 db 	testb	%bl, %bl
  4163ad:	0f 85 90 00 00 00 	jne	144 <runtime.gcDrainN+0x103>
  4163b3:	48 8b 59 18 	movq	24(%rcx), %rbx
  4163b7:	48 01 d3 	addq	%rdx, %rbx
  4163ba:	48 8b 74 24 38 	movq	56(%rsp), %rsi
  4163bf:	48 39 f3 	cmpq	%rsi, %rbx
  4163c2:	7d 7f 	jge	127 <runtime.gcDrainN+0x103>
  4163c4:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  4163c9:	48 8b 1d d0 19 09 00 	movq	596432(%rip), %rbx
  4163d0:	48 85 db 	testq	%rbx, %rbx
  4163d3:	0f 84 18 01 00 00 	je	280 <runtime.gcDrainN+0x1b1>
  4163d9:	48 8b 19 	movq	(%rcx), %rbx
  4163dc:	48 85 db 	testq	%rbx, %rbx
  4163df:	0f 84 05 01 00 00 	je	261 <runtime.gcDrainN+0x1aa>
  4163e5:	48 8b 7b 10 	movq	16(%rbx), %rdi
  4163e9:	48 85 ff 	testq	%rdi, %rdi
  4163ec:	0f 85 dd 00 00 00 	jne	221 <runtime.gcDrainN+0x18f>
  4163f2:	31 db 	xorl	%ebx, %ebx
  4163f4:	48 85 db 	testq	%rbx, %rbx
  4163f7:	0f 84 ab 00 00 00 	je	171 <runtime.gcDrainN+0x168>
  4163fd:	48 85 db 	testq	%rbx, %rbx
  416400:	75 57 	jne	87 <runtime.gcDrainN+0x119>
  416402:	8b 1d 20 1a 09 00 	movl	596512(%rip), %ebx
  416408:	8b 3d 1e 1a 09 00 	movl	596510(%rip), %edi
  41640e:	39 fb 	cmpl	%edi, %ebx
  416410:	73 31 	jae	49 <runtime.gcDrainN+0x103>
  416412:	bb 01 00 00 00 	movl	$1, %ebx
  416417:	48 8d 3d 0a 1a 09 00 	leaq	596490(%rip), %rdi
  41641e:	f0 	lock
  41641f:	0f c1 1f 	xaddl	%ebx, (%rdi)
  416422:	8b 3d 04 1a 09 00 	movl	596484(%rip), %edi
  416428:	39 fb 	cmpl	%edi, %ebx
  41642a:	73 17 	jae	23 <runtime.gcDrainN+0x103>
  41642c:	48 89 0c 24 	movq	%rcx, (%rsp)
  416430:	89 5c 24 08 	movl	%ebx, 8(%rsp)
  416434:	e8 d7 dd ff ff 	callq	-8745 <runtime.markroot>
  416439:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41643e:	e9 54 ff ff ff 	jmp	-172 <runtime.gcDrainN+0x57>
  416443:	48 8b 41 18 	movq	24(%rcx), %rax
  416447:	48 01 d0 	addq	%rdx, %rax
  41644a:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  41644f:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  416454:	48 83 c4 28 	addq	$40, %rsp
  416458:	c3 	retq
  416459:	48 89 1c 24 	movq	%rbx, (%rsp)
  41645d:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  416462:	e8 69 02 00 00 	callq	617 <runtime.scanobject>
  416467:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41646c:	48 8b 48 18 	movq	24(%rax), %rcx
  416470:	48 81 f9 d0 07 00 00 	cmpq	$2000, %rcx
  416477:	7c 28 	jl	40 <runtime.gcDrainN+0x161>
  416479:	48 8d 15 a0 d7 0a 00 	leaq	710560(%rip), %rdx
  416480:	f0 	lock
  416481:	48 0f c1 0a 	xaddq	%rcx, (%rdx)
  416485:	48 8b 48 18 	movq	24(%rax), %rcx
  416489:	48 c7 40 18 00 00 00 00 	movq	$0, 24(%rax)
  416491:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  416496:	48 01 d1 	addq	%rdx, %rcx
  416499:	48 89 c8 	movq	%rcx, %rax
  41649c:	e9 f6 fe ff ff 	jmp	-266 <runtime.gcDrainN+0x57>
  4164a1:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  4164a6:	eb f1 	jmp	-15 <runtime.gcDrainN+0x159>
  4164a8:	48 89 0c 24 	movq	%rcx, (%rsp)
  4164ac:	e8 ef 2b 00 00 	callq	11247 <runtime.(*gcWork).tryGet>
  4164b1:	48 8b 5c 24 08 	movq	8(%rsp), %rbx
  4164b6:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4164bb:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4164c0:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  4164c5:	48 8b 74 24 38 	movq	56(%rsp), %rsi
  4164ca:	e9 2e ff ff ff 	jmp	-210 <runtime.gcDrainN+0xbd>
  4164cf:	4c 8d 47 ff 	leaq	-1(%rdi), %r8
  4164d3:	4c 89 43 10 	movq	%r8, 16(%rbx)
  4164d7:	49 81 f8 fd 00 00 00 	cmpq	$253, %r8
  4164de:	73 33 	jae	51 <runtime.gcDrainN+0x1d3>
  4164e0:	48 8b 5c fb 10 	movq	16(%rbx,%rdi,8), %rbx
  4164e5:	e9 0a ff ff ff 	jmp	-246 <runtime.gcDrainN+0xb4>
  4164ea:	31 db 	xorl	%ebx, %ebx
  4164ec:	e9 03 ff ff ff 	jmp	-253 <runtime.gcDrainN+0xb4>
  4164f1:	48 89 0c 24 	movq	%rcx, (%rsp)
  4164f5:	e8 66 2e 00 00 	callq	11878 <runtime.(*gcWork).balance>
  4164fa:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4164ff:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  416504:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  416509:	48 8b 74 24 38 	movq	56(%rsp), %rsi
  41650e:	e9 c6 fe ff ff 	jmp	-314 <runtime.gcDrainN+0x99>
  416513:	e8 28 95 00 00 	callq	38184 <runtime.panicindex>
  416518:	0f 0b 	ud2
  41651a:	48 8d 05 9d 53 05 00 	leaq	349085(%rip), %rax
  416521:	48 89 04 24 	movq	%rax, (%rsp)
  416525:	48 c7 44 24 08 18 00 00 00 	movq	$24, 8(%rsp)
  41652e:	e8 9d ac 00 00 	callq	44189 <runtime.throw>
  416533:	0f 0b 	ud2
  416535:	e8 c6 07 02 00 	callq	133062 <runtime.morestackc>
  41653a:	e9 01 fe ff ff 	jmp	-511 <runtime.gcDrainN>
  41653f:	cc 	int3

runtime.scanblock:
  416540:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  416549:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41654d:	0f 86 6e 01 00 00 	jbe	366 <runtime.scanblock+0x181>
  416553:	48 83 ec 70 	subq	$112, %rsp
  416557:	48 89 6c 24 68 	movq	%rbp, 104(%rsp)
  41655c:	48 8d 6c 24 68 	leaq	104(%rsp), %rbp
  416561:	48 8b 05 60 70 09 00 	movq	618592(%rip), %rax
  416568:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  41656d:	48 8b 0d 5c 70 09 00 	movq	618588(%rip), %rcx
  416574:	48 89 4c 24 58 	movq	%rcx, 88(%rsp)
  416579:	31 d2 	xorl	%edx, %edx
  41657b:	48 8b 9c 24 80 00 00 00 	movq	128(%rsp), %rbx
  416583:	48 39 da 	cmpq	%rbx, %rdx
  416586:	0f 83 2b 01 00 00 	jae	299 <runtime.scanblock+0x177>
  41658c:	48 89 d6 	movq	%rdx, %rsi
  41658f:	48 c1 ea 06 	shrq	$6, %rdx
  416593:	48 8b bc 24 88 00 00 00 	movq	136(%rsp), %rdi
  41659b:	4c 8d 04 17 	leaq	(%rdi,%rdx), %r8
  41659f:	41 84 00 	testb	%al, (%r8)
  4165a2:	0f b6 14 17 	movzbl	(%rdi,%rdx), %edx
  4165a6:	85 d2 	testl	%edx, %edx
  4165a8:	75 06 	jne	6 <runtime.scanblock+0x70>
  4165aa:	48 8d 56 40 	leaq	64(%rsi), %rdx
  4165ae:	eb cb 	jmp	-53 <runtime.scanblock+0x3b>
  4165b0:	45 31 c0 	xorl	%r8d, %r8d
  4165b3:	eb 09 	jmp	9 <runtime.scanblock+0x7e>
  4165b5:	49 ff c0 	incq	%r8
  4165b8:	d1 ea 	shrl	%edx
  4165ba:	48 83 c6 08 	addq	$8, %rsi
  4165be:	49 83 f8 08 	cmpq	$8, %r8
  4165c2:	0f 8d e7 00 00 00 	jge	231 <runtime.scanblock+0x16f>
  4165c8:	48 39 de 	cmpq	%rbx, %rsi
  4165cb:	0f 83 de 00 00 00 	jae	222 <runtime.scanblock+0x16f>
  4165d1:	0f ba e2 00 	btl	$0, %edx
  4165d5:	0f 83 ca 00 00 00 	jae	202 <runtime.scanblock+0x165>
  4165db:	4c 8b 4c 24 78 	movq	120(%rsp), %r9
  4165e0:	4e 8d 14 0e 	leaq	(%rsi,%r9), %r10
  4165e4:	4d 8b 12 	movq	(%r10), %r10
  4165e7:	4d 85 d2 	testq	%r10, %r10
  4165ea:	74 c9 	je	-55 <runtime.scanblock+0x75>
  4165ec:	4c 39 d0 	cmpq	%r10, %rax
  4165ef:	77 c4 	ja	-60 <runtime.scanblock+0x75>
  4165f1:	49 39 ca 	cmpq	%rcx, %r10
  4165f4:	73 bf 	jae	-65 <runtime.scanblock+0x75>
  4165f6:	4c 89 44 24 48 	movq	%r8, 72(%rsp)
  4165fb:	48 89 74 24 50 	movq	%rsi, 80(%rsp)
  416600:	89 54 24 44 	movl	%edx, 68(%rsp)
  416604:	4c 89 14 24 	movq	%r10, (%rsp)
  416608:	4c 89 4c 24 08 	movq	%r9, 8(%rsp)
  41660d:	48 89 74 24 10 	movq	%rsi, 16(%rsp)
  416612:	e8 89 5c ff ff 	callq	-41847 <runtime.heapBitsForObject>
  416617:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41661c:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  416621:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  416626:	8b 5c 24 28 	movl	40(%rsp), %ebx
  41662a:	48 8b 74 24 20 	movq	32(%rsp), %rsi
  41662f:	48 85 c0 	testq	%rax, %rax
  416632:	75 32 	jne	50 <runtime.scanblock+0x126>
  416634:	48 8b 44 24 60 	movq	96(%rsp), %rax
  416639:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  41663e:	8b 54 24 44 	movl	68(%rsp), %edx
  416642:	48 8b 9c 24 80 00 00 00 	movq	128(%rsp), %rbx
  41664a:	48 8b 74 24 50 	movq	80(%rsp), %rsi
  41664f:	48 8b bc 24 88 00 00 00 	movq	136(%rsp), %rdi
  416657:	4c 8b 44 24 48 	movq	72(%rsp), %r8
  41665c:	4c 8b 4c 24 78 	movq	120(%rsp), %r9
  416661:	e9 4f ff ff ff 	jmp	-177 <runtime.scanblock+0x75>
  416666:	48 89 04 24 	movq	%rax, (%rsp)
  41666a:	48 8b 44 24 78 	movq	120(%rsp), %rax
  41666f:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  416674:	48 8b 7c 24 50 	movq	80(%rsp), %rdi
  416679:	48 89 7c 24 10 	movq	%rdi, 16(%rsp)
  41667e:	48 89 74 24 18 	movq	%rsi, 24(%rsp)
  416683:	89 5c 24 20 	movl	%ebx, 32(%rsp)
  416687:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  41668c:	48 8b 8c 24 90 00 00 00 	movq	144(%rsp), %rcx
  416694:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  416699:	48 89 54 24 38 	movq	%rdx, 56(%rsp)
  41669e:	e8 9d 04 00 00 	callq	1181 <runtime.greyobject>
  4166a3:	eb 8f 	jmp	-113 <runtime.scanblock+0xf4>
  4166a5:	4c 8b 4c 24 78 	movq	120(%rsp), %r9
  4166aa:	e9 06 ff ff ff 	jmp	-250 <runtime.scanblock+0x75>
  4166af:	48 89 f2 	movq	%rsi, %rdx
  4166b2:	e9 c4 fe ff ff 	jmp	-316 <runtime.scanblock+0x3b>
  4166b7:	48 8b 6c 24 68 	movq	104(%rsp), %rbp
  4166bc:	48 83 c4 70 	addq	$112, %rsp
  4166c0:	c3 	retq
  4166c1:	e8 aa de 02 00 	callq	188074 <runtime.morestack_noctxt>
  4166c6:	e9 75 fe ff ff 	jmp	-395 <runtime.scanblock>
  4166cb:	cc 	int3
  4166cc:	cc 	int3
  4166cd:	cc 	int3
  4166ce:	cc 	int3
  4166cf:	cc 	int3

runtime.scanobject:
  4166d0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4166d9:	48 8d 44 24 e0 	leaq	-32(%rsp), %rax
  4166de:	48 3b 41 10 	cmpq	16(%rcx), %rax
  4166e2:	0f 86 6a 03 00 00 	jbe	874 <runtime.scanobject+0x382>
  4166e8:	48 81 ec a0 00 00 00 	subq	$160, %rsp
  4166ef:	48 89 ac 24 98 00 00 00 	movq	%rbp, 152(%rsp)
  4166f7:	48 8d ac 24 98 00 00 00 	leaq	152(%rsp), %rbp
  4166ff:	48 8b 05 c2 6e 09 00 	movq	618178(%rip), %rax
  416706:	48 8b 15 c3 6e 09 00 	movq	618179(%rip), %rdx
  41670d:	48 8b 9c 24 a8 00 00 00 	movq	168(%rsp), %rbx
  416715:	48 89 de 	movq	%rbx, %rsi
  416718:	48 29 c3 	subq	%rax, %rbx
  41671b:	48 8b 3d 96 6e 09 00 	movq	618134(%rip), %rdi
  416722:	49 89 d8 	movq	%rbx, %r8
  416725:	48 c1 eb 05 	shrq	$5, %rbx
  416729:	48 29 df 	subq	%rbx, %rdi
  41672c:	48 8d 5f ff 	leaq	-1(%rdi), %rbx
  416730:	48 8b 3d b9 6b 09 00 	movq	617401(%rip), %rdi
  416737:	4c 8b 0d aa 6b 09 00 	movq	617386(%rip), %r9
  41673e:	4d 89 c2 	movq	%r8, %r10
  416741:	49 c1 e8 0d 	shrq	$13, %r8
  416745:	49 39 f8 	cmpq	%rdi, %r8
  416748:	0f 83 fd 02 00 00 	jae	765 <runtime.scanobject+0x37b>
  41674e:	4b 8b 3c c1 	movq	(%r9,%r8,8), %rdi
  416752:	4c 8b 47 68 	movq	104(%rdi), %r8
  416756:	4d 85 c0 	testq	%r8, %r8
  416759:	0f 84 d1 02 00 00 	je	721 <runtime.scanobject+0x360>
  41675f:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  416764:	48 89 54 24 60 	movq	%rdx, 96(%rsp)
  416769:	49 81 f8 00 00 02 00 	cmpq	$131072, %r8
  416770:	0f 86 ab 02 00 00 	jbe	683 <runtime.scanobject+0x351>
  416776:	4c 8b 4f 18 	movq	24(%rdi), %r9
  41677a:	4c 8d 5f 18 	leaq	24(%rdi), %r11
  41677e:	4c 39 ce 	cmpq	%r9, %rsi
  416781:	0f 85 d9 00 00 00 	jne	217 <runtime.scanobject+0x190>
  416787:	44 0f b6 4f 62 	movzbl	98(%rdi), %r9d
  41678c:	41 f6 c1 01 	testb	$1, %r9b
  416790:	0f 85 68 02 00 00 	jne	616 <runtime.scanobject+0x32e>
  416796:	4c 89 54 24 70 	movq	%r10, 112(%rsp)
  41679b:	48 89 9c 24 90 00 00 00 	movq	%rbx, 144(%rsp)
  4167a3:	48 89 7c 24 78 	movq	%rdi, 120(%rsp)
  4167a8:	4c 89 9c 24 88 00 00 00 	movq	%r11, 136(%rsp)
  4167b0:	4c 8d 86 00 00 02 00 	leaq	131072(%rsi), %r8
  4167b7:	eb 07 	jmp	7 <runtime.scanobject+0xf0>
  4167b9:	49 81 c0 00 00 02 00 	addq	$131072, %r8
  4167c0:	4c 8b 4f 68 	movq	104(%rdi), %r9
  4167c4:	4d 03 0b 	addq	(%r11), %r9
  4167c7:	4d 39 c8 	cmpq	%r9, %r8
  4167ca:	0f 83 90 00 00 00 	jae	144 <runtime.scanobject+0x190>
  4167d0:	4c 8b 8c 24 b0 00 00 00 	movq	176(%rsp), %r9
  4167d8:	4d 8b 21 	movq	(%r9), %r12
  4167db:	4d 85 e4 	testq	%r12, %r12
  4167de:	74 7c 	je	124 <runtime.scanobject+0x18c>
  4167e0:	4d 8b 6c 24 10 	movq	16(%r12), %r13
  4167e5:	49 81 fd fd 00 00 00 	cmpq	$253, %r13
  4167ec:	75 57 	jne	87 <runtime.scanobject+0x175>
  4167ee:	31 c9 	xorl	%ecx, %ecx
  4167f0:	84 c9 	testb	%cl, %cl
  4167f2:	75 c5 	jne	-59 <runtime.scanobject+0xe9>
  4167f4:	4c 89 44 24 48 	movq	%r8, 72(%rsp)
  4167f9:	4c 89 0c 24 	movq	%r9, (%rsp)
  4167fd:	4c 89 44 24 08 	movq	%r8, 8(%rsp)
  416802:	e8 a9 25 00 00 	callq	9641 <runtime.(*gcWork).put>
  416807:	48 8b 44 24 68 	movq	104(%rsp), %rax
  41680c:	48 8b 54 24 60 	movq	96(%rsp), %rdx
  416811:	48 8b 9c 24 90 00 00 00 	movq	144(%rsp), %rbx
  416819:	48 8b b4 24 a8 00 00 00 	movq	168(%rsp), %rsi
  416821:	48 8b 7c 24 78 	movq	120(%rsp), %rdi
  416826:	4c 8b 44 24 48 	movq	72(%rsp), %r8
  41682b:	4c 8b 8c 24 b0 00 00 00 	movq	176(%rsp), %r9
  416833:	4c 8b 54 24 70 	movq	112(%rsp), %r10
  416838:	4c 8b 9c 24 88 00 00 00 	movq	136(%rsp), %r11
  416840:	e9 74 ff ff ff 	jmp	-140 <runtime.scanobject+0xe9>
  416845:	0f 83 de 01 00 00 	jae	478 <runtime.scanobject+0x359>
  41684b:	4f 89 44 ec 18 	movq	%r8, 24(%r12,%r13,8)
  416850:	49 ff 44 24 10 	incq	16(%r12)
  416855:	b9 01 00 00 00 	movl	$1, %ecx
  41685a:	eb 94 	jmp	-108 <runtime.scanobject+0x120>
  41685c:	31 c9 	xorl	%ecx, %ecx
  41685e:	eb 90 	jmp	-112 <runtime.scanobject+0x120>
  416860:	48 8b 7f 68 	movq	104(%rdi), %rdi
  416864:	49 03 3b 	addq	(%r11), %rdi
  416867:	48 29 f7 	subq	%rsi, %rdi
  41686a:	48 81 ff 00 00 02 00 	cmpq	$131072, %rdi
  416871:	0f 86 7f 01 00 00 	jbe	383 <runtime.scanobject+0x326>
  416877:	b9 00 00 02 00 	movl	$131072, %ecx
  41687c:	48 89 4c 24 50 	movq	%rcx, 80(%rsp)
  416881:	49 c1 ea 03 	shrq	$3, %r10
  416885:	49 83 e2 03 	andq	$3, %r10
  416889:	31 ff 	xorl	%edi, %edi
  41688b:	eb 0a 	jmp	10 <runtime.scanobject+0x1c7>
  41688d:	48 83 c7 08 	addq	$8, %rdi
  416891:	4c 89 d1 	movq	%r10, %rcx
  416894:	45 89 c2 	movl	%r8d, %r10d
  416897:	48 39 cf 	cmpq	%rcx, %rdi
  41689a:	0f 83 51 01 00 00 	jae	337 <runtime.scanobject+0x321>
  4168a0:	48 85 ff 	testq	%rdi, %rdi
  4168a3:	0f 84 40 01 00 00 	je	320 <runtime.scanobject+0x319>
  4168a9:	41 83 fa 03 	cmpl	$3, %r10d
  4168ad:	0f 83 2b 01 00 00 	jae	299 <runtime.scanobject+0x30e>
  4168b3:	45 8d 42 01 	leal	1(%r10), %r8d
  4168b7:	44 0f b6 0b 	movzbl	(%rbx), %r9d
  4168bb:	49 89 ca 	movq	%rcx, %r10
  4168be:	44 89 c1 	movl	%r8d, %ecx
  4168c1:	41 d3 e9 	shrl	%cl, %r9d
  4168c4:	48 83 ff 08 	cmpq	$8, %rdi
  4168c8:	74 0b 	je	11 <runtime.scanobject+0x205>
  4168ca:	41 0f ba e1 04 	btl	$4, %r9d
  4168cf:	0f 83 db 00 00 00 	jae	219 <runtime.scanobject+0x2e0>
  4168d5:	41 0f ba e1 00 	btl	$0, %r9d
  4168da:	73 b1 	jae	-79 <runtime.scanobject+0x1bd>
  4168dc:	4c 8d 0c 37 	leaq	(%rdi,%rsi), %r9
  4168e0:	4d 8b 09 	movq	(%r9), %r9
  4168e3:	4d 85 c9 	testq	%r9, %r9
  4168e6:	74 a5 	je	-91 <runtime.scanobject+0x1bd>
  4168e8:	4c 39 c8 	cmpq	%r9, %rax
  4168eb:	77 a0 	ja	-96 <runtime.scanobject+0x1bd>
  4168ed:	49 39 d1 	cmpq	%rdx, %r9
  4168f0:	73 9b 	jae	-101 <runtime.scanobject+0x1bd>
  4168f2:	4d 89 cb 	movq	%r9, %r11
  4168f5:	49 29 f1 	subq	%rsi, %r9
  4168f8:	4d 39 d1 	cmpq	%r10, %r9
  4168fb:	72 90 	jb	-112 <runtime.scanobject+0x1bd>
  4168fd:	48 89 7c 24 58 	movq	%rdi, 88(%rsp)
  416902:	89 4c 24 44 	movl	%ecx, 68(%rsp)
  416906:	48 89 9c 24 80 00 00 00 	movq	%rbx, 128(%rsp)
  41690e:	4c 89 1c 24 	movq	%r11, (%rsp)
  416912:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  416917:	48 89 7c 24 10 	movq	%rdi, 16(%rsp)
  41691c:	e8 7f 59 ff ff 	callq	-42625 <runtime.heapBitsForObject>
  416921:	48 8b 44 24 18 	movq	24(%rsp), %rax
  416926:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  41692b:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  416930:	8b 5c 24 28 	movl	40(%rsp), %ebx
  416934:	48 8b 74 24 20 	movq	32(%rsp), %rsi
  416939:	48 85 c0 	testq	%rax, %rax
  41693c:	75 30 	jne	48 <runtime.scanobject+0x29e>
  41693e:	48 8b 44 24 68 	movq	104(%rsp), %rax
  416943:	8b 4c 24 44 	movl	68(%rsp), %ecx
  416947:	48 8b 54 24 60 	movq	96(%rsp), %rdx
  41694c:	48 8b 9c 24 80 00 00 00 	movq	128(%rsp), %rbx
  416954:	48 8b b4 24 a8 00 00 00 	movq	168(%rsp), %rsi
  41695c:	48 8b 7c 24 58 	movq	88(%rsp), %rdi
  416961:	41 89 c8 	movl	%ecx, %r8d
  416964:	4c 8b 54 24 50 	movq	80(%rsp), %r10
  416969:	e9 1f ff ff ff 	jmp	-225 <runtime.scanobject+0x1bd>
  41696e:	48 89 04 24 	movq	%rax, (%rsp)
  416972:	48 8b 84 24 a8 00 00 00 	movq	168(%rsp), %rax
  41697a:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41697f:	48 8b 7c 24 58 	movq	88(%rsp), %rdi
  416984:	48 89 7c 24 10 	movq	%rdi, 16(%rsp)
  416989:	48 89 74 24 18 	movq	%rsi, 24(%rsp)
  41698e:	89 5c 24 20 	movl	%ebx, 32(%rsp)
  416992:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  416997:	48 8b 8c 24 b0 00 00 00 	movq	176(%rsp), %rcx
  41699f:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  4169a4:	48 89 54 24 38 	movq	%rdx, 56(%rsp)
  4169a9:	e8 92 01 00 00 	callq	402 <runtime.greyobject>
  4169ae:	eb 8e 	jmp	-114 <runtime.scanobject+0x26e>
  4169b0:	48 8b 84 24 b0 00 00 00 	movq	176(%rsp), %rax
  4169b8:	48 8b 48 10 	movq	16(%rax), %rcx
  4169bc:	4c 01 d1 	addq	%r10, %rcx
  4169bf:	48 89 48 10 	movq	%rcx, 16(%rax)
  4169c3:	48 8b 48 18 	movq	24(%rax), %rcx
  4169c7:	48 01 f9 	addq	%rdi, %rcx
  4169ca:	48 89 48 18 	movq	%rcx, 24(%rax)
  4169ce:	48 8b ac 24 98 00 00 00 	movq	152(%rsp), %rbp
  4169d6:	48 81 c4 a0 00 00 00 	addq	$160, %rsp
  4169dd:	c3 	retq
  4169de:	48 ff cb 	decq	%rbx
  4169e1:	45 31 c0 	xorl	%r8d, %r8d
  4169e4:	e9 ce fe ff ff 	jmp	-306 <runtime.scanobject+0x1e7>
  4169e9:	45 89 d0 	movl	%r10d, %r8d
  4169ec:	e9 c6 fe ff ff 	jmp	-314 <runtime.scanobject+0x1e7>
  4169f1:	49 89 ca 	movq	%rcx, %r10
  4169f4:	eb ba 	jmp	-70 <runtime.scanobject+0x2e0>
  4169f6:	48 89 f9 	movq	%rdi, %rcx
  4169f9:	e9 7e fe ff ff 	jmp	-386 <runtime.scanobject+0x1ac>
  4169fe:	48 8b 84 24 b0 00 00 00 	movq	176(%rsp), %rax
  416a06:	48 8b 48 10 	movq	16(%rax), %rcx
  416a0a:	4c 01 c1 	addq	%r8, %rcx
  416a0d:	48 89 48 10 	movq	%rcx, 16(%rax)
  416a11:	48 8b ac 24 98 00 00 00 	movq	152(%rsp), %rbp
  416a19:	48 81 c4 a0 00 00 00 	addq	$160, %rsp
  416a20:	c3 	retq
  416a21:	4c 89 c1 	movq	%r8, %rcx
  416a24:	e9 53 fe ff ff 	jmp	-429 <runtime.scanobject+0x1ac>
  416a29:	e8 12 90 00 00 	callq	36882 <runtime.panicindex>
  416a2e:	0f 0b 	ud2
  416a30:	48 8d 05 bf 42 05 00 	leaq	344767(%rip), %rax
  416a37:	48 89 04 24 	movq	%rax, (%rsp)
  416a3b:	48 c7 44 24 08 11 00 00 00 	movq	$17, 8(%rsp)
  416a44:	e8 87 a7 00 00 	callq	42887 <runtime.throw>
  416a49:	0f 0b 	ud2
  416a4b:	e8 f0 8f 00 00 	callq	36848 <runtime.panicindex>
  416a50:	0f 0b 	ud2
  416a52:	e8 19 db 02 00 	callq	187161 <runtime.morestack_noctxt>
  416a57:	e9 74 fc ff ff 	jmp	-908 <runtime.scanobject>
  416a5c:	cc 	int3
  416a5d:	cc 	int3
  416a5e:	cc 	int3
  416a5f:	cc 	int3

runtime.shade:
  416a60:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  416a69:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  416a6d:	0f 86 c1 00 00 00 	jbe	193 <runtime.shade+0xd4>
  416a73:	48 83 ec 50 	subq	$80, %rsp
  416a77:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  416a7c:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  416a81:	48 8b 44 24 58 	movq	88(%rsp), %rax
  416a86:	48 89 04 24 	movq	%rax, (%rsp)
  416a8a:	0f 57 c0 	xorps	%xmm0, %xmm0
  416a8d:	0f 11 44 24 08 	movups	%xmm0, 8(%rsp)
  416a92:	e8 09 58 ff ff 	callq	-42999 <runtime.heapBitsForObject>
  416a97:	48 8b 44 24 18 	movq	24(%rsp), %rax
  416a9c:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  416aa1:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  416aa6:	48 8b 5c 24 20 	movq	32(%rsp), %rbx
  416aab:	8b 74 24 28 	movl	40(%rsp), %esi
  416aaf:	48 85 c0 	testq	%rax, %rax
  416ab2:	75 0a 	jne	10 <runtime.shade+0x5e>
  416ab4:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  416ab9:	48 83 c4 50 	addq	$80, %rsp
  416abd:	c3 	retq
  416abe:	64 48 8b 3c 25 f8 ff ff ff 	movq	%fs:-8, %rdi
  416ac7:	48 8b 7f 30 	movq	48(%rdi), %rdi
  416acb:	4c 8b 87 d0 00 00 00 	movq	208(%rdi), %r8
  416ad2:	41 84 00 	testb	%al, (%r8)
  416ad5:	84 07 	testb	%al, (%rdi)
  416ad7:	48 89 04 24 	movq	%rax, (%rsp)
  416adb:	0f 57 c0 	xorps	%xmm0, %xmm0
  416ade:	0f 11 44 24 08 	movups	%xmm0, 8(%rsp)
  416ae3:	48 89 5c 24 18 	movq	%rbx, 24(%rsp)
  416ae8:	89 74 24 20 	movl	%esi, 32(%rsp)
  416aec:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  416af1:	49 8d 80 70 12 00 00 	leaq	4720(%r8), %rax
  416af8:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  416afd:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  416b02:	48 89 54 24 38 	movq	%rdx, 56(%rsp)
  416b07:	e8 34 00 00 00 	callq	52 <runtime.greyobject>
  416b0c:	8b 05 ca cd 0a 00 	movl	708042(%rip), %eax
  416b12:	83 f8 02 	cmpl	$2, %eax
  416b15:	75 10 	jne	16 <runtime.shade+0xc7>
  416b17:	48 8b 44 24 40 	movq	64(%rsp), %rax
  416b1c:	48 89 04 24 	movq	%rax, (%rsp)
  416b20:	e8 5b 27 00 00 	callq	10075 <runtime.(*gcWork).dispose>
  416b25:	eb 8d 	jmp	-115 <runtime.shade+0x54>
  416b27:	0f b6 05 79 cd 0a 00 	movzbl	707961(%rip), %eax
  416b2e:	84 c0 	testb	%al, %al
  416b30:	75 e5 	jne	-27 <runtime.shade+0xb7>
  416b32:	eb 80 	jmp	-128 <runtime.shade+0x54>
  416b34:	e8 37 da 02 00 	callq	186935 <runtime.morestack_noctxt>
  416b39:	e9 22 ff ff ff 	jmp	-222 <runtime.shade>
  416b3e:	cc 	int3
  416b3f:	cc 	int3

runtime.greyobject:
  416b40:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  416b49:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  416b4d:	0f 86 a4 04 00 00 	jbe	1188 <runtime.greyobject+0x4b7>
  416b53:	48 83 ec 28 	subq	$40, %rsp
  416b57:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  416b5c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  416b61:	48 8b 44 24 30 	movq	48(%rsp), %rax
  416b66:	48 a9 07 00 00 00 	testq	$7, %rax
  416b6c:	0f 85 6a 04 00 00 	jne	1130 <runtime.greyobject+0x49c>
  416b72:	0f b6 15 46 cd 0a 00 	movzbl	707910(%rip), %edx
  416b79:	48 8b 5c 24 58 	movq	88(%rsp), %rbx
  416b7e:	48 8b 73 50 	movq	80(%rbx), %rsi
  416b82:	48 8b 4c 24 68 	movq	104(%rsp), %rcx
  416b87:	48 89 cf 	movq	%rcx, %rdi
  416b8a:	48 c1 e9 03 	shrq	$3, %rcx
  416b8e:	49 89 f8 	movq	%rdi, %r8
  416b91:	48 83 e7 07 	andq	$7, %rdi
  416b95:	49 89 c9 	movq	%rcx, %r9
  416b98:	48 89 f9 	movq	%rdi, %rcx
  416b9b:	41 ba 01 00 00 00 	movl	$1, %r10d
  416ba1:	41 d3 e2 	shll	%cl, %r10d
  416ba4:	49 8d 3c 31 	leaq	(%r9,%rsi), %rdi
  416ba8:	84 d2 	testb	%dl, %dl
  416baa:	0f 84 4b 01 00 00 	je	331 <runtime.greyobject+0x1bb>
  416bb0:	84 07 	testb	%al, (%rdi)
  416bb2:	41 0f b6 14 31 	movzbl	(%r9,%rsi), %edx
  416bb7:	44 84 d2 	testb	%r10b, %dl
  416bba:	0f 84 e8 02 00 00 	je	744 <runtime.greyobject+0x368>
  416bc0:	48 8b 53 68 	movq	104(%rbx), %rdx
  416bc4:	48 83 fa 08 	cmpq	$8, %rdx
  416bc8:	0f 85 ff 00 00 00 	jne	255 <runtime.greyobject+0x18d>
  416bce:	48 8b 74 24 48 	movq	72(%rsp), %rsi
  416bd3:	0f b6 3e 	movzbl	(%rsi), %edi
  416bd6:	8b 4c 24 50 	movl	80(%rsp), %ecx
  416bda:	40 d2 ef 	shrb	%cl, %dil
  416bdd:	83 f9 08 	cmpl	$8, %ecx
  416be0:	45 19 c0 	sbbl	%r8d, %r8d
  416be3:	44 21 c7 	andl	%r8d, %edi
  416be6:	40 f6 c7 01 	testb	$1, %dil
  416bea:	40 0f 95 c7 	setne	%dil
  416bee:	40 84 ff 	testb	%dil, %dil
  416bf1:	0f 85 cc 00 00 00 	jne	204 <runtime.greyobject+0x183>
  416bf7:	48 83 fa 08 	cmpq	$8, %rdx
  416bfb:	0f 85 9f 00 00 00 	jne	159 <runtime.greyobject+0x160>
  416c01:	ba 01 00 00 00 	movl	$1, %edx
  416c06:	d3 e2 	shll	%cl, %edx
  416c08:	83 f9 20 	cmpl	$32, %ecx
  416c0b:	19 ff 	sbbl	%edi, %edi
  416c0d:	21 fa 	andl	%edi, %edx
  416c0f:	f0 	lock
  416c10:	08 16 	orb	%dl, (%rsi)
  416c12:	48 8b 53 68 	movq	104(%rbx), %rdx
  416c16:	48 83 fa 08 	cmpq	$8, %rdx
  416c1a:	75 6e 	jne	110 <runtime.greyobject+0x14a>
  416c1c:	0f b6 16 	movzbl	(%rsi), %edx
  416c1f:	d2 ea 	shrb	%cl, %dl
  416c21:	83 f9 08 	cmpl	$8, %ecx
  416c24:	19 db 	sbbl	%ebx, %ebx
  416c26:	21 da 	andl	%ebx, %edx
  416c28:	f6 c2 01 	testb	$1, %dl
  416c2b:	0f 95 c2 	setne	%dl
  416c2e:	84 d2 	testb	%dl, %dl
  416c30:	0f 84 57 02 00 00 	je	599 <runtime.greyobject+0x34d>
  416c36:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  416c3b:	48 8b 11 	movq	(%rcx), %rdx
  416c3e:	48 85 d2 	testq	%rdx, %rdx
  416c41:	74 43 	je	67 <runtime.greyobject+0x146>
  416c43:	48 8b 5a 10 	movq	16(%rdx), %rbx
  416c47:	48 81 fb fd 00 00 00 	cmpq	$253, %rbx
  416c4e:	75 20 	jne	32 <runtime.greyobject+0x130>
  416c50:	31 d2 	xorl	%edx, %edx
  416c52:	84 d2 	testb	%dl, %dl
  416c54:	74 0a 	je	10 <runtime.greyobject+0x120>
  416c56:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  416c5b:	48 83 c4 28 	addq	$40, %rsp
  416c5f:	c3 	retq
  416c60:	48 89 0c 24 	movq	%rcx, (%rsp)
  416c64:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  416c69:	e8 42 21 00 00 	callq	8514 <runtime.(*gcWork).put>
  416c6e:	eb e6 	jmp	-26 <runtime.greyobject+0x116>
  416c70:	0f 83 f0 00 00 00 	jae	240 <runtime.greyobject+0x226>
  416c76:	48 89 44 da 18 	movq	%rax, 24(%rdx,%rbx,8)
  416c7b:	48 ff 42 10 	incq	16(%rdx)
  416c7f:	ba 01 00 00 00 	movl	$1, %edx
  416c84:	eb cc 	jmp	-52 <runtime.greyobject+0x112>
  416c86:	31 d2 	xorl	%edx, %edx
  416c88:	eb c8 	jmp	-56 <runtime.greyobject+0x112>
  416c8a:	0f b6 1e 	movzbl	(%rsi), %ebx
  416c8d:	ff c1 	incl	%ecx
  416c8f:	d2 eb 	shrb	%cl, %bl
  416c91:	83 f9 08 	cmpl	$8, %ecx
  416c94:	19 f6 	sbbl	%esi, %esi
  416c96:	21 f3 	andl	%esi, %ebx
  416c98:	f6 c3 10 	testb	$16, %bl
  416c9b:	0f 95 c2 	setne	%dl
  416c9e:	eb 8e 	jmp	-114 <runtime.greyobject+0xee>
  416ca0:	8d 51 01 	leal	1(%rcx), %edx
  416ca3:	89 cf 	movl	%ecx, %edi
  416ca5:	89 d1 	movl	%edx, %ecx
  416ca7:	41 b8 10 00 00 00 	movl	$16, %r8d
  416cad:	41 d3 e0 	shll	%cl, %r8d
  416cb0:	83 f9 20 	cmpl	$32, %ecx
  416cb3:	19 d2 	sbbl	%edx, %edx
  416cb5:	41 21 d0 	andl	%edx, %r8d
  416cb8:	f0 	lock
  416cb9:	44 08 06 	orb	%r8b, (%rsi)
  416cbc:	89 f9 	movl	%edi, %ecx
  416cbe:	e9 4f ff ff ff 	jmp	-177 <runtime.greyobject+0xd2>
  416cc3:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  416cc8:	48 83 c4 28 	addq	$40, %rsp
  416ccc:	c3 	retq
  416ccd:	48 8b 74 24 48 	movq	72(%rsp), %rsi
  416cd2:	44 0f b6 06 	movzbl	(%rsi), %r8d
  416cd6:	44 8b 4c 24 50 	movl	80(%rsp), %r9d
  416cdb:	41 8d 49 01 	leal	1(%r9), %ecx
  416cdf:	41 d2 e8 	shrb	%cl, %r8b
  416ce2:	83 f9 08 	cmpl	$8, %ecx
  416ce5:	45 19 d2 	sbbl	%r10d, %r10d
  416ce8:	45 21 d0 	andl	%r10d, %r8d
  416ceb:	41 f6 c0 10 	testb	$16, %r8b
  416cef:	40 0f 95 c7 	setne	%dil
  416cf3:	44 89 c9 	movl	%r9d, %ecx
  416cf6:	e9 f3 fe ff ff 	jmp	-269 <runtime.greyobject+0xae>
  416cfb:	8b 0d cb cd 0a 00 	movl	708043(%rip), %ecx
  416d01:	85 c9 	testl	%ecx, %ecx
  416d03:	7e 09 	jle	9 <runtime.greyobject+0x1ce>
  416d05:	48 8b 4b 30 	movq	48(%rbx), %rcx
  416d09:	49 39 c8 	cmpq	%rcx, %r8
  416d0c:	73 42 	jae	66 <runtime.greyobject+0x210>
  416d0e:	84 07 	testb	%al, (%rdi)
  416d10:	41 0f b6 0c 31 	movzbl	(%r9,%rsi), %ecx
  416d15:	44 84 d1 	testb	%r10b, %cl
  416d18:	75 2c 	jne	44 <runtime.greyobject+0x206>
  416d1a:	f0 	lock
  416d1b:	44 08 17 	orb	%r10b, (%rdi)
  416d1e:	0f b6 4b 62 	movzbl	98(%rbx), %ecx
  416d22:	f6 c1 01 	testb	$1, %cl
  416d25:	0f 84 0b ff ff ff 	je	-245 <runtime.greyobject+0xf6>
  416d2b:	48 8b 44 24 60 	movq	96(%rsp), %rax
  416d30:	48 8b 48 10 	movq	16(%rax), %rcx
  416d34:	48 03 4b 68 	addq	104(%rbx), %rcx
  416d38:	48 89 48 10 	movq	%rcx, 16(%rax)
  416d3c:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  416d41:	48 83 c4 28 	addq	$40, %rsp
  416d45:	c3 	retq
  416d46:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  416d4b:	48 83 c4 28 	addq	$40, %rsp
  416d4f:	c3 	retq
  416d50:	48 8b 4b 48 	movq	72(%rbx), %rcx
  416d54:	49 8d 14 09 	leaq	(%r9,%rcx), %rdx
  416d58:	84 02 	testb	%al, (%rdx)
  416d5a:	41 0f b6 0c 09 	movzbl	(%r9,%rcx), %ecx
  416d5f:	44 84 d1 	testb	%r10b, %cl
  416d62:	74 09 	je	9 <runtime.greyobject+0x22d>
  416d64:	eb a8 	jmp	-88 <runtime.greyobject+0x1ce>
  416d66:	e8 d5 8c 00 00 	callq	36053 <runtime.panicindex>
  416d6b:	0f 0b 	ud2
  416d6d:	e8 8e ad 00 00 	callq	44430 <runtime.printlock>
  416d72:	48 8d 05 58 55 05 00 	leaq	349528(%rip), %rax
  416d79:	48 89 04 24 	movq	%rax, (%rsp)
  416d7d:	48 c7 44 24 08 1d 00 00 00 	movq	$29, 8(%rsp)
  416d86:	e8 b5 b6 00 00 	callq	46773 <runtime.printstring>
  416d8b:	48 8b 44 24 30 	movq	48(%rsp), %rax
  416d90:	48 89 04 24 	movq	%rax, (%rsp)
  416d94:	e8 57 b5 00 00 	callq	46423 <runtime.printhex>
  416d99:	48 8d 05 5a 37 05 00 	leaq	341850(%rip), %rax
  416da0:	48 89 04 24 	movq	%rax, (%rsp)
  416da4:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  416dad:	e8 8e b6 00 00 	callq	46734 <runtime.printstring>
  416db2:	48 8b 44 24 38 	movq	56(%rsp), %rax
  416db7:	48 89 04 24 	movq	%rax, (%rsp)
  416dbb:	e8 30 b5 00 00 	callq	46384 <runtime.printhex>
  416dc0:	48 8d 05 8c 2e 05 00 	leaq	339596(%rip), %rax
  416dc7:	48 89 04 24 	movq	%rax, (%rsp)
  416dcb:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  416dd4:	e8 67 b6 00 00 	callq	46695 <runtime.printstring>
  416dd9:	48 8b 44 24 40 	movq	64(%rsp), %rax
  416dde:	48 89 04 24 	movq	%rax, (%rsp)
  416de2:	e8 09 b5 00 00 	callq	46345 <runtime.printhex>
  416de7:	48 8d 05 7c 2e 05 00 	leaq	339580(%rip), %rax
  416dee:	48 89 04 24 	movq	%rax, (%rsp)
  416df2:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  416dfb:	e8 40 b6 00 00 	callq	46656 <runtime.printstring>
  416e00:	e8 7b ad 00 00 	callq	44411 <runtime.printunlock>
  416e05:	48 8d 05 f6 2e 05 00 	leaq	339702(%rip), %rax
  416e0c:	48 89 04 24 	movq	%rax, (%rsp)
  416e10:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  416e19:	48 8b 44 24 38 	movq	56(%rsp), %rax
  416e1e:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  416e23:	48 8b 44 24 40 	movq	64(%rsp), %rax
  416e28:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  416e2d:	e8 de 01 00 00 	callq	478 <runtime.gcDumpObject>
  416e32:	48 8d 05 7b 2e 05 00 	leaq	339579(%rip), %rax
  416e39:	48 89 04 24 	movq	%rax, (%rsp)
  416e3d:	48 c7 44 24 08 03 00 00 00 	movq	$3, 8(%rsp)
  416e46:	48 8b 44 24 30 	movq	48(%rsp), %rax
  416e4b:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  416e50:	48 c7 44 24 18 ff ff ff ff 	movq	$-1, 24(%rsp)
  416e59:	e8 b2 01 00 00 	callq	434 <runtime.gcDumpObject>
  416e5e:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  416e67:	48 8b 40 30 	movq	48(%rax), %rax
  416e6b:	c6 80 29 01 00 00 02 	movb	$2, 297(%rax)
  416e72:	48 8d 05 33 40 05 00 	leaq	344115(%rip), %rax
  416e79:	48 89 04 24 	movq	%rax, (%rsp)
  416e7d:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  416e86:	e8 45 a3 00 00 	callq	41797 <runtime.throw>
  416e8b:	0f 0b 	ud2
  416e8d:	48 8d 05 67 65 05 00 	leaq	353639(%rip), %rax
  416e94:	48 89 04 24 	movq	%rax, (%rsp)
  416e98:	48 c7 44 24 08 29 00 00 00 	movq	$41, 8(%rsp)
  416ea1:	e8 2a a3 00 00 	callq	41770 <runtime.throw>
  416ea6:	0f 0b 	ud2
  416ea8:	e8 53 ac 00 00 	callq	44115 <runtime.printlock>
  416ead:	e8 4e ac 00 00 	callq	44110 <runtime.printlock>
  416eb2:	48 8d 05 bd 6f 05 00 	leaq	356285(%rip), %rax
  416eb9:	48 89 04 24 	movq	%rax, (%rsp)
  416ebd:	48 c7 44 24 08 44 00 00 00 	movq	$68, 8(%rsp)
  416ec6:	e8 75 b5 00 00 	callq	46453 <runtime.printstring>
  416ecb:	48 8b 44 24 30 	movq	48(%rsp), %rax
  416ed0:	48 89 04 24 	movq	%rax, (%rsp)
  416ed4:	e8 17 b4 00 00 	callq	46103 <runtime.printhex>
  416ed9:	e8 b2 ae 00 00 	callq	44722 <runtime.printnl>
  416ede:	e8 9d ac 00 00 	callq	44189 <runtime.printunlock>
  416ee3:	e8 18 ac 00 00 	callq	44056 <runtime.printlock>
  416ee8:	48 8d 05 2f 4a 05 00 	leaq	346671(%rip), %rax
  416eef:	48 89 04 24 	movq	%rax, (%rsp)
  416ef3:	48 c7 44 24 08 18 00 00 00 	movq	$24, 8(%rsp)
  416efc:	e8 3f b5 00 00 	callq	46399 <runtime.printstring>
  416f01:	48 8b 44 24 38 	movq	56(%rsp), %rax
  416f06:	48 89 04 24 	movq	%rax, (%rsp)
  416f0a:	e8 e1 b3 00 00 	callq	46049 <runtime.printhex>
  416f0f:	48 8d 05 3d 2d 05 00 	leaq	339261(%rip), %rax
  416f16:	48 89 04 24 	movq	%rax, (%rsp)
  416f1a:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  416f23:	e8 18 b5 00 00 	callq	46360 <runtime.printstring>
  416f28:	48 8b 44 24 40 	movq	64(%rsp), %rax
  416f2d:	48 89 04 24 	movq	%rax, (%rsp)
  416f31:	e8 ba b3 00 00 	callq	46010 <runtime.printhex>
  416f36:	48 8d 05 2d 2d 05 00 	leaq	339245(%rip), %rax
  416f3d:	48 89 04 24 	movq	%rax, (%rsp)
  416f41:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  416f4a:	e8 f1 b4 00 00 	callq	46321 <runtime.printstring>
  416f4f:	e8 2c ac 00 00 	callq	44076 <runtime.printunlock>
  416f54:	48 8d 05 a7 2d 05 00 	leaq	339367(%rip), %rax
  416f5b:	48 89 04 24 	movq	%rax, (%rsp)
  416f5f:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  416f68:	48 8b 44 24 38 	movq	56(%rsp), %rax
  416f6d:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  416f72:	48 8b 44 24 40 	movq	64(%rsp), %rax
  416f77:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  416f7c:	e8 8f 00 00 00 	callq	143 <runtime.gcDumpObject>
  416f81:	48 8d 05 2c 2d 05 00 	leaq	339244(%rip), %rax
  416f88:	48 89 04 24 	movq	%rax, (%rsp)
  416f8c:	48 c7 44 24 08 03 00 00 00 	movq	$3, 8(%rsp)
  416f95:	48 8b 44 24 30 	movq	48(%rsp), %rax
  416f9a:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  416f9f:	48 c7 44 24 18 ff ff ff ff 	movq	$-1, 24(%rsp)
  416fa8:	e8 63 00 00 00 	callq	99 <runtime.gcDumpObject>
  416fad:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  416fb6:	48 8b 40 30 	movq	48(%rax), %rax
  416fba:	c6 80 29 01 00 00 02 	movb	$2, 297(%rax)
  416fc1:	48 8d 05 a5 56 05 00 	leaq	349861(%rip), %rax
  416fc8:	48 89 04 24 	movq	%rax, (%rsp)
  416fcc:	48 c7 44 24 08 1f 00 00 00 	movq	$31, 8(%rsp)
  416fd5:	e8 f6 a1 00 00 	callq	41462 <runtime.throw>
  416fda:	0f 0b 	ud2
  416fdc:	48 8d 05 4c 5d 05 00 	leaq	351564(%rip), %rax
  416fe3:	48 89 04 24 	movq	%rax, (%rsp)
  416fe7:	48 c7 44 24 08 23 00 00 00 	movq	$35, 8(%rsp)
  416ff0:	e8 db a1 00 00 	callq	41435 <runtime.throw>
  416ff5:	0f 0b 	ud2
  416ff7:	e8 74 d5 02 00 	callq	185716 <runtime.morestack_noctxt>
  416ffc:	e9 3f fb ff ff 	jmp	-1217 <runtime.greyobject>
  417001:	cc 	int3
  417002:	cc 	int3
  417003:	cc 	int3
  417004:	cc 	int3
  417005:	cc 	int3
  417006:	cc 	int3
  417007:	cc 	int3
  417008:	cc 	int3
  417009:	cc 	int3
  41700a:	cc 	int3
  41700b:	cc 	int3
  41700c:	cc 	int3
  41700d:	cc 	int3
  41700e:	cc 	int3
  41700f:	cc 	int3

runtime.gcDumpObject:
  417010:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  417019:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41701d:	0f 86 0b 05 00 00 	jbe	1291 <runtime.gcDumpObject+0x51e>
  417023:	48 83 ec 68 	subq	$104, %rsp
  417027:	48 89 6c 24 60 	movq	%rbp, 96(%rsp)
  41702c:	48 8d 6c 24 60 	leaq	96(%rsp), %rbp
  417031:	48 8b 05 90 65 09 00 	movq	615824(%rip), %rax
  417038:	48 8b 8c 24 80 00 00 00 	movq	128(%rsp), %rcx
  417040:	48 39 c1 	cmpq	%rax, %rcx
  417043:	0f 82 6f 04 00 00 	jb	1135 <runtime.gcDumpObject+0x4a8>
  417049:	48 8b 15 80 65 09 00 	movq	615808(%rip), %rdx
  417050:	48 39 d1 	cmpq	%rdx, %rcx
  417053:	0f 83 5f 04 00 00 	jae	1119 <runtime.gcDumpObject+0x4a8>
  417059:	48 c1 e9 0d 	shrq	$13, %rcx
  41705d:	48 c1 e8 0d 	shrq	$13, %rax
  417061:	48 89 cb 	movq	%rcx, %rbx
  417064:	48 29 c1 	subq	%rax, %rcx
  417067:	48 8b 05 82 62 09 00 	movq	615042(%rip), %rax
  41706e:	48 8b 35 73 62 09 00 	movq	615027(%rip), %rsi
  417075:	48 39 c1 	cmpq	%rax, %rcx
  417078:	0f 83 a9 04 00 00 	jae	1193 <runtime.gcDumpObject+0x517>
  41707e:	48 89 5c 24 48 	movq	%rbx, 72(%rsp)
  417083:	48 8b 04 ce 	movq	(%rsi,%rcx,8), %rax
  417087:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  41708c:	e8 6f aa 00 00 	callq	43631 <runtime.printlock>
  417091:	48 8b 44 24 70 	movq	112(%rsp), %rax
  417096:	48 89 04 24 	movq	%rax, (%rsp)
  41709a:	48 8b 4c 24 78 	movq	120(%rsp), %rcx
  41709f:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4170a4:	e8 97 b3 00 00 	callq	45975 <runtime.printstring>
  4170a9:	48 8d 05 aa 2b 05 00 	leaq	338858(%rip), %rax
  4170b0:	48 89 04 24 	movq	%rax, (%rsp)
  4170b4:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  4170bd:	e8 7e b3 00 00 	callq	45950 <runtime.printstring>
  4170c2:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  4170ca:	48 89 04 24 	movq	%rax, (%rsp)
  4170ce:	e8 1d b2 00 00 	callq	45597 <runtime.printhex>
  4170d3:	48 8d 05 b9 2b 05 00 	leaq	338873(%rip), %rax
  4170da:	48 89 04 24 	movq	%rax, (%rsp)
  4170de:	48 c7 44 24 08 03 00 00 00 	movq	$3, 8(%rsp)
  4170e7:	e8 54 b3 00 00 	callq	45908 <runtime.printstring>
  4170ec:	48 8b 44 24 48 	movq	72(%rsp), %rax
  4170f1:	48 89 04 24 	movq	%rax, (%rsp)
  4170f5:	e8 f6 b1 00 00 	callq	45558 <runtime.printhex>
  4170fa:	e8 81 aa 00 00 	callq	43649 <runtime.printunlock>
  4170ff:	48 8b 44 24 50 	movq	80(%rsp), %rax
  417104:	48 85 c0 	testq	%rax, %rax
  417107:	0f 84 7e 03 00 00 	je	894 <runtime.gcDumpObject+0x47b>
  41710d:	0f b6 48 62 	movzbl	98(%rax), %ecx
  417111:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  417116:	48 8b 90 80 00 00 00 	movq	128(%rax), %rdx
  41711d:	48 89 54 24 48 	movq	%rdx, 72(%rsp)
  417122:	48 8b 58 68 	movq	104(%rax), %rbx
  417126:	48 89 5c 24 38 	movq	%rbx, 56(%rsp)
  41712b:	48 8b 70 18 	movq	24(%rax), %rsi
  41712f:	48 89 74 24 18 	movq	%rsi, 24(%rsp)
  417134:	e8 c7 a9 00 00 	callq	43463 <runtime.printlock>
  417139:	48 8d 05 7c 31 05 00 	leaq	340348(%rip), %rax
  417140:	48 89 04 24 	movq	%rax, (%rsp)
  417144:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  41714d:	e8 ee b2 00 00 	callq	45806 <runtime.printstring>
  417152:	48 8b 44 24 18 	movq	24(%rsp), %rax
  417157:	48 89 04 24 	movq	%rax, (%rsp)
  41715b:	e8 90 b1 00 00 	callq	45456 <runtime.printhex>
  417160:	48 8d 05 32 2f 05 00 	leaq	339762(%rip), %rax
  417167:	48 89 04 24 	movq	%rax, (%rsp)
  41716b:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  417174:	e8 c7 b2 00 00 	callq	45767 <runtime.printstring>
  417179:	48 8b 44 24 48 	movq	72(%rsp), %rax
  41717e:	48 89 04 24 	movq	%rax, (%rsp)
  417182:	e8 69 b1 00 00 	callq	45417 <runtime.printhex>
  417187:	48 8d 05 24 35 05 00 	leaq	341284(%rip), %rax
  41718e:	48 89 04 24 	movq	%rax, (%rsp)
  417192:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  41719b:	e8 a0 b2 00 00 	callq	45728 <runtime.printstring>
  4171a0:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4171a5:	48 89 04 24 	movq	%rax, (%rsp)
  4171a9:	e8 c2 af 00 00 	callq	44994 <runtime.printuint>
  4171ae:	48 8d 05 8d 33 05 00 	leaq	340877(%rip), %rax
  4171b5:	48 89 04 24 	movq	%rax, (%rsp)
  4171b9:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  4171c2:	e8 79 b2 00 00 	callq	45689 <runtime.printstring>
  4171c7:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4171cc:	48 89 04 24 	movq	%rax, (%rsp)
  4171d0:	e8 9b af 00 00 	callq	44955 <runtime.printuint>
  4171d5:	48 8d 05 c6 2e 05 00 	leaq	339654(%rip), %rax
  4171dc:	48 89 04 24 	movq	%rax, (%rsp)
  4171e0:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  4171e9:	e8 52 b2 00 00 	callq	45650 <runtime.printstring>
  4171ee:	e8 8d a9 00 00 	callq	43405 <runtime.printunlock>
  4171f3:	48 8b 44 24 50 	movq	80(%rsp), %rax
  4171f8:	0f b6 48 64 	movzbl	100(%rax), %ecx
  4171fc:	88 4c 24 17 	movb	%cl, 23(%rsp)
  417200:	84 c9 	testb	%cl, %cl
  417202:	72 1a 	jb	26 <runtime.gcDumpObject+0x20e>
  417204:	0f b6 d1 	movzbl	%cl, %edx
  417207:	48 8b 1d 7a e9 08 00 	movq	584058(%rip), %rbx
  41720e:	48 8b 35 6b e9 08 00 	movq	584043(%rip), %rsi
  417215:	48 39 da 	cmpq	%rbx, %rdx
  417218:	0f 8c 2a 02 00 00 	jl	554 <runtime.gcDumpObject+0x438>
  41721e:	e8 dd a8 00 00 	callq	43229 <runtime.printlock>
  417223:	48 8d 05 0d 2e 05 00 	leaq	339469(%rip), %rax
  41722a:	48 89 04 24 	movq	%rax, (%rsp)
  41722e:	48 c7 44 24 08 08 00 00 00 	movq	$8, 8(%rsp)
  417237:	e8 04 b2 00 00 	callq	45572 <runtime.printstring>
  41723c:	0f b6 44 24 17 	movzbl	23(%rsp), %eax
  417241:	0f b6 c0 	movzbl	%al, %eax
  417244:	48 89 04 24 	movq	%rax, (%rsp)
  417248:	e8 23 af 00 00 	callq	44835 <runtime.printuint>
  41724d:	48 8d 05 16 2a 05 00 	leaq	338454(%rip), %rax
  417254:	48 89 04 24 	movq	%rax, (%rsp)
  417258:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  417261:	e8 da b1 00 00 	callq	45530 <runtime.printstring>
  417266:	e8 15 a9 00 00 	callq	43285 <runtime.printunlock>
  41726b:	48 8b 44 24 50 	movq	80(%rsp), %rax
  417270:	48 8b 48 68 	movq	104(%rax), %rcx
  417274:	0f b6 40 64 	movzbl	100(%rax), %eax
  417278:	3c 02 	cmpb	$2, %al
  41727a:	0f 85 bb 01 00 00 	jne	443 <runtime.gcDumpObject+0x42b>
  417280:	48 85 c9 	testq	%rcx, %rcx
  417283:	0f 85 b2 01 00 00 	jne	434 <runtime.gcDumpObject+0x42b>
  417289:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  417291:	48 8d 48 08 	leaq	8(%rax), %rcx
  417295:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  41729a:	31 d2 	xorl	%edx, %edx
  41729c:	31 db 	xorl	%ebx, %ebx
  41729e:	eb 04 	jmp	4 <runtime.gcDumpObject+0x294>
  4172a0:	48 83 c2 08 	addq	$8, %rdx
  4172a4:	48 39 ca 	cmpq	%rcx, %rdx
  4172a7:	0f 83 5b 01 00 00 	jae	347 <runtime.gcDumpObject+0x3f8>
  4172ad:	48 81 fa 00 04 00 00 	cmpq	$1024, %rdx
  4172b4:	72 1c 	jb	28 <runtime.gcDumpObject+0x2c2>
  4172b6:	48 8d 70 80 	leaq	-128(%rax), %rsi
  4172ba:	48 39 d6 	cmpq	%rdx, %rsi
  4172bd:	73 0c 	jae	12 <runtime.gcDumpObject+0x2bb>
  4172bf:	48 8d b0 80 00 00 00 	leaq	128(%rax), %rsi
  4172c6:	48 39 f2 	cmpq	%rsi, %rdx
  4172c9:	72 07 	jb	7 <runtime.gcDumpObject+0x2c2>
  4172cb:	bb 01 00 00 00 	movl	$1, %ebx
  4172d0:	eb ce 	jmp	-50 <runtime.gcDumpObject+0x290>
  4172d2:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  4172d7:	84 db 	testb	%bl, %bl
  4172d9:	0f 85 fc 00 00 00 	jne	252 <runtime.gcDumpObject+0x3cb>
  4172df:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  4172e7:	48 8d 0c 02 	leaq	(%rdx,%rax), %rcx
  4172eb:	48 8b 09 	movq	(%rcx), %rcx
  4172ee:	48 89 4c 24 48 	movq	%rcx, 72(%rsp)
  4172f3:	e8 08 a8 00 00 	callq	43016 <runtime.printlock>
  4172f8:	48 8d 05 88 29 05 00 	leaq	338312(%rip), %rax
  4172ff:	48 89 04 24 	movq	%rax, (%rsp)
  417303:	48 c7 44 24 08 03 00 00 00 	movq	$3, 8(%rsp)
  41730c:	e8 2f b1 00 00 	callq	45359 <runtime.printstring>
  417311:	48 8b 44 24 70 	movq	112(%rsp), %rax
  417316:	48 89 04 24 	movq	%rax, (%rsp)
  41731a:	48 8b 4c 24 78 	movq	120(%rsp), %rcx
  41731f:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  417324:	e8 17 b1 00 00 	callq	45335 <runtime.printstring>
  417329:	48 8d 05 23 29 05 00 	leaq	338211(%rip), %rax
  417330:	48 89 04 24 	movq	%rax, (%rsp)
  417334:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  41733d:	e8 fe b0 00 00 	callq	45310 <runtime.printstring>
  417342:	48 8b 44 24 28 	movq	40(%rsp), %rax
  417347:	48 89 04 24 	movq	%rax, (%rsp)
  41734b:	e8 20 ae 00 00 	callq	44576 <runtime.printuint>
  417350:	48 8d 05 87 29 05 00 	leaq	338311(%rip), %rax
  417357:	48 89 04 24 	movq	%rax, (%rsp)
  41735b:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  417364:	e8 d7 b0 00 00 	callq	45271 <runtime.printstring>
  417369:	48 8b 44 24 48 	movq	72(%rsp), %rax
  41736e:	48 89 04 24 	movq	%rax, (%rsp)
  417372:	e8 79 af 00 00 	callq	44921 <runtime.printhex>
  417377:	e8 04 a8 00 00 	callq	43012 <runtime.printunlock>
  41737c:	48 8b 44 24 28 	movq	40(%rsp), %rax
  417381:	48 8b 8c 24 88 00 00 00 	movq	136(%rsp), %rcx
  417389:	48 39 c8 	cmpq	%rcx, %rax
  41738c:	74 28 	je	40 <runtime.gcDumpObject+0x3a6>
  41738e:	e8 6d a7 00 00 	callq	42861 <runtime.printlock>
  417393:	e8 f8 a9 00 00 	callq	43512 <runtime.printnl>
  417398:	e8 e3 a7 00 00 	callq	42979 <runtime.printunlock>
  41739d:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  4173a5:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  4173aa:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  4173af:	31 db 	xorl	%ebx, %ebx
  4173b1:	e9 ea fe ff ff 	jmp	-278 <runtime.gcDumpObject+0x290>
  4173b6:	e8 45 a7 00 00 	callq	42821 <runtime.printlock>
  4173bb:	48 8d 05 f8 28 05 00 	leaq	338168(%rip), %rax
  4173c2:	48 89 04 24 	movq	%rax, (%rsp)
  4173c6:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  4173cf:	e8 6c b0 00 00 	callq	45164 <runtime.printstring>
  4173d4:	e8 a7 a7 00 00 	callq	42919 <runtime.printunlock>
  4173d9:	eb b3 	jmp	-77 <runtime.gcDumpObject+0x37e>
  4173db:	e8 20 a7 00 00 	callq	42784 <runtime.printlock>
  4173e0:	48 8d 05 4f 29 05 00 	leaq	338255(%rip), %rax
  4173e7:	48 89 04 24 	movq	%rax, (%rsp)
  4173eb:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  4173f4:	e8 47 b0 00 00 	callq	45127 <runtime.printstring>
  4173f9:	e8 82 a7 00 00 	callq	42882 <runtime.printunlock>
  4173fe:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  417403:	e9 d7 fe ff ff 	jmp	-297 <runtime.gcDumpObject+0x2cf>
  417408:	84 db 	testb	%bl, %bl
  41740a:	75 0a 	jne	10 <runtime.gcDumpObject+0x406>
  41740c:	48 8b 6c 24 60 	movq	96(%rsp), %rbp
  417411:	48 83 c4 68 	addq	$104, %rsp
  417415:	c3 	retq
  417416:	e8 e5 a6 00 00 	callq	42725 <runtime.printlock>
  41741b:	48 8d 05 14 29 05 00 	leaq	338196(%rip), %rax
  417422:	48 89 04 24 	movq	%rax, (%rsp)
  417426:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  41742f:	e8 0c b0 00 00 	callq	45068 <runtime.printstring>
  417434:	e8 47 a7 00 00 	callq	42823 <runtime.printunlock>
  417439:	eb d1 	jmp	-47 <runtime.gcDumpObject+0x3fc>
  41743b:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  417443:	e9 4d fe ff ff 	jmp	-435 <runtime.gcDumpObject+0x285>
  417448:	48 c1 e2 04 	shlq	$4, %rdx
  41744c:	48 8b 44 16 08 	movq	8(%rsi,%rdx), %rax
  417451:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  417456:	48 8b 0c 16 	movq	(%rsi,%rdx), %rcx
  41745a:	48 89 4c 24 58 	movq	%rcx, 88(%rsp)
  41745f:	e8 9c a6 00 00 	callq	42652 <runtime.printlock>
  417464:	48 8b 44 24 58 	movq	88(%rsp), %rax
  417469:	48 89 04 24 	movq	%rax, (%rsp)
  41746d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  417472:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  417477:	e8 c4 af 00 00 	callq	44996 <runtime.printstring>
  41747c:	e8 0f a9 00 00 	callq	43279 <runtime.printnl>
  417481:	e8 fa a6 00 00 	callq	42746 <runtime.printunlock>
  417486:	e9 e0 fd ff ff 	jmp	-544 <runtime.gcDumpObject+0x25b>
  41748b:	e8 70 a6 00 00 	callq	42608 <runtime.printlock>
  417490:	48 8d 05 ed 29 05 00 	leaq	338413(%rip), %rax
  417497:	48 89 04 24 	movq	%rax, (%rsp)
  41749b:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  4174a4:	e8 97 af 00 00 	callq	44951 <runtime.printstring>
  4174a9:	e8 d2 a6 00 00 	callq	42706 <runtime.printunlock>
  4174ae:	48 8b 6c 24 60 	movq	96(%rsp), %rbp
  4174b3:	48 83 c4 68 	addq	$104, %rsp
  4174b7:	c3 	retq
  4174b8:	e8 43 a6 00 00 	callq	42563 <runtime.printlock>
  4174bd:	48 8b 44 24 70 	movq	112(%rsp), %rax
  4174c2:	48 89 04 24 	movq	%rax, (%rsp)
  4174c6:	48 8b 44 24 78 	movq	120(%rsp), %rax
  4174cb:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4174d0:	e8 6b af 00 00 	callq	44907 <runtime.printstring>
  4174d5:	48 8d 05 7e 27 05 00 	leaq	337790(%rip), %rax
  4174dc:	48 89 04 24 	movq	%rax, (%rsp)
  4174e0:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  4174e9:	e8 52 af 00 00 	callq	44882 <runtime.printstring>
  4174ee:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  4174f6:	48 89 04 24 	movq	%rax, (%rsp)
  4174fa:	e8 f1 ad 00 00 	callq	44529 <runtime.printhex>
  4174ff:	48 8d 05 8e 40 05 00 	leaq	344206(%rip), %rax
  417506:	48 89 04 24 	movq	%rax, (%rsp)
  41750a:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  417513:	e8 28 af 00 00 	callq	44840 <runtime.printstring>
  417518:	e8 63 a6 00 00 	callq	42595 <runtime.printunlock>
  41751d:	48 8b 6c 24 60 	movq	96(%rsp), %rbp
  417522:	48 83 c4 68 	addq	$104, %rsp
  417526:	c3 	retq
  417527:	e8 14 85 00 00 	callq	34068 <runtime.panicindex>
  41752c:	0f 0b 	ud2
  41752e:	e8 3d d0 02 00 	callq	184381 <runtime.morestack_noctxt>
  417533:	e9 d8 fa ff ff 	jmp	-1320 <runtime.gcDumpObject>
  417538:	cc 	int3
  417539:	cc 	int3
  41753a:	cc 	int3
  41753b:	cc 	int3
  41753c:	cc 	int3
  41753d:	cc 	int3
  41753e:	cc 	int3
  41753f:	cc 	int3

runtime.gcmarknewobject:
  417540:	48 83 ec 28 	subq	$40, %rsp
  417544:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  417549:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  41754e:	0f b6 05 6a c3 0a 00 	movzbl	705386(%rip), %eax
  417555:	84 c0 	testb	%al, %al
  417557:	74 0f 	je	15 <runtime.gcmarknewobject+0x28>
  417559:	0f b6 05 47 c3 0a 00 	movzbl	705351(%rip), %eax
  417560:	84 c0 	testb	%al, %al
  417562:	0f 84 82 00 00 00 	je	130 <runtime.gcmarknewobject+0xaa>
  417568:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41756d:	48 89 04 24 	movq	%rax, (%rsp)
  417571:	e8 da 4a ff ff 	callq	-46374 <runtime.markBitsForAddr>
  417576:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  41757b:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  417580:	f0 	lock
  417581:	08 01 	orb	%al, (%rcx)
  417583:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  41758c:	48 8b 40 30 	movq	48(%rax), %rax
  417590:	48 8b 88 d0 00 00 00 	movq	208(%rax), %rcx
  417597:	84 01 	testb	%al, (%rcx)
  417599:	84 00 	testb	%al, (%rax)
  41759b:	48 8d 81 70 12 00 00 	leaq	4720(%rcx), %rax
  4175a2:	84 00 	testb	%al, (%rax)
  4175a4:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  4175a9:	48 03 91 80 12 00 00 	addq	4736(%rcx), %rdx
  4175b0:	48 89 91 80 12 00 00 	movq	%rdx, 4736(%rcx)
  4175b7:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  4175bc:	48 03 91 88 12 00 00 	addq	4744(%rcx), %rdx
  4175c3:	48 89 91 88 12 00 00 	movq	%rdx, 4744(%rcx)
  4175ca:	0f b6 0d d6 c2 0a 00 	movzbl	705238(%rip), %ecx
  4175d1:	84 c9 	testb	%cl, %cl
  4175d3:	75 0a 	jne	10 <runtime.gcmarknewobject+0x9f>
  4175d5:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4175da:	48 83 c4 28 	addq	$40, %rsp
  4175de:	c3 	retq
  4175df:	48 89 04 24 	movq	%rax, (%rsp)
  4175e3:	e8 98 1c 00 00 	callq	7320 <runtime.(*gcWork).dispose>
  4175e8:	eb eb 	jmp	-21 <runtime.gcmarknewobject+0x95>
  4175ea:	48 8d 05 30 60 05 00 	leaq	352304(%rip), %rax
  4175f1:	48 89 04 24 	movq	%rax, (%rsp)
  4175f5:	48 c7 44 24 08 2c 00 00 00 	movq	$44, 8(%rsp)
  4175fe:	e8 cd 9b 00 00 	callq	39885 <runtime.throw>
  417603:	0f 0b 	ud2
  417605:	cc 	int3
  417606:	cc 	int3
  417607:	cc 	int3
  417608:	cc 	int3
  417609:	cc 	int3
  41760a:	cc 	int3
  41760b:	cc 	int3
  41760c:	cc 	int3
  41760d:	cc 	int3
  41760e:	cc 	int3
  41760f:	cc 	int3

runtime.gcMarkTinyAllocs:
  417610:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  417619:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41761d:	0f 86 fa 00 00 00 	jbe	250 <runtime.gcMarkTinyAllocs+0x10d>
  417623:	48 83 ec 78 	subq	$120, %rsp
  417627:	48 89 6c 24 70 	movq	%rbp, 112(%rsp)
  41762c:	48 8d 6c 24 70 	leaq	112(%rsp), %rbp
  417631:	48 8b 05 80 00 09 00 	movq	589952(%rip), %rax
  417638:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  41763d:	48 8b 0d 6c 00 09 00 	movq	589932(%rip), %rcx
  417644:	48 89 4c 24 68 	movq	%rcx, 104(%rsp)
  417649:	31 d2 	xorl	%edx, %edx
  41764b:	eb 03 	jmp	3 <runtime.gcMarkTinyAllocs+0x40>
  41764d:	48 ff c2 	incq	%rdx
  417650:	48 39 c2 	cmpq	%rax, %rdx
  417653:	0f 8d ba 00 00 00 	jge	186 <runtime.gcMarkTinyAllocs+0x103>
  417659:	48 8b 1c d1 	movq	(%rcx,%rdx,8), %rbx
  41765d:	48 8b 73 48 	movq	72(%rbx), %rsi
  417661:	48 85 f6 	testq	%rsi, %rsi
  417664:	74 e7 	je	-25 <runtime.gcMarkTinyAllocs+0x3d>
  417666:	48 8b 7e 10 	movq	16(%rsi), %rdi
  41766a:	48 85 ff 	testq	%rdi, %rdi
  41766d:	74 de 	je	-34 <runtime.gcMarkTinyAllocs+0x3d>
  41766f:	48 89 54 24 40 	movq	%rdx, 64(%rsp)
  417674:	48 89 5c 24 50 	movq	%rbx, 80(%rsp)
  417679:	48 89 74 24 60 	movq	%rsi, 96(%rsp)
  41767e:	48 89 3c 24 	movq	%rdi, (%rsp)
  417682:	0f 57 c0 	xorps	%xmm0, %xmm0
  417685:	0f 11 44 24 08 	movups	%xmm0, 8(%rsp)
  41768a:	e8 11 4c ff ff 	callq	-46063 <runtime.heapBitsForObject>
  41768f:	8b 44 24 28 	movl	40(%rsp), %eax
  417693:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  417698:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  41769d:	48 8b 5c 24 20 	movq	32(%rsp), %rbx
  4176a2:	48 8b 74 24 60 	movq	96(%rsp), %rsi
  4176a7:	48 8b 76 10 	movq	16(%rsi), %rsi
  4176ab:	48 89 34 24 	movq	%rsi, (%rsp)
  4176af:	0f 57 c0 	xorps	%xmm0, %xmm0
  4176b2:	0f 11 44 24 08 	movups	%xmm0, 8(%rsp)
  4176b7:	48 89 5c 24 18 	movq	%rbx, 24(%rsp)
  4176bc:	89 44 24 20 	movl	%eax, 32(%rsp)
  4176c0:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  4176c5:	48 8b 44 24 50 	movq	80(%rsp), %rax
  4176ca:	48 05 70 12 00 00 	addq	$4720, %rax
  4176d0:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  4176d5:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  4176da:	48 89 54 24 38 	movq	%rdx, 56(%rsp)
  4176df:	e8 5c f4 ff ff 	callq	-2980 <runtime.greyobject>
  4176e4:	0f b6 05 bc c1 0a 00 	movzbl	704956(%rip), %eax
  4176eb:	84 c0 	testb	%al, %al
  4176ed:	75 14 	jne	20 <runtime.gcMarkTinyAllocs+0xf3>
  4176ef:	48 8b 44 24 48 	movq	72(%rsp), %rax
  4176f4:	48 8b 4c 24 68 	movq	104(%rsp), %rcx
  4176f9:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  4176fe:	e9 4a ff ff ff 	jmp	-182 <runtime.gcMarkTinyAllocs+0x3d>
  417703:	48 8b 44 24 58 	movq	88(%rsp), %rax
  417708:	48 89 04 24 	movq	%rax, (%rsp)
  41770c:	e8 6f 1b 00 00 	callq	7023 <runtime.(*gcWork).dispose>
  417711:	eb dc 	jmp	-36 <runtime.gcMarkTinyAllocs+0xdf>
  417713:	48 8b 6c 24 70 	movq	112(%rsp), %rbp
  417718:	48 83 c4 78 	addq	$120, %rsp
  41771c:	c3 	retq
  41771d:	e8 4e ce 02 00 	callq	183886 <runtime.morestack_noctxt>
  417722:	e9 e9 fe ff ff 	jmp	-279 <runtime.gcMarkTinyAllocs>
  417727:	cc 	int3
  417728:	cc 	int3
  417729:	cc 	int3
  41772a:	cc 	int3
  41772b:	cc 	int3
  41772c:	cc 	int3
  41772d:	cc 	int3
  41772e:	cc 	int3
  41772f:	cc 	int3

runtime.initCheckmarks:
  417730:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  417739:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41773d:	0f 86 d1 00 00 00 	jbe	209 <runtime.initCheckmarks+0xe4>
  417743:	48 83 ec 50 	subq	$80, %rsp
  417747:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  41774c:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  417751:	c6 05 67 c1 0a 00 01 	movb	$1, 704871(%rip)
  417758:	48 8b 05 79 5b 09 00 	movq	613241(%rip), %rax
  41775f:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  417764:	48 8b 0d 65 5b 09 00 	movq	613221(%rip), %rcx
  41776b:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  417770:	31 d2 	xorl	%edx, %edx
  417772:	eb 03 	jmp	3 <runtime.initCheckmarks+0x47>
  417774:	48 ff c2 	incq	%rdx
  417777:	48 39 c2 	cmpq	%rax, %rdx
  41777a:	0f 8d 8a 00 00 00 	jge	138 <runtime.initCheckmarks+0xda>
  417780:	48 8b 1c d1 	movq	(%rcx,%rdx,8), %rbx
  417784:	0f b6 73 64 	movzbl	100(%rbx), %esi
  417788:	40 80 fe 01 	cmpb	$1, %sil
  41778c:	75 e6 	jne	-26 <runtime.initCheckmarks+0x44>
  41778e:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  417793:	48 89 5c 24 38 	movq	%rbx, 56(%rsp)
  417798:	48 8b 43 18 	movq	24(%rbx), %rax
  41779c:	48 89 04 24 	movq	%rax, (%rsp)
  4177a0:	e8 bb 49 ff ff 	callq	-46661 <runtime.heapBitsForSpan>
  4177a5:	8b 44 24 10 	movl	16(%rsp), %eax
  4177a9:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  4177ae:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  4177b3:	48 8b 5a 20 	movq	32(%rdx), %rbx
  4177b7:	48 c1 e3 0d 	shlq	$13, %rbx
  4177bb:	48 8b 52 68 	movq	104(%rdx), %rdx
  4177bf:	48 85 d2 	testq	%rdx, %rdx
  4177c2:	76 3d 	jbe	61 <runtime.initCheckmarks+0xd1>
  4177c4:	89 c6 	movl	%eax, %esi
  4177c6:	48 89 d8 	movq	%rbx, %rax
  4177c9:	48 89 d7 	movq	%rdx, %rdi
  4177cc:	31 d2 	xorl	%edx, %edx
  4177ce:	48 f7 f7 	divq	%rdi
  4177d1:	48 89 0c 24 	movq	%rcx, (%rsp)
  4177d5:	89 74 24 08 	movl	%esi, 8(%rsp)
  4177d9:	48 89 7c 24 10 	movq	%rdi, 16(%rsp)
  4177de:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4177e3:	48 89 5c 24 20 	movq	%rbx, 32(%rsp)
  4177e8:	e8 83 58 ff ff 	callq	-42877 <runtime.heapBits.initCheckmarkSpan>
  4177ed:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4177f2:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  4177f7:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  4177fc:	e9 73 ff ff ff 	jmp	-141 <runtime.initCheckmarks+0x44>
  417801:	89 c6 	movl	%eax, %esi
  417803:	48 89 d7 	movq	%rdx, %rdi
  417806:	31 c0 	xorl	%eax, %eax
  417808:	eb c7 	jmp	-57 <runtime.initCheckmarks+0xa1>
  41780a:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  41780f:	48 83 c4 50 	addq	$80, %rsp
  417813:	c3 	retq
  417814:	e8 57 cd 02 00 	callq	183639 <runtime.morestack_noctxt>
  417819:	e9 12 ff ff ff 	jmp	-238 <runtime.initCheckmarks>
  41781e:	cc 	int3
  41781f:	cc 	int3

runtime.clearCheckmarks:
  417820:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  417829:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41782d:	0f 86 d1 00 00 00 	jbe	209 <runtime.clearCheckmarks+0xe4>
  417833:	48 83 ec 50 	subq	$80, %rsp
  417837:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  41783c:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  417841:	c6 05 77 c0 0a 00 00 	movb	$0, 704631(%rip)
  417848:	48 8b 05 89 5a 09 00 	movq	613001(%rip), %rax
  41784f:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  417854:	48 8b 0d 75 5a 09 00 	movq	612981(%rip), %rcx
  41785b:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  417860:	31 d2 	xorl	%edx, %edx
  417862:	eb 03 	jmp	3 <runtime.clearCheckmarks+0x47>
  417864:	48 ff c2 	incq	%rdx
  417867:	48 39 c2 	cmpq	%rax, %rdx
  41786a:	0f 8d 8a 00 00 00 	jge	138 <runtime.clearCheckmarks+0xda>
  417870:	48 8b 1c d1 	movq	(%rcx,%rdx,8), %rbx
  417874:	0f b6 73 64 	movzbl	100(%rbx), %esi
  417878:	40 80 fe 01 	cmpb	$1, %sil
  41787c:	75 e6 	jne	-26 <runtime.clearCheckmarks+0x44>
  41787e:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  417883:	48 89 5c 24 38 	movq	%rbx, 56(%rsp)
  417888:	48 8b 43 18 	movq	24(%rbx), %rax
  41788c:	48 89 04 24 	movq	%rax, (%rsp)
  417890:	e8 cb 48 ff ff 	callq	-46901 <runtime.heapBitsForSpan>
  417895:	8b 44 24 10 	movl	16(%rsp), %eax
  417899:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  41789e:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  4178a3:	48 8b 5a 20 	movq	32(%rdx), %rbx
  4178a7:	48 c1 e3 0d 	shlq	$13, %rbx
  4178ab:	48 8b 52 68 	movq	104(%rdx), %rdx
  4178af:	48 85 d2 	testq	%rdx, %rdx
  4178b2:	76 3d 	jbe	61 <runtime.clearCheckmarks+0xd1>
  4178b4:	89 c6 	movl	%eax, %esi
  4178b6:	48 89 d8 	movq	%rbx, %rax
  4178b9:	48 89 d7 	movq	%rdx, %rdi
  4178bc:	31 d2 	xorl	%edx, %edx
  4178be:	48 f7 f7 	divq	%rdi
  4178c1:	48 89 0c 24 	movq	%rcx, (%rsp)
  4178c5:	89 74 24 08 	movl	%esi, 8(%rsp)
  4178c9:	48 89 7c 24 10 	movq	%rdi, 16(%rsp)
  4178ce:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4178d3:	48 89 5c 24 20 	movq	%rbx, 32(%rsp)
  4178d8:	e8 33 58 ff ff 	callq	-42957 <runtime.heapBits.clearCheckmarkSpan>
  4178dd:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4178e2:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  4178e7:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  4178ec:	e9 73 ff ff ff 	jmp	-141 <runtime.clearCheckmarks+0x44>
  4178f1:	89 c6 	movl	%eax, %esi
  4178f3:	48 89 d7 	movq	%rdx, %rdi
  4178f6:	31 c0 	xorl	%eax, %eax
  4178f8:	eb c7 	jmp	-57 <runtime.clearCheckmarks+0xa1>
  4178fa:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  4178ff:	48 83 c4 50 	addq	$80, %rsp
  417903:	c3 	retq
  417904:	e8 67 cc 02 00 	callq	183399 <runtime.morestack_noctxt>
  417909:	e9 12 ff ff ff 	jmp	-238 <runtime.clearCheckmarks>
  41790e:	cc 	int3
  41790f:	cc 	int3

runtime.finishsweep_m:
  417910:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  417919:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41791d:	76 34 	jbe	52 <runtime.finishsweep_m+0x43>
  41791f:	48 83 ec 10 	subq	$16, %rsp
  417923:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  417928:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  41792d:	eb 06 	jmp	6 <runtime.finishsweep_m+0x25>
  41792f:	ff 05 c3 fe 08 00 	incl	589507(%rip)
  417935:	e8 86 01 00 00 	callq	390 <runtime.sweepone>
  41793a:	48 8b 04 24 	movq	(%rsp), %rax
  41793e:	48 83 f8 ff 	cmpq	$-1, %rax
  417942:	75 eb 	jne	-21 <runtime.finishsweep_m+0x1f>
  417944:	e8 47 53 00 00 	callq	21319 <runtime.nextMarkBitArenaEpoch>
  417949:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  41794e:	48 83 c4 10 	addq	$16, %rsp
  417952:	c3 	retq
  417953:	e8 18 cc 02 00 	callq	183320 <runtime.morestack_noctxt>
  417958:	eb b6 	jmp	-74 <runtime.finishsweep_m>
  41795a:	cc 	int3
  41795b:	cc 	int3
  41795c:	cc 	int3
  41795d:	cc 	int3
  41795e:	cc 	int3
  41795f:	cc 	int3

runtime.bgsweep:
  417960:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  417969:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41796d:	0f 86 41 01 00 00 	jbe	321 <runtime.bgsweep+0x154>
  417973:	48 83 ec 30 	subq	$48, %rsp
  417977:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  41797c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  417981:	8b 0d 89 c0 0a 00 	movl	704649(%rip), %ecx
  417987:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  417990:	85 c9 	testl	%ecx, %ecx
  417992:	0f 85 0b 01 00 00 	jne	267 <runtime.bgsweep+0x143>
  417998:	48 89 05 49 fe 08 00 	movq	%rax, 589385(%rip)
  41799f:	48 8d 05 3a fe 08 00 	leaq	589370(%rip), %rax
  4179a6:	48 89 04 24 	movq	%rax, (%rsp)
  4179aa:	e8 71 1b ff ff 	callq	-58511 <runtime.lock>
  4179af:	c6 05 3a fe 08 00 01 	movb	$1, 589370(%rip)
  4179b6:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4179bb:	48 89 04 24 	movq	%rax, (%rsp)
  4179bf:	48 8d 05 92 d1 05 00 	leaq	381330(%rip), %rax
  4179c6:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4179cb:	e8 70 b6 fe ff 	callq	-84368 <runtime.chansend1>
  4179d0:	48 8d 05 09 fe 08 00 	leaq	589321(%rip), %rax
  4179d7:	48 89 04 24 	movq	%rax, (%rsp)
  4179db:	48 8d 0d 2b 2d 05 00 	leaq	339243(%rip), %rcx
  4179e2:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4179e7:	48 c7 44 24 10 0d 00 00 00 	movq	$13, 16(%rsp)
  4179f0:	c6 44 24 18 14 	movb	$20, 24(%rsp)
  4179f5:	48 c7 44 24 20 01 00 00 00 	movq	$1, 32(%rsp)
  4179fe:	e8 5d b5 00 00 	callq	46429 <runtime.goparkunlock>
  417a03:	eb 0b 	jmp	11 <runtime.bgsweep+0xb0>
  417a05:	ff 05 e9 fd 08 00 	incl	589289(%rip)
  417a0b:	e8 b0 b3 00 00 	callq	46000 <runtime.Gosched>
  417a10:	e8 5b 04 00 00 	callq	1115 <runtime.gosweepone>
  417a15:	48 8b 04 24 	movq	(%rsp), %rax
  417a19:	48 83 f8 ff 	cmpq	$-1, %rax
  417a1d:	75 e6 	jne	-26 <runtime.bgsweep+0xa5>
  417a1f:	eb 05 	jmp	5 <runtime.bgsweep+0xc6>
  417a21:	e8 9a b3 00 00 	callq	45978 <runtime.Gosched>
  417a26:	c6 04 24 01 	movb	$1, (%rsp)
  417a2a:	e8 71 22 00 00 	callq	8817 <runtime.freeSomeWbufs>
  417a2f:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  417a34:	84 c0 	testb	%al, %al
  417a36:	75 e9 	jne	-23 <runtime.bgsweep+0xc1>
  417a38:	48 8d 05 a1 fd 08 00 	leaq	589217(%rip), %rax
  417a3f:	48 89 04 24 	movq	%rax, (%rsp)
  417a43:	e8 d8 1a ff ff 	callq	-58664 <runtime.lock>
  417a48:	8b 05 76 58 09 00 	movl	612470(%rip), %eax
  417a4e:	85 c0 	testl	%eax, %eax
  417a50:	74 3c 	je	60 <runtime.bgsweep+0x12e>
  417a52:	c6 05 97 fd 08 00 01 	movb	$1, 589207(%rip)
  417a59:	48 8d 05 80 fd 08 00 	leaq	589184(%rip), %rax
  417a60:	48 89 04 24 	movq	%rax, (%rsp)
  417a64:	48 8d 0d a2 2c 05 00 	leaq	339106(%rip), %rcx
  417a6b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  417a70:	48 c7 44 24 10 0d 00 00 00 	movq	$13, 16(%rsp)
  417a79:	c6 44 24 18 14 	movb	$20, 24(%rsp)
  417a7e:	48 c7 44 24 20 01 00 00 00 	movq	$1, 32(%rsp)
  417a87:	e8 d4 b4 00 00 	callq	46292 <runtime.goparkunlock>
  417a8c:	eb 82 	jmp	-126 <runtime.bgsweep+0xb0>
  417a8e:	48 8d 05 4b fd 08 00 	leaq	589131(%rip), %rax
  417a95:	48 89 04 24 	movq	%rax, (%rsp)
  417a99:	e8 22 1c ff ff 	callq	-58334 <runtime.unlock>
  417a9e:	e9 6d ff ff ff 	jmp	-147 <runtime.bgsweep+0xb0>
  417aa3:	48 8d 3d 3e fd 08 00 	leaq	589118(%rip), %rdi
  417aaa:	e8 f1 ed 02 00 	callq	191985 <runtime.gcWriteBarrier>
  417aaf:	e9 eb fe ff ff 	jmp	-277 <runtime.bgsweep+0x3f>
  417ab4:	e8 b7 ca 02 00 	callq	182967 <runtime.morestack_noctxt>
  417ab9:	e9 a2 fe ff ff 	jmp	-350 <runtime.bgsweep>
  417abe:	cc 	int3
  417abf:	cc 	int3

runtime.sweepone:
  417ac0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  417ac9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  417acd:	0f 86 8b 03 00 00 	jbe	907 <runtime.sweepone+0x39e>
  417ad3:	48 83 ec 60 	subq	$96, %rsp
  417ad7:	48 89 6c 24 58 	movq	%rbp, 88(%rsp)
  417adc:	48 8d 6c 24 58 	leaq	88(%rsp), %rbp
  417ae1:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  417aea:	48 8b 51 30 	movq	48(%rcx), %rdx
  417aee:	f2 0f 10 05 82 58 09 00 	movsd	612482(%rip), %xmm0
  417af6:	ff 82 00 01 00 00 	incl	256(%rdx)
  417afc:	8b 15 c2 57 09 00 	movl	612290(%rip), %edx
  417b02:	85 d2 	testl	%edx, %edx
  417b04:	0f 85 82 02 00 00 	jne	642 <runtime.sweepone+0x2cc>
  417b0a:	48 89 4c 24 50 	movq	%rcx, 80(%rsp)
  417b0f:	f2 0f 11 44 24 28 	movsd	%xmm0, 40(%rsp)
  417b15:	ba 01 00 00 00 	movl	$1, %edx
  417b1a:	48 8d 1d a7 57 09 00 	leaq	612263(%rip), %rbx
  417b21:	f0 	lock
  417b22:	0f c1 13 	xaddl	%edx, (%rbx)
  417b25:	8b 15 95 57 09 00 	movl	612245(%rip), %edx
  417b2b:	eb 02 	jmp	2 <runtime.sweepone+0x6f>
  417b2d:	89 f2 	movl	%esi, %edx
  417b2f:	89 d6 	movl	%edx, %esi
  417b31:	d1 ea 	shrl	%edx
  417b33:	83 e2 01 	andl	$1, %edx
  417b36:	ff ca 	decl	%edx
  417b38:	f7 da 	negl	%edx
  417b3a:	48 83 fa 02 	cmpq	$2, %rdx
  417b3e:	0f 83 13 03 00 00 	jae	787 <runtime.sweepone+0x397>
  417b44:	48 8d 14 92 	leaq	(%rdx,%rdx,4), %rdx
  417b48:	48 8d 3d 51 47 09 00 	leaq	608081(%rip), %rdi
  417b4f:	4c 8d 84 d7 80 10 00 00 	leaq	4224(%rdi,%rdx,8), %r8
  417b57:	41 b9 ff ff ff ff 	movl	$4294967295, %r9d
  417b5d:	f0 	lock
  417b5e:	45 0f c1 08 	xaddl	%r9d, (%r8)
  417b62:	41 ff c9 	decl	%r9d
  417b65:	45 85 c9 	testl	%r9d, %r9d
  417b68:	0f 8d ea 01 00 00 	jge	490 <runtime.sweepone+0x298>
  417b6e:	ba 01 00 00 00 	movl	$1, %edx
  417b73:	f0 	lock
  417b74:	41 0f c1 10 	xaddl	%edx, (%r8)
  417b78:	31 c0 	xorl	%eax, %eax
  417b7a:	48 85 c0 	testq	%rax, %rax
  417b7d:	0f 84 bb 01 00 00 	je	443 <runtime.sweepone+0x27e>
  417b83:	0f b6 50 64 	movzbl	100(%rax), %edx
  417b87:	80 fa 01 	cmpb	$1, %dl
  417b8a:	74 0f 	je	15 <runtime.sweepone+0xdb>
  417b8c:	44 8b 40 58 	movl	88(%rax), %r8d
  417b90:	41 39 f0 	cmpl	%esi, %r8d
  417b93:	0f 85 11 02 00 00 	jne	529 <runtime.sweepone+0x2ea>
  417b99:	eb 92 	jmp	-110 <runtime.sweepone+0x6d>
  417b9b:	8b 50 58 	movl	88(%rax), %edx
  417b9e:	44 8d 46 fe 	leal	-2(%rsi), %r8d
  417ba2:	44 39 c2 	cmpl	%r8d, %edx
  417ba5:	75 86 	jne	-122 <runtime.sweepone+0x6d>
  417ba7:	8d 56 ff 	leal	-1(%rsi), %edx
  417baa:	49 89 c1 	movq	%rax, %r9
  417bad:	44 89 c0 	movl	%r8d, %eax
  417bb0:	f0 	lock
  417bb1:	41 0f b1 51 58 	cmpxchgl	%edx, 88(%r9)
  417bb6:	0f 94 c2 	sete	%dl
  417bb9:	84 d2 	testb	%dl, %dl
  417bbb:	0f 84 6c ff ff ff 	je	-148 <runtime.sweepone+0x6d>
  417bc1:	49 8b 41 20 	movq	32(%r9), %rax
  417bc5:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  417bca:	4c 89 0c 24 	movq	%r9, (%rsp)
  417bce:	c6 44 24 08 00 	movb	$0, 8(%rsp)
  417bd3:	e8 e8 03 00 00 	callq	1000 <runtime.(*mspan).sweep>
  417bd8:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  417bdd:	84 c0 	testb	%al, %al
  417bdf:	0f 84 52 01 00 00 	je	338 <runtime.sweepone+0x277>
  417be5:	48 8b 44 24 30 	movq	48(%rsp), %rax
  417bea:	b9 ff ff ff ff 	movl	$4294967295, %ecx
  417bef:	48 8d 15 d2 56 09 00 	leaq	612050(%rip), %rdx
  417bf6:	f0 	lock
  417bf7:	0f c1 0a 	xaddl	%ecx, (%rdx)
  417bfa:	ff c9 	decl	%ecx
  417bfc:	85 c9 	testl	%ecx, %ecx
  417bfe:	75 14 	jne	20 <runtime.sweepone+0x154>
  417c00:	8b 0d be 56 09 00 	movl	612030(%rip), %ecx
  417c06:	85 c9 	testl	%ecx, %ecx
  417c08:	74 0a 	je	10 <runtime.sweepone+0x154>
  417c0a:	8b 0d c0 be 0a 00 	movl	704192(%rip), %ecx
  417c10:	85 c9 	testl	%ecx, %ecx
  417c12:	7f 1f 	jg	31 <runtime.sweepone+0x173>
  417c14:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  417c19:	48 8b 49 30 	movq	48(%rcx), %rcx
  417c1d:	83 81 00 01 00 00 ff 	addl	$-1, 256(%rcx)
  417c24:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  417c29:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  417c2e:	48 83 c4 60 	addq	$96, %rsp
  417c32:	c3 	retq
  417c33:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  417c38:	48 8b 05 01 e2 0a 00 	movq	713217(%rip), %rax
  417c3f:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  417c44:	48 8b 0d 25 57 09 00 	movq	612133(%rip), %rcx
  417c4b:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  417c50:	48 8b 15 09 57 09 00 	movq	612105(%rip), %rdx
  417c57:	48 89 54 24 38 	movq	%rdx, 56(%rsp)
  417c5c:	e8 9f 9e 00 00 	callq	40607 <runtime.printlock>
  417c61:	48 8d 05 a0 4a 05 00 	leaq	346784(%rip), %rax
  417c68:	48 89 04 24 	movq	%rax, (%rsp)
  417c6c:	48 c7 44 24 08 1f 00 00 00 	movq	$31, 8(%rsp)
  417c75:	e8 c6 a7 00 00 	callq	42950 <runtime.printstring>
  417c7a:	48 8b 44 24 48 	movq	72(%rsp), %rax
  417c7f:	48 c1 e8 14 	shrq	$20, %rax
  417c83:	48 89 04 24 	movq	%rax, (%rsp)
  417c87:	e8 e4 a4 00 00 	callq	42212 <runtime.printuint>
  417c8c:	48 8d 05 ad 2b 05 00 	leaq	338861(%rip), %rax
  417c93:	48 89 04 24 	movq	%rax, (%rsp)
  417c97:	48 c7 44 24 08 0e 00 00 00 	movq	$14, 8(%rsp)
  417ca0:	e8 9b a7 00 00 	callq	42907 <runtime.printstring>
  417ca5:	48 8b 44 24 48 	movq	72(%rsp), %rax
  417caa:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  417caf:	48 29 c8 	subq	%rcx, %rax
  417cb2:	48 c1 e8 14 	shrq	$20, %rax
  417cb6:	48 89 04 24 	movq	%rax, (%rsp)
  417cba:	e8 b1 a4 00 00 	callq	42161 <runtime.printuint>
  417cbf:	48 8d 05 fc 38 05 00 	leaq	342268(%rip), %rax
  417cc6:	48 89 04 24 	movq	%rax, (%rsp)
  417cca:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  417cd3:	e8 68 a7 00 00 	callq	42856 <runtime.printstring>
  417cd8:	48 8b 44 24 38 	movq	56(%rsp), %rax
  417cdd:	48 89 04 24 	movq	%rax, (%rsp)
  417ce1:	e8 8a a4 00 00 	callq	42122 <runtime.printuint>
  417ce6:	48 8d 05 a7 25 05 00 	leaq	337319(%rip), %rax
  417ced:	48 89 04 24 	movq	%rax, (%rsp)
  417cf1:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  417cfa:	e8 41 a7 00 00 	callq	42817 <runtime.printstring>
  417cff:	f2 0f 10 44 24 28 	movsd	40(%rsp), %xmm0
  417d05:	f2 0f 11 04 24 	movsd	%xmm0, (%rsp)
  417d0a:	e8 41 a1 00 00 	callq	41281 <runtime.printfloat>
  417d0f:	48 8d 05 14 28 05 00 	leaq	337940(%rip), %rax
  417d16:	48 89 04 24 	movq	%rax, (%rsp)
  417d1a:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  417d23:	e8 18 a7 00 00 	callq	42776 <runtime.printstring>
  417d28:	e8 53 9e 00 00 	callq	40531 <runtime.printunlock>
  417d2d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  417d32:	e9 dd fe ff ff 	jmp	-291 <runtime.sweepone+0x154>
  417d37:	31 c0 	xorl	%eax, %eax
  417d39:	e9 ac fe ff ff 	jmp	-340 <runtime.sweepone+0x12a>
  417d3e:	ba 01 00 00 00 	movl	$1, %edx
  417d43:	48 8d 35 7a 55 09 00 	leaq	611706(%rip), %rsi
  417d4a:	87 16 	xchgl	%edx, (%rsi)
  417d4c:	48 c7 c0 ff ff ff ff 	movq	$-1, %rax
  417d53:	e9 92 fe ff ff 	jmp	-366 <runtime.sweepone+0x12a>
  417d58:	45 89 c8 	movl	%r9d, %r8d
  417d5b:	41 c1 e9 09 	shrl	$9, %r9d
  417d5f:	48 8b 94 d7 68 10 00 00 	movq	4200(%rdi,%rdx,8), %rdx
  417d67:	4e 8d 14 ca 	leaq	(%rdx,%r9,8), %r10
  417d6b:	41 84 02 	testb	%al, (%r10)
  417d6e:	4a 8b 14 ca 	movq	(%rdx,%r9,8), %rdx
  417d72:	84 02 	testb	%al, (%rdx)
  417d74:	41 81 e0 ff 01 00 00 	andl	$511, %r8d
  417d7b:	4a 8b 04 c2 	movq	(%rdx,%r8,8), %rax
  417d7f:	4a c7 04 c2 00 00 00 00 	movq	$0, (%rdx,%r8,8)
  417d87:	e9 ee fd ff ff 	jmp	-530 <runtime.sweepone+0xba>
  417d8c:	48 8b 41 30 	movq	48(%rcx), %rax
  417d90:	83 80 00 01 00 00 ff 	addl	$-1, 256(%rax)
  417d97:	48 c7 44 24 68 ff ff ff ff 	movq	$-1, 104(%rsp)
  417da0:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  417da5:	48 83 c4 60 	addq	$96, %rsp
  417da9:	c3 	retq
  417daa:	89 74 24 24 	movl	%esi, 36(%rsp)
  417dae:	88 54 24 1f 	movb	%dl, 31(%rsp)
  417db2:	44 89 44 24 20 	movl	%r8d, 32(%rsp)
  417db7:	e8 44 9d 00 00 	callq	40260 <runtime.printlock>
  417dbc:	48 8d 05 cd 3e 05 00 	leaq	343757(%rip), %rax
  417dc3:	48 89 04 24 	movq	%rax, (%rsp)
  417dc7:	48 c7 44 24 08 1a 00 00 00 	movq	$26, 8(%rsp)
  417dd0:	e8 6b a6 00 00 	callq	42603 <runtime.printstring>
  417dd5:	0f b6 44 24 1f 	movzbl	31(%rsp), %eax
  417dda:	0f b6 c0 	movzbl	%al, %eax
  417ddd:	48 89 04 24 	movq	%rax, (%rsp)
  417de1:	e8 8a a3 00 00 	callq	41866 <runtime.printuint>
  417de6:	48 8d 05 61 27 05 00 	leaq	337761(%rip), %rax
  417ded:	48 89 04 24 	movq	%rax, (%rsp)
  417df1:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  417dfa:	e8 41 a6 00 00 	callq	42561 <runtime.printstring>
  417dff:	8b 44 24 20 	movl	32(%rsp), %eax
  417e03:	48 89 04 24 	movq	%rax, (%rsp)
  417e07:	e8 64 a3 00 00 	callq	41828 <runtime.printuint>
  417e0c:	48 8d 05 d1 24 05 00 	leaq	337105(%rip), %rax
  417e13:	48 89 04 24 	movq	%rax, (%rsp)
  417e17:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  417e20:	e8 1b a6 00 00 	callq	42523 <runtime.printstring>
  417e25:	8b 44 24 24 	movl	36(%rsp), %eax
  417e29:	48 89 04 24 	movq	%rax, (%rsp)
  417e2d:	e8 3e a3 00 00 	callq	41790 <runtime.printuint>
  417e32:	e8 59 9f 00 00 	callq	40793 <runtime.printnl>
  417e37:	e8 44 9d 00 00 	callq	40260 <runtime.printunlock>
  417e3c:	48 8d 05 a6 48 05 00 	leaq	346278(%rip), %rax
  417e43:	48 89 04 24 	movq	%rax, (%rsp)
  417e47:	48 c7 44 24 08 1f 00 00 00 	movq	$31, 8(%rsp)
  417e50:	e8 7b 93 00 00 	callq	37755 <runtime.throw>
  417e55:	0f 0b 	ud2
  417e57:	e8 e4 7b 00 00 	callq	31716 <runtime.panicindex>
  417e5c:	0f 0b 	ud2
  417e5e:	e8 0d c7 02 00 	callq	182029 <runtime.morestack_noctxt>
  417e63:	e9 58 fc ff ff 	jmp	-936 <runtime.sweepone>
  417e68:	cc 	int3
  417e69:	cc 	int3
  417e6a:	cc 	int3
  417e6b:	cc 	int3
  417e6c:	cc 	int3
  417e6d:	cc 	int3
  417e6e:	cc 	int3
  417e6f:	cc 	int3

runtime.gosweepone:
  417e70:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  417e79:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  417e7d:	76 4f 	jbe	79 <runtime.gosweepone+0x5e>
  417e7f:	48 83 ec 28 	subq	$40, %rsp
  417e83:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  417e88:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  417e8d:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  417e96:	48 8d 05 23 a8 02 00 	leaq	174115(%rip), %rax
  417e9d:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  417ea2:	48 8d 44 24 08 	leaq	8(%rsp), %rax
  417ea7:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  417eac:	48 8d 44 24 10 	leaq	16(%rsp), %rax
  417eb1:	48 89 04 24 	movq	%rax, (%rsp)
  417eb5:	e8 66 c5 02 00 	callq	181606 <runtime.systemstack>
  417eba:	48 8b 44 24 08 	movq	8(%rsp), %rax
  417ebf:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  417ec4:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  417ec9:	48 83 c4 28 	addq	$40, %rsp
  417ecd:	c3 	retq
  417ece:	e8 9d c6 02 00 	callq	181917 <runtime.morestack_noctxt>
  417ed3:	eb 9b 	jmp	-101 <runtime.gosweepone>
  417ed5:	cc 	int3
  417ed6:	cc 	int3
  417ed7:	cc 	int3
  417ed8:	cc 	int3
  417ed9:	cc 	int3
  417eda:	cc 	int3
  417edb:	cc 	int3
  417edc:	cc 	int3
  417edd:	cc 	int3
  417ede:	cc 	int3
  417edf:	cc 	int3

runtime.(*mspan).ensureSwept:
  417ee0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  417ee9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  417eed:	0f 86 bd 00 00 00 	jbe	189 <runtime.(*mspan).ensureSwept+0xd0>
  417ef3:	48 83 ec 28 	subq	$40, %rsp
  417ef7:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  417efc:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  417f01:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  417f0a:	48 8b 51 30 	movq	48(%rcx), %rdx
  417f0e:	8b 9a 00 01 00 00 	movl	256(%rdx), %ebx
  417f14:	85 db 	testl	%ebx, %ebx
  417f16:	75 12 	jne	18 <runtime.(*mspan).ensureSwept+0x4a>
  417f18:	8b 9a e8 00 00 00 	movl	232(%rdx), %ebx
  417f1e:	85 db 	testl	%ebx, %ebx
  417f20:	75 08 	jne	8 <runtime.(*mspan).ensureSwept+0x4a>
  417f22:	48 8b 12 	movq	(%rdx), %rdx
  417f25:	48 39 d1 	cmpq	%rdx, %rcx
  417f28:	75 6b 	jne	107 <runtime.(*mspan).ensureSwept+0xb5>
  417f2a:	8b 0d 90 53 09 00 	movl	611216(%rip), %ecx
  417f30:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  417f35:	8b 5a 58 	movl	88(%rdx), %ebx
  417f38:	39 cb 	cmpl	%ecx, %ebx
  417f3a:	74 4f 	je	79 <runtime.(*mspan).ensureSwept+0xab>
  417f3c:	8d 41 fe 	leal	-2(%rcx), %eax
  417f3f:	8d 59 ff 	leal	-1(%rcx), %ebx
  417f42:	f0 	lock
  417f43:	0f b1 5a 58 	cmpxchgl	%ebx, 88(%rdx)
  417f47:	0f 94 c3 	sete	%bl
  417f4a:	84 db 	testb	%bl, %bl
  417f4c:	75 25 	jne	37 <runtime.(*mspan).ensureSwept+0x93>
  417f4e:	89 4c 24 1c 	movl	%ecx, 28(%rsp)
  417f52:	eb 0e 	jmp	14 <runtime.(*mspan).ensureSwept+0x82>
  417f54:	e8 f7 ff 02 00 	callq	196599 <runtime.osyield>
  417f59:	8b 4c 24 1c 	movl	28(%rsp), %ecx
  417f5d:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  417f62:	8b 42 58 	movl	88(%rdx), %eax
  417f65:	39 c8 	cmpl	%ecx, %eax
  417f67:	75 eb 	jne	-21 <runtime.(*mspan).ensureSwept+0x74>
  417f69:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  417f6e:	48 83 c4 28 	addq	$40, %rsp
  417f72:	c3 	retq
  417f73:	48 89 14 24 	movq	%rdx, (%rsp)
  417f77:	c6 44 24 08 00 	movb	$0, 8(%rsp)
  417f7c:	e8 3f 00 00 00 	callq	63 <runtime.(*mspan).sweep>
  417f81:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  417f86:	48 83 c4 28 	addq	$40, %rsp
  417f8a:	c3 	retq
  417f8b:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  417f90:	48 83 c4 28 	addq	$40, %rsp
  417f94:	c3 	retq
  417f95:	48 8d 05 1a 4c 05 00 	leaq	347162(%rip), %rax
  417f9c:	48 89 04 24 	movq	%rax, (%rsp)
  417fa0:	48 c7 44 24 08 22 00 00 00 	movq	$34, 8(%rsp)
  417fa9:	e8 22 92 00 00 	callq	37410 <runtime.throw>
  417fae:	0f 0b 	ud2
  417fb0:	e8 bb c5 02 00 	callq	181691 <runtime.morestack_noctxt>
  417fb5:	e9 26 ff ff ff 	jmp	-218 <runtime.(*mspan).ensureSwept>
  417fba:	cc 	int3
  417fbb:	cc 	int3
  417fbc:	cc 	int3
  417fbd:	cc 	int3
  417fbe:	cc 	int3
  417fbf:	cc 	int3

runtime.(*mspan).sweep:
  417fc0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  417fc9:	48 8d 44 24 b8 	leaq	-72(%rsp), %rax
  417fce:	48 3b 41 10 	cmpq	16(%rcx), %rax
  417fd2:	0f 86 51 09 00 00 	jbe	2385 <runtime.(*mspan).sweep+0x969>
  417fd8:	48 81 ec c8 00 00 00 	subq	$200, %rsp
  417fdf:	48 89 ac 24 c0 00 00 00 	movq	%rbp, 192(%rsp)
  417fe7:	48 8d ac 24 c0 00 00 00 	leaq	192(%rsp), %rbp
  417fef:	0f 57 c0 	xorps	%xmm0, %xmm0
  417ff2:	0f 11 84 24 90 00 00 00 	movups	%xmm0, 144(%rsp)
  417ffa:	0f 11 84 24 a0 00 00 00 	movups	%xmm0, 160(%rsp)
  418002:	0f 11 84 24 b0 00 00 00 	movups	%xmm0, 176(%rsp)
  41800a:	64 48 8b 14 25 f8 ff ff ff 	movq	%fs:-8, %rdx
  418013:	48 8b 5a 30 	movq	48(%rdx), %rbx
  418017:	8b b3 00 01 00 00 	movl	256(%rbx), %esi
  41801d:	85 f6 	testl	%esi, %esi
  41801f:	75 16 	jne	22 <runtime.(*mspan).sweep+0x77>
  418021:	8b b3 e8 00 00 00 	movl	232(%rbx), %esi
  418027:	85 f6 	testl	%esi, %esi
  418029:	75 0c 	jne	12 <runtime.(*mspan).sweep+0x77>
  41802b:	48 8b 1b 	movq	(%rbx), %rbx
  41802e:	48 39 da 	cmpq	%rbx, %rdx
  418031:	0f 85 d7 08 00 00 	jne	2263 <runtime.(*mspan).sweep+0x94e>
  418037:	8b 1d 83 52 09 00 	movl	610947(%rip), %ebx
  41803d:	89 5c 24 30 	movl	%ebx, 48(%rsp)
  418041:	48 8b b4 24 d0 00 00 00 	movq	208(%rsp), %rsi
  418049:	0f b6 7e 64 	movzbl	100(%rsi), %edi
  41804d:	40 88 7c 24 2b 	movb	%dil, 43(%rsp)
  418052:	40 80 ff 01 	cmpb	$1, %dil
  418056:	0f 85 09 08 00 00 	jne	2057 <runtime.(*mspan).sweep+0x8a5>
  41805c:	44 8b 46 58 	movl	88(%rsi), %r8d
  418060:	44 8d 4b ff 	leal	-1(%rbx), %r9d
  418064:	45 39 c1 	cmpl	%r8d, %r9d
  418067:	0f 85 f8 07 00 00 	jne	2040 <runtime.(*mspan).sweep+0x8a5>
  41806d:	44 89 4c 24 34 	movl	%r9d, 52(%rsp)
  418072:	0f b6 3d 57 b7 09 00 	movzbl	636759(%rip), %edi
  418079:	40 84 ff 	testb	%dil, %dil
  41807c:	0f 85 0b 06 00 00 	jne	1547 <runtime.(*mspan).sweep+0x6cd>
  418082:	48 8b 7e 20 	movq	32(%rsi), %rdi
  418086:	4c 8d 05 d3 52 09 00 	leaq	611027(%rip), %r8
  41808d:	f0 	lock
  41808e:	49 0f c1 38 	xaddq	%rdi, (%r8)
  418092:	48 8b 52 30 	movq	48(%rdx), %rdx
  418096:	48 8d be 90 00 00 00 	leaq	144(%rsi), %rdi
  41809d:	84 07 	testb	%al, (%rdi)
  41809f:	44 0f b6 46 62 	movzbl	98(%rsi), %r8d
  4180a4:	44 88 44 24 26 	movb	%r8b, 38(%rsp)
  4180a9:	4c 8b 56 68 	movq	104(%rsi), %r10
  4180ad:	4c 89 54 24 38 	movq	%r10, 56(%rsp)
  4180b2:	48 8b 92 60 01 00 00 	movq	352(%rdx), %rdx
  4180b9:	48 89 94 24 80 00 00 00 	movq	%rdx, 128(%rsp)
  4180c1:	4c 8b 9e 90 00 00 00 	movq	144(%rsi), %r11
  4180c8:	eb 09 	jmp	9 <runtime.(*mspan).sweep+0x113>
  4180ca:	4c 89 df 	movq	%r11, %rdi
  4180cd:	49 89 d3 	movq	%rdx, %r11
  4180d0:	4c 89 f2 	movq	%r14, %rdx
  4180d3:	4d 85 db 	testq	%r11, %r11
  4180d6:	0f 84 46 01 00 00 	je	326 <runtime.(*mspan).sweep+0x262>
  4180dc:	41 0f b7 43 08 	movzwl	8(%r11), %eax
  4180e1:	4d 85 d2 	testq	%r10, %r10
  4180e4:	0f 84 74 07 00 00 	je	1908 <runtime.(*mspan).sweep+0x89e>
  4180ea:	48 89 d1 	movq	%rdx, %rcx
  4180ed:	31 d2 	xorl	%edx, %edx
  4180ef:	49 f7 f2 	divq	%r10
  4180f2:	48 8b 56 50 	movq	80(%rsi), %rdx
  4180f6:	49 89 c4 	movq	%rax, %r12
  4180f9:	48 c1 e8 03 	shrq	$3, %rax
  4180fd:	4c 8d 2c 10 	leaq	(%rax,%rdx), %r13
  418101:	41 84 45 00 	testb	%al, (%r13)
  418105:	4d 89 e5 	movq	%r12, %r13
  418108:	4d 0f af e2 	imulq	%r10, %r12
  41810c:	49 83 e5 07 	andq	$7, %r13
  418110:	49 89 ce 	movq	%rcx, %r14
  418113:	4c 89 e9 	movq	%r13, %rcx
  418116:	41 bf 01 00 00 00 	movl	$1, %r15d
  41811c:	41 d3 e7 	shll	%cl, %r15d
  41811f:	44 0f b6 2c 10 	movzbl	(%rax,%rdx), %r13d
  418124:	45 84 fd 	testb	%r15b, %r13b
  418127:	74 05 	je	5 <runtime.(*mspan).sweep+0x16e>
  418129:	49 8b 13 	movq	(%r11), %rdx
  41812c:	eb 9c 	jmp	-100 <runtime.(*mspan).sweep+0x10a>
  41812e:	4d 01 d4 	addq	%r10, %r12
  418131:	4c 89 d9 	movq	%r11, %rcx
  418134:	eb 0b 	jmp	11 <runtime.(*mspan).sweep+0x181>
  418136:	4d 8b 1b 	movq	(%r11), %r11
  418139:	4c 8b b4 24 80 00 00 00 	movq	128(%rsp), %r14
  418141:	4d 85 db 	testq	%r11, %r11
  418144:	0f 84 d1 00 00 00 	je	209 <runtime.(*mspan).sweep+0x25b>
  41814a:	45 0f b7 73 08 	movzwl	8(%r11), %r14d
  41814f:	4d 39 e6 	cmpq	%r12, %r14
  418152:	0f 83 bc 00 00 00 	jae	188 <runtime.(*mspan).sweep+0x254>
  418158:	45 0f b6 73 0a 	movzbl	10(%r11), %r14d
  41815d:	41 80 fe 01 	cmpb	$1, %r14b
  418161:	75 d3 	jne	-45 <runtime.(*mspan).sweep+0x176>
  418163:	45 09 fd 	orl	%r15d, %r13d
  418166:	44 88 2c 10 	movb	%r13b, (%rax,%rdx)
  41816a:	b8 01 00 00 00 	movl	$1, %eax
  41816f:	4c 89 64 24 48 	movq	%r12, 72(%rsp)
  418174:	88 44 24 28 	movb	%al, 40(%rsp)
  418178:	eb 06 	jmp	6 <runtime.(*mspan).sweep+0x1c0>
  41817a:	48 89 cf 	movq	%rcx, %rdi
  41817d:	48 89 d1 	movq	%rdx, %rcx
  418180:	48 85 c9 	testq	%rcx, %rcx
  418183:	74 7c 	je	124 <runtime.(*mspan).sweep+0x241>
  418185:	0f b7 51 08 	movzwl	8(%rcx), %edx
  418189:	4c 39 e2 	cmpq	%r12, %rdx
  41818c:	73 73 	jae	115 <runtime.(*mspan).sweep+0x241>
  41818e:	4c 8b 5e 18 	movq	24(%rsi), %r11
  418192:	4c 01 da 	addq	%r11, %rdx
  418195:	44 0f b6 59 0a 	movzbl	10(%rcx), %r11d
  41819a:	41 80 fb 01 	cmpb	$1, %r11b
  41819e:	74 09 	je	9 <runtime.(*mspan).sweep+0x1e9>
  4181a0:	84 c0 	testb	%al, %al
  4181a2:	74 05 	je	5 <runtime.(*mspan).sweep+0x1e9>
  4181a4:	48 8b 11 	movq	(%rcx), %rdx
  4181a7:	eb d1 	jmp	-47 <runtime.(*mspan).sweep+0x1ba>
  4181a9:	48 89 7c 24 70 	movq	%rdi, 112(%rsp)
  4181ae:	48 8b 01 	movq	(%rcx), %rax
  4181b1:	48 89 44 24 78 	movq	%rax, 120(%rsp)
  4181b6:	48 89 07 	movq	%rax, (%rdi)
  4181b9:	48 89 0c 24 	movq	%rcx, (%rsp)
  4181bd:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  4181c2:	4c 89 54 24 10 	movq	%r10, 16(%rsp)
  4181c7:	e8 14 46 00 00 	callq	17940 <runtime.freespecial>
  4181cc:	0f b6 44 24 28 	movzbl	40(%rsp), %eax
  4181d1:	8b 5c 24 30 	movl	48(%rsp), %ebx
  4181d5:	48 8b b4 24 d0 00 00 00 	movq	208(%rsp), %rsi
  4181dd:	44 0f b6 44 24 26 	movzbl	38(%rsp), %r8d
  4181e3:	44 8b 4c 24 34 	movl	52(%rsp), %r9d
  4181e8:	4c 8b 54 24 38 	movq	56(%rsp), %r10
  4181ed:	4c 8b 64 24 48 	movq	72(%rsp), %r12
  4181f2:	48 8b 54 24 78 	movq	120(%rsp), %rdx
  4181f7:	48 8b 4c 24 70 	movq	112(%rsp), %rcx
  4181fc:	e9 79 ff ff ff 	jmp	-135 <runtime.(*mspan).sweep+0x1ba>
  418201:	4c 8b b4 24 80 00 00 00 	movq	128(%rsp), %r14
  418209:	48 89 ca 	movq	%rcx, %rdx
  41820c:	49 89 fb 	movq	%rdi, %r11
  41820f:	e9 b6 fe ff ff 	jmp	-330 <runtime.(*mspan).sweep+0x10a>
  418214:	31 c0 	xorl	%eax, %eax
  418216:	e9 54 ff ff ff 	jmp	-172 <runtime.(*mspan).sweep+0x1af>
  41821b:	31 c0 	xorl	%eax, %eax
  41821d:	e9 4d ff ff ff 	jmp	-179 <runtime.(*mspan).sweep+0x1af>
  418222:	8b 05 98 b8 0a 00 	movl	702616(%rip), %eax
  418228:	85 c0 	testl	%eax, %eax
  41822a:	0f 84 5a 01 00 00 	je	346 <runtime.(*mspan).sweep+0x3ca>
  418230:	48 8b 46 50 	movq	80(%rsi), %rax
  418234:	48 89 84 24 90 00 00 00 	movq	%rax, 144(%rsp)
  41823c:	c6 84 24 98 00 00 00 01 	movb	$1, 152(%rsp)
  418244:	48 c7 84 24 a0 00 00 00 00 00 00 00 	movq	$0, 160(%rsp)
  418250:	48 8b 46 48 	movq	72(%rsi), %rax
  418254:	48 89 84 24 a8 00 00 00 	movq	%rax, 168(%rsp)
  41825c:	c6 84 24 b0 00 00 00 01 	movb	$1, 176(%rsp)
  418264:	48 c7 84 24 b8 00 00 00 00 00 00 00 	movq	$0, 184(%rsp)
  418270:	31 c0 	xorl	%eax, %eax
  418272:	eb 0b 	jmp	11 <runtime.(*mspan).sweep+0x2bf>
  418274:	48 ff 84 24 b8 00 00 00 	incq	184(%rsp)
  41827c:	48 ff c0 	incq	%rax
  41827f:	48 8b 4e 38 	movq	56(%rsi), %rcx
  418283:	48 39 c8 	cmpq	%rcx, %rax
  418286:	0f 83 fe 00 00 00 	jae	254 <runtime.(*mspan).sweep+0x3ca>
  41828c:	48 8b 8c 24 90 00 00 00 	movq	144(%rsp), %rcx
  418294:	0f b6 bc 24 98 00 00 00 	movzbl	152(%rsp), %edi
  41829c:	0f b6 09 	movzbl	(%rcx), %ecx
  41829f:	40 84 f9 	testb	%dil, %cl
  4182a2:	74 5a 	je	90 <runtime.(*mspan).sweep+0x33e>
  4182a4:	0f b6 8c 24 98 00 00 00 	movzbl	152(%rsp), %ecx
  4182ac:	80 f9 80 	cmpb	$-128, %cl
  4182af:	75 42 	jne	66 <runtime.(*mspan).sweep+0x333>
  4182b1:	48 ff 84 24 90 00 00 00 	incq	144(%rsp)
  4182b9:	c6 84 24 98 00 00 00 01 	movb	$1, 152(%rsp)
  4182c1:	48 ff 84 24 a0 00 00 00 	incq	160(%rsp)
  4182c9:	0f b6 8c 24 b0 00 00 00 	movzbl	176(%rsp), %ecx
  4182d1:	80 f9 80 	cmpb	$-128, %cl
  4182d4:	75 12 	jne	18 <runtime.(*mspan).sweep+0x328>
  4182d6:	48 ff 84 24 a8 00 00 00 	incq	168(%rsp)
  4182de:	c6 84 24 b0 00 00 00 01 	movb	$1, 176(%rsp)
  4182e6:	eb 8c 	jmp	-116 <runtime.(*mspan).sweep+0x2b4>
  4182e8:	d1 e1 	shll	%ecx
  4182ea:	88 8c 24 b0 00 00 00 	movb	%cl, 176(%rsp)
  4182f1:	eb 81 	jmp	-127 <runtime.(*mspan).sweep+0x2b4>
  4182f3:	d1 e1 	shll	%ecx
  4182f5:	88 8c 24 98 00 00 00 	movb	%cl, 152(%rsp)
  4182fc:	eb c3 	jmp	-61 <runtime.(*mspan).sweep+0x301>
  4182fe:	48 8b 8c 24 b8 00 00 00 	movq	184(%rsp), %rcx
  418306:	48 8b 7e 30 	movq	48(%rsi), %rdi
  41830a:	48 39 f9 	cmpq	%rdi, %rcx
  41830d:	73 5e 	jae	94 <runtime.(*mspan).sweep+0x3ad>
  41830f:	48 8b 4e 68 	movq	104(%rsi), %rcx
  418313:	48 0f af c8 	imulq	%rax, %rcx
  418317:	48 8d 7e 18 	leaq	24(%rsi), %rdi
  41831b:	48 03 0f 	addq	(%rdi), %rcx
  41831e:	8b 3d 9c b7 0a 00 	movl	702364(%rip), %edi
  418324:	85 ff 	testl	%edi, %edi
  418326:	0f 84 78 ff ff ff 	je	-136 <runtime.(*mspan).sweep+0x2e4>
  41832c:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  418331:	48 89 0c 24 	movq	%rcx, (%rsp)
  418335:	4c 89 54 24 08 	movq	%r10, 8(%rsp)
  41833a:	e8 c1 5a 00 00 	callq	23233 <runtime.tracefree>
  41833f:	48 8b 44 24 40 	movq	64(%rsp), %rax
  418344:	48 8b 94 24 80 00 00 00 	movq	128(%rsp), %rdx
  41834c:	8b 5c 24 30 	movl	48(%rsp), %ebx
  418350:	48 8b b4 24 d0 00 00 00 	movq	208(%rsp), %rsi
  418358:	44 0f b6 44 24 26 	movzbl	38(%rsp), %r8d
  41835e:	44 8b 4c 24 34 	movl	52(%rsp), %r9d
  418363:	4c 8b 54 24 38 	movq	56(%rsp), %r10
  418368:	e9 37 ff ff ff 	jmp	-201 <runtime.(*mspan).sweep+0x2e4>
  41836d:	48 8b 8c 24 a8 00 00 00 	movq	168(%rsp), %rcx
  418375:	0f b6 bc 24 b0 00 00 00 	movzbl	176(%rsp), %edi
  41837d:	0f b6 09 	movzbl	(%rcx), %ecx
  418380:	40 84 f9 	testb	%dil, %cl
  418383:	75 8a 	jne	-118 <runtime.(*mspan).sweep+0x34f>
  418385:	e9 1a ff ff ff 	jmp	-230 <runtime.(*mspan).sweep+0x2e4>
  41838a:	48 89 34 24 	movq	%rsi, (%rsp)
  41838e:	e8 ad 4d ff ff 	callq	-45651 <runtime.(*mspan).countAlloc>
  418393:	48 8b 44 24 08 	movq	8(%rsp), %rax
  418398:	0f b6 4c 24 26 	movzbl	38(%rsp), %ecx
  41839d:	89 ca 	movl	%ecx, %edx
  41839f:	d0 e9 	shrb	%cl
  4183a1:	f6 c1 ff 	testb	$-1, %cl
  4183a4:	0f 85 d4 02 00 00 	jne	724 <runtime.(*mspan).sweep+0x6be>
  4183aa:	66 85 c0 	testw	%ax, %ax
  4183ad:	0f 85 bc 02 00 00 	jne	700 <runtime.(*mspan).sweep+0x6af>
  4183b3:	48 8b 9c 24 d0 00 00 00 	movq	208(%rsp), %rbx
  4183bb:	c6 43 65 01 	movb	$1, 101(%rbx)
  4183bf:	be 01 00 00 00 	movl	$1, %esi
  4183c4:	0f b7 7b 60 	movzwl	96(%rbx), %edi
  4183c8:	41 89 f8 	movl	%edi, %r8d
  4183cb:	29 c7 	subl	%eax, %edi
  4183cd:	66 89 7c 24 2c 	movw	%di, 44(%rsp)
  4183d2:	66 44 39 c0 	cmpw	%r8w, %ax
  4183d6:	0f 87 9f 03 00 00 	ja	927 <runtime.(*mspan).sweep+0x7bb>
  4183dc:	88 4c 24 2a 	movb	%cl, 42(%rsp)
  4183e0:	40 88 74 24 29 	movb	%sil, 41(%rsp)
  4183e5:	66 89 43 60 	movw	%ax, 96(%rbx)
  4183e9:	48 89 1c 24 	movq	%rbx, (%rsp)
  4183ed:	e8 de 3a ff ff 	callq	-50466 <runtime.(*mspan).nextFreeIndex>
  4183f2:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4183f7:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  4183fc:	48 8b 8c 24 d0 00 00 00 	movq	208(%rsp), %rcx
  418404:	48 8b 51 38 	movq	56(%rcx), %rdx
  418408:	48 89 54 24 60 	movq	%rdx, 96(%rsp)
  41840d:	48 c7 41 30 00 00 00 00 	movq	$0, 48(%rcx)
  418415:	0f b6 1d b4 b3 09 00 	movzbl	635828(%rip), %ebx
  41841c:	84 db 	testb	%bl, %bl
  41841e:	74 34 	je	52 <runtime.(*mspan).sweep+0x494>
  418420:	64 48 8b 1c 25 f8 ff ff ff 	movq	%fs:-8, %rbx
  418429:	48 8b 5b 30 	movq	48(%rbx), %rbx
  41842d:	48 8b 9b d0 00 00 00 	movq	208(%rbx), %rbx
  418434:	84 03 	testb	%al, (%rbx)
  418436:	0f b7 74 24 2c 	movzwl	44(%rsp), %esi
  41843b:	0f b7 fe 	movzwl	%si, %edi
  41843e:	4c 8b 41 68 	movq	104(%rcx), %r8
  418442:	4c 0f af c7 	imulq	%rdi, %r8
  418446:	4c 03 83 30 12 00 00 	addq	4656(%rbx), %r8
  41844d:	4c 89 83 30 12 00 00 	movq	%r8, 4656(%rbx)
  418454:	48 8b 41 50 	movq	80(%rcx), %rax
  418458:	48 89 41 48 	movq	%rax, 72(%rcx)
  41845c:	48 8b 41 38 	movq	56(%rcx), %rax
  418460:	48 89 04 24 	movq	%rax, (%rsp)
  418464:	e8 d7 44 00 00 	callq	17623 <runtime.newMarkBits>
  418469:	48 8b 44 24 08 	movq	8(%rsp), %rax
  41846e:	48 8b 8c 24 d0 00 00 00 	movq	208(%rsp), %rcx
  418476:	48 89 41 50 	movq	%rax, 80(%rcx)
  41847a:	48 89 0c 24 	movq	%rcx, (%rsp)
  41847e:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  418487:	e8 24 3a ff ff 	callq	-50652 <runtime.(*mspan).refillAllocCache>
  41848c:	0f b6 44 24 29 	movzbl	41(%rsp), %eax
  418491:	84 c0 	testb	%al, %al
  418493:	0f 84 b7 01 00 00 	je	439 <runtime.(*mspan).sweep+0x690>
  418499:	48 8b 8c 24 d0 00 00 00 	movq	208(%rsp), %rcx
  4184a1:	0f b6 51 64 	movzbl	100(%rcx), %edx
  4184a5:	88 54 24 2b 	movb	%dl, 43(%rsp)
  4184a9:	80 fa 01 	cmpb	$1, %dl
  4184ac:	0f 85 20 02 00 00 	jne	544 <runtime.(*mspan).sweep+0x712>
  4184b2:	8b 59 58 	movl	88(%rcx), %ebx
  4184b5:	8b 74 24 34 	movl	52(%rsp), %esi
  4184b9:	39 de 	cmpl	%ebx, %esi
  4184bb:	0f 85 11 02 00 00 	jne	529 <runtime.(*mspan).sweep+0x712>
  4184c1:	8b 54 24 30 	movl	48(%rsp), %edx
  4184c5:	89 d3 	movl	%edx, %ebx
  4184c7:	87 51 58 	xchgl	%edx, 88(%rcx)
  4184ca:	0f b7 54 24 2c 	movzwl	44(%rsp), %edx
  4184cf:	66 85 d2 	testw	%dx, %dx
  4184d2:	0f 86 71 01 00 00 	jbe	369 <runtime.(*mspan).sweep+0x689>
  4184d8:	0f b6 74 24 2a 	movzbl	42(%rsp), %esi
  4184dd:	40 f6 c6 ff 	testb	$-1, %sil
  4184e1:	0f 84 dd 00 00 00 	je	221 <runtime.(*mspan).sweep+0x604>
  4184e7:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  4184ef:	84 00 	testb	%al, (%rax)
  4184f1:	48 0f be f6 	movsbq	%sil, %rsi
  4184f5:	48 83 fe 43 	cmpq	$67, %rsi
  4184f9:	0f 83 cc 01 00 00 	jae	460 <runtime.(*mspan).sweep+0x70b>
  4184ff:	48 8b bc f0 b0 04 00 00 	movq	1200(%rax,%rsi,8), %rdi
  418507:	0f b7 d2 	movzwl	%dx, %edx
  41850a:	48 01 fa 	addq	%rdi, %rdx
  41850d:	48 89 94 f0 b0 04 00 00 	movq	%rdx, 1200(%rax,%rsi,8)
  418515:	0f b6 44 24 26 	movzbl	38(%rsp), %eax
  41851a:	0f b6 c0 	movzbl	%al, %eax
  41851d:	48 3d 86 00 00 00 	cmpq	$134, %rax
  418523:	0f 83 9b 01 00 00 	jae	411 <runtime.(*mspan).sweep+0x704>
  418529:	48 c1 e0 06 	shlq	$6, %rax
  41852d:	48 8d 15 6c 3d 09 00 	leaq	605548(%rip), %rdx
  418534:	48 8d 84 02 50 13 00 00 	leaq	4944(%rdx,%rax), %rax
  41853c:	48 89 04 24 	movq	%rax, (%rsp)
  418540:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  418545:	0f b6 84 24 d8 00 00 00 	movzbl	216(%rsp), %eax
  41854d:	88 44 24 10 	movb	%al, 16(%rsp)
  418551:	48 8d 44 24 11 	leaq	17(%rsp), %rax
  418556:	48 8b 54 24 68 	movq	104(%rsp), %rdx
  41855b:	48 8b 5c 24 60 	movq	96(%rsp), %rbx
  418560:	48 39 da 	cmpq	%rbx, %rdx
  418563:	0f 94 00 	sete	(%rax)
  418566:	e8 15 66 ff ff 	callq	-39403 <runtime.(*mcentral).freeSpan>
  41856b:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  418570:	84 c0 	testb	%al, %al
  418572:	74 17 	je	23 <runtime.(*mspan).sweep+0x5cb>
  418574:	88 84 24 e0 00 00 00 	movb	%al, 224(%rsp)
  41857b:	48 8b ac 24 c0 00 00 00 	movq	192(%rsp), %rbp
  418583:	48 81 c4 c8 00 00 00 	addq	$200, %rsp
  41858a:	c3 	retq
  41858b:	88 44 24 27 	movb	%al, 39(%rsp)
  41858f:	8b 44 24 30 	movl	48(%rsp), %eax
  418593:	d1 e8 	shrl	%eax
  418595:	83 e0 01 	andl	$1, %eax
  418598:	48 8d 04 80 	leaq	(%rax,%rax,4), %rax
  41859c:	48 8d 0d 5d 4d 09 00 	leaq	609629(%rip), %rcx
  4185a3:	48 8d 04 c1 	leaq	(%rcx,%rax,8), %rax
  4185a7:	48 89 04 24 	movq	%rax, (%rsp)
  4185ab:	48 8b 84 24 d0 00 00 00 	movq	208(%rsp), %rax
  4185b3:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4185b8:	e8 d3 04 00 00 	callq	1235 <runtime.(*gcSweepBuf).push>
  4185bd:	0f b6 44 24 27 	movzbl	39(%rsp), %eax
  4185c2:	eb b0 	jmp	-80 <runtime.(*mspan).sweep+0x5b4>
  4185c4:	84 c0 	testb	%al, %al
  4185c6:	74 7a 	je	122 <runtime.(*mspan).sweep+0x682>
  4185c8:	8b 05 fa b4 0a 00 	movl	701690(%rip), %eax
  4185ce:	85 c0 	testl	%eax, %eax
  4185d0:	7e 51 	jle	81 <runtime.(*mspan).sweep+0x663>
  4185d2:	48 c7 81 80 00 00 00 00 00 00 00 	movq	$0, 128(%rcx)
  4185dd:	48 8b 41 18 	movq	24(%rcx), %rax
  4185e1:	48 89 04 24 	movq	%rax, (%rsp)
  4185e5:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4185ea:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4185ef:	e8 9c 6d ff ff 	callq	-37476 <runtime.sysFault>
  4185f4:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  4185fc:	48 ff 80 a8 04 00 00 	incq	1192(%rax)
  418603:	48 8b 88 a0 04 00 00 	movq	1184(%rax), %rcx
  41860a:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  41860f:	48 01 d1 	addq	%rdx, %rcx
  418612:	48 89 88 a0 04 00 00 	movq	%rcx, 1184(%rax)
  418619:	b8 01 00 00 00 	movl	$1, %eax
  41861e:	e9 4d ff ff ff 	jmp	-179 <runtime.(*mspan).sweep+0x5b0>
  418623:	48 8d 05 76 3c 09 00 	leaq	605302(%rip), %rax
  41862a:	48 89 04 24 	movq	%rax, (%rsp)
  41862e:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  418633:	c7 44 24 10 01 00 00 00 	movl	$1, 16(%rsp)
  41863b:	e8 50 2e 00 00 	callq	11856 <runtime.(*mheap).freeSpan>
  418640:	eb b2 	jmp	-78 <runtime.(*mspan).sweep+0x634>
  418642:	31 c0 	xorl	%eax, %eax
  418644:	e9 27 ff ff ff 	jmp	-217 <runtime.(*mspan).sweep+0x5b0>
  418649:	84 c0 	testb	%al, %al
  41864b:	e9 76 ff ff ff 	jmp	-138 <runtime.(*mspan).sweep+0x606>
  418650:	0f b7 4c 24 2c 	movzwl	44(%rsp), %ecx
  418655:	66 85 c9 	testw	%cx, %cx
  418658:	0f 84 3b fe ff ff 	je	-453 <runtime.(*mspan).sweep+0x4d9>
  41865e:	48 8b 8c 24 d0 00 00 00 	movq	208(%rsp), %rcx
  418666:	8b 5c 24 30 	movl	48(%rsp), %ebx
  41866a:	e9 5b fe ff ff 	jmp	-421 <runtime.(*mspan).sweep+0x50a>
  41866f:	48 8b 9c 24 d0 00 00 00 	movq	208(%rsp), %rbx
  418677:	31 f6 	xorl	%esi, %esi
  418679:	e9 46 fd ff ff 	jmp	-698 <runtime.(*mspan).sweep+0x404>
  41867e:	48 8b 9c 24 d0 00 00 00 	movq	208(%rsp), %rbx
  418686:	31 f6 	xorl	%esi, %esi
  418688:	e9 37 fd ff ff 	jmp	-713 <runtime.(*mspan).sweep+0x404>
  41868d:	48 89 94 24 88 00 00 00 	movq	%rdx, 136(%rsp)
  418695:	48 8b 46 20 	movq	32(%rsi), %rax
  418699:	48 c1 e0 0d 	shlq	$13, %rax
  41869d:	48 89 04 24 	movq	%rax, (%rsp)
  4186a1:	e8 5a 1f 02 00 	callq	139098 <runtime.traceGCSweepSpan>
  4186a6:	48 8b 94 24 88 00 00 00 	movq	136(%rsp), %rdx
  4186ae:	8b 5c 24 30 	movl	48(%rsp), %ebx
  4186b2:	48 8b b4 24 d0 00 00 00 	movq	208(%rsp), %rsi
  4186ba:	44 8b 4c 24 34 	movl	52(%rsp), %r9d
  4186bf:	e9 be f9 ff ff 	jmp	-1602 <runtime.(*mspan).sweep+0xc2>
  4186c4:	e8 77 73 00 00 	callq	29559 <runtime.panicindex>
  4186c9:	0f 0b 	ud2
  4186cb:	e8 70 73 00 00 	callq	29552 <runtime.panicindex>
  4186d0:	0f 0b 	ud2
  4186d2:	8b 41 58 	movl	88(%rcx), %eax
  4186d5:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  4186da:	e8 21 94 00 00 	callq	37921 <runtime.printlock>
  4186df:	48 8d 05 41 27 05 00 	leaq	337729(%rip), %rax
  4186e6:	48 89 04 24 	movq	%rax, (%rsp)
  4186ea:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  4186f3:	e8 48 9d 00 00 	callq	40264 <runtime.printstring>
  4186f8:	0f b6 44 24 2b 	movzbl	43(%rsp), %eax
  4186fd:	0f b6 c0 	movzbl	%al, %eax
  418700:	48 89 04 24 	movq	%rax, (%rsp)
  418704:	e8 67 9a 00 00 	callq	39527 <runtime.printuint>
  418709:	48 8d 05 d4 1b 05 00 	leaq	334804(%rip), %rax
  418710:	48 89 04 24 	movq	%rax, (%rsp)
  418714:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  41871d:	e8 1e 9d 00 00 	callq	40222 <runtime.printstring>
  418722:	48 8b 44 24 58 	movq	88(%rsp), %rax
  418727:	48 89 04 24 	movq	%rax, (%rsp)
  41872b:	e8 40 9a 00 00 	callq	39488 <runtime.printuint>
  418730:	48 8d 05 cb 22 05 00 	leaq	336587(%rip), %rax
  418737:	48 89 04 24 	movq	%rax, (%rsp)
  41873b:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  418744:	e8 f7 9c 00 00 	callq	40183 <runtime.printstring>
  418749:	8b 44 24 30 	movl	48(%rsp), %eax
  41874d:	48 89 04 24 	movq	%rax, (%rsp)
  418751:	e8 1a 9a 00 00 	callq	39450 <runtime.printuint>
  418756:	e8 35 96 00 00 	callq	38453 <runtime.printnl>
  41875b:	e8 20 94 00 00 	callq	37920 <runtime.printunlock>
  418760:	48 8d 05 9f 49 05 00 	leaq	346527(%rip), %rax
  418767:	48 89 04 24 	movq	%rax, (%rsp)
  41876b:	48 c7 44 24 08 27 00 00 00 	movq	$39, 8(%rsp)
  418774:	e8 57 8a 00 00 	callq	35415 <runtime.throw>
  418779:	0f 0b 	ud2
  41877b:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  418780:	66 44 89 44 24 2e 	movw	%r8w, 46(%rsp)
  418786:	48 8b 43 38 	movq	56(%rbx), %rax
  41878a:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  41878f:	e8 6c 93 00 00 	callq	37740 <runtime.printlock>
  418794:	48 8d 05 d7 23 05 00 	leaq	336855(%rip), %rax
  41879b:	48 89 04 24 	movq	%rax, (%rsp)
  41879f:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  4187a8:	e8 93 9c 00 00 	callq	40083 <runtime.printstring>
  4187ad:	48 8b 44 24 68 	movq	104(%rsp), %rax
  4187b2:	48 89 04 24 	movq	%rax, (%rsp)
  4187b6:	e8 b5 99 00 00 	callq	39349 <runtime.printuint>
  4187bb:	48 8d 05 f5 17 05 00 	leaq	333813(%rip), %rax
  4187c2:	48 89 04 24 	movq	%rax, (%rsp)
  4187c6:	48 c7 44 24 08 08 00 00 00 	movq	$8, 8(%rsp)
  4187cf:	e8 6c 9c 00 00 	callq	40044 <runtime.printstring>
  4187d4:	48 8b 44 24 50 	movq	80(%rsp), %rax
  4187d9:	0f b7 c0 	movzwl	%ax, %eax
  4187dc:	48 89 04 24 	movq	%rax, (%rsp)
  4187e0:	e8 8b 99 00 00 	callq	39307 <runtime.printuint>
  4187e5:	48 8d 05 5e 2a 05 00 	leaq	338526(%rip), %rax
  4187ec:	48 89 04 24 	movq	%rax, (%rsp)
  4187f0:	48 c7 44 24 08 15 00 00 00 	movq	$21, 8(%rsp)
  4187f9:	e8 42 9c 00 00 	callq	40002 <runtime.printstring>
  4187fe:	0f b7 44 24 2e 	movzwl	46(%rsp), %eax
  418803:	0f b7 c0 	movzwl	%ax, %eax
  418806:	48 89 04 24 	movq	%rax, (%rsp)
  41880a:	e8 61 99 00 00 	callq	39265 <runtime.printuint>
  41880f:	48 8d 05 b1 17 05 00 	leaq	333745(%rip), %rax
  418816:	48 89 04 24 	movq	%rax, (%rsp)
  41881a:	48 c7 44 24 08 08 00 00 00 	movq	$8, 8(%rsp)
  418823:	e8 18 9c 00 00 	callq	39960 <runtime.printstring>
  418828:	0f b7 44 24 2c 	movzwl	44(%rsp), %eax
  41882d:	0f b7 c0 	movzwl	%ax, %eax
  418830:	48 89 04 24 	movq	%rax, (%rsp)
  418834:	e8 37 99 00 00 	callq	39223 <runtime.printuint>
  418839:	e8 52 95 00 00 	callq	38226 <runtime.printnl>
  41883e:	e8 3d 93 00 00 	callq	37693 <runtime.printunlock>
  418843:	48 8d 05 f9 40 05 00 	leaq	344313(%rip), %rax
  41884a:	48 89 04 24 	movq	%rax, (%rsp)
  41884e:	48 c7 44 24 08 20 00 00 00 	movq	$32, 8(%rsp)
  418857:	e8 74 89 00 00 	callq	35188 <runtime.throw>
  41885c:	0f 0b 	ud2
  41885e:	e8 bd 72 00 00 	callq	29373 <runtime.panicdivide>
  418863:	0f 0b 	ud2
  418865:	8b 46 58 	movl	88(%rsi), %eax
  418868:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  41886d:	e8 8e 92 00 00 	callq	37518 <runtime.printlock>
  418872:	48 8d 05 ae 25 05 00 	leaq	337326(%rip), %rax
  418879:	48 89 04 24 	movq	%rax, (%rsp)
  41887d:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  418886:	e8 b5 9b 00 00 	callq	39861 <runtime.printstring>
  41888b:	0f b6 44 24 2b 	movzbl	43(%rsp), %eax
  418890:	0f b6 c0 	movzbl	%al, %eax
  418893:	48 89 04 24 	movq	%rax, (%rsp)
  418897:	e8 d4 98 00 00 	callq	39124 <runtime.printuint>
  41889c:	48 8d 05 41 1a 05 00 	leaq	334401(%rip), %rax
  4188a3:	48 89 04 24 	movq	%rax, (%rsp)
  4188a7:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  4188b0:	e8 8b 9b 00 00 	callq	39819 <runtime.printstring>
  4188b5:	48 8b 44 24 58 	movq	88(%rsp), %rax
  4188ba:	48 89 04 24 	movq	%rax, (%rsp)
  4188be:	e8 ad 98 00 00 	callq	39085 <runtime.printuint>
  4188c3:	48 8d 05 38 21 05 00 	leaq	336184(%rip), %rax
  4188ca:	48 89 04 24 	movq	%rax, (%rsp)
  4188ce:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  4188d7:	e8 64 9b 00 00 	callq	39780 <runtime.printstring>
  4188dc:	8b 44 24 30 	movl	48(%rsp), %eax
  4188e0:	48 89 04 24 	movq	%rax, (%rsp)
  4188e4:	e8 87 98 00 00 	callq	39047 <runtime.printuint>
  4188e9:	e8 a2 94 00 00 	callq	38050 <runtime.printnl>
  4188ee:	e8 8d 92 00 00 	callq	37517 <runtime.printunlock>
  4188f3:	48 8d 05 e5 33 05 00 	leaq	340965(%rip), %rax
  4188fa:	48 89 04 24 	movq	%rax, (%rsp)
  4188fe:	48 c7 44 24 08 1b 00 00 00 	movq	$27, 8(%rsp)
  418907:	e8 c4 88 00 00 	callq	35012 <runtime.throw>
  41890c:	0f 0b 	ud2
  41890e:	48 8d 05 c1 36 05 00 	leaq	341697(%rip), %rax
  418915:	48 89 04 24 	movq	%rax, (%rsp)
  418919:	48 c7 44 24 08 1c 00 00 00 	movq	$28, 8(%rsp)
  418922:	e8 a9 88 00 00 	callq	34985 <runtime.throw>
  418927:	0f 0b 	ud2
  418929:	e8 42 bc 02 00 	callq	179266 <runtime.morestack_noctxt>
  41892e:	e9 8d f6 ff ff 	jmp	-2419 <runtime.(*mspan).sweep>
  418933:	cc 	int3
  418934:	cc 	int3
  418935:	cc 	int3
  418936:	cc 	int3
  418937:	cc 	int3
  418938:	cc 	int3
  418939:	cc 	int3
  41893a:	cc 	int3
  41893b:	cc 	int3
  41893c:	cc 	int3
  41893d:	cc 	int3
  41893e:	cc 	int3
  41893f:	cc 	int3

runtime.deductSweepCredit:
  418940:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  418949:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41894d:	0f 86 2f 01 00 00 	jbe	303 <runtime.deductSweepCredit+0x142>
  418953:	48 83 ec 20 	subq	$32, %rsp
  418957:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  41895c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  418961:	f2 0f 10 05 0f 4a 09 00 	movsd	608783(%rip), %xmm0
  418969:	0f 57 c9 	xorps	%xmm1, %xmm1
  41896c:	66 0f 2e c1 	ucomisd	%xmm1, %xmm0
  418970:	75 06 	jne	6 <runtime.deductSweepCredit+0x38>
  418972:	0f 8b 00 01 00 00 	jnp	256 <runtime.deductSweepCredit+0x138>
  418978:	0f b6 05 51 ae 09 00 	movzbl	634449(%rip), %eax
  41897f:	84 c0 	testb	%al, %al
  418981:	0f 85 e4 00 00 00 	jne	228 <runtime.deductSweepCredit+0x12b>
  418987:	eb 4b 	jmp	75 <runtime.deductSweepCredit+0x94>
  418989:	48 89 c8 	movq	%rcx, %rax
  41898c:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  418991:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  418996:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  41899b:	0f 57 c9 	xorps	%xmm1, %xmm1
  41899e:	48 8b 35 bb 49 09 00 	movq	608699(%rip), %rsi
  4189a5:	48 29 c6 	subq	%rax, %rsi
  4189a8:	48 39 f1 	cmpq	%rsi, %rcx
  4189ab:	0f 8e 83 00 00 00 	jle	131 <runtime.deductSweepCredit+0xf4>
  4189b1:	e8 ba f4 ff ff 	callq	-2886 <runtime.gosweepone>
  4189b6:	48 8b 04 24 	movq	(%rsp), %rax
  4189ba:	48 83 f8 ff 	cmpq	$-1, %rax
  4189be:	74 69 	je	105 <runtime.deductSweepCredit+0xe9>
  4189c0:	48 8b 05 a1 49 09 00 	movq	608673(%rip), %rax
  4189c7:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  4189cc:	48 39 c8 	cmpq	%rcx, %rax
  4189cf:	74 b8 	je	-72 <runtime.deductSweepCredit+0x49>
  4189d1:	0f 57 c9 	xorps	%xmm1, %xmm1
  4189d4:	48 8b 05 8d 49 09 00 	movq	608653(%rip), %rax
  4189db:	48 8b 0d 5e d4 0a 00 	movq	709726(%rip), %rcx
  4189e2:	48 8b 15 87 49 09 00 	movq	608647(%rip), %rdx
  4189e9:	48 29 d1 	subq	%rdx, %rcx
  4189ec:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  4189f1:	48 01 d1 	addq	%rdx, %rcx
  4189f4:	f2 0f 10 05 7c 49 09 00 	movsd	608636(%rip), %xmm0
  4189fc:	48 85 c9 	testq	%rcx, %rcx
  4189ff:	7c 4f 	jl	79 <runtime.deductSweepCredit+0x110>
  418a01:	0f 57 d2 	xorps	%xmm2, %xmm2
  418a04:	f2 48 0f 2a d1 	cvtsi2sdq	%rcx, %xmm2
  418a09:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  418a0e:	f2 0f 59 c2 	mulsd	%xmm2, %xmm0
  418a12:	f2 48 0f 2c c8 	cvttsd2si	%xmm0, %rcx
  418a17:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  418a1c:	48 29 d9 	subq	%rbx, %rcx
  418a1f:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  418a24:	e9 75 ff ff ff 	jmp	-139 <runtime.deductSweepCredit+0x5e>
  418a29:	0f 57 c0 	xorps	%xmm0, %xmm0
  418a2c:	f2 0f 11 05 44 49 09 00 	movsd	%xmm0, 608580(%rip)
  418a34:	0f b6 05 95 ad 09 00 	movzbl	634261(%rip), %eax
  418a3b:	84 c0 	testb	%al, %al
  418a3d:	75 0a 	jne	10 <runtime.deductSweepCredit+0x109>
  418a3f:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  418a44:	48 83 c4 20 	addq	$32, %rsp
  418a48:	c3 	retq
  418a49:	e8 62 1c 02 00 	callq	138338 <runtime.traceGCSweepDone>
  418a4e:	eb ef 	jmp	-17 <runtime.deductSweepCredit+0xff>
  418a50:	48 89 cb 	movq	%rcx, %rbx
  418a53:	48 83 e1 01 	andq	$1, %rcx
  418a57:	48 d1 eb 	shrq	%rbx
  418a5a:	48 09 cb 	orq	%rcx, %rbx
  418a5d:	0f 57 d2 	xorps	%xmm2, %xmm2
  418a60:	f2 48 0f 2a d3 	cvtsi2sdq	%rbx, %xmm2
  418a65:	f2 0f 58 d2 	addsd	%xmm2, %xmm2
  418a69:	eb 9e 	jmp	-98 <runtime.deductSweepCredit+0xc9>
  418a6b:	e8 10 1b 02 00 	callq	138000 <runtime.traceGCSweepStart>
  418a70:	0f 57 c9 	xorps	%xmm1, %xmm1
  418a73:	e9 5c ff ff ff 	jmp	-164 <runtime.deductSweepCredit+0x94>
  418a78:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  418a7d:	48 83 c4 20 	addq	$32, %rsp
  418a81:	c3 	retq
  418a82:	e8 e9 ba 02 00 	callq	178921 <runtime.morestack_noctxt>
  418a87:	e9 b4 fe ff ff 	jmp	-332 <runtime.deductSweepCredit>
  418a8c:	cc 	int3
  418a8d:	cc 	int3
  418a8e:	cc 	int3
  418a8f:	cc 	int3

runtime.(*gcSweepBuf).push:
  418a90:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  418a99:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  418a9d:	0f 86 97 01 00 00 	jbe	407 <runtime.(*gcSweepBuf).push+0x1aa>
  418aa3:	48 83 ec 58 	subq	$88, %rsp
  418aa7:	48 89 6c 24 50 	movq	%rbp, 80(%rsp)
  418aac:	48 8d 6c 24 50 	leaq	80(%rsp), %rbp
  418ab1:	b8 01 00 00 00 	movl	$1, %eax
  418ab6:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  418abb:	f0 	lock
  418abc:	0f c1 41 20 	xaddl	%eax, 32(%rcx)
  418ac0:	89 44 24 24 	movl	%eax, 36(%rsp)
  418ac4:	48 8b 51 10 	movq	16(%rcx), %rdx
  418ac8:	89 c3 	movl	%eax, %ebx
  418aca:	48 c1 e8 09 	shrq	$9, %rax
  418ace:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  418ad3:	eb 1c 	jmp	28 <runtime.(*gcSweepBuf).push+0x61>
  418ad5:	48 89 04 24 	movq	%rax, (%rsp)
  418ad9:	e8 e2 0b ff ff 	callq	-62494 <runtime.unlock>
  418ade:	48 8b 44 24 38 	movq	56(%rsp), %rax
  418ae3:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  418ae8:	8b 5c 24 24 	movl	36(%rsp), %ebx
  418aec:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  418af1:	48 39 d0 	cmpq	%rdx, %rax
  418af4:	0f 82 30 01 00 00 	jb	304 <runtime.(*gcSweepBuf).push+0x19a>
  418afa:	48 89 0c 24 	movq	%rcx, (%rsp)
  418afe:	e8 1d 0a ff ff 	callq	-62947 <runtime.lock>
  418b03:	48 8b 44 24 60 	movq	96(%rsp), %rax
  418b08:	48 8b 48 10 	movq	16(%rax), %rcx
  418b0c:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  418b11:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  418b16:	48 39 ca 	cmpq	%rcx, %rdx
  418b19:	72 ba 	jb	-70 <runtime.(*gcSweepBuf).push+0x45>
  418b1b:	48 8b 58 18 	movq	24(%rax), %rbx
  418b1f:	48 39 d9 	cmpq	%rbx, %rcx
  418b22:	75 5c 	jne	92 <runtime.(*gcSweepBuf).push+0xf0>
  418b24:	48 d1 e3 	shlq	%rbx
  418b27:	48 f7 c3 ff ff ff ff 	testq	$-1, %rbx
  418b2e:	75 05 	jne	5 <runtime.(*gcSweepBuf).push+0xa5>
  418b30:	bb 00 01 00 00 	movl	$256, %ebx
  418b35:	48 89 5c 24 28 	movq	%rbx, 40(%rsp)
  418b3a:	48 c1 e3 03 	shlq	$3, %rbx
  418b3e:	48 89 1c 24 	movq	%rbx, (%rsp)
  418b42:	48 c7 44 24 08 40 00 00 00 	movq	$64, 8(%rsp)
  418b4b:	48 8d 0d 46 bc 0a 00 	leaq	703558(%rip), %rcx
  418b52:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  418b57:	e8 44 29 ff ff 	callq	-54972 <runtime.persistentalloc>
  418b5c:	48 8b 44 24 18 	movq	24(%rsp), %rax
  418b61:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  418b66:	48 8b 51 18 	movq	24(%rcx), %rdx
  418b6a:	48 85 d2 	testq	%rdx, %rdx
  418b6d:	0f 85 88 00 00 00 	jne	136 <runtime.(*gcSweepBuf).push+0x16b>
  418b73:	48 87 41 08 	xchgq	%rax, 8(%rcx)
  418b77:	48 8b 44 24 28 	movq	40(%rsp), %rax
  418b7c:	48 89 41 18 	movq	%rax, 24(%rcx)
  418b80:	48 c7 04 24 00 10 00 00 	movq	$4096, (%rsp)
  418b88:	48 c7 44 24 08 40 00 00 00 	movq	$64, 8(%rsp)
  418b91:	48 8d 05 00 bc 0a 00 	leaq	703488(%rip), %rax
  418b98:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  418b9d:	e8 fe 28 ff ff 	callq	-55042 <runtime.persistentalloc>
  418ba2:	48 8b 44 24 18 	movq	24(%rsp), %rax
  418ba7:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  418bac:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  418bb1:	48 c1 e1 03 	shlq	$3, %rcx
  418bb5:	48 8b 54 24 60 	movq	96(%rsp), %rdx
  418bba:	48 03 4a 08 	addq	8(%rdx), %rcx
  418bbe:	48 87 01 	xchgq	%rax, (%rcx)
  418bc1:	48 8b 44 24 30 	movq	48(%rsp), %rax
  418bc6:	48 ff c0 	incq	%rax
  418bc9:	48 87 42 10 	xchgq	%rax, 16(%rdx)
  418bcd:	48 89 14 24 	movq	%rdx, (%rsp)
  418bd1:	e8 ea 0a ff ff 	callq	-62742 <runtime.unlock>
  418bd6:	48 8b 44 24 48 	movq	72(%rsp), %rax
  418bdb:	84 00 	testb	%al, (%rax)
  418bdd:	8b 4c 24 24 	movl	36(%rsp), %ecx
  418be1:	48 81 e1 ff 01 00 00 	andq	$511, %rcx
  418be8:	48 8b 54 24 68 	movq	104(%rsp), %rdx
  418bed:	48 89 14 c8 	movq	%rdx, (%rax,%rcx,8)
  418bf1:	48 8b 6c 24 50 	movq	80(%rsp), %rbp
  418bf6:	48 83 c4 58 	addq	$88, %rsp
  418bfa:	c3 	retq
  418bfb:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  418c00:	48 8b 59 08 	movq	8(%rcx), %rbx
  418c04:	48 c1 e2 03 	shlq	$3, %rdx
  418c08:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  418c0d:	48 89 04 24 	movq	%rax, (%rsp)
  418c11:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  418c16:	e8 e5 e4 02 00 	callq	189669 <runtime.memmove>
  418c1b:	48 8b 44 24 40 	movq	64(%rsp), %rax
  418c20:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  418c25:	e9 49 ff ff ff 	jmp	-183 <runtime.(*gcSweepBuf).push+0xe3>
  418c2a:	48 8b 49 08 	movq	8(%rcx), %rcx
  418c2e:	48 8d 0c c1 	leaq	(%rcx,%rax,8), %rcx
  418c32:	48 8b 09 	movq	(%rcx), %rcx
  418c35:	48 89 c8 	movq	%rcx, %rax
  418c38:	eb a1 	jmp	-95 <runtime.(*gcSweepBuf).push+0x14b>
  418c3a:	e8 31 b9 02 00 	callq	178481 <runtime.morestack_noctxt>
  418c3f:	e9 4c fe ff ff 	jmp	-436 <runtime.(*gcSweepBuf).push>
  418c44:	cc 	int3
  418c45:	cc 	int3
  418c46:	cc 	int3
  418c47:	cc 	int3
  418c48:	cc 	int3
  418c49:	cc 	int3
  418c4a:	cc 	int3
  418c4b:	cc 	int3
  418c4c:	cc 	int3
  418c4d:	cc 	int3
  418c4e:	cc 	int3
  418c4f:	cc 	int3

runtime.(*gcSweepBuf).block:
  418c50:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  418c59:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  418c5d:	0f 86 b7 00 00 00 	jbe	183 <runtime.(*gcSweepBuf).block+0xca>
  418c63:	48 83 ec 18 	subq	$24, %rsp
  418c67:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  418c6c:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  418c71:	48 8b 44 24 28 	movq	40(%rsp), %rax
  418c76:	48 85 c0 	testq	%rax, %rax
  418c79:	0f 8c 80 00 00 00 	jl	128 <runtime.(*gcSweepBuf).block+0xaf>
  418c7f:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  418c84:	48 8b 51 10 	movq	16(%rcx), %rdx
  418c88:	48 39 d0 	cmpq	%rdx, %rax
  418c8b:	73 72 	jae	114 <runtime.(*gcSweepBuf).block+0xaf>
  418c8d:	48 8b 51 08 	movq	8(%rcx), %rdx
  418c91:	48 8d 14 c2 	leaq	(%rdx,%rax,8), %rdx
  418c95:	48 8b 12 	movq	(%rdx), %rdx
  418c98:	8b 49 20 	movl	32(%rcx), %ecx
  418c9b:	89 c9 	movl	%ecx, %ecx
  418c9d:	48 89 cb 	movq	%rcx, %rbx
  418ca0:	48 c1 e9 09 	shrq	$9, %rcx
  418ca4:	48 39 c8 	cmpq	%rcx, %rax
  418ca7:	73 41 	jae	65 <runtime.(*gcSweepBuf).block+0x9a>
  418ca9:	84 02 	testb	%al, (%rdx)
  418cab:	b8 00 02 00 00 	movl	$512, %eax
  418cb0:	eb 03 	jmp	3 <runtime.(*gcSweepBuf).block+0x65>
  418cb2:	48 89 c8 	movq	%rcx, %rax
  418cb5:	48 85 c0 	testq	%rax, %rax
  418cb8:	7e 13 	jle	19 <runtime.(*gcSweepBuf).block+0x7d>
  418cba:	48 8d 48 ff 	leaq	-1(%rax), %rcx
  418cbe:	48 39 c1 	cmpq	%rax, %rcx
  418cc1:	73 35 	jae	53 <runtime.(*gcSweepBuf).block+0xa8>
  418cc3:	48 8b 5c c2 f8 	movq	-8(%rdx,%rax,8), %rbx
  418cc8:	48 85 db 	testq	%rbx, %rbx
  418ccb:	74 e5 	je	-27 <runtime.(*gcSweepBuf).block+0x62>
  418ccd:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  418cd2:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  418cd7:	48 c7 44 24 40 00 02 00 00 	movq	$512, 64(%rsp)
  418ce0:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  418ce5:	48 83 c4 18 	addq	$24, %rsp
  418ce9:	c3 	retq
  418cea:	84 02 	testb	%al, (%rdx)
  418cec:	48 81 e3 ff 01 00 00 	andq	$511, %rbx
  418cf3:	48 89 d8 	movq	%rbx, %rax
  418cf6:	eb bd 	jmp	-67 <runtime.(*gcSweepBuf).block+0x65>
  418cf8:	e8 43 6d 00 00 	callq	27971 <runtime.panicindex>
  418cfd:	0f 0b 	ud2
  418cff:	48 8d 05 70 2b 05 00 	leaq	338800(%rip), %rax
  418d06:	48 89 04 24 	movq	%rax, (%rsp)
  418d0a:	48 c7 44 24 08 18 00 00 00 	movq	$24, 8(%rsp)
  418d13:	e8 b8 84 00 00 	callq	33976 <runtime.throw>
  418d18:	0f 0b 	ud2
  418d1a:	e8 51 b8 02 00 	callq	178257 <runtime.morestack_noctxt>
  418d1f:	e9 2c ff ff ff 	jmp	-212 <runtime.(*gcSweepBuf).block>
  418d24:	cc 	int3
  418d25:	cc 	int3
  418d26:	cc 	int3
  418d27:	cc 	int3
  418d28:	cc 	int3
  418d29:	cc 	int3
  418d2a:	cc 	int3
  418d2b:	cc 	int3
  418d2c:	cc 	int3
  418d2d:	cc 	int3
  418d2e:	cc 	int3
  418d2f:	cc 	int3

runtime.init.1:
  418d30:	c3 	retq
  418d31:	cc 	int3
  418d32:	cc 	int3
  418d33:	cc 	int3
  418d34:	cc 	int3
  418d35:	cc 	int3
  418d36:	cc 	int3
  418d37:	cc 	int3
  418d38:	cc 	int3
  418d39:	cc 	int3
  418d3a:	cc 	int3
  418d3b:	cc 	int3
  418d3c:	cc 	int3
  418d3d:	cc 	int3
  418d3e:	cc 	int3
  418d3f:	cc 	int3

runtime.(*gcWork).init:
  418d40:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  418d49:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  418d4d:	76 4b 	jbe	75 <runtime.(*gcWork).init+0x5a>
  418d4f:	48 83 ec 10 	subq	$16, %rsp
  418d53:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  418d58:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  418d5d:	e8 7e 07 00 00 	callq	1918 <runtime.getempty>
  418d62:	48 8b 04 24 	movq	(%rsp), %rax
  418d66:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  418d6b:	48 89 01 	movq	%rax, (%rcx)
  418d6e:	e8 3d 0a 00 00 	callq	2621 <runtime.trygetfull>
  418d73:	48 8b 04 24 	movq	(%rsp), %rax
  418d77:	48 85 c0 	testq	%rax, %rax
  418d7a:	74 13 	je	19 <runtime.(*gcWork).init+0x4f>
  418d7c:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  418d81:	48 89 41 08 	movq	%rax, 8(%rcx)
  418d85:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  418d8a:	48 83 c4 10 	addq	$16, %rsp
  418d8e:	c3 	retq
  418d8f:	e8 4c 07 00 00 	callq	1868 <runtime.getempty>
  418d94:	48 8b 04 24 	movq	(%rsp), %rax
  418d98:	eb e2 	jmp	-30 <runtime.(*gcWork).init+0x3c>
  418d9a:	e8 d1 b7 02 00 	callq	178129 <runtime.morestack_noctxt>
  418d9f:	eb 9f 	jmp	-97 <runtime.(*gcWork).init>
  418da1:	cc 	int3
  418da2:	cc 	int3
  418da3:	cc 	int3
  418da4:	cc 	int3
  418da5:	cc 	int3
  418da6:	cc 	int3
  418da7:	cc 	int3
  418da8:	cc 	int3
  418da9:	cc 	int3
  418daa:	cc 	int3
  418dab:	cc 	int3
  418dac:	cc 	int3
  418dad:	cc 	int3
  418dae:	cc 	int3
  418daf:	cc 	int3

runtime.(*gcWork).put:
  418db0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  418db9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  418dbd:	0f 86 db 00 00 00 	jbe	219 <runtime.(*gcWork).put+0xee>
  418dc3:	48 83 ec 18 	subq	$24, %rsp
  418dc7:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  418dcc:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  418dd1:	48 8b 44 24 20 	movq	32(%rsp), %rax
  418dd6:	48 8b 08 	movq	(%rax), %rcx
  418dd9:	48 85 c9 	testq	%rcx, %rcx
  418ddc:	0f 84 9d 00 00 00 	je	157 <runtime.(*gcWork).put+0xcf>
  418de2:	48 8b 51 10 	movq	16(%rcx), %rdx
  418de6:	48 81 fa fd 00 00 00 	cmpq	$253, %rdx
  418ded:	0f 85 88 00 00 00 	jne	136 <runtime.(*gcWork).put+0xcb>
  418df3:	48 8b 50 08 	movq	8(%rax), %rdx
  418df7:	48 89 10 	movq	%rdx, (%rax)
  418dfa:	48 89 48 08 	movq	%rcx, 8(%rax)
  418dfe:	48 8b 08 	movq	(%rax), %rcx
  418e01:	48 8b 51 10 	movq	16(%rcx), %rdx
  418e05:	48 81 fa fd 00 00 00 	cmpq	$253, %rdx
  418e0c:	0f 94 c2 	sete	%dl
  418e0f:	74 45 	je	69 <runtime.(*gcWork).put+0xa6>
  418e11:	48 8b 41 10 	movq	16(%rcx), %rax
  418e15:	48 3d fd 00 00 00 	cmpq	$253, %rax
  418e1b:	73 7a 	jae	122 <runtime.(*gcWork).put+0xe7>
  418e1d:	48 8b 5c 24 28 	movq	40(%rsp), %rbx
  418e22:	48 89 5c c1 18 	movq	%rbx, 24(%rcx,%rax,8)
  418e27:	48 ff 41 10 	incq	16(%rcx)
  418e2b:	84 d2 	testb	%dl, %dl
  418e2d:	74 0b 	je	11 <runtime.(*gcWork).put+0x8a>
  418e2f:	8b 05 a7 aa 0a 00 	movl	699047(%rip), %eax
  418e35:	83 f8 01 	cmpl	$1, %eax
  418e38:	74 0a 	je	10 <runtime.(*gcWork).put+0x94>
  418e3a:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  418e3f:	48 83 c4 18 	addq	$24, %rsp
  418e43:	c3 	retq
  418e44:	48 8d 05 d5 ad 0a 00 	leaq	699861(%rip), %rax
  418e4b:	48 89 04 24 	movq	%rax, (%rsp)
  418e4f:	e8 2c 7a ff ff 	callq	-34260 <runtime.(*gcControllerState).enlistWorker>
  418e54:	eb e4 	jmp	-28 <runtime.(*gcWork).put+0x8a>
  418e56:	88 54 24 0f 	movb	%dl, 15(%rsp)
  418e5a:	48 89 0c 24 	movq	%rcx, (%rsp)
  418e5e:	e8 ed 08 00 00 	callq	2285 <runtime.putfull>
  418e63:	e8 78 06 00 00 	callq	1656 <runtime.getempty>
  418e68:	48 8b 0c 24 	movq	(%rsp), %rcx
  418e6c:	48 8b 44 24 20 	movq	32(%rsp), %rax
  418e71:	48 89 08 	movq	%rcx, (%rax)
  418e74:	0f b6 54 24 0f 	movzbl	15(%rsp), %edx
  418e79:	eb 96 	jmp	-106 <runtime.(*gcWork).put+0x61>
  418e7b:	31 d2 	xorl	%edx, %edx
  418e7d:	eb 92 	jmp	-110 <runtime.(*gcWork).put+0x61>
  418e7f:	48 89 04 24 	movq	%rax, (%rsp)
  418e83:	e8 b8 fe ff ff 	callq	-328 <runtime.(*gcWork).init>
  418e88:	48 8b 44 24 20 	movq	32(%rsp), %rax
  418e8d:	48 8b 08 	movq	(%rax), %rcx
  418e90:	31 d2 	xorl	%edx, %edx
  418e92:	e9 7a ff ff ff 	jmp	-134 <runtime.(*gcWork).put+0x61>
  418e97:	e8 a4 6b 00 00 	callq	27556 <runtime.panicindex>
  418e9c:	0f 0b 	ud2
  418e9e:	e8 cd b6 02 00 	callq	177869 <runtime.morestack_noctxt>
  418ea3:	e9 08 ff ff ff 	jmp	-248 <runtime.(*gcWork).put>
  418ea8:	cc 	int3
  418ea9:	cc 	int3
  418eaa:	cc 	int3
  418eab:	cc 	int3
  418eac:	cc 	int3
  418ead:	cc 	int3
  418eae:	cc 	int3
  418eaf:	cc 	int3

runtime.(*gcWork).putBatch:
  418eb0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  418eb9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  418ebd:	0f 86 c4 01 00 00 	jbe	452 <runtime.(*gcWork).putBatch+0x1d7>
  418ec3:	48 83 ec 40 	subq	$64, %rsp
  418ec7:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  418ecc:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  418ed1:	48 8b 44 24 58 	movq	88(%rsp), %rax
  418ed6:	48 85 c0 	testq	%rax, %rax
  418ed9:	0f 84 90 01 00 00 	je	400 <runtime.(*gcWork).putBatch+0x1bf>
  418edf:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  418ee4:	48 8b 11 	movq	(%rcx), %rdx
  418ee7:	48 85 d2 	testq	%rdx, %rdx
  418eea:	0f 84 64 01 00 00 	je	356 <runtime.(*gcWork).putBatch+0x1a4>
  418ef0:	48 8b 5c 24 60 	movq	96(%rsp), %rbx
  418ef5:	48 8b 74 24 50 	movq	80(%rsp), %rsi
  418efa:	31 ff 	xorl	%edi, %edi
  418efc:	e9 06 01 00 00 	jmp	262 <runtime.(*gcWork).putBatch+0x157>
  418f01:	48 89 14 24 	movq	%rdx, (%rsp)
  418f05:	e8 46 08 00 00 	callq	2118 <runtime.putfull>
  418f0a:	e8 d1 05 00 00 	callq	1489 <runtime.getempty>
  418f0f:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  418f14:	48 8b 41 08 	movq	8(%rcx), %rax
  418f18:	48 8b 14 24 	movq	(%rsp), %rdx
  418f1c:	48 89 01 	movq	%rax, (%rcx)
  418f1f:	48 89 51 08 	movq	%rdx, 8(%rcx)
  418f23:	48 8b 11 	movq	(%rcx), %rdx
  418f26:	48 8b 44 24 58 	movq	88(%rsp), %rax
  418f2b:	48 8b 5c 24 60 	movq	96(%rsp), %rbx
  418f30:	48 8b 74 24 30 	movq	48(%rsp), %rsi
  418f35:	bf 01 00 00 00 	movl	$1, %edi
  418f3a:	4c 8b 42 10 	movq	16(%rdx), %r8
  418f3e:	49 81 f8 fd 00 00 00 	cmpq	$253, %r8
  418f45:	74 ba 	je	-70 <runtime.(*gcWork).putBatch+0x51>
  418f47:	4c 8d 4a 18 	leaq	24(%rdx), %r9
  418f4b:	41 84 01 	testb	%al, (%r9)
  418f4e:	49 81 f8 fd 00 00 00 	cmpq	$253, %r8
  418f55:	0f 87 25 01 00 00 	ja	293 <runtime.(*gcWork).putBatch+0x1d0>
  418f5b:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  418f60:	40 88 7c 24 1f 	movb	%dil, 31(%rsp)
  418f65:	4d 8d 88 03 ff ff ff 	leaq	-253(%r8), %r9
  418f6c:	49 c1 e0 03 	shlq	$3, %r8
  418f70:	49 f7 d9 	negq	%r9
  418f73:	4d 89 ca 	movq	%r9, %r10
  418f76:	49 f7 d9 	negq	%r9
  418f79:	49 c1 f9 3f 	sarq	$63, %r9
  418f7d:	4d 21 c8 	andq	%r9, %r8
  418f80:	4e 8d 44 02 18 	leaq	24(%rdx,%r8), %r8
  418f85:	49 39 c2 	cmpq	%rax, %r10
  418f88:	0f 8e 92 00 00 00 	jle	146 <runtime.(*gcWork).putBatch+0x170>
  418f8e:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  418f93:	4c 89 04 24 	movq	%r8, (%rsp)
  418f97:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  418f9c:	48 c1 e0 03 	shlq	$3, %rax
  418fa0:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  418fa5:	e8 56 e1 02 00 	callq	188758 <runtime.memmove>
  418faa:	48 8b 44 24 28 	movq	40(%rsp), %rax
  418faf:	48 8b 48 10 	movq	16(%rax), %rcx
  418fb3:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  418fb8:	48 01 d1 	addq	%rdx, %rcx
  418fbb:	48 89 48 10 	movq	%rcx, 16(%rax)
  418fbf:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  418fc4:	48 39 ca 	cmpq	%rcx, %rdx
  418fc7:	0f 87 ac 00 00 00 	ja	172 <runtime.(*gcWork).putBatch+0x1c9>
  418fcd:	48 29 d1 	subq	%rdx, %rcx
  418fd0:	48 8b 5c 24 60 	movq	96(%rsp), %rbx
  418fd5:	48 29 d3 	subq	%rdx, %rbx
  418fd8:	48 c1 e2 03 	shlq	$3, %rdx
  418fdc:	49 89 d8 	movq	%rbx, %r8
  418fdf:	48 f7 db 	negq	%rbx
  418fe2:	48 c1 fb 3f 	sarq	$63, %rbx
  418fe6:	48 21 da 	andq	%rbx, %rdx
  418fe9:	4c 8b 4c 24 30 	movq	48(%rsp), %r9
  418fee:	49 8d 34 11 	leaq	(%r9,%rdx), %rsi
  418ff2:	4c 89 c3 	movq	%r8, %rbx
  418ff5:	48 89 c8 	movq	%rcx, %rax
  418ff8:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  418ffd:	0f b6 7c 24 1f 	movzbl	31(%rsp), %edi
  419002:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  419007:	48 85 c0 	testq	%rax, %rax
  41900a:	7e 1c 	jle	28 <runtime.(*gcWork).putBatch+0x178>
  41900c:	48 89 5c 24 60 	movq	%rbx, 96(%rsp)
  419011:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  419016:	48 89 74 24 30 	movq	%rsi, 48(%rsp)
  41901b:	e9 1a ff ff ff 	jmp	-230 <runtime.(*gcWork).putBatch+0x8a>
  419020:	4c 89 d0 	movq	%r10, %rax
  419023:	e9 66 ff ff ff 	jmp	-154 <runtime.(*gcWork).putBatch+0xde>
  419028:	40 84 ff 	testb	%dil, %dil
  41902b:	74 0b 	je	11 <runtime.(*gcWork).putBatch+0x188>
  41902d:	8b 05 a9 a8 0a 00 	movl	698537(%rip), %eax
  419033:	83 f8 01 	cmpl	$1, %eax
  419036:	74 0a 	je	10 <runtime.(*gcWork).putBatch+0x192>
  419038:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  41903d:	48 83 c4 40 	addq	$64, %rsp
  419041:	c3 	retq
  419042:	48 8d 05 d7 ab 0a 00 	leaq	699351(%rip), %rax
  419049:	48 89 04 24 	movq	%rax, (%rsp)
  41904d:	e8 2e 78 ff ff 	callq	-34770 <runtime.(*gcControllerState).enlistWorker>
  419052:	eb e4 	jmp	-28 <runtime.(*gcWork).putBatch+0x188>
  419054:	48 89 0c 24 	movq	%rcx, (%rsp)
  419058:	e8 e3 fc ff ff 	callq	-797 <runtime.(*gcWork).init>
  41905d:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  419062:	48 8b 11 	movq	(%rcx), %rdx
  419065:	48 8b 44 24 58 	movq	88(%rsp), %rax
  41906a:	e9 81 fe ff ff 	jmp	-383 <runtime.(*gcWork).putBatch+0x40>
  41906f:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  419074:	48 83 c4 40 	addq	$64, %rsp
  419078:	c3 	retq
  419079:	e8 32 6a 00 00 	callq	27186 <runtime.panicslice>
  41907e:	0f 0b 	ud2
  419080:	e8 2b 6a 00 00 	callq	27179 <runtime.panicslice>
  419085:	0f 0b 	ud2
  419087:	e8 e4 b4 02 00 	callq	177380 <runtime.morestack_noctxt>
  41908c:	e9 1f fe ff ff 	jmp	-481 <runtime.(*gcWork).putBatch>
  419091:	cc 	int3
  419092:	cc 	int3
  419093:	cc 	int3
  419094:	cc 	int3
  419095:	cc 	int3
  419096:	cc 	int3
  419097:	cc 	int3
  419098:	cc 	int3
  419099:	cc 	int3
  41909a:	cc 	int3
  41909b:	cc 	int3
  41909c:	cc 	int3
  41909d:	cc 	int3
  41909e:	cc 	int3
  41909f:	cc 	int3

runtime.(*gcWork).tryGet:
  4190a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4190a9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4190ad:	0f 86 d0 00 00 00 	jbe	208 <runtime.(*gcWork).tryGet+0xe3>
  4190b3:	48 83 ec 20 	subq	$32, %rsp
  4190b7:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  4190bc:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  4190c1:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4190c6:	48 8b 08 	movq	(%rax), %rcx
  4190c9:	48 85 c9 	testq	%rcx, %rcx
  4190cc:	0f 84 94 00 00 00 	je	148 <runtime.(*gcWork).tryGet+0xc6>
  4190d2:	48 8b 51 10 	movq	16(%rcx), %rdx
  4190d6:	48 85 d2 	testq	%rdx, %rdx
  4190d9:	75 1a 	jne	26 <runtime.(*gcWork).tryGet+0x55>
  4190db:	48 8b 48 08 	movq	8(%rax), %rcx
  4190df:	48 8b 10 	movq	(%rax), %rdx
  4190e2:	48 89 08 	movq	%rcx, (%rax)
  4190e5:	48 89 50 08 	movq	%rdx, 8(%rax)
  4190e9:	48 8b 08 	movq	(%rax), %rcx
  4190ec:	48 8b 51 10 	movq	16(%rcx), %rdx
  4190f0:	48 85 d2 	testq	%rdx, %rdx
  4190f3:	74 29 	je	41 <runtime.(*gcWork).tryGet+0x7e>
  4190f5:	48 8b 41 10 	movq	16(%rcx), %rax
  4190f9:	48 8d 50 ff 	leaq	-1(%rax), %rdx
  4190fd:	48 89 51 10 	movq	%rdx, 16(%rcx)
  419101:	48 81 fa fd 00 00 00 	cmpq	$253, %rdx
  419108:	73 72 	jae	114 <runtime.(*gcWork).tryGet+0xdc>
  41910a:	48 8b 44 c1 10 	movq	16(%rcx,%rax,8), %rax
  41910f:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  419114:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  419119:	48 83 c4 20 	addq	$32, %rsp
  41911d:	c3 	retq
  41911e:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  419123:	e8 88 06 00 00 	callq	1672 <runtime.trygetfull>
  419128:	48 8b 04 24 	movq	(%rsp), %rax
  41912c:	48 85 c0 	testq	%rax, %rax
  41912f:	74 22 	je	34 <runtime.(*gcWork).tryGet+0xb3>
  419131:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  419136:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41913b:	48 89 04 24 	movq	%rax, (%rsp)
  41913f:	e8 ac 05 00 00 	callq	1452 <runtime.putempty>
  419144:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  419149:	48 8b 44 24 28 	movq	40(%rsp), %rax
  41914e:	48 89 08 	movq	%rcx, (%rax)
  419151:	eb a2 	jmp	-94 <runtime.(*gcWork).tryGet+0x55>
  419153:	48 c7 44 24 30 00 00 00 00 	movq	$0, 48(%rsp)
  41915c:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  419161:	48 83 c4 20 	addq	$32, %rsp
  419165:	c3 	retq
  419166:	48 89 04 24 	movq	%rax, (%rsp)
  41916a:	e8 d1 fb ff ff 	callq	-1071 <runtime.(*gcWork).init>
  41916f:	48 8b 44 24 28 	movq	40(%rsp), %rax
  419174:	48 8b 08 	movq	(%rax), %rcx
  419177:	e9 56 ff ff ff 	jmp	-170 <runtime.(*gcWork).tryGet+0x32>
  41917c:	e8 bf 68 00 00 	callq	26815 <runtime.panicindex>
  419181:	0f 0b 	ud2
  419183:	e8 e8 b3 02 00 	callq	177128 <runtime.morestack_noctxt>
  419188:	e9 13 ff ff ff 	jmp	-237 <runtime.(*gcWork).tryGet>
  41918d:	cc 	int3
  41918e:	cc 	int3
  41918f:	cc 	int3

runtime.(*gcWork).get:
  419190:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  419199:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41919d:	0f 86 d0 00 00 00 	jbe	208 <runtime.(*gcWork).get+0xe3>
  4191a3:	48 83 ec 20 	subq	$32, %rsp
  4191a7:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  4191ac:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  4191b1:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4191b6:	48 8b 08 	movq	(%rax), %rcx
  4191b9:	48 85 c9 	testq	%rcx, %rcx
  4191bc:	0f 84 94 00 00 00 	je	148 <runtime.(*gcWork).get+0xc6>
  4191c2:	48 8b 51 10 	movq	16(%rcx), %rdx
  4191c6:	48 85 d2 	testq	%rdx, %rdx
  4191c9:	75 1a 	jne	26 <runtime.(*gcWork).get+0x55>
  4191cb:	48 8b 48 08 	movq	8(%rax), %rcx
  4191cf:	48 8b 10 	movq	(%rax), %rdx
  4191d2:	48 89 08 	movq	%rcx, (%rax)
  4191d5:	48 89 50 08 	movq	%rdx, 8(%rax)
  4191d9:	48 8b 08 	movq	(%rax), %rcx
  4191dc:	48 8b 51 10 	movq	16(%rcx), %rdx
  4191e0:	48 85 d2 	testq	%rdx, %rdx
  4191e3:	74 29 	je	41 <runtime.(*gcWork).get+0x7e>
  4191e5:	48 8b 41 10 	movq	16(%rcx), %rax
  4191e9:	48 8d 50 ff 	leaq	-1(%rax), %rdx
  4191ed:	48 89 51 10 	movq	%rdx, 16(%rcx)
  4191f1:	48 81 fa fd 00 00 00 	cmpq	$253, %rdx
  4191f8:	73 72 	jae	114 <runtime.(*gcWork).get+0xdc>
  4191fa:	48 8b 44 c1 10 	movq	16(%rcx,%rax,8), %rax
  4191ff:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  419204:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  419209:	48 83 c4 20 	addq	$32, %rsp
  41920d:	c3 	retq
  41920e:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  419213:	e8 08 06 00 00 	callq	1544 <runtime.getfull>
  419218:	48 8b 04 24 	movq	(%rsp), %rax
  41921c:	48 85 c0 	testq	%rax, %rax
  41921f:	74 22 	je	34 <runtime.(*gcWork).get+0xb3>
  419221:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  419226:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41922b:	48 89 04 24 	movq	%rax, (%rsp)
  41922f:	e8 bc 04 00 00 	callq	1212 <runtime.putempty>
  419234:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  419239:	48 8b 44 24 28 	movq	40(%rsp), %rax
  41923e:	48 89 08 	movq	%rcx, (%rax)
  419241:	eb a2 	jmp	-94 <runtime.(*gcWork).get+0x55>
  419243:	48 c7 44 24 30 00 00 00 00 	movq	$0, 48(%rsp)
  41924c:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  419251:	48 83 c4 20 	addq	$32, %rsp
  419255:	c3 	retq
  419256:	48 89 04 24 	movq	%rax, (%rsp)
  41925a:	e8 e1 fa ff ff 	callq	-1311 <runtime.(*gcWork).init>
  41925f:	48 8b 44 24 28 	movq	40(%rsp), %rax
  419264:	48 8b 08 	movq	(%rax), %rcx
  419267:	e9 56 ff ff ff 	jmp	-170 <runtime.(*gcWork).get+0x32>
  41926c:	e8 cf 67 00 00 	callq	26575 <runtime.panicindex>
  419271:	0f 0b 	ud2
  419273:	e8 f8 b2 02 00 	callq	176888 <runtime.morestack_noctxt>
  419278:	e9 13 ff ff ff 	jmp	-237 <runtime.(*gcWork).get>
  41927d:	cc 	int3
  41927e:	cc 	int3
  41927f:	cc 	int3

runtime.(*gcWork).dispose:
  419280:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  419289:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41928d:	0f 86 bd 00 00 00 	jbe	189 <runtime.(*gcWork).dispose+0xd0>
  419293:	48 83 ec 10 	subq	$16, %rsp
  419297:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  41929c:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  4192a1:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4192a6:	48 8b 08 	movq	(%rax), %rcx
  4192a9:	48 85 c9 	testq	%rcx, %rcx
  4192ac:	74 45 	je	69 <runtime.(*gcWork).dispose+0x73>
  4192ae:	48 8b 51 10 	movq	16(%rcx), %rdx
  4192b2:	48 85 d2 	testq	%rdx, %rdx
  4192b5:	0f 85 87 00 00 00 	jne	135 <runtime.(*gcWork).dispose+0xc2>
  4192bb:	48 89 0c 24 	movq	%rcx, (%rsp)
  4192bf:	e8 2c 04 00 00 	callq	1068 <runtime.putempty>
  4192c4:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4192c9:	48 c7 00 00 00 00 00 	movq	$0, (%rax)
  4192d0:	48 8b 48 08 	movq	8(%rax), %rcx
  4192d4:	48 8b 51 10 	movq	16(%rcx), %rdx
  4192d8:	48 85 d2 	testq	%rdx, %rdx
  4192db:	75 5a 	jne	90 <runtime.(*gcWork).dispose+0xb7>
  4192dd:	48 89 0c 24 	movq	%rcx, (%rsp)
  4192e1:	e8 0a 04 00 00 	callq	1034 <runtime.putempty>
  4192e6:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4192eb:	48 c7 40 08 00 00 00 00 	movq	$0, 8(%rax)
  4192f3:	48 8b 48 10 	movq	16(%rax), %rcx
  4192f7:	48 85 c9 	testq	%rcx, %rcx
  4192fa:	74 14 	je	20 <runtime.(*gcWork).dispose+0x90>
  4192fc:	48 8d 15 1d eb 08 00 	leaq	584477(%rip), %rdx
  419303:	f0 	lock
  419304:	48 0f c1 0a 	xaddq	%rcx, (%rdx)
  419308:	48 c7 40 10 00 00 00 00 	movq	$0, 16(%rax)
  419310:	48 8b 48 18 	movq	24(%rax), %rcx
  419314:	48 85 c9 	testq	%rcx, %rcx
  419317:	74 14 	je	20 <runtime.(*gcWork).dispose+0xad>
  419319:	48 8d 15 00 a9 0a 00 	leaq	698624(%rip), %rdx
  419320:	f0 	lock
  419321:	48 0f c1 0a 	xaddq	%rcx, (%rdx)
  419325:	48 c7 40 18 00 00 00 00 	movq	$0, 24(%rax)
  41932d:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  419332:	48 83 c4 10 	addq	$16, %rsp
  419336:	c3 	retq
  419337:	48 89 0c 24 	movq	%rcx, (%rsp)
  41933b:	e8 10 04 00 00 	callq	1040 <runtime.putfull>
  419340:	eb a4 	jmp	-92 <runtime.(*gcWork).dispose+0x66>
  419342:	48 89 0c 24 	movq	%rcx, (%rsp)
  419346:	e8 05 04 00 00 	callq	1029 <runtime.putfull>
  41934b:	e9 74 ff ff ff 	jmp	-140 <runtime.(*gcWork).dispose+0x44>
  419350:	e8 1b b2 02 00 	callq	176667 <runtime.morestack_noctxt>
  419355:	e9 26 ff ff ff 	jmp	-218 <runtime.(*gcWork).dispose>
  41935a:	cc 	int3
  41935b:	cc 	int3
  41935c:	cc 	int3
  41935d:	cc 	int3
  41935e:	cc 	int3
  41935f:	cc 	int3

runtime.(*gcWork).balance:
  419360:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  419369:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41936d:	0f 86 a0 00 00 00 	jbe	160 <runtime.(*gcWork).balance+0xb3>
  419373:	48 83 ec 18 	subq	$24, %rsp
  419377:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  41937c:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  419381:	48 8b 44 24 20 	movq	32(%rsp), %rax
  419386:	48 8b 08 	movq	(%rax), %rcx
  419389:	48 85 c9 	testq	%rcx, %rcx
  41938c:	74 7b 	je	123 <runtime.(*gcWork).balance+0xa9>
  41938e:	48 8b 50 08 	movq	8(%rax), %rdx
  419392:	48 8b 5a 10 	movq	16(%rdx), %rbx
  419396:	48 85 db 	testq	%rbx, %rbx
  419399:	75 51 	jne	81 <runtime.(*gcWork).balance+0x8c>
  41939b:	48 8b 51 10 	movq	16(%rcx), %rdx
  41939f:	48 83 fa 04 	cmpq	$4, %rdx
  4193a3:	7e 3d 	jle	61 <runtime.(*gcWork).balance+0x82>
  4193a5:	48 89 0c 24 	movq	%rcx, (%rsp)
  4193a9:	e8 82 07 00 00 	callq	1922 <runtime.handoff>
  4193ae:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4193b3:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  4193b8:	48 89 01 	movq	%rax, (%rcx)
  4193bb:	8b 05 1b a5 0a 00 	movl	697627(%rip), %eax
  4193c1:	83 f8 01 	cmpl	$1, %eax
  4193c4:	74 0a 	je	10 <runtime.(*gcWork).balance+0x70>
  4193c6:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  4193cb:	48 83 c4 18 	addq	$24, %rsp
  4193cf:	c3 	retq
  4193d0:	48 8d 05 49 a8 0a 00 	leaq	698441(%rip), %rax
  4193d7:	48 89 04 24 	movq	%rax, (%rsp)
  4193db:	e8 a0 74 ff ff 	callq	-35680 <runtime.(*gcControllerState).enlistWorker>
  4193e0:	eb e4 	jmp	-28 <runtime.(*gcWork).balance+0x66>
  4193e2:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  4193e7:	48 83 c4 18 	addq	$24, %rsp
  4193eb:	c3 	retq
  4193ec:	48 89 14 24 	movq	%rdx, (%rsp)
  4193f0:	e8 5b 03 00 00 	callq	859 <runtime.putfull>
  4193f5:	e8 e6 00 00 00 	callq	230 <runtime.getempty>
  4193fa:	48 8b 04 24 	movq	(%rsp), %rax
  4193fe:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  419403:	48 89 41 08 	movq	%rax, 8(%rcx)
  419407:	eb b2 	jmp	-78 <runtime.(*gcWork).balance+0x5b>
  419409:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  41940e:	48 83 c4 18 	addq	$24, %rsp
  419412:	c3 	retq
  419413:	e8 58 b1 02 00 	callq	176472 <runtime.morestack_noctxt>
  419418:	e9 43 ff ff ff 	jmp	-189 <runtime.(*gcWork).balance>
  41941d:	cc 	int3
  41941e:	cc 	int3
  41941f:	cc 	int3

runtime.(*workbuf).checknonempty:
  419420:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  419429:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41942d:	76 41 	jbe	65 <runtime.(*workbuf).checknonempty+0x50>
  41942f:	48 83 ec 18 	subq	$24, %rsp
  419433:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  419438:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  41943d:	48 8b 44 24 20 	movq	32(%rsp), %rax
  419442:	48 8b 40 10 	movq	16(%rax), %rax
  419446:	48 85 c0 	testq	%rax, %rax
  419449:	74 0a 	je	10 <runtime.(*workbuf).checknonempty+0x35>
  41944b:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  419450:	48 83 c4 18 	addq	$24, %rsp
  419454:	c3 	retq
  419455:	48 8d 05 36 17 05 00 	leaq	333622(%rip), %rax
  41945c:	48 89 04 24 	movq	%rax, (%rsp)
  419460:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  419469:	e8 62 7d 00 00 	callq	32098 <runtime.throw>
  41946e:	0f 0b 	ud2
  419470:	e8 fb b0 02 00 	callq	176379 <runtime.morestack_noctxt>
  419475:	eb a9 	jmp	-87 <runtime.(*workbuf).checknonempty>
  419477:	cc 	int3
  419478:	cc 	int3
  419479:	cc 	int3
  41947a:	cc 	int3
  41947b:	cc 	int3
  41947c:	cc 	int3
  41947d:	cc 	int3
  41947e:	cc 	int3
  41947f:	cc 	int3

runtime.(*workbuf).checkempty:
  419480:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  419489:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41948d:	76 41 	jbe	65 <runtime.(*workbuf).checkempty+0x50>
  41948f:	48 83 ec 18 	subq	$24, %rsp
  419493:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  419498:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  41949d:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4194a2:	48 8b 40 10 	movq	16(%rax), %rax
  4194a6:	48 85 c0 	testq	%rax, %rax
  4194a9:	75 0a 	jne	10 <runtime.(*workbuf).checkempty+0x35>
  4194ab:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  4194b0:	48 83 c4 18 	addq	$24, %rsp
  4194b4:	c3 	retq
  4194b5:	48 8d 05 51 1d 05 00 	leaq	335185(%rip), %rax
  4194bc:	48 89 04 24 	movq	%rax, (%rsp)
  4194c0:	48 c7 44 24 08 14 00 00 00 	movq	$20, 8(%rsp)
  4194c9:	e8 02 7d 00 00 	callq	32002 <runtime.throw>
  4194ce:	0f 0b 	ud2
  4194d0:	e8 9b b0 02 00 	callq	176283 <runtime.morestack_noctxt>
  4194d5:	eb a9 	jmp	-87 <runtime.(*workbuf).checkempty>
  4194d7:	cc 	int3
  4194d8:	cc 	int3
  4194d9:	cc 	int3
  4194da:	cc 	int3
  4194db:	cc 	int3
  4194dc:	cc 	int3
  4194dd:	cc 	int3
  4194de:	cc 	int3
  4194df:	cc 	int3

runtime.getempty:
  4194e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4194e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4194ed:	0f 86 e8 01 00 00 	jbe	488 <runtime.getempty+0x1fb>
  4194f3:	48 83 ec 50 	subq	$80, %rsp
  4194f7:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  4194fc:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  419501:	48 8b 05 a0 e8 08 00 	movq	583840(%rip), %rax
  419508:	48 85 c0 	testq	%rax, %rax
  41950b:	0f 85 79 01 00 00 	jne	377 <runtime.getempty+0x1aa>
  419511:	31 c0 	xorl	%eax, %eax
  419513:	48 85 c0 	testq	%rax, %rax
  419516:	75 7c 	jne	124 <runtime.getempty+0xb4>
  419518:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  41951d:	48 c7 44 24 18 00 00 00 00 	movq	$0, 24(%rsp)
  419526:	48 8b 0d cb e8 08 00 	movq	583883(%rip), %rcx
  41952d:	48 85 c9 	testq	%rcx, %rcx
  419530:	0f 85 e3 00 00 00 	jne	227 <runtime.getempty+0x139>
  419536:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  41953b:	48 85 c9 	testq	%rcx, %rcx
  41953e:	74 63 	je	99 <runtime.getempty+0xc3>
  419540:	31 c9 	xorl	%ecx, %ecx
  419542:	eb 06 	jmp	6 <runtime.getempty+0x6a>
  419544:	48 89 d1 	movq	%rdx, %rcx
  419547:	48 89 f0 	movq	%rsi, %rax
  41954a:	48 8d 91 00 08 00 00 	leaq	2048(%rcx), %rdx
  419551:	48 81 fa 00 80 00 00 	cmpq	$32768, %rdx
  419558:	77 3a 	ja	58 <runtime.getempty+0xb4>
  41955a:	48 8b 5c 24 18 	movq	24(%rsp), %rbx
  41955f:	48 8b 73 18 	movq	24(%rbx), %rsi
  419563:	48 01 ce 	addq	%rcx, %rsi
  419566:	84 03 	testb	%al, (%rbx)
  419568:	48 c7 46 10 00 00 00 00 	movq	$0, 16(%rsi)
  419570:	48 85 c9 	testq	%rcx, %rcx
  419573:	74 cf 	je	-49 <runtime.getempty+0x64>
  419575:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  41957a:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  41957f:	48 89 34 24 	movq	%rsi, (%rsp)
  419583:	e8 68 01 00 00 	callq	360 <runtime.putempty>
  419588:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  41958d:	48 8b 74 24 30 	movq	48(%rsp), %rsi
  419592:	eb b0 	jmp	-80 <runtime.getempty+0x64>
  419594:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  419599:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  41959e:	48 83 c4 50 	addq	$80, %rsp
  4195a2:	c3 	retq
  4195a3:	48 8d 05 66 91 02 00 	leaq	168294(%rip), %rax
  4195aa:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  4195af:	48 8d 44 24 18 	leaq	24(%rsp), %rax
  4195b4:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  4195b9:	48 8d 44 24 38 	leaq	56(%rsp), %rax
  4195be:	48 89 04 24 	movq	%rax, (%rsp)
  4195c2:	e8 59 ae 02 00 	callq	175705 <runtime.systemstack>
  4195c7:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4195cc:	48 85 c0 	testq	%rax, %rax
  4195cf:	0f 84 eb 00 00 00 	je	235 <runtime.getempty+0x1e0>
  4195d5:	48 8d 05 14 e8 08 00 	leaq	583700(%rip), %rax
  4195dc:	48 89 04 24 	movq	%rax, (%rsp)
  4195e0:	e8 3b ff fe ff 	callq	-65733 <runtime.lock>
  4195e5:	48 8d 05 1c e8 08 00 	leaq	583708(%rip), %rax
  4195ec:	48 89 04 24 	movq	%rax, (%rsp)
  4195f0:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4195f5:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4195fa:	e8 51 2c 00 00 	callq	11345 <runtime.(*mSpanList).insert>
  4195ff:	48 8d 05 ea e7 08 00 	leaq	583658(%rip), %rax
  419606:	48 89 04 24 	movq	%rax, (%rsp)
  41960a:	e8 b1 00 ff ff 	callq	-65359 <runtime.unlock>
  41960f:	48 8b 44 24 20 	movq	32(%rsp), %rax
  419614:	e9 27 ff ff ff 	jmp	-217 <runtime.getempty+0x60>
  419619:	48 8d 05 d0 e7 08 00 	leaq	583632(%rip), %rax
  419620:	48 89 04 24 	movq	%rax, (%rsp)
  419624:	e8 f7 fe fe ff 	callq	-65801 <runtime.lock>
  419629:	48 8b 05 c8 e7 08 00 	movq	583624(%rip), %rax
  419630:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  419635:	48 85 c0 	testq	%rax, %rax
  419638:	75 1a 	jne	26 <runtime.getempty+0x174>
  41963a:	48 8d 05 af e7 08 00 	leaq	583599(%rip), %rax
  419641:	48 89 04 24 	movq	%rax, (%rsp)
  419645:	e8 76 00 ff ff 	callq	-65418 <runtime.unlock>
  41964a:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41964f:	e9 e2 fe ff ff 	jmp	-286 <runtime.getempty+0x56>
  419654:	48 8d 05 9d e7 08 00 	leaq	583581(%rip), %rax
  41965b:	48 89 04 24 	movq	%rax, (%rsp)
  41965f:	48 8b 44 24 18 	movq	24(%rsp), %rax
  419664:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  419669:	e8 42 2a 00 00 	callq	10818 <runtime.(*mSpanList).remove>
  41966e:	48 8d 05 93 e7 08 00 	leaq	583571(%rip), %rax
  419675:	48 89 04 24 	movq	%rax, (%rsp)
  419679:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41967e:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  419683:	e8 c8 2b 00 00 	callq	11208 <runtime.(*mSpanList).insert>
  419688:	eb b0 	jmp	-80 <runtime.getempty+0x15a>
  41968a:	48 8d 05 17 e7 08 00 	leaq	583447(%rip), %rax
  419691:	48 89 04 24 	movq	%rax, (%rsp)
  419695:	e8 46 fe fe ff 	callq	-65978 <runtime.(*lfstack).pop>
  41969a:	48 8b 44 24 08 	movq	8(%rsp), %rax
  41969f:	48 85 c0 	testq	%rax, %rax
  4196a2:	0f 84 6b fe ff ff 	je	-405 <runtime.getempty+0x33>
  4196a8:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  4196ad:	48 89 04 24 	movq	%rax, (%rsp)
  4196b1:	e8 ca fd ff ff 	callq	-566 <runtime.(*workbuf).checkempty>
  4196b6:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4196bb:	e9 53 fe ff ff 	jmp	-429 <runtime.getempty+0x33>
  4196c0:	48 8d 05 ae 10 05 00 	leaq	331950(%rip), %rax
  4196c7:	48 89 04 24 	movq	%rax, (%rsp)
  4196cb:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  4196d4:	e8 f7 7a 00 00 	callq	31479 <runtime.throw>
  4196d9:	0f 0b 	ud2
  4196db:	e8 90 ae 02 00 	callq	175760 <runtime.morestack_noctxt>
  4196e0:	e9 fb fd ff ff 	jmp	-517 <runtime.getempty>
  4196e5:	cc 	int3
  4196e6:	cc 	int3
  4196e7:	cc 	int3
  4196e8:	cc 	int3
  4196e9:	cc 	int3
  4196ea:	cc 	int3
  4196eb:	cc 	int3
  4196ec:	cc 	int3
  4196ed:	cc 	int3
  4196ee:	cc 	int3
  4196ef:	cc 	int3

runtime.putempty:
  4196f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4196f9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4196fd:	76 42 	jbe	66 <runtime.putempty+0x51>
  4196ff:	48 83 ec 18 	subq	$24, %rsp
  419703:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  419708:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  41970d:	48 8b 44 24 20 	movq	32(%rsp), %rax
  419712:	48 89 04 24 	movq	%rax, (%rsp)
  419716:	e8 65 fd ff ff 	callq	-667 <runtime.(*workbuf).checkempty>
  41971b:	48 8b 44 24 20 	movq	32(%rsp), %rax
  419720:	84 00 	testb	%al, (%rax)
  419722:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  419727:	48 8d 05 7a e6 08 00 	leaq	583290(%rip), %rax
  41972e:	48 89 04 24 	movq	%rax, (%rsp)
  419732:	e8 49 fc fe ff 	callq	-66487 <runtime.(*lfstack).push>
  419737:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  41973c:	48 83 c4 18 	addq	$24, %rsp
  419740:	c3 	retq
  419741:	e8 2a ae 02 00 	callq	175658 <runtime.morestack_noctxt>
  419746:	eb a8 	jmp	-88 <runtime.putempty>
  419748:	cc 	int3
  419749:	cc 	int3
  41974a:	cc 	int3
  41974b:	cc 	int3
  41974c:	cc 	int3
  41974d:	cc 	int3
  41974e:	cc 	int3
  41974f:	cc 	int3

runtime.putfull:
  419750:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  419759:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41975d:	76 42 	jbe	66 <runtime.putfull+0x51>
  41975f:	48 83 ec 18 	subq	$24, %rsp
  419763:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  419768:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  41976d:	48 8b 44 24 20 	movq	32(%rsp), %rax
  419772:	48 89 04 24 	movq	%rax, (%rsp)
  419776:	e8 a5 fc ff ff 	callq	-859 <runtime.(*workbuf).checknonempty>
  41977b:	48 8b 44 24 20 	movq	32(%rsp), %rax
  419780:	84 00 	testb	%al, (%rax)
  419782:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  419787:	48 8d 05 12 e6 08 00 	leaq	583186(%rip), %rax
  41978e:	48 89 04 24 	movq	%rax, (%rsp)
  419792:	e8 e9 fb fe ff 	callq	-66583 <runtime.(*lfstack).push>
  419797:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  41979c:	48 83 c4 18 	addq	$24, %rsp
  4197a0:	c3 	retq
  4197a1:	e8 ca ad 02 00 	callq	175562 <runtime.morestack_noctxt>
  4197a6:	eb a8 	jmp	-88 <runtime.putfull>
  4197a8:	cc 	int3
  4197a9:	cc 	int3
  4197aa:	cc 	int3
  4197ab:	cc 	int3
  4197ac:	cc 	int3
  4197ad:	cc 	int3
  4197ae:	cc 	int3
  4197af:	cc 	int3

runtime.trygetfull:
  4197b0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4197b9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4197bd:	76 59 	jbe	89 <runtime.trygetfull+0x68>
  4197bf:	48 83 ec 20 	subq	$32, %rsp
  4197c3:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  4197c8:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  4197cd:	48 8d 05 cc e5 08 00 	leaq	583116(%rip), %rax
  4197d4:	48 89 04 24 	movq	%rax, (%rsp)
  4197d8:	e8 03 fd fe ff 	callq	-66301 <runtime.(*lfstack).pop>
  4197dd:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4197e2:	48 85 c0 	testq	%rax, %rax
  4197e5:	74 22 	je	34 <runtime.trygetfull+0x59>
  4197e7:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  4197ec:	48 89 04 24 	movq	%rax, (%rsp)
  4197f0:	e8 2b fc ff ff 	callq	-981 <runtime.(*workbuf).checknonempty>
  4197f5:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4197fa:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  4197ff:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  419804:	48 83 c4 20 	addq	$32, %rsp
  419808:	c3 	retq
  419809:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  41980e:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  419813:	48 83 c4 20 	addq	$32, %rsp
  419817:	c3 	retq
  419818:	e8 53 ad 02 00 	callq	175443 <runtime.morestack_noctxt>
  41981d:	eb 91 	jmp	-111 <runtime.trygetfull>
  41981f:	cc 	int3

runtime.getfull:
  419820:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  419829:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41982d:	0f 86 ea 02 00 00 	jbe	746 <runtime.getfull+0x2fd>
  419833:	48 83 ec 38 	subq	$56, %rsp
  419837:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  41983c:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  419841:	48 8d 05 58 e5 08 00 	leaq	583000(%rip), %rax
  419848:	48 89 04 24 	movq	%rax, (%rsp)
  41984c:	e8 8f fc fe ff 	callq	-66417 <runtime.(*lfstack).pop>
  419851:	48 8b 44 24 08 	movq	8(%rsp), %rax
  419856:	48 85 c0 	testq	%rax, %rax
  419859:	0f 85 22 01 00 00 	jne	290 <runtime.getfull+0x161>
  41985f:	b8 01 00 00 00 	movl	$1, %eax
  419864:	48 8d 0d d5 e5 08 00 	leaq	583125(%rip), %rcx
  41986b:	f0 	lock
  41986c:	0f c1 01 	xaddl	%eax, (%rcx)
  41986f:	ff c0 	incl	%eax
  419871:	8b 15 b9 e5 08 00 	movl	583097(%rip), %edx
  419877:	39 d0 	cmpl	%edx, %eax
  419879:	0f 87 20 02 00 00 	ja	544 <runtime.getfull+0x27f>
  41987f:	31 c0 	xorl	%eax, %eax
  419881:	eb 10 	jmp	16 <runtime.getfull+0x73>
  419883:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  419888:	48 8d 42 01 	leaq	1(%rdx), %rax
  41988c:	48 8d 0d ad e5 08 00 	leaq	583085(%rip), %rcx
  419893:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  419898:	48 8b 15 01 e5 08 00 	movq	582913(%rip), %rdx
  41989f:	48 85 d2 	testq	%rdx, %rdx
  4198a2:	75 62 	jne	98 <runtime.getfull+0xe6>
  4198a4:	8b 15 96 e5 08 00 	movl	583062(%rip), %edx
  4198aa:	8b 1d 80 e5 08 00 	movl	583040(%rip), %ebx
  4198b0:	39 da 	cmpl	%ebx, %edx
  4198b2:	75 10 	jne	16 <runtime.getfull+0xa4>
  4198b4:	8b 15 6e e5 08 00 	movl	583022(%rip), %edx
  4198ba:	8b 1d 6c e5 08 00 	movl	583020(%rip), %ebx
  4198c0:	39 da 	cmpl	%ebx, %edx
  4198c2:	73 2f 	jae	47 <runtime.getfull+0xd3>
  4198c4:	48 83 f8 0a 	cmpq	$10, %rax
  4198c8:	7c 1b 	jl	27 <runtime.getfull+0xc5>
  4198ca:	48 83 f8 14 	cmpq	$20, %rax
  4198ce:	7d 07 	jge	7 <runtime.getfull+0xb7>
  4198d0:	e8 7b e6 02 00 	callq	190075 <runtime.osyield>
  4198d5:	eb ac 	jmp	-84 <runtime.getfull+0x63>
  4198d7:	c7 04 24 64 00 00 00 	movl	$100, (%rsp)
  4198de:	e8 cd df 02 00 	callq	188365 <runtime.usleep>
  4198e3:	eb 9e 	jmp	-98 <runtime.getfull+0x63>
  4198e5:	c7 04 24 14 00 00 00 	movl	$20, (%rsp)
  4198ec:	e8 7f c2 02 00 	callq	180863 <runtime.procyield>
  4198f1:	eb 90 	jmp	-112 <runtime.getfull+0x63>
  4198f3:	48 c7 44 24 40 00 00 00 00 	movq	$0, 64(%rsp)
  4198fc:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  419901:	48 83 c4 38 	addq	$56, %rsp
  419905:	c3 	retq
  419906:	ba ff ff ff ff 	movl	$4294967295, %edx
  41990b:	f0 	lock
  41990c:	0f c1 11 	xaddl	%edx, (%rcx)
  41990f:	ff ca 	decl	%edx
  419911:	8b 1d 19 e5 08 00 	movl	582937(%rip), %ebx
  419917:	39 d3 	cmpl	%edx, %ebx
  419919:	0f 84 02 01 00 00 	je	258 <runtime.getfull+0x201>
  41991f:	48 8d 05 7a e4 08 00 	leaq	582778(%rip), %rax
  419926:	48 89 04 24 	movq	%rax, (%rsp)
  41992a:	e8 b1 fb fe ff 	callq	-66639 <runtime.(*lfstack).pop>
  41992f:	48 8b 44 24 08 	movq	8(%rsp), %rax
  419934:	48 85 c0 	testq	%rax, %rax
  419937:	75 26 	jne	38 <runtime.getfull+0x13f>
  419939:	b8 01 00 00 00 	movl	$1, %eax
  41993e:	48 8d 0d fb e4 08 00 	leaq	582907(%rip), %rcx
  419945:	f0 	lock
  419946:	0f c1 01 	xaddl	%eax, (%rcx)
  419949:	ff c0 	incl	%eax
  41994b:	8b 15 df e4 08 00 	movl	582879(%rip), %edx
  419951:	39 d0 	cmpl	%edx, %eax
  419953:	77 4e 	ja	78 <runtime.getfull+0x183>
  419955:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41995a:	e9 45 ff ff ff 	jmp	-187 <runtime.getfull+0x84>
  41995f:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  419964:	48 89 04 24 	movq	%rax, (%rsp)
  419968:	e8 b3 fa ff ff 	callq	-1357 <runtime.(*workbuf).checknonempty>
  41996d:	48 8b 44 24 28 	movq	40(%rsp), %rax
  419972:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  419977:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  41997c:	48 83 c4 38 	addq	$56, %rsp
  419980:	c3 	retq
  419981:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  419986:	48 89 04 24 	movq	%rax, (%rsp)
  41998a:	e8 91 fa ff ff 	callq	-1391 <runtime.(*workbuf).checknonempty>
  41998f:	48 8b 44 24 28 	movq	40(%rsp), %rax
  419994:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  419999:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  41999e:	48 83 c4 38 	addq	$56, %rsp
  4199a2:	c3 	retq
  4199a3:	89 44 24 14 	movl	%eax, 20(%rsp)
  4199a7:	89 54 24 1c 	movl	%edx, 28(%rsp)
  4199ab:	e8 50 81 00 00 	callq	33104 <runtime.printlock>
  4199b0:	48 8d 05 8f 19 05 00 	leaq	334223(%rip), %rax
  4199b7:	48 89 04 24 	movq	%rax, (%rsp)
  4199bb:	48 c7 44 24 08 15 00 00 00 	movq	$21, 8(%rsp)
  4199c4:	e8 77 8a 00 00 	callq	35447 <runtime.printstring>
  4199c9:	8b 44 24 14 	movl	20(%rsp), %eax
  4199cd:	48 89 04 24 	movq	%rax, (%rsp)
  4199d1:	e8 9a 87 00 00 	callq	34714 <runtime.printuint>
  4199d6:	48 8d 05 fc 0c 05 00 	leaq	331004(%rip), %rax
  4199dd:	48 89 04 24 	movq	%rax, (%rsp)
  4199e1:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  4199ea:	e8 51 8a 00 00 	callq	35409 <runtime.printstring>
  4199ef:	8b 44 24 1c 	movl	28(%rsp), %eax
  4199f3:	48 89 04 24 	movq	%rax, (%rsp)
  4199f7:	e8 74 87 00 00 	callq	34676 <runtime.printuint>
  4199fc:	e8 8f 83 00 00 	callq	33679 <runtime.printnl>
  419a01:	e8 7a 81 00 00 	callq	33146 <runtime.printunlock>
  419a06:	48 8d 05 22 1e 05 00 	leaq	335394(%rip), %rax
  419a0d:	48 89 04 24 	movq	%rax, (%rsp)
  419a11:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  419a1a:	e8 b1 77 00 00 	callq	30641 <runtime.throw>
  419a1f:	0f 0b 	ud2
  419a21:	89 54 24 18 	movl	%edx, 24(%rsp)
  419a25:	89 5c 24 1c 	movl	%ebx, 28(%rsp)
  419a29:	e8 d2 80 00 00 	callq	32978 <runtime.printlock>
  419a2e:	48 8d 05 11 19 05 00 	leaq	334097(%rip), %rax
  419a35:	48 89 04 24 	movq	%rax, (%rsp)
  419a39:	48 c7 44 24 08 15 00 00 00 	movq	$21, 8(%rsp)
  419a42:	e8 f9 89 00 00 	callq	35321 <runtime.printstring>
  419a47:	8b 44 24 18 	movl	24(%rsp), %eax
  419a4b:	48 89 04 24 	movq	%rax, (%rsp)
  419a4f:	e8 1c 87 00 00 	callq	34588 <runtime.printuint>
  419a54:	48 8d 05 7e 0c 05 00 	leaq	330878(%rip), %rax
  419a5b:	48 89 04 24 	movq	%rax, (%rsp)
  419a5f:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  419a68:	e8 d3 89 00 00 	callq	35283 <runtime.printstring>
  419a6d:	8b 44 24 1c 	movl	28(%rsp), %eax
  419a71:	48 89 04 24 	movq	%rax, (%rsp)
  419a75:	e8 f6 86 00 00 	callq	34550 <runtime.printuint>
  419a7a:	e8 11 83 00 00 	callq	33553 <runtime.printnl>
  419a7f:	e8 fc 80 00 00 	callq	33020 <runtime.printunlock>
  419a84:	48 8d 05 a4 1d 05 00 	leaq	335268(%rip), %rax
  419a8b:	48 89 04 24 	movq	%rax, (%rsp)
  419a8f:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  419a98:	e8 33 77 00 00 	callq	30515 <runtime.throw>
  419a9d:	0f 0b 	ud2
  419a9f:	89 44 24 10 	movl	%eax, 16(%rsp)
  419aa3:	89 54 24 1c 	movl	%edx, 28(%rsp)
  419aa7:	e8 54 80 00 00 	callq	32852 <runtime.printlock>
  419aac:	48 8d 05 93 18 05 00 	leaq	333971(%rip), %rax
  419ab3:	48 89 04 24 	movq	%rax, (%rsp)
  419ab7:	48 c7 44 24 08 15 00 00 00 	movq	$21, 8(%rsp)
  419ac0:	e8 7b 89 00 00 	callq	35195 <runtime.printstring>
  419ac5:	8b 44 24 10 	movl	16(%rsp), %eax
  419ac9:	48 89 04 24 	movq	%rax, (%rsp)
  419acd:	e8 9e 86 00 00 	callq	34462 <runtime.printuint>
  419ad2:	48 8d 05 00 0c 05 00 	leaq	330752(%rip), %rax
  419ad9:	48 89 04 24 	movq	%rax, (%rsp)
  419add:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  419ae6:	e8 55 89 00 00 	callq	35157 <runtime.printstring>
  419aeb:	8b 44 24 1c 	movl	28(%rsp), %eax
  419aef:	48 89 04 24 	movq	%rax, (%rsp)
  419af3:	e8 78 86 00 00 	callq	34424 <runtime.printuint>
  419af8:	e8 93 82 00 00 	callq	33427 <runtime.printnl>
  419afd:	e8 7e 80 00 00 	callq	32894 <runtime.printunlock>
  419b02:	48 8d 05 26 1d 05 00 	leaq	335142(%rip), %rax
  419b09:	48 89 04 24 	movq	%rax, (%rsp)
  419b0d:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  419b16:	e8 b5 76 00 00 	callq	30389 <runtime.throw>
  419b1b:	0f 0b 	ud2
  419b1d:	e8 4e aa 02 00 	callq	174670 <runtime.morestack_noctxt>
  419b22:	e9 f9 fc ff ff 	jmp	-775 <runtime.getfull>
  419b27:	cc 	int3
  419b28:	cc 	int3
  419b29:	cc 	int3
  419b2a:	cc 	int3
  419b2b:	cc 	int3
  419b2c:	cc 	int3
  419b2d:	cc 	int3
  419b2e:	cc 	int3
  419b2f:	cc 	int3

runtime.handoff:
  419b30:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  419b39:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  419b3d:	0f 86 97 00 00 00 	jbe	151 <runtime.handoff+0xaa>
  419b43:	48 83 ec 28 	subq	$40, %rsp
  419b47:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  419b4c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  419b51:	e8 8a f9 ff ff 	callq	-1654 <runtime.getempty>
  419b56:	48 8b 04 24 	movq	(%rsp), %rax
  419b5a:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  419b5f:	48 8b 51 10 	movq	16(%rcx), %rdx
  419b63:	48 89 d3 	movq	%rdx, %rbx
  419b66:	48 c1 fa 3f 	sarq	$63, %rdx
  419b6a:	48 c1 ea 3f 	shrq	$63, %rdx
  419b6e:	48 01 da 	addq	%rbx, %rdx
  419b71:	48 d1 fa 	sarq	%rdx
  419b74:	48 29 d3 	subq	%rdx, %rbx
  419b77:	48 89 59 10 	movq	%rbx, 16(%rcx)
  419b7b:	48 89 50 10 	movq	%rdx, 16(%rax)
  419b7f:	48 8b 59 10 	movq	16(%rcx), %rbx
  419b83:	48 81 fb fd 00 00 00 	cmpq	$253, %rbx
  419b8a:	73 47 	jae	71 <runtime.handoff+0xa3>
  419b8c:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  419b91:	48 8d 5c d9 18 	leaq	24(%rcx,%rbx,8), %rbx
  419b96:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  419b9b:	48 8d 58 18 	leaq	24(%rax), %rbx
  419b9f:	48 89 1c 24 	movq	%rbx, (%rsp)
  419ba3:	48 c1 e2 03 	shlq	$3, %rdx
  419ba7:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  419bac:	e8 4f d5 02 00 	callq	185679 <runtime.memmove>
  419bb1:	48 8b 44 24 30 	movq	48(%rsp), %rax
  419bb6:	48 89 04 24 	movq	%rax, (%rsp)
  419bba:	e8 91 fb ff ff 	callq	-1135 <runtime.putfull>
  419bbf:	48 8b 44 24 18 	movq	24(%rsp), %rax
  419bc4:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  419bc9:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  419bce:	48 83 c4 28 	addq	$40, %rsp
  419bd2:	c3 	retq
  419bd3:	e8 68 5e 00 00 	callq	24168 <runtime.panicindex>
  419bd8:	0f 0b 	ud2
  419bda:	e8 91 a9 02 00 	callq	174481 <runtime.morestack_noctxt>
  419bdf:	e9 4c ff ff ff 	jmp	-180 <runtime.handoff>
  419be4:	cc 	int3
  419be5:	cc 	int3
  419be6:	cc 	int3
  419be7:	cc 	int3
  419be8:	cc 	int3
  419be9:	cc 	int3
  419bea:	cc 	int3
  419beb:	cc 	int3
  419bec:	cc 	int3
  419bed:	cc 	int3
  419bee:	cc 	int3
  419bef:	cc 	int3

runtime.prepareFreeWorkbufs:
  419bf0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  419bf9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  419bfd:	0f 86 86 00 00 00 	jbe	134 <runtime.prepareFreeWorkbufs+0x99>
  419c03:	48 83 ec 18 	subq	$24, %rsp
  419c07:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  419c0c:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  419c11:	48 8d 05 d8 e1 08 00 	leaq	582104(%rip), %rax
  419c18:	48 89 04 24 	movq	%rax, (%rsp)
  419c1c:	e8 ff f8 fe ff 	callq	-67329 <runtime.lock>
  419c21:	48 8b 05 78 e1 08 00 	movq	582008(%rip), %rax
  419c28:	48 85 c0 	testq	%rax, %rax
  419c2b:	75 41 	jne	65 <runtime.prepareFreeWorkbufs+0x7e>
  419c2d:	48 c7 05 70 e1 08 00 00 00 00 00 	movq	$0, 582000(%rip)
  419c38:	48 8d 05 b9 e1 08 00 	leaq	582073(%rip), %rax
  419c3f:	48 89 04 24 	movq	%rax, (%rsp)
  419c43:	48 8d 05 be e1 08 00 	leaq	582078(%rip), %rax
  419c4a:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  419c4f:	e8 3c 28 00 00 	callq	10300 <runtime.(*mSpanList).takeAll>
  419c54:	48 8d 05 95 e1 08 00 	leaq	582037(%rip), %rax
  419c5b:	48 89 04 24 	movq	%rax, (%rsp)
  419c5f:	e8 5c fa fe ff 	callq	-66980 <runtime.unlock>
  419c64:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  419c69:	48 83 c4 18 	addq	$24, %rsp
  419c6d:	c3 	retq
  419c6e:	48 8d 05 f1 35 05 00 	leaq	341489(%rip), %rax
  419c75:	48 89 04 24 	movq	%rax, (%rsp)
  419c79:	48 c7 44 24 08 28 00 00 00 	movq	$40, 8(%rsp)
  419c82:	e8 49 75 00 00 	callq	30025 <runtime.throw>
  419c87:	0f 0b 	ud2
  419c89:	e8 e2 a8 02 00 	callq	174306 <runtime.morestack_noctxt>
  419c8e:	e9 5d ff ff ff 	jmp	-163 <runtime.prepareFreeWorkbufs>
  419c93:	cc 	int3
  419c94:	cc 	int3
  419c95:	cc 	int3
  419c96:	cc 	int3
  419c97:	cc 	int3
  419c98:	cc 	int3
  419c99:	cc 	int3
  419c9a:	cc 	int3
  419c9b:	cc 	int3
  419c9c:	cc 	int3
  419c9d:	cc 	int3
  419c9e:	cc 	int3
  419c9f:	cc 	int3

runtime.freeSomeWbufs:
  419ca0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  419ca9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  419cad:	0f 86 b5 00 00 00 	jbe	181 <runtime.freeSomeWbufs+0xc8>
  419cb3:	48 83 ec 28 	subq	$40, %rsp
  419cb7:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  419cbc:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  419cc1:	48 8d 05 28 e1 08 00 	leaq	581928(%rip), %rax
  419cc8:	48 89 04 24 	movq	%rax, (%rsp)
  419ccc:	e8 4f f8 fe ff 	callq	-67505 <runtime.lock>
  419cd1:	8b 05 05 9c 0a 00 	movl	695301(%rip), %eax
  419cd7:	85 c0 	testl	%eax, %eax
  419cd9:	74 1f 	je	31 <runtime.freeSomeWbufs+0x5a>
  419cdb:	48 8d 05 0e e1 08 00 	leaq	581902(%rip), %rax
  419ce2:	48 89 04 24 	movq	%rax, (%rsp)
  419ce6:	e8 d5 f9 fe ff 	callq	-67115 <runtime.unlock>
  419ceb:	c6 44 24 38 00 	movb	$0, 56(%rsp)
  419cf0:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  419cf5:	48 83 c4 28 	addq	$40, %rsp
  419cf9:	c3 	retq
  419cfa:	48 8d 05 f7 e0 08 00 	leaq	581879(%rip), %rax
  419d01:	84 00 	testb	%al, (%rax)
  419d03:	48 8b 05 ee e0 08 00 	movq	581870(%rip), %rax
  419d0a:	48 85 c0 	testq	%rax, %rax
  419d0d:	74 cc 	je	-52 <runtime.freeSomeWbufs+0x3b>
  419d0f:	48 8d 05 6a 8a 02 00 	leaq	166506(%rip), %rax
  419d16:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  419d1b:	0f b6 44 24 30 	movzbl	48(%rsp), %eax
  419d20:	88 44 24 10 	movb	%al, 16(%rsp)
  419d24:	48 8d 44 24 08 	leaq	8(%rsp), %rax
  419d29:	48 89 04 24 	movq	%rax, (%rsp)
  419d2d:	e8 ee a6 02 00 	callq	173806 <runtime.systemstack>
  419d32:	48 8b 05 bf e0 08 00 	movq	581823(%rip), %rax
  419d39:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  419d3e:	48 8d 0d ab e0 08 00 	leaq	581803(%rip), %rcx
  419d45:	48 89 0c 24 	movq	%rcx, (%rsp)
  419d49:	e8 72 f9 fe ff 	callq	-67214 <runtime.unlock>
  419d4e:	48 8b 44 24 18 	movq	24(%rsp), %rax
  419d53:	48 85 c0 	testq	%rax, %rax
  419d56:	48 8d 44 24 38 	leaq	56(%rsp), %rax
  419d5b:	0f 95 00 	setne	(%rax)
  419d5e:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  419d63:	48 83 c4 28 	addq	$40, %rsp
  419d67:	c3 	retq
  419d68:	e8 03 a8 02 00 	callq	174083 <runtime.morestack_noctxt>
  419d6d:	e9 2e ff ff ff 	jmp	-210 <runtime.freeSomeWbufs>
  419d72:	cc 	int3
  419d73:	cc 	int3
  419d74:	cc 	int3
  419d75:	cc 	int3
  419d76:	cc 	int3
  419d77:	cc 	int3
  419d78:	cc 	int3
  419d79:	cc 	int3
  419d7a:	cc 	int3
  419d7b:	cc 	int3
  419d7c:	cc 	int3
  419d7d:	cc 	int3
  419d7e:	cc 	int3
  419d7f:	cc 	int3

runtime.recordspan:
  419d80:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  419d89:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  419d8d:	0f 86 e8 01 00 00 	jbe	488 <runtime.recordspan+0x1fb>
  419d93:	48 83 ec 48 	subq	$72, %rsp
  419d97:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  419d9c:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  419da1:	0f 57 c0 	xorps	%xmm0, %xmm0
  419da4:	0f 11 44 24 28 	movups	%xmm0, 40(%rsp)
  419da9:	0f 11 44 24 30 	movups	%xmm0, 48(%rsp)
  419dae:	48 8b 44 24 50 	movq	80(%rsp), %rax
  419db3:	84 00 	testb	%al, (%rax)
  419db5:	48 8d 88 30 10 00 00 	leaq	4144(%rax), %rcx
  419dbc:	48 8b 90 40 10 00 00 	movq	4160(%rax), %rdx
  419dc3:	48 8b 98 38 10 00 00 	movq	4152(%rax), %rbx
  419dca:	48 39 d3 	cmpq	%rdx, %rbx
  419dcd:	0f 8c 0b 01 00 00 	jl	267 <runtime.recordspan+0x15e>
  419dd3:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  419dd8:	48 8d 14 52 	leaq	(%rdx,%rdx,2), %rdx
  419ddc:	48 89 d3 	movq	%rdx, %rbx
  419ddf:	48 c1 fa 3f 	sarq	$63, %rdx
  419de3:	48 c1 ea 3f 	shrq	$63, %rdx
  419de7:	48 01 da 	addq	%rbx, %rdx
  419dea:	48 d1 fa 	sarq	%rdx
  419ded:	48 81 fa 00 20 00 00 	cmpq	$8192, %rdx
  419df4:	0f 8e 4e 01 00 00 	jle	334 <runtime.recordspan+0x1c8>
  419dfa:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  419dff:	48 c7 44 24 28 00 00 00 00 	movq	$0, 40(%rsp)
  419e08:	0f 57 c0 	xorps	%xmm0, %xmm0
  419e0b:	0f 11 44 24 30 	movups	%xmm0, 48(%rsp)
  419e10:	48 c1 e2 03 	shlq	$3, %rdx
  419e14:	48 89 14 24 	movq	%rdx, (%rsp)
  419e18:	48 8d 0d 81 a9 0a 00 	leaq	698753(%rip), %rcx
  419e1f:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  419e24:	e8 f7 51 ff ff 	callq	-44553 <runtime.sysAlloc>
  419e29:	48 8b 44 24 10 	movq	16(%rsp), %rax
  419e2e:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  419e33:	48 85 c0 	testq	%rax, %rax
  419e36:	0f 84 24 01 00 00 	je	292 <runtime.recordspan+0x1e0>
  419e3c:	48 8b 44 24 50 	movq	80(%rsp), %rax
  419e41:	48 8b 88 38 10 00 00 	movq	4152(%rax), %rcx
  419e48:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  419e4d:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  419e52:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  419e57:	48 8b 88 38 10 00 00 	movq	4152(%rax), %rcx
  419e5e:	48 8b 90 30 10 00 00 	movq	4144(%rax), %rdx
  419e65:	48 85 c9 	testq	%rcx, %rcx
  419e68:	7e 2a 	jle	42 <runtime.recordspan+0x114>
  419e6a:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  419e6f:	48 8b 74 24 28 	movq	40(%rsp), %rsi
  419e74:	48 39 cb 	cmpq	%rcx, %rbx
  419e77:	0f 8e c3 00 00 00 	jle	195 <runtime.recordspan+0x1c0>
  419e7d:	48 89 34 24 	movq	%rsi, (%rsp)
  419e81:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  419e86:	48 c1 e1 03 	shlq	$3, %rcx
  419e8a:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  419e8f:	e8 6c d2 02 00 	callq	184940 <runtime.memmove>
  419e94:	48 8b 44 24 20 	movq	32(%rsp), %rax
  419e99:	84 00 	testb	%al, (%rax)
  419e9b:	48 8b 44 24 50 	movq	80(%rsp), %rax
  419ea0:	48 8b 88 40 10 00 00 	movq	4160(%rax), %rcx
  419ea7:	48 8b 90 38 10 00 00 	movq	4152(%rax), %rdx
  419eae:	48 8b 98 30 10 00 00 	movq	4144(%rax), %rbx
  419eb5:	48 8b 74 24 28 	movq	40(%rsp), %rsi
  419eba:	48 8b 7c 24 38 	movq	56(%rsp), %rdi
  419ebf:	4c 8b 44 24 30 	movq	48(%rsp), %r8
  419ec4:	4c 89 80 38 10 00 00 	movq	%r8, 4152(%rax)
  419ecb:	48 89 b8 40 10 00 00 	movq	%rdi, 4160(%rax)
  419ed2:	48 89 b0 30 10 00 00 	movq	%rsi, 4144(%rax)
  419ed9:	48 85 d2 	testq	%rdx, %rdx
  419edc:	75 3d 	jne	61 <runtime.recordspan+0x19b>
  419ede:	48 8b 88 38 10 00 00 	movq	4152(%rax), %rcx
  419ee5:	48 8b 90 40 10 00 00 	movq	4160(%rax), %rdx
  419eec:	48 8d 59 01 	leaq	1(%rcx), %rbx
  419ef0:	48 39 d3 	cmpq	%rdx, %rbx
  419ef3:	77 64 	ja	100 <runtime.recordspan+0x1d9>
  419ef5:	48 89 98 38 10 00 00 	movq	%rbx, 4152(%rax)
  419efc:	48 8b 80 30 10 00 00 	movq	4144(%rax), %rax
  419f03:	48 39 d9 	cmpq	%rbx, %rcx
  419f06:	73 4a 	jae	74 <runtime.recordspan+0x1d2>
  419f08:	48 8b 54 24 58 	movq	88(%rsp), %rdx
  419f0d:	48 89 14 c8 	movq	%rdx, (%rax,%rcx,8)
  419f11:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  419f16:	48 83 c4 48 	addq	$72, %rsp
  419f1a:	c3 	retq
  419f1b:	48 89 1c 24 	movq	%rbx, (%rsp)
  419f1f:	48 c1 e1 03 	shlq	$3, %rcx
  419f23:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  419f28:	48 8d 05 71 a8 0a 00 	leaq	698481(%rip), %rax
  419f2f:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  419f34:	e8 07 54 ff ff 	callq	-44025 <runtime.sysFree>
  419f39:	48 8b 44 24 50 	movq	80(%rsp), %rax
  419f3e:	eb 9e 	jmp	-98 <runtime.recordspan+0x15e>
  419f40:	48 89 d9 	movq	%rbx, %rcx
  419f43:	e9 35 ff ff ff 	jmp	-203 <runtime.recordspan+0xfd>
  419f48:	ba 00 20 00 00 	movl	$8192, %edx
  419f4d:	e9 a8 fe ff ff 	jmp	-344 <runtime.recordspan+0x7a>
  419f52:	e8 e9 5a 00 00 	callq	23273 <runtime.panicindex>
  419f57:	0f 0b 	ud2
  419f59:	e8 52 5b 00 00 	callq	23378 <runtime.panicslice>
  419f5e:	0f 0b 	ud2
  419f60:	48 8d 05 fe 27 05 00 	leaq	337918(%rip), %rax
  419f67:	48 89 04 24 	movq	%rax, (%rsp)
  419f6b:	48 c7 44 24 08 1f 00 00 00 	movq	$31, 8(%rsp)
  419f74:	e8 57 72 00 00 	callq	29271 <runtime.throw>
  419f79:	0f 0b 	ud2
  419f7b:	e8 f0 a5 02 00 	callq	173552 <runtime.morestack_noctxt>
  419f80:	e9 fb fd ff ff 	jmp	-517 <runtime.recordspan>
  419f85:	cc 	int3
  419f86:	cc 	int3
  419f87:	cc 	int3
  419f88:	cc 	int3
  419f89:	cc 	int3
  419f8a:	cc 	int3
  419f8b:	cc 	int3
  419f8c:	cc 	int3
  419f8d:	cc 	int3
  419f8e:	cc 	int3
  419f8f:	cc 	int3

runtime.(*mheap).init:
  419f90:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  419f99:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  419f9d:	0f 86 bc 04 00 00 	jbe	1212 <runtime.(*mheap).init+0x4cf>
  419fa3:	48 83 ec 20 	subq	$32, %rsp
  419fa7:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  419fac:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  419fb1:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  419fb6:	84 01 	testb	%al, (%rcx)
  419fb8:	48 8d 91 60 35 00 00 	leaq	13664(%rcx), %rdx
  419fbf:	84 02 	testb	%al, (%rdx)
  419fc1:	48 c7 81 60 35 00 00 30 00 00 00 	movq	$48, 13664(%rcx)
  419fcc:	8b 15 3e 9a 0a 00 	movl	694846(%rip), %edx
  419fd2:	48 8d b9 68 35 00 00 	leaq	13672(%rcx), %rdi
  419fd9:	48 8d 99 70 35 00 00 	leaq	13680(%rcx), %rbx
  419fe0:	85 d2 	testl	%edx, %edx
  419fe2:	0f 85 61 04 00 00 	jne	1121 <runtime.(*mheap).init+0x4b9>
  419fe8:	0f 57 c0 	xorps	%xmm0, %xmm0
  419feb:	0f 11 81 68 35 00 00 	movups	%xmm0, 13672(%rcx)
  419ff2:	0f 57 c0 	xorps	%xmm0, %xmm0
  419ff5:	0f 11 81 78 35 00 00 	movups	%xmm0, 13688(%rcx)
  419ffc:	c7 81 88 35 00 00 00 00 00 00 	movl	$0, 13704(%rcx)
  41a006:	48 c7 81 90 35 00 00 00 00 00 00 	movq	$0, 13712(%rcx)
  41a011:	8b 15 f9 99 0a 00 	movl	694777(%rip), %edx
  41a017:	48 8d b9 98 35 00 00 	leaq	13720(%rcx), %rdi
  41a01e:	85 d2 	testl	%edx, %edx
  41a020:	0f 85 0f 04 00 00 	jne	1039 <runtime.(*mheap).init+0x4a5>
  41a026:	48 8d 05 73 a7 0a 00 	leaq	698227(%rip), %rax
  41a02d:	48 89 81 98 35 00 00 	movq	%rax, 13720(%rcx)
  41a034:	c6 81 a0 35 00 00 01 	movb	$1, 13728(%rcx)
  41a03b:	48 8d 91 d0 34 00 00 	leaq	13520(%rcx), %rdx
  41a042:	84 02 	testb	%al, (%rdx)
  41a044:	48 c7 81 d0 34 00 00 98 00 00 00 	movq	$152, 13520(%rcx)
  41a04f:	8b 15 bb 99 0a 00 	movl	694715(%rip), %edx
  41a055:	48 8d b9 d8 34 00 00 	leaq	13528(%rcx), %rdi
  41a05c:	48 8d 99 e0 34 00 00 	leaq	13536(%rcx), %rbx
  41a063:	85 d2 	testl	%edx, %edx
  41a065:	0f 85 a4 03 00 00 	jne	932 <runtime.(*mheap).init+0x47f>
  41a06b:	48 8d 15 4e 41 05 00 	leaq	344398(%rip), %rdx
  41a072:	48 89 91 d8 34 00 00 	movq	%rdx, 13528(%rcx)
  41a079:	48 89 89 e0 34 00 00 	movq	%rcx, 13536(%rcx)
  41a080:	0f 11 81 e8 34 00 00 	movups	%xmm0, 13544(%rcx)
  41a087:	c7 81 f8 34 00 00 00 00 00 00 	movl	$0, 13560(%rcx)
  41a091:	48 c7 81 00 35 00 00 00 00 00 00 	movq	$0, 13568(%rcx)
  41a09c:	8b 15 6e 99 0a 00 	movl	694638(%rip), %edx
  41a0a2:	48 8d b9 08 35 00 00 	leaq	13576(%rcx), %rdi
  41a0a9:	85 d2 	testl	%edx, %edx
  41a0ab:	0f 85 43 03 00 00 	jne	835 <runtime.(*mheap).init+0x464>
  41a0b1:	48 8d 15 c0 a6 0a 00 	leaq	698048(%rip), %rdx
  41a0b8:	48 89 91 08 35 00 00 	movq	%rdx, 13576(%rcx)
  41a0bf:	c6 81 10 35 00 00 01 	movb	$1, 13584(%rcx)
  41a0c6:	48 8d 91 18 35 00 00 	leaq	13592(%rcx), %rdx
  41a0cd:	84 02 	testb	%al, (%rdx)
  41a0cf:	48 c7 81 18 35 00 00 c8 06 00 00 	movq	$1736, 13592(%rcx)
  41a0da:	8b 15 30 99 0a 00 	movl	694576(%rip), %edx
  41a0e0:	48 8d b9 20 35 00 00 	leaq	13600(%rcx), %rdi
  41a0e7:	48 8d 99 28 35 00 00 	leaq	13608(%rcx), %rbx
  41a0ee:	85 d2 	testl	%edx, %edx
  41a0f0:	0f 85 de 02 00 00 	jne	734 <runtime.(*mheap).init+0x444>
  41a0f6:	0f 11 81 20 35 00 00 	movups	%xmm0, 13600(%rcx)
  41a0fd:	0f 11 81 30 35 00 00 	movups	%xmm0, 13616(%rcx)
  41a104:	c7 81 40 35 00 00 00 00 00 00 	movl	$0, 13632(%rcx)
  41a10e:	48 c7 81 48 35 00 00 00 00 00 00 	movq	$0, 13640(%rcx)
  41a119:	8b 15 f1 98 0a 00 	movl	694513(%rip), %edx
  41a11f:	48 8d b9 50 35 00 00 	leaq	13648(%rcx), %rdi
  41a126:	85 d2 	testl	%edx, %edx
  41a128:	0f 85 8b 02 00 00 	jne	651 <runtime.(*mheap).init+0x429>
  41a12e:	48 8d 15 53 a6 0a 00 	leaq	697939(%rip), %rdx
  41a135:	48 89 91 50 35 00 00 	movq	%rdx, 13648(%rcx)
  41a13c:	c6 81 58 35 00 00 01 	movb	$1, 13656(%rcx)
  41a143:	48 8d 91 a8 35 00 00 	leaq	13736(%rcx), %rdx
  41a14a:	84 02 	testb	%al, (%rdx)
  41a14c:	48 c7 81 a8 35 00 00 30 00 00 00 	movq	$48, 13736(%rcx)
  41a157:	8b 15 b3 98 0a 00 	movl	694451(%rip), %edx
  41a15d:	48 8d b9 b0 35 00 00 	leaq	13744(%rcx), %rdi
  41a164:	48 8d 99 b8 35 00 00 	leaq	13752(%rcx), %rbx
  41a16b:	85 d2 	testl	%edx, %edx
  41a16d:	0f 85 26 02 00 00 	jne	550 <runtime.(*mheap).init+0x409>
  41a173:	0f 11 81 b0 35 00 00 	movups	%xmm0, 13744(%rcx)
  41a17a:	0f 11 81 c0 35 00 00 	movups	%xmm0, 13760(%rcx)
  41a181:	c7 81 d0 35 00 00 00 00 00 00 	movl	$0, 13776(%rcx)
  41a18b:	48 c7 81 d8 35 00 00 00 00 00 00 	movq	$0, 13784(%rcx)
  41a196:	8b 15 74 98 0a 00 	movl	694388(%rip), %edx
  41a19c:	48 8d b9 e0 35 00 00 	leaq	13792(%rcx), %rdi
  41a1a3:	85 d2 	testl	%edx, %edx
  41a1a5:	0f 85 e1 01 00 00 	jne	481 <runtime.(*mheap).init+0x3fc>
  41a1ab:	48 89 81 e0 35 00 00 	movq	%rax, 13792(%rcx)
  41a1b2:	c6 81 e8 35 00 00 01 	movb	$1, 13800(%rcx)
  41a1b9:	48 8d 91 f0 35 00 00 	leaq	13808(%rcx), %rdx
  41a1c0:	84 02 	testb	%al, (%rdx)
  41a1c2:	48 c7 81 f0 35 00 00 18 00 00 00 	movq	$24, 13808(%rcx)
  41a1cd:	8b 15 3d 98 0a 00 	movl	694333(%rip), %edx
  41a1d3:	48 8d b9 f8 35 00 00 	leaq	13816(%rcx), %rdi
  41a1da:	48 8d 99 00 36 00 00 	leaq	13824(%rcx), %rbx
  41a1e1:	85 d2 	testl	%edx, %edx
  41a1e3:	0f 85 83 01 00 00 	jne	387 <runtime.(*mheap).init+0x3dc>
  41a1e9:	0f 11 81 f8 35 00 00 	movups	%xmm0, 13816(%rcx)
  41a1f0:	0f 11 81 08 36 00 00 	movups	%xmm0, 13832(%rcx)
  41a1f7:	c7 81 18 36 00 00 00 00 00 00 	movl	$0, 13848(%rcx)
  41a201:	48 c7 81 20 36 00 00 00 00 00 00 	movq	$0, 13856(%rcx)
  41a20c:	8b 15 fe 97 0a 00 	movl	694270(%rip), %edx
  41a212:	48 8d b9 28 36 00 00 	leaq	13864(%rcx), %rdi
  41a219:	85 d2 	testl	%edx, %edx
  41a21b:	0f 85 3e 01 00 00 	jne	318 <runtime.(*mheap).init+0x3cf>
  41a221:	48 89 81 28 36 00 00 	movq	%rax, 13864(%rcx)
  41a228:	c6 81 30 36 00 00 01 	movb	$1, 13872(%rcx)
  41a22f:	c6 81 10 35 00 00 00 	movb	$0, 13584(%rcx)
  41a236:	31 c0 	xorl	%eax, %eax
  41a238:	eb 35 	jmp	53 <runtime.(*mheap).init+0x2df>
  41a23a:	48 89 c2 	movq	%rax, %rdx
  41a23d:	48 c1 e0 04 	shlq	$4, %rax
  41a241:	48 c7 44 01 08 00 00 00 00 	movq	$0, 8(%rcx,%rax)
  41a24a:	48 c7 44 01 10 00 00 00 00 	movq	$0, 16(%rcx,%rax)
  41a253:	48 c7 84 01 10 08 00 00 00 00 00 00 	movq	$0, 2064(%rcx,%rax)
  41a25f:	48 c7 84 01 18 08 00 00 00 00 00 00 	movq	$0, 2072(%rcx,%rax)
  41a26b:	48 8d 42 01 	leaq	1(%rdx), %rax
  41a26f:	48 3d 80 00 00 00 	cmpq	$128, %rax
  41a275:	7c c3 	jl	-61 <runtime.(*mheap).init+0x2aa>
  41a277:	48 8d 91 10 10 00 00 	leaq	4112(%rcx), %rdx
  41a27e:	84 02 	testb	%al, (%rdx)
  41a280:	0f 11 81 10 10 00 00 	movups	%xmm0, 4112(%rcx)
  41a287:	31 c0 	xorl	%eax, %eax
  41a289:	eb 60 	jmp	96 <runtime.(*mheap).init+0x35b>
  41a28b:	48 89 c2 	movq	%rax, %rdx
  41a28e:	48 c1 e0 06 	shlq	$6, %rax
  41a292:	48 8d 9c 01 50 13 00 00 	leaq	4944(%rcx,%rax), %rbx
  41a29a:	84 03 	testb	%al, (%rbx)
  41a29c:	88 94 01 58 13 00 00 	movb	%dl, 4952(%rcx,%rax)
  41a2a3:	48 8d 9c 01 60 13 00 00 	leaq	4960(%rcx,%rax), %rbx
  41a2ab:	84 03 	testb	%al, (%rbx)
  41a2ad:	48 c7 84 01 60 13 00 00 00 00 00 00 	movq	$0, 4960(%rcx,%rax)
  41a2b9:	48 c7 84 01 68 13 00 00 00 00 00 00 	movq	$0, 4968(%rcx,%rax)
  41a2c5:	48 8d 9c 01 70 13 00 00 	leaq	4976(%rcx,%rax), %rbx
  41a2cd:	84 03 	testb	%al, (%rbx)
  41a2cf:	48 c7 84 01 70 13 00 00 00 00 00 00 	movq	$0, 4976(%rcx,%rax)
  41a2db:	48 c7 84 01 78 13 00 00 00 00 00 00 	movq	$0, 4984(%rcx,%rax)
  41a2e7:	48 8d 42 01 	leaq	1(%rdx), %rax
  41a2eb:	48 3d 86 00 00 00 	cmpq	$134, %rax
  41a2f1:	7c 98 	jl	-104 <runtime.(*mheap).init+0x2fb>
  41a2f3:	48 8d 91 48 10 00 00 	leaq	4168(%rcx), %rdx
  41a2fa:	84 02 	testb	%al, (%rdx)
  41a2fc:	8b 15 0e 97 0a 00 	movl	694030(%rip), %edx
  41a302:	48 8d b9 48 10 00 00 	leaq	4168(%rcx), %rdi
  41a309:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41a30e:	85 d2 	testl	%edx, %edx
  41a310:	75 46 	jne	70 <runtime.(*mheap).init+0x3c8>
  41a312:	48 89 81 48 10 00 00 	movq	%rax, 4168(%rcx)
  41a319:	48 c7 81 50 10 00 00 00 00 00 00 	movq	$0, 4176(%rcx)
  41a324:	48 8b 44 24 38 	movq	56(%rsp), %rax
  41a329:	48 c1 e8 03 	shrq	$3, %rax
  41a32d:	48 89 81 58 10 00 00 	movq	%rax, 4184(%rcx)
  41a334:	48 8b 81 30 13 00 00 	movq	4912(%rcx), %rax
  41a33b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41a340:	48 89 0c 24 	movq	%rcx, (%rsp)
  41a344:	c6 44 24 10 00 	movb	$0, 16(%rsp)
  41a349:	e8 22 01 00 00 	callq	290 <runtime.(*mheap).setArenaUsed>
  41a34e:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  41a353:	48 83 c4 20 	addq	$32, %rsp
  41a357:	c3 	retq
  41a358:	e8 43 c5 02 00 	callq	181571 <runtime.gcWriteBarrier>
  41a35d:	eb ba 	jmp	-70 <runtime.(*mheap).init+0x389>
  41a35f:	e8 3c c5 02 00 	callq	181564 <runtime.gcWriteBarrier>
  41a364:	0f 57 c0 	xorps	%xmm0, %xmm0
  41a367:	e9 bc fe ff ff 	jmp	-324 <runtime.(*mheap).init+0x298>
  41a36c:	31 c0 	xorl	%eax, %eax
  41a36e:	e8 2d c5 02 00 	callq	181549 <runtime.gcWriteBarrier>
  41a373:	48 89 df 	movq	%rbx, %rdi
  41a376:	31 c0 	xorl	%eax, %eax
  41a378:	e8 23 c5 02 00 	callq	181539 <runtime.gcWriteBarrier>
  41a37d:	48 8d 05 1c a4 0a 00 	leaq	697372(%rip), %rax
  41a384:	0f 57 c0 	xorps	%xmm0, %xmm0
  41a387:	e9 64 fe ff ff 	jmp	-412 <runtime.(*mheap).init+0x260>
  41a38c:	e8 0f c5 02 00 	callq	181519 <runtime.gcWriteBarrier>
  41a391:	0f 57 c0 	xorps	%xmm0, %xmm0
  41a394:	e9 19 fe ff ff 	jmp	-487 <runtime.(*mheap).init+0x222>
  41a399:	31 c0 	xorl	%eax, %eax
  41a39b:	e8 00 c5 02 00 	callq	181504 <runtime.gcWriteBarrier>
  41a3a0:	48 89 df 	movq	%rbx, %rdi
  41a3a3:	31 c0 	xorl	%eax, %eax
  41a3a5:	e8 f6 c4 02 00 	callq	181494 <runtime.gcWriteBarrier>
  41a3aa:	48 8d 05 ef a3 0a 00 	leaq	697327(%rip), %rax
  41a3b1:	0f 57 c0 	xorps	%xmm0, %xmm0
  41a3b4:	e9 c1 fd ff ff 	jmp	-575 <runtime.(*mheap).init+0x1ea>
  41a3b9:	48 8d 05 c8 a3 0a 00 	leaq	697288(%rip), %rax
  41a3c0:	e8 db c4 02 00 	callq	181467 <runtime.gcWriteBarrier>
  41a3c5:	48 8d 05 d4 a3 0a 00 	leaq	697300(%rip), %rax
  41a3cc:	0f 57 c0 	xorps	%xmm0, %xmm0
  41a3cf:	e9 68 fd ff ff 	jmp	-664 <runtime.(*mheap).init+0x1ac>
  41a3d4:	31 c0 	xorl	%eax, %eax
  41a3d6:	e8 c5 c4 02 00 	callq	181445 <runtime.gcWriteBarrier>
  41a3db:	48 89 df 	movq	%rbx, %rdi
  41a3de:	31 c0 	xorl	%eax, %eax
  41a3e0:	e8 bb c4 02 00 	callq	181435 <runtime.gcWriteBarrier>
  41a3e5:	48 8d 05 b4 a3 0a 00 	leaq	697268(%rip), %rax
  41a3ec:	0f 57 c0 	xorps	%xmm0, %xmm0
  41a3ef:	e9 09 fd ff ff 	jmp	-759 <runtime.(*mheap).init+0x16d>
  41a3f4:	48 8d 05 7d a3 0a 00 	leaq	697213(%rip), %rax
  41a3fb:	e8 a0 c4 02 00 	callq	181408 <runtime.gcWriteBarrier>
  41a400:	48 8d 05 99 a3 0a 00 	leaq	697241(%rip), %rax
  41a407:	0f 57 c0 	xorps	%xmm0, %xmm0
  41a40a:	e9 b0 fc ff ff 	jmp	-848 <runtime.(*mheap).init+0x12f>
  41a40f:	48 8d 05 aa 3d 05 00 	leaq	343466(%rip), %rax
  41a416:	e8 85 c4 02 00 	callq	181381 <runtime.gcWriteBarrier>
  41a41b:	48 89 df 	movq	%rbx, %rdi
  41a41e:	48 89 c8 	movq	%rcx, %rax
  41a421:	e8 7a c4 02 00 	callq	181370 <runtime.gcWriteBarrier>
  41a426:	48 8d 05 73 a3 0a 00 	leaq	697203(%rip), %rax
  41a42d:	0f 57 c0 	xorps	%xmm0, %xmm0
  41a430:	e9 4b fc ff ff 	jmp	-949 <runtime.(*mheap).init+0xf0>
  41a435:	48 8d 05 64 a3 0a 00 	leaq	697188(%rip), %rax
  41a43c:	e8 5f c4 02 00 	callq	181343 <runtime.gcWriteBarrier>
  41a441:	0f 57 c0 	xorps	%xmm0, %xmm0
  41a444:	e9 eb fb ff ff 	jmp	-1045 <runtime.(*mheap).init+0xa4>
  41a449:	31 c0 	xorl	%eax, %eax
  41a44b:	e8 50 c4 02 00 	callq	181328 <runtime.gcWriteBarrier>
  41a450:	48 89 df 	movq	%rbx, %rdi
  41a453:	31 c0 	xorl	%eax, %eax
  41a455:	e8 46 c4 02 00 	callq	181318 <runtime.gcWriteBarrier>
  41a45a:	e9 93 fb ff ff 	jmp	-1133 <runtime.(*mheap).init+0x62>
  41a45f:	e8 0c a1 02 00 	callq	172300 <runtime.morestack_noctxt>
  41a464:	e9 27 fb ff ff 	jmp	-1241 <runtime.(*mheap).init>
  41a469:	cc 	int3
  41a46a:	cc 	int3
  41a46b:	cc 	int3
  41a46c:	cc 	int3
  41a46d:	cc 	int3
  41a46e:	cc 	int3
  41a46f:	cc 	int3

runtime.(*mheap).setArenaUsed:
  41a470:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41a479:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41a47d:	76 5b 	jbe	91 <runtime.(*mheap).setArenaUsed+0x6a>
  41a47f:	48 83 ec 18 	subq	$24, %rsp
  41a483:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  41a488:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  41a48d:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41a492:	48 89 04 24 	movq	%rax, (%rsp)
  41a496:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  41a49b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41a4a0:	e8 3b 19 ff ff 	callq	-59077 <runtime.(*mheap).mapBits>
  41a4a5:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41a4aa:	48 89 04 24 	movq	%rax, (%rsp)
  41a4ae:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  41a4b3:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41a4b8:	e8 33 00 00 00 	callq	51 <runtime.(*mheap).mapSpans>
  41a4bd:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41a4c2:	84 00 	testb	%al, (%rax)
  41a4c4:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  41a4c9:	48 89 88 30 13 00 00 	movq	%rcx, 4912(%rax)
  41a4d0:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  41a4d5:	48 83 c4 18 	addq	$24, %rsp
  41a4d9:	c3 	retq
  41a4da:	e8 91 a0 02 00 	callq	172177 <runtime.morestack_noctxt>
  41a4df:	eb 8f 	jmp	-113 <runtime.(*mheap).setArenaUsed>
  41a4e1:	cc 	int3
  41a4e2:	cc 	int3
  41a4e3:	cc 	int3
  41a4e4:	cc 	int3
  41a4e5:	cc 	int3
  41a4e6:	cc 	int3
  41a4e7:	cc 	int3
  41a4e8:	cc 	int3
  41a4e9:	cc 	int3
  41a4ea:	cc 	int3
  41a4eb:	cc 	int3
  41a4ec:	cc 	int3
  41a4ed:	cc 	int3
  41a4ee:	cc 	int3
  41a4ef:	cc 	int3

runtime.(*mheap).mapSpans:
  41a4f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41a4f9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41a4fd:	0f 86 bb 00 00 00 	jbe	187 <runtime.(*mheap).mapSpans+0xce>
  41a503:	48 83 ec 28 	subq	$40, %rsp
  41a507:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  41a50c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  41a511:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41a516:	84 00 	testb	%al, (%rax)
  41a518:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  41a51d:	48 2b 88 28 13 00 00 	subq	4904(%rax), %rcx
  41a524:	48 c1 e9 0d 	shrq	$13, %rcx
  41a528:	48 8b 15 71 94 0a 00 	movq	693361(%rip), %rdx
  41a52f:	48 8d 4c ca ff 	leaq	-1(%rdx,%rcx,8), %rcx
  41a534:	48 ff ca 	decq	%rdx
  41a537:	48 f7 d2 	notq	%rdx
  41a53a:	48 21 d1 	andq	%rdx, %rcx
  41a53d:	48 c1 e9 03 	shrq	$3, %rcx
  41a541:	48 8b 90 58 10 00 00 	movq	4184(%rax), %rdx
  41a548:	48 8b 98 50 10 00 00 	movq	4176(%rax), %rbx
  41a54f:	48 39 cb 	cmpq	%rcx, %rbx
  41a552:	73 52 	jae	82 <runtime.(*mheap).mapSpans+0xb6>
  41a554:	48 39 d1 	cmpq	%rdx, %rcx
  41a557:	77 5e 	ja	94 <runtime.(*mheap).mapSpans+0xc7>
  41a559:	48 89 88 50 10 00 00 	movq	%rcx, 4176(%rax)
  41a560:	48 8b 90 48 10 00 00 	movq	4168(%rax), %rdx
  41a567:	48 39 cb 	cmpq	%rcx, %rbx
  41a56a:	73 44 	jae	68 <runtime.(*mheap).mapSpans+0xc0>
  41a56c:	0f b6 80 48 13 00 00 	movzbl	4936(%rax), %eax
  41a573:	88 44 24 10 	movb	%al, 16(%rsp)
  41a577:	48 8d 04 da 	leaq	(%rdx,%rbx,8), %rax
  41a57b:	48 89 04 24 	movq	%rax, (%rsp)
  41a57f:	48 29 d9 	subq	%rbx, %rcx
  41a582:	48 c1 e1 03 	shlq	$3, %rcx
  41a586:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41a58b:	48 8d 05 0e a2 0a 00 	leaq	696846(%rip), %rax
  41a592:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  41a597:	e8 a4 4f ff ff 	callq	-45148 <runtime.sysMap>
  41a59c:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  41a5a1:	48 83 c4 28 	addq	$40, %rsp
  41a5a5:	c3 	retq
  41a5a6:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  41a5ab:	48 83 c4 28 	addq	$40, %rsp
  41a5af:	c3 	retq
  41a5b0:	e8 8b 54 00 00 	callq	21643 <runtime.panicindex>
  41a5b5:	0f 0b 	ud2
  41a5b7:	e8 f4 54 00 00 	callq	21748 <runtime.panicslice>
  41a5bc:	0f 0b 	ud2
  41a5be:	e8 ad 9f 02 00 	callq	171949 <runtime.morestack_noctxt>
  41a5c3:	e9 28 ff ff ff 	jmp	-216 <runtime.(*mheap).mapSpans>
  41a5c8:	cc 	int3
  41a5c9:	cc 	int3
  41a5ca:	cc 	int3
  41a5cb:	cc 	int3
  41a5cc:	cc 	int3
  41a5cd:	cc 	int3
  41a5ce:	cc 	int3
  41a5cf:	cc 	int3

runtime.(*mheap).reclaimList:
  41a5d0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41a5d9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41a5dd:	0f 86 36 01 00 00 	jbe	310 <runtime.(*mheap).reclaimList+0x149>
  41a5e3:	48 83 ec 48 	subq	$72, %rsp
  41a5e7:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  41a5ec:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  41a5f1:	8b 0d c9 2c 09 00 	movl	601289(%rip), %ecx
  41a5f7:	89 4c 24 1c 	movl	%ecx, 28(%rsp)
  41a5fb:	31 c0 	xorl	%eax, %eax
  41a5fd:	e9 e4 00 00 00 	jmp	228 <runtime.(*mheap).reclaimList+0x116>
  41a602:	48 8b 1b 	movq	(%rbx), %rbx
  41a605:	4c 89 c0 	movq	%r8, %rax
  41a608:	48 85 db 	testq	%rbx, %rbx
  41a60b:	0f 84 00 01 00 00 	je	256 <runtime.(*mheap).reclaimList+0x141>
  41a611:	8b 73 58 	movl	88(%rbx), %esi
  41a614:	8d 79 fe 	leal	-2(%rcx), %edi
  41a617:	39 fe 	cmpl	%edi, %esi
  41a619:	0f 85 ea 00 00 00 	jne	234 <runtime.(*mheap).reclaimList+0x139>
  41a61f:	8d 71 ff 	leal	-1(%rcx), %esi
  41a622:	49 89 c0 	movq	%rax, %r8
  41a625:	89 f8 	movl	%edi, %eax
  41a627:	f0 	lock
  41a628:	0f b1 73 58 	cmpxchgl	%esi, 88(%rbx)
  41a62c:	40 0f 94 c6 	sete	%sil
  41a630:	40 84 f6 	testb	%sil, %sil
  41a633:	75 19 	jne	25 <runtime.(*mheap).reclaimList+0x7e>
  41a635:	8b 73 58 	movl	88(%rbx), %esi
  41a638:	8d 79 ff 	leal	-1(%rcx), %edi
  41a63b:	39 fe 	cmpl	%edi, %esi
  41a63d:	74 c3 	je	-61 <runtime.(*mheap).reclaimList+0x32>
  41a63f:	4c 89 44 24 68 	movq	%r8, 104(%rsp)
  41a644:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  41a649:	48 83 c4 48 	addq	$72, %rsp
  41a64d:	c3 	retq
  41a64e:	48 89 5c 24 38 	movq	%rbx, 56(%rsp)
  41a653:	4c 89 44 24 30 	movq	%r8, 48(%rsp)
  41a658:	48 89 14 24 	movq	%rdx, (%rsp)
  41a65c:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  41a661:	e8 4a 1a 00 00 	callq	6730 <runtime.(*mSpanList).remove>
  41a666:	48 8b 44 24 58 	movq	88(%rsp), %rax
  41a66b:	48 89 04 24 	movq	%rax, (%rsp)
  41a66f:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  41a674:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41a679:	e8 f2 1c 00 00 	callq	7410 <runtime.(*mSpanList).insertBack>
  41a67e:	48 8b 44 24 50 	movq	80(%rsp), %rax
  41a683:	84 00 	testb	%al, (%rax)
  41a685:	48 89 04 24 	movq	%rax, (%rsp)
  41a689:	e8 32 f0 fe ff 	callq	-69582 <runtime.unlock>
  41a68e:	48 8b 44 24 38 	movq	56(%rsp), %rax
  41a693:	48 8b 48 20 	movq	32(%rax), %rcx
  41a697:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  41a69c:	48 89 04 24 	movq	%rax, (%rsp)
  41a6a0:	c6 44 24 08 00 	movb	$0, 8(%rsp)
  41a6a5:	e8 16 d9 ff ff 	callq	-9962 <runtime.(*mspan).sweep>
  41a6aa:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  41a6af:	84 c0 	testb	%al, %al
  41a6b1:	74 4f 	je	79 <runtime.(*mheap).reclaimList+0x132>
  41a6b3:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41a6b8:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  41a6bd:	48 01 c8 	addq	%rcx, %rax
  41a6c0:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  41a6c5:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  41a6ca:	48 89 0c 24 	movq	%rcx, (%rsp)
  41a6ce:	e8 4d ee fe ff 	callq	-70067 <runtime.lock>
  41a6d3:	48 8b 44 24 28 	movq	40(%rsp), %rax
  41a6d8:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  41a6dd:	48 39 c8 	cmpq	%rcx, %rax
  41a6e0:	73 11 	jae	17 <runtime.(*mheap).reclaimList+0x123>
  41a6e2:	8b 4c 24 1c 	movl	28(%rsp), %ecx
  41a6e6:	48 8b 54 24 58 	movq	88(%rsp), %rdx
  41a6eb:	48 8b 1a 	movq	(%rdx), %rbx
  41a6ee:	e9 15 ff ff ff 	jmp	-235 <runtime.(*mheap).reclaimList+0x38>
  41a6f3:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  41a6f8:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  41a6fd:	48 83 c4 48 	addq	$72, %rsp
  41a701:	c3 	retq
  41a702:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41a707:	eb b7 	jmp	-73 <runtime.(*mheap).reclaimList+0xf0>
  41a709:	49 89 c0 	movq	%rax, %r8
  41a70c:	e9 24 ff ff ff 	jmp	-220 <runtime.(*mheap).reclaimList+0x65>
  41a711:	49 89 c0 	movq	%rax, %r8
  41a714:	e9 26 ff ff ff 	jmp	-218 <runtime.(*mheap).reclaimList+0x6f>
  41a719:	e8 52 9e 02 00 	callq	171602 <runtime.morestack_noctxt>
  41a71e:	e9 ad fe ff ff 	jmp	-339 <runtime.(*mheap).reclaimList>
  41a723:	cc 	int3
  41a724:	cc 	int3
  41a725:	cc 	int3
  41a726:	cc 	int3
  41a727:	cc 	int3
  41a728:	cc 	int3
  41a729:	cc 	int3
  41a72a:	cc 	int3
  41a72b:	cc 	int3
  41a72c:	cc 	int3
  41a72d:	cc 	int3
  41a72e:	cc 	int3
  41a72f:	cc 	int3

runtime.(*mheap).reclaim:
  41a730:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41a739:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41a73d:	0f 86 91 01 00 00 	jbe	401 <runtime.(*mheap).reclaim+0x1a4>
  41a743:	48 83 ec 40 	subq	$64, %rsp
  41a747:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  41a74c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  41a751:	48 8b 44 24 50 	movq	80(%rsp), %rax
  41a756:	eb 09 	jmp	9 <runtime.(*mheap).reclaim+0x31>
  41a758:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  41a75d:	48 8d 41 01 	leaq	1(%rcx), %rax
  41a761:	48 3d 80 00 00 00 	cmpq	$128, %rax
  41a767:	7d 50 	jge	80 <runtime.(*mheap).reclaim+0x89>
  41a769:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  41a76e:	84 01 	testb	%al, (%rcx)
  41a770:	48 3d 80 00 00 00 	cmpq	$128, %rax
  41a776:	0f 83 51 01 00 00 	jae	337 <runtime.(*mheap).reclaim+0x19d>
  41a77c:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  41a781:	48 c1 e0 04 	shlq	$4, %rax
  41a785:	48 8d 84 08 10 08 00 00 	leaq	2064(%rax,%rcx), %rax
  41a78d:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41a792:	48 89 0c 24 	movq	%rcx, (%rsp)
  41a796:	48 8b 44 24 50 	movq	80(%rsp), %rax
  41a79b:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  41a7a0:	e8 2b fe ff ff 	callq	-469 <runtime.(*mheap).reclaimList>
  41a7a5:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41a7aa:	48 85 c0 	testq	%rax, %rax
  41a7ad:	74 a9 	je	-87 <runtime.(*mheap).reclaim+0x28>
  41a7af:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  41a7b4:	48 83 c4 40 	addq	$64, %rsp
  41a7b8:	c3 	retq
  41a7b9:	48 8b 44 24 48 	movq	72(%rsp), %rax
  41a7be:	84 00 	testb	%al, (%rax)
  41a7c0:	48 8d 88 10 10 00 00 	leaq	4112(%rax), %rcx
  41a7c7:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41a7cc:	48 89 04 24 	movq	%rax, (%rsp)
  41a7d0:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  41a7d5:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  41a7da:	e8 f1 fd ff ff 	callq	-527 <runtime.(*mheap).reclaimList>
  41a7df:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41a7e4:	48 85 c0 	testq	%rax, %rax
  41a7e7:	0f 85 cf 00 00 00 	jne	207 <runtime.(*mheap).reclaim+0x18c>
  41a7ed:	31 c0 	xorl	%eax, %eax
  41a7ef:	31 c9 	xorl	%ecx, %ecx
  41a7f1:	eb 0e 	jmp	14 <runtime.(*mheap).reclaim+0xd1>
  41a7f3:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  41a7f8:	48 ff c2 	incq	%rdx
  41a7fb:	48 89 c1 	movq	%rax, %rcx
  41a7fe:	48 89 d0 	movq	%rdx, %rax
  41a801:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  41a806:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  41a80b:	48 39 d0 	cmpq	%rdx, %rax
  41a80e:	7d 5b 	jge	91 <runtime.(*mheap).reclaim+0x13b>
  41a810:	48 3d 80 00 00 00 	cmpq	$128, %rax
  41a816:	7d 53 	jge	83 <runtime.(*mheap).reclaim+0x13b>
  41a818:	0f 83 a8 00 00 00 	jae	168 <runtime.(*mheap).reclaim+0x196>
  41a81e:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  41a823:	48 c1 e0 04 	shlq	$4, %rax
  41a827:	48 8b 74 24 48 	movq	72(%rsp), %rsi
  41a82c:	48 8d 84 30 10 08 00 00 	leaq	2064(%rax,%rsi), %rax
  41a834:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41a839:	48 89 34 24 	movq	%rsi, (%rsp)
  41a83d:	48 29 ca 	subq	%rcx, %rdx
  41a840:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  41a845:	e8 86 fd ff ff 	callq	-634 <runtime.(*mheap).reclaimList>
  41a84a:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41a84f:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  41a854:	48 01 c8 	addq	%rcx, %rax
  41a857:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  41a85c:	48 39 c8 	cmpq	%rcx, %rax
  41a85f:	72 92 	jb	-110 <runtime.(*mheap).reclaim+0xc3>
  41a861:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  41a866:	48 83 c4 40 	addq	$64, %rsp
  41a86a:	c3 	retq
  41a86b:	48 8b 44 24 48 	movq	72(%rsp), %rax
  41a870:	48 89 04 24 	movq	%rax, (%rsp)
  41a874:	e8 47 ee fe ff 	callq	-70073 <runtime.unlock>
  41a879:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41a87e:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  41a883:	e8 38 d2 ff ff 	callq	-11720 <runtime.sweepone>
  41a888:	48 8b 04 24 	movq	(%rsp), %rax
  41a88c:	48 83 f8 ff 	cmpq	$-1, %rax
  41a890:	74 12 	je	18 <runtime.(*mheap).reclaim+0x174>
  41a892:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  41a897:	48 01 c8 	addq	%rcx, %rax
  41a89a:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  41a89f:	48 39 c8 	cmpq	%rcx, %rax
  41a8a2:	72 da 	jb	-38 <runtime.(*mheap).reclaim+0x14e>
  41a8a4:	48 8b 44 24 48 	movq	72(%rsp), %rax
  41a8a9:	48 89 04 24 	movq	%rax, (%rsp)
  41a8ad:	e8 6e ec fe ff 	callq	-70546 <runtime.lock>
  41a8b2:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  41a8b7:	48 83 c4 40 	addq	$64, %rsp
  41a8bb:	c3 	retq
  41a8bc:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  41a8c1:	48 83 c4 40 	addq	$64, %rsp
  41a8c5:	c3 	retq
  41a8c6:	e8 75 51 00 00 	callq	20853 <runtime.panicindex>
  41a8cb:	0f 0b 	ud2
  41a8cd:	e8 6e 51 00 00 	callq	20846 <runtime.panicindex>
  41a8d2:	0f 0b 	ud2
  41a8d4:	e8 97 9c 02 00 	callq	171159 <runtime.morestack_noctxt>
  41a8d9:	e9 52 fe ff ff 	jmp	-430 <runtime.(*mheap).reclaim>
  41a8de:	cc 	int3
  41a8df:	cc 	int3

runtime.(*mheap).alloc_m:
  41a8e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41a8e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41a8ed:	0f 86 06 03 00 00 	jbe	774 <runtime.(*mheap).alloc_m+0x319>
  41a8f3:	48 83 ec 38 	subq	$56, %rsp
  41a8f7:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  41a8fc:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  41a901:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  41a90a:	48 8b 48 30 	movq	48(%rax), %rcx
  41a90e:	48 8b 09 	movq	(%rcx), %rcx
  41a911:	48 39 c8 	cmpq	%rcx, %rax
  41a914:	0f 85 c4 02 00 00 	jne	708 <runtime.(*mheap).alloc_m+0x2fe>
  41a91a:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  41a91f:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41a924:	84 00 	testb	%al, (%rax)
  41a926:	48 89 04 24 	movq	%rax, (%rsp)
  41a92a:	e8 f1 eb fe ff 	callq	-70671 <runtime.lock>
  41a92f:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41a934:	8b 88 24 10 00 00 	movl	4132(%rax), %ecx
  41a93a:	85 c9 	testl	%ecx, %ecx
  41a93c:	75 31 	jne	49 <runtime.(*mheap).alloc_m+0x8f>
  41a93e:	0f b6 0d 8b 8e 09 00 	movzbl	626315(%rip), %ecx
  41a945:	84 c9 	testb	%cl, %cl
  41a947:	0f 85 7b 02 00 00 	jne	635 <runtime.(*mheap).alloc_m+0x2e8>
  41a94d:	48 89 04 24 	movq	%rax, (%rsp)
  41a951:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  41a956:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41a95b:	e8 d0 fd ff ff 	callq	-560 <runtime.(*mheap).reclaim>
  41a960:	0f b6 05 69 8e 09 00 	movzbl	626281(%rip), %eax
  41a967:	84 c0 	testb	%al, %al
  41a969:	0f 85 4f 02 00 00 	jne	591 <runtime.(*mheap).alloc_m+0x2de>
  41a96f:	48 8b 44 24 28 	movq	40(%rsp), %rax
  41a974:	48 8b 48 30 	movq	48(%rax), %rcx
  41a978:	48 8b 89 60 01 00 00 	movq	352(%rcx), %rcx
  41a97f:	48 8b 49 08 	movq	8(%rcx), %rcx
  41a983:	48 03 0d be b4 0a 00 	addq	701630(%rip), %rcx
  41a98a:	48 89 0d b7 b4 0a 00 	movq	%rcx, 701623(%rip)
  41a991:	48 8b 48 30 	movq	48(%rax), %rcx
  41a995:	48 8b 89 60 01 00 00 	movq	352(%rcx), %rcx
  41a99c:	48 c7 41 08 00 00 00 00 	movq	$0, 8(%rcx)
  41a9a4:	48 8b 48 30 	movq	48(%rax), %rcx
  41a9a8:	48 8b 89 60 01 00 00 	movq	352(%rcx), %rcx
  41a9af:	48 8b 49 20 	movq	32(%rcx), %rcx
  41a9b3:	48 03 0d 6e b4 0a 00 	addq	701550(%rip), %rcx
  41a9ba:	48 89 0d 67 b4 0a 00 	movq	%rcx, 701543(%rip)
  41a9c1:	48 8b 40 30 	movq	48(%rax), %rax
  41a9c5:	48 8b 80 60 01 00 00 	movq	352(%rax), %rax
  41a9cc:	48 c7 40 20 00 00 00 00 	movq	$0, 32(%rax)
  41a9d4:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41a9d9:	48 89 04 24 	movq	%rax, (%rsp)
  41a9dd:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  41a9e2:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41a9e7:	48 8d 15 5a 9d 0a 00 	leaq	695642(%rip), %rdx
  41a9ee:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  41a9f3:	e8 e8 03 00 00 	callq	1000 <runtime.(*mheap).allocSpanLocked>
  41a9f8:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41a9fd:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  41aa02:	48 85 c0 	testq	%rax, %rax
  41aa05:	75 55 	jne	85 <runtime.(*mheap).alloc_m+0x17c>
  41aa07:	8b 0d c7 8e 0a 00 	movl	691911(%rip), %ecx
  41aa0d:	85 c9 	testl	%ecx, %ecx
  41aa0f:	75 34 	jne	52 <runtime.(*mheap).alloc_m+0x165>
  41aa11:	0f b6 0d b8 8d 09 00 	movzbl	626104(%rip), %ecx
  41aa18:	84 c9 	testb	%cl, %cl
  41aa1a:	75 22 	jne	34 <runtime.(*mheap).alloc_m+0x15e>
  41aa1c:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41aa21:	48 89 04 24 	movq	%rax, (%rsp)
  41aa25:	e8 96 ec fe ff 	callq	-70506 <runtime.unlock>
  41aa2a:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41aa2f:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  41aa34:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  41aa39:	48 83 c4 38 	addq	$56, %rsp
  41aa3d:	c3 	retq
  41aa3e:	e8 9d 05 02 00 	callq	132509 <runtime.traceHeapAlloc>
  41aa43:	eb d7 	jmp	-41 <runtime.(*mheap).alloc_m+0x13c>
  41aa45:	48 8d 05 d4 91 0a 00 	leaq	692692(%rip), %rax
  41aa4c:	48 89 04 24 	movq	%rax, (%rsp)
  41aa50:	e8 6b 58 ff ff 	callq	-42901 <runtime.(*gcControllerState).revise>
  41aa55:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41aa5a:	eb b5 	jmp	-75 <runtime.(*mheap).alloc_m+0x131>
  41aa5c:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  41aa61:	8b 91 20 10 00 00 	movl	4128(%rcx), %edx
  41aa67:	87 50 58 	xchgl	%edx, 88(%rax)
  41aa6a:	8b 91 20 10 00 00 	movl	4128(%rcx), %edx
  41aa70:	d1 ea 	shrl	%edx
  41aa72:	83 e2 01 	andl	$1, %edx
  41aa75:	48 8d 14 92 	leaq	(%rdx,%rdx,4), %rdx
  41aa79:	48 8d 94 d1 60 10 00 00 	leaq	4192(%rcx,%rdx,8), %rdx
  41aa81:	48 89 14 24 	movq	%rdx, (%rsp)
  41aa85:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41aa8a:	e8 01 e0 ff ff 	callq	-8191 <runtime.(*gcSweepBuf).push>
  41aa8f:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41aa94:	c6 40 64 01 	movb	$1, 100(%rax)
  41aa98:	66 c7 40 60 00 00 	movw	$0, 96(%rax)
  41aa9e:	0f b6 4c 24 50 	movzbl	80(%rsp), %ecx
  41aaa3:	88 48 62 	movb	%cl, 98(%rax)
  41aaa6:	d0 e9 	shrb	%cl
  41aaa8:	f6 c1 ff 	testb	$-1, %cl
  41aaab:	0f 85 bc 00 00 00 	jne	188 <runtime.(*mheap).alloc_m+0x28d>
  41aab1:	48 8b 48 20 	movq	32(%rax), %rcx
  41aab5:	48 c1 e1 0d 	shlq	$13, %rcx
  41aab9:	48 89 48 68 	movq	%rcx, 104(%rax)
  41aabd:	c6 40 66 00 	movb	$0, 102(%rax)
  41aac1:	66 c7 40 5c 00 00 	movw	$0, 92(%rax)
  41aac7:	c6 40 67 00 	movb	$0, 103(%rax)
  41aacb:	66 c7 40 5e 00 00 	movw	$0, 94(%rax)
  41aad1:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  41aad6:	48 8b 91 b8 10 00 00 	movq	4280(%rcx), %rdx
  41aadd:	48 8b 5c 24 48 	movq	72(%rsp), %rbx
  41aae2:	48 01 da 	addq	%rbx, %rdx
  41aae5:	48 89 91 b8 10 00 00 	movq	%rdx, 4280(%rcx)
  41aaec:	0f b6 54 24 51 	movzbl	81(%rsp), %edx
  41aaf1:	84 d2 	testb	%dl, %dl
  41aaf3:	74 57 	je	87 <runtime.(*mheap).alloc_m+0x26c>
  41aaf5:	48 ff 05 5c 9c 0a 00 	incq	695388(%rip)
  41aafc:	48 8b 50 68 	movq	104(%rax), %rdx
  41ab00:	48 03 15 79 28 09 00 	addq	600185(%rip), %rdx
  41ab07:	48 89 15 72 28 09 00 	movq	%rdx, 600178(%rip)
  41ab0e:	48 ff 05 73 28 09 00 	incq	600179(%rip)
  41ab15:	48 c1 e3 0d 	shlq	$13, %rbx
  41ab19:	48 8d 15 20 b3 0a 00 	leaq	701216(%rip), %rdx
  41ab20:	f0 	lock
  41ab21:	48 0f c1 1a 	xaddq	%rbx, (%rdx)
  41ab25:	48 8b 50 20 	movq	32(%rax), %rdx
  41ab29:	48 81 fa 80 00 00 00 	cmpq	$128, %rdx
  41ab30:	73 24 	jae	36 <runtime.(*mheap).alloc_m+0x276>
  41ab32:	48 c1 e2 04 	shlq	$4, %rdx
  41ab36:	48 8d 94 11 10 08 00 00 	leaq	2064(%rcx,%rdx), %rdx
  41ab3e:	48 89 14 24 	movq	%rdx, (%rsp)
  41ab42:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41ab47:	e8 24 18 00 00 	callq	6180 <runtime.(*mSpanList).insertBack>
  41ab4c:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41ab51:	e9 b1 fe ff ff 	jmp	-335 <runtime.(*mheap).alloc_m+0x127>
  41ab56:	48 8d 91 10 10 00 00 	leaq	4112(%rcx), %rdx
  41ab5d:	48 89 14 24 	movq	%rdx, (%rsp)
  41ab61:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41ab66:	e8 05 18 00 00 	callq	6149 <runtime.(*mSpanList).insertBack>
  41ab6b:	eb df 	jmp	-33 <runtime.(*mheap).alloc_m+0x26c>
  41ab6d:	48 0f be c9 	movsbq	%cl, %rcx
  41ab71:	48 83 f9 43 	cmpq	$67, %rcx
  41ab75:	73 60 	jae	96 <runtime.(*mheap).alloc_m+0x2f7>
  41ab77:	48 8d 15 42 a6 08 00 	leaq	566850(%rip), %rdx
  41ab7e:	0f b7 14 4a 	movzwl	(%rdx,%rcx,2), %edx
  41ab82:	48 89 50 68 	movq	%rdx, 104(%rax)
  41ab86:	48 8d 0c 49 	leaq	(%rcx,%rcx,2), %rcx
  41ab8a:	48 89 ca 	movq	%rcx, %rdx
  41ab8d:	48 d1 e1 	shlq	%rcx
  41ab90:	48 8d 1d 09 ab 08 00 	leaq	568073(%rip), %rbx
  41ab97:	0f b6 34 0b 	movzbl	(%rbx,%rcx), %esi
  41ab9b:	40 88 70 66 	movb	%sil, 102(%rax)
  41ab9f:	0f b7 74 53 02 	movzwl	2(%rbx,%rdx,2), %esi
  41aba4:	66 89 70 5c 	movw	%si, 92(%rax)
  41aba8:	0f b6 4c 0b 01 	movzbl	1(%rbx,%rcx), %ecx
  41abad:	88 48 67 	movb	%cl, 103(%rax)
  41abb0:	0f b7 4c 53 04 	movzwl	4(%rbx,%rdx,2), %ecx
  41abb5:	66 89 48 5e 	movw	%cx, 94(%rax)
  41abb9:	e9 13 ff ff ff 	jmp	-237 <runtime.(*mheap).alloc_m+0x1f1>
  41abbe:	e8 ed fa 01 00 	callq	129773 <runtime.traceGCSweepDone>
  41abc3:	e9 a7 fd ff ff 	jmp	-601 <runtime.(*mheap).alloc_m+0x8f>
  41abc8:	e8 b3 f9 01 00 	callq	129459 <runtime.traceGCSweepStart>
  41abcd:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41abd2:	e9 76 fd ff ff 	jmp	-650 <runtime.(*mheap).alloc_m+0x6d>
  41abd7:	e8 64 4e 00 00 	callq	20068 <runtime.panicindex>
  41abdc:	0f 0b 	ud2
  41abde:	48 8d 05 45 14 05 00 	leaq	332869(%rip), %rax
  41abe5:	48 89 04 24 	movq	%rax, (%rsp)
  41abe9:	48 c7 44 24 08 1c 00 00 00 	movq	$28, 8(%rsp)
  41abf2:	e8 d9 65 00 00 	callq	26073 <runtime.throw>
  41abf7:	0f 0b 	ud2
  41abf9:	e8 72 99 02 00 	callq	170354 <runtime.morestack_noctxt>
  41abfe:	e9 dd fc ff ff 	jmp	-803 <runtime.(*mheap).alloc_m>
  41ac03:	cc 	int3
  41ac04:	cc 	int3
  41ac05:	cc 	int3
  41ac06:	cc 	int3
  41ac07:	cc 	int3
  41ac08:	cc 	int3
  41ac09:	cc 	int3
  41ac0a:	cc 	int3
  41ac0b:	cc 	int3
  41ac0c:	cc 	int3
  41ac0d:	cc 	int3
  41ac0e:	cc 	int3
  41ac0f:	cc 	int3

runtime.(*mheap).alloc:
  41ac10:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41ac19:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41ac1d:	0f 86 cb 00 00 00 	jbe	203 <runtime.(*mheap).alloc+0xde>
  41ac23:	48 83 ec 48 	subq	$72, %rsp
  41ac27:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  41ac2c:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  41ac31:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  41ac3a:	48 c7 44 24 18 00 00 00 00 	movq	$0, 24(%rsp)
  41ac43:	0f 57 c0 	xorps	%xmm0, %xmm0
  41ac46:	0f 11 44 24 20 	movups	%xmm0, 32(%rsp)
  41ac4b:	0f 11 44 24 30 	movups	%xmm0, 48(%rsp)
  41ac50:	48 8d 05 09 7c 02 00 	leaq	162825(%rip), %rax
  41ac57:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  41ac5c:	48 8b 44 24 50 	movq	80(%rsp), %rax
  41ac61:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  41ac66:	48 8b 44 24 58 	movq	88(%rsp), %rax
  41ac6b:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  41ac70:	0f b6 44 24 60 	movzbl	96(%rsp), %eax
  41ac75:	88 44 24 30 	movb	%al, 48(%rsp)
  41ac79:	0f b6 44 24 61 	movzbl	97(%rsp), %eax
  41ac7e:	88 44 24 31 	movb	%al, 49(%rsp)
  41ac82:	48 8d 44 24 10 	leaq	16(%rsp), %rax
  41ac87:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  41ac8c:	48 8d 44 24 18 	leaq	24(%rsp), %rax
  41ac91:	48 89 04 24 	movq	%rax, (%rsp)
  41ac95:	e8 86 97 02 00 	callq	169862 <runtime.systemstack>
  41ac9a:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41ac9f:	48 85 c0 	testq	%rax, %rax
  41aca2:	74 1a 	je	26 <runtime.(*mheap).alloc+0xae>
  41aca4:	0f b6 4c 24 62 	movzbl	98(%rsp), %ecx
  41aca9:	84 c9 	testb	%cl, %cl
  41acab:	74 08 	je	8 <runtime.(*mheap).alloc+0xa5>
  41acad:	0f b6 48 65 	movzbl	101(%rax), %ecx
  41acb1:	84 c9 	testb	%cl, %cl
  41acb3:	75 1d 	jne	29 <runtime.(*mheap).alloc+0xc2>
  41acb5:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41acba:	c6 40 65 00 	movb	$0, 101(%rax)
  41acbe:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41acc3:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  41acc8:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  41accd:	48 83 c4 48 	addq	$72, %rsp
  41acd1:	c3 	retq
  41acd2:	48 8b 48 20 	movq	32(%rax), %rcx
  41acd6:	48 c1 e1 0d 	shlq	$13, %rcx
  41acda:	48 8b 40 18 	movq	24(%rax), %rax
  41acde:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41ace3:	48 89 04 24 	movq	%rax, (%rsp)
  41ace7:	e8 84 c1 02 00 	callq	180612 <runtime.memclrNoHeapPointers>
  41acec:	eb c7 	jmp	-57 <runtime.(*mheap).alloc+0xa5>
  41acee:	e8 7d 98 02 00 	callq	170109 <runtime.morestack_noctxt>
  41acf3:	e9 18 ff ff ff 	jmp	-232 <runtime.(*mheap).alloc>
  41acf8:	cc 	int3
  41acf9:	cc 	int3
  41acfa:	cc 	int3
  41acfb:	cc 	int3
  41acfc:	cc 	int3
  41acfd:	cc 	int3
  41acfe:	cc 	int3
  41acff:	cc 	int3

runtime.(*mheap).allocManual:
  41ad00:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41ad09:	48 3b 61 18 	cmpq	24(%rcx), %rsp
  41ad0d:	0f 86 c3 00 00 00 	jbe	195 <runtime.(*mheap).allocManual+0xd6>
  41ad13:	48 83 ec 30 	subq	$48, %rsp
  41ad17:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  41ad1c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  41ad21:	48 8b 44 24 38 	movq	56(%rsp), %rax
  41ad26:	84 00 	testb	%al, (%rax)
  41ad28:	48 89 04 24 	movq	%rax, (%rsp)
  41ad2c:	e8 ef e7 fe ff 	callq	-71697 <runtime.lock>
  41ad31:	48 8b 44 24 38 	movq	56(%rsp), %rax
  41ad36:	48 89 04 24 	movq	%rax, (%rsp)
  41ad3a:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  41ad3f:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41ad44:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  41ad49:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  41ad4e:	e8 8d 00 00 00 	callq	141 <runtime.(*mheap).allocSpanLocked>
  41ad53:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41ad58:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  41ad5d:	48 85 c0 	testq	%rax, %rax
  41ad60:	74 52 	je	82 <runtime.(*mheap).allocManual+0xb4>
  41ad62:	c6 40 64 02 	movb	$2, 100(%rax)
  41ad66:	48 c7 40 28 00 00 00 00 	movq	$0, 40(%rax)
  41ad6e:	66 c7 40 60 00 00 	movw	$0, 96(%rax)
  41ad74:	c6 40 62 00 	movb	$0, 98(%rax)
  41ad78:	48 c7 40 38 00 00 00 00 	movq	$0, 56(%rax)
  41ad80:	48 c7 40 68 00 00 00 00 	movq	$0, 104(%rax)
  41ad88:	48 8b 48 20 	movq	32(%rax), %rcx
  41ad8c:	48 c1 e1 0d 	shlq	$13, %rcx
  41ad90:	48 03 48 18 	addq	24(%rax), %rcx
  41ad94:	48 89 88 80 00 00 00 	movq	%rcx, 128(%rax)
  41ad9b:	48 8b 0d 96 99 0a 00 	movq	694678(%rip), %rcx
  41ada2:	48 8b 50 20 	movq	32(%rax), %rdx
  41ada6:	48 c1 e2 0d 	shlq	$13, %rdx
  41adaa:	48 29 d1 	subq	%rdx, %rcx
  41adad:	48 89 0d 84 99 0a 00 	movq	%rcx, 694660(%rip)
  41adb4:	48 8b 44 24 38 	movq	56(%rsp), %rax
  41adb9:	48 89 04 24 	movq	%rax, (%rsp)
  41adbd:	e8 fe e8 fe ff 	callq	-71426 <runtime.unlock>
  41adc2:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41adc7:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  41adcc:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  41add1:	48 83 c4 30 	addq	$48, %rsp
  41add5:	c3 	retq
  41add6:	e8 25 bf 01 00 	callq	114469 <runtime.morestackc>
  41addb:	e9 20 ff ff ff 	jmp	-224 <runtime.(*mheap).allocManual>

runtime.(*mheap).allocSpanLocked:
  41ade0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41ade9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41aded:	0f 86 b7 03 00 00 	jbe	951 <runtime.(*mheap).allocSpanLocked+0x3ca>
  41adf3:	48 83 ec 38 	subq	$56, %rsp
  41adf7:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  41adfc:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  41ae01:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41ae06:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  41ae0b:	48 89 ca 	movq	%rcx, %rdx
  41ae0e:	eb 04 	jmp	4 <runtime.(*mheap).allocSpanLocked+0x34>
  41ae10:	48 8d 4b 01 	leaq	1(%rbx), %rcx
  41ae14:	48 81 f9 80 00 00 00 	cmpq	$128, %rcx
  41ae1b:	0f 8d 8c 02 00 00 	jge	652 <runtime.(*mheap).allocSpanLocked+0x2cd>
  41ae21:	84 00 	testb	%al, (%rax)
  41ae23:	48 81 f9 80 00 00 00 	cmpq	$128, %rcx
  41ae2a:	0f 83 73 03 00 00 	jae	883 <runtime.(*mheap).allocSpanLocked+0x3c3>
  41ae30:	48 89 cb 	movq	%rcx, %rbx
  41ae33:	48 c1 e1 04 	shlq	$4, %rcx
  41ae37:	48 8d 74 08 08 	leaq	8(%rax,%rcx), %rsi
  41ae3c:	48 8b 4c 08 08 	movq	8(%rax,%rcx), %rcx
  41ae41:	48 85 c9 	testq	%rcx, %rcx
  41ae44:	74 ca 	je	-54 <runtime.(*mheap).allocSpanLocked+0x30>
  41ae46:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  41ae4b:	48 89 34 24 	movq	%rsi, (%rsp)
  41ae4f:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41ae54:	e8 57 12 00 00 	callq	4695 <runtime.(*mSpanList).remove>
  41ae59:	48 8b 44 24 28 	movq	40(%rsp), %rax
  41ae5e:	0f b6 48 64 	movzbl	100(%rax), %ecx
  41ae62:	80 f9 03 	cmpb	$3, %cl
  41ae65:	0f 85 1d 03 00 00 	jne	797 <runtime.(*mheap).allocSpanLocked+0x3a8>
  41ae6b:	48 8b 48 20 	movq	32(%rax), %rcx
  41ae6f:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  41ae74:	48 39 d1 	cmpq	%rdx, %rcx
  41ae77:	0f 82 f0 02 00 00 	jb	752 <runtime.(*mheap).allocSpanLocked+0x38d>
  41ae7d:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  41ae82:	48 8b 58 78 	movq	120(%rax), %rbx
  41ae86:	48 85 db 	testq	%rbx, %rbx
  41ae89:	0f 87 d5 01 00 00 	ja	469 <runtime.(*mheap).allocSpanLocked+0x284>
  41ae8f:	48 8b 48 20 	movq	32(%rax), %rcx
  41ae93:	48 39 d1 	cmpq	%rdx, %rcx
  41ae96:	0f 87 89 00 00 00 	ja	137 <runtime.(*mheap).allocSpanLocked+0x145>
  41ae9c:	48 c7 40 70 00 00 00 00 	movq	$0, 112(%rax)
  41aea4:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  41aea9:	84 01 	testb	%al, (%rcx)
  41aeab:	48 8b 58 18 	movq	24(%rax), %rbx
  41aeaf:	48 2b 99 28 13 00 00 	subq	4904(%rcx), %rbx
  41aeb6:	48 c1 eb 0d 	shrq	$13, %rbx
  41aeba:	31 f6 	xorl	%esi, %esi
  41aebc:	eb 07 	jmp	7 <runtime.(*mheap).allocSpanLocked+0xe5>
  41aebe:	4b 89 04 c8 	movq	%rax, (%r8,%r9,8)
  41aec2:	48 ff c6 	incq	%rsi
  41aec5:	48 39 d6 	cmpq	%rdx, %rsi
  41aec8:	73 1c 	jae	28 <runtime.(*mheap).allocSpanLocked+0x106>
  41aeca:	48 8b b9 50 10 00 00 	movq	4176(%rcx), %rdi
  41aed1:	4c 8b 81 48 10 00 00 	movq	4168(%rcx), %r8
  41aed8:	4c 8d 0c 1e 	leaq	(%rsi,%rbx), %r9
  41aedc:	49 39 f9 	cmpq	%rdi, %r9
  41aedf:	72 dd 	jb	-35 <runtime.(*mheap).allocSpanLocked+0xde>
  41aee1:	e9 6b 02 00 00 	jmp	619 <runtime.(*mheap).allocSpanLocked+0x371>
  41aee6:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  41aeeb:	48 8b 19 	movq	(%rcx), %rbx
  41aeee:	48 c1 e2 0d 	shlq	$13, %rdx
  41aef2:	48 01 d3 	addq	%rdx, %rbx
  41aef5:	48 89 19 	movq	%rbx, (%rcx)
  41aef8:	48 8b 0d 41 98 0a 00 	movq	694337(%rip), %rcx
  41aeff:	48 29 d1 	subq	%rdx, %rcx
  41af02:	48 89 0d 37 98 0a 00 	movq	%rcx, 694327(%rip)
  41af09:	48 8b 48 10 	movq	16(%rax), %rcx
  41af0d:	48 85 c9 	testq	%rcx, %rcx
  41af10:	0f 85 20 02 00 00 	jne	544 <runtime.(*mheap).allocSpanLocked+0x356>
  41af16:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  41af1b:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  41af20:	48 83 c4 38 	addq	$56, %rsp
  41af24:	c3 	retq
  41af25:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41af2a:	84 00 	testb	%al, (%rax)
  41af2c:	48 8d 88 d0 34 00 00 	leaq	13520(%rax), %rcx
  41af33:	48 89 0c 24 	movq	%rcx, (%rsp)
  41af37:	e8 04 4b ff ff 	callq	-46332 <runtime.(*fixalloc).alloc>
  41af3c:	48 8b 44 24 08 	movq	8(%rsp), %rax
  41af41:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  41af46:	48 89 ca 	movq	%rcx, %rdx
  41af49:	48 c1 e1 0d 	shlq	$13, %rcx
  41af4d:	48 8b 5c 24 20 	movq	32(%rsp), %rbx
  41af52:	48 8d 73 18 	leaq	24(%rbx), %rsi
  41af56:	48 03 0e 	addq	(%rsi), %rcx
  41af59:	48 8b 73 20 	movq	32(%rbx), %rsi
  41af5d:	0f 57 c0 	xorps	%xmm0, %xmm0
  41af60:	0f 11 00 	movups	%xmm0, (%rax)
  41af63:	48 c7 40 10 00 00 00 00 	movq	$0, 16(%rax)
  41af6b:	48 89 48 18 	movq	%rcx, 24(%rax)
  41af6f:	48 29 d6 	subq	%rdx, %rsi
  41af72:	48 89 70 20 	movq	%rsi, 32(%rax)
  41af76:	c7 40 60 00 00 00 00 	movl	$0, 96(%rax)
  41af7d:	48 c7 40 68 00 00 00 00 	movq	$0, 104(%rax)
  41af85:	c6 40 64 00 	movb	$0, 100(%rax)
  41af89:	0f 11 40 70 	movups	%xmm0, 112(%rax)
  41af8d:	0f 11 80 88 00 00 00 	movups	%xmm0, 136(%rax)
  41af94:	c6 40 65 00 	movb	$0, 101(%rax)
  41af98:	48 c7 40 30 00 00 00 00 	movq	$0, 48(%rax)
  41afa0:	0f 11 40 48 	movups	%xmm0, 72(%rax)
  41afa4:	48 89 53 20 	movq	%rdx, 32(%rbx)
  41afa8:	48 8b 48 18 	movq	24(%rax), %rcx
  41afac:	48 8b 74 24 40 	movq	64(%rsp), %rsi
  41afb1:	48 2b 8e 28 13 00 00 	subq	4904(%rsi), %rcx
  41afb8:	48 c1 e9 0d 	shrq	$13, %rcx
  41afbc:	48 f7 c1 ff ff ff ff 	testq	$-1, %rcx
  41afc3:	76 20 	jbe	32 <runtime.(*mheap).allocSpanLocked+0x205>
  41afc5:	48 8b be 50 10 00 00 	movq	4176(%rsi), %rdi
  41afcc:	4c 8b 86 48 10 00 00 	movq	4168(%rsi), %r8
  41afd3:	4c 8d 49 ff 	leaq	-1(%rcx), %r9
  41afd7:	49 39 f9 	cmpq	%rdi, %r9
  41afda:	0f 83 86 01 00 00 	jae	390 <runtime.(*mheap).allocSpanLocked+0x386>
  41afe0:	49 89 5c c8 f8 	movq	%rbx, -8(%r8,%rcx,8)
  41afe5:	48 8b be 50 10 00 00 	movq	4176(%rsi), %rdi
  41afec:	4c 8b 86 48 10 00 00 	movq	4168(%rsi), %r8
  41aff3:	48 39 f9 	cmpq	%rdi, %rcx
  41aff6:	0f 83 63 01 00 00 	jae	355 <runtime.(*mheap).allocSpanLocked+0x37f>
  41affc:	49 89 04 c8 	movq	%rax, (%r8,%rcx,8)
  41b000:	48 8b be 50 10 00 00 	movq	4176(%rsi), %rdi
  41b007:	4c 8b 86 48 10 00 00 	movq	4168(%rsi), %r8
  41b00e:	4c 8b 48 20 	movq	32(%rax), %r9
  41b012:	4a 8d 4c 09 ff 	leaq	-1(%rcx,%r9), %rcx
  41b017:	48 39 f9 	cmpq	%rdi, %rcx
  41b01a:	0f 83 38 01 00 00 	jae	312 <runtime.(*mheap).allocSpanLocked+0x378>
  41b020:	49 89 04 c8 	movq	%rax, (%r8,%rcx,8)
  41b024:	0f b6 4b 65 	movzbl	101(%rbx), %ecx
  41b028:	88 48 65 	movb	%cl, 101(%rax)
  41b02b:	c6 43 64 02 	movb	$2, 100(%rbx)
  41b02f:	c6 40 64 02 	movb	$2, 100(%rax)
  41b033:	48 8b 4b 70 	movq	112(%rbx), %rcx
  41b037:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  41b03c:	48 89 34 24 	movq	%rsi, (%rsp)
  41b040:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41b045:	66 c7 44 24 10 00 00 	movw	$0, 16(%rsp)
  41b04c:	e8 5f 05 00 00 	callq	1375 <runtime.(*mheap).freeSpanLocked>
  41b051:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41b056:	c6 40 64 03 	movb	$3, 100(%rax)
  41b05a:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  41b05f:	e9 38 fe ff ff 	jmp	-456 <runtime.(*mheap).allocSpanLocked+0xbc>
  41b064:	48 c1 e1 0d 	shlq	$13, %rcx
  41b068:	48 8b 50 18 	movq	24(%rax), %rdx
  41b06c:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41b071:	48 89 14 24 	movq	%rdx, (%rsp)
  41b075:	e8 46 42 ff ff 	callq	-48570 <runtime.sysUsed>
  41b07a:	48 8b 05 cf 96 0a 00 	movq	693967(%rip), %rax
  41b081:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  41b086:	48 8b 51 78 	movq	120(%rcx), %rdx
  41b08a:	48 c1 e2 0d 	shlq	$13, %rdx
  41b08e:	48 29 d0 	subq	%rdx, %rax
  41b091:	48 89 05 b8 96 0a 00 	movq	%rax, 693944(%rip)
  41b098:	48 c7 41 78 00 00 00 00 	movq	$0, 120(%rcx)
  41b0a0:	48 89 c8 	movq	%rcx, %rax
  41b0a3:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  41b0a8:	e9 e2 fd ff ff 	jmp	-542 <runtime.(*mheap).allocSpanLocked+0xaf>
  41b0ad:	48 89 04 24 	movq	%rax, (%rsp)
  41b0b1:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  41b0b6:	e8 05 01 00 00 	callq	261 <runtime.(*mheap).allocLarge>
  41b0bb:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41b0c0:	48 85 c0 	testq	%rax, %rax
  41b0c3:	0f 85 95 fd ff ff 	jne	-619 <runtime.(*mheap).allocSpanLocked+0x7e>
  41b0c9:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41b0ce:	48 89 04 24 	movq	%rax, (%rsp)
  41b0d2:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  41b0d7:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41b0dc:	e8 3f 01 00 00 	callq	319 <runtime.(*mheap).grow>
  41b0e1:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  41b0e6:	84 c0 	testb	%al, %al
  41b0e8:	74 39 	je	57 <runtime.(*mheap).allocSpanLocked+0x343>
  41b0ea:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41b0ef:	48 89 04 24 	movq	%rax, (%rsp)
  41b0f3:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  41b0f8:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41b0fd:	e8 be 00 00 00 	callq	190 <runtime.(*mheap).allocLarge>
  41b102:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41b107:	48 85 c0 	testq	%rax, %rax
  41b10a:	0f 85 4e fd ff ff 	jne	-690 <runtime.(*mheap).allocSpanLocked+0x7e>
  41b110:	48 c7 44 24 58 00 00 00 00 	movq	$0, 88(%rsp)
  41b119:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  41b11e:	48 83 c4 38 	addq	$56, %rsp
  41b122:	c3 	retq
  41b123:	48 c7 44 24 58 00 00 00 00 	movq	$0, 88(%rsp)
  41b12c:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  41b131:	48 83 c4 38 	addq	$56, %rsp
  41b135:	c3 	retq
  41b136:	48 8d 05 45 f6 04 00 	leaq	325189(%rip), %rax
  41b13d:	48 89 04 24 	movq	%rax, (%rsp)
  41b141:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  41b14a:	e8 81 60 00 00 	callq	24705 <runtime.throw>
  41b14f:	0f 0b 	ud2
  41b151:	e8 ea 48 00 00 	callq	18666 <runtime.panicindex>
  41b156:	0f 0b 	ud2
  41b158:	e8 e3 48 00 00 	callq	18659 <runtime.panicindex>
  41b15d:	0f 0b 	ud2
  41b15f:	e8 dc 48 00 00 	callq	18652 <runtime.panicindex>
  41b164:	0f 0b 	ud2
  41b166:	e8 d5 48 00 00 	callq	18645 <runtime.panicindex>
  41b16b:	0f 0b 	ud2
  41b16d:	48 8d 05 9d 12 05 00 	leaq	332445(%rip), %rax
  41b174:	48 89 04 24 	movq	%rax, (%rsp)
  41b178:	48 c7 44 24 08 1e 00 00 00 	movq	$30, 8(%rsp)
  41b181:	e8 4a 60 00 00 	callq	24650 <runtime.throw>
  41b186:	0f 0b 	ud2
  41b188:	48 8d 05 05 1a 05 00 	leaq	334341(%rip), %rax
  41b18f:	48 89 04 24 	movq	%rax, (%rsp)
  41b193:	48 c7 44 24 08 22 00 00 00 	movq	$34, 8(%rsp)
  41b19c:	e8 2f 60 00 00 	callq	24623 <runtime.throw>
  41b1a1:	0f 0b 	ud2
  41b1a3:	e8 98 48 00 00 	callq	18584 <runtime.panicindex>
  41b1a8:	0f 0b 	ud2
  41b1aa:	e8 c1 93 02 00 	callq	168897 <runtime.morestack_noctxt>
  41b1af:	e9 2c fc ff ff 	jmp	-980 <runtime.(*mheap).allocSpanLocked>
  41b1b4:	cc 	int3
  41b1b5:	cc 	int3
  41b1b6:	cc 	int3
  41b1b7:	cc 	int3
  41b1b8:	cc 	int3
  41b1b9:	cc 	int3
  41b1ba:	cc 	int3
  41b1bb:	cc 	int3
  41b1bc:	cc 	int3
  41b1bd:	cc 	int3
  41b1be:	cc 	int3
  41b1bf:	cc 	int3

runtime.(*mheap).allocLarge:
  41b1c0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41b1c9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41b1cd:	76 42 	jbe	66 <runtime.(*mheap).allocLarge+0x51>
  41b1cf:	48 83 ec 20 	subq	$32, %rsp
  41b1d3:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  41b1d8:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  41b1dd:	48 8b 44 24 28 	movq	40(%rsp), %rax
  41b1e2:	84 00 	testb	%al, (%rax)
  41b1e4:	48 05 08 08 00 00 	addq	$2056, %rax
  41b1ea:	48 89 04 24 	movq	%rax, (%rsp)
  41b1ee:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41b1f3:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41b1f8:	e8 f3 87 ff ff 	callq	-30733 <runtime.(*mTreap).remove>
  41b1fd:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41b202:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  41b207:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  41b20c:	48 83 c4 20 	addq	$32, %rsp
  41b210:	c3 	retq
  41b211:	e8 5a 93 02 00 	callq	168794 <runtime.morestack_noctxt>
  41b216:	eb a8 	jmp	-88 <runtime.(*mheap).allocLarge>
  41b218:	cc 	int3
  41b219:	cc 	int3
  41b21a:	cc 	int3
  41b21b:	cc 	int3
  41b21c:	cc 	int3
  41b21d:	cc 	int3
  41b21e:	cc 	int3
  41b21f:	cc 	int3

runtime.(*mheap).grow:
  41b220:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41b229:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41b22d:	0f 86 46 02 00 00 	jbe	582 <runtime.(*mheap).grow+0x259>
  41b233:	48 83 ec 50 	subq	$80, %rsp
  41b237:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  41b23c:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  41b241:	48 8b 44 24 60 	movq	96(%rsp), %rax
  41b246:	48 83 c0 07 	addq	$7, %rax
  41b24a:	48 83 e0 f8 	andq	$-8, %rax
  41b24e:	48 c1 e0 0d 	shlq	$13, %rax
  41b252:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  41b257:	48 3d 00 00 10 00 	cmpq	$1048576, %rax
  41b25d:	0f 83 07 02 00 00 	jae	519 <runtime.(*mheap).grow+0x24a>
  41b263:	b9 00 00 10 00 	movl	$1048576, %ecx
  41b268:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  41b26d:	48 8b 44 24 58 	movq	88(%rsp), %rax
  41b272:	48 89 04 24 	movq	%rax, (%rsp)
  41b276:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41b27b:	e8 d0 ee fe ff 	callq	-69936 <runtime.(*mheap).sysAlloc>
  41b280:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41b285:	48 85 c0 	testq	%rax, %rax
  41b288:	0f 84 0d 01 00 00 	je	269 <runtime.(*mheap).grow+0x17b>
  41b28e:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  41b293:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  41b298:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  41b29d:	48 8b 54 24 58 	movq	88(%rsp), %rdx
  41b2a2:	84 02 	testb	%al, (%rdx)
  41b2a4:	48 8d 9a d0 34 00 00 	leaq	13520(%rdx), %rbx
  41b2ab:	48 89 1c 24 	movq	%rbx, (%rsp)
  41b2af:	e8 8c 47 ff ff 	callq	-47220 <runtime.(*fixalloc).alloc>
  41b2b4:	48 8b 44 24 08 	movq	8(%rsp), %rax
  41b2b9:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  41b2be:	0f 57 c0 	xorps	%xmm0, %xmm0
  41b2c1:	0f 11 00 	movups	%xmm0, (%rax)
  41b2c4:	48 c7 40 10 00 00 00 00 	movq	$0, 16(%rax)
  41b2cc:	48 89 48 18 	movq	%rcx, 24(%rax)
  41b2d0:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  41b2d5:	48 c1 e9 0d 	shrq	$13, %rcx
  41b2d9:	48 89 48 20 	movq	%rcx, 32(%rax)
  41b2dd:	c7 40 60 00 00 00 00 	movl	$0, 96(%rax)
  41b2e4:	48 c7 40 68 00 00 00 00 	movq	$0, 104(%rax)
  41b2ec:	c6 40 64 00 	movb	$0, 100(%rax)
  41b2f0:	0f 11 40 70 	movups	%xmm0, 112(%rax)
  41b2f4:	0f 11 80 88 00 00 00 	movups	%xmm0, 136(%rax)
  41b2fb:	c6 40 65 00 	movb	$0, 101(%rax)
  41b2ff:	48 c7 40 30 00 00 00 00 	movq	$0, 48(%rax)
  41b307:	0f 11 40 48 	movups	%xmm0, 72(%rax)
  41b30b:	48 8b 48 18 	movq	24(%rax), %rcx
  41b30f:	48 8b 54 24 58 	movq	88(%rsp), %rdx
  41b314:	48 2b 8a 28 13 00 00 	subq	4904(%rdx), %rcx
  41b31b:	48 c1 e9 0d 	shrq	$13, %rcx
  41b31f:	48 89 cb 	movq	%rcx, %rbx
  41b322:	eb 07 	jmp	7 <runtime.(*mheap).grow+0x10b>
  41b324:	48 89 04 cf 	movq	%rax, (%rdi,%rcx,8)
  41b328:	48 ff c1 	incq	%rcx
  41b32b:	48 8b 70 20 	movq	32(%rax), %rsi
  41b32f:	48 01 de 	addq	%rbx, %rsi
  41b332:	48 39 f1 	cmpq	%rsi, %rcx
  41b335:	73 18 	jae	24 <runtime.(*mheap).grow+0x12f>
  41b337:	48 8b b2 50 10 00 00 	movq	4176(%rdx), %rsi
  41b33e:	48 8b ba 48 10 00 00 	movq	4168(%rdx), %rdi
  41b345:	48 39 f1 	cmpq	%rsi, %rcx
  41b348:	72 da 	jb	-38 <runtime.(*mheap).grow+0x104>
  41b34a:	e9 23 01 00 00 	jmp	291 <runtime.(*mheap).grow+0x252>
  41b34f:	8b 8a 20 10 00 00 	movl	4128(%rdx), %ecx
  41b355:	87 48 58 	xchgl	%ecx, 88(%rax)
  41b358:	c6 40 64 01 	movb	$1, 100(%rax)
  41b35c:	48 8b 8a b8 10 00 00 	movq	4280(%rdx), %rcx
  41b363:	48 03 48 20 	addq	32(%rax), %rcx
  41b367:	48 89 8a b8 10 00 00 	movq	%rcx, 4280(%rdx)
  41b36e:	48 89 14 24 	movq	%rdx, (%rsp)
  41b372:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41b377:	66 c7 44 24 10 00 01 	movw	$256, 16(%rsp)
  41b37e:	48 c7 44 24 18 00 00 00 00 	movq	$0, 24(%rsp)
  41b387:	e8 24 02 00 00 	callq	548 <runtime.(*mheap).freeSpanLocked>
  41b38c:	c6 44 24 68 01 	movb	$1, 104(%rsp)
  41b391:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  41b396:	48 83 c4 50 	addq	$80, %rsp
  41b39a:	c3 	retq
  41b39b:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  41b3a0:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  41b3a5:	48 39 d1 	cmpq	%rdx, %rcx
  41b3a8:	0f 87 9a 00 00 00 	ja	154 <runtime.(*mheap).grow+0x228>
  41b3ae:	48 85 c0 	testq	%rax, %rax
  41b3b1:	0f 85 dc fe ff ff 	jne	-292 <runtime.(*mheap).grow+0x73>
  41b3b7:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  41b3bc:	48 8b 05 75 93 0a 00 	movq	693109(%rip), %rax
  41b3c3:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  41b3c8:	e8 33 67 00 00 	callq	26419 <runtime.printlock>
  41b3cd:	48 8d 05 0a 1f 05 00 	leaq	335626(%rip), %rax
  41b3d4:	48 89 04 24 	movq	%rax, (%rsp)
  41b3d8:	48 c7 44 24 08 28 00 00 00 	movq	$40, 8(%rsp)
  41b3e1:	e8 5a 70 00 00 	callq	28762 <runtime.printstring>
  41b3e6:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41b3eb:	48 89 04 24 	movq	%rax, (%rsp)
  41b3ef:	e8 7c 6d 00 00 	callq	28028 <runtime.printuint>
  41b3f4:	48 8d 05 05 f3 04 00 	leaq	324357(%rip), %rax
  41b3fb:	48 89 04 24 	movq	%rax, (%rsp)
  41b3ff:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  41b408:	e8 33 70 00 00 	callq	28723 <runtime.printstring>
  41b40d:	48 8b 44 24 28 	movq	40(%rsp), %rax
  41b412:	48 89 04 24 	movq	%rax, (%rsp)
  41b416:	e8 55 6d 00 00 	callq	27989 <runtime.printuint>
  41b41b:	48 8d 05 41 ec 04 00 	leaq	322625(%rip), %rax
  41b422:	48 89 04 24 	movq	%rax, (%rsp)
  41b426:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  41b42f:	e8 0c 70 00 00 	callq	28684 <runtime.printstring>
  41b434:	e8 47 67 00 00 	callq	26439 <runtime.printunlock>
  41b439:	c6 44 24 68 00 	movb	$0, 104(%rsp)
  41b43e:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  41b443:	48 83 c4 50 	addq	$80, %rsp
  41b447:	c3 	retq
  41b448:	48 8b 44 24 58 	movq	88(%rsp), %rax
  41b44d:	48 89 04 24 	movq	%rax, (%rsp)
  41b451:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  41b456:	e8 f5 ec fe ff 	callq	-70411 <runtime.(*mheap).sysAlloc>
  41b45b:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41b460:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  41b465:	e9 44 ff ff ff 	jmp	-188 <runtime.(*mheap).grow+0x18e>
  41b46a:	48 89 c1 	movq	%rax, %rcx
  41b46d:	e9 f6 fd ff ff 	jmp	-522 <runtime.(*mheap).grow+0x48>
  41b472:	e8 c9 45 00 00 	callq	17865 <runtime.panicindex>
  41b477:	0f 0b 	ud2
  41b479:	e8 f2 90 02 00 	callq	168178 <runtime.morestack_noctxt>
  41b47e:	e9 9d fd ff ff 	jmp	-611 <runtime.(*mheap).grow>
  41b483:	cc 	int3
  41b484:	cc 	int3
  41b485:	cc 	int3
  41b486:	cc 	int3
  41b487:	cc 	int3
  41b488:	cc 	int3
  41b489:	cc 	int3
  41b48a:	cc 	int3
  41b48b:	cc 	int3
  41b48c:	cc 	int3
  41b48d:	cc 	int3
  41b48e:	cc 	int3
  41b48f:	cc 	int3

runtime.(*mheap).freeSpan:
  41b490:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41b499:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41b49d:	76 4e 	jbe	78 <runtime.(*mheap).freeSpan+0x5d>
  41b49f:	48 83 ec 30 	subq	$48, %rsp
  41b4a3:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  41b4a8:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  41b4ad:	48 8d 05 1c 74 02 00 	leaq	160796(%rip), %rax
  41b4b4:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41b4b9:	48 8b 44 24 38 	movq	56(%rsp), %rax
  41b4be:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  41b4c3:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41b4c8:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  41b4cd:	8b 44 24 48 	movl	72(%rsp), %eax
  41b4d1:	89 44 24 20 	movl	%eax, 32(%rsp)
  41b4d5:	48 8d 44 24 08 	leaq	8(%rsp), %rax
  41b4da:	48 89 04 24 	movq	%rax, (%rsp)
  41b4de:	e8 3d 8f 02 00 	callq	167741 <runtime.systemstack>
  41b4e3:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  41b4e8:	48 83 c4 30 	addq	$48, %rsp
  41b4ec:	c3 	retq
  41b4ed:	e8 7e 90 02 00 	callq	168062 <runtime.morestack_noctxt>
  41b4f2:	eb 9c 	jmp	-100 <runtime.(*mheap).freeSpan>
  41b4f4:	cc 	int3
  41b4f5:	cc 	int3
  41b4f6:	cc 	int3
  41b4f7:	cc 	int3
  41b4f8:	cc 	int3
  41b4f9:	cc 	int3
  41b4fa:	cc 	int3
  41b4fb:	cc 	int3
  41b4fc:	cc 	int3
  41b4fd:	cc 	int3
  41b4fe:	cc 	int3
  41b4ff:	cc 	int3

runtime.(*mheap).freeManual:
  41b500:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41b509:	48 3b 61 18 	cmpq	24(%rcx), %rsp
  41b50d:	0f 86 93 00 00 00 	jbe	147 <runtime.(*mheap).freeManual+0xa6>
  41b513:	48 83 ec 28 	subq	$40, %rsp
  41b517:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  41b51c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  41b521:	48 8b 44 24 38 	movq	56(%rsp), %rax
  41b526:	c6 40 65 01 	movb	$1, 101(%rax)
  41b52a:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  41b52f:	84 01 	testb	%al, (%rcx)
  41b531:	48 89 0c 24 	movq	%rcx, (%rsp)
  41b535:	e8 e6 df fe ff 	callq	-73754 <runtime.lock>
  41b53a:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41b53f:	48 8b 08 	movq	(%rax), %rcx
  41b542:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  41b547:	48 8b 5a 20 	movq	32(%rdx), %rbx
  41b54b:	48 c1 e3 0d 	shlq	$13, %rbx
  41b54f:	48 29 d9 	subq	%rbx, %rcx
  41b552:	48 89 08 	movq	%rcx, (%rax)
  41b555:	48 8b 42 20 	movq	32(%rdx), %rax
  41b559:	48 c1 e0 0d 	shlq	$13, %rax
  41b55d:	48 03 05 d4 91 0a 00 	addq	692692(%rip), %rax
  41b564:	48 89 05 cd 91 0a 00 	movq	%rax, 692685(%rip)
  41b56b:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41b570:	48 89 04 24 	movq	%rax, (%rsp)
  41b574:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  41b579:	66 c7 44 24 10 00 01 	movw	$256, 16(%rsp)
  41b580:	48 c7 44 24 18 00 00 00 00 	movq	$0, 24(%rsp)
  41b589:	e8 22 00 00 00 	callq	34 <runtime.(*mheap).freeSpanLocked>
  41b58e:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41b593:	48 89 04 24 	movq	%rax, (%rsp)
  41b597:	e8 24 e1 fe ff 	callq	-73436 <runtime.unlock>
  41b59c:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  41b5a1:	48 83 c4 28 	addq	$40, %rsp
  41b5a5:	c3 	retq
  41b5a6:	e8 55 b7 01 00 	callq	112469 <runtime.morestackc>
  41b5ab:	e9 50 ff ff ff 	jmp	-176 <runtime.(*mheap).freeManual>

runtime.(*mheap).freeSpanLocked:
  41b5b0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41b5b9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41b5bd:	0f 86 43 05 00 00 	jbe	1347 <runtime.(*mheap).freeSpanLocked+0x556>
  41b5c3:	48 83 ec 48 	subq	$72, %rsp
  41b5c7:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  41b5cc:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  41b5d1:	48 8b 44 24 58 	movq	88(%rsp), %rax
  41b5d6:	0f b6 48 64 	movzbl	100(%rax), %ecx
  41b5da:	80 f9 01 	cmpb	$1, %cl
  41b5dd:	0f 85 a5 03 00 00 	jne	933 <runtime.(*mheap).freeSpanLocked+0x3d8>
  41b5e3:	0f b7 48 60 	movzwl	96(%rax), %ecx
  41b5e7:	66 89 4c 24 16 	movw	%cx, 22(%rsp)
  41b5ec:	66 85 c9 	testw	%cx, %cx
  41b5ef:	0f 85 c8 03 00 00 	jne	968 <runtime.(*mheap).freeSpanLocked+0x40d>
  41b5f5:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  41b5fa:	84 02 	testb	%al, (%rdx)
  41b5fc:	8b 58 58 	movl	88(%rax), %ebx
  41b5ff:	8b b2 20 10 00 00 	movl	4128(%rdx), %esi
  41b605:	39 f3 	cmpl	%esi, %ebx
  41b607:	0f 85 b0 03 00 00 	jne	944 <runtime.(*mheap).freeSpanLocked+0x40d>
  41b60d:	48 8b 8a b8 10 00 00 	movq	4280(%rdx), %rcx
  41b614:	48 2b 48 20 	subq	32(%rax), %rcx
  41b618:	48 89 8a b8 10 00 00 	movq	%rcx, 4280(%rdx)
  41b61f:	0f b6 4c 24 60 	movzbl	96(%rsp), %ecx
  41b624:	84 c9 	testb	%cl, %cl
  41b626:	74 19 	je	25 <runtime.(*mheap).freeSpanLocked+0x91>
  41b628:	48 8b 0d 19 91 0a 00 	movq	692505(%rip), %rcx
  41b62f:	48 8b 58 20 	movq	32(%rax), %rbx
  41b633:	48 c1 e3 0d 	shlq	$13, %rbx
  41b637:	48 29 d9 	subq	%rbx, %rcx
  41b63a:	48 89 0d 07 91 0a 00 	movq	%rcx, 692487(%rip)
  41b641:	0f b6 4c 24 61 	movzbl	97(%rsp), %ecx
  41b646:	84 c9 	testb	%cl, %cl
  41b648:	74 16 	je	22 <runtime.(*mheap).freeSpanLocked+0xb0>
  41b64a:	48 8b 48 20 	movq	32(%rax), %rcx
  41b64e:	48 c1 e1 0d 	shlq	$13, %rcx
  41b652:	48 03 0d e7 90 0a 00 	addq	692455(%rip), %rcx
  41b659:	48 89 0d e0 90 0a 00 	movq	%rcx, 692448(%rip)
  41b660:	c6 40 64 03 	movb	$3, 100(%rax)
  41b664:	48 8b 48 10 	movq	16(%rax), %rcx
  41b668:	48 85 c9 	testq	%rcx, %rcx
  41b66b:	74 2d 	je	45 <runtime.(*mheap).freeSpanLocked+0xea>
  41b66d:	48 8b 48 20 	movq	32(%rax), %rcx
  41b671:	48 81 f9 80 00 00 00 	cmpq	$128, %rcx
  41b678:	0f 83 fc 02 00 00 	jae	764 <runtime.(*mheap).freeSpanLocked+0x3ca>
  41b67e:	84 02 	testb	%al, (%rdx)
  41b680:	48 c1 e1 04 	shlq	$4, %rcx
  41b684:	48 8d 8c 0a 10 08 00 00 	leaq	2064(%rdx,%rcx), %rcx
  41b68c:	48 89 0c 24 	movq	%rcx, (%rsp)
  41b690:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41b695:	e8 16 0a 00 00 	callq	2582 <runtime.(*mSpanList).remove>
  41b69a:	48 8b 44 24 68 	movq	104(%rsp), %rax
  41b69f:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  41b6a4:	48 89 41 70 	movq	%rax, 112(%rcx)
  41b6a8:	48 85 c0 	testq	%rax, %rax
  41b6ab:	0f 84 b2 02 00 00 	je	690 <runtime.(*mheap).freeSpanLocked+0x3b3>
  41b6b1:	48 c7 41 78 00 00 00 00 	movq	$0, 120(%rcx)
  41b6b9:	48 8b 44 24 50 	movq	80(%rsp), %rax
  41b6be:	84 00 	testb	%al, (%rax)
  41b6c0:	48 8b 51 18 	movq	24(%rcx), %rdx
  41b6c4:	48 2b 90 28 13 00 00 	subq	4904(%rax), %rdx
  41b6cb:	48 c1 ea 0d 	shrq	$13, %rdx
  41b6cf:	48 f7 c2 ff ff ff ff 	testq	$-1, %rdx
  41b6d6:	0f 86 7c 02 00 00 	jbe	636 <runtime.(*mheap).freeSpanLocked+0x3a8>
  41b6dc:	48 8b 98 50 10 00 00 	movq	4176(%rax), %rbx
  41b6e3:	48 8b b0 48 10 00 00 	movq	4168(%rax), %rsi
  41b6ea:	48 8d 7a ff 	leaq	-1(%rdx), %rdi
  41b6ee:	48 39 df 	cmpq	%rbx, %rdi
  41b6f1:	0f 83 bf 02 00 00 	jae	703 <runtime.(*mheap).freeSpanLocked+0x406>
  41b6f7:	48 8b 5c d6 f8 	movq	-8(%rsi,%rdx,8), %rbx
  41b6fc:	48 85 db 	testq	%rbx, %rbx
  41b6ff:	0f 84 48 02 00 00 	je	584 <runtime.(*mheap).freeSpanLocked+0x39d>
  41b705:	0f b6 73 64 	movzbl	100(%rbx), %esi
  41b709:	40 80 fe 03 	cmpb	$3, %sil
  41b70d:	0f 85 2f 02 00 00 	jne	559 <runtime.(*mheap).freeSpanLocked+0x392>
  41b713:	48 8b 73 18 	movq	24(%rbx), %rsi
  41b717:	48 89 71 18 	movq	%rsi, 24(%rcx)
  41b71b:	48 8b 71 20 	movq	32(%rcx), %rsi
  41b71f:	48 03 73 20 	addq	32(%rbx), %rsi
  41b723:	48 89 71 20 	movq	%rsi, 32(%rcx)
  41b727:	48 8b 73 78 	movq	120(%rbx), %rsi
  41b72b:	48 89 71 78 	movq	%rsi, 120(%rcx)
  41b72f:	0f b6 71 65 	movzbl	101(%rcx), %esi
  41b733:	0f b6 7b 65 	movzbl	101(%rbx), %edi
  41b737:	09 f7 	orl	%esi, %edi
  41b739:	40 88 79 65 	movb	%dil, 101(%rcx)
  41b73d:	48 8b 73 20 	movq	32(%rbx), %rsi
  41b741:	48 29 f2 	subq	%rsi, %rdx
  41b744:	48 8b b0 50 10 00 00 	movq	4176(%rax), %rsi
  41b74b:	48 8b b8 48 10 00 00 	movq	4168(%rax), %rdi
  41b752:	48 39 f2 	cmpq	%rsi, %rdx
  41b755:	0f 83 54 02 00 00 	jae	596 <runtime.(*mheap).freeSpanLocked+0x3ff>
  41b75b:	48 89 5c 24 38 	movq	%rbx, 56(%rsp)
  41b760:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  41b765:	48 89 0c d7 	movq	%rcx, (%rdi,%rdx,8)
  41b769:	48 8b 73 20 	movq	32(%rbx), %rsi
  41b76d:	48 81 fe 80 00 00 00 	cmpq	$128, %rsi
  41b774:	0f 82 ac 01 00 00 	jb	428 <runtime.(*mheap).freeSpanLocked+0x376>
  41b77a:	48 8d 88 08 08 00 00 	leaq	2056(%rax), %rcx
  41b781:	48 89 0c 24 	movq	%rcx, (%rsp)
  41b785:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  41b78a:	e8 21 83 ff ff 	callq	-31967 <runtime.(*mTreap).removeSpan>
  41b78f:	48 8b 44 24 38 	movq	56(%rsp), %rax
  41b794:	c6 40 64 00 	movb	$0, 100(%rax)
  41b798:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  41b79d:	48 8d 91 d0 34 00 00 	leaq	13520(%rcx), %rdx
  41b7a4:	84 02 	testb	%al, (%rdx)
  41b7a6:	48 8b 91 00 35 00 00 	movq	13568(%rcx), %rdx
  41b7ad:	48 2b 91 d0 34 00 00 	subq	13520(%rcx), %rdx
  41b7b4:	48 89 91 00 35 00 00 	movq	%rdx, 13568(%rcx)
  41b7bb:	48 8b 91 e8 34 00 00 	movq	13544(%rcx), %rdx
  41b7c2:	48 89 10 	movq	%rdx, (%rax)
  41b7c5:	48 89 81 e8 34 00 00 	movq	%rax, 13544(%rcx)
  41b7cc:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41b7d1:	48 8b 54 24 58 	movq	88(%rsp), %rdx
  41b7d6:	48 8b 5a 20 	movq	32(%rdx), %rbx
  41b7da:	48 8d 34 03 	leaq	(%rbx,%rax), %rsi
  41b7de:	48 8b b9 50 10 00 00 	movq	4176(%rcx), %rdi
  41b7e5:	4c 8b 81 48 10 00 00 	movq	4168(%rcx), %r8
  41b7ec:	48 39 fe 	cmpq	%rdi, %rsi
  41b7ef:	0f 83 cb 00 00 00 	jae	203 <runtime.(*mheap).freeSpanLocked+0x310>
  41b7f5:	49 8b 34 f0 	movq	(%r8,%rsi,8), %rsi
  41b7f9:	48 85 f6 	testq	%rsi, %rsi
  41b7fc:	0f 84 be 00 00 00 	je	190 <runtime.(*mheap).freeSpanLocked+0x310>
  41b802:	0f b6 7e 64 	movzbl	100(%rsi), %edi
  41b806:	40 80 ff 03 	cmpb	$3, %dil
  41b80a:	0f 85 b0 00 00 00 	jne	176 <runtime.(*mheap).freeSpanLocked+0x310>
  41b810:	48 8b 7e 20 	movq	32(%rsi), %rdi
  41b814:	48 01 fb 	addq	%rdi, %rbx
  41b817:	48 89 5a 20 	movq	%rbx, 32(%rdx)
  41b81b:	48 8b 5a 78 	movq	120(%rdx), %rbx
  41b81f:	48 03 5e 78 	addq	120(%rsi), %rbx
  41b823:	48 89 5a 78 	movq	%rbx, 120(%rdx)
  41b827:	0f b6 5a 65 	movzbl	101(%rdx), %ebx
  41b82b:	0f b6 7e 65 	movzbl	101(%rsi), %edi
  41b82f:	09 df 	orl	%ebx, %edi
  41b831:	40 88 7a 65 	movb	%dil, 101(%rdx)
  41b835:	48 8b 99 50 10 00 00 	movq	4176(%rcx), %rbx
  41b83c:	48 8b b9 48 10 00 00 	movq	4168(%rcx), %rdi
  41b843:	4c 8b 42 20 	movq	32(%rdx), %r8
  41b847:	49 8d 44 00 ff 	leaq	-1(%r8,%rax), %rax
  41b84c:	48 39 d8 	cmpq	%rbx, %rax
  41b84f:	0f 83 53 01 00 00 	jae	339 <runtime.(*mheap).freeSpanLocked+0x3f8>
  41b855:	48 89 74 24 38 	movq	%rsi, 56(%rsp)
  41b85a:	48 89 14 c7 	movq	%rdx, (%rdi,%rax,8)
  41b85e:	48 8b 46 20 	movq	32(%rsi), %rax
  41b862:	48 3d 80 00 00 00 	cmpq	$128, %rax
  41b868:	0f 82 9c 00 00 00 	jb	156 <runtime.(*mheap).freeSpanLocked+0x35a>
  41b86e:	48 8d 81 08 08 00 00 	leaq	2056(%rcx), %rax
  41b875:	48 89 04 24 	movq	%rax, (%rsp)
  41b879:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  41b87e:	e8 2d 82 ff ff 	callq	-32211 <runtime.(*mTreap).removeSpan>
  41b883:	48 8b 44 24 38 	movq	56(%rsp), %rax
  41b888:	c6 40 64 00 	movb	$0, 100(%rax)
  41b88c:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  41b891:	48 8d 91 d0 34 00 00 	leaq	13520(%rcx), %rdx
  41b898:	84 02 	testb	%al, (%rdx)
  41b89a:	48 8b 91 00 35 00 00 	movq	13568(%rcx), %rdx
  41b8a1:	48 2b 91 d0 34 00 00 	subq	13520(%rcx), %rdx
  41b8a8:	48 89 91 00 35 00 00 	movq	%rdx, 13568(%rcx)
  41b8af:	48 8b 91 e8 34 00 00 	movq	13544(%rcx), %rdx
  41b8b6:	48 89 10 	movq	%rdx, (%rax)
  41b8b9:	48 89 81 e8 34 00 00 	movq	%rax, 13544(%rcx)
  41b8c0:	48 8b 44 24 58 	movq	88(%rsp), %rax
  41b8c5:	48 8b 50 20 	movq	32(%rax), %rdx
  41b8c9:	48 81 fa 80 00 00 00 	cmpq	$128, %rdx
  41b8d0:	72 1f 	jb	31 <runtime.(*mheap).freeSpanLocked+0x341>
  41b8d2:	48 81 c1 08 08 00 00 	addq	$2056, %rcx
  41b8d9:	48 89 0c 24 	movq	%rcx, (%rsp)
  41b8dd:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41b8e2:	e8 d9 7c ff ff 	callq	-33575 <runtime.(*mTreap).insert>
  41b8e7:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  41b8ec:	48 83 c4 48 	addq	$72, %rsp
  41b8f0:	c3 	retq
  41b8f1:	48 c1 e2 04 	shlq	$4, %rdx
  41b8f5:	48 8d 4c 0a 08 	leaq	8(%rdx,%rcx), %rcx
  41b8fa:	48 89 0c 24 	movq	%rcx, (%rsp)
  41b8fe:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41b903:	e8 48 09 00 00 	callq	2376 <runtime.(*mSpanList).insert>
  41b908:	eb dd 	jmp	-35 <runtime.(*mheap).freeSpanLocked+0x337>
  41b90a:	48 c1 e0 04 	shlq	$4, %rax
  41b90e:	48 8d 44 08 08 	leaq	8(%rax,%rcx), %rax
  41b913:	48 89 04 24 	movq	%rax, (%rsp)
  41b917:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  41b91c:	e8 8f 07 00 00 	callq	1935 <runtime.(*mSpanList).remove>
  41b921:	e9 5d ff ff ff 	jmp	-163 <runtime.(*mheap).freeSpanLocked+0x2d3>
  41b926:	48 c1 e6 04 	shlq	$4, %rsi
  41b92a:	48 8d 4c 06 08 	leaq	8(%rsi,%rax), %rcx
  41b92f:	48 89 0c 24 	movq	%rcx, (%rsp)
  41b933:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  41b938:	e8 73 07 00 00 	callq	1907 <runtime.(*mSpanList).remove>
  41b93d:	e9 4d fe ff ff 	jmp	-435 <runtime.(*mheap).freeSpanLocked+0x1df>
  41b942:	48 89 c1 	movq	%rax, %rcx
  41b945:	48 89 d0 	movq	%rdx, %rax
  41b948:	e9 84 fe ff ff 	jmp	-380 <runtime.(*mheap).freeSpanLocked+0x221>
  41b94d:	48 89 c1 	movq	%rax, %rcx
  41b950:	48 89 d0 	movq	%rdx, %rax
  41b953:	e9 79 fe ff ff 	jmp	-391 <runtime.(*mheap).freeSpanLocked+0x221>
  41b958:	48 89 c1 	movq	%rax, %rcx
  41b95b:	48 89 d0 	movq	%rdx, %rax
  41b95e:	e9 6e fe ff ff 	jmp	-402 <runtime.(*mheap).freeSpanLocked+0x221>
  41b963:	e8 c8 c0 02 00 	callq	180424 <runtime.nanotime>
  41b968:	48 8b 04 24 	movq	(%rsp), %rax
  41b96c:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  41b971:	48 89 41 70 	movq	%rax, 112(%rcx)
  41b975:	e9 37 fd ff ff 	jmp	-713 <runtime.(*mheap).freeSpanLocked+0x101>
  41b97a:	84 02 	testb	%al, (%rdx)
  41b97c:	48 8d 8a 10 10 00 00 	leaq	4112(%rdx), %rcx
  41b983:	e9 04 fd ff ff 	jmp	-764 <runtime.(*mheap).freeSpanLocked+0xdc>
  41b988:	80 f9 02 	cmpb	$2, %cl
  41b98b:	0f 85 5a 01 00 00 	jne	346 <runtime.(*mheap).freeSpanLocked+0x53b>
  41b991:	0f b7 48 60 	movzwl	96(%rax), %ecx
  41b995:	66 85 c9 	testw	%cx, %cx
  41b998:	0f 85 32 01 00 00 	jne	306 <runtime.(*mheap).freeSpanLocked+0x520>
  41b99e:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  41b9a3:	e9 77 fc ff ff 	jmp	-905 <runtime.(*mheap).freeSpanLocked+0x6f>
  41b9a8:	e8 93 40 00 00 	callq	16531 <runtime.panicindex>
  41b9ad:	0f 0b 	ud2
  41b9af:	e8 8c 40 00 00 	callq	16524 <runtime.panicindex>
  41b9b4:	0f 0b 	ud2
  41b9b6:	e8 85 40 00 00 	callq	16517 <runtime.panicindex>
  41b9bb:	0f 0b 	ud2
  41b9bd:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  41b9c2:	84 01 	testb	%al, (%rcx)
  41b9c4:	8b 89 20 10 00 00 	movl	4128(%rcx), %ecx
  41b9ca:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  41b9cf:	8b 50 58 	movl	88(%rax), %edx
  41b9d2:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  41b9d7:	48 8b 58 18 	movq	24(%rax), %rbx
  41b9db:	48 89 5c 24 18 	movq	%rbx, 24(%rsp)
  41b9e0:	e8 1b 61 00 00 	callq	24859 <runtime.printlock>
  41b9e5:	48 8d 05 ce 05 05 00 	leaq	329166(%rip), %rax
  41b9ec:	48 89 04 24 	movq	%rax, (%rsp)
  41b9f0:	48 c7 44 24 08 1c 00 00 00 	movq	$28, 8(%rsp)
  41b9f9:	e8 42 6a 00 00 	callq	27202 <runtime.printstring>
  41b9fe:	48 8b 44 24 58 	movq	88(%rsp), %rax
  41ba03:	48 89 04 24 	movq	%rax, (%rsp)
  41ba07:	e8 f4 69 00 00 	callq	27124 <runtime.printpointer>
  41ba0c:	48 8d 05 64 e3 04 00 	leaq	320356(%rip), %rax
  41ba13:	48 89 04 24 	movq	%rax, (%rsp)
  41ba17:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  41ba20:	e8 1b 6a 00 00 	callq	27163 <runtime.printstring>
  41ba25:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41ba2a:	48 89 04 24 	movq	%rax, (%rsp)
  41ba2e:	e8 bd 68 00 00 	callq	26813 <runtime.printhex>
  41ba33:	48 8d 05 b4 ea 04 00 	leaq	322228(%rip), %rax
  41ba3a:	48 89 04 24 	movq	%rax, (%rsp)
  41ba3e:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  41ba47:	e8 f4 69 00 00 	callq	27124 <runtime.printstring>
  41ba4c:	0f b7 44 24 16 	movzwl	22(%rsp), %eax
  41ba51:	0f b7 c0 	movzwl	%ax, %eax
  41ba54:	48 89 04 24 	movq	%rax, (%rsp)
  41ba58:	e8 13 67 00 00 	callq	26387 <runtime.printuint>
  41ba5d:	48 8d 05 76 e8 04 00 	leaq	321654(%rip), %rax
  41ba64:	48 89 04 24 	movq	%rax, (%rsp)
  41ba68:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  41ba71:	e8 ca 69 00 00 	callq	27082 <runtime.printstring>
  41ba76:	48 8b 44 24 28 	movq	40(%rsp), %rax
  41ba7b:	48 89 04 24 	movq	%rax, (%rsp)
  41ba7f:	e8 ec 66 00 00 	callq	26348 <runtime.printuint>
  41ba84:	48 8d 05 cc e1 04 00 	leaq	319948(%rip), %rax
  41ba8b:	48 89 04 24 	movq	%rax, (%rsp)
  41ba8f:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  41ba98:	e8 a3 69 00 00 	callq	27043 <runtime.printstring>
  41ba9d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41baa2:	48 89 04 24 	movq	%rax, (%rsp)
  41baa6:	e8 c5 66 00 00 	callq	26309 <runtime.printuint>
  41baab:	e8 e0 62 00 00 	callq	25312 <runtime.printnl>
  41bab0:	e8 cb 60 00 00 	callq	24779 <runtime.printunlock>
  41bab5:	48 8d 05 0a 12 05 00 	leaq	332298(%rip), %rax
  41babc:	48 89 04 24 	movq	%rax, (%rsp)
  41bac0:	48 c7 44 24 08 23 00 00 00 	movq	$35, 8(%rsp)
  41bac9:	e8 02 57 00 00 	callq	22274 <runtime.throw>
  41bace:	0f 0b 	ud2
  41bad0:	48 8d 05 a9 18 05 00 	leaq	333993(%rip), %rax
  41bad7:	48 89 04 24 	movq	%rax, (%rsp)
  41badb:	48 c7 44 24 08 29 00 00 00 	movq	$41, 8(%rsp)
  41bae4:	e8 e7 56 00 00 	callq	22247 <runtime.throw>
  41bae9:	0f 0b 	ud2
  41baeb:	48 8d 05 65 18 05 00 	leaq	333925(%rip), %rax
  41baf2:	48 89 04 24 	movq	%rax, (%rsp)
  41baf6:	48 c7 44 24 08 29 00 00 00 	movq	$41, 8(%rsp)
  41baff:	e8 cc 56 00 00 	callq	22220 <runtime.throw>
  41bb04:	0f 0b 	ud2
  41bb06:	e8 65 8a 02 00 	callq	166501 <runtime.morestack_noctxt>
  41bb0b:	e9 a0 fa ff ff 	jmp	-1376 <runtime.(*mheap).freeSpanLocked>

runtime.scavengeTreapNode:
  41bb10:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41bb19:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41bb1d:	0f 86 0e 01 00 00 	jbe	270 <runtime.scavengeTreapNode+0x121>
  41bb23:	48 83 ec 20 	subq	$32, %rsp
  41bb27:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  41bb2c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  41bb31:	48 8b 44 24 28 	movq	40(%rsp), %rax
  41bb36:	48 8b 40 20 	movq	32(%rax), %rax
  41bb3a:	84 00 	testb	%al, (%rax)
  41bb3c:	48 8d 48 70 	leaq	112(%rax), %rcx
  41bb40:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  41bb45:	48 2b 11 	subq	(%rcx), %rdx
  41bb48:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  41bb4d:	48 39 ca 	cmpq	%rcx, %rdx
  41bb50:	0f 86 d7 00 00 00 	jbe	215 <runtime.scavengeTreapNode+0x11d>
  41bb56:	48 8b 48 78 	movq	120(%rax), %rcx
  41bb5a:	48 8b 50 20 	movq	32(%rax), %rdx
  41bb5e:	48 39 d1 	cmpq	%rdx, %rcx
  41bb61:	0f 84 c2 00 00 00 	je	194 <runtime.scavengeTreapNode+0x119>
  41bb67:	48 c1 e2 0d 	shlq	$13, %rdx
  41bb6b:	48 8b 58 18 	movq	24(%rax), %rbx
  41bb6f:	48 01 da 	addq	%rbx, %rdx
  41bb72:	48 8b 35 27 7e 0a 00 	movq	687655(%rip), %rsi
  41bb79:	48 81 fe 00 20 00 00 	cmpq	$8192, %rsi
  41bb80:	0f 86 9b 00 00 00 	jbe	155 <runtime.scavengeTreapNode+0x111>
  41bb86:	48 8d 5c 33 ff 	leaq	-1(%rbx,%rsi), %rbx
  41bb8b:	48 8d 7e ff 	leaq	-1(%rsi), %rdi
  41bb8f:	48 f7 d7 	notq	%rdi
  41bb92:	48 21 fb 	andq	%rdi, %rbx
  41bb95:	48 21 d7 	andq	%rdx, %rdi
  41bb98:	48 39 df 	cmpq	%rbx, %rdi
  41bb9b:	76 71 	jbe	113 <runtime.scavengeTreapNode+0xfe>
  41bb9d:	48 29 df 	subq	%rbx, %rdi
  41bba0:	48 c1 e1 0d 	shlq	$13, %rcx
  41bba4:	48 89 fa 	movq	%rdi, %rdx
  41bba7:	48 29 cf 	subq	%rcx, %rdi
  41bbaa:	48 81 fe 00 20 00 00 	cmpq	$8192, %rsi
  41bbb1:	76 05 	jbe	5 <runtime.scavengeTreapNode+0xa8>
  41bbb3:	48 85 ff 	testq	%rdi, %rdi
  41bbb6:	74 43 	je	67 <runtime.scavengeTreapNode+0xeb>
  41bbb8:	48 89 7c 24 10 	movq	%rdi, 16(%rsp)
  41bbbd:	48 8b 0d 8c 8b 0a 00 	movq	691084(%rip), %rcx
  41bbc4:	48 01 f9 	addq	%rdi, %rcx
  41bbc7:	48 89 0d 82 8b 0a 00 	movq	%rcx, 691074(%rip)
  41bbce:	48 89 d1 	movq	%rdx, %rcx
  41bbd1:	48 c1 ea 0d 	shrq	$13, %rdx
  41bbd5:	48 89 50 78 	movq	%rdx, 120(%rax)
  41bbd9:	48 89 1c 24 	movq	%rbx, (%rsp)
  41bbdd:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41bbe2:	e8 49 35 ff ff 	callq	-51895 <runtime.sysUnused>
  41bbe7:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41bbec:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  41bbf1:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  41bbf6:	48 83 c4 20 	addq	$32, %rsp
  41bbfa:	c3 	retq
  41bbfb:	48 c7 44 24 40 00 00 00 00 	movq	$0, 64(%rsp)
  41bc04:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  41bc09:	48 83 c4 20 	addq	$32, %rsp
  41bc0d:	c3 	retq
  41bc0e:	48 c7 44 24 40 00 00 00 00 	movq	$0, 64(%rsp)
  41bc17:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  41bc1c:	48 83 c4 20 	addq	$32, %rsp
  41bc20:	c3 	retq
  41bc21:	48 89 d7 	movq	%rdx, %rdi
  41bc24:	e9 74 ff ff ff 	jmp	-140 <runtime.scavengeTreapNode+0x8d>
  41bc29:	31 c0 	xorl	%eax, %eax
  41bc2b:	eb bf 	jmp	-65 <runtime.scavengeTreapNode+0xdc>
  41bc2d:	31 c0 	xorl	%eax, %eax
  41bc2f:	eb bb 	jmp	-69 <runtime.scavengeTreapNode+0xdc>
  41bc31:	e8 3a 89 02 00 	callq	166202 <runtime.morestack_noctxt>
  41bc36:	e9 d5 fe ff ff 	jmp	-299 <runtime.scavengeTreapNode>
  41bc3b:	cc 	int3
  41bc3c:	cc 	int3
  41bc3d:	cc 	int3
  41bc3e:	cc 	int3
  41bc3f:	cc 	int3

runtime.scavengelist:
  41bc40:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41bc49:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41bc4d:	0f 86 2b 01 00 00 	jbe	299 <runtime.scavengelist+0x13e>
  41bc53:	48 83 ec 30 	subq	$48, %rsp
  41bc57:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  41bc5c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  41bc61:	48 8b 44 24 38 	movq	56(%rsp), %rax
  41bc66:	48 8b 00 	movq	(%rax), %rax
  41bc69:	48 85 c0 	testq	%rax, %rax
  41bc6c:	0f 84 f9 00 00 00 	je	249 <runtime.scavengelist+0x12b>
  41bc72:	31 c9 	xorl	%ecx, %ecx
  41bc74:	eb 03 	jmp	3 <runtime.scavengelist+0x39>
  41bc76:	48 8b 00 	movq	(%rax), %rax
  41bc79:	48 85 c0 	testq	%rax, %rax
  41bc7c:	0f 84 da 00 00 00 	je	218 <runtime.scavengelist+0x11c>
  41bc82:	48 8b 50 70 	movq	112(%rax), %rdx
  41bc86:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  41bc8b:	48 89 de 	movq	%rbx, %rsi
  41bc8e:	48 29 d3 	subq	%rdx, %rbx
  41bc91:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  41bc96:	48 39 d3 	cmpq	%rdx, %rbx
  41bc99:	76 db 	jbe	-37 <runtime.scavengelist+0x36>
  41bc9b:	48 8b 58 78 	movq	120(%rax), %rbx
  41bc9f:	48 8b 78 20 	movq	32(%rax), %rdi
  41bca3:	48 39 fb 	cmpq	%rdi, %rbx
  41bca6:	74 ce 	je	-50 <runtime.scavengelist+0x36>
  41bca8:	48 c1 e7 0d 	shlq	$13, %rdi
  41bcac:	4c 8b 40 18 	movq	24(%rax), %r8
  41bcb0:	4c 01 c7 	addq	%r8, %rdi
  41bcb3:	4c 8b 0d e6 7c 0a 00 	movq	687334(%rip), %r9
  41bcba:	49 81 f9 00 20 00 00 	cmpq	$8192, %r9
  41bcc1:	0f 86 90 00 00 00 	jbe	144 <runtime.scavengelist+0x117>
  41bcc7:	4f 8d 44 08 ff 	leaq	-1(%r8,%r9), %r8
  41bccc:	4d 8d 51 ff 	leaq	-1(%r9), %r10
  41bcd0:	49 f7 d2 	notq	%r10
  41bcd3:	4d 21 d0 	andq	%r10, %r8
  41bcd6:	49 21 fa 	andq	%rdi, %r10
  41bcd9:	4d 39 c2 	cmpq	%r8, %r10
  41bcdc:	76 98 	jbe	-104 <runtime.scavengelist+0x36>
  41bcde:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  41bce3:	4d 29 c2 	subq	%r8, %r10
  41bce6:	48 c1 e3 0d 	shlq	$13, %rbx
  41bcea:	4c 89 d7 	movq	%r10, %rdi
  41bced:	49 29 da 	subq	%rbx, %r10
  41bcf0:	49 81 f9 00 20 00 00 	cmpq	$8192, %r9
  41bcf7:	76 09 	jbe	9 <runtime.scavengelist+0xc2>
  41bcf9:	4d 85 d2 	testq	%r10, %r10
  41bcfc:	0f 84 74 ff ff ff 	je	-140 <runtime.scavengelist+0x36>
  41bd02:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  41bd07:	4c 89 54 24 18 	movq	%r10, 24(%rsp)
  41bd0c:	48 8b 0d 3d 8a 0a 00 	movq	690749(%rip), %rcx
  41bd13:	4c 01 d1 	addq	%r10, %rcx
  41bd16:	48 89 0d 33 8a 0a 00 	movq	%rcx, 690739(%rip)
  41bd1d:	48 89 f9 	movq	%rdi, %rcx
  41bd20:	48 c1 ef 0d 	shrq	$13, %rdi
  41bd24:	48 89 78 78 	movq	%rdi, 120(%rax)
  41bd28:	4c 89 04 24 	movq	%r8, (%rsp)
  41bd2c:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41bd31:	e8 fa 33 ff ff 	callq	-52230 <runtime.sysUnused>
  41bd36:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41bd3b:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  41bd40:	48 01 c1 	addq	%rax, %rcx
  41bd43:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41bd48:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  41bd4d:	48 8b 74 24 40 	movq	64(%rsp), %rsi
  41bd52:	e9 1f ff ff ff 	jmp	-225 <runtime.scavengelist+0x36>
  41bd57:	49 89 fa 	movq	%rdi, %r10
  41bd5a:	eb 82 	jmp	-126 <runtime.scavengelist+0x9e>
  41bd5c:	48 89 4c 24 50 	movq	%rcx, 80(%rsp)
  41bd61:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  41bd66:	48 83 c4 30 	addq	$48, %rsp
  41bd6a:	c3 	retq
  41bd6b:	48 c7 44 24 50 00 00 00 00 	movq	$0, 80(%rsp)
  41bd74:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  41bd79:	48 83 c4 30 	addq	$48, %rsp
  41bd7d:	c3 	retq
  41bd7e:	e8 ed 87 02 00 	callq	165869 <runtime.morestack_noctxt>
  41bd83:	e9 b8 fe ff ff 	jmp	-328 <runtime.scavengelist>
  41bd88:	cc 	int3
  41bd89:	cc 	int3
  41bd8a:	cc 	int3
  41bd8b:	cc 	int3
  41bd8c:	cc 	int3
  41bd8d:	cc 	int3
  41bd8e:	cc 	int3
  41bd8f:	cc 	int3

runtime.(*mheap).scavenge:
  41bd90:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41bd99:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41bd9d:	0f 86 f5 02 00 00 	jbe	757 <runtime.(*mheap).scavenge+0x308>
  41bda3:	48 83 ec 68 	subq	$104, %rsp
  41bda7:	48 89 6c 24 60 	movq	%rbp, 96(%rsp)
  41bdac:	48 8d 6c 24 60 	leaq	96(%rsp), %rbp
  41bdb1:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  41bdba:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  41bdbf:	48 8b 48 30 	movq	48(%rax), %rcx
  41bdc3:	ff 81 e8 00 00 00 	incl	232(%rcx)
  41bdc9:	48 8b 4c 24 70 	movq	112(%rsp), %rcx
  41bdce:	84 01 	testb	%al, (%rcx)
  41bdd0:	48 89 0c 24 	movq	%rcx, (%rsp)
  41bdd4:	e8 47 d7 fe ff 	callq	-75961 <runtime.lock>
  41bdd9:	31 c0 	xorl	%eax, %eax
  41bddb:	31 c9 	xorl	%ecx, %ecx
  41bddd:	eb 4b 	jmp	75 <runtime.(*mheap).scavenge+0x9a>
  41bddf:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  41bde4:	48 c1 e0 04 	shlq	$4, %rax
  41bde8:	48 8b 54 24 70 	movq	112(%rsp), %rdx
  41bded:	48 8d 44 02 08 	leaq	8(%rdx,%rax), %rax
  41bdf2:	48 89 04 24 	movq	%rax, (%rsp)
  41bdf6:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  41bdfe:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41be03:	48 8b 9c 24 88 00 00 00 	movq	136(%rsp), %rbx
  41be0b:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  41be10:	e8 2b fe ff ff 	callq	-469 <runtime.scavengelist>
  41be15:	48 8b 44 24 28 	movq	40(%rsp), %rax
  41be1a:	48 ff c0 	incq	%rax
  41be1d:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  41be22:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  41be27:	48 01 d1 	addq	%rdx, %rcx
  41be2a:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  41be2f:	48 3d 80 00 00 00 	cmpq	$128, %rax
  41be35:	7c a8 	jl	-88 <runtime.(*mheap).scavenge+0x4f>
  41be37:	48 8b 44 24 70 	movq	112(%rsp), %rax
  41be3c:	48 8b 88 08 08 00 00 	movq	2056(%rax), %rcx
  41be43:	48 89 0c 24 	movq	%rcx, (%rsp)
  41be47:	48 8b 8c 24 80 00 00 00 	movq	128(%rsp), %rcx
  41be4f:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41be54:	48 8b 8c 24 88 00 00 00 	movq	136(%rsp), %rcx
  41be5c:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  41be61:	e8 da 7c ff ff 	callq	-33574 <runtime.scavengetreap>
  41be66:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41be6b:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  41be70:	48 8b 4c 24 70 	movq	112(%rsp), %rcx
  41be75:	48 89 0c 24 	movq	%rcx, (%rsp)
  41be79:	e8 42 d8 fe ff 	callq	-75710 <runtime.unlock>
  41be7e:	48 8b 44 24 58 	movq	88(%rsp), %rax
  41be83:	48 8b 40 30 	movq	48(%rax), %rax
  41be87:	83 80 e8 00 00 00 ff 	addl	$-1, 232(%rax)
  41be8e:	48 8b 44 24 50 	movq	80(%rsp), %rax
  41be93:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  41be98:	48 01 c8 	addq	%rcx, %rax
  41be9b:	8b 0d 3f 7c 0a 00 	movl	687167(%rip), %ecx
  41bea1:	85 c9 	testl	%ecx, %ecx
  41bea3:	0f 8e 64 01 00 00 	jle	356 <runtime.(*mheap).scavenge+0x27d>
  41bea9:	48 85 c0 	testq	%rax, %rax
  41beac:	0f 87 65 01 00 00 	ja	357 <runtime.(*mheap).scavenge+0x287>
  41beb2:	48 8b 05 8f 88 0a 00 	movq	690319(%rip), %rax
  41beb9:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  41bebe:	48 8b 0d 7b 88 0a 00 	movq	690299(%rip), %rcx
  41bec5:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  41beca:	48 8b 15 67 88 0a 00 	movq	690279(%rip), %rdx
  41bed1:	48 89 54 24 38 	movq	%rdx, 56(%rsp)
  41bed6:	48 8b 1d 73 88 0a 00 	movq	690291(%rip), %rbx
  41bedd:	48 89 5c 24 30 	movq	%rbx, 48(%rsp)
  41bee2:	e8 19 5c 00 00 	callq	23577 <runtime.printlock>
  41bee7:	48 8d 05 40 de 04 00 	leaq	319040(%rip), %rax
  41beee:	48 89 04 24 	movq	%rax, (%rsp)
  41bef2:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  41befb:	e8 40 65 00 00 	callq	25920 <runtime.printstring>
  41bf00:	8b 44 24 78 	movl	120(%rsp), %eax
  41bf04:	48 63 c0 	movslq	%eax, %rax
  41bf07:	48 89 04 24 	movq	%rax, (%rsp)
  41bf0b:	e8 70 63 00 00 	callq	25456 <runtime.printint>
  41bf10:	48 8d 05 ca e1 04 00 	leaq	319946(%rip), %rax
  41bf17:	48 89 04 24 	movq	%rax, (%rsp)
  41bf1b:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  41bf24:	e8 17 65 00 00 	callq	25879 <runtime.printstring>
  41bf29:	48 8b 44 24 48 	movq	72(%rsp), %rax
  41bf2e:	48 c1 e8 14 	shrq	$20, %rax
  41bf32:	48 89 04 24 	movq	%rax, (%rsp)
  41bf36:	e8 35 62 00 00 	callq	25141 <runtime.printuint>
  41bf3b:	48 8d 05 ad e0 04 00 	leaq	319661(%rip), %rax
  41bf42:	48 89 04 24 	movq	%rax, (%rsp)
  41bf46:	48 c7 44 24 08 08 00 00 00 	movq	$8, 8(%rsp)
  41bf4f:	e8 ec 64 00 00 	callq	25836 <runtime.printstring>
  41bf54:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41bf59:	48 c1 e8 14 	shrq	$20, %rax
  41bf5d:	48 89 04 24 	movq	%rax, (%rsp)
  41bf61:	e8 0a 62 00 00 	callq	25098 <runtime.printuint>
  41bf66:	48 8d 05 2c df 04 00 	leaq	319276(%rip), %rax
  41bf6d:	48 89 04 24 	movq	%rax, (%rsp)
  41bf71:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  41bf7a:	e8 c1 64 00 00 	callq	25793 <runtime.printstring>
  41bf7f:	48 8b 44 24 38 	movq	56(%rsp), %rax
  41bf84:	48 c1 e8 14 	shrq	$20, %rax
  41bf88:	48 89 04 24 	movq	%rax, (%rsp)
  41bf8c:	e8 df 61 00 00 	callq	25055 <runtime.printuint>
  41bf91:	48 8d 05 fe e5 04 00 	leaq	321022(%rip), %rax
  41bf98:	48 89 04 24 	movq	%rax, (%rsp)
  41bf9c:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  41bfa5:	e8 96 64 00 00 	callq	25750 <runtime.printstring>
  41bfaa:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41bfaf:	48 c1 e8 14 	shrq	$20, %rax
  41bfb3:	48 89 04 24 	movq	%rax, (%rsp)
  41bfb7:	e8 b4 61 00 00 	callq	25012 <runtime.printuint>
  41bfbc:	48 8d 05 c7 e5 04 00 	leaq	320967(%rip), %rax
  41bfc3:	48 89 04 24 	movq	%rax, (%rsp)
  41bfc7:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  41bfd0:	e8 6b 64 00 00 	callq	25707 <runtime.printstring>
  41bfd5:	48 8b 44 24 38 	movq	56(%rsp), %rax
  41bfda:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  41bfdf:	48 29 c8 	subq	%rcx, %rax
  41bfe2:	48 c1 e8 14 	shrq	$20, %rax
  41bfe6:	48 89 04 24 	movq	%rax, (%rsp)
  41bfea:	e8 81 61 00 00 	callq	24961 <runtime.printuint>
  41bfef:	48 8d 05 e5 dd 04 00 	leaq	318949(%rip), %rax
  41bff6:	48 89 04 24 	movq	%rax, (%rsp)
  41bffa:	48 c7 44 24 08 06 00 00 00 	movq	$6, 8(%rsp)
  41c003:	e8 38 64 00 00 	callq	25656 <runtime.printstring>
  41c008:	e8 73 5b 00 00 	callq	23411 <runtime.printunlock>
  41c00d:	48 8b 6c 24 60 	movq	96(%rsp), %rbp
  41c012:	48 83 c4 68 	addq	$104, %rsp
  41c016:	c3 	retq
  41c017:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  41c01c:	e8 df 5a 00 00 	callq	23263 <runtime.printlock>
  41c021:	48 8d 05 06 dd 04 00 	leaq	318726(%rip), %rax
  41c028:	48 89 04 24 	movq	%rax, (%rsp)
  41c02c:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  41c035:	e8 06 64 00 00 	callq	25606 <runtime.printstring>
  41c03a:	8b 44 24 78 	movl	120(%rsp), %eax
  41c03e:	48 63 c8 	movslq	%eax, %rcx
  41c041:	48 89 0c 24 	movq	%rcx, (%rsp)
  41c045:	e8 36 62 00 00 	callq	25142 <runtime.printint>
  41c04a:	48 8d 05 1f dc 04 00 	leaq	318495(%rip), %rax
  41c051:	48 89 04 24 	movq	%rax, (%rsp)
  41c055:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  41c05e:	e8 dd 63 00 00 	callq	25565 <runtime.printstring>
  41c063:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41c068:	48 c1 e8 14 	shrq	$20, %rax
  41c06c:	48 89 04 24 	movq	%rax, (%rsp)
  41c070:	e8 fb 60 00 00 	callq	24827 <runtime.printuint>
  41c075:	48 8d 05 ce e5 04 00 	leaq	320974(%rip), %rax
  41c07c:	48 89 04 24 	movq	%rax, (%rsp)
  41c080:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  41c089:	e8 b2 63 00 00 	callq	25522 <runtime.printstring>
  41c08e:	e8 ed 5a 00 00 	callq	23277 <runtime.printunlock>
  41c093:	e9 1a fe ff ff 	jmp	-486 <runtime.(*mheap).scavenge+0x122>
  41c098:	e8 d3 84 02 00 	callq	165075 <runtime.morestack_noctxt>
  41c09d:	e9 ee fc ff ff 	jmp	-786 <runtime.(*mheap).scavenge>
  41c0a2:	cc 	int3
  41c0a3:	cc 	int3
  41c0a4:	cc 	int3
  41c0a5:	cc 	int3
  41c0a6:	cc 	int3
  41c0a7:	cc 	int3
  41c0a8:	cc 	int3
  41c0a9:	cc 	int3
  41c0aa:	cc 	int3
  41c0ab:	cc 	int3
  41c0ac:	cc 	int3
  41c0ad:	cc 	int3
  41c0ae:	cc 	int3
  41c0af:	cc 	int3

runtime.(*mSpanList).remove:
  41c0b0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41c0b9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41c0bd:	0f 86 75 01 00 00 	jbe	373 <runtime.(*mSpanList).remove+0x188>
  41c0c3:	48 83 ec 30 	subq	$48, %rsp
  41c0c7:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  41c0cc:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  41c0d1:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41c0d6:	48 8b 48 10 	movq	16(%rax), %rcx
  41c0da:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  41c0df:	48 39 d1 	cmpq	%rdx, %rcx
  41c0e2:	75 50 	jne	80 <runtime.(*mSpanList).remove+0x84>
  41c0e4:	48 8b 0a 	movq	(%rdx), %rcx
  41c0e7:	48 39 c1 	cmpq	%rax, %rcx
  41c0ea:	75 3c 	jne	60 <runtime.(*mSpanList).remove+0x78>
  41c0ec:	48 8b 08 	movq	(%rax), %rcx
  41c0ef:	48 89 0a 	movq	%rcx, (%rdx)
  41c0f2:	48 8b 4a 08 	movq	8(%rdx), %rcx
  41c0f6:	48 39 c8 	cmpq	%rcx, %rax
  41c0f9:	75 20 	jne	32 <runtime.(*mSpanList).remove+0x6b>
  41c0fb:	48 8b 48 08 	movq	8(%rax), %rcx
  41c0ff:	48 89 4a 08 	movq	%rcx, 8(%rdx)
  41c103:	0f 57 c0 	xorps	%xmm0, %xmm0
  41c106:	0f 11 00 	movups	%xmm0, (%rax)
  41c109:	48 c7 40 10 00 00 00 00 	movq	$0, 16(%rax)
  41c111:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  41c116:	48 83 c4 30 	addq	$48, %rsp
  41c11a:	c3 	retq
  41c11b:	48 8b 08 	movq	(%rax), %rcx
  41c11e:	48 8b 50 08 	movq	8(%rax), %rdx
  41c122:	48 89 51 08 	movq	%rdx, 8(%rcx)
  41c126:	eb db 	jmp	-37 <runtime.(*mSpanList).remove+0x53>
  41c128:	48 8b 48 08 	movq	8(%rax), %rcx
  41c12c:	48 8b 18 	movq	(%rax), %rbx
  41c12f:	48 89 19 	movq	%rbx, (%rcx)
  41c132:	eb be 	jmp	-66 <runtime.(*mSpanList).remove+0x42>
  41c134:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  41c139:	48 8b 48 20 	movq	32(%rax), %rcx
  41c13d:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  41c142:	48 8b 50 08 	movq	8(%rax), %rdx
  41c146:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  41c14b:	e8 b0 59 00 00 	callq	22960 <runtime.printlock>
  41c150:	48 8d 05 a8 15 05 00 	leaq	333224(%rip), %rax
  41c157:	48 89 04 24 	movq	%rax, (%rsp)
  41c15b:	48 c7 44 24 08 2d 00 00 00 	movq	$45, 8(%rsp)
  41c164:	e8 d7 62 00 00 	callq	25303 <runtime.printstring>
  41c169:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41c16e:	48 89 04 24 	movq	%rax, (%rsp)
  41c172:	e8 f9 5f 00 00 	callq	24569 <runtime.printuint>
  41c177:	48 8d 05 a5 dc 04 00 	leaq	318629(%rip), %rax
  41c17e:	48 89 04 24 	movq	%rax, (%rsp)
  41c182:	48 c7 44 24 08 06 00 00 00 	movq	$6, 8(%rsp)
  41c18b:	e8 b0 62 00 00 	callq	25264 <runtime.printstring>
  41c190:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41c195:	48 89 04 24 	movq	%rax, (%rsp)
  41c199:	e8 62 62 00 00 	callq	25186 <runtime.printpointer>
  41c19e:	48 8d 05 78 dc 04 00 	leaq	318584(%rip), %rax
  41c1a5:	48 89 04 24 	movq	%rax, (%rsp)
  41c1a9:	48 c7 44 24 08 06 00 00 00 	movq	$6, 8(%rsp)
  41c1b2:	e8 89 62 00 00 	callq	25225 <runtime.printstring>
  41c1b7:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41c1bc:	48 89 04 24 	movq	%rax, (%rsp)
  41c1c0:	e8 3b 62 00 00 	callq	25147 <runtime.printpointer>
  41c1c5:	48 8d 05 66 e2 04 00 	leaq	320102(%rip), %rax
  41c1cc:	48 89 04 24 	movq	%rax, (%rsp)
  41c1d0:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  41c1d9:	e8 62 62 00 00 	callq	25186 <runtime.printstring>
  41c1de:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41c1e3:	48 89 04 24 	movq	%rax, (%rsp)
  41c1e7:	e8 14 62 00 00 	callq	25108 <runtime.printpointer>
  41c1ec:	48 8d 05 18 dc 04 00 	leaq	318488(%rip), %rax
  41c1f3:	48 89 04 24 	movq	%rax, (%rsp)
  41c1f7:	48 c7 44 24 08 06 00 00 00 	movq	$6, 8(%rsp)
  41c200:	e8 3b 62 00 00 	callq	25147 <runtime.printstring>
  41c205:	48 8b 44 24 38 	movq	56(%rsp), %rax
  41c20a:	48 89 04 24 	movq	%rax, (%rsp)
  41c20e:	e8 ed 61 00 00 	callq	25069 <runtime.printpointer>
  41c213:	e8 78 5b 00 00 	callq	23416 <runtime.printnl>
  41c218:	e8 63 59 00 00 	callq	22883 <runtime.printunlock>
  41c21d:	48 8d 05 3e e8 04 00 	leaq	321598(%rip), %rax
  41c224:	48 89 04 24 	movq	%rax, (%rsp)
  41c228:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  41c231:	e8 9a 4f 00 00 	callq	20378 <runtime.throw>
  41c236:	0f 0b 	ud2
  41c238:	e8 33 83 02 00 	callq	164659 <runtime.morestack_noctxt>
  41c23d:	e9 6e fe ff ff 	jmp	-402 <runtime.(*mSpanList).remove>
  41c242:	cc 	int3
  41c243:	cc 	int3
  41c244:	cc 	int3
  41c245:	cc 	int3
  41c246:	cc 	int3
  41c247:	cc 	int3
  41c248:	cc 	int3
  41c249:	cc 	int3
  41c24a:	cc 	int3
  41c24b:	cc 	int3
  41c24c:	cc 	int3
  41c24d:	cc 	int3
  41c24e:	cc 	int3
  41c24f:	cc 	int3

runtime.(*mSpanList).insert:
  41c250:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41c259:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41c25d:	0f 86 fc 00 00 00 	jbe	252 <runtime.(*mSpanList).insert+0x10f>
  41c263:	48 83 ec 30 	subq	$48, %rsp
  41c267:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  41c26c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  41c271:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41c276:	48 8b 08 	movq	(%rax), %rcx
  41c279:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  41c27e:	48 85 c9 	testq	%rcx, %rcx
  41c281:	75 40 	jne	64 <runtime.(*mSpanList).insert+0x73>
  41c283:	48 8b 50 08 	movq	8(%rax), %rdx
  41c287:	48 85 d2 	testq	%rdx, %rdx
  41c28a:	75 37 	jne	55 <runtime.(*mSpanList).insert+0x73>
  41c28c:	48 8b 50 10 	movq	16(%rax), %rdx
  41c290:	48 85 d2 	testq	%rdx, %rdx
  41c293:	75 2e 	jne	46 <runtime.(*mSpanList).insert+0x73>
  41c295:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  41c29a:	48 8b 11 	movq	(%rcx), %rdx
  41c29d:	48 89 10 	movq	%rdx, (%rax)
  41c2a0:	48 8b 11 	movq	(%rcx), %rdx
  41c2a3:	48 85 d2 	testq	%rdx, %rdx
  41c2a6:	74 15 	je	21 <runtime.(*mSpanList).insert+0x6d>
  41c2a8:	48 89 42 08 	movq	%rax, 8(%rdx)
  41c2ac:	48 89 01 	movq	%rax, (%rcx)
  41c2af:	48 89 48 10 	movq	%rcx, 16(%rax)
  41c2b3:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  41c2b8:	48 83 c4 30 	addq	$48, %rsp
  41c2bc:	c3 	retq
  41c2bd:	48 89 41 08 	movq	%rax, 8(%rcx)
  41c2c1:	eb e9 	jmp	-23 <runtime.(*mSpanList).insert+0x5c>
  41c2c3:	48 8b 48 08 	movq	8(%rax), %rcx
  41c2c7:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  41c2cc:	48 8b 50 10 	movq	16(%rax), %rdx
  41c2d0:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  41c2d5:	e8 26 58 00 00 	callq	22566 <runtime.printlock>
  41c2da:	48 8d 05 8a 07 05 00 	leaq	329610(%rip), %rax
  41c2e1:	48 89 04 24 	movq	%rax, (%rsp)
  41c2e5:	48 c7 44 24 08 21 00 00 00 	movq	$33, 8(%rsp)
  41c2ee:	e8 4d 61 00 00 	callq	24909 <runtime.printstring>
  41c2f3:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41c2f8:	48 89 04 24 	movq	%rax, (%rsp)
  41c2fc:	e8 ff 60 00 00 	callq	24831 <runtime.printpointer>
  41c301:	e8 3a 5a 00 00 	callq	23098 <runtime.printsp>
  41c306:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41c30b:	48 89 04 24 	movq	%rax, (%rsp)
  41c30f:	e8 ec 60 00 00 	callq	24812 <runtime.printpointer>
  41c314:	e8 27 5a 00 00 	callq	23079 <runtime.printsp>
  41c319:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41c31e:	48 89 04 24 	movq	%rax, (%rsp)
  41c322:	e8 d9 60 00 00 	callq	24793 <runtime.printpointer>
  41c327:	e8 14 5a 00 00 	callq	23060 <runtime.printsp>
  41c32c:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41c331:	48 89 04 24 	movq	%rax, (%rsp)
  41c335:	e8 c6 60 00 00 	callq	24774 <runtime.printpointer>
  41c33a:	e8 51 5a 00 00 	callq	23121 <runtime.printnl>
  41c33f:	e8 3c 58 00 00 	callq	22588 <runtime.printunlock>
  41c344:	48 8d 05 07 e7 04 00 	leaq	321287(%rip), %rax
  41c34b:	48 89 04 24 	movq	%rax, (%rsp)
  41c34f:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  41c358:	e8 73 4e 00 00 	callq	20083 <runtime.throw>
  41c35d:	0f 0b 	ud2
  41c35f:	e8 0c 82 02 00 	callq	164364 <runtime.morestack_noctxt>
  41c364:	e9 e7 fe ff ff 	jmp	-281 <runtime.(*mSpanList).insert>
  41c369:	cc 	int3
  41c36a:	cc 	int3
  41c36b:	cc 	int3
  41c36c:	cc 	int3
  41c36d:	cc 	int3
  41c36e:	cc 	int3
  41c36f:	cc 	int3

runtime.(*mSpanList).insertBack:
  41c370:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41c379:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41c37d:	0f 86 fe 00 00 00 	jbe	254 <runtime.(*mSpanList).insertBack+0x111>
  41c383:	48 83 ec 30 	subq	$48, %rsp
  41c387:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  41c38c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  41c391:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41c396:	48 8b 08 	movq	(%rax), %rcx
  41c399:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  41c39e:	48 85 c9 	testq	%rcx, %rcx
  41c3a1:	75 42 	jne	66 <runtime.(*mSpanList).insertBack+0x75>
  41c3a3:	48 8b 50 08 	movq	8(%rax), %rdx
  41c3a7:	48 85 d2 	testq	%rdx, %rdx
  41c3aa:	75 39 	jne	57 <runtime.(*mSpanList).insertBack+0x75>
  41c3ac:	48 8b 50 10 	movq	16(%rax), %rdx
  41c3b0:	48 85 d2 	testq	%rdx, %rdx
  41c3b3:	75 30 	jne	48 <runtime.(*mSpanList).insertBack+0x75>
  41c3b5:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  41c3ba:	48 8b 51 08 	movq	8(%rcx), %rdx
  41c3be:	48 89 50 08 	movq	%rdx, 8(%rax)
  41c3c2:	48 8b 51 08 	movq	8(%rcx), %rdx
  41c3c6:	48 85 d2 	testq	%rdx, %rdx
  41c3c9:	74 15 	je	21 <runtime.(*mSpanList).insertBack+0x70>
  41c3cb:	48 89 02 	movq	%rax, (%rdx)
  41c3ce:	48 89 41 08 	movq	%rax, 8(%rcx)
  41c3d2:	48 89 48 10 	movq	%rcx, 16(%rax)
  41c3d6:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  41c3db:	48 83 c4 30 	addq	$48, %rsp
  41c3df:	c3 	retq
  41c3e0:	48 89 01 	movq	%rax, (%rcx)
  41c3e3:	eb e9 	jmp	-23 <runtime.(*mSpanList).insertBack+0x5e>
  41c3e5:	48 8b 48 08 	movq	8(%rax), %rcx
  41c3e9:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  41c3ee:	48 8b 50 10 	movq	16(%rax), %rdx
  41c3f2:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  41c3f7:	e8 04 57 00 00 	callq	22276 <runtime.printlock>
  41c3fc:	48 8d 05 fc 0b 05 00 	leaq	330748(%rip), %rax
  41c403:	48 89 04 24 	movq	%rax, (%rsp)
  41c407:	48 c7 44 24 08 25 00 00 00 	movq	$37, 8(%rsp)
  41c410:	e8 2b 60 00 00 	callq	24619 <runtime.printstring>
  41c415:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41c41a:	48 89 04 24 	movq	%rax, (%rsp)
  41c41e:	e8 dd 5f 00 00 	callq	24541 <runtime.printpointer>
  41c423:	e8 18 59 00 00 	callq	22808 <runtime.printsp>
  41c428:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41c42d:	48 89 04 24 	movq	%rax, (%rsp)
  41c431:	e8 ca 5f 00 00 	callq	24522 <runtime.printpointer>
  41c436:	e8 05 59 00 00 	callq	22789 <runtime.printsp>
  41c43b:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41c440:	48 89 04 24 	movq	%rax, (%rsp)
  41c444:	e8 b7 5f 00 00 	callq	24503 <runtime.printpointer>
  41c449:	e8 f2 58 00 00 	callq	22770 <runtime.printsp>
  41c44e:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41c453:	48 89 04 24 	movq	%rax, (%rsp)
  41c457:	e8 a4 5f 00 00 	callq	24484 <runtime.printpointer>
  41c45c:	e8 2f 59 00 00 	callq	22831 <runtime.printnl>
  41c461:	e8 1a 57 00 00 	callq	22298 <runtime.printunlock>
  41c466:	48 8d 05 ac eb 04 00 	leaq	322476(%rip), %rax
  41c46d:	48 89 04 24 	movq	%rax, (%rsp)
  41c471:	48 c7 44 24 08 14 00 00 00 	movq	$20, 8(%rsp)
  41c47a:	e8 51 4d 00 00 	callq	19793 <runtime.throw>
  41c47f:	0f 0b 	ud2
  41c481:	e8 ea 80 02 00 	callq	164074 <runtime.morestack_noctxt>
  41c486:	e9 e5 fe ff ff 	jmp	-283 <runtime.(*mSpanList).insertBack>
  41c48b:	cc 	int3
  41c48c:	cc 	int3
  41c48d:	cc 	int3
  41c48e:	cc 	int3
  41c48f:	cc 	int3

runtime.(*mSpanList).takeAll:
  41c490:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41c495:	48 8b 08 	movq	(%rax), %rcx
  41c498:	48 85 c9 	testq	%rcx, %rcx
  41c49b:	74 4a 	je	74 <runtime.(*mSpanList).takeAll+0x57>
  41c49d:	48 8b 54 24 08 	movq	8(%rsp), %rdx
  41c4a2:	eb 07 	jmp	7 <runtime.(*mSpanList).takeAll+0x1b>
  41c4a4:	48 89 51 10 	movq	%rdx, 16(%rcx)
  41c4a8:	48 8b 09 	movq	(%rcx), %rcx
  41c4ab:	48 85 c9 	testq	%rcx, %rcx
  41c4ae:	75 f4 	jne	-12 <runtime.(*mSpanList).takeAll+0x14>
  41c4b0:	48 8b 0a 	movq	(%rdx), %rcx
  41c4b3:	48 85 c9 	testq	%rcx, %rcx
  41c4b6:	74 1f 	je	31 <runtime.(*mSpanList).takeAll+0x47>
  41c4b8:	48 8b 58 08 	movq	8(%rax), %rbx
  41c4bc:	48 89 0b 	movq	%rcx, (%rbx)
  41c4bf:	48 8b 0a 	movq	(%rdx), %rcx
  41c4c2:	48 8b 58 08 	movq	8(%rax), %rbx
  41c4c6:	48 89 59 08 	movq	%rbx, 8(%rcx)
  41c4ca:	48 8b 08 	movq	(%rax), %rcx
  41c4cd:	48 89 0a 	movq	%rcx, (%rdx)
  41c4d0:	0f 57 c0 	xorps	%xmm0, %xmm0
  41c4d3:	0f 11 00 	movups	%xmm0, (%rax)
  41c4d6:	c3 	retq
  41c4d7:	48 8b 48 08 	movq	8(%rax), %rcx
  41c4db:	48 8b 18 	movq	(%rax), %rbx
  41c4de:	48 89 1a 	movq	%rbx, (%rdx)
  41c4e1:	48 89 4a 08 	movq	%rcx, 8(%rdx)
  41c4e5:	eb e9 	jmp	-23 <runtime.(*mSpanList).takeAll+0x40>
  41c4e7:	c3 	retq
  41c4e8:	cc 	int3
  41c4e9:	cc 	int3
  41c4ea:	cc 	int3
  41c4eb:	cc 	int3
  41c4ec:	cc 	int3
  41c4ed:	cc 	int3
  41c4ee:	cc 	int3
  41c4ef:	cc 	int3

runtime.addspecial:
  41c4f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41c4f9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41c4fd:	0f 86 0f 02 00 00 	jbe	527 <runtime.addspecial+0x222>
  41c503:	48 83 ec 40 	subq	$64, %rsp
  41c507:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  41c50c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  41c511:	48 8b 44 24 48 	movq	72(%rsp), %rax
  41c516:	48 89 c1 	movq	%rax, %rcx
  41c519:	48 8b 15 a8 10 09 00 	movq	594088(%rip), %rdx
  41c520:	48 39 d0 	cmpq	%rdx, %rax
  41c523:	0f 83 67 01 00 00 	jae	359 <runtime.addspecial+0x1a0>
  41c529:	31 c0 	xorl	%eax, %eax
  41c52b:	48 85 c0 	testq	%rax, %rax
  41c52e:	0f 84 bc 01 00 00 	je	444 <runtime.addspecial+0x200>
  41c534:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  41c539:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41c542:	48 8b 51 30 	movq	48(%rcx), %rdx
  41c546:	ff 82 00 01 00 00 	incl	256(%rdx)
  41c54c:	48 8b 49 30 	movq	48(%rcx), %rcx
  41c550:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  41c555:	48 89 04 24 	movq	%rax, (%rsp)
  41c559:	e8 82 b9 ff ff 	callq	-18046 <runtime.(*mspan).ensureSwept>
  41c55e:	48 8b 44 24 48 	movq	72(%rsp), %rax
  41c563:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  41c568:	48 8d 51 18 	leaq	24(%rcx), %rdx
  41c56c:	48 2b 02 	subq	(%rdx), %rax
  41c56f:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  41c574:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  41c579:	0f b6 5a 0a 	movzbl	10(%rdx), %ebx
  41c57d:	88 5c 24 17 	movb	%bl, 23(%rsp)
  41c581:	48 8d b1 88 00 00 00 	leaq	136(%rcx), %rsi
  41c588:	48 89 74 24 30 	movq	%rsi, 48(%rsp)
  41c58d:	48 89 34 24 	movq	%rsi, (%rsp)
  41c591:	e8 8a cf fe ff 	callq	-77942 <runtime.lock>
  41c596:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41c59b:	48 05 90 00 00 00 	addq	$144, %rax
  41c5a1:	0f b6 4c 24 17 	movzbl	23(%rsp), %ecx
  41c5a6:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  41c5ab:	eb 03 	jmp	3 <runtime.addspecial+0xc0>
  41c5ad:	48 89 d8 	movq	%rbx, %rax
  41c5b0:	48 8b 18 	movq	(%rax), %rbx
  41c5b3:	48 85 db 	testq	%rbx, %rbx
  41c5b6:	74 22 	je	34 <runtime.addspecial+0xea>
  41c5b8:	0f b7 73 08 	movzwl	8(%rbx), %esi
  41c5bc:	48 39 f2 	cmpq	%rsi, %rdx
  41c5bf:	75 0c 	jne	12 <runtime.addspecial+0xdd>
  41c5c1:	0f b6 7b 0a 	movzbl	10(%rbx), %edi
  41c5c5:	40 38 f9 	cmpb	%dil, %cl
  41c5c8:	74 74 	je	116 <runtime.addspecial+0x14e>
  41c5ca:	48 39 f2 	cmpq	%rsi, %rdx
  41c5cd:	72 0b 	jb	11 <runtime.addspecial+0xea>
  41c5cf:	75 dc 	jne	-36 <runtime.addspecial+0xbd>
  41c5d1:	0f b6 73 0a 	movzbl	10(%rbx), %esi
  41c5d5:	40 38 f1 	cmpb	%sil, %cl
  41c5d8:	73 d3 	jae	-45 <runtime.addspecial+0xbd>
  41c5da:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  41c5df:	66 89 51 08 	movw	%dx, 8(%rcx)
  41c5e3:	48 8b 10 	movq	(%rax), %rdx
  41c5e6:	48 89 11 	movq	%rdx, (%rcx)
  41c5e9:	48 89 08 	movq	%rcx, (%rax)
  41c5ec:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41c5f1:	48 89 04 24 	movq	%rax, (%rsp)
  41c5f5:	e8 c6 d0 fe ff 	callq	-77626 <runtime.unlock>
  41c5fa:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  41c603:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  41c608:	8b 91 00 01 00 00 	movl	256(%rcx), %edx
  41c60e:	8d 5a ff 	leal	-1(%rdx), %ebx
  41c611:	89 99 00 01 00 00 	movl	%ebx, 256(%rcx)
  41c617:	83 fa 01 	cmpl	$1, %edx
  41c61a:	75 13 	jne	19 <runtime.addspecial+0x13f>
  41c61c:	0f b6 88 c0 00 00 00 	movzbl	192(%rax), %ecx
  41c623:	84 c9 	testb	%cl, %cl
  41c625:	74 08 	je	8 <runtime.addspecial+0x13f>
  41c627:	48 c7 40 10 de fa ff ff 	movq	$-1314, 16(%rax)
  41c62f:	c6 44 24 58 01 	movb	$1, 88(%rsp)
  41c634:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  41c639:	48 83 c4 40 	addq	$64, %rsp
  41c63d:	c3 	retq
  41c63e:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41c643:	48 89 04 24 	movq	%rax, (%rsp)
  41c647:	e8 74 d0 fe ff 	callq	-77708 <runtime.unlock>
  41c64c:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  41c655:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  41c65a:	8b 91 00 01 00 00 	movl	256(%rcx), %edx
  41c660:	8d 5a ff 	leal	-1(%rdx), %ebx
  41c663:	89 99 00 01 00 00 	movl	%ebx, 256(%rcx)
  41c669:	83 fa 01 	cmpl	$1, %edx
  41c66c:	75 13 	jne	19 <runtime.addspecial+0x191>
  41c66e:	0f b6 88 c0 00 00 00 	movzbl	192(%rax), %ecx
  41c675:	84 c9 	testb	%cl, %cl
  41c677:	74 08 	je	8 <runtime.addspecial+0x191>
  41c679:	48 c7 40 10 de fa ff ff 	movq	$-1314, 16(%rax)
  41c681:	c6 44 24 58 00 	movb	$0, 88(%rsp)
  41c686:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  41c68b:	48 83 c4 40 	addq	$64, %rsp
  41c68f:	c3 	retq
  41c690:	48 8b 1d 39 0f 09 00 	movq	593721(%rip), %rbx
  41c697:	48 39 d8 	cmpq	%rbx, %rax
  41c69a:	0f 83 89 fe ff ff 	jae	-375 <runtime.addspecial+0x39>
  41c6a0:	48 8b 1d 49 0c 09 00 	movq	592969(%rip), %rbx
  41c6a7:	48 8b 35 3a 0c 09 00 	movq	592954(%rip), %rsi
  41c6ae:	48 89 c7 	movq	%rax, %rdi
  41c6b1:	48 29 d0 	subq	%rdx, %rax
  41c6b4:	48 c1 e8 0d 	shrq	$13, %rax
  41c6b8:	48 39 d8 	cmpq	%rbx, %rax
  41c6bb:	73 4e 	jae	78 <runtime.addspecial+0x21b>
  41c6bd:	48 8b 04 c6 	movq	(%rsi,%rax,8), %rax
  41c6c1:	48 85 c0 	testq	%rax, %rax
  41c6c4:	74 09 	je	9 <runtime.addspecial+0x1df>
  41c6c6:	48 8b 50 18 	movq	24(%rax), %rdx
  41c6ca:	48 39 d7 	cmpq	%rdx, %rdi
  41c6cd:	73 07 	jae	7 <runtime.addspecial+0x1e6>
  41c6cf:	31 c0 	xorl	%eax, %eax
  41c6d1:	e9 55 fe ff ff 	jmp	-427 <runtime.addspecial+0x3b>
  41c6d6:	48 8b 90 80 00 00 00 	movq	128(%rax), %rdx
  41c6dd:	48 39 d7 	cmpq	%rdx, %rdi
  41c6e0:	73 ed 	jae	-19 <runtime.addspecial+0x1df>
  41c6e2:	0f b6 50 64 	movzbl	100(%rax), %edx
  41c6e6:	80 fa 01 	cmpb	$1, %dl
  41c6e9:	75 e4 	jne	-28 <runtime.addspecial+0x1df>
  41c6eb:	e9 3b fe ff ff 	jmp	-453 <runtime.addspecial+0x3b>
  41c6f0:	48 8d 05 49 fb 04 00 	leaq	326473(%rip), %rax
  41c6f7:	48 89 04 24 	movq	%rax, (%rsp)
  41c6fb:	48 c7 44 24 08 1d 00 00 00 	movq	$29, 8(%rsp)
  41c704:	e8 c7 4a 00 00 	callq	19143 <runtime.throw>
  41c709:	0f 0b 	ud2
  41c70b:	e8 30 33 00 00 	callq	13104 <runtime.panicindex>
  41c710:	0f 0b 	ud2
  41c712:	e8 59 7e 02 00 	callq	163417 <runtime.morestack_noctxt>
  41c717:	e9 d4 fd ff ff 	jmp	-556 <runtime.addspecial>
  41c71c:	cc 	int3
  41c71d:	cc 	int3
  41c71e:	cc 	int3
  41c71f:	cc 	int3

runtime.setprofilebucket:
  41c720:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41c729:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41c72d:	0f 86 9b 00 00 00 	jbe	155 <runtime.setprofilebucket+0xae>
  41c733:	48 83 ec 28 	subq	$40, %rsp
  41c737:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  41c73c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  41c741:	48 8d 05 90 31 09 00 	leaq	602512(%rip), %rax
  41c748:	48 89 04 24 	movq	%rax, (%rsp)
  41c74c:	e8 cf cd fe ff 	callq	-78385 <runtime.lock>
  41c751:	48 8d 05 38 31 09 00 	leaq	602424(%rip), %rax
  41c758:	48 89 04 24 	movq	%rax, (%rsp)
  41c75c:	e8 df 32 ff ff 	callq	-52513 <runtime.(*fixalloc).alloc>
  41c761:	48 8b 44 24 08 	movq	8(%rsp), %rax
  41c766:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  41c76b:	48 8d 0d 66 31 09 00 	leaq	602470(%rip), %rcx
  41c772:	48 89 0c 24 	movq	%rcx, (%rsp)
  41c776:	e8 45 cf fe ff 	callq	-78011 <runtime.unlock>
  41c77b:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41c780:	c6 40 0a 02 	movb	$2, 10(%rax)
  41c784:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  41c789:	48 89 48 10 	movq	%rcx, 16(%rax)
  41c78d:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41c792:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41c797:	48 89 04 24 	movq	%rax, (%rsp)
  41c79b:	e8 50 fd ff ff 	callq	-688 <runtime.addspecial>
  41c7a0:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  41c7a5:	84 c0 	testb	%al, %al
  41c7a7:	74 0a 	je	10 <runtime.setprofilebucket+0x93>
  41c7a9:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  41c7ae:	48 83 c4 28 	addq	$40, %rsp
  41c7b2:	c3 	retq
  41c7b3:	48 8d 05 6a 08 05 00 	leaq	329834(%rip), %rax
  41c7ba:	48 89 04 24 	movq	%rax, (%rsp)
  41c7be:	48 c7 44 24 08 25 00 00 00 	movq	$37, 8(%rsp)
  41c7c7:	e8 04 4a 00 00 	callq	18948 <runtime.throw>
  41c7cc:	0f 0b 	ud2
  41c7ce:	e8 9d 7d 02 00 	callq	163229 <runtime.morestack_noctxt>
  41c7d3:	e9 48 ff ff ff 	jmp	-184 <runtime.setprofilebucket>
  41c7d8:	cc 	int3
  41c7d9:	cc 	int3
  41c7da:	cc 	int3
  41c7db:	cc 	int3
  41c7dc:	cc 	int3
  41c7dd:	cc 	int3
  41c7de:	cc 	int3
  41c7df:	cc 	int3

runtime.freespecial:
  41c7e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41c7e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41c7ed:	0f 86 40 01 00 00 	jbe	320 <runtime.freespecial+0x153>
  41c7f3:	48 83 ec 30 	subq	$48, %rsp
  41c7f7:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  41c7fc:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  41c801:	48 8b 44 24 38 	movq	56(%rsp), %rax
  41c806:	0f b6 48 0a 	movzbl	10(%rax), %ecx
  41c80a:	80 f9 01 	cmpb	$1, %cl
  41c80d:	74 7e 	je	126 <runtime.freespecial+0xad>
  41c80f:	80 f9 02 	cmpb	$2, %cl
  41c812:	0f 85 00 01 00 00 	jne	256 <runtime.freespecial+0x138>
  41c818:	48 8b 48 10 	movq	16(%rax), %rcx
  41c81c:	48 89 0c 24 	movq	%rcx, (%rsp)
  41c820:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  41c825:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41c82a:	e8 11 0f 00 00 	callq	3857 <runtime.mProf_Free>
  41c82f:	48 8d 05 a2 30 09 00 	leaq	602274(%rip), %rax
  41c836:	48 89 04 24 	movq	%rax, (%rsp)
  41c83a:	e8 e1 cc fe ff 	callq	-78623 <runtime.lock>
  41c83f:	48 8d 05 4a 30 09 00 	leaq	602186(%rip), %rax
  41c846:	84 00 	testb	%al, (%rax)
  41c848:	48 8b 05 71 30 09 00 	movq	602225(%rip), %rax
  41c84f:	48 2b 05 3a 30 09 00 	subq	602170(%rip), %rax
  41c856:	48 89 05 63 30 09 00 	movq	%rax, 602211(%rip)
  41c85d:	48 8b 05 44 30 09 00 	movq	602180(%rip), %rax
  41c864:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  41c869:	48 89 01 	movq	%rax, (%rcx)
  41c86c:	48 89 0d 35 30 09 00 	movq	%rcx, 602165(%rip)
  41c873:	48 8d 05 5e 30 09 00 	leaq	602206(%rip), %rax
  41c87a:	48 89 04 24 	movq	%rax, (%rsp)
  41c87e:	e8 3d ce fe ff 	callq	-78275 <runtime.unlock>
  41c883:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  41c888:	48 83 c4 30 	addq	$48, %rsp
  41c88c:	c3 	retq
  41c88d:	48 8b 48 10 	movq	16(%rax), %rcx
  41c891:	48 8b 50 18 	movq	24(%rax), %rdx
  41c895:	48 8b 58 20 	movq	32(%rax), %rbx
  41c899:	48 8b 70 28 	movq	40(%rax), %rsi
  41c89d:	48 89 74 24 20 	movq	%rsi, 32(%rsp)
  41c8a2:	48 8b 74 24 40 	movq	64(%rsp), %rsi
  41c8a7:	48 89 34 24 	movq	%rsi, (%rsp)
  41c8ab:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41c8b0:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  41c8b5:	48 89 5c 24 18 	movq	%rbx, 24(%rsp)
  41c8ba:	e8 a1 2e ff ff 	callq	-53599 <runtime.queuefinalizer>
  41c8bf:	48 8d 05 12 30 09 00 	leaq	602130(%rip), %rax
  41c8c6:	48 89 04 24 	movq	%rax, (%rsp)
  41c8ca:	e8 51 cc fe ff 	callq	-78767 <runtime.lock>
  41c8cf:	48 8d 05 72 2f 09 00 	leaq	601970(%rip), %rax
  41c8d6:	84 00 	testb	%al, (%rax)
  41c8d8:	48 8b 05 99 2f 09 00 	movq	602009(%rip), %rax
  41c8df:	48 2b 05 62 2f 09 00 	subq	601954(%rip), %rax
  41c8e6:	48 89 05 8b 2f 09 00 	movq	%rax, 601995(%rip)
  41c8ed:	48 8b 05 6c 2f 09 00 	movq	601964(%rip), %rax
  41c8f4:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  41c8f9:	48 89 01 	movq	%rax, (%rcx)
  41c8fc:	48 89 0d 5d 2f 09 00 	movq	%rcx, 601949(%rip)
  41c903:	48 8d 05 ce 2f 09 00 	leaq	602062(%rip), %rax
  41c90a:	48 89 04 24 	movq	%rax, (%rsp)
  41c90e:	e8 ad cd fe ff 	callq	-78419 <runtime.unlock>
  41c913:	e9 6b ff ff ff 	jmp	-149 <runtime.freespecial+0xa3>
  41c918:	48 8d 05 83 e1 04 00 	leaq	319875(%rip), %rax
  41c91f:	48 89 04 24 	movq	%rax, (%rsp)
  41c923:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  41c92c:	e8 9f 48 00 00 	callq	18591 <runtime.throw>
  41c931:	0f 0b 	ud2
  41c933:	e8 38 7c 02 00 	callq	162872 <runtime.morestack_noctxt>
  41c938:	e9 a3 fe ff ff 	jmp	-349 <runtime.freespecial>
  41c93d:	cc 	int3
  41c93e:	cc 	int3
  41c93f:	cc 	int3

runtime.newMarkBits:
  41c940:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41c949:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41c94d:	0f 86 d7 02 00 00 	jbe	727 <runtime.newMarkBits+0x2ea>
  41c953:	48 83 ec 40 	subq	$64, %rsp
  41c957:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  41c95c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  41c961:	48 8b 05 a8 ae 08 00 	movq	569000(%rip), %rax
  41c968:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  41c96d:	48 83 c1 3f 	addq	$63, %rcx
  41c971:	48 c1 e9 06 	shrq	$6, %rcx
  41c975:	48 89 ca 	movq	%rcx, %rdx
  41c978:	48 c1 e1 03 	shlq	$3, %rcx
  41c97c:	48 85 c0 	testq	%rax, %rax
  41c97f:	74 14 	je	20 <runtime.newMarkBits+0x55>
  41c981:	48 8b 18 	movq	(%rax), %rbx
  41c984:	48 8d 1c d3 	leaq	(%rbx,%rdx,8), %rbx
  41c988:	48 81 fb f0 ff 00 00 	cmpq	$65520, %rbx
  41c98f:	0f 86 26 02 00 00 	jbe	550 <runtime.newMarkBits+0x27b>
  41c995:	31 c0 	xorl	%eax, %eax
  41c997:	48 85 c0 	testq	%rax, %rax
  41c99a:	0f 85 0c 02 00 00 	jne	524 <runtime.newMarkBits+0x26c>
  41c9a0:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  41c9a5:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  41c9aa:	48 8d 05 4f ae 08 00 	leaq	568911(%rip), %rax
  41c9b1:	48 89 04 24 	movq	%rax, (%rsp)
  41c9b5:	e8 66 cb fe ff 	callq	-79002 <runtime.lock>
  41c9ba:	48 8b 05 4f ae 08 00 	movq	568911(%rip), %rax
  41c9c1:	48 85 c0 	testq	%rax, %rax
  41c9c4:	0f 84 d8 01 00 00 	je	472 <runtime.newMarkBits+0x262>
  41c9ca:	48 8b 08 	movq	(%rax), %rcx
  41c9cd:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  41c9d2:	48 8d 0c d1 	leaq	(%rcx,%rdx,8), %rcx
  41c9d6:	48 81 f9 f0 ff 00 00 	cmpq	$65520, %rcx
  41c9dd:	0f 86 84 01 00 00 	jbe	388 <runtime.newMarkBits+0x227>
  41c9e3:	31 c0 	xorl	%eax, %eax
  41c9e5:	48 85 c0 	testq	%rax, %rax
  41c9e8:	0f 85 50 01 00 00 	jne	336 <runtime.newMarkBits+0x1fe>
  41c9ee:	e8 5d 03 00 00 	callq	861 <runtime.newArenaMayUnlock>
  41c9f3:	48 8b 04 24 	movq	(%rsp), %rax
  41c9f7:	48 8b 0d 12 ae 08 00 	movq	568850(%rip), %rcx
  41c9fe:	48 85 c9 	testq	%rcx, %rcx
  41ca01:	0f 84 2d 01 00 00 	je	301 <runtime.newMarkBits+0x1f4>
  41ca07:	48 8b 11 	movq	(%rcx), %rdx
  41ca0a:	48 8b 5c 24 10 	movq	16(%rsp), %rbx
  41ca0f:	48 8d 14 da 	leaq	(%rdx,%rbx,8), %rdx
  41ca13:	48 81 fa f0 ff 00 00 	cmpq	$65520, %rdx
  41ca1a:	0f 86 d9 00 00 00 	jbe	217 <runtime.newMarkBits+0x1b9>
  41ca20:	31 c9 	xorl	%ecx, %ecx
  41ca22:	48 85 c9 	testq	%rcx, %rcx
  41ca25:	0f 85 93 00 00 00 	jne	147 <runtime.newMarkBits+0x17e>
  41ca2b:	48 85 c0 	testq	%rax, %rax
  41ca2e:	74 10 	je	16 <runtime.newMarkBits+0x100>
  41ca30:	48 8b 08 	movq	(%rax), %rcx
  41ca33:	48 8d 0c d9 	leaq	(%rcx,%rbx,8), %rcx
  41ca37:	48 81 f9 f0 ff 00 00 	cmpq	$65520, %rcx
  41ca3e:	76 49 	jbe	73 <runtime.newMarkBits+0x149>
  41ca40:	31 c9 	xorl	%ecx, %ecx
  41ca42:	48 85 c9 	testq	%rcx, %rcx
  41ca45:	0f 84 a8 01 00 00 	je	424 <runtime.newMarkBits+0x2b3>
  41ca4b:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  41ca50:	48 8b 0d b9 ad 08 00 	movq	568761(%rip), %rcx
  41ca57:	48 89 48 08 	movq	%rcx, 8(%rax)
  41ca5b:	48 8d 0d ae ad 08 00 	leaq	568750(%rip), %rcx
  41ca62:	48 87 01 	xchgq	%rax, (%rcx)
  41ca65:	48 8d 05 94 ad 08 00 	leaq	568724(%rip), %rax
  41ca6c:	48 89 04 24 	movq	%rax, (%rsp)
  41ca70:	e8 4b cc fe ff 	callq	-78773 <runtime.unlock>
  41ca75:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41ca7a:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  41ca7f:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  41ca84:	48 83 c4 40 	addq	$64, %rsp
  41ca88:	c3 	retq
  41ca89:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  41ca8e:	48 89 ca 	movq	%rcx, %rdx
  41ca91:	f0 	lock
  41ca92:	48 0f c1 08 	xaddq	%rcx, (%rax)
  41ca96:	48 8d 0c d9 	leaq	(%rcx,%rbx,8), %rcx
  41ca9a:	48 81 f9 f0 ff 00 00 	cmpq	$65520, %rcx
  41caa1:	76 04 	jbe	4 <runtime.newMarkBits+0x167>
  41caa3:	31 c9 	xorl	%ecx, %ecx
  41caa5:	eb 9b 	jmp	-101 <runtime.newMarkBits+0x102>
  41caa7:	48 29 d1 	subq	%rdx, %rcx
  41caaa:	48 81 f9 f0 ff 00 00 	cmpq	$65520, %rcx
  41cab1:	0f 83 57 01 00 00 	jae	343 <runtime.newMarkBits+0x2ce>
  41cab7:	48 8d 4c 08 10 	leaq	16(%rax,%rcx), %rcx
  41cabc:	eb 84 	jmp	-124 <runtime.newMarkBits+0x102>
  41cabe:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  41cac3:	48 8b 0d 3e ad 08 00 	movq	568638(%rip), %rcx
  41caca:	48 89 48 08 	movq	%rcx, 8(%rax)
  41cace:	48 89 05 33 ad 08 00 	movq	%rax, 568627(%rip)
  41cad5:	48 8d 05 24 ad 08 00 	leaq	568612(%rip), %rax
  41cadc:	48 89 04 24 	movq	%rax, (%rsp)
  41cae0:	e8 db cb fe ff 	callq	-78885 <runtime.unlock>
  41cae5:	48 8b 44 24 28 	movq	40(%rsp), %rax
  41caea:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  41caef:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  41caf4:	48 83 c4 40 	addq	$64, %rsp
  41caf8:	c3 	retq
  41caf9:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  41cafe:	48 89 d6 	movq	%rdx, %rsi
  41cb01:	f0 	lock
  41cb02:	48 0f c1 11 	xaddq	%rdx, (%rcx)
  41cb06:	48 8d 14 da 	leaq	(%rdx,%rbx,8), %rdx
  41cb0a:	48 81 fa f0 ff 00 00 	cmpq	$65520, %rdx
  41cb11:	76 07 	jbe	7 <runtime.newMarkBits+0x1da>
  41cb13:	31 c9 	xorl	%ecx, %ecx
  41cb15:	e9 08 ff ff ff 	jmp	-248 <runtime.newMarkBits+0xe2>
  41cb1a:	48 29 f2 	subq	%rsi, %rdx
  41cb1d:	48 81 fa f0 ff 00 00 	cmpq	$65520, %rdx
  41cb24:	0f 83 eb 00 00 00 	jae	235 <runtime.newMarkBits+0x2d5>
  41cb2a:	48 8d 4c 0a 10 	leaq	16(%rdx,%rcx), %rcx
  41cb2f:	e9 ee fe ff ff 	jmp	-274 <runtime.newMarkBits+0xe2>
  41cb34:	48 8b 5c 24 10 	movq	16(%rsp), %rbx
  41cb39:	e9 e2 fe ff ff 	jmp	-286 <runtime.newMarkBits+0xe0>
  41cb3e:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  41cb43:	48 8d 05 b6 ac 08 00 	leaq	568502(%rip), %rax
  41cb4a:	48 89 04 24 	movq	%rax, (%rsp)
  41cb4e:	e8 6d cb fe ff 	callq	-78995 <runtime.unlock>
  41cb53:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41cb58:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  41cb5d:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  41cb62:	48 83 c4 40 	addq	$64, %rsp
  41cb66:	c3 	retq
  41cb67:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  41cb6c:	48 89 cb 	movq	%rcx, %rbx
  41cb6f:	f0 	lock
  41cb70:	48 0f c1 08 	xaddq	%rcx, (%rax)
  41cb74:	48 8d 0c d1 	leaq	(%rcx,%rdx,8), %rcx
  41cb78:	48 81 f9 f0 ff 00 00 	cmpq	$65520, %rcx
  41cb7f:	76 07 	jbe	7 <runtime.newMarkBits+0x248>
  41cb81:	31 c0 	xorl	%eax, %eax
  41cb83:	e9 5d fe ff ff 	jmp	-419 <runtime.newMarkBits+0xa5>
  41cb88:	48 29 d9 	subq	%rbx, %rcx
  41cb8b:	48 81 f9 f0 ff 00 00 	cmpq	$65520, %rcx
  41cb92:	0f 83 84 00 00 00 	jae	132 <runtime.newMarkBits+0x2dc>
  41cb98:	48 8d 44 01 10 	leaq	16(%rcx,%rax), %rax
  41cb9d:	e9 43 fe ff ff 	jmp	-445 <runtime.newMarkBits+0xa5>
  41cba2:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  41cba7:	e9 37 fe ff ff 	jmp	-457 <runtime.newMarkBits+0xa3>
  41cbac:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  41cbb1:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  41cbb6:	48 83 c4 40 	addq	$64, %rsp
  41cbba:	c3 	retq
  41cbbb:	48 89 cb 	movq	%rcx, %rbx
  41cbbe:	f0 	lock
  41cbbf:	48 0f c1 08 	xaddq	%rcx, (%rax)
  41cbc3:	48 8d 0c d1 	leaq	(%rcx,%rdx,8), %rcx
  41cbc7:	48 81 f9 f0 ff 00 00 	cmpq	$65520, %rcx
  41cbce:	76 0a 	jbe	10 <runtime.newMarkBits+0x29a>
  41cbd0:	48 89 d9 	movq	%rbx, %rcx
  41cbd3:	31 c0 	xorl	%eax, %eax
  41cbd5:	e9 bd fd ff ff 	jmp	-579 <runtime.newMarkBits+0x57>
  41cbda:	48 29 d9 	subq	%rbx, %rcx
  41cbdd:	48 81 f9 f0 ff 00 00 	cmpq	$65520, %rcx
  41cbe4:	73 3d 	jae	61 <runtime.newMarkBits+0x2e3>
  41cbe6:	48 8d 44 08 10 	leaq	16(%rax,%rcx), %rax
  41cbeb:	48 89 d9 	movq	%rbx, %rcx
  41cbee:	e9 a4 fd ff ff 	jmp	-604 <runtime.newMarkBits+0x57>
  41cbf3:	48 8d 05 74 e0 04 00 	leaq	319604(%rip), %rax
  41cbfa:	48 89 04 24 	movq	%rax, (%rsp)
  41cbfe:	48 c7 44 24 08 11 00 00 00 	movq	$17, 8(%rsp)
  41cc07:	e8 c4 45 00 00 	callq	17860 <runtime.throw>
  41cc0c:	0f 0b 	ud2
  41cc0e:	e8 2d 2e 00 00 	callq	11821 <runtime.panicindex>
  41cc13:	0f 0b 	ud2
  41cc15:	e8 26 2e 00 00 	callq	11814 <runtime.panicindex>
  41cc1a:	0f 0b 	ud2
  41cc1c:	e8 1f 2e 00 00 	callq	11807 <runtime.panicindex>
  41cc21:	0f 0b 	ud2
  41cc23:	e8 18 2e 00 00 	callq	11800 <runtime.panicindex>
  41cc28:	0f 0b 	ud2
  41cc2a:	e8 41 79 02 00 	callq	162113 <runtime.morestack_noctxt>
  41cc2f:	e9 0c fd ff ff 	jmp	-756 <runtime.newMarkBits>
  41cc34:	cc 	int3
  41cc35:	cc 	int3
  41cc36:	cc 	int3
  41cc37:	cc 	int3
  41cc38:	cc 	int3
  41cc39:	cc 	int3
  41cc3a:	cc 	int3
  41cc3b:	cc 	int3
  41cc3c:	cc 	int3
  41cc3d:	cc 	int3
  41cc3e:	cc 	int3
  41cc3f:	cc 	int3

runtime.newAllocBits:
  41cc40:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41cc49:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41cc4d:	76 30 	jbe	48 <runtime.newAllocBits+0x3f>
  41cc4f:	48 83 ec 18 	subq	$24, %rsp
  41cc53:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  41cc58:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  41cc5d:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41cc62:	48 89 04 24 	movq	%rax, (%rsp)
  41cc66:	e8 d5 fc ff ff 	callq	-811 <runtime.newMarkBits>
  41cc6b:	48 8b 44 24 08 	movq	8(%rsp), %rax
  41cc70:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  41cc75:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  41cc7a:	48 83 c4 18 	addq	$24, %rsp
  41cc7e:	c3 	retq
  41cc7f:	e8 ec 78 02 00 	callq	162028 <runtime.morestack_noctxt>
  41cc84:	eb ba 	jmp	-70 <runtime.newAllocBits>
  41cc86:	cc 	int3
  41cc87:	cc 	int3
  41cc88:	cc 	int3
  41cc89:	cc 	int3
  41cc8a:	cc 	int3
  41cc8b:	cc 	int3
  41cc8c:	cc 	int3
  41cc8d:	cc 	int3
  41cc8e:	cc 	int3
  41cc8f:	cc 	int3

runtime.nextMarkBitArenaEpoch:
  41cc90:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41cc99:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41cc9d:	0f 86 a1 00 00 00 	jbe	161 <runtime.nextMarkBitArenaEpoch+0xb4>
  41cca3:	48 83 ec 10 	subq	$16, %rsp
  41cca7:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  41ccac:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  41ccb1:	48 8d 05 48 ab 08 00 	leaq	568136(%rip), %rax
  41ccb8:	48 89 04 24 	movq	%rax, (%rsp)
  41ccbc:	e8 5f c8 fe ff 	callq	-79777 <runtime.lock>
  41ccc1:	48 8b 05 58 ab 08 00 	movq	568152(%rip), %rax
  41ccc8:	48 85 c0 	testq	%rax, %rax
  41cccb:	74 2c 	je	44 <runtime.nextMarkBitArenaEpoch+0x69>
  41cccd:	48 8b 0d 34 ab 08 00 	movq	568116(%rip), %rcx
  41ccd4:	48 85 c9 	testq	%rcx, %rcx
  41ccd7:	75 05 	jne	5 <runtime.nextMarkBitArenaEpoch+0x4e>
  41ccd9:	eb 60 	jmp	96 <runtime.nextMarkBitArenaEpoch+0xab>
  41ccdb:	48 89 d0 	movq	%rdx, %rax
  41ccde:	48 8b 50 08 	movq	8(%rax), %rdx
  41cce2:	48 85 d2 	testq	%rdx, %rdx
  41cce5:	75 f4 	jne	-12 <runtime.nextMarkBitArenaEpoch+0x4b>
  41cce7:	48 89 48 08 	movq	%rcx, 8(%rax)
  41cceb:	48 8b 05 2e ab 08 00 	movq	568110(%rip), %rax
  41ccf2:	48 89 05 0f ab 08 00 	movq	%rax, 568079(%rip)
  41ccf9:	48 8b 05 18 ab 08 00 	movq	568088(%rip), %rax
  41cd00:	48 89 05 19 ab 08 00 	movq	%rax, 568089(%rip)
  41cd07:	48 8b 05 02 ab 08 00 	movq	568066(%rip), %rax
  41cd0e:	48 89 05 03 ab 08 00 	movq	%rax, 568067(%rip)
  41cd15:	31 c0 	xorl	%eax, %eax
  41cd17:	48 8d 0d f2 aa 08 00 	leaq	568050(%rip), %rcx
  41cd1e:	48 87 01 	xchgq	%rax, (%rcx)
  41cd21:	48 8d 05 d8 aa 08 00 	leaq	568024(%rip), %rax
  41cd28:	48 89 04 24 	movq	%rax, (%rsp)
  41cd2c:	e8 8f c9 fe ff 	callq	-79473 <runtime.unlock>
  41cd31:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  41cd36:	48 83 c4 10 	addq	$16, %rsp
  41cd3a:	c3 	retq
  41cd3b:	48 89 05 c6 aa 08 00 	movq	%rax, 568006(%rip)
  41cd42:	eb b5 	jmp	-75 <runtime.nextMarkBitArenaEpoch+0x69>
  41cd44:	e8 27 78 02 00 	callq	161831 <runtime.morestack_noctxt>
  41cd49:	e9 42 ff ff ff 	jmp	-190 <runtime.nextMarkBitArenaEpoch>
  41cd4e:	cc 	int3
  41cd4f:	cc 	int3

runtime.newArenaMayUnlock:
  41cd50:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41cd59:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41cd5d:	0f 86 c9 00 00 00 	jbe	201 <runtime.newArenaMayUnlock+0xdc>
  41cd63:	48 83 ec 30 	subq	$48, %rsp
  41cd67:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  41cd6c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  41cd71:	48 8b 05 90 aa 08 00 	movq	567952(%rip), %rax
  41cd78:	48 85 c0 	testq	%rax, %rax
  41cd7b:	74 45 	je	69 <runtime.newArenaMayUnlock+0x72>
  41cd7d:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  41cd82:	48 8b 48 08 	movq	8(%rax), %rcx
  41cd86:	48 89 0d 7b aa 08 00 	movq	%rcx, 567931(%rip)
  41cd8d:	48 89 04 24 	movq	%rax, (%rsp)
  41cd91:	48 c7 44 24 08 00 00 01 00 	movq	$65536, 8(%rsp)
  41cd9a:	e8 d1 a0 02 00 	callq	172241 <runtime.memclrNoHeapPointers>
  41cd9f:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41cda4:	48 c7 40 08 00 00 00 00 	movq	$0, 8(%rax)
  41cdac:	48 c7 00 00 00 00 00 	movq	$0, (%rax)
  41cdb3:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  41cdb8:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  41cdbd:	48 83 c4 30 	addq	$48, %rsp
  41cdc1:	c3 	retq
  41cdc2:	48 8d 05 37 aa 08 00 	leaq	567863(%rip), %rax
  41cdc9:	48 89 04 24 	movq	%rax, (%rsp)
  41cdcd:	e8 ee c8 fe ff 	callq	-79634 <runtime.unlock>
  41cdd2:	48 c7 04 24 00 00 01 00 	movq	$65536, (%rsp)
  41cdda:	48 8d 05 b7 79 0a 00 	leaq	686519(%rip), %rax
  41cde1:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41cde6:	e8 35 22 ff ff 	callq	-56779 <runtime.sysAlloc>
  41cdeb:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41cdf0:	48 85 c0 	testq	%rax, %rax
  41cdf3:	74 1c 	je	28 <runtime.newArenaMayUnlock+0xc1>
  41cdf5:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  41cdfa:	48 8d 05 ff a9 08 00 	leaq	567807(%rip), %rax
  41ce01:	48 89 04 24 	movq	%rax, (%rsp)
  41ce05:	e8 16 c7 fe ff 	callq	-80106 <runtime.lock>
  41ce0a:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41ce0f:	eb 93 	jmp	-109 <runtime.newArenaMayUnlock+0x54>
  41ce11:	48 8d 05 4d f9 04 00 	leaq	325965(%rip), %rax
  41ce18:	48 89 04 24 	movq	%rax, (%rsp)
  41ce1c:	48 c7 44 24 08 1f 00 00 00 	movq	$31, 8(%rsp)
  41ce25:	e8 a6 43 00 00 	callq	17318 <runtime.throw>
  41ce2a:	0f 0b 	ud2
  41ce2c:	e8 3f 77 02 00 	callq	161599 <runtime.morestack_noctxt>
  41ce31:	e9 1a ff ff ff 	jmp	-230 <runtime.newArenaMayUnlock>
  41ce36:	cc 	int3
  41ce37:	cc 	int3
  41ce38:	cc 	int3
  41ce39:	cc 	int3
  41ce3a:	cc 	int3
  41ce3b:	cc 	int3
  41ce3c:	cc 	int3
  41ce3d:	cc 	int3
  41ce3e:	cc 	int3
  41ce3f:	cc 	int3

runtime.newBucket:
  41ce40:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41ce49:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41ce4d:	0f 86 b2 00 00 00 	jbe	178 <runtime.newBucket+0xc5>
  41ce53:	48 83 ec 30 	subq	$48, %rsp
  41ce57:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  41ce5c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  41ce61:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41ce66:	48 c1 e0 03 	shlq	$3, %rax
  41ce6a:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  41ce6f:	48 83 fa 01 	cmpq	$1, %rdx
  41ce73:	75 65 	jne	101 <runtime.newBucket+0x9a>
  41ce75:	48 05 b0 00 00 00 	addq	$176, %rax
  41ce7b:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  41ce80:	48 89 04 24 	movq	%rax, (%rsp)
  41ce84:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  41ce8d:	48 8d 0d fc 78 0a 00 	leaq	686332(%rip), %rcx
  41ce94:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  41ce99:	e8 02 e6 fe ff 	callq	-72190 <runtime.persistentalloc>
  41ce9e:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41cea3:	48 8b 0d 86 6a 0a 00 	movq	682630(%rip), %rcx
  41ceaa:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  41ceaf:	48 01 d1 	addq	%rdx, %rcx
  41ceb2:	48 89 0d 77 6a 0a 00 	movq	%rcx, 682615(%rip)
  41ceb9:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  41cebe:	48 89 48 10 	movq	%rcx, 16(%rax)
  41cec2:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  41cec7:	48 89 48 28 	movq	%rcx, 40(%rax)
  41cecb:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  41ced0:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  41ced5:	48 83 c4 30 	addq	$48, %rsp
  41ced9:	c3 	retq
  41ceda:	48 8d 5a fe 	leaq	-2(%rdx), %rbx
  41cede:	48 83 fb 01 	cmpq	$1, %rbx
  41cee2:	77 06 	ja	6 <runtime.newBucket+0xaa>
  41cee4:	48 83 c0 40 	addq	$64, %rax
  41cee8:	eb 91 	jmp	-111 <runtime.newBucket+0x3b>
  41ceea:	48 8d 05 90 ee 04 00 	leaq	323216(%rip), %rax
  41cef1:	48 89 04 24 	movq	%rax, (%rsp)
  41cef5:	48 c7 44 24 08 1b 00 00 00 	movq	$27, 8(%rsp)
  41cefe:	e8 cd 42 00 00 	callq	17101 <runtime.throw>
  41cf03:	0f 0b 	ud2
  41cf05:	e8 66 76 02 00 	callq	161382 <runtime.morestack_noctxt>
  41cf0a:	e9 31 ff ff ff 	jmp	-207 <runtime.newBucket>
  41cf0f:	cc 	int3

runtime.(*bucket).mp:
  41cf10:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41cf19:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41cf1d:	76 50 	jbe	80 <runtime.(*bucket).mp+0x5f>
  41cf1f:	48 83 ec 18 	subq	$24, %rsp
  41cf23:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  41cf28:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  41cf2d:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41cf32:	48 8b 48 10 	movq	16(%rax), %rcx
  41cf36:	48 83 f9 01 	cmpq	$1, %rcx
  41cf3a:	75 18 	jne	24 <runtime.(*bucket).mp+0x44>
  41cf3c:	48 8b 48 28 	movq	40(%rax), %rcx
  41cf40:	48 8d 44 c8 30 	leaq	48(%rax,%rcx,8), %rax
  41cf45:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  41cf4a:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  41cf4f:	48 83 c4 18 	addq	$24, %rsp
  41cf53:	c3 	retq
  41cf54:	48 8d 05 4a e1 04 00 	leaq	319818(%rip), %rax
  41cf5b:	48 89 04 24 	movq	%rax, (%rsp)
  41cf5f:	48 c7 44 24 08 14 00 00 00 	movq	$20, 8(%rsp)
  41cf68:	e8 63 42 00 00 	callq	16995 <runtime.throw>
  41cf6d:	0f 0b 	ud2
  41cf6f:	e8 fc 75 02 00 	callq	161276 <runtime.morestack_noctxt>
  41cf74:	eb 9a 	jmp	-102 <runtime.(*bucket).mp>
  41cf76:	cc 	int3
  41cf77:	cc 	int3
  41cf78:	cc 	int3
  41cf79:	cc 	int3
  41cf7a:	cc 	int3
  41cf7b:	cc 	int3
  41cf7c:	cc 	int3
  41cf7d:	cc 	int3
  41cf7e:	cc 	int3
  41cf7f:	cc 	int3

runtime.(*bucket).bp:
  41cf80:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41cf89:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41cf8d:	76 56 	jbe	86 <runtime.(*bucket).bp+0x65>
  41cf8f:	48 83 ec 18 	subq	$24, %rsp
  41cf93:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  41cf98:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  41cf9d:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41cfa2:	48 8b 48 10 	movq	16(%rax), %rcx
  41cfa6:	48 83 f9 02 	cmpq	$2, %rcx
  41cfaa:	74 06 	je	6 <runtime.(*bucket).bp+0x32>
  41cfac:	48 83 f9 03 	cmpq	$3, %rcx
  41cfb0:	75 18 	jne	24 <runtime.(*bucket).bp+0x4a>
  41cfb2:	48 8b 48 28 	movq	40(%rax), %rcx
  41cfb6:	48 8d 44 c8 30 	leaq	48(%rax,%rcx,8), %rax
  41cfbb:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  41cfc0:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  41cfc5:	48 83 c4 18 	addq	$24, %rsp
  41cfc9:	c3 	retq
  41cfca:	48 8d 05 c0 e0 04 00 	leaq	319680(%rip), %rax
  41cfd1:	48 89 04 24 	movq	%rax, (%rsp)
  41cfd5:	48 c7 44 24 08 14 00 00 00 	movq	$20, 8(%rsp)
  41cfde:	e8 ed 41 00 00 	callq	16877 <runtime.throw>
  41cfe3:	0f 0b 	ud2
  41cfe5:	e8 86 75 02 00 	callq	161158 <runtime.morestack_noctxt>
  41cfea:	eb 94 	jmp	-108 <runtime.(*bucket).bp>
  41cfec:	cc 	int3
  41cfed:	cc 	int3
  41cfee:	cc 	int3
  41cfef:	cc 	int3

runtime.stkbucket:
  41cff0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41cff9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41cffd:	0f 86 1b 03 00 00 	jbe	795 <runtime.stkbucket+0x32e>
  41d003:	48 83 ec 58 	subq	$88, %rsp
  41d007:	48 89 6c 24 50 	movq	%rbp, 80(%rsp)
  41d00c:	48 8d 6c 24 50 	leaq	80(%rsp), %rbp
  41d011:	48 8b 0d 18 a6 08 00 	movq	566808(%rip), %rcx
  41d018:	48 85 c9 	testq	%rcx, %rcx
  41d01b:	0f 84 7b 02 00 00 	je	635 <runtime.stkbucket+0x2ac>
  41d021:	48 8b 4c 24 70 	movq	112(%rsp), %rcx
  41d026:	48 8b 54 24 78 	movq	120(%rsp), %rdx
  41d02b:	31 c0 	xorl	%eax, %eax
  41d02d:	31 db 	xorl	%ebx, %ebx
  41d02f:	eb 1f 	jmp	31 <runtime.stkbucket+0x60>
  41d031:	48 8b 34 c1 	movq	(%rcx,%rax,8), %rsi
  41d035:	48 ff c0 	incq	%rax
  41d038:	48 01 de 	addq	%rbx, %rsi
  41d03b:	48 89 f7 	movq	%rsi, %rdi
  41d03e:	48 c1 e6 0a 	shlq	$10, %rsi
  41d042:	48 8d 1c 37 	leaq	(%rdi,%rsi), %rbx
  41d046:	48 89 de 	movq	%rbx, %rsi
  41d049:	48 c1 eb 06 	shrq	$6, %rbx
  41d04d:	48 31 f3 	xorq	%rsi, %rbx
  41d050:	48 39 d0 	cmpq	%rdx, %rax
  41d053:	7c dc 	jl	-36 <runtime.stkbucket+0x41>
  41d055:	48 8b 35 d4 a5 08 00 	movq	566740(%rip), %rsi
  41d05c:	84 06 	testb	%al, (%rsi)
  41d05e:	48 8b 7c 24 68 	movq	104(%rsp), %rdi
  41d063:	48 01 fb 	addq	%rdi, %rbx
  41d066:	49 89 d8 	movq	%rbx, %r8
  41d069:	48 c1 e3 0a 	shlq	$10, %rbx
  41d06d:	4c 01 c3 	addq	%r8, %rbx
  41d070:	49 89 d8 	movq	%rbx, %r8
  41d073:	48 c1 eb 06 	shrq	$6, %rbx
  41d077:	49 31 d8 	xorq	%rbx, %r8
  41d07a:	4b 8d 1c c0 	leaq	(%r8,%r8,8), %rbx
  41d07e:	49 89 d8 	movq	%rbx, %r8
  41d081:	48 c1 eb 0b 	shrq	$11, %rbx
  41d085:	49 31 d8 	xorq	%rbx, %r8
  41d088:	48 b8 92 1a 19 53 bc 1f 6a ba 	movabsq	$-5014160341415159150, %rax
  41d092:	48 89 d3 	movq	%rdx, %rbx
  41d095:	49 f7 e0 	mulq	%r8
  41d098:	48 c1 ea 11 	shrq	$17, %rdx
  41d09c:	48 69 d2 1f bf 02 00 	imulq	$179999, %rdx, %rdx
  41d0a3:	4d 89 c1 	movq	%r8, %r9
  41d0a6:	49 29 d0 	subq	%rdx, %r8
  41d0a9:	49 81 f8 1f bf 02 00 	cmpq	$179999, %r8
  41d0b0:	0f 83 46 02 00 00 	jae	582 <runtime.stkbucket+0x30c>
  41d0b6:	4c 89 4c 24 40 	movq	%r9, 64(%rsp)
  41d0bb:	4c 89 44 24 38 	movq	%r8, 56(%rsp)
  41d0c0:	4a 8b 04 c6 	movq	(%rsi,%r8,8), %rax
  41d0c4:	eb 03 	jmp	3 <runtime.stkbucket+0xd9>
  41d0c6:	48 8b 00 	movq	(%rax), %rax
  41d0c9:	48 85 c0 	testq	%rax, %rax
  41d0cc:	0f 84 ab 00 00 00 	je	171 <runtime.stkbucket+0x18d>
  41d0d2:	48 8b 50 10 	movq	16(%rax), %rdx
  41d0d6:	48 8b 74 24 60 	movq	96(%rsp), %rsi
  41d0db:	48 39 f2 	cmpq	%rsi, %rdx
  41d0de:	75 e6 	jne	-26 <runtime.stkbucket+0xd6>
  41d0e0:	48 8b 50 18 	movq	24(%rax), %rdx
  41d0e4:	49 39 d1 	cmpq	%rdx, %r9
  41d0e7:	75 dd 	jne	-35 <runtime.stkbucket+0xd6>
  41d0e9:	48 8b 50 20 	movq	32(%rax), %rdx
  41d0ed:	48 39 d7 	cmpq	%rdx, %rdi
  41d0f0:	75 d4 	jne	-44 <runtime.stkbucket+0xd6>
  41d0f2:	48 8d 50 30 	leaq	48(%rax), %rdx
  41d0f6:	84 02 	testb	%al, (%rdx)
  41d0f8:	4c 8b 50 28 	movq	40(%rax), %r10
  41d0fc:	49 83 fa 20 	cmpq	$32, %r10
  41d100:	0f 87 ef 01 00 00 	ja	495 <runtime.stkbucket+0x305>
  41d106:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  41d10b:	48 89 14 24 	movq	%rdx, (%rsp)
  41d10f:	4c 89 54 24 08 	movq	%r10, 8(%rsp)
  41d114:	4c 89 54 24 10 	movq	%r10, 16(%rsp)
  41d119:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  41d11e:	48 89 5c 24 20 	movq	%rbx, 32(%rsp)
  41d123:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  41d12b:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  41d130:	e8 fb 01 00 00 	callq	507 <runtime.eqslice>
  41d135:	0f b6 44 24 30 	movzbl	48(%rsp), %eax
  41d13a:	84 c0 	testb	%al, %al
  41d13c:	75 28 	jne	40 <runtime.stkbucket+0x176>
  41d13e:	48 8b 44 24 48 	movq	72(%rsp), %rax
  41d143:	48 8b 4c 24 70 	movq	112(%rsp), %rcx
  41d148:	48 8b 5c 24 78 	movq	120(%rsp), %rbx
  41d14d:	48 8b 74 24 60 	movq	96(%rsp), %rsi
  41d152:	48 8b 7c 24 68 	movq	104(%rsp), %rdi
  41d157:	4c 8b 44 24 38 	movq	56(%rsp), %r8
  41d15c:	4c 8b 4c 24 40 	movq	64(%rsp), %r9
  41d161:	e9 60 ff ff ff 	jmp	-160 <runtime.stkbucket+0xd6>
  41d166:	48 8b 44 24 48 	movq	72(%rsp), %rax
  41d16b:	48 89 84 24 90 00 00 00 	movq	%rax, 144(%rsp)
  41d173:	48 8b 6c 24 50 	movq	80(%rsp), %rbp
  41d178:	48 83 c4 58 	addq	$88, %rsp
  41d17c:	c3 	retq
  41d17d:	0f b6 84 24 88 00 00 00 	movzbl	136(%rsp), %eax
  41d185:	84 c0 	testb	%al, %al
  41d187:	0f 84 f9 00 00 00 	je	249 <runtime.stkbucket+0x296>
  41d18d:	48 8b 44 24 60 	movq	96(%rsp), %rax
  41d192:	48 89 04 24 	movq	%rax, (%rsp)
  41d196:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  41d19b:	e8 a0 fc ff ff 	callq	-864 <runtime.newBucket>
  41d1a0:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41d1a5:	48 8d 48 30 	leaq	48(%rax), %rcx
  41d1a9:	84 01 	testb	%al, (%rcx)
  41d1ab:	48 8b 50 28 	movq	40(%rax), %rdx
  41d1af:	48 83 fa 20 	cmpq	$32, %rdx
  41d1b3:	0f 87 35 01 00 00 	ja	309 <runtime.stkbucket+0x2fe>
  41d1b9:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  41d1be:	48 8b 5c 24 78 	movq	120(%rsp), %rbx
  41d1c3:	48 39 da 	cmpq	%rbx, %rdx
  41d1c6:	0f 8e b2 00 00 00 	jle	178 <runtime.stkbucket+0x28e>
  41d1cc:	48 89 0c 24 	movq	%rcx, (%rsp)
  41d1d0:	48 8b 44 24 70 	movq	112(%rsp), %rax
  41d1d5:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41d1da:	48 c1 e3 03 	shlq	$3, %rbx
  41d1de:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  41d1e3:	e8 18 9f 02 00 	callq	171800 <runtime.memmove>
  41d1e8:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41d1ed:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  41d1f2:	48 89 41 18 	movq	%rax, 24(%rcx)
  41d1f6:	48 8b 44 24 68 	movq	104(%rsp), %rax
  41d1fb:	48 89 41 20 	movq	%rax, 32(%rcx)
  41d1ff:	48 8b 05 2a a4 08 00 	movq	566314(%rip), %rax
  41d206:	84 00 	testb	%al, (%rax)
  41d208:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  41d20d:	48 8b 04 d0 	movq	(%rax,%rdx,8), %rax
  41d211:	48 89 01 	movq	%rax, (%rcx)
  41d214:	48 8b 05 15 a4 08 00 	movq	566293(%rip), %rax
  41d21b:	84 00 	testb	%al, (%rax)
  41d21d:	48 89 0c d0 	movq	%rcx, (%rax,%rdx,8)
  41d221:	48 8b 44 24 60 	movq	96(%rsp), %rax
  41d226:	48 83 f8 01 	cmpq	$1, %rax
  41d22a:	75 24 	jne	36 <runtime.stkbucket+0x260>
  41d22c:	48 8b 05 3d a4 08 00 	movq	566333(%rip), %rax
  41d233:	48 89 41 08 	movq	%rax, 8(%rcx)
  41d237:	48 89 0d 32 a4 08 00 	movq	%rcx, 566322(%rip)
  41d23e:	48 89 8c 24 90 00 00 00 	movq	%rcx, 144(%rsp)
  41d246:	48 8b 6c 24 50 	movq	80(%rsp), %rbp
  41d24b:	48 83 c4 58 	addq	$88, %rsp
  41d24f:	c3 	retq
  41d250:	48 83 f8 03 	cmpq	$3, %rax
  41d254:	75 14 	jne	20 <runtime.stkbucket+0x27a>
  41d256:	48 8b 05 2b a4 08 00 	movq	566315(%rip), %rax
  41d25d:	48 89 41 08 	movq	%rax, 8(%rcx)
  41d261:	48 89 0d 20 a4 08 00 	movq	%rcx, 566304(%rip)
  41d268:	eb d4 	jmp	-44 <runtime.stkbucket+0x24e>
  41d26a:	48 8b 05 b7 a3 08 00 	movq	566199(%rip), %rax
  41d271:	48 89 41 08 	movq	%rax, 8(%rcx)
  41d275:	48 89 0d ac a3 08 00 	movq	%rcx, 566188(%rip)
  41d27c:	eb c0 	jmp	-64 <runtime.stkbucket+0x24e>
  41d27e:	48 89 d3 	movq	%rdx, %rbx
  41d281:	e9 46 ff ff ff 	jmp	-186 <runtime.stkbucket+0x1dc>
  41d286:	48 c7 84 24 90 00 00 00 00 00 00 00 	movq	$0, 144(%rsp)
  41d292:	48 8b 6c 24 50 	movq	80(%rsp), %rbp
  41d297:	48 83 c4 58 	addq	$88, %rsp
  41d29b:	c3 	retq
  41d29c:	48 c7 04 24 f8 f8 15 00 	movq	$1439992, (%rsp)
  41d2a4:	48 8d 05 e5 74 0a 00 	leaq	685285(%rip), %rax
  41d2ab:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41d2b0:	e8 6b 1d ff ff 	callq	-58005 <runtime.sysAlloc>
  41d2b5:	8b 05 55 67 0a 00 	movl	681813(%rip), %eax
  41d2bb:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  41d2c0:	85 c0 	testl	%eax, %eax
  41d2c2:	75 19 	jne	25 <runtime.stkbucket+0x2ed>
  41d2c4:	48 89 0d 65 a3 08 00 	movq	%rcx, 566117(%rip)
  41d2cb:	48 8b 0d 5e a3 08 00 	movq	566110(%rip), %rcx
  41d2d2:	48 85 c9 	testq	%rcx, %rcx
  41d2d5:	0f 85 46 fd ff ff 	jne	-698 <runtime.stkbucket+0x31>
  41d2db:	eb 26 	jmp	38 <runtime.stkbucket+0x313>
  41d2dd:	48 8d 3d 4c a3 08 00 	leaq	566092(%rip), %rdi
  41d2e4:	48 89 c8 	movq	%rcx, %rax
  41d2e7:	e8 b4 95 02 00 	callq	169396 <runtime.gcWriteBarrier>
  41d2ec:	eb dd 	jmp	-35 <runtime.stkbucket+0x2db>
  41d2ee:	e8 bd 27 00 00 	callq	10173 <runtime.panicslice>
  41d2f3:	0f 0b 	ud2
  41d2f5:	e8 b6 27 00 00 	callq	10166 <runtime.panicslice>
  41d2fa:	0f 0b 	ud2
  41d2fc:	e8 3f 27 00 00 	callq	10047 <runtime.panicindex>
  41d301:	0f 0b 	ud2
  41d303:	48 8d 05 5b f4 04 00 	leaq	324699(%rip), %rax
  41d30a:	48 89 04 24 	movq	%rax, (%rsp)
  41d30e:	48 c7 44 24 08 1f 00 00 00 	movq	$31, 8(%rsp)
  41d317:	e8 b4 3e 00 00 	callq	16052 <runtime.throw>
  41d31c:	0f 0b 	ud2
  41d31e:	e8 4d 72 02 00 	callq	160333 <runtime.morestack_noctxt>
  41d323:	e9 c8 fc ff ff 	jmp	-824 <runtime.stkbucket>
  41d328:	cc 	int3
  41d329:	cc 	int3
  41d32a:	cc 	int3
  41d32b:	cc 	int3
  41d32c:	cc 	int3
  41d32d:	cc 	int3
  41d32e:	cc 	int3
  41d32f:	cc 	int3

runtime.eqslice:
  41d330:	48 83 ec 08 	subq	$8, %rsp
  41d334:	48 89 2c 24 	movq	%rbp, (%rsp)
  41d338:	48 8d 2c 24 	leaq	(%rsp), %rbp
  41d33c:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41d341:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  41d346:	48 39 c8 	cmpq	%rcx, %rax
  41d349:	75 44 	jne	68 <runtime.eqslice+0x5f>
  41d34b:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  41d350:	48 8b 5c 24 10 	movq	16(%rsp), %rbx
  41d355:	31 f6 	xorl	%esi, %esi
  41d357:	eb 03 	jmp	3 <runtime.eqslice+0x2c>
  41d359:	48 ff c6 	incq	%rsi
  41d35c:	48 39 c6 	cmpq	%rax, %rsi
  41d35f:	7d 20 	jge	32 <runtime.eqslice+0x51>
  41d361:	48 8b 3c f3 	movq	(%rbx,%rsi,8), %rdi
  41d365:	48 39 ce 	cmpq	%rcx, %rsi
  41d368:	73 33 	jae	51 <runtime.eqslice+0x6d>
  41d36a:	4c 8b 04 f2 	movq	(%rdx,%rsi,8), %r8
  41d36e:	4c 39 c7 	cmpq	%r8, %rdi
  41d371:	74 e6 	je	-26 <runtime.eqslice+0x29>
  41d373:	c6 44 24 40 00 	movb	$0, 64(%rsp)
  41d378:	48 8b 2c 24 	movq	(%rsp), %rbp
  41d37c:	48 83 c4 08 	addq	$8, %rsp
  41d380:	c3 	retq
  41d381:	c6 44 24 40 01 	movb	$1, 64(%rsp)
  41d386:	48 8b 2c 24 	movq	(%rsp), %rbp
  41d38a:	48 83 c4 08 	addq	$8, %rsp
  41d38e:	c3 	retq
  41d38f:	c6 44 24 40 00 	movb	$0, 64(%rsp)
  41d394:	48 8b 2c 24 	movq	(%rsp), %rbp
  41d398:	48 83 c4 08 	addq	$8, %rsp
  41d39c:	c3 	retq
  41d39d:	e8 9e 26 00 00 	callq	9886 <runtime.panicindex>
  41d3a2:	0f 0b 	ud2
  41d3a4:	cc 	int3
  41d3a5:	cc 	int3
  41d3a6:	cc 	int3
  41d3a7:	cc 	int3
  41d3a8:	cc 	int3
  41d3a9:	cc 	int3
  41d3aa:	cc 	int3
  41d3ab:	cc 	int3
  41d3ac:	cc 	int3
  41d3ad:	cc 	int3
  41d3ae:	cc 	int3
  41d3af:	cc 	int3

runtime.mProf_NextCycle:
  41d3b0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41d3b9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41d3bd:	76 62 	jbe	98 <runtime.mProf_NextCycle+0x71>
  41d3bf:	48 83 ec 10 	subq	$16, %rsp
  41d3c3:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  41d3c8:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  41d3cd:	48 8d 05 e4 65 0a 00 	leaq	681444(%rip), %rax
  41d3d4:	48 89 04 24 	movq	%rax, (%rsp)
  41d3d8:	e8 43 c1 fe ff 	callq	-81597 <runtime.lock>
  41d3dd:	8b 05 a5 65 0a 00 	movl	681381(%rip), %eax
  41d3e3:	ff c0 	incl	%eax
  41d3e5:	b9 ab aa aa aa 	movl	$2863311531, %ecx
  41d3ea:	48 0f af c8 	imulq	%rax, %rcx
  41d3ee:	48 c1 e9 3a 	shrq	$58, %rcx
  41d3f2:	69 c9 00 00 00 06 	imull	$100663296, %ecx, %ecx
  41d3f8:	29 c8 	subl	%ecx, %eax
  41d3fa:	89 05 88 65 0a 00 	movl	%eax, 681352(%rip)
  41d400:	c6 05 85 65 0a 00 00 	movb	$0, 681349(%rip)
  41d407:	48 8d 05 aa 65 0a 00 	leaq	681386(%rip), %rax
  41d40e:	48 89 04 24 	movq	%rax, (%rsp)
  41d412:	e8 a9 c2 fe ff 	callq	-81239 <runtime.unlock>
  41d417:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  41d41c:	48 83 c4 10 	addq	$16, %rsp
  41d420:	c3 	retq
  41d421:	e8 4a 71 02 00 	callq	160074 <runtime.morestack_noctxt>
  41d426:	eb 88 	jmp	-120 <runtime.mProf_NextCycle>
  41d428:	cc 	int3
  41d429:	cc 	int3
  41d42a:	cc 	int3
  41d42b:	cc 	int3
  41d42c:	cc 	int3
  41d42d:	cc 	int3
  41d42e:	cc 	int3
  41d42f:	cc 	int3

runtime.mProf_Flush:
  41d430:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41d439:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41d43d:	76 51 	jbe	81 <runtime.mProf_Flush+0x60>
  41d43f:	48 83 ec 10 	subq	$16, %rsp
  41d443:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  41d448:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  41d44d:	48 8d 05 64 65 0a 00 	leaq	681316(%rip), %rax
  41d454:	48 89 04 24 	movq	%rax, (%rsp)
  41d458:	e8 c3 c0 fe ff 	callq	-81725 <runtime.lock>
  41d45d:	0f b6 05 28 65 0a 00 	movzbl	681256(%rip), %eax
  41d464:	84 c0 	testb	%al, %al
  41d466:	74 1a 	je	26 <runtime.mProf_Flush+0x52>
  41d468:	48 8d 05 49 65 0a 00 	leaq	681289(%rip), %rax
  41d46f:	48 89 04 24 	movq	%rax, (%rsp)
  41d473:	e8 48 c2 fe ff 	callq	-81336 <runtime.unlock>
  41d478:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  41d47d:	48 83 c4 10 	addq	$16, %rsp
  41d481:	c3 	retq
  41d482:	e8 19 00 00 00 	callq	25 <runtime.mProf_FlushLocked>
  41d487:	c6 05 fe 64 0a 00 01 	movb	$1, 681214(%rip)
  41d48e:	eb d8 	jmp	-40 <runtime.mProf_Flush+0x38>
  41d490:	e8 db 70 02 00 	callq	159963 <runtime.morestack_noctxt>
  41d495:	eb 99 	jmp	-103 <runtime.mProf_Flush>
  41d497:	cc 	int3
  41d498:	cc 	int3
  41d499:	cc 	int3
  41d49a:	cc 	int3
  41d49b:	cc 	int3
  41d49c:	cc 	int3
  41d49d:	cc 	int3
  41d49e:	cc 	int3
  41d49f:	cc 	int3

runtime.mProf_FlushLocked:
  41d4a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41d4a9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41d4ad:	0f 86 c7 00 00 00 	jbe	199 <runtime.mProf_FlushLocked+0xda>
  41d4b3:	48 83 ec 28 	subq	$40, %rsp
  41d4b7:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  41d4bc:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  41d4c1:	8b 05 c1 64 0a 00 	movl	681153(%rip), %eax
  41d4c7:	89 44 24 14 	movl	%eax, 20(%rsp)
  41d4cb:	48 8b 0d 9e a1 08 00 	movq	565662(%rip), %rcx
  41d4d2:	e9 90 00 00 00 	jmp	144 <runtime.mProf_FlushLocked+0xc7>
  41d4d7:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  41d4dc:	48 89 0c 24 	movq	%rcx, (%rsp)
  41d4e0:	e8 2b fa ff ff 	callq	-1493 <runtime.(*bucket).mp>
  41d4e5:	48 8b 44 24 08 	movq	8(%rsp), %rax
  41d4ea:	b9 ab aa aa aa 	movl	$2863311531, %ecx
  41d4ef:	8b 54 24 14 	movl	20(%rsp), %edx
  41d4f3:	48 0f af ca 	imulq	%rdx, %rcx
  41d4f7:	48 c1 e9 21 	shrq	$33, %rcx
  41d4fb:	6b c9 03 	imull	$3, %ecx, %ecx
  41d4fe:	89 d3 	movl	%edx, %ebx
  41d500:	29 ca 	subl	%ecx, %edx
  41d502:	48 c1 e2 05 	shlq	$5, %rdx
  41d506:	48 8b 4c 10 20 	movq	32(%rax,%rdx), %rcx
  41d50b:	48 03 08 	addq	(%rax), %rcx
  41d50e:	48 89 08 	movq	%rcx, (%rax)
  41d511:	48 8b 4c 10 28 	movq	40(%rax,%rdx), %rcx
  41d516:	48 03 48 08 	addq	8(%rax), %rcx
  41d51a:	48 89 48 08 	movq	%rcx, 8(%rax)
  41d51e:	48 8b 4c 10 30 	movq	48(%rax,%rdx), %rcx
  41d523:	48 03 48 10 	addq	16(%rax), %rcx
  41d527:	48 89 48 10 	movq	%rcx, 16(%rax)
  41d52b:	48 8b 4c 10 38 	movq	56(%rax,%rdx), %rcx
  41d530:	48 03 48 18 	addq	24(%rax), %rcx
  41d534:	48 89 48 18 	movq	%rcx, 24(%rax)
  41d538:	48 c7 44 10 20 00 00 00 00 	movq	$0, 32(%rax,%rdx)
  41d541:	48 c7 44 10 28 00 00 00 00 	movq	$0, 40(%rax,%rdx)
  41d54a:	48 c7 44 10 30 00 00 00 00 	movq	$0, 48(%rax,%rdx)
  41d553:	48 c7 44 10 38 00 00 00 00 	movq	$0, 56(%rax,%rdx)
  41d55c:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41d561:	48 8b 48 08 	movq	8(%rax), %rcx
  41d565:	89 d8 	movl	%ebx, %eax
  41d567:	48 85 c9 	testq	%rcx, %rcx
  41d56a:	0f 85 67 ff ff ff 	jne	-153 <runtime.mProf_FlushLocked+0x37>
  41d570:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  41d575:	48 83 c4 28 	addq	$40, %rsp
  41d579:	c3 	retq
  41d57a:	e8 f1 6f 02 00 	callq	159729 <runtime.morestack_noctxt>
  41d57f:	e9 1c ff ff ff 	jmp	-228 <runtime.mProf_FlushLocked>
  41d584:	cc 	int3
  41d585:	cc 	int3
  41d586:	cc 	int3
  41d587:	cc 	int3
  41d588:	cc 	int3
  41d589:	cc 	int3
  41d58a:	cc 	int3
  41d58b:	cc 	int3
  41d58c:	cc 	int3
  41d58d:	cc 	int3
  41d58e:	cc 	int3
  41d58f:	cc 	int3

runtime.mProf_Malloc:
  41d590:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41d599:	48 8d 84 24 10 ff ff ff 	leaq	-240(%rsp), %rax
  41d5a1:	48 3b 41 10 	cmpq	16(%rcx), %rax
  41d5a5:	0f 86 88 01 00 00 	jbe	392 <runtime.mProf_Malloc+0x1a3>
  41d5ab:	48 81 ec 70 01 00 00 	subq	$368, %rsp
  41d5b2:	48 89 ac 24 68 01 00 00 	movq	%rbp, 360(%rsp)
  41d5ba:	48 8d ac 24 68 01 00 00 	leaq	360(%rsp), %rbp
  41d5c2:	48 8d 7c 24 48 	leaq	72(%rsp), %rdi
  41d5c7:	0f 57 c0 	xorps	%xmm0, %xmm0
  41d5ca:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  41d5cf:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  41d5d4:	e8 ab 94 02 00 	callq	169131 <runtime.duffzero+0xe4>
  41d5d9:	48 8b 6d 00 	movq	(%rbp), %rbp
  41d5dd:	48 c7 04 24 04 00 00 00 	movq	$4, (%rsp)
  41d5e5:	48 8d 44 24 48 	leaq	72(%rsp), %rax
  41d5ea:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41d5ef:	48 c7 44 24 10 20 00 00 00 	movq	$32, 16(%rsp)
  41d5f8:	48 c7 44 24 18 20 00 00 00 	movq	$32, 24(%rsp)
  41d601:	e8 fa 02 02 00 	callq	131834 <runtime.callers>
  41d606:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41d60b:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  41d610:	48 8d 0d a1 63 0a 00 	leaq	680865(%rip), %rcx
  41d617:	48 89 0c 24 	movq	%rcx, (%rsp)
  41d61b:	e8 00 bf fe ff 	callq	-82176 <runtime.lock>
  41d620:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41d625:	48 83 f8 20 	cmpq	$32, %rax
  41d629:	0f 87 fd 00 00 00 	ja	253 <runtime.mProf_Malloc+0x19c>
  41d62f:	48 c7 04 24 01 00 00 00 	movq	$1, (%rsp)
  41d637:	48 8b 8c 24 80 01 00 00 	movq	384(%rsp), %rcx
  41d63f:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41d644:	48 8d 54 24 48 	leaq	72(%rsp), %rdx
  41d649:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  41d64e:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  41d653:	48 c7 44 24 20 20 00 00 00 	movq	$32, 32(%rsp)
  41d65c:	c6 44 24 28 01 	movb	$1, 40(%rsp)
  41d661:	e8 8a f9 ff ff 	callq	-1654 <runtime.stkbucket>
  41d666:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41d66b:	48 89 84 24 48 01 00 00 	movq	%rax, 328(%rsp)
  41d673:	8b 0d 0f 63 0a 00 	movl	680719(%rip), %ecx
  41d679:	89 4c 24 3c 	movl	%ecx, 60(%rsp)
  41d67d:	48 89 04 24 	movq	%rax, (%rsp)
  41d681:	e8 8a f8 ff ff 	callq	-1910 <runtime.(*bucket).mp>
  41d686:	48 8b 44 24 08 	movq	8(%rsp), %rax
  41d68b:	84 00 	testb	%al, (%rax)
  41d68d:	8b 4c 24 3c 	movl	60(%rsp), %ecx
  41d691:	83 c1 02 	addl	$2, %ecx
  41d694:	ba ab aa aa aa 	movl	$2863311531, %edx
  41d699:	48 0f af d1 	imulq	%rcx, %rdx
  41d69d:	48 c1 ea 21 	shrq	$33, %rdx
  41d6a1:	6b d2 03 	imull	$3, %edx, %edx
  41d6a4:	29 d1 	subl	%edx, %ecx
  41d6a6:	48 c1 e1 05 	shlq	$5, %rcx
  41d6aa:	48 8b 54 08 20 	movq	32(%rax,%rcx), %rdx
  41d6af:	48 ff c2 	incq	%rdx
  41d6b2:	48 89 54 08 20 	movq	%rdx, 32(%rax,%rcx)
  41d6b7:	48 8b 54 08 30 	movq	48(%rax,%rcx), %rdx
  41d6bc:	48 8b 9c 24 80 01 00 00 	movq	384(%rsp), %rbx
  41d6c4:	48 01 da 	addq	%rbx, %rdx
  41d6c7:	48 89 54 08 30 	movq	%rdx, 48(%rax,%rcx)
  41d6cc:	48 8d 05 e5 62 0a 00 	leaq	680677(%rip), %rax
  41d6d3:	48 89 04 24 	movq	%rax, (%rsp)
  41d6d7:	e8 e4 bf fe ff 	callq	-81948 <runtime.unlock>
  41d6dc:	48 8d 05 1d 53 02 00 	leaq	152349(%rip), %rax
  41d6e3:	48 89 84 24 50 01 00 00 	movq	%rax, 336(%rsp)
  41d6eb:	48 8b 84 24 78 01 00 00 	movq	376(%rsp), %rax
  41d6f3:	48 89 84 24 58 01 00 00 	movq	%rax, 344(%rsp)
  41d6fb:	48 8b 84 24 48 01 00 00 	movq	328(%rsp), %rax
  41d703:	48 89 84 24 60 01 00 00 	movq	%rax, 352(%rsp)
  41d70b:	48 8d 84 24 50 01 00 00 	leaq	336(%rsp), %rax
  41d713:	48 89 04 24 	movq	%rax, (%rsp)
  41d717:	e8 04 6d 02 00 	callq	158980 <runtime.systemstack>
  41d71c:	48 8b ac 24 68 01 00 00 	movq	360(%rsp), %rbp
  41d724:	48 81 c4 70 01 00 00 	addq	$368, %rsp
  41d72b:	c3 	retq
  41d72c:	e8 7f 23 00 00 	callq	9087 <runtime.panicslice>
  41d731:	0f 0b 	ud2
  41d733:	e8 38 6e 02 00 	callq	159288 <runtime.morestack_noctxt>
  41d738:	e9 53 fe ff ff 	jmp	-429 <runtime.mProf_Malloc>
  41d73d:	cc 	int3
  41d73e:	cc 	int3
  41d73f:	cc 	int3

runtime.mProf_Free:
  41d740:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41d749:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41d74d:	0f 86 92 00 00 00 	jbe	146 <runtime.mProf_Free+0xa5>
  41d753:	48 83 ec 20 	subq	$32, %rsp
  41d757:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  41d75c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  41d761:	48 8d 05 50 62 0a 00 	leaq	680528(%rip), %rax
  41d768:	48 89 04 24 	movq	%rax, (%rsp)
  41d76c:	e8 af bd fe ff 	callq	-82513 <runtime.lock>
  41d771:	8b 05 11 62 0a 00 	movl	680465(%rip), %eax
  41d777:	89 44 24 14 	movl	%eax, 20(%rsp)
  41d77b:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  41d780:	48 89 0c 24 	movq	%rcx, (%rsp)
  41d784:	e8 87 f7 ff ff 	callq	-2169 <runtime.(*bucket).mp>
  41d789:	48 8b 44 24 08 	movq	8(%rsp), %rax
  41d78e:	84 00 	testb	%al, (%rax)
  41d790:	8b 4c 24 14 	movl	20(%rsp), %ecx
  41d794:	ff c1 	incl	%ecx
  41d796:	ba ab aa aa aa 	movl	$2863311531, %edx
  41d79b:	48 0f af d1 	imulq	%rcx, %rdx
  41d79f:	48 c1 ea 21 	shrq	$33, %rdx
  41d7a3:	6b d2 03 	imull	$3, %edx, %edx
  41d7a6:	29 d1 	subl	%edx, %ecx
  41d7a8:	48 c1 e1 05 	shlq	$5, %rcx
  41d7ac:	48 8b 54 08 28 	movq	40(%rax,%rcx), %rdx
  41d7b1:	48 ff c2 	incq	%rdx
  41d7b4:	48 89 54 08 28 	movq	%rdx, 40(%rax,%rcx)
  41d7b9:	48 8b 54 08 38 	movq	56(%rax,%rcx), %rdx
  41d7be:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  41d7c3:	48 01 da 	addq	%rbx, %rdx
  41d7c6:	48 89 54 08 38 	movq	%rdx, 56(%rax,%rcx)
  41d7cb:	48 8d 05 e6 61 0a 00 	leaq	680422(%rip), %rax
  41d7d2:	48 89 04 24 	movq	%rax, (%rsp)
  41d7d6:	e8 e5 be fe ff 	callq	-82203 <runtime.unlock>
  41d7db:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  41d7e0:	48 83 c4 20 	addq	$32, %rsp
  41d7e4:	c3 	retq
  41d7e5:	e8 86 6d 02 00 	callq	159110 <runtime.morestack_noctxt>
  41d7ea:	e9 51 ff ff ff 	jmp	-175 <runtime.mProf_Free>
  41d7ef:	cc 	int3

runtime.blockevent:
  41d7f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41d7f9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41d7fd:	76 64 	jbe	100 <runtime.blockevent+0x73>
  41d7ff:	48 83 ec 20 	subq	$32, %rsp
  41d803:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  41d808:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  41d80d:	48 8b 44 24 28 	movq	40(%rsp), %rax
  41d812:	48 85 c0 	testq	%rax, %rax
  41d815:	7f 05 	jg	5 <runtime.blockevent+0x2c>
  41d817:	b8 01 00 00 00 	movl	$1, %eax
  41d81c:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  41d821:	48 89 04 24 	movq	%rax, (%rsp)
  41d825:	e8 46 00 00 00 	callq	70 <runtime.blocksampled>
  41d82a:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  41d82f:	84 c0 	testb	%al, %al
  41d831:	75 0a 	jne	10 <runtime.blockevent+0x4d>
  41d833:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  41d838:	48 83 c4 20 	addq	$32, %rsp
  41d83c:	c3 	retq
  41d83d:	48 8b 44 24 28 	movq	40(%rsp), %rax
  41d842:	48 89 04 24 	movq	%rax, (%rsp)
  41d846:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41d84b:	48 ff c0 	incq	%rax
  41d84e:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41d853:	48 c7 44 24 10 02 00 00 00 	movq	$2, 16(%rsp)
  41d85c:	e8 9f 00 00 00 	callq	159 <runtime.saveblockevent>
  41d861:	eb d0 	jmp	-48 <runtime.blockevent+0x43>
  41d863:	e8 08 6d 02 00 	callq	158984 <runtime.morestack_noctxt>
  41d868:	eb 86 	jmp	-122 <runtime.blockevent>
  41d86a:	cc 	int3
  41d86b:	cc 	int3
  41d86c:	cc 	int3
  41d86d:	cc 	int3
  41d86e:	cc 	int3
  41d86f:	cc 	int3

runtime.blocksampled:
  41d870:	48 8b 0d b1 60 0a 00 	movq	680113(%rip), %rcx
  41d877:	48 85 c9 	testq	%rcx, %rcx
  41d87a:	7f 06 	jg	6 <runtime.blocksampled+0x12>
  41d87c:	c6 44 24 10 00 	movb	$0, 16(%rsp)
  41d881:	c3 	retq
  41d882:	48 8b 54 24 08 	movq	8(%rsp), %rdx
  41d887:	48 39 d1 	cmpq	%rdx, %rcx
  41d88a:	7e 61 	jle	97 <runtime.blocksampled+0x7d>
  41d88c:	64 48 8b 1c 25 f8 ff ff ff 	movq	%fs:-8, %rbx
  41d895:	48 8b 5b 30 	movq	48(%rbx), %rbx
  41d899:	8b b3 20 01 00 00 	movl	288(%rbx), %esi
  41d89f:	8b bb 24 01 00 00 	movl	292(%rbx), %edi
  41d8a5:	41 89 f0 	movl	%esi, %r8d
  41d8a8:	c1 e6 11 	shll	$17, %esi
  41d8ab:	44 31 c6 	xorl	%r8d, %esi
  41d8ae:	41 89 f8 	movl	%edi, %r8d
  41d8b1:	31 f7 	xorl	%esi, %edi
  41d8b3:	c1 ee 07 	shrl	$7, %esi
  41d8b6:	31 fe 	xorl	%edi, %esi
  41d8b8:	44 89 c7 	movl	%r8d, %edi
  41d8bb:	41 c1 e8 10 	shrl	$16, %r8d
  41d8bf:	41 31 f0 	xorl	%esi, %r8d
  41d8c2:	42 8d 04 07 	leal	(%rdi,%r8), %eax
  41d8c6:	48 89 d6 	movq	%rdx, %rsi
  41d8c9:	48 83 f9 ff 	cmpq	$-1, %rcx
  41d8cd:	74 07 	je	7 <runtime.blocksampled+0x66>
  41d8cf:	48 99 	cqto
  41d8d1:	48 f7 f9 	idivq	%rcx
  41d8d4:	eb 05 	jmp	5 <runtime.blocksampled+0x6b>
  41d8d6:	48 f7 d8 	negq	%rax
  41d8d9:	31 d2 	xorl	%edx, %edx
  41d8db:	89 bb 20 01 00 00 	movl	%edi, 288(%rbx)
  41d8e1:	44 89 83 24 01 00 00 	movl	%r8d, 292(%rbx)
  41d8e8:	48 39 f2 	cmpq	%rsi, %rdx
  41d8eb:	7f 8f 	jg	-113 <runtime.blocksampled+0xc>
  41d8ed:	c6 44 24 10 01 	movb	$1, 16(%rsp)
  41d8f2:	c3 	retq
  41d8f3:	cc 	int3
  41d8f4:	cc 	int3
  41d8f5:	cc 	int3
  41d8f6:	cc 	int3
  41d8f7:	cc 	int3
  41d8f8:	cc 	int3
  41d8f9:	cc 	int3
  41d8fa:	cc 	int3
  41d8fb:	cc 	int3
  41d8fc:	cc 	int3
  41d8fd:	cc 	int3
  41d8fe:	cc 	int3
  41d8ff:	cc 	int3

runtime.saveblockevent:
  41d900:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41d909:	48 8d 84 24 30 ff ff ff 	leaq	-208(%rsp), %rax
  41d911:	48 3b 41 10 	cmpq	16(%rcx), %rax
  41d915:	0f 86 88 01 00 00 	jbe	392 <runtime.saveblockevent+0x1a3>
  41d91b:	48 81 ec 50 01 00 00 	subq	$336, %rsp
  41d922:	48 89 ac 24 48 01 00 00 	movq	%rbp, 328(%rsp)
  41d92a:	48 8d ac 24 48 01 00 00 	leaq	328(%rsp), %rbp
  41d932:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  41d93b:	48 8d 7c 24 40 	leaq	64(%rsp), %rdi
  41d940:	0f 57 c0 	xorps	%xmm0, %xmm0
  41d943:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  41d948:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  41d94d:	e8 32 91 02 00 	callq	168242 <runtime.duffzero+0xe4>
  41d952:	48 8b 6d 00 	movq	(%rbp), %rbp
  41d956:	48 8b 48 30 	movq	48(%rax), %rcx
  41d95a:	48 8b 89 c0 00 00 00 	movq	192(%rcx), %rcx
  41d961:	48 85 c9 	testq	%rcx, %rcx
  41d964:	74 09 	je	9 <runtime.saveblockevent+0x6f>
  41d966:	48 39 c1 	cmpq	%rax, %rcx
  41d969:	0f 85 f1 00 00 00 	jne	241 <runtime.saveblockevent+0x160>
  41d96f:	48 8b 84 24 60 01 00 00 	movq	352(%rsp), %rax
  41d977:	48 89 04 24 	movq	%rax, (%rsp)
  41d97b:	48 8d 44 24 40 	leaq	64(%rsp), %rax
  41d980:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41d985:	48 c7 44 24 10 20 00 00 00 	movq	$32, 16(%rsp)
  41d98e:	48 c7 44 24 18 20 00 00 00 	movq	$32, 24(%rsp)
  41d997:	e8 64 ff 01 00 	callq	130916 <runtime.callers>
  41d99c:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41d9a1:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  41d9a6:	48 8d 0d 0b 60 0a 00 	leaq	679947(%rip), %rcx
  41d9ad:	48 89 0c 24 	movq	%rcx, (%rsp)
  41d9b1:	e8 6a bb fe ff 	callq	-83094 <runtime.lock>
  41d9b6:	48 8b 44 24 38 	movq	56(%rsp), %rax
  41d9bb:	48 83 f8 20 	cmpq	$32, %rax
  41d9bf:	0f 87 d7 00 00 00 	ja	215 <runtime.saveblockevent+0x19c>
  41d9c5:	48 8b 8c 24 68 01 00 00 	movq	360(%rsp), %rcx
  41d9cd:	48 89 0c 24 	movq	%rcx, (%rsp)
  41d9d1:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  41d9da:	48 8d 4c 24 40 	leaq	64(%rsp), %rcx
  41d9df:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  41d9e4:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  41d9e9:	48 c7 44 24 20 20 00 00 00 	movq	$32, 32(%rsp)
  41d9f2:	c6 44 24 28 01 	movb	$1, 40(%rsp)
  41d9f7:	e8 f4 f5 ff ff 	callq	-2572 <runtime.stkbucket>
  41d9fc:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41da01:	48 89 84 24 40 01 00 00 	movq	%rax, 320(%rsp)
  41da09:	48 89 04 24 	movq	%rax, (%rsp)
  41da0d:	e8 6e f5 ff ff 	callq	-2706 <runtime.(*bucket).bp>
  41da12:	48 8b 44 24 08 	movq	8(%rsp), %rax
  41da17:	48 ff 00 	incq	(%rax)
  41da1a:	48 8b 84 24 40 01 00 00 	movq	320(%rsp), %rax
  41da22:	48 89 04 24 	movq	%rax, (%rsp)
  41da26:	e8 55 f5 ff ff 	callq	-2731 <runtime.(*bucket).bp>
  41da2b:	48 8b 44 24 08 	movq	8(%rsp), %rax
  41da30:	48 8b 8c 24 58 01 00 00 	movq	344(%rsp), %rcx
  41da38:	48 03 48 08 	addq	8(%rax), %rcx
  41da3c:	48 89 48 08 	movq	%rcx, 8(%rax)
  41da40:	48 8d 05 71 5f 0a 00 	leaq	679793(%rip), %rax
  41da47:	48 89 04 24 	movq	%rax, (%rsp)
  41da4b:	e8 70 bc fe ff 	callq	-82832 <runtime.unlock>
  41da50:	48 8b ac 24 48 01 00 00 	movq	328(%rsp), %rbp
  41da58:	48 81 c4 50 01 00 00 	addq	$336, %rsp
  41da5f:	c3 	retq
  41da60:	48 89 0c 24 	movq	%rcx, (%rsp)
  41da64:	48 8b 84 24 60 01 00 00 	movq	352(%rsp), %rax
  41da6c:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41da71:	48 8d 44 24 40 	leaq	64(%rsp), %rax
  41da76:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  41da7b:	48 c7 44 24 18 20 00 00 00 	movq	$32, 24(%rsp)
  41da84:	48 c7 44 24 20 20 00 00 00 	movq	$32, 32(%rsp)
  41da8d:	e8 4e ff 01 00 	callq	130894 <runtime.gcallers>
  41da92:	48 8b 44 24 28 	movq	40(%rsp), %rax
  41da97:	e9 05 ff ff ff 	jmp	-251 <runtime.saveblockevent+0xa1>
  41da9c:	e8 0f 20 00 00 	callq	8207 <runtime.panicslice>
  41daa1:	0f 0b 	ud2
  41daa3:	e8 c8 6a 02 00 	callq	158408 <runtime.morestack_noctxt>
  41daa8:	e9 53 fe ff ff 	jmp	-429 <runtime.saveblockevent>
  41daad:	cc 	int3
  41daae:	cc 	int3
  41daaf:	cc 	int3

sync.event:
  41dab0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41dab9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41dabd:	0f 86 bb 00 00 00 	jbe	187 <sync.event+0xce>
  41dac3:	48 83 ec 20 	subq	$32, %rsp
  41dac7:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  41dacc:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  41dad1:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  41dad6:	48 85 c9 	testq	%rcx, %rcx
  41dad9:	0f 8d 97 00 00 00 	jge	151 <sync.event+0xc6>
  41dadf:	31 c0 	xorl	%eax, %eax
  41dae1:	48 8b 0d a8 5e 0a 00 	movq	679592(%rip), %rcx
  41dae8:	48 85 c9 	testq	%rcx, %rcx
  41daeb:	7e 5e 	jle	94 <sync.event+0x9b>
  41daed:	64 48 8b 14 25 f8 ff ff ff 	movq	%fs:-8, %rdx
  41daf6:	48 8b 52 30 	movq	48(%rdx), %rdx
  41dafa:	8b 9a 20 01 00 00 	movl	288(%rdx), %ebx
  41db00:	8b b2 24 01 00 00 	movl	292(%rdx), %esi
  41db06:	89 df 	movl	%ebx, %edi
  41db08:	c1 e3 11 	shll	$17, %ebx
  41db0b:	31 fb 	xorl	%edi, %ebx
  41db0d:	89 f7 	movl	%esi, %edi
  41db0f:	31 de 	xorl	%ebx, %esi
  41db11:	c1 eb 07 	shrl	$7, %ebx
  41db14:	31 f3 	xorl	%esi, %ebx
  41db16:	89 fe 	movl	%edi, %esi
  41db18:	c1 ef 10 	shrl	$16, %edi
  41db1b:	31 df 	xorl	%ebx, %edi
  41db1d:	8d 1c 3e 	leal	(%rsi,%rdi), %ebx
  41db20:	49 89 c0 	movq	%rax, %r8
  41db23:	89 d8 	movl	%ebx, %eax
  41db25:	48 89 d3 	movq	%rdx, %rbx
  41db28:	48 83 f9 ff 	cmpq	$-1, %rcx
  41db2c:	74 07 	je	7 <sync.event+0x85>
  41db2e:	48 99 	cqto
  41db30:	48 f7 f9 	idivq	%rcx
  41db33:	eb 05 	jmp	5 <sync.event+0x8a>
  41db35:	48 f7 d8 	negq	%rax
  41db38:	31 d2 	xorl	%edx, %edx
  41db3a:	89 b3 20 01 00 00 	movl	%esi, 288(%rbx)
  41db40:	89 bb 24 01 00 00 	movl	%edi, 292(%rbx)
  41db46:	48 85 d2 	testq	%rdx, %rdx
  41db49:	74 0a 	je	10 <sync.event+0xa5>
  41db4b:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  41db50:	48 83 c4 20 	addq	$32, %rsp
  41db54:	c3 	retq
  41db55:	4c 89 04 24 	movq	%r8, (%rsp)
  41db59:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41db5e:	48 ff c0 	incq	%rax
  41db61:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41db66:	48 c7 44 24 10 03 00 00 00 	movq	$3, 16(%rsp)
  41db6f:	e8 8c fd ff ff 	callq	-628 <runtime.saveblockevent>
  41db74:	eb d5 	jmp	-43 <sync.event+0x9b>
  41db76:	48 89 c8 	movq	%rcx, %rax
  41db79:	e9 63 ff ff ff 	jmp	-157 <sync.event+0x31>
  41db7e:	e8 ed 69 02 00 	callq	158189 <runtime.morestack_noctxt>
  41db83:	e9 28 ff ff ff 	jmp	-216 <sync.event>
  41db88:	cc 	int3
  41db89:	cc 	int3
  41db8a:	cc 	int3
  41db8b:	cc 	int3
  41db8c:	cc 	int3
  41db8d:	cc 	int3
  41db8e:	cc 	int3
  41db8f:	cc 	int3

runtime.tracealloc:
  41db90:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41db99:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41db9d:	0f 86 4d 02 00 00 	jbe	589 <runtime.tracealloc+0x260>
  41dba3:	48 83 ec 60 	subq	$96, %rsp
  41dba7:	48 89 6c 24 58 	movq	%rbp, 88(%rsp)
  41dbac:	48 8d 6c 24 58 	leaq	88(%rsp), %rbp
  41dbb1:	48 8d 05 40 5e 0a 00 	leaq	679488(%rip), %rax
  41dbb8:	48 89 04 24 	movq	%rax, (%rsp)
  41dbbc:	e8 5f b9 fe ff 	callq	-83617 <runtime.lock>
  41dbc1:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  41dbca:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  41dbcf:	48 8b 48 30 	movq	48(%rax), %rcx
  41dbd3:	c6 81 29 01 00 00 02 	movb	$2, 297(%rcx)
  41dbda:	48 8b 4c 24 78 	movq	120(%rsp), %rcx
  41dbdf:	48 85 c9 	testq	%rcx, %rcx
  41dbe2:	0f 84 92 01 00 00 	je	402 <runtime.tracealloc+0x1ea>
  41dbe8:	48 89 0c 24 	movq	%rcx, (%rsp)
  41dbec:	e8 7f 0d 02 00 	callq	134527 <runtime.(*_type).string>
  41dbf1:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41dbf6:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  41dbfb:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  41dc00:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  41dc05:	e8 f6 3e 00 00 	callq	16118 <runtime.printlock>
  41dc0a:	48 8d 05 bb c8 04 00 	leaq	313531(%rip), %rax
  41dc11:	48 89 04 24 	movq	%rax, (%rsp)
  41dc15:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  41dc1e:	e8 1d 48 00 00 	callq	18461 <runtime.printstring>
  41dc23:	48 8b 44 24 68 	movq	104(%rsp), %rax
  41dc28:	48 89 04 24 	movq	%rax, (%rsp)
  41dc2c:	e8 cf 47 00 00 	callq	18383 <runtime.printpointer>
  41dc31:	48 8d 05 34 c0 04 00 	leaq	311348(%rip), %rax
  41dc38:	48 89 04 24 	movq	%rax, (%rsp)
  41dc3c:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  41dc45:	e8 f6 47 00 00 	callq	18422 <runtime.printstring>
  41dc4a:	48 8b 44 24 70 	movq	112(%rsp), %rax
  41dc4f:	48 89 04 24 	movq	%rax, (%rsp)
  41dc53:	e8 98 46 00 00 	callq	18072 <runtime.printhex>
  41dc58:	48 8d 05 0d c0 04 00 	leaq	311309(%rip), %rax
  41dc5f:	48 89 04 24 	movq	%rax, (%rsp)
  41dc63:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  41dc6c:	e8 cf 47 00 00 	callq	18383 <runtime.printstring>
  41dc71:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41dc76:	48 89 04 24 	movq	%rax, (%rsp)
  41dc7a:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41dc7f:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41dc84:	e8 b7 47 00 00 	callq	18359 <runtime.printstring>
  41dc89:	48 8d 05 da bf 04 00 	leaq	311258(%rip), %rax
  41dc90:	48 89 04 24 	movq	%rax, (%rsp)
  41dc94:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  41dc9d:	e8 9e 47 00 00 	callq	18334 <runtime.printstring>
  41dca2:	e8 d9 3e 00 00 	callq	16089 <runtime.printunlock>
  41dca7:	48 8b 44 24 28 	movq	40(%rsp), %rax
  41dcac:	48 8b 48 30 	movq	48(%rax), %rcx
  41dcb0:	48 8b 89 c0 00 00 00 	movq	192(%rcx), %rcx
  41dcb7:	48 85 c9 	testq	%rcx, %rcx
  41dcba:	74 05 	je	5 <runtime.tracealloc+0x131>
  41dcbc:	48 39 c8 	cmpq	%rcx, %rax
  41dcbf:	75 7a 	jne	122 <runtime.tracealloc+0x1ab>
  41dcc1:	48 89 04 24 	movq	%rax, (%rsp)
  41dcc5:	e8 56 00 02 00 	callq	131158 <runtime.goroutineheader>
  41dcca:	48 8d 05 7f 4d 02 00 	leaq	150911(%rip), %rax
  41dcd1:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  41dcd6:	48 8b 44 24 60 	movq	96(%rsp), %rax
  41dcdb:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  41dce0:	48 8d 44 24 68 	leaq	104(%rsp), %rax
  41dce5:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  41dcea:	48 8b 44 24 28 	movq	40(%rsp), %rax
  41dcef:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  41dcf4:	48 8d 4c 24 38 	leaq	56(%rsp), %rcx
  41dcf9:	48 89 0c 24 	movq	%rcx, (%rsp)
  41dcfd:	e8 1e 67 02 00 	callq	157470 <runtime.systemstack>
  41dd02:	e8 f9 3d 00 00 	callq	15865 <runtime.printlock>
  41dd07:	e8 84 40 00 00 	callq	16516 <runtime.printnl>
  41dd0c:	e8 6f 3e 00 00 	callq	15983 <runtime.printunlock>
  41dd11:	48 8b 44 24 28 	movq	40(%rsp), %rax
  41dd16:	48 8b 40 30 	movq	48(%rax), %rax
  41dd1a:	c6 80 29 01 00 00 00 	movb	$0, 297(%rax)
  41dd21:	48 8d 05 d0 5c 0a 00 	leaq	679120(%rip), %rax
  41dd28:	48 89 04 24 	movq	%rax, (%rsp)
  41dd2c:	e8 8f b9 fe ff 	callq	-83569 <runtime.unlock>
  41dd31:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  41dd36:	48 83 c4 60 	addq	$96, %rsp
  41dd3a:	c3 	retq
  41dd3b:	48 89 0c 24 	movq	%rcx, (%rsp)
  41dd3f:	e8 dc ff 01 00 	callq	131036 <runtime.goroutineheader>
  41dd44:	48 8b 44 24 28 	movq	40(%rsp), %rax
  41dd49:	48 8b 48 30 	movq	48(%rax), %rcx
  41dd4d:	48 8b 89 c0 00 00 00 	movq	192(%rcx), %rcx
  41dd54:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  41dd59:	48 c7 04 24 ff ff ff ff 	movq	$-1, (%rsp)
  41dd61:	48 c7 44 24 08 ff ff ff ff 	movq	$-1, 8(%rsp)
  41dd6a:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  41dd73:	e8 48 f8 01 00 	callq	129096 <runtime.traceback>
  41dd78:	eb 88 	jmp	-120 <runtime.tracealloc+0x172>
  41dd7a:	e8 81 3d 00 00 	callq	15745 <runtime.printlock>
  41dd7f:	48 8d 05 46 c7 04 00 	leaq	313158(%rip), %rax
  41dd86:	48 89 04 24 	movq	%rax, (%rsp)
  41dd8a:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  41dd93:	e8 a8 46 00 00 	callq	18088 <runtime.printstring>
  41dd98:	48 8b 44 24 68 	movq	104(%rsp), %rax
  41dd9d:	48 89 04 24 	movq	%rax, (%rsp)
  41dda1:	e8 5a 46 00 00 	callq	18010 <runtime.printpointer>
  41dda6:	48 8d 05 bf be 04 00 	leaq	310975(%rip), %rax
  41ddad:	48 89 04 24 	movq	%rax, (%rsp)
  41ddb1:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  41ddba:	e8 81 46 00 00 	callq	18049 <runtime.printstring>
  41ddbf:	48 8b 44 24 70 	movq	112(%rsp), %rax
  41ddc4:	48 89 04 24 	movq	%rax, (%rsp)
  41ddc8:	e8 23 45 00 00 	callq	17699 <runtime.printhex>
  41ddcd:	48 8d 05 96 be 04 00 	leaq	310934(%rip), %rax
  41ddd4:	48 89 04 24 	movq	%rax, (%rsp)
  41ddd8:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  41dde1:	e8 5a 46 00 00 	callq	18010 <runtime.printstring>
  41dde6:	e8 95 3d 00 00 	callq	15765 <runtime.printunlock>
  41ddeb:	e9 b7 fe ff ff 	jmp	-329 <runtime.tracealloc+0x117>
  41ddf0:	e8 7b 67 02 00 	callq	157563 <runtime.morestack_noctxt>
  41ddf5:	e9 96 fd ff ff 	jmp	-618 <runtime.tracealloc>
  41ddfa:	cc 	int3
  41ddfb:	cc 	int3
  41ddfc:	cc 	int3
  41ddfd:	cc 	int3
  41ddfe:	cc 	int3
  41ddff:	cc 	int3

runtime.tracefree:
  41de00:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41de09:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41de0d:	0f 86 27 01 00 00 	jbe	295 <runtime.tracefree+0x13a>
  41de13:	48 83 ec 40 	subq	$64, %rsp
  41de17:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  41de1c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  41de21:	48 8d 05 d0 5b 0a 00 	leaq	678864(%rip), %rax
  41de28:	48 89 04 24 	movq	%rax, (%rsp)
  41de2c:	e8 ef b6 fe ff 	callq	-84241 <runtime.lock>
  41de31:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  41de3a:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  41de3f:	48 8b 48 30 	movq	48(%rax), %rcx
  41de43:	c6 81 29 01 00 00 02 	movb	$2, 297(%rcx)
  41de4a:	e8 b1 3c 00 00 	callq	15537 <runtime.printlock>
  41de4f:	48 8d 05 24 c5 04 00 	leaq	312612(%rip), %rax
  41de56:	48 89 04 24 	movq	%rax, (%rsp)
  41de5a:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  41de63:	e8 d8 45 00 00 	callq	17880 <runtime.printstring>
  41de68:	48 8b 44 24 48 	movq	72(%rsp), %rax
  41de6d:	48 89 04 24 	movq	%rax, (%rsp)
  41de71:	e8 8a 45 00 00 	callq	17802 <runtime.printpointer>
  41de76:	48 8d 05 ef bd 04 00 	leaq	310767(%rip), %rax
  41de7d:	48 89 04 24 	movq	%rax, (%rsp)
  41de81:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  41de8a:	e8 b1 45 00 00 	callq	17841 <runtime.printstring>
  41de8f:	48 8b 44 24 50 	movq	80(%rsp), %rax
  41de94:	48 89 04 24 	movq	%rax, (%rsp)
  41de98:	e8 53 44 00 00 	callq	17491 <runtime.printhex>
  41de9d:	48 8d 05 c6 bd 04 00 	leaq	310726(%rip), %rax
  41dea4:	48 89 04 24 	movq	%rax, (%rsp)
  41dea8:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  41deb1:	e8 8a 45 00 00 	callq	17802 <runtime.printstring>
  41deb6:	e8 c5 3c 00 00 	callq	15557 <runtime.printunlock>
  41debb:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41dec0:	48 89 04 24 	movq	%rax, (%rsp)
  41dec4:	e8 57 fe 01 00 	callq	130647 <runtime.goroutineheader>
  41dec9:	48 8d 05 e0 4b 02 00 	leaq	150496(%rip), %rax
  41ded0:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  41ded5:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41deda:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  41dedf:	48 8d 44 24 48 	leaq	72(%rsp), %rax
  41dee4:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  41dee9:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41deee:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  41def3:	48 8d 4c 24 18 	leaq	24(%rsp), %rcx
  41def8:	48 89 0c 24 	movq	%rcx, (%rsp)
  41defc:	e8 1f 65 02 00 	callq	156959 <runtime.systemstack>
  41df01:	e8 fa 3b 00 00 	callq	15354 <runtime.printlock>
  41df06:	e8 85 3e 00 00 	callq	16005 <runtime.printnl>
  41df0b:	e8 70 3c 00 00 	callq	15472 <runtime.printunlock>
  41df10:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41df15:	48 8b 40 30 	movq	48(%rax), %rax
  41df19:	c6 80 29 01 00 00 00 	movb	$0, 297(%rax)
  41df20:	48 8d 05 d1 5a 0a 00 	leaq	678609(%rip), %rax
  41df27:	48 89 04 24 	movq	%rax, (%rsp)
  41df2b:	e8 90 b7 fe ff 	callq	-84080 <runtime.unlock>
  41df30:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  41df35:	48 83 c4 40 	addq	$64, %rsp
  41df39:	c3 	retq
  41df3a:	e8 31 66 02 00 	callq	157233 <runtime.morestack_noctxt>
  41df3f:	e9 bc fe ff ff 	jmp	-324 <runtime.tracefree>
  41df44:	cc 	int3
  41df45:	cc 	int3
  41df46:	cc 	int3
  41df47:	cc 	int3
  41df48:	cc 	int3
  41df49:	cc 	int3
  41df4a:	cc 	int3
  41df4b:	cc 	int3
  41df4c:	cc 	int3
  41df4d:	cc 	int3
  41df4e:	cc 	int3
  41df4f:	cc 	int3

runtime.tracegc:
  41df50:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41df59:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41df5d:	0f 86 c4 00 00 00 	jbe	196 <runtime.tracegc+0xd7>
  41df63:	48 83 ec 20 	subq	$32, %rsp
  41df67:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  41df6c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  41df71:	48 8d 05 80 5a 0a 00 	leaq	678528(%rip), %rax
  41df78:	48 89 04 24 	movq	%rax, (%rsp)
  41df7c:	e8 9f b5 fe ff 	callq	-84577 <runtime.lock>
  41df81:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  41df8a:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  41df8f:	48 8b 48 30 	movq	48(%rax), %rcx
  41df93:	c6 81 29 01 00 00 02 	movb	$2, 297(%rcx)
  41df9a:	e8 61 3b 00 00 	callq	15201 <runtime.printlock>
  41df9f:	48 8d 05 de c3 04 00 	leaq	312286(%rip), %rax
  41dfa6:	48 89 04 24 	movq	%rax, (%rsp)
  41dfaa:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  41dfb3:	e8 88 44 00 00 	callq	17544 <runtime.printstring>
  41dfb8:	e8 c3 3b 00 00 	callq	15299 <runtime.printunlock>
  41dfbd:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41dfc2:	48 89 04 24 	movq	%rax, (%rsp)
  41dfc6:	e8 f5 ff 01 00 	callq	131061 <runtime.tracebackothers>
  41dfcb:	e8 30 3b 00 00 	callq	15152 <runtime.printlock>
  41dfd0:	48 8d 05 2b c6 04 00 	leaq	312875(%rip), %rax
  41dfd7:	48 89 04 24 	movq	%rax, (%rsp)
  41dfdb:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  41dfe4:	e8 57 44 00 00 	callq	17495 <runtime.printstring>
  41dfe9:	e8 92 3b 00 00 	callq	15250 <runtime.printunlock>
  41dfee:	e8 0d 3b 00 00 	callq	15117 <runtime.printlock>
  41dff3:	e8 98 3d 00 00 	callq	15768 <runtime.printnl>
  41dff8:	e8 83 3b 00 00 	callq	15235 <runtime.printunlock>
  41dffd:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41e002:	48 8b 40 30 	movq	48(%rax), %rax
  41e006:	c6 80 29 01 00 00 00 	movb	$0, 297(%rax)
  41e00d:	48 8d 05 e4 59 0a 00 	leaq	678372(%rip), %rax
  41e014:	48 89 04 24 	movq	%rax, (%rsp)
  41e018:	e8 a3 b6 fe ff 	callq	-84317 <runtime.unlock>
  41e01d:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  41e022:	48 83 c4 20 	addq	$32, %rsp
  41e026:	c3 	retq
  41e027:	e8 44 65 02 00 	callq	156996 <runtime.morestack_noctxt>
  41e02c:	e9 1f ff ff ff 	jmp	-225 <runtime.tracegc>
  41e031:	cc 	int3
  41e032:	cc 	int3
  41e033:	cc 	int3
  41e034:	cc 	int3
  41e035:	cc 	int3
  41e036:	cc 	int3
  41e037:	cc 	int3
  41e038:	cc 	int3
  41e039:	cc 	int3
  41e03a:	cc 	int3
  41e03b:	cc 	int3
  41e03c:	cc 	int3
  41e03d:	cc 	int3
  41e03e:	cc 	int3
  41e03f:	cc 	int3

runtime.init.2:
  41e040:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41e049:	48 8b 71 10 	movq	16(%rcx), %rsi
  41e04d:	48 81 fe de fa ff ff 	cmpq	$-1314, %rsi
  41e054:	0f 84 a9 00 00 00 	je	169 <runtime.init.2+0xc3>
  41e05a:	48 8d 84 24 70 03 00 00 	leaq	880(%rsp), %rax
  41e062:	48 29 f0 	subq	%rsi, %rax
  41e065:	48 3d 98 19 00 00 	cmpq	$6552, %rax
  41e06b:	0f 86 92 00 00 00 	jbe	146 <runtime.init.2+0xc3>
  41e071:	48 81 ec a8 16 00 00 	subq	$5800, %rsp
  41e078:	48 89 ac 24 a0 16 00 00 	movq	%rbp, 5792(%rsp)
  41e080:	48 8d ac 24 a0 16 00 00 	leaq	5792(%rsp), %rbp
  41e088:	48 8d 7c 24 10 	leaq	16(%rsp), %rdi
  41e08d:	b9 d2 02 00 00 	movl	$722, %ecx
  41e092:	31 c0 	xorl	%eax, %eax
  41e094:	f3 48 ab 	rep		stosq	%rax, %es:(%rdi)
  41e097:	48 8b 15 ba 6f 08 00 	movq	552890(%rip), %rdx
  41e09e:	48 81 fa 90 16 00 00 	cmpq	$5776, %rdx
  41e0a5:	75 10 	jne	16 <runtime.init.2+0x77>
  41e0a7:	48 8b ac 24 a0 16 00 00 	movq	5792(%rsp), %rbp
  41e0af:	48 81 c4 a8 16 00 00 	addq	$5800, %rsp
  41e0b6:	c3 	retq
  41e0b7:	e8 44 3a 00 00 	callq	14916 <runtime.printlock>
  41e0bc:	48 8b 05 95 6f 08 00 	movq	552853(%rip), %rax
  41e0c3:	48 89 04 24 	movq	%rax, (%rsp)
  41e0c7:	e8 a4 40 00 00 	callq	16548 <runtime.printuint>
  41e0cc:	e8 6f 3c 00 00 	callq	15471 <runtime.printsp>
  41e0d1:	48 c7 04 24 90 16 00 00 	movq	$5776, (%rsp)
  41e0d9:	e8 92 40 00 00 	callq	16530 <runtime.printuint>
  41e0de:	e8 ad 3c 00 00 	callq	15533 <runtime.printnl>
  41e0e3:	e8 98 3a 00 00 	callq	15000 <runtime.printunlock>
  41e0e8:	48 8d 05 13 ed 04 00 	leaq	322835(%rip), %rax
  41e0ef:	48 89 04 24 	movq	%rax, (%rsp)
  41e0f3:	48 c7 44 24 08 24 00 00 00 	movq	$36, 8(%rsp)
  41e0fc:	e8 cf 30 00 00 	callq	12495 <runtime.throw>
  41e101:	0f 0b 	ud2
  41e103:	e8 68 64 02 00 	callq	156776 <runtime.morestack_noctxt>
  41e108:	e9 33 ff ff ff 	jmp	-205 <runtime.init.2>
  41e10d:	cc 	int3
  41e10e:	cc 	int3
  41e10f:	cc 	int3

runtime.cachestats:
  41e110:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41e119:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41e11d:	76 68 	jbe	104 <runtime.cachestats+0x77>
  41e11f:	48 83 ec 28 	subq	$40, %rsp
  41e123:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  41e128:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  41e12d:	48 8b 05 7c 95 08 00 	movq	562556(%rip), %rax
  41e134:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  41e139:	48 8b 0d 78 95 08 00 	movq	562552(%rip), %rcx
  41e140:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  41e145:	31 d2 	xorl	%edx, %edx
  41e147:	eb 03 	jmp	3 <runtime.cachestats+0x3c>
  41e149:	48 ff c2 	incq	%rdx
  41e14c:	48 39 ca 	cmpq	%rcx, %rdx
  41e14f:	7d 2c 	jge	44 <runtime.cachestats+0x6d>
  41e151:	48 8b 1c d0 	movq	(%rax,%rdx,8), %rbx
  41e155:	48 8b 5b 48 	movq	72(%rbx), %rbx
  41e159:	48 85 db 	testq	%rbx, %rbx
  41e15c:	74 eb 	je	-21 <runtime.cachestats+0x39>
  41e15e:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  41e163:	48 89 1c 24 	movq	%rbx, (%rsp)
  41e167:	e8 a4 00 00 00 	callq	164 <runtime.purgecachedstats>
  41e16c:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41e171:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  41e176:	48 8b 54 24 08 	movq	8(%rsp), %rdx
  41e17b:	eb cc 	jmp	-52 <runtime.cachestats+0x39>
  41e17d:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  41e182:	48 83 c4 28 	addq	$40, %rsp
  41e186:	c3 	retq
  41e187:	e8 e4 63 02 00 	callq	156644 <runtime.morestack_noctxt>
  41e18c:	eb 82 	jmp	-126 <runtime.cachestats>
  41e18e:	cc 	int3
  41e18f:	cc 	int3

runtime.flushmcache:
  41e190:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41e199:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41e19d:	76 6a 	jbe	106 <runtime.flushmcache+0x79>
  41e19f:	48 83 ec 18 	subq	$24, %rsp
  41e1a3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  41e1a8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  41e1ad:	48 8b 05 fc 94 08 00 	movq	562428(%rip), %rax
  41e1b4:	48 8b 0d fd 94 08 00 	movq	562429(%rip), %rcx
  41e1bb:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  41e1c0:	48 39 ca 	cmpq	%rcx, %rdx
  41e1c3:	73 3d 	jae	61 <runtime.flushmcache+0x72>
  41e1c5:	48 8b 04 d0 	movq	(%rax,%rdx,8), %rax
  41e1c9:	48 8b 40 48 	movq	72(%rax), %rax
  41e1cd:	48 85 c0 	testq	%rax, %rax
  41e1d0:	74 26 	je	38 <runtime.flushmcache+0x68>
  41e1d2:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41e1d7:	48 89 04 24 	movq	%rax, (%rsp)
  41e1db:	e8 90 03 ff ff 	callq	-64624 <runtime.(*mcache).releaseAll>
  41e1e0:	48 8b 44 24 08 	movq	8(%rsp), %rax
  41e1e5:	48 89 04 24 	movq	%rax, (%rsp)
  41e1e9:	e8 42 62 01 00 	callq	90690 <runtime.stackcache_clear>
  41e1ee:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  41e1f3:	48 83 c4 18 	addq	$24, %rsp
  41e1f7:	c3 	retq
  41e1f8:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  41e1fd:	48 83 c4 18 	addq	$24, %rsp
  41e201:	c3 	retq
  41e202:	e8 39 18 00 00 	callq	6201 <runtime.panicindex>
  41e207:	0f 0b 	ud2
  41e209:	e8 62 63 02 00 	callq	156514 <runtime.morestack_noctxt>
  41e20e:	eb 80 	jmp	-128 <runtime.flushmcache>

runtime.purgecachedstats:
  41e210:	48 8b 44 24 08 	movq	8(%rsp), %rax
  41e215:	48 8b 48 08 	movq	8(%rax), %rcx
  41e219:	48 03 0d 28 7c 0a 00 	addq	687144(%rip), %rcx
  41e220:	48 89 0d 21 7c 0a 00 	movq	%rcx, 687137(%rip)
  41e227:	48 c7 40 08 00 00 00 00 	movq	$0, 8(%rax)
  41e22f:	48 8b 48 20 	movq	32(%rax), %rcx
  41e233:	48 03 0d ee 7b 0a 00 	addq	687086(%rip), %rcx
  41e23a:	48 89 0d e7 7b 0a 00 	movq	%rcx, 687079(%rip)
  41e241:	48 c7 40 20 00 00 00 00 	movq	$0, 32(%rax)
  41e249:	48 8b 88 98 04 00 00 	movq	1176(%rax), %rcx
  41e250:	48 03 0d c1 64 0a 00 	addq	681153(%rip), %rcx
  41e257:	48 89 0d ba 64 0a 00 	movq	%rcx, 681146(%rip)
  41e25e:	48 c7 80 98 04 00 00 00 00 00 00 	movq	$0, 1176(%rax)
  41e269:	48 8b 88 a0 04 00 00 	movq	1184(%rax), %rcx
  41e270:	48 03 0d 19 f1 08 00 	addq	586009(%rip), %rcx
  41e277:	48 89 0d 12 f1 08 00 	movq	%rcx, 586002(%rip)
  41e27e:	48 c7 80 a0 04 00 00 00 00 00 00 	movq	$0, 1184(%rax)
  41e289:	48 8b 88 a8 04 00 00 	movq	1192(%rax), %rcx
  41e290:	48 03 0d 01 f1 08 00 	addq	585985(%rip), %rcx
  41e297:	48 89 0d fa f0 08 00 	movq	%rcx, 585978(%rip)
  41e29e:	48 c7 80 a8 04 00 00 00 00 00 00 	movq	$0, 1192(%rax)
  41e2a9:	31 c9 	xorl	%ecx, %ecx
  41e2ab:	eb 34 	jmp	52 <runtime.purgecachedstats+0xd1>
  41e2ad:	48 8d 15 ec df 08 00 	leaq	581612(%rip), %rdx
  41e2b4:	48 8d 9c ca 00 11 00 00 	leaq	4352(%rdx,%rcx,8), %rbx
  41e2bc:	48 8b b4 c8 b0 04 00 00 	movq	1200(%rax,%rcx,8), %rsi
  41e2c4:	48 03 33 	addq	(%rbx), %rsi
  41e2c7:	48 8d 1d d2 f0 08 00 	leaq	585938(%rip), %rbx
  41e2ce:	48 89 34 cb 	movq	%rsi, (%rbx,%rcx,8)
  41e2d2:	48 c7 84 c8 b0 04 00 00 00 00 00 00 	movq	$0, 1200(%rax,%rcx,8)
  41e2de:	48 ff c1 	incq	%rcx
  41e2e1:	48 83 f9 43 	cmpq	$67, %rcx
  41e2e5:	7c c6 	jl	-58 <runtime.purgecachedstats+0x9d>
  41e2e7:	c3 	retq
  41e2e8:	cc 	int3
  41e2e9:	cc 	int3
  41e2ea:	cc 	int3
  41e2eb:	cc 	int3
  41e2ec:	cc 	int3
  41e2ed:	cc 	int3
  41e2ee:	cc 	int3
  41e2ef:	cc 	int3

runtime.mSysStatInc:
  41e2f0:	48 83 ec 20 	subq	$32, %rsp
  41e2f4:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  41e2f9:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  41e2fe:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41e303:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  41e308:	48 89 c2 	movq	%rax, %rdx
  41e30b:	f0 	lock
  41e30c:	48 0f c1 01 	xaddq	%rax, (%rcx)
  41e310:	48 01 d0 	addq	%rdx, %rax
  41e313:	48 39 d0 	cmpq	%rdx, %rax
  41e316:	72 0a 	jb	10 <runtime.mSysStatInc+0x32>
  41e318:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  41e31d:	48 83 c4 20 	addq	$32, %rsp
  41e321:	c3 	retq
  41e322:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  41e327:	e8 d4 37 00 00 	callq	14292 <runtime.printlock>
  41e32c:	48 8d 05 b7 de 04 00 	leaq	319159(%rip), %rax
  41e333:	48 89 04 24 	movq	%rax, (%rsp)
  41e337:	48 c7 44 24 08 1c 00 00 00 	movq	$28, 8(%rsp)
  41e340:	e8 fb 40 00 00 	callq	16635 <runtime.printstring>
  41e345:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41e34a:	48 89 04 24 	movq	%rax, (%rsp)
  41e34e:	e8 1d 3e 00 00 	callq	15901 <runtime.printuint>
  41e353:	48 8d 05 90 b9 04 00 	leaq	309648(%rip), %rax
  41e35a:	48 89 04 24 	movq	%rax, (%rsp)
  41e35e:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  41e367:	e8 d4 40 00 00 	callq	16596 <runtime.printstring>
  41e36c:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41e371:	48 89 04 24 	movq	%rax, (%rsp)
  41e375:	e8 f6 3d 00 00 	callq	15862 <runtime.printuint>
  41e37a:	e8 11 3a 00 00 	callq	14865 <runtime.printnl>
  41e37f:	e8 fc 37 00 00 	callq	14332 <runtime.printunlock>
  41e384:	c7 04 24 02 00 00 00 	movl	$2, (%rsp)
  41e38b:	e8 40 94 02 00 	callq	169024 <runtime.exit>
  41e390:	eb 86 	jmp	-122 <runtime.mSysStatInc+0x28>
  41e392:	cc 	int3
  41e393:	cc 	int3
  41e394:	cc 	int3
  41e395:	cc 	int3
  41e396:	cc 	int3
  41e397:	cc 	int3
  41e398:	cc 	int3
  41e399:	cc 	int3
  41e39a:	cc 	int3
  41e39b:	cc 	int3
  41e39c:	cc 	int3
  41e39d:	cc 	int3
  41e39e:	cc 	int3
  41e39f:	cc 	int3

runtime.mSysStatDec:
  41e3a0:	48 83 ec 20 	subq	$32, %rsp
  41e3a4:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  41e3a9:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  41e3ae:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41e3b3:	48 89 c1 	movq	%rax, %rcx
  41e3b6:	48 f7 d8 	negq	%rax
  41e3b9:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  41e3be:	f0 	lock
  41e3bf:	48 0f c1 02 	xaddq	%rax, (%rdx)
  41e3c3:	48 29 c8 	subq	%rcx, %rax
  41e3c6:	48 8d 14 08 	leaq	(%rax,%rcx), %rdx
  41e3ca:	48 39 ca 	cmpq	%rcx, %rdx
  41e3cd:	72 0a 	jb	10 <runtime.mSysStatDec+0x39>
  41e3cf:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  41e3d4:	48 83 c4 20 	addq	$32, %rsp
  41e3d8:	c3 	retq
  41e3d9:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  41e3de:	e8 1d 37 00 00 	callq	14109 <runtime.printlock>
  41e3e3:	48 8d 05 5b df 04 00 	leaq	319323(%rip), %rax
  41e3ea:	48 89 04 24 	movq	%rax, (%rsp)
  41e3ee:	48 c7 44 24 08 1d 00 00 00 	movq	$29, 8(%rsp)
  41e3f7:	e8 44 40 00 00 	callq	16452 <runtime.printstring>
  41e3fc:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41e401:	48 89 04 24 	movq	%rax, (%rsp)
  41e405:	e8 66 3d 00 00 	callq	15718 <runtime.printuint>
  41e40a:	48 8d 05 d9 b8 04 00 	leaq	309465(%rip), %rax
  41e411:	48 89 04 24 	movq	%rax, (%rsp)
  41e415:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  41e41e:	e8 1d 40 00 00 	callq	16413 <runtime.printstring>
  41e423:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41e428:	48 89 04 24 	movq	%rax, (%rsp)
  41e42c:	e8 3f 3d 00 00 	callq	15679 <runtime.printuint>
  41e431:	e8 5a 39 00 00 	callq	14682 <runtime.printnl>
  41e436:	e8 45 37 00 00 	callq	14149 <runtime.printunlock>
  41e43b:	c7 04 24 02 00 00 00 	movl	$2, (%rsp)
  41e442:	e8 89 93 02 00 	callq	168841 <runtime.exit>
  41e447:	eb 86 	jmp	-122 <runtime.mSysStatDec+0x2f>
  41e449:	cc 	int3
  41e44a:	cc 	int3
  41e44b:	cc 	int3
  41e44c:	cc 	int3
  41e44d:	cc 	int3
  41e44e:	cc 	int3
  41e44f:	cc 	int3

runtime.(*wbBuf).reset:
  41e450:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41e459:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41e45d:	76 7a 	jbe	122 <runtime.(*wbBuf).reset+0x89>
  41e45f:	48 83 ec 18 	subq	$24, %rsp
  41e463:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  41e468:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  41e46d:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41e472:	48 8d 48 10 	leaq	16(%rax), %rcx
  41e476:	48 89 08 	movq	%rcx, (%rax)
  41e479:	0f b6 15 27 54 0a 00 	movzbl	676903(%rip), %edx
  41e480:	84 d2 	testb	%dl, %dl
  41e482:	74 22 	je	34 <runtime.(*wbBuf).reset+0x56>
  41e484:	48 8d 48 20 	leaq	32(%rax), %rcx
  41e488:	48 89 48 08 	movq	%rcx, 8(%rax)
  41e48c:	48 8b 48 08 	movq	8(%rax), %rcx
  41e490:	48 2b 08 	subq	(%rax), %rcx
  41e493:	48 f7 c1 0f 00 00 00 	testq	$15, %rcx
  41e49a:	75 22 	jne	34 <runtime.(*wbBuf).reset+0x6e>
  41e49c:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  41e4a1:	48 83 c4 18 	addq	$24, %rsp
  41e4a5:	c3 	retq
  41e4a6:	0f b6 15 68 55 0a 00 	movzbl	677224(%rip), %edx
  41e4ad:	84 d2 	testb	%dl, %dl
  41e4af:	75 d3 	jne	-45 <runtime.(*wbBuf).reset+0x34>
  41e4b1:	48 81 c1 00 10 00 00 	addq	$4096, %rcx
  41e4b8:	48 89 48 08 	movq	%rcx, 8(%rax)
  41e4bc:	eb ce 	jmp	-50 <runtime.(*wbBuf).reset+0x3c>
  41e4be:	48 8d 05 6a e1 04 00 	leaq	319850(%rip), %rax
  41e4c5:	48 89 04 24 	movq	%rax, (%rsp)
  41e4c9:	48 c7 44 24 08 1f 00 00 00 	movq	$31, 8(%rsp)
  41e4d2:	e8 f9 2c 00 00 	callq	11513 <runtime.throw>
  41e4d7:	0f 0b 	ud2
  41e4d9:	e8 92 60 02 00 	callq	155794 <runtime.morestack_noctxt>
  41e4de:	e9 6d ff ff ff 	jmp	-147 <runtime.(*wbBuf).reset>
  41e4e3:	cc 	int3
  41e4e4:	cc 	int3
  41e4e5:	cc 	int3
  41e4e6:	cc 	int3
  41e4e7:	cc 	int3
  41e4e8:	cc 	int3
  41e4e9:	cc 	int3
  41e4ea:	cc 	int3
  41e4eb:	cc 	int3
  41e4ec:	cc 	int3
  41e4ed:	cc 	int3
  41e4ee:	cc 	int3
  41e4ef:	cc 	int3

runtime.wbBufFlush:
  41e4f0:	48 83 ec 18 	subq	$24, %rsp
  41e4f4:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  41e4f9:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  41e4fe:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  41e507:	48 8b 40 30 	movq	48(%rax), %rax
  41e50b:	8b 88 08 01 00 00 	movl	264(%rax), %ecx
  41e511:	85 c9 	testl	%ecx, %ecx
  41e513:	0f 8f 84 00 00 00 	jg	132 <runtime.wbBufFlush+0xad>
  41e519:	0f b6 05 f5 54 0a 00 	movzbl	677109(%rip), %eax
  41e520:	84 c0 	testb	%al, %al
  41e522:	74 0a 	je	10 <runtime.wbBufFlush+0x3e>
  41e524:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41e529:	48 85 c0 	testq	%rax, %rax
  41e52c:	75 1a 	jne	26 <runtime.wbBufFlush+0x58>
  41e52e:	48 8d 05 0b fd 04 00 	leaq	326923(%rip), %rax
  41e535:	48 89 04 24 	movq	%rax, (%rsp)
  41e539:	e8 e2 5e 02 00 	callq	155362 <runtime.systemstack>
  41e53e:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  41e543:	48 83 c4 18 	addq	$24, %rsp
  41e547:	c3 	retq
  41e548:	48 89 04 24 	movq	%rax, (%rsp)
  41e54c:	48 8b 44 24 28 	movq	40(%rsp), %rax
  41e551:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41e556:	e8 e5 3f fe ff 	callq	-114715 <runtime.cgoCheckWriteBarrier>
  41e55b:	0f b6 05 b2 54 0a 00 	movzbl	677042(%rip), %eax
  41e562:	84 c0 	testb	%al, %al
  41e564:	75 c8 	jne	-56 <runtime.wbBufFlush+0x3e>
  41e566:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  41e56f:	48 8b 40 30 	movq	48(%rax), %rax
  41e573:	48 8b 80 d0 00 00 00 	movq	208(%rax), %rax
  41e57a:	84 00 	testb	%al, (%rax)
  41e57c:	48 8d 88 90 12 00 00 	leaq	4752(%rax), %rcx
  41e583:	84 01 	testb	%al, (%rcx)
  41e585:	48 8d 88 a0 12 00 00 	leaq	4768(%rax), %rcx
  41e58c:	48 89 88 90 12 00 00 	movq	%rcx, 4752(%rax)
  41e593:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  41e598:	48 83 c4 18 	addq	$24, %rsp
  41e59c:	c3 	retq
  41e59d:	48 8b 80 d0 00 00 00 	movq	208(%rax), %rax
  41e5a4:	84 00 	testb	%al, (%rax)
  41e5a6:	48 8d 88 90 12 00 00 	leaq	4752(%rax), %rcx
  41e5ad:	84 01 	testb	%al, (%rcx)
  41e5af:	48 8d 88 a0 12 00 00 	leaq	4768(%rax), %rcx
  41e5b6:	48 89 88 90 12 00 00 	movq	%rcx, 4752(%rax)
  41e5bd:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  41e5c2:	48 83 c4 18 	addq	$24, %rsp
  41e5c6:	c3 	retq
  41e5c7:	cc 	int3
  41e5c8:	cc 	int3
  41e5c9:	cc 	int3
  41e5ca:	cc 	int3
  41e5cb:	cc 	int3
  41e5cc:	cc 	int3
  41e5cd:	cc 	int3
  41e5ce:	cc 	int3
  41e5cf:	cc 	int3

runtime.wbBufFlush1:
  41e5d0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41e5d9:	48 3b 61 18 	cmpq	24(%rcx), %rsp
  41e5dd:	0f 86 91 02 00 00 	jbe	657 <runtime.wbBufFlush1+0x2a4>
  41e5e3:	48 83 ec 78 	subq	$120, %rsp
  41e5e7:	48 89 6c 24 70 	movq	%rbp, 112(%rsp)
  41e5ec:	48 8d 6c 24 70 	leaq	112(%rsp), %rbp
  41e5f1:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  41e5f9:	84 00 	testb	%al, (%rax)
  41e5fb:	48 8d 88 a0 12 00 00 	leaq	4768(%rax), %rcx
  41e602:	84 01 	testb	%al, (%rcx)
  41e604:	48 8d 90 a0 12 00 00 	leaq	4768(%rax), %rdx
  41e60b:	48 8b 98 90 12 00 00 	movq	4752(%rax), %rbx
  41e612:	48 29 d3 	subq	%rdx, %rbx
  41e615:	48 c1 eb 03 	shrq	$3, %rbx
  41e619:	48 81 fb 00 02 00 00 	cmpq	$512, %rbx
  41e620:	0f 87 47 02 00 00 	ja	583 <runtime.wbBufFlush1+0x29d>
  41e626:	48 89 4c 24 68 	movq	%rcx, 104(%rsp)
  41e62b:	48 89 5c 24 58 	movq	%rbx, 88(%rsp)
  41e630:	48 8d 88 90 12 00 00 	leaq	4752(%rax), %rcx
  41e637:	48 89 0c 24 	movq	%rcx, (%rsp)
  41e63b:	e8 10 fe ff ff 	callq	-496 <runtime.(*wbBuf).reset>
  41e640:	0f b6 05 78 52 0a 00 	movzbl	676472(%rip), %eax
  41e647:	84 c0 	testb	%al, %al
  41e649:	0f 85 d2 01 00 00 	jne	466 <runtime.wbBufFlush1+0x251>
  41e64f:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  41e657:	48 8d 88 70 12 00 00 	leaq	4720(%rax), %rcx
  41e65e:	48 89 4c 24 60 	movq	%rcx, 96(%rsp)
  41e663:	48 8b 15 5e ef 08 00 	movq	585566(%rip), %rdx
  41e66a:	48 89 54 24 48 	movq	%rdx, 72(%rsp)
  41e66f:	31 db 	xorl	%ebx, %ebx
  41e671:	31 f6 	xorl	%esi, %esi
  41e673:	eb 03 	jmp	3 <runtime.wbBufFlush1+0xa8>
  41e675:	48 ff c3 	incq	%rbx
  41e678:	48 8b 7c 24 58 	movq	88(%rsp), %rdi
  41e67d:	48 39 fb 	cmpq	%rdi, %rbx
  41e680:	0f 8d 3d 01 00 00 	jge	317 <runtime.wbBufFlush1+0x1f3>
  41e686:	4c 8b 84 d8 a0 12 00 00 	movq	4768(%rax,%rbx,8), %r8
  41e68e:	49 39 d0 	cmpq	%rdx, %r8
  41e691:	72 e2 	jb	-30 <runtime.wbBufFlush1+0xa5>
  41e693:	48 89 5c 24 50 	movq	%rbx, 80(%rsp)
  41e698:	48 89 74 24 40 	movq	%rsi, 64(%rsp)
  41e69d:	4c 89 04 24 	movq	%r8, (%rsp)
  41e6a1:	0f 57 c0 	xorps	%xmm0, %xmm0
  41e6a4:	0f 11 44 24 08 	movups	%xmm0, 8(%rsp)
  41e6a9:	e8 f2 db fe ff 	callq	-74766 <runtime.heapBitsForObject>
  41e6ae:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41e6b3:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  41e6b8:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  41e6bd:	48 85 c0 	testq	%rax, %rax
  41e6c0:	75 23 	jne	35 <runtime.wbBufFlush1+0x115>
  41e6c2:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  41e6ca:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  41e6cf:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  41e6d4:	48 8b 5c 24 50 	movq	80(%rsp), %rbx
  41e6d9:	48 8b 7c 24 58 	movq	88(%rsp), %rdi
  41e6de:	48 8b 74 24 40 	movq	64(%rsp), %rsi
  41e6e3:	eb 90 	jmp	-112 <runtime.wbBufFlush1+0xa5>
  41e6e5:	48 8b 59 50 	movq	80(%rcx), %rbx
  41e6e9:	48 89 d6 	movq	%rdx, %rsi
  41e6ec:	48 c1 ea 03 	shrq	$3, %rdx
  41e6f0:	48 8d 3c 13 	leaq	(%rbx,%rdx), %rdi
  41e6f4:	84 07 	testb	%al, (%rdi)
  41e6f6:	48 83 e6 07 	andq	$7, %rsi
  41e6fa:	49 89 c8 	movq	%rcx, %r8
  41e6fd:	48 89 f1 	movq	%rsi, %rcx
  41e700:	41 b9 01 00 00 00 	movl	$1, %r9d
  41e706:	41 d3 e1 	shll	%cl, %r9d
  41e709:	0f b6 14 13 	movzbl	(%rbx,%rdx), %edx
  41e70d:	41 84 d1 	testb	%dl, %r9b
  41e710:	74 26 	je	38 <runtime.wbBufFlush1+0x168>
  41e712:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  41e71a:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  41e71f:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  41e724:	48 8b 5c 24 50 	movq	80(%rsp), %rbx
  41e729:	48 8b 7c 24 58 	movq	88(%rsp), %rdi
  41e72e:	48 8b 74 24 40 	movq	64(%rsp), %rsi
  41e733:	e9 3d ff ff ff 	jmp	-195 <runtime.wbBufFlush1+0xa5>
  41e738:	f0 	lock
  41e739:	44 08 0f 	orb	%r9b, (%rdi)
  41e73c:	41 0f b6 48 62 	movzbl	98(%r8), %ecx
  41e741:	f6 c1 01 	testb	$1, %cl
  41e744:	74 3a 	je	58 <runtime.wbBufFlush1+0x1b0>
  41e746:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  41e74b:	84 01 	testb	%al, (%rcx)
  41e74d:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  41e755:	4c 8b 88 80 12 00 00 	movq	4736(%rax), %r9
  41e75c:	4d 03 48 68 	addq	104(%r8), %r9
  41e760:	4c 89 88 80 12 00 00 	movq	%r9, 4736(%rax)
  41e767:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  41e76c:	48 8b 5c 24 50 	movq	80(%rsp), %rbx
  41e771:	48 8b 7c 24 58 	movq	88(%rsp), %rdi
  41e776:	48 8b 74 24 40 	movq	64(%rsp), %rsi
  41e77b:	e9 f5 fe ff ff 	jmp	-267 <runtime.wbBufFlush1+0xa5>
  41e780:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  41e785:	48 8b 54 24 58 	movq	88(%rsp), %rdx
  41e78a:	48 39 d1 	cmpq	%rdx, %rcx
  41e78d:	0f 83 d3 00 00 00 	jae	211 <runtime.wbBufFlush1+0x296>
  41e793:	4c 8b 84 24 80 00 00 00 	movq	128(%rsp), %r8
  41e79b:	49 89 84 c8 a0 12 00 00 	movq	%rax, 4768(%r8,%rcx,8)
  41e7a3:	48 8d 71 01 	leaq	1(%rcx), %rsi
  41e7a7:	4c 89 c0 	movq	%r8, %rax
  41e7aa:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  41e7af:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  41e7b4:	48 8b 5c 24 50 	movq	80(%rsp), %rbx
  41e7b9:	48 8b 7c 24 58 	movq	88(%rsp), %rdi
  41e7be:	e9 b2 fe ff ff 	jmp	-334 <runtime.wbBufFlush1+0xa5>
  41e7c3:	48 81 fe 00 02 00 00 	cmpq	$512, %rsi
  41e7ca:	0f 87 8f 00 00 00 	ja	143 <runtime.wbBufFlush1+0x28f>
  41e7d0:	48 89 0c 24 	movq	%rcx, (%rsp)
  41e7d4:	48 8b 44 24 68 	movq	104(%rsp), %rax
  41e7d9:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41e7de:	48 89 74 24 10 	movq	%rsi, 16(%rsp)
  41e7e3:	48 c7 44 24 18 00 02 00 00 	movq	$512, 24(%rsp)
  41e7ec:	e8 bf a6 ff ff 	callq	-22849 <runtime.(*gcWork).putBatch>
  41e7f1:	8b 05 e5 50 0a 00 	movl	676069(%rip), %eax
  41e7f7:	83 f8 02 	cmpl	$2, %eax
  41e7fa:	75 18 	jne	24 <runtime.wbBufFlush1+0x244>
  41e7fc:	48 8b 44 24 60 	movq	96(%rsp), %rax
  41e801:	48 89 04 24 	movq	%rax, (%rsp)
  41e805:	e8 76 aa ff ff 	callq	-21898 <runtime.(*gcWork).dispose>
  41e80a:	48 8b 6c 24 70 	movq	112(%rsp), %rbp
  41e80f:	48 83 c4 78 	addq	$120, %rsp
  41e813:	c3 	retq
  41e814:	0f b6 05 8c 50 0a 00 	movzbl	675980(%rip), %eax
  41e81b:	84 c0 	testb	%al, %al
  41e81d:	75 dd 	jne	-35 <runtime.wbBufFlush1+0x22c>
  41e81f:	eb e9 	jmp	-23 <runtime.wbBufFlush1+0x23a>
  41e821:	31 c0 	xorl	%eax, %eax
  41e823:	eb 26 	jmp	38 <runtime.wbBufFlush1+0x27b>
  41e825:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  41e82a:	48 8b 8c 24 80 00 00 00 	movq	128(%rsp), %rcx
  41e832:	48 8b 94 c1 a0 12 00 00 	movq	4768(%rcx,%rax,8), %rdx
  41e83a:	48 89 14 24 	movq	%rdx, (%rsp)
  41e83e:	e8 1d 82 ff ff 	callq	-32227 <runtime.shade>
  41e843:	48 8b 44 24 50 	movq	80(%rsp), %rax
  41e848:	48 ff c0 	incq	%rax
  41e84b:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  41e850:	48 39 c8 	cmpq	%rcx, %rax
  41e853:	7c d0 	jl	-48 <runtime.wbBufFlush1+0x255>
  41e855:	48 8b 6c 24 70 	movq	112(%rsp), %rbp
  41e85a:	48 83 c4 78 	addq	$120, %rsp
  41e85e:	c3 	retq
  41e85f:	e8 4c 12 00 00 	callq	4684 <runtime.panicslice>
  41e864:	0f 0b 	ud2
  41e866:	e8 d5 11 00 00 	callq	4565 <runtime.panicindex>
  41e86b:	0f 0b 	ud2
  41e86d:	e8 3e 12 00 00 	callq	4670 <runtime.panicslice>
  41e872:	0f 0b 	ud2
  41e874:	e8 87 84 01 00 	callq	99463 <runtime.morestackc>
  41e879:	e9 52 fd ff ff 	jmp	-686 <runtime.wbBufFlush1>
  41e87e:	cc 	int3
  41e87f:	cc 	int3

runtime.netpollready:
  41e880:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41e889:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41e88d:	0f 86 e7 00 00 00 	jbe	231 <runtime.netpollready+0xfa>
  41e893:	48 83 ec 30 	subq	$48, %rsp
  41e897:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  41e89c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  41e8a1:	48 c7 44 24 20 00 00 00 00 	movq	$0, 32(%rsp)
  41e8aa:	48 c7 44 24 18 00 00 00 00 	movq	$0, 24(%rsp)
  41e8b3:	8b 44 24 48 	movl	72(%rsp), %eax
  41e8b7:	83 f8 72 	cmpl	$114, %eax
  41e8ba:	0f 85 aa 00 00 00 	jne	170 <runtime.netpollready+0xea>
  41e8c0:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41e8c5:	48 89 04 24 	movq	%rax, (%rsp)
  41e8c9:	c7 44 24 08 72 00 00 00 	movl	$114, 8(%rsp)
  41e8d1:	c6 44 24 0c 01 	movb	$1, 12(%rsp)
  41e8d6:	e8 b5 00 00 00 	callq	181 <runtime.netpollunblock>
  41e8db:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41e8e0:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  41e8e5:	8b 44 24 48 	movl	72(%rsp), %eax
  41e8e9:	83 f8 77 	cmpl	$119, %eax
  41e8ec:	75 73 	jne	115 <runtime.netpollready+0xe1>
  41e8ee:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41e8f3:	48 89 04 24 	movq	%rax, (%rsp)
  41e8f7:	c7 44 24 08 77 00 00 00 	movl	$119, 8(%rsp)
  41e8ff:	c6 44 24 0c 01 	movb	$1, 12(%rsp)
  41e904:	e8 87 00 00 00 	callq	135 <runtime.netpollunblock>
  41e909:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41e90e:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  41e913:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41e918:	48 85 c0 	testq	%rax, %rax
  41e91b:	74 3d 	je	61 <runtime.netpollready+0xda>
  41e91d:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  41e922:	48 8b 11 	movq	(%rcx), %rdx
  41e925:	48 89 90 b8 00 00 00 	movq	%rdx, 184(%rax)
  41e92c:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41e931:	48 89 01 	movq	%rax, (%rcx)
  41e934:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41e939:	48 85 c0 	testq	%rax, %rax
  41e93c:	74 12 	je	18 <runtime.netpollready+0xd0>
  41e93e:	48 8b 11 	movq	(%rcx), %rdx
  41e941:	48 89 90 b8 00 00 00 	movq	%rdx, 184(%rax)
  41e948:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41e94d:	48 89 01 	movq	%rax, (%rcx)
  41e950:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  41e955:	48 83 c4 30 	addq	$48, %rsp
  41e959:	c3 	retq
  41e95a:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  41e95f:	eb d3 	jmp	-45 <runtime.netpollready+0xb4>
  41e961:	3d e9 00 00 00 	cmpl	$233, %eax
  41e966:	74 86 	je	-122 <runtime.netpollready+0x6e>
  41e968:	eb a9 	jmp	-87 <runtime.netpollready+0x93>
  41e96a:	3d e9 00 00 00 	cmpl	$233, %eax
  41e96f:	0f 84 4b ff ff ff 	je	-181 <runtime.netpollready+0x40>
  41e975:	e9 6b ff ff ff 	jmp	-149 <runtime.netpollready+0x65>
  41e97a:	e8 f1 5b 02 00 	callq	154609 <runtime.morestack_noctxt>
  41e97f:	e9 fc fe ff ff 	jmp	-260 <runtime.netpollready>
  41e984:	cc 	int3
  41e985:	cc 	int3
  41e986:	cc 	int3
  41e987:	cc 	int3
  41e988:	cc 	int3
  41e989:	cc 	int3
  41e98a:	cc 	int3
  41e98b:	cc 	int3
  41e98c:	cc 	int3
  41e98d:	cc 	int3
  41e98e:	cc 	int3
  41e98f:	cc 	int3

runtime.netpollunblock:
  41e990:	48 83 ec 10 	subq	$16, %rsp
  41e994:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  41e999:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  41e99e:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  41e9a3:	84 01 	testb	%al, (%rcx)
  41e9a5:	48 8d 51 28 	leaq	40(%rcx), %rdx
  41e9a9:	8b 5c 24 20 	movl	32(%rsp), %ebx
  41e9ad:	83 fb 77 	cmpl	$119, %ebx
  41e9b0:	75 6f 	jne	111 <runtime.netpollunblock+0x91>
  41e9b2:	48 83 c1 78 	addq	$120, %rcx
  41e9b6:	0f b6 54 24 24 	movzbl	36(%rsp), %edx
  41e9bb:	48 8b 01 	movq	(%rcx), %rax
  41e9be:	48 83 f8 01 	cmpq	$1, %rax
  41e9c2:	74 4a 	je	74 <runtime.netpollunblock+0x7e>
  41e9c4:	48 85 c0 	testq	%rax, %rax
  41e9c7:	75 04 	jne	4 <runtime.netpollunblock+0x3d>
  41e9c9:	84 d2 	testb	%dl, %dl
  41e9cb:	74 2e 	je	46 <runtime.netpollunblock+0x6b>
  41e9cd:	48 89 04 24 	movq	%rax, (%rsp)
  41e9d1:	0f b6 da 	movzbl	%dl, %ebx
  41e9d4:	f0 	lock
  41e9d5:	48 0f b1 19 	cmpxchgq	%rbx, (%rcx)
  41e9d9:	0f 94 c3 	sete	%bl
  41e9dc:	84 db 	testb	%bl, %bl
  41e9de:	74 db 	je	-37 <runtime.netpollunblock+0x2b>
  41e9e0:	48 8b 04 24 	movq	(%rsp), %rax
  41e9e4:	48 83 f8 02 	cmpq	$2, %rax
  41e9e8:	75 02 	jne	2 <runtime.netpollunblock+0x5c>
  41e9ea:	31 c0 	xorl	%eax, %eax
  41e9ec:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  41e9f1:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  41e9f6:	48 83 c4 10 	addq	$16, %rsp
  41e9fa:	c3 	retq
  41e9fb:	48 c7 44 24 28 00 00 00 00 	movq	$0, 40(%rsp)
  41ea04:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  41ea09:	48 83 c4 10 	addq	$16, %rsp
  41ea0d:	c3 	retq
  41ea0e:	48 c7 44 24 28 00 00 00 00 	movq	$0, 40(%rsp)
  41ea17:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  41ea1c:	48 83 c4 10 	addq	$16, %rsp
  41ea20:	c3 	retq
  41ea21:	48 89 d1 	movq	%rdx, %rcx
  41ea24:	eb 90 	jmp	-112 <runtime.netpollunblock+0x26>
  41ea26:	cc 	int3
  41ea27:	cc 	int3
  41ea28:	cc 	int3
  41ea29:	cc 	int3
  41ea2a:	cc 	int3
  41ea2b:	cc 	int3
  41ea2c:	cc 	int3
  41ea2d:	cc 	int3
  41ea2e:	cc 	int3
  41ea2f:	cc 	int3

runtime.netpoll:
  41ea30:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41ea39:	48 8d 84 24 40 fa ff ff 	leaq	-1472(%rsp), %rax
  41ea41:	48 3b 41 10 	cmpq	16(%rcx), %rax
  41ea45:	0f 86 fd 01 00 00 	jbe	509 <runtime.netpoll+0x218>
  41ea4b:	48 81 ec 40 06 00 00 	subq	$1600, %rsp
  41ea52:	48 89 ac 24 38 06 00 00 	movq	%rbp, 1592(%rsp)
  41ea5a:	48 8d ac 24 38 06 00 00 	leaq	1592(%rsp), %rbp
  41ea62:	8b 15 9c 65 08 00 	movl	550300(%rip), %edx
  41ea68:	83 fa ff 	cmpl	$-1, %edx
  41ea6b:	0f 84 36 01 00 00 	je	310 <runtime.netpoll+0x177>
  41ea71:	0f b6 94 24 48 06 00 00 	movzbl	1608(%rsp), %edx
  41ea79:	84 d2 	testb	%dl, %dl
  41ea7b:	0f 84 1f 01 00 00 	je	287 <runtime.netpoll+0x170>
  41ea81:	b8 ff ff ff ff 	movl	$4294967295, %eax
  41ea86:	89 44 24 24 	movl	%eax, 36(%rsp)
  41ea8a:	48 8d 7c 24 38 	leaq	56(%rsp), %rdi
  41ea8f:	b9 c0 00 00 00 	movl	$192, %ecx
  41ea94:	89 c3 	movl	%eax, %ebx
  41ea96:	31 c0 	xorl	%eax, %eax
  41ea98:	f3 48 ab 	rep		stosq	%rax, %es:(%rdi)
  41ea9b:	e9 98 00 00 00 	jmp	152 <runtime.netpoll+0x108>
  41eaa0:	ff c1 	incl	%ecx
  41eaa2:	39 c1 	cmpl	%eax, %ecx
  41eaa4:	7d 78 	jge	120 <runtime.netpoll+0xee>
  41eaa6:	48 63 d1 	movslq	%ecx, %rdx
  41eaa9:	48 81 fa 80 00 00 00 	cmpq	$128, %rdx
  41eab0:	0f 83 0d 01 00 00 	jae	269 <runtime.netpoll+0x193>
  41eab6:	48 8d 14 52 	leaq	(%rdx,%rdx,2), %rdx
  41eaba:	48 89 d3 	movq	%rdx, %rbx
  41eabd:	48 c1 e2 02 	shlq	$2, %rdx
  41eac1:	8b 74 9c 38 	movl	56(%rsp,%rbx,4), %esi
  41eac5:	85 f6 	testl	%esi, %esi
  41eac7:	74 d7 	je	-41 <runtime.netpoll+0x70>
  41eac9:	f7 c6 19 20 00 00 	testl	$8217, %esi
  41eacf:	74 49 	je	73 <runtime.netpoll+0xea>
  41ead1:	bf 72 00 00 00 	movl	$114, %edi
  41ead6:	f7 c6 1c 00 00 00 	testl	$28, %esi
  41eadc:	74 38 	je	56 <runtime.netpoll+0xe6>
  41eade:	8d 77 77 	leal	119(%rdi), %esi
  41eae1:	85 f6 	testl	%esi, %esi
  41eae3:	74 bb 	je	-69 <runtime.netpoll+0x70>
  41eae5:	89 4c 24 2c 	movl	%ecx, 44(%rsp)
  41eae9:	48 8d 44 9c 3c 	leaq	60(%rsp,%rbx,4), %rax
  41eaee:	84 00 	testb	%al, (%rax)
  41eaf0:	48 8b 44 14 3c 	movq	60(%rsp,%rdx), %rax
  41eaf5:	48 8d 4c 24 30 	leaq	48(%rsp), %rcx
  41eafa:	48 89 0c 24 	movq	%rcx, (%rsp)
  41eafe:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41eb03:	89 74 24 10 	movl	%esi, 16(%rsp)
  41eb07:	e8 74 fd ff ff 	callq	-652 <runtime.netpollready>
  41eb0c:	8b 44 24 28 	movl	40(%rsp), %eax
  41eb10:	8b 4c 24 2c 	movl	44(%rsp), %ecx
  41eb14:	eb 8a 	jmp	-118 <runtime.netpoll+0x70>
  41eb16:	89 fe 	movl	%edi, %esi
  41eb18:	eb c7 	jmp	-57 <runtime.netpoll+0xb1>
  41eb1a:	31 ff 	xorl	%edi, %edi
  41eb1c:	eb b8 	jmp	-72 <runtime.netpoll+0xa6>
  41eb1e:	0f b6 84 24 48 06 00 00 	movzbl	1608(%rsp), %eax
  41eb26:	84 c0 	testb	%al, %al
  41eb28:	74 59 	je	89 <runtime.netpoll+0x153>
  41eb2a:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  41eb2f:	48 85 c9 	testq	%rcx, %rcx
  41eb32:	75 4f 	jne	79 <runtime.netpoll+0x153>
  41eb34:	8b 5c 24 24 	movl	36(%rsp), %ebx
  41eb38:	48 8d 44 24 38 	leaq	56(%rsp), %rax
  41eb3d:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41eb42:	8b 05 bc 64 08 00 	movl	550076(%rip), %eax
  41eb48:	89 04 24 	movl	%eax, (%rsp)
  41eb4b:	c7 44 24 10 80 00 00 00 	movl	$128, 16(%rsp)
  41eb53:	89 5c 24 14 	movl	%ebx, 20(%rsp)
  41eb57:	e8 24 94 02 00 	callq	168996 <runtime.epollwait>
  41eb5c:	8b 44 24 18 	movl	24(%rsp), %eax
  41eb60:	89 44 24 28 	movl	%eax, 40(%rsp)
  41eb64:	85 c0 	testl	%eax, %eax
  41eb66:	7d 0b 	jge	11 <runtime.netpoll+0x143>
  41eb68:	83 f8 fc 	cmpl	$-4, %eax
  41eb6b:	75 5d 	jne	93 <runtime.netpoll+0x19a>
  41eb6d:	8b 5c 24 24 	movl	36(%rsp), %ebx
  41eb71:	eb c5 	jmp	-59 <runtime.netpoll+0x108>
  41eb73:	48 c7 44 24 30 00 00 00 00 	movq	$0, 48(%rsp)
  41eb7c:	31 c9 	xorl	%ecx, %ecx
  41eb7e:	e9 1f ff ff ff 	jmp	-225 <runtime.netpoll+0x72>
  41eb83:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41eb88:	48 89 84 24 50 06 00 00 	movq	%rax, 1616(%rsp)
  41eb90:	48 8b ac 24 38 06 00 00 	movq	1592(%rsp), %rbp
  41eb98:	48 81 c4 40 06 00 00 	addq	$1600, %rsp
  41eb9f:	c3 	retq
  41eba0:	31 c0 	xorl	%eax, %eax
  41eba2:	e9 df fe ff ff 	jmp	-289 <runtime.netpoll+0x56>
  41eba7:	48 c7 84 24 50 06 00 00 00 00 00 00 	movq	$0, 1616(%rsp)
  41ebb3:	48 8b ac 24 38 06 00 00 	movq	1592(%rsp), %rbp
  41ebbb:	48 81 c4 40 06 00 00 	addq	$1600, %rsp
  41ebc2:	c3 	retq
  41ebc3:	e8 78 0e 00 00 	callq	3704 <runtime.panicindex>
  41ebc8:	0f 0b 	ud2
  41ebca:	e8 31 2f 00 00 	callq	12081 <runtime.printlock>
  41ebcf:	48 8d 05 ee ce 04 00 	leaq	315118(%rip), %rax
  41ebd6:	48 89 04 24 	movq	%rax, (%rsp)
  41ebda:	48 c7 44 24 08 19 00 00 00 	movq	$25, 8(%rsp)
  41ebe3:	e8 58 38 00 00 	callq	14424 <runtime.printstring>
  41ebe8:	48 63 05 15 64 08 00 	movslq	549909(%rip), %rax
  41ebef:	48 89 04 24 	movq	%rax, (%rsp)
  41ebf3:	e8 88 36 00 00 	callq	13960 <runtime.printint>
  41ebf8:	48 8d 05 72 ba 04 00 	leaq	309874(%rip), %rax
  41ebff:	48 89 04 24 	movq	%rax, (%rsp)
  41ec03:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  41ec0c:	e8 2f 38 00 00 	callq	14383 <runtime.printstring>
  41ec11:	8b 44 24 28 	movl	40(%rsp), %eax
  41ec15:	f7 d8 	negl	%eax
  41ec17:	48 63 c0 	movslq	%eax, %rax
  41ec1a:	48 89 04 24 	movq	%rax, (%rsp)
  41ec1e:	e8 5d 36 00 00 	callq	13917 <runtime.printint>
  41ec23:	e8 68 31 00 00 	callq	12648 <runtime.printnl>
  41ec28:	e8 53 2f 00 00 	callq	12115 <runtime.printunlock>
  41ec2d:	48 8d 05 43 cb 04 00 	leaq	314179(%rip), %rax
  41ec34:	48 89 04 24 	movq	%rax, (%rsp)
  41ec38:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  41ec41:	e8 8a 25 00 00 	callq	9610 <runtime.throw>
  41ec46:	0f 0b 	ud2
  41ec48:	e8 23 59 02 00 	callq	153891 <runtime.morestack_noctxt>
  41ec4d:	e9 de fd ff ff 	jmp	-546 <runtime.netpoll>
  41ec52:	cc 	int3
  41ec53:	cc 	int3
  41ec54:	cc 	int3
  41ec55:	cc 	int3
  41ec56:	cc 	int3
  41ec57:	cc 	int3
  41ec58:	cc 	int3
  41ec59:	cc 	int3
  41ec5a:	cc 	int3
  41ec5b:	cc 	int3
  41ec5c:	cc 	int3
  41ec5d:	cc 	int3
  41ec5e:	cc 	int3
  41ec5f:	cc 	int3

runtime.futexsleep:
  41ec60:	48 83 ec 48 	subq	$72, %rsp
  41ec64:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  41ec69:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  41ec6e:	0f 57 c0 	xorps	%xmm0, %xmm0
  41ec71:	0f 11 44 24 30 	movups	%xmm0, 48(%rsp)
  41ec76:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  41ec7b:	48 85 c9 	testq	%rcx, %rcx
  41ec7e:	7d 35 	jge	53 <runtime.futexsleep+0x55>
  41ec80:	48 8b 44 24 50 	movq	80(%rsp), %rax
  41ec85:	48 89 04 24 	movq	%rax, (%rsp)
  41ec89:	c7 44 24 08 00 00 00 00 	movl	$0, 8(%rsp)
  41ec91:	8b 44 24 58 	movl	88(%rsp), %eax
  41ec95:	89 44 24 0c 	movl	%eax, 12(%rsp)
  41ec99:	0f 11 44 24 10 	movups	%xmm0, 16(%rsp)
  41ec9e:	c7 44 24 20 00 00 00 00 	movl	$0, 32(%rsp)
  41eca6:	e8 65 91 02 00 	callq	168293 <runtime.futex>
  41ecab:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  41ecb0:	48 83 c4 48 	addq	$72, %rsp
  41ecb4:	c3 	retq
  41ecb5:	48 b8 cc 52 5a 9b a0 2f b8 44 	movabsq	$4951760157141521100, %rax
  41ecbf:	48 f7 e9 	imulq	%rcx
  41ecc2:	48 89 cb 	movq	%rcx, %rbx
  41ecc5:	48 c1 f9 3f 	sarq	$63, %rcx
  41ecc9:	48 c1 fa 1c 	sarq	$28, %rdx
  41eccd:	48 29 ca 	subq	%rcx, %rdx
  41ecd0:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  41ecd5:	48 69 d2 00 ca 9a 3b 	imulq	$1000000000, %rdx, %rdx
  41ecdc:	48 29 d3 	subq	%rdx, %rbx
  41ecdf:	48 63 cb 	movslq	%ebx, %rcx
  41ece2:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  41ece7:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  41ecec:	48 89 0c 24 	movq	%rcx, (%rsp)
  41ecf0:	c7 44 24 08 00 00 00 00 	movl	$0, 8(%rsp)
  41ecf8:	8b 4c 24 58 	movl	88(%rsp), %ecx
  41ecfc:	89 4c 24 0c 	movl	%ecx, 12(%rsp)
  41ed00:	48 8d 4c 24 30 	leaq	48(%rsp), %rcx
  41ed05:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  41ed0a:	48 c7 44 24 18 00 00 00 00 	movq	$0, 24(%rsp)
  41ed13:	c7 44 24 20 00 00 00 00 	movl	$0, 32(%rsp)
  41ed1b:	e8 f0 90 02 00 	callq	168176 <runtime.futex>
  41ed20:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  41ed25:	48 83 c4 48 	addq	$72, %rsp
  41ed29:	c3 	retq
  41ed2a:	cc 	int3
  41ed2b:	cc 	int3
  41ed2c:	cc 	int3
  41ed2d:	cc 	int3
  41ed2e:	cc 	int3
  41ed2f:	cc 	int3

runtime.futexwakeup:
  41ed30:	48 83 ec 50 	subq	$80, %rsp
  41ed34:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  41ed39:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  41ed3e:	48 8b 44 24 58 	movq	88(%rsp), %rax
  41ed43:	48 89 04 24 	movq	%rax, (%rsp)
  41ed47:	c7 44 24 08 01 00 00 00 	movl	$1, 8(%rsp)
  41ed4f:	8b 4c 24 60 	movl	96(%rsp), %ecx
  41ed53:	89 4c 24 0c 	movl	%ecx, 12(%rsp)
  41ed57:	0f 57 c0 	xorps	%xmm0, %xmm0
  41ed5a:	0f 11 44 24 10 	movups	%xmm0, 16(%rsp)
  41ed5f:	c7 44 24 20 00 00 00 00 	movl	$0, 32(%rsp)
  41ed67:	e8 a4 90 02 00 	callq	168100 <runtime.futex>
  41ed6c:	8b 44 24 28 	movl	40(%rsp), %eax
  41ed70:	85 c0 	testl	%eax, %eax
  41ed72:	7c 0a 	jl	10 <runtime.futexwakeup+0x4e>
  41ed74:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  41ed79:	48 83 c4 50 	addq	$80, %rsp
  41ed7d:	c3 	retq
  41ed7e:	48 8d 0d db 3d 02 00 	leaq	146907(%rip), %rcx
  41ed85:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  41ed8a:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  41ed8f:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  41ed94:	89 44 24 40 	movl	%eax, 64(%rsp)
  41ed98:	48 8d 44 24 30 	leaq	48(%rsp), %rax
  41ed9d:	48 89 04 24 	movq	%rax, (%rsp)
  41eda1:	e8 7a 56 02 00 	callq	153210 <runtime.systemstack>
  41eda6:	b8 06 10 00 00 	movl	$4102, %eax
  41edab:	c7 00 06 10 00 00 	movl	$4102, (%rax)
  41edb1:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  41edb6:	48 83 c4 50 	addq	$80, %rsp
  41edba:	c3 	retq
  41edbb:	cc 	int3
  41edbc:	cc 	int3
  41edbd:	cc 	int3
  41edbe:	cc 	int3
  41edbf:	cc 	int3

runtime.getproccount:
  41edc0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41edc9:	48 8b 71 10 	movq	16(%rcx), %rsi
  41edcd:	48 81 fe de fa ff ff 	cmpq	$-1314, %rsi
  41edd4:	0f 84 db 00 00 00 	je	219 <runtime.getproccount+0xf5>
  41edda:	48 8d 84 24 70 03 00 00 	leaq	880(%rsp), %rax
  41ede2:	48 29 f0 	subq	%rsi, %rax
  41ede5:	48 3d 18 23 00 00 	cmpq	$8984, %rax
  41edeb:	0f 86 c4 00 00 00 	jbe	196 <runtime.getproccount+0xf5>
  41edf1:	48 81 ec 28 20 00 00 	subq	$8232, %rsp
  41edf8:	48 89 ac 24 20 20 00 00 	movq	%rbp, 8224(%rsp)
  41ee00:	48 8d ac 24 20 20 00 00 	leaq	8224(%rsp), %rbp
  41ee08:	48 8d 7c 24 20 	leaq	32(%rsp), %rdi
  41ee0d:	b9 00 04 00 00 	movl	$1024, %ecx
  41ee12:	31 c0 	xorl	%eax, %eax
  41ee14:	f3 48 ab 	rep		stosq	%rax, %es:(%rdi)
  41ee17:	48 8d 54 24 20 	leaq	32(%rsp), %rdx
  41ee1c:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  41ee21:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  41ee29:	48 c7 44 24 08 00 20 00 00 	movq	$8192, 8(%rsp)
  41ee32:	e8 29 91 02 00 	callq	168233 <runtime.sched_getaffinity>
  41ee37:	8b 54 24 18 	movl	24(%rsp), %edx
  41ee3b:	85 d2 	testl	%edx, %edx
  41ee3d:	7c 54 	jl	84 <runtime.getproccount+0xd3>
  41ee3f:	48 63 c2 	movslq	%edx, %rax
  41ee42:	48 3d 00 20 00 00 	cmpq	$8192, %rax
  41ee48:	77 64 	ja	100 <runtime.getproccount+0xee>
  41ee4a:	31 c9 	xorl	%ecx, %ecx
  41ee4c:	31 d2 	xorl	%edx, %edx
  41ee4e:	eb 13 	jmp	19 <runtime.getproccount+0xa3>
  41ee50:	89 de 	movl	%ebx, %esi
  41ee52:	83 e3 01 	andl	$1, %ebx
  41ee55:	01 da 	addl	%ebx, %edx
  41ee57:	40 d0 ee 	shrb	%sil
  41ee5a:	89 f3 	movl	%esi, %ebx
  41ee5c:	84 db 	testb	%bl, %bl
  41ee5e:	75 f0 	jne	-16 <runtime.getproccount+0x90>
  41ee60:	48 ff c1 	incq	%rcx
  41ee63:	48 39 c1 	cmpq	%rax, %rcx
  41ee66:	7d 07 	jge	7 <runtime.getproccount+0xaf>
  41ee68:	0f b6 5c 0c 20 	movzbl	32(%rsp,%rcx), %ebx
  41ee6d:	eb ed 	jmp	-19 <runtime.getproccount+0x9c>
  41ee6f:	85 d2 	testl	%edx, %edx
  41ee71:	75 1c 	jne	28 <runtime.getproccount+0xcf>
  41ee73:	b8 01 00 00 00 	movl	$1, %eax
  41ee78:	89 84 24 30 20 00 00 	movl	%eax, 8240(%rsp)
  41ee7f:	48 8b ac 24 20 20 00 00 	movq	8224(%rsp), %rbp
  41ee87:	48 81 c4 28 20 00 00 	addq	$8232, %rsp
  41ee8e:	c3 	retq
  41ee8f:	89 d0 	movl	%edx, %eax
  41ee91:	eb e5 	jmp	-27 <runtime.getproccount+0xb8>
  41ee93:	c7 84 24 30 20 00 00 01 00 00 00 	movl	$1, 8240(%rsp)
  41ee9e:	48 8b ac 24 20 20 00 00 	movq	8224(%rsp), %rbp
  41eea6:	48 81 c4 28 20 00 00 	addq	$8232, %rsp
  41eead:	c3 	retq
  41eeae:	e8 fd 0b 00 00 	callq	3069 <runtime.panicslice>
  41eeb3:	0f 0b 	ud2
  41eeb5:	e8 b6 56 02 00 	callq	153270 <runtime.morestack_noctxt>
  41eeba:	e9 01 ff ff ff 	jmp	-255 <runtime.getproccount>
  41eebf:	cc 	int3

runtime.newosproc:
  41eec0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41eec9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41eecd:	0f 86 9e 01 00 00 	jbe	414 <runtime.newosproc+0x1b1>
  41eed3:	48 83 ec 60 	subq	$96, %rsp
  41eed7:	48 89 6c 24 58 	movq	%rbp, 88(%rsp)
  41eedc:	48 8d 6c 24 58 	leaq	88(%rsp), %rbp
  41eee1:	48 c7 44 24 38 00 00 00 00 	movq	$0, 56(%rsp)
  41eeea:	c7 04 24 02 00 00 00 	movl	$2, (%rsp)
  41eef1:	48 8d 05 58 61 08 00 	leaq	549208(%rip), %rax
  41eef8:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41eefd:	48 8d 44 24 38 	leaq	56(%rsp), %rax
  41ef02:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  41ef07:	e8 b4 07 00 00 	callq	1972 <runtime.sigprocmask>
  41ef0c:	48 8d 05 cd 77 03 00 	leaq	227277(%rip), %rax
  41ef13:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  41ef18:	48 8d 05 59 f2 04 00 	leaq	324185(%rip), %rax
  41ef1f:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  41ef24:	48 8b 4c 24 68 	movq	104(%rsp), %rcx
  41ef29:	84 00 	testb	%al, (%rax)
  41ef2b:	48 8d 44 24 50 	leaq	80(%rsp), %rax
  41ef30:	84 00 	testb	%al, (%rax)
  41ef32:	48 8b 01 	movq	(%rcx), %rax
  41ef35:	48 8b 0d 3c f2 04 00 	movq	324156(%rip), %rcx
  41ef3c:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  41ef41:	c7 04 24 00 0f 05 00 	movl	$331520, (%rsp)
  41ef48:	48 8b 44 24 70 	movq	112(%rsp), %rax
  41ef4d:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41ef52:	48 8b 44 24 68 	movq	104(%rsp), %rax
  41ef57:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  41ef5c:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  41ef61:	e8 da 8e 02 00 	callq	167642 <runtime.clone>
  41ef66:	8b 44 24 28 	movl	40(%rsp), %eax
  41ef6a:	89 44 24 34 	movl	%eax, 52(%rsp)
  41ef6e:	c7 04 24 02 00 00 00 	movl	$2, (%rsp)
  41ef75:	48 8d 4c 24 38 	leaq	56(%rsp), %rcx
  41ef7a:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41ef7f:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  41ef88:	e8 33 07 00 00 	callq	1843 <runtime.sigprocmask>
  41ef8d:	8b 44 24 34 	movl	52(%rsp), %eax
  41ef91:	85 c0 	testl	%eax, %eax
  41ef93:	7c 0a 	jl	10 <runtime.newosproc+0xdf>
  41ef95:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  41ef9a:	48 83 c4 60 	addq	$96, %rsp
  41ef9e:	c3 	retq
  41ef9f:	48 8b 05 a2 89 08 00 	movq	559522(%rip), %rax
  41efa6:	48 2b 05 ab 89 08 00 	subq	559531(%rip), %rax
  41efad:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  41efb2:	e8 49 2b 00 00 	callq	11081 <runtime.printlock>
  41efb7:	48 8d 05 9c e7 04 00 	leaq	321436(%rip), %rax
  41efbe:	48 89 04 24 	movq	%rax, (%rsp)
  41efc2:	48 c7 44 24 08 2e 00 00 00 	movq	$46, 8(%rsp)
  41efcb:	e8 70 34 00 00 	callq	13424 <runtime.printstring>
  41efd0:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41efd5:	48 63 c0 	movslq	%eax, %rax
  41efd8:	48 89 04 24 	movq	%rax, (%rsp)
  41efdc:	e8 9f 32 00 00 	callq	12959 <runtime.printint>
  41efe1:	48 8d 05 0a ba 04 00 	leaq	309770(%rip), %rax
  41efe8:	48 89 04 24 	movq	%rax, (%rsp)
  41efec:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  41eff5:	e8 46 34 00 00 	callq	13382 <runtime.printstring>
  41effa:	8b 44 24 34 	movl	52(%rsp), %eax
  41effe:	f7 d8 	negl	%eax
  41f000:	48 63 c0 	movslq	%eax, %rax
  41f003:	48 89 04 24 	movq	%rax, (%rsp)
  41f007:	e8 74 32 00 00 	callq	12916 <runtime.printint>
  41f00c:	48 8d 05 57 ac 04 00 	leaq	306263(%rip), %rax
  41f013:	48 89 04 24 	movq	%rax, (%rsp)
  41f017:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  41f020:	e8 1b 34 00 00 	callq	13339 <runtime.printstring>
  41f025:	e8 56 2b 00 00 	callq	11094 <runtime.printunlock>
  41f02a:	8b 44 24 34 	movl	52(%rsp), %eax
  41f02e:	83 f8 f5 	cmpl	$-11, %eax
  41f031:	75 23 	jne	35 <runtime.newosproc+0x196>
  41f033:	e8 c8 2a 00 00 	callq	10952 <runtime.printlock>
  41f038:	48 8d 05 7e ed 04 00 	leaq	322942(%rip), %rax
  41f03f:	48 89 04 24 	movq	%rax, (%rsp)
  41f043:	48 c7 44 24 08 3d 00 00 00 	movq	$61, 8(%rsp)
  41f04c:	e8 ef 33 00 00 	callq	13295 <runtime.printstring>
  41f051:	e8 2a 2b 00 00 	callq	11050 <runtime.printunlock>
  41f056:	48 8d 05 cc b0 04 00 	leaq	307404(%rip), %rax
  41f05d:	48 89 04 24 	movq	%rax, (%rsp)
  41f061:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  41f06a:	e8 61 21 00 00 	callq	8545 <runtime.throw>
  41f06f:	0f 0b 	ud2
  41f071:	e8 fa 54 02 00 	callq	152826 <runtime.morestack_noctxt>
  41f076:	e9 45 fe ff ff 	jmp	-443 <runtime.newosproc>
  41f07b:	cc 	int3
  41f07c:	cc 	int3
  41f07d:	cc 	int3
  41f07e:	cc 	int3
  41f07f:	cc 	int3

runtime.sysargs:
  41f080:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41f089:	48 8d 84 24 30 fc ff ff 	leaq	-976(%rsp), %rax
  41f091:	48 3b 41 10 	cmpq	16(%rcx), %rax
  41f095:	0f 86 55 02 00 00 	jbe	597 <runtime.sysargs+0x270>
  41f09b:	48 81 ec 50 04 00 00 	subq	$1104, %rsp
  41f0a2:	48 89 ac 24 48 04 00 00 	movq	%rbp, 1096(%rsp)
  41f0aa:	48 8d ac 24 48 04 00 00 	leaq	1096(%rsp), %rbp
  41f0b2:	8b 84 24 58 04 00 00 	movl	1112(%rsp), %eax
  41f0b9:	ff c0 	incl	%eax
  41f0bb:	48 8b 8c 24 60 04 00 00 	movq	1120(%rsp), %rcx
  41f0c3:	eb 02 	jmp	2 <runtime.sysargs+0x47>
  41f0c5:	ff c0 	incl	%eax
  41f0c7:	48 63 d0 	movslq	%eax, %rdx
  41f0ca:	48 8d 1c d1 	leaq	(%rcx,%rdx,8), %rbx
  41f0ce:	84 03 	testb	%al, (%rbx)
  41f0d0:	48 8b 14 d1 	movq	(%rcx,%rdx,8), %rdx
  41f0d4:	48 85 d2 	testq	%rdx, %rdx
  41f0d7:	75 ec 	jne	-20 <runtime.sysargs+0x45>
  41f0d9:	ff c0 	incl	%eax
  41f0db:	48 63 c0 	movslq	%eax, %rax
  41f0de:	48 8d 04 c1 	leaq	(%rcx,%rax,8), %rax
  41f0e2:	84 00 	testb	%al, (%rax)
  41f0e4:	48 89 04 24 	movq	%rax, (%rsp)
  41f0e8:	48 c7 44 24 08 00 00 00 10 	movq	$268435456, 8(%rsp)
  41f0f1:	48 c7 44 24 10 00 00 00 10 	movq	$268435456, 16(%rsp)
  41f0fa:	e8 01 02 00 00 	callq	513 <runtime.sysauxv>
  41f0ff:	48 8b 44 24 18 	movq	24(%rsp), %rax
  41f104:	48 85 c0 	testq	%rax, %rax
  41f107:	0f 85 cc 01 00 00 	jne	460 <runtime.sysargs+0x259>
  41f10d:	48 8b 05 94 6a 08 00 	movq	551572(%rip), %rax
  41f114:	48 8b 0d 85 6a 08 00 	movq	551557(%rip), %rcx
  41f11b:	48 85 c0 	testq	%rax, %rax
  41f11e:	0f 86 c5 01 00 00 	jbe	453 <runtime.sysargs+0x269>
  41f124:	48 89 0c 24 	movq	%rcx, (%rsp)
  41f128:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  41f131:	e8 ca 86 02 00 	callq	165578 <runtime.open>
  41f136:	8b 44 24 10 	movl	16(%rsp), %eax
  41f13a:	85 c0 	testl	%eax, %eax
  41f13c:	0f 8d f6 00 00 00 	jge	246 <runtime.sysargs+0x1b8>
  41f142:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  41f14a:	48 c7 44 24 08 00 00 04 00 	movq	$262144, 8(%rsp)
  41f153:	48 b8 03 00 00 00 22 00 00 00 	movabsq	$146028888067, %rax
  41f15d:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  41f162:	b8 ff ff ff ff 	movl	$4294967295, %eax
  41f167:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  41f16c:	e8 ff 2d fe ff 	callq	-119297 <runtime.mmap>
  41f171:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41f176:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  41f17b:	48 85 c9 	testq	%rcx, %rcx
  41f17e:	0f 85 a4 00 00 00 	jne	164 <runtime.sysargs+0x1a8>
  41f184:	48 89 84 24 40 04 00 00 	movq	%rax, 1088(%rsp)
  41f18c:	b9 00 10 00 00 	movl	$4096, %ecx
  41f191:	eb 10 	jmp	16 <runtime.sysargs+0x123>
  41f193:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  41f198:	48 d1 e1 	shlq	%rcx
  41f19b:	48 8b 84 24 40 04 00 00 	movq	1088(%rsp), %rax
  41f1a3:	48 81 f9 00 00 04 00 	cmpq	$262144, %rcx
  41f1aa:	73 3b 	jae	59 <runtime.sysargs+0x167>
  41f1ac:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  41f1b1:	48 8d 15 e9 46 0a 00 	leaq	673513(%rip), %rdx
  41f1b8:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  41f1bd:	48 8d 14 01 	leaq	(%rcx,%rax), %rdx
  41f1c1:	48 89 14 24 	movq	%rdx, (%rsp)
  41f1c5:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  41f1ce:	e8 ad 87 02 00 	callq	165805 <runtime.mincore>
  41f1d3:	8b 44 24 18 	movl	24(%rsp), %eax
  41f1d7:	85 c0 	testl	%eax, %eax
  41f1d9:	75 b8 	jne	-72 <runtime.sysargs+0x113>
  41f1db:	48 8b 44 24 38 	movq	56(%rsp), %rax
  41f1e0:	48 89 05 b9 47 0a 00 	movq	%rax, 673721(%rip)
  41f1e7:	48 8b 05 b2 47 0a 00 	movq	673714(%rip), %rax
  41f1ee:	48 85 c0 	testq	%rax, %rax
  41f1f1:	75 0b 	jne	11 <runtime.sysargs+0x17e>
  41f1f3:	48 c7 05 a2 47 0a 00 00 00 04 00 	movq	$262144, 673698(%rip)
  41f1fe:	48 8b 84 24 40 04 00 00 	movq	1088(%rsp), %rax
  41f206:	48 89 04 24 	movq	%rax, (%rsp)
  41f20a:	48 c7 44 24 08 00 00 04 00 	movq	$262144, 8(%rsp)
  41f213:	e8 d8 2e fe ff 	callq	-119080 <runtime.munmap>
  41f218:	48 8b ac 24 48 04 00 00 	movq	1096(%rsp), %rbp
  41f220:	48 81 c4 50 04 00 00 	addq	$1104, %rsp
  41f227:	c3 	retq
  41f228:	48 8b ac 24 48 04 00 00 	movq	1096(%rsp), %rbp
  41f230:	48 81 c4 50 04 00 00 	addq	$1104, %rsp
  41f237:	c3 	retq
  41f238:	89 44 24 34 	movl	%eax, 52(%rsp)
  41f23c:	48 8d 7c 24 40 	leaq	64(%rsp), %rdi
  41f241:	0f 57 c0 	xorps	%xmm0, %xmm0
  41f244:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  41f249:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  41f24e:	e8 4d 77 02 00 	callq	161613 <runtime.duffzero>
  41f253:	48 8b 6d 00 	movq	(%rbp), %rbp
  41f257:	89 04 24 	movl	%eax, (%rsp)
  41f25a:	48 8d 4c 24 40 	leaq	64(%rsp), %rcx
  41f25f:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41f264:	c7 44 24 10 00 04 00 00 	movl	$1024, 16(%rsp)
  41f26c:	e8 0f 86 02 00 	callq	165391 <runtime.read>
  41f271:	8b 44 24 18 	movl	24(%rsp), %eax
  41f275:	89 44 24 30 	movl	%eax, 48(%rsp)
  41f279:	8b 4c 24 34 	movl	52(%rsp), %ecx
  41f27d:	89 0c 24 	movl	%ecx, (%rsp)
  41f280:	e8 ab 85 02 00 	callq	165291 <runtime.closefd>
  41f285:	8b 44 24 30 	movl	48(%rsp), %eax
  41f289:	85 c0 	testl	%eax, %eax
  41f28b:	7d 10 	jge	16 <runtime.sysargs+0x21d>
  41f28d:	48 8b ac 24 48 04 00 00 	movq	1096(%rsp), %rbp
  41f295:	48 81 c4 50 04 00 00 	addq	$1104, %rsp
  41f29c:	c3 	retq
  41f29d:	48 c7 84 24 30 04 00 00 00 00 00 00 	movq	$0, 1072(%rsp)
  41f2a9:	48 8d 44 24 40 	leaq	64(%rsp), %rax
  41f2ae:	48 89 04 24 	movq	%rax, (%rsp)
  41f2b2:	48 c7 44 24 08 80 00 00 00 	movq	$128, 8(%rsp)
  41f2bb:	48 c7 44 24 10 80 00 00 00 	movq	$128, 16(%rsp)
  41f2c4:	e8 37 00 00 00 	callq	55 <runtime.sysauxv>
  41f2c9:	48 8b ac 24 48 04 00 00 	movq	1096(%rsp), %rbp
  41f2d1:	48 81 c4 50 04 00 00 	addq	$1104, %rsp
  41f2d8:	c3 	retq
  41f2d9:	48 8b ac 24 48 04 00 00 	movq	1096(%rsp), %rbp
  41f2e1:	48 81 c4 50 04 00 00 	addq	$1104, %rsp
  41f2e8:	c3 	retq
  41f2e9:	e8 52 07 00 00 	callq	1874 <runtime.panicindex>
  41f2ee:	0f 0b 	ud2
  41f2f0:	e8 7b 52 02 00 	callq	152187 <runtime.morestack_noctxt>
  41f2f5:	e9 86 fd ff ff 	jmp	-634 <runtime.sysargs>
  41f2fa:	cc 	int3
  41f2fb:	cc 	int3
  41f2fc:	cc 	int3
  41f2fd:	cc 	int3
  41f2fe:	cc 	int3
  41f2ff:	cc 	int3

runtime.sysauxv:
  41f300:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41f309:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41f30d:	0f 86 ec 00 00 00 	jbe	236 <runtime.sysauxv+0xff>
  41f313:	48 83 ec 20 	subq	$32, %rsp
  41f317:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  41f31c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  41f321:	31 c0 	xorl	%eax, %eax
  41f323:	eb 17 	jmp	23 <runtime.sysauxv+0x3c>
  41f325:	48 89 1c 24 	movq	%rbx, (%rsp)
  41f329:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  41f32e:	e8 ed 23 02 00 	callq	140269 <runtime.archauxv>
  41f333:	48 8b 44 24 10 	movq	16(%rsp), %rax
  41f338:	48 83 c0 02 	addq	$2, %rax
  41f33c:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  41f341:	48 39 c8 	cmpq	%rcx, %rax
  41f344:	0f 83 ae 00 00 00 	jae	174 <runtime.sysauxv+0xf8>
  41f34a:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  41f34f:	48 8b 1c c2 	movq	(%rdx,%rax,8), %rbx
  41f353:	48 85 db 	testq	%rbx, %rbx
  41f356:	74 79 	je	121 <runtime.sysauxv+0xd1>
  41f358:	48 8d 70 01 	leaq	1(%rax), %rsi
  41f35c:	48 39 ce 	cmpq	%rcx, %rsi
  41f35f:	0f 83 8c 00 00 00 	jae	140 <runtime.sysauxv+0xf1>
  41f365:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  41f36a:	48 8b 74 c2 08 	movq	8(%rdx,%rax,8), %rsi
  41f36f:	48 83 fb 06 	cmpq	$6, %rbx
  41f373:	75 09 	jne	9 <runtime.sysauxv+0x7e>
  41f375:	48 89 35 24 46 0a 00 	movq	%rsi, 673316(%rip)
  41f37c:	eb a7 	jmp	-89 <runtime.sysauxv+0x25>
  41f37e:	48 83 fb 19 	cmpq	$25, %rbx
  41f382:	75 a1 	jne	-95 <runtime.sysauxv+0x25>
  41f384:	49 89 f0 	movq	%rsi, %r8
  41f387:	84 06 	testb	%al, (%rsi)
  41f389:	48 c7 05 e4 83 08 00 10 00 00 00 	movq	$16, 558052(%rip)
  41f394:	48 c7 05 e1 83 08 00 10 00 00 00 	movq	$16, 558049(%rip)
  41f39f:	44 8b 0d 6a 46 0a 00 	movl	673386(%rip), %r9d
  41f3a6:	45 85 c9 	testl	%r9d, %r9d
  41f3a9:	75 0f 	jne	15 <runtime.sysauxv+0xba>
  41f3ab:	48 89 35 be 83 08 00 	movq	%rsi, 558014(%rip)
  41f3b2:	4c 89 c6 	movq	%r8, %rsi
  41f3b5:	e9 6b ff ff ff 	jmp	-149 <runtime.sysauxv+0x25>
  41f3ba:	48 8d 3d af 83 08 00 	leaq	557999(%rip), %rdi
  41f3c1:	49 89 c1 	movq	%rax, %r9
  41f3c4:	48 89 f0 	movq	%rsi, %rax
  41f3c7:	e8 d4 74 02 00 	callq	160980 <runtime.gcWriteBarrier>
  41f3cc:	4c 89 c8 	movq	%r9, %rax
  41f3cf:	eb e1 	jmp	-31 <runtime.sysauxv+0xb2>
  41f3d1:	48 89 c1 	movq	%rax, %rcx
  41f3d4:	48 c1 f8 3f 	sarq	$63, %rax
  41f3d8:	48 c1 e8 3f 	shrq	$63, %rax
  41f3dc:	48 01 c8 	addq	%rcx, %rax
  41f3df:	48 d1 f8 	sarq	%rax
  41f3e2:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  41f3e7:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  41f3ec:	48 83 c4 20 	addq	$32, %rsp
  41f3f0:	c3 	retq
  41f3f1:	e8 4a 06 00 00 	callq	1610 <runtime.panicindex>
  41f3f6:	0f 0b 	ud2
  41f3f8:	e8 43 06 00 00 	callq	1603 <runtime.panicindex>
  41f3fd:	0f 0b 	ud2
  41f3ff:	e8 6c 51 02 00 	callq	151916 <runtime.morestack_noctxt>
  41f404:	e9 f7 fe ff ff 	jmp	-265 <runtime.sysauxv>
  41f409:	cc 	int3
  41f40a:	cc 	int3
  41f40b:	cc 	int3
  41f40c:	cc 	int3
  41f40d:	cc 	int3
  41f40e:	cc 	int3
  41f40f:	cc 	int3

runtime.osinit:
  41f410:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41f419:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41f41d:	76 26 	jbe	38 <runtime.osinit+0x35>
  41f41f:	48 83 ec 10 	subq	$16, %rsp
  41f423:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  41f428:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  41f42d:	e8 8e f9 ff ff 	callq	-1650 <runtime.getproccount>
  41f432:	8b 04 24 	movl	(%rsp), %eax
  41f435:	89 05 a9 44 0a 00 	movl	%eax, 672937(%rip)
  41f43b:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  41f440:	48 83 c4 10 	addq	$16, %rsp
  41f444:	c3 	retq
  41f445:	e8 26 51 02 00 	callq	151846 <runtime.morestack_noctxt>
  41f44a:	eb c4 	jmp	-60 <runtime.osinit>
  41f44c:	cc 	int3
  41f44d:	cc 	int3
  41f44e:	cc 	int3
  41f44f:	cc 	int3

runtime.getRandomData:
  41f450:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41f459:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41f45d:	0f 86 2e 01 00 00 	jbe	302 <runtime.getRandomData+0x141>
  41f463:	48 83 ec 40 	subq	$64, %rsp
  41f467:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  41f46c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  41f471:	48 8b 05 f8 82 08 00 	movq	557816(%rip), %rax
  41f478:	48 8b 0d f9 82 08 00 	movq	557817(%rip), %rcx
  41f47f:	48 85 c0 	testq	%rax, %rax
  41f482:	74 62 	je	98 <runtime.getRandomData+0x96>
  41f484:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  41f489:	48 39 ca 	cmpq	%rcx, %rdx
  41f48c:	7e 53 	jle	83 <runtime.getRandomData+0x91>
  41f48e:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  41f493:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  41f498:	48 89 14 24 	movq	%rdx, (%rsp)
  41f49c:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41f4a1:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  41f4a6:	e8 55 7c 02 00 	callq	162901 <runtime.memmove>
  41f4ab:	48 8b 44 24 48 	movq	72(%rsp), %rax
  41f4b0:	48 89 04 24 	movq	%rax, (%rsp)
  41f4b4:	48 8b 44 24 50 	movq	80(%rsp), %rax
  41f4b9:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41f4be:	48 8b 44 24 58 	movq	88(%rsp), %rax
  41f4c3:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  41f4c8:	48 8b 44 24 28 	movq	40(%rsp), %rax
  41f4cd:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  41f4d2:	e8 a9 07 01 00 	callq	67497 <runtime.extendRandom>
  41f4d7:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  41f4dc:	48 83 c4 40 	addq	$64, %rsp
  41f4e0:	c3 	retq
  41f4e1:	48 89 d1 	movq	%rdx, %rcx
  41f4e4:	eb a8 	jmp	-88 <runtime.getRandomData+0x3e>
  41f4e6:	48 8b 05 fb 66 08 00 	movq	550651(%rip), %rax
  41f4ed:	48 8b 0d ec 66 08 00 	movq	550636(%rip), %rcx
  41f4f4:	48 85 c0 	testq	%rax, %rax
  41f4f7:	0f 86 8d 00 00 00 	jbe	141 <runtime.getRandomData+0x13a>
  41f4fd:	48 89 0c 24 	movq	%rcx, (%rsp)
  41f501:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  41f50a:	e8 f1 82 02 00 	callq	164593 <runtime.open>
  41f50f:	8b 44 24 10 	movl	16(%rsp), %eax
  41f513:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  41f518:	48 85 c9 	testq	%rcx, %rcx
  41f51b:	76 66 	jbe	102 <runtime.getRandomData+0x133>
  41f51d:	89 44 24 24 	movl	%eax, 36(%rsp)
  41f521:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  41f526:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  41f52b:	89 04 24 	movl	%eax, (%rsp)
  41f52e:	89 4c 24 10 	movl	%ecx, 16(%rsp)
  41f532:	e8 49 83 02 00 	callq	164681 <runtime.read>
  41f537:	48 63 44 24 18 	movslq	24(%rsp), %rax
  41f53c:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  41f541:	8b 4c 24 24 	movl	36(%rsp), %ecx
  41f545:	89 0c 24 	movl	%ecx, (%rsp)
  41f548:	e8 e3 82 02 00 	callq	164579 <runtime.closefd>
  41f54d:	48 8b 44 24 48 	movq	72(%rsp), %rax
  41f552:	48 89 04 24 	movq	%rax, (%rsp)
  41f556:	48 8b 44 24 50 	movq	80(%rsp), %rax
  41f55b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41f560:	48 8b 44 24 58 	movq	88(%rsp), %rax
  41f565:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  41f56a:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41f56f:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  41f574:	e8 07 07 01 00 	callq	67335 <runtime.extendRandom>
  41f579:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  41f57e:	48 83 c4 40 	addq	$64, %rsp
  41f582:	c3 	retq
  41f583:	e8 b8 04 00 00 	callq	1208 <runtime.panicindex>
  41f588:	0f 0b 	ud2
  41f58a:	e8 b1 04 00 00 	callq	1201 <runtime.panicindex>
  41f58f:	0f 0b 	ud2
  41f591:	e8 da 4f 02 00 	callq	151514 <runtime.morestack_noctxt>
  41f596:	e9 b5 fe ff ff 	jmp	-331 <runtime.getRandomData>
  41f59b:	cc 	int3
  41f59c:	cc 	int3
  41f59d:	cc 	int3
  41f59e:	cc 	int3
  41f59f:	cc 	int3

runtime.goenvs:
  41f5a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41f5a9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41f5ad:	76 1a 	jbe	26 <runtime.goenvs+0x29>
  41f5af:	48 83 ec 08 	subq	$8, %rsp
  41f5b3:	48 89 2c 24 	movq	%rbp, (%rsp)
  41f5b7:	48 8d 2c 24 	leaq	(%rsp), %rbp
  41f5bb:	e8 b0 f8 00 00 	callq	63664 <runtime.goenvs_unix>
  41f5c0:	48 8b 2c 24 	movq	(%rsp), %rbp
  41f5c4:	48 83 c4 08 	addq	$8, %rsp
  41f5c8:	c3 	retq
  41f5c9:	e8 a2 4f 02 00 	callq	151458 <runtime.morestack_noctxt>
  41f5ce:	eb d0 	jmp	-48 <runtime.goenvs>

runtime.mpreinit:
  41f5d0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41f5d9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41f5dd:	76 6d 	jbe	109 <runtime.mpreinit+0x7c>
  41f5df:	48 83 ec 18 	subq	$24, %rsp
  41f5e3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  41f5e8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  41f5ed:	c7 04 24 00 80 00 00 	movl	$32768, (%rsp)
  41f5f4:	e8 47 ac 00 00 	callq	44103 <runtime.malg>
  41f5f9:	48 8b 44 24 20 	movq	32(%rsp), %rax
  41f5fe:	84 00 	testb	%al, (%rax)
  41f600:	8b 0d 0a 44 0a 00 	movl	672778(%rip), %ecx
  41f606:	48 8d 78 50 	leaq	80(%rax), %rdi
  41f60a:	48 8b 54 24 08 	movq	8(%rsp), %rdx
  41f60f:	85 c9 	testl	%ecx, %ecx
  41f611:	75 29 	jne	41 <runtime.mpreinit+0x6c>
  41f613:	48 89 50 50 	movq	%rdx, 80(%rax)
  41f617:	84 02 	testb	%al, (%rdx)
  41f619:	8b 0d f1 43 0a 00 	movl	672753(%rip), %ecx
  41f61f:	48 8d 7a 30 	leaq	48(%rdx), %rdi
  41f623:	85 c9 	testl	%ecx, %ecx
  41f625:	75 0e 	jne	14 <runtime.mpreinit+0x65>
  41f627:	48 89 42 30 	movq	%rax, 48(%rdx)
  41f62b:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  41f630:	48 83 c4 18 	addq	$24, %rsp
  41f634:	c3 	retq
  41f635:	e8 66 72 02 00 	callq	160358 <runtime.gcWriteBarrier>
  41f63a:	eb ef 	jmp	-17 <runtime.mpreinit+0x5b>
  41f63c:	48 89 c1 	movq	%rax, %rcx
  41f63f:	48 89 d0 	movq	%rdx, %rax
  41f642:	e8 59 72 02 00 	callq	160345 <runtime.gcWriteBarrier>
  41f647:	48 89 c8 	movq	%rcx, %rax
  41f64a:	eb cb 	jmp	-53 <runtime.mpreinit+0x47>
  41f64c:	e8 1f 4f 02 00 	callq	151327 <runtime.morestack_noctxt>
  41f651:	e9 7a ff ff ff 	jmp	-134 <runtime.mpreinit>
  41f656:	cc 	int3
  41f657:	cc 	int3
  41f658:	cc 	int3
  41f659:	cc 	int3
  41f65a:	cc 	int3
  41f65b:	cc 	int3
  41f65c:	cc 	int3
  41f65d:	cc 	int3
  41f65e:	cc 	int3
  41f65f:	cc 	int3

runtime.minit:
  41f660:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41f669:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41f66d:	76 36 	jbe	54 <runtime.minit+0x45>
  41f66f:	48 83 ec 10 	subq	$16, %rsp
  41f673:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  41f678:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  41f67d:	e8 7e 3b 01 00 	callq	80766 <runtime.minitSignals>
  41f682:	e8 89 82 02 00 	callq	164489 <runtime.gettid>
  41f687:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  41f690:	48 8b 40 30 	movq	48(%rax), %rax
  41f694:	8b 0c 24 	movl	(%rsp), %ecx
  41f697:	48 89 48 48 	movq	%rcx, 72(%rax)
  41f69b:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  41f6a0:	48 83 c4 10 	addq	$16, %rsp
  41f6a4:	c3 	retq
  41f6a5:	e8 c6 4e 02 00 	callq	151238 <runtime.morestack_noctxt>
  41f6aa:	eb b4 	jmp	-76 <runtime.minit>
  41f6ac:	cc 	int3
  41f6ad:	cc 	int3
  41f6ae:	cc 	int3
  41f6af:	cc 	int3

runtime.unminit:
  41f6b0:	e8 0b 3e 01 00 	callq	81419 <runtime.unminitSignals>
  41f6b5:	c3 	retq
  41f6b6:	cc 	int3
  41f6b7:	cc 	int3
  41f6b8:	cc 	int3
  41f6b9:	cc 	int3
  41f6ba:	cc 	int3
  41f6bb:	cc 	int3
  41f6bc:	cc 	int3
  41f6bd:	cc 	int3
  41f6be:	cc 	int3
  41f6bf:	cc 	int3

runtime.sigprocmask:
  41f6c0:	48 83 ec 28 	subq	$40, %rsp
  41f6c4:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  41f6c9:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  41f6ce:	8b 44 24 30 	movl	48(%rsp), %eax
  41f6d2:	89 04 24 	movl	%eax, (%rsp)
  41f6d5:	48 8b 44 24 38 	movq	56(%rsp), %rax
  41f6da:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41f6df:	48 8b 44 24 40 	movq	64(%rsp), %rax
  41f6e4:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  41f6e9:	c7 44 24 18 08 00 00 00 	movl	$8, 24(%rsp)
  41f6f1:	e8 da 83 02 00 	callq	164826 <runtime.rtsigprocmask>
  41f6f6:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  41f6fb:	48 83 c4 28 	addq	$40, %rsp
  41f6ff:	c3 	retq

runtime.setsig:
  41f700:	48 81 ec 90 00 00 00 	subq	$144, %rsp
  41f707:	48 89 ac 24 88 00 00 00 	movq	%rbp, 136(%rsp)
  41f70f:	48 8d ac 24 88 00 00 00 	leaq	136(%rsp), %rbp
  41f717:	0f 57 c0 	xorps	%xmm0, %xmm0
  41f71a:	0f 11 44 24 68 	movups	%xmm0, 104(%rsp)
  41f71f:	0f 11 44 24 78 	movups	%xmm0, 120(%rsp)
  41f724:	48 c7 44 24 28 00 00 00 00 	movq	$0, 40(%rsp)
  41f72d:	0f 57 c0 	xorps	%xmm0, %xmm0
  41f730:	0f 11 44 24 38 	movups	%xmm0, 56(%rsp)
  41f735:	48 c7 44 24 30 04 00 00 1c 	movq	$469762052, 48(%rsp)
  41f73e:	48 8d 44 24 40 	leaq	64(%rsp), %rax
  41f743:	84 00 	testb	%al, (%rax)
  41f745:	48 c7 44 24 40 ff ff ff ff 	movq	$-1, 64(%rsp)
  41f74e:	48 8d 05 8b 6f 03 00 	leaq	225163(%rip), %rax
  41f755:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  41f75a:	48 8d 0d 87 ea 04 00 	leaq	322183(%rip), %rcx
  41f761:	48 89 4c 24 60 	movq	%rcx, 96(%rsp)
  41f766:	84 01 	testb	%al, (%rcx)
  41f768:	48 8d 4c 24 60 	leaq	96(%rsp), %rcx
  41f76d:	84 01 	testb	%al, (%rcx)
  41f76f:	48 8b 0d 72 ea 04 00 	movq	322162(%rip), %rcx
  41f776:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  41f77b:	48 8d 0d 9e b1 03 00 	leaq	242078(%rip), %rcx
  41f782:	48 89 4c 24 48 	movq	%rcx, 72(%rsp)
  41f787:	48 8d 0d 4a ea 04 00 	leaq	322122(%rip), %rcx
  41f78e:	48 89 4c 24 50 	movq	%rcx, 80(%rsp)
  41f793:	b9 08 00 00 00 	movl	$8, %ecx
  41f798:	48 8d 54 24 48 	leaq	72(%rsp), %rdx
  41f79d:	48 8b 14 0a 	movq	(%rdx,%rcx), %rdx
  41f7a1:	48 8d 5c 24 50 	leaq	80(%rsp), %rbx
  41f7a6:	84 03 	testb	%al, (%rbx)
  41f7a8:	48 8b 12 	movq	(%rdx), %rdx
  41f7ab:	48 8b 9c 24 a0 00 00 00 	movq	160(%rsp), %rbx
  41f7b3:	48 39 d3 	cmpq	%rdx, %rbx
  41f7b6:	0f 85 a3 00 00 00 	jne	163 <runtime.setsig+0x15f>
  41f7bc:	0f b6 15 e9 40 0a 00 	movzbl	671977(%rip), %edx
  41f7c3:	84 d2 	testb	%dl, %dl
  41f7c5:	74 65 	je	101 <runtime.setsig+0x12c>
  41f7c7:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  41f7cc:	48 8d 05 1d e8 04 00 	leaq	321565(%rip), %rax
  41f7d3:	48 89 44 24 70 	movq	%rax, 112(%rsp)
  41f7d8:	48 8d 44 24 68 	leaq	104(%rsp), %rax
  41f7dd:	48 8b 04 08 	movq	(%rax,%rcx), %rax
  41f7e1:	48 8d 4c 24 70 	leaq	112(%rsp), %rcx
  41f7e6:	84 01 	testb	%al, (%rcx)
  41f7e8:	48 8b 00 	movq	(%rax), %rax
  41f7eb:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  41f7f0:	8b 84 24 98 00 00 00 	movl	152(%rsp), %eax
  41f7f7:	48 89 04 24 	movq	%rax, (%rsp)
  41f7fb:	48 8d 44 24 28 	leaq	40(%rsp), %rax
  41f800:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41f805:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  41f80e:	48 c7 44 24 18 08 00 00 00 	movq	$8, 24(%rsp)
  41f817:	e8 64 29 fe ff 	callq	-120476 <runtime.rt_sigaction>
  41f81c:	48 8b ac 24 88 00 00 00 	movq	136(%rsp), %rbp
  41f824:	48 81 c4 90 00 00 00 	addq	$144, %rsp
  41f82b:	c3 	retq
  41f82c:	48 8d 15 8d a6 03 00 	leaq	239245(%rip), %rdx
  41f833:	48 89 54 24 78 	movq	%rdx, 120(%rsp)
  41f838:	48 8d 15 b1 e9 04 00 	leaq	321969(%rip), %rdx
  41f83f:	48 89 94 24 80 00 00 00 	movq	%rdx, 128(%rsp)
  41f847:	48 8d 54 24 78 	leaq	120(%rsp), %rdx
  41f84c:	48 8b 0c 0a 	movq	(%rdx,%rcx), %rcx
  41f850:	48 8d 94 24 80 00 00 00 	leaq	128(%rsp), %rdx
  41f858:	84 02 	testb	%al, (%rdx)
  41f85a:	48 8b 01 	movq	(%rcx), %rax
  41f85d:	eb 8c 	jmp	-116 <runtime.setsig+0xeb>
  41f85f:	48 89 d8 	movq	%rbx, %rax
  41f862:	eb 87 	jmp	-121 <runtime.setsig+0xeb>
  41f864:	cc 	int3
  41f865:	cc 	int3
  41f866:	cc 	int3
  41f867:	cc 	int3
  41f868:	cc 	int3
  41f869:	cc 	int3
  41f86a:	cc 	int3
  41f86b:	cc 	int3
  41f86c:	cc 	int3
  41f86d:	cc 	int3
  41f86e:	cc 	int3
  41f86f:	cc 	int3

runtime.setsigstack:
  41f870:	48 83 ec 50 	subq	$80, %rsp
  41f874:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  41f879:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  41f87e:	0f 57 c0 	xorps	%xmm0, %xmm0
  41f881:	0f 11 44 24 28 	movups	%xmm0, 40(%rsp)
  41f886:	0f 11 44 24 38 	movups	%xmm0, 56(%rsp)
  41f88b:	8b 44 24 58 	movl	88(%rsp), %eax
  41f88f:	48 89 04 24 	movq	%rax, (%rsp)
  41f893:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  41f89c:	48 8d 4c 24 28 	leaq	40(%rsp), %rcx
  41f8a1:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  41f8a6:	48 c7 44 24 18 08 00 00 00 	movq	$8, 24(%rsp)
  41f8af:	e8 cc 28 fe ff 	callq	-120628 <runtime.rt_sigaction>
  41f8b4:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41f8b9:	0f ba e0 1b 	btl	$27, %eax
  41f8bd:	73 0a 	jae	10 <runtime.setsigstack+0x59>
  41f8bf:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  41f8c4:	48 83 c4 50 	addq	$80, %rsp
  41f8c8:	c3 	retq
  41f8c9:	48 0d 00 00 00 08 	orq	$134217728, %rax
  41f8cf:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  41f8d4:	8b 44 24 58 	movl	88(%rsp), %eax
  41f8d8:	48 89 04 24 	movq	%rax, (%rsp)
  41f8dc:	48 8d 44 24 28 	leaq	40(%rsp), %rax
  41f8e1:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41f8e6:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  41f8ef:	48 c7 44 24 18 08 00 00 00 	movq	$8, 24(%rsp)
  41f8f8:	e8 83 28 fe ff 	callq	-120701 <runtime.rt_sigaction>
  41f8fd:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  41f902:	48 83 c4 50 	addq	$80, %rsp
  41f906:	c3 	retq
  41f907:	cc 	int3
  41f908:	cc 	int3
  41f909:	cc 	int3
  41f90a:	cc 	int3
  41f90b:	cc 	int3
  41f90c:	cc 	int3
  41f90d:	cc 	int3
  41f90e:	cc 	int3
  41f90f:	cc 	int3

runtime.getsig:
  41f910:	48 83 ec 50 	subq	$80, %rsp
  41f914:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  41f919:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  41f91e:	0f 57 c0 	xorps	%xmm0, %xmm0
  41f921:	0f 11 44 24 28 	movups	%xmm0, 40(%rsp)
  41f926:	0f 11 44 24 38 	movups	%xmm0, 56(%rsp)
  41f92b:	8b 44 24 58 	movl	88(%rsp), %eax
  41f92f:	48 89 04 24 	movq	%rax, (%rsp)
  41f933:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  41f93c:	48 8d 44 24 28 	leaq	40(%rsp), %rax
  41f941:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  41f946:	48 c7 44 24 18 08 00 00 00 	movq	$8, 24(%rsp)
  41f94f:	e8 2c 28 fe ff 	callq	-120788 <runtime.rt_sigaction>
  41f954:	8b 44 24 20 	movl	32(%rsp), %eax
  41f958:	85 c0 	testl	%eax, %eax
  41f95a:	75 14 	jne	20 <runtime.getsig+0x60>
  41f95c:	48 8b 44 24 28 	movq	40(%rsp), %rax
  41f961:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  41f966:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  41f96b:	48 83 c4 50 	addq	$80, %rsp
  41f96f:	c3 	retq
  41f970:	48 8d 05 1b c1 04 00 	leaq	311579(%rip), %rax
  41f977:	48 89 04 24 	movq	%rax, (%rsp)
  41f97b:	48 c7 44 24 08 19 00 00 00 	movq	$25, 8(%rsp)
  41f984:	e8 47 18 00 00 	callq	6215 <runtime.throw>
  41f989:	0f 0b 	ud2
  41f98b:	cc 	int3
  41f98c:	cc 	int3
  41f98d:	cc 	int3
  41f98e:	cc 	int3
  41f98f:	cc 	int3

runtime.panicCheckMalloc:
  41f990:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41f999:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41f99d:	0f 86 89 00 00 00 	jbe	137 <runtime.panicCheckMalloc+0x9c>
  41f9a3:	48 83 ec 20 	subq	$32, %rsp
  41f9a7:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  41f9ac:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  41f9b1:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  41f9ba:	48 85 c0 	testq	%rax, %rax
  41f9bd:	74 13 	je	19 <runtime.panicCheckMalloc+0x42>
  41f9bf:	48 8b 40 30 	movq	48(%rax), %rax
  41f9c3:	48 85 c0 	testq	%rax, %rax
  41f9c6:	74 0a 	je	10 <runtime.panicCheckMalloc+0x42>
  41f9c8:	8b 80 e8 00 00 00 	movl	232(%rax), %eax
  41f9ce:	85 c0 	testl	%eax, %eax
  41f9d0:	75 0a 	jne	10 <runtime.panicCheckMalloc+0x4c>
  41f9d2:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  41f9d7:	48 83 c4 20 	addq	$32, %rsp
  41f9db:	c3 	retq
  41f9dc:	48 8b 44 24 28 	movq	40(%rsp), %rax
  41f9e1:	48 8d 0d 58 54 05 00 	leaq	349272(%rip), %rcx
  41f9e8:	48 39 c8 	cmpq	%rcx, %rax
  41f9eb:	75 1c 	jne	28 <runtime.panicCheckMalloc+0x79>
  41f9ed:	48 8b 44 24 30 	movq	48(%rsp), %rax
  41f9f2:	48 8b 48 08 	movq	8(%rax), %rcx
  41f9f6:	48 8b 00 	movq	(%rax), %rax
  41f9f9:	48 89 04 24 	movq	%rax, (%rsp)
  41f9fd:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41fa02:	e8 c9 17 00 00 	callq	6089 <runtime.throw>
  41fa07:	0f 0b 	ud2
  41fa09:	48 89 04 24 	movq	%rax, (%rsp)
  41fa0d:	48 8d 05 ac b4 03 00 	leaq	242860(%rip), %rax
  41fa14:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41fa19:	48 8d 05 20 c0 03 00 	leaq	245792(%rip), %rax
  41fa20:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  41fa25:	e8 16 97 fe ff 	callq	-92394 <runtime.panicdottypeI>
  41fa2a:	0f 0b 	ud2
  41fa2c:	e8 3f 4b 02 00 	callq	150335 <runtime.morestack_noctxt>
  41fa31:	e9 5a ff ff ff 	jmp	-166 <runtime.panicCheckMalloc>
  41fa36:	cc 	int3
  41fa37:	cc 	int3
  41fa38:	cc 	int3
  41fa39:	cc 	int3
  41fa3a:	cc 	int3
  41fa3b:	cc 	int3
  41fa3c:	cc 	int3
  41fa3d:	cc 	int3
  41fa3e:	cc 	int3
  41fa3f:	cc 	int3

runtime.panicindex:
  41fa40:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41fa49:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41fa4d:	76 51 	jbe	81 <runtime.panicindex+0x60>
  41fa4f:	48 83 ec 18 	subq	$24, %rsp
  41fa53:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  41fa58:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  41fa5d:	48 8b 05 24 60 08 00 	movq	548900(%rip), %rax
  41fa64:	48 8b 0d 15 60 08 00 	movq	548885(%rip), %rcx
  41fa6b:	48 89 0c 24 	movq	%rcx, (%rsp)
  41fa6f:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41fa74:	e8 17 ff ff ff 	callq	-233 <runtime.panicCheckMalloc>
  41fa79:	48 8b 05 00 60 08 00 	movq	548864(%rip), %rax
  41fa80:	48 8b 0d 01 60 08 00 	movq	548865(%rip), %rcx
  41fa87:	48 85 c0 	testq	%rax, %rax
  41fa8a:	74 04 	je	4 <runtime.panicindex+0x50>
  41fa8c:	48 8b 40 08 	movq	8(%rax), %rax
  41fa90:	48 89 04 24 	movq	%rax, (%rsp)
  41fa94:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41fa99:	e8 92 0f 00 00 	callq	3986 <runtime.gopanic>
  41fa9e:	0f 0b 	ud2
  41faa0:	e8 cb 4a 02 00 	callq	150219 <runtime.morestack_noctxt>
  41faa5:	eb 99 	jmp	-103 <runtime.panicindex>
  41faa7:	cc 	int3
  41faa8:	cc 	int3
  41faa9:	cc 	int3
  41faaa:	cc 	int3
  41faab:	cc 	int3
  41faac:	cc 	int3
  41faad:	cc 	int3
  41faae:	cc 	int3
  41faaf:	cc 	int3

runtime.panicslice:
  41fab0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41fab9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41fabd:	76 51 	jbe	81 <runtime.panicslice+0x60>
  41fabf:	48 83 ec 18 	subq	$24, %rsp
  41fac3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  41fac8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  41facd:	48 8b 05 e4 5f 08 00 	movq	548836(%rip), %rax
  41fad4:	48 8b 0d d5 5f 08 00 	movq	548821(%rip), %rcx
  41fadb:	48 89 0c 24 	movq	%rcx, (%rsp)
  41fadf:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41fae4:	e8 a7 fe ff ff 	callq	-345 <runtime.panicCheckMalloc>
  41fae9:	48 8b 05 c0 5f 08 00 	movq	548800(%rip), %rax
  41faf0:	48 8b 0d c1 5f 08 00 	movq	548801(%rip), %rcx
  41faf7:	48 85 c0 	testq	%rax, %rax
  41fafa:	74 04 	je	4 <runtime.panicslice+0x50>
  41fafc:	48 8b 40 08 	movq	8(%rax), %rax
  41fb00:	48 89 04 24 	movq	%rax, (%rsp)
  41fb04:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41fb09:	e8 22 0f 00 00 	callq	3874 <runtime.gopanic>
  41fb0e:	0f 0b 	ud2
  41fb10:	e8 5b 4a 02 00 	callq	150107 <runtime.morestack_noctxt>
  41fb15:	eb 99 	jmp	-103 <runtime.panicslice>
  41fb17:	cc 	int3
  41fb18:	cc 	int3
  41fb19:	cc 	int3
  41fb1a:	cc 	int3
  41fb1b:	cc 	int3
  41fb1c:	cc 	int3
  41fb1d:	cc 	int3
  41fb1e:	cc 	int3
  41fb1f:	cc 	int3

runtime.panicdivide:
  41fb20:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41fb29:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41fb2d:	76 51 	jbe	81 <runtime.panicdivide+0x60>
  41fb2f:	48 83 ec 18 	subq	$24, %rsp
  41fb33:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  41fb38:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  41fb3d:	48 8b 05 24 5f 08 00 	movq	548644(%rip), %rax
  41fb44:	48 8b 0d 15 5f 08 00 	movq	548629(%rip), %rcx
  41fb4b:	48 89 0c 24 	movq	%rcx, (%rsp)
  41fb4f:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41fb54:	e8 37 fe ff ff 	callq	-457 <runtime.panicCheckMalloc>
  41fb59:	48 8b 05 00 5f 08 00 	movq	548608(%rip), %rax
  41fb60:	48 8b 0d 01 5f 08 00 	movq	548609(%rip), %rcx
  41fb67:	48 85 c0 	testq	%rax, %rax
  41fb6a:	74 04 	je	4 <runtime.panicdivide+0x50>
  41fb6c:	48 8b 40 08 	movq	8(%rax), %rax
  41fb70:	48 89 04 24 	movq	%rax, (%rsp)
  41fb74:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41fb79:	e8 b2 0e 00 00 	callq	3762 <runtime.gopanic>
  41fb7e:	0f 0b 	ud2
  41fb80:	e8 eb 49 02 00 	callq	149995 <runtime.morestack_noctxt>
  41fb85:	eb 99 	jmp	-103 <runtime.panicdivide>
  41fb87:	cc 	int3
  41fb88:	cc 	int3
  41fb89:	cc 	int3
  41fb8a:	cc 	int3
  41fb8b:	cc 	int3
  41fb8c:	cc 	int3
  41fb8d:	cc 	int3
  41fb8e:	cc 	int3
  41fb8f:	cc 	int3

runtime.panicoverflow:
  41fb90:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41fb99:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41fb9d:	76 51 	jbe	81 <runtime.panicoverflow+0x60>
  41fb9f:	48 83 ec 18 	subq	$24, %rsp
  41fba3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  41fba8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  41fbad:	48 8b 05 f4 5e 08 00 	movq	548596(%rip), %rax
  41fbb4:	48 8b 0d e5 5e 08 00 	movq	548581(%rip), %rcx
  41fbbb:	48 89 0c 24 	movq	%rcx, (%rsp)
  41fbbf:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41fbc4:	e8 c7 fd ff ff 	callq	-569 <runtime.panicCheckMalloc>
  41fbc9:	48 8b 05 d0 5e 08 00 	movq	548560(%rip), %rax
  41fbd0:	48 8b 0d d1 5e 08 00 	movq	548561(%rip), %rcx
  41fbd7:	48 85 c0 	testq	%rax, %rax
  41fbda:	74 04 	je	4 <runtime.panicoverflow+0x50>
  41fbdc:	48 8b 40 08 	movq	8(%rax), %rax
  41fbe0:	48 89 04 24 	movq	%rax, (%rsp)
  41fbe4:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41fbe9:	e8 42 0e 00 00 	callq	3650 <runtime.gopanic>
  41fbee:	0f 0b 	ud2
  41fbf0:	e8 7b 49 02 00 	callq	149883 <runtime.morestack_noctxt>
  41fbf5:	eb 99 	jmp	-103 <runtime.panicoverflow>
  41fbf7:	cc 	int3
  41fbf8:	cc 	int3
  41fbf9:	cc 	int3
  41fbfa:	cc 	int3
  41fbfb:	cc 	int3
  41fbfc:	cc 	int3
  41fbfd:	cc 	int3
  41fbfe:	cc 	int3
  41fbff:	cc 	int3

runtime.panicfloat:
  41fc00:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41fc09:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41fc0d:	76 51 	jbe	81 <runtime.panicfloat+0x60>
  41fc0f:	48 83 ec 18 	subq	$24, %rsp
  41fc13:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  41fc18:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  41fc1d:	48 8b 05 54 5e 08 00 	movq	548436(%rip), %rax
  41fc24:	48 8b 0d 45 5e 08 00 	movq	548421(%rip), %rcx
  41fc2b:	48 89 0c 24 	movq	%rcx, (%rsp)
  41fc2f:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41fc34:	e8 57 fd ff ff 	callq	-681 <runtime.panicCheckMalloc>
  41fc39:	48 8b 05 30 5e 08 00 	movq	548400(%rip), %rax
  41fc40:	48 8b 0d 31 5e 08 00 	movq	548401(%rip), %rcx
  41fc47:	48 85 c0 	testq	%rax, %rax
  41fc4a:	74 04 	je	4 <runtime.panicfloat+0x50>
  41fc4c:	48 8b 40 08 	movq	8(%rax), %rax
  41fc50:	48 89 04 24 	movq	%rax, (%rsp)
  41fc54:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41fc59:	e8 d2 0d 00 00 	callq	3538 <runtime.gopanic>
  41fc5e:	0f 0b 	ud2
  41fc60:	e8 0b 49 02 00 	callq	149771 <runtime.morestack_noctxt>
  41fc65:	eb 99 	jmp	-103 <runtime.panicfloat>
  41fc67:	cc 	int3
  41fc68:	cc 	int3
  41fc69:	cc 	int3
  41fc6a:	cc 	int3
  41fc6b:	cc 	int3
  41fc6c:	cc 	int3
  41fc6d:	cc 	int3
  41fc6e:	cc 	int3
  41fc6f:	cc 	int3

runtime.panicmem:
  41fc70:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41fc79:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41fc7d:	76 51 	jbe	81 <runtime.panicmem+0x60>
  41fc7f:	48 83 ec 18 	subq	$24, %rsp
  41fc83:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  41fc88:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  41fc8d:	48 8b 05 04 5e 08 00 	movq	548356(%rip), %rax
  41fc94:	48 8b 0d f5 5d 08 00 	movq	548341(%rip), %rcx
  41fc9b:	48 89 0c 24 	movq	%rcx, (%rsp)
  41fc9f:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  41fca4:	e8 e7 fc ff ff 	callq	-793 <runtime.panicCheckMalloc>
  41fca9:	48 8b 05 e0 5d 08 00 	movq	548320(%rip), %rax
  41fcb0:	48 8b 0d e1 5d 08 00 	movq	548321(%rip), %rcx
  41fcb7:	48 85 c0 	testq	%rax, %rax
  41fcba:	74 04 	je	4 <runtime.panicmem+0x50>
  41fcbc:	48 8b 40 08 	movq	8(%rax), %rax
  41fcc0:	48 89 04 24 	movq	%rax, (%rsp)
  41fcc4:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  41fcc9:	e8 62 0d 00 00 	callq	3426 <runtime.gopanic>
  41fcce:	0f 0b 	ud2
  41fcd0:	e8 9b 48 02 00 	callq	149659 <runtime.morestack_noctxt>
  41fcd5:	eb 99 	jmp	-103 <runtime.panicmem>
  41fcd7:	cc 	int3
  41fcd8:	cc 	int3
  41fcd9:	cc 	int3
  41fcda:	cc 	int3
  41fcdb:	cc 	int3
  41fcdc:	cc 	int3
  41fcdd:	cc 	int3
  41fcde:	cc 	int3
  41fcdf:	cc 	int3

runtime.throwinit:
  41fce0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41fce9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41fced:	76 29 	jbe	41 <runtime.throwinit+0x38>
  41fcef:	48 83 ec 18 	subq	$24, %rsp
  41fcf3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  41fcf8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  41fcfd:	48 8d 05 52 dd 04 00 	leaq	318802(%rip), %rax
  41fd04:	48 89 04 24 	movq	%rax, (%rsp)
  41fd08:	48 c7 44 24 08 32 00 00 00 	movq	$50, 8(%rsp)
  41fd11:	e8 ba 14 00 00 	callq	5306 <runtime.throw>
  41fd16:	0f 0b 	ud2
  41fd18:	e8 53 48 02 00 	callq	149587 <runtime.morestack_noctxt>
  41fd1d:	eb c1 	jmp	-63 <runtime.throwinit>
  41fd1f:	cc 	int3

runtime.deferproc:
  41fd20:	48 83 ec 28 	subq	$40, %rsp
  41fd24:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  41fd29:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  41fd2e:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  41fd37:	48 8b 48 30 	movq	48(%rax), %rcx
  41fd3b:	48 8b 89 c0 00 00 00 	movq	192(%rcx), %rcx
  41fd42:	48 39 c1 	cmpq	%rax, %rcx
  41fd45:	0f 85 e2 00 00 00 	jne	226 <runtime.deferproc+0x10d>
  41fd4b:	48 8d 44 24 38 	leaq	56(%rsp), %rax
  41fd50:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  41fd55:	8b 4c 24 30 	movl	48(%rsp), %ecx
  41fd59:	89 0c 24 	movl	%ecx, (%rsp)
  41fd5c:	e8 bf 03 00 00 	callq	959 <runtime.newdefer>
  41fd61:	48 8b 44 24 08 	movq	8(%rsp), %rax
  41fd66:	48 8b 48 20 	movq	32(%rax), %rcx
  41fd6a:	48 85 c9 	testq	%rcx, %rcx
  41fd6d:	0f 85 9f 00 00 00 	jne	159 <runtime.deferproc+0xf2>
  41fd73:	8b 0d 97 3c 0a 00 	movl	670871(%rip), %ecx
  41fd79:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  41fd7e:	48 8d 78 18 	leaq	24(%rax), %rdi
  41fd82:	85 c9 	testl	%ecx, %ecx
  41fd84:	75 79 	jne	121 <runtime.deferproc+0xdf>
  41fd86:	48 89 50 18 	movq	%rdx, 24(%rax)
  41fd8a:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  41fd8f:	48 89 48 10 	movq	%rcx, 16(%rax)
  41fd93:	48 8d 4c 24 30 	leaq	48(%rsp), %rcx
  41fd98:	48 89 48 08 	movq	%rcx, 8(%rax)
  41fd9c:	8b 4c 24 30 	movl	48(%rsp), %ecx
  41fda0:	85 c9 	testl	%ecx, %ecx
  41fda2:	75 0f 	jne	15 <runtime.deferproc+0x93>
  41fda4:	e8 d7 6a 02 00 	callq	158423 <runtime.return0>
  41fda9:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  41fdae:	48 83 c4 28 	addq	$40, %rsp
  41fdb2:	c3 	retq
  41fdb3:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  41fdb8:	48 83 c2 08 	addq	$8, %rdx
  41fdbc:	83 f9 08 	cmpl	$8, %ecx
  41fdbf:	75 16 	jne	22 <runtime.deferproc+0xb7>
  41fdc1:	8b 08 	movl	(%rax), %ecx
  41fdc3:	85 c9 	testl	%ecx, %ecx
  41fdc5:	75 0a 	jne	10 <runtime.deferproc+0xb1>
  41fdc7:	31 c0 	xorl	%eax, %eax
  41fdc9:	48 8b 0a 	movq	(%rdx), %rcx
  41fdcc:	48 89 08 	movq	%rcx, (%rax)
  41fdcf:	eb d3 	jmp	-45 <runtime.deferproc+0x84>
  41fdd1:	48 83 c0 30 	addq	$48, %rax
  41fdd5:	eb f2 	jmp	-14 <runtime.deferproc+0xa9>
  41fdd7:	8b 08 	movl	(%rax), %ecx
  41fdd9:	85 c9 	testl	%ecx, %ecx
  41fddb:	75 1c 	jne	28 <runtime.deferproc+0xd9>
  41fddd:	31 c0 	xorl	%eax, %eax
  41fddf:	48 89 04 24 	movq	%rax, (%rsp)
  41fde3:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  41fde8:	48 63 44 24 30 	movslq	48(%rsp), %rax
  41fded:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  41fdf2:	e8 09 73 02 00 	callq	160521 <runtime.memmove>
  41fdf7:	eb ab 	jmp	-85 <runtime.deferproc+0x84>
  41fdf9:	48 83 c0 30 	addq	$48, %rax
  41fdfd:	eb e0 	jmp	-32 <runtime.deferproc+0xbf>
  41fdff:	48 89 c1 	movq	%rax, %rcx
  41fe02:	48 89 d0 	movq	%rdx, %rax
  41fe05:	e8 96 6a 02 00 	callq	158358 <runtime.gcWriteBarrier>
  41fe0a:	48 89 c8 	movq	%rcx, %rax
  41fe0d:	e9 78 ff ff ff 	jmp	-136 <runtime.deferproc+0x6a>
  41fe12:	48 8d 05 75 d4 04 00 	leaq	316533(%rip), %rax
  41fe19:	48 89 04 24 	movq	%rax, (%rsp)
  41fe1d:	48 c7 44 24 08 28 00 00 00 	movq	$40, 8(%rsp)
  41fe26:	e8 a5 13 00 00 	callq	5029 <runtime.throw>
  41fe2b:	0f 0b 	ud2
  41fe2d:	48 8d 05 6a b4 04 00 	leaq	308330(%rip), %rax
  41fe34:	48 89 04 24 	movq	%rax, (%rsp)
  41fe38:	48 c7 44 24 08 15 00 00 00 	movq	$21, 8(%rsp)
  41fe41:	e8 8a 13 00 00 	callq	5002 <runtime.throw>
  41fe46:	0f 0b 	ud2
  41fe48:	cc 	int3
  41fe49:	cc 	int3
  41fe4a:	cc 	int3
  41fe4b:	cc 	int3
  41fe4c:	cc 	int3
  41fe4d:	cc 	int3
  41fe4e:	cc 	int3
  41fe4f:	cc 	int3

runtime.testdefersizes:
  41fe50:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  41fe59:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  41fe5d:	0f 86 33 02 00 00 	jbe	563 <runtime.testdefersizes+0x246>
  41fe63:	48 83 ec 48 	subq	$72, %rsp
  41fe67:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  41fe6c:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  41fe71:	48 c7 44 24 2c 00 00 00 00 	movq	$0, 44(%rsp)
  41fe7a:	0f 57 c0 	xorps	%xmm0, %xmm0
  41fe7d:	0f 11 44 24 30 	movups	%xmm0, 48(%rsp)
  41fe82:	31 c0 	xorl	%eax, %eax
  41fe84:	eb 13 	jmp	19 <runtime.testdefersizes+0x49>
  41fe86:	48 89 c1 	movq	%rax, %rcx
  41fe89:	48 c1 e0 02 	shlq	$2, %rax
  41fe8d:	c7 44 04 2c ff ff ff ff 	movl	$4294967295, 44(%rsp,%rax)
  41fe95:	48 8d 41 01 	leaq	1(%rcx), %rax
  41fe99:	48 83 f8 05 	cmpq	$5, %rax
  41fe9d:	7c e7 	jl	-25 <runtime.testdefersizes+0x36>
  41fe9f:	31 c0 	xorl	%eax, %eax
  41fea1:	eb 03 	jmp	3 <runtime.testdefersizes+0x56>
  41fea3:	48 ff c0 	incq	%rax
  41fea6:	48 85 c0 	testq	%rax, %rax
  41fea9:	0f 87 1e 01 00 00 	ja	286 <runtime.testdefersizes+0x17d>
  41feaf:	31 c9 	xorl	%ecx, %ecx
  41feb1:	48 83 f9 05 	cmpq	$5, %rcx
  41feb5:	0f 83 08 01 00 00 	jae	264 <runtime.testdefersizes+0x173>
  41febb:	48 85 c0 	testq	%rax, %rax
  41febe:	0f 87 f6 00 00 00 	ja	246 <runtime.testdefersizes+0x16a>
  41fec4:	ba 30 00 00 00 	movl	$48, %edx
  41fec9:	48 81 fa 00 80 00 00 	cmpq	$32768, %rdx
  41fed0:	0f 83 a4 00 00 00 	jae	164 <runtime.testdefersizes+0x12a>
  41fed6:	48 81 fa f8 03 00 00 	cmpq	$1016, %rdx
  41fedd:	77 5a 	ja	90 <runtime.testdefersizes+0xe9>
  41fedf:	48 83 c2 07 	addq	$7, %rdx
  41fee3:	48 c1 ea 03 	shrq	$3, %rdx
  41fee7:	48 81 fa 81 00 00 00 	cmpq	$129, %rdx
  41feee:	0f 83 9b 01 00 00 	jae	411 <runtime.testdefersizes+0x23f>
  41fef4:	48 8d 1d 25 52 08 00 	leaq	545317(%rip), %rbx
  41fefb:	0f b6 14 1a 	movzbl	(%rdx,%rbx), %edx
  41feff:	48 83 fa 43 	cmpq	$67, %rdx
  41ff03:	0f 83 86 01 00 00 	jae	390 <runtime.testdefersizes+0x23f>
  41ff09:	48 8d 35 b0 52 08 00 	leaq	545456(%rip), %rsi
  41ff10:	0f b7 14 56 	movzwl	(%rsi,%rdx,2), %edx
  41ff14:	8b 7c 8c 2c 	movl	44(%rsp,%rcx,4), %edi
  41ff18:	49 89 c8 	movq	%rcx, %r8
  41ff1b:	48 c1 e1 02 	shlq	$2, %rcx
  41ff1f:	85 ff 	testl	%edi, %edi
  41ff21:	7d 09 	jge	9 <runtime.testdefersizes+0xdc>
  41ff23:	89 54 0c 2c 	movl	%edx, 44(%rsp,%rcx)
  41ff27:	e9 77 ff ff ff 	jmp	-137 <runtime.testdefersizes+0x53>
  41ff2c:	39 d7 	cmpl	%edx, %edi
  41ff2e:	0f 85 a6 00 00 00 	jne	166 <runtime.testdefersizes+0x18a>
  41ff34:	e9 6a ff ff ff 	jmp	-150 <runtime.testdefersizes+0x53>
  41ff39:	48 81 c2 7f fc ff ff 	addq	$-897, %rdx
  41ff40:	48 c1 ea 07 	shrq	$7, %rdx
  41ff44:	48 81 fa f9 00 00 00 	cmpq	$249, %rdx
  41ff4b:	0f 83 37 01 00 00 	jae	311 <runtime.testdefersizes+0x238>
  41ff51:	48 8d 1d 08 53 08 00 	leaq	545544(%rip), %rbx
  41ff58:	0f b6 14 1a 	movzbl	(%rdx,%rbx), %edx
  41ff5c:	48 83 fa 43 	cmpq	$67, %rdx
  41ff60:	0f 83 22 01 00 00 	jae	290 <runtime.testdefersizes+0x238>
  41ff66:	48 8d 35 53 52 08 00 	leaq	545363(%rip), %rsi
  41ff6d:	0f b7 14 56 	movzwl	(%rsi,%rdx,2), %edx
  41ff71:	48 8d 1d a8 51 08 00 	leaq	545192(%rip), %rbx
  41ff78:	eb 9a 	jmp	-102 <runtime.testdefersizes+0xc4>
  41ff7a:	48 8d 9a 00 20 00 00 	leaq	8192(%rdx), %rbx
  41ff81:	48 39 d3 	cmpq	%rdx, %rbx
  41ff84:	73 13 	jae	19 <runtime.testdefersizes+0x149>
  41ff86:	48 8d 1d 93 51 08 00 	leaq	545171(%rip), %rbx
  41ff8d:	48 8d 35 2c 52 08 00 	leaq	545324(%rip), %rsi
  41ff94:	e9 7b ff ff ff 	jmp	-133 <runtime.testdefersizes+0xc4>
  41ff99:	48 81 c2 ff 1f 00 00 	addq	$8191, %rdx
  41ffa0:	48 81 e2 00 e0 ff ff 	andq	$-8192, %rdx
  41ffa7:	48 8d 1d 72 51 08 00 	leaq	545138(%rip), %rbx
  41ffae:	48 8d 35 0b 52 08 00 	leaq	545291(%rip), %rsi
  41ffb5:	e9 5a ff ff ff 	jmp	-166 <runtime.testdefersizes+0xc4>
  41ffba:	48 8d 50 30 	leaq	48(%rax), %rdx
  41ffbe:	e9 06 ff ff ff 	jmp	-250 <runtime.testdefersizes+0x79>
  41ffc3:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  41ffc8:	48 83 c4 48 	addq	$72, %rsp
  41ffcc:	c3 	retq
  41ffcd:	48 8d 48 0f 	leaq	15(%rax), %rcx
  41ffd1:	48 c1 e9 04 	shrq	$4, %rcx
  41ffd5:	e9 d7 fe ff ff 	jmp	-297 <runtime.testdefersizes+0x61>
  41ffda:	4c 89 44 24 20 	movq	%r8, 32(%rsp)
  41ffdf:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  41ffe4:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  41ffe9:	e8 12 1b 00 00 	callq	6930 <runtime.printlock>
  41ffee:	48 8d 05 69 b8 04 00 	leaq	309353(%rip), %rax
  41fff5:	48 89 04 24 	movq	%rax, (%rsp)
  41fff9:	48 c7 44 24 08 18 00 00 00 	movq	$24, 8(%rsp)
  420002:	e8 39 24 00 00 	callq	9273 <runtime.printstring>
  420007:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42000c:	48 89 04 24 	movq	%rax, (%rsp)
  420010:	e8 5b 21 00 00 	callq	8539 <runtime.printuint>
  420015:	48 8d 05 60 9d 04 00 	leaq	302432(%rip), %rax
  42001c:	48 89 04 24 	movq	%rax, (%rsp)
  420020:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  420029:	e8 12 24 00 00 	callq	9234 <runtime.printstring>
  42002e:	48 8b 44 24 10 	movq	16(%rsp), %rax
  420033:	48 89 04 24 	movq	%rax, (%rsp)
  420037:	e8 34 21 00 00 	callq	8500 <runtime.printuint>
  42003c:	48 8d 05 17 a0 04 00 	leaq	303127(%rip), %rax
  420043:	48 89 04 24 	movq	%rax, (%rsp)
  420047:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  420050:	e8 eb 23 00 00 	callq	9195 <runtime.printstring>
  420055:	48 8b 44 24 20 	movq	32(%rsp), %rax
  42005a:	48 89 04 24 	movq	%rax, (%rsp)
  42005e:	e8 0d 21 00 00 	callq	8461 <runtime.printuint>
  420063:	e8 28 1d 00 00 	callq	7464 <runtime.printnl>
  420068:	e8 13 1b 00 00 	callq	6931 <runtime.printunlock>
  42006d:	48 8d 05 f5 af 04 00 	leaq	307189(%rip), %rax
  420074:	48 89 04 24 	movq	%rax, (%rsp)
  420078:	48 c7 44 24 08 14 00 00 00 	movq	$20, 8(%rsp)
  420081:	e8 4a 11 00 00 	callq	4426 <runtime.throw>
  420086:	0f 0b 	ud2
  420088:	e8 b3 f9 ff ff 	callq	-1613 <runtime.panicindex>
  42008d:	0f 0b 	ud2
  42008f:	e8 ac f9 ff ff 	callq	-1620 <runtime.panicindex>
  420094:	0f 0b 	ud2
  420096:	e8 d5 44 02 00 	callq	148693 <runtime.morestack_noctxt>
  42009b:	e9 b0 fd ff ff 	jmp	-592 <runtime.testdefersizes>

runtime.init.3:
  4200a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4200a9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4200ad:	76 5d 	jbe	93 <runtime.init.3+0x6c>
  4200af:	48 83 ec 18 	subq	$24, %rsp
  4200b3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  4200b8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  4200bd:	0f 57 c0 	xorps	%xmm0, %xmm0
  4200c0:	0f 11 04 24 	movups	%xmm0, (%rsp)
  4200c4:	48 8b 0d 95 4a 05 00 	movq	346773(%rip), %rcx
  4200cb:	48 8d 15 ae 3a 03 00 	leaq	211630(%rip), %rdx
  4200d2:	48 89 14 24 	movq	%rdx, (%rsp)
  4200d6:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4200db:	48 8b 0c 24 	movq	(%rsp), %rcx
  4200df:	8b 15 2b 39 0a 00 	movl	669995(%rip), %edx
  4200e5:	48 8b 41 30 	movq	48(%rcx), %rax
  4200e9:	85 d2 	testl	%edx, %edx
  4200eb:	75 11 	jne	17 <runtime.init.3+0x5e>
  4200ed:	48 89 05 54 75 08 00 	movq	%rax, 554324(%rip)
  4200f4:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  4200f9:	48 83 c4 18 	addq	$24, %rsp
  4200fd:	c3 	retq
  4200fe:	48 8d 3d 43 75 08 00 	leaq	554307(%rip), %rdi
  420105:	e8 96 67 02 00 	callq	157590 <runtime.gcWriteBarrier>
  42010a:	eb e8 	jmp	-24 <runtime.init.3+0x54>
  42010c:	e8 5f 44 02 00 	callq	148575 <runtime.morestack_noctxt>
  420111:	eb 8d 	jmp	-115 <runtime.init.3>
  420113:	cc 	int3
  420114:	cc 	int3
  420115:	cc 	int3
  420116:	cc 	int3
  420117:	cc 	int3
  420118:	cc 	int3
  420119:	cc 	int3
  42011a:	cc 	int3
  42011b:	cc 	int3
  42011c:	cc 	int3
  42011d:	cc 	int3
  42011e:	cc 	int3
  42011f:	cc 	int3

runtime.newdefer:
  420120:	48 83 ec 60 	subq	$96, %rsp
  420124:	48 89 6c 24 58 	movq	%rbp, 88(%rsp)
  420129:	48 8d 6c 24 58 	leaq	88(%rsp), %rbp
  42012e:	48 c7 44 24 18 00 00 00 00 	movq	$0, 24(%rsp)
  420137:	8b 4c 24 68 	movl	104(%rsp), %ecx
  42013b:	48 63 d1 	movslq	%ecx, %rdx
  42013e:	48 85 d2 	testq	%rdx, %rdx
  420141:	0f 87 a9 01 00 00 	ja	425 <runtime.newdefer+0x1d0>
  420147:	31 c0 	xorl	%eax, %eax
  420149:	64 48 8b 14 25 f8 ff ff ff 	movq	%fs:-8, %rdx
  420152:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  420157:	48 83 f8 05 	cmpq	$5, %rax
  42015b:	0f 83 9d 00 00 00 	jae	157 <runtime.newdefer+0xde>
  420161:	48 8b 5a 30 	movq	48(%rdx), %rbx
  420165:	48 8b 9b d0 00 00 00 	movq	208(%rbx), %rbx
  42016c:	84 03 	testb	%al, (%rbx)
  42016e:	48 8d 34 40 	leaq	(%rax,%rax,2), %rsi
  420172:	4c 8b 44 f3 60 	movq	96(%rbx,%rsi,8), %r8
  420177:	4d 85 c0 	testq	%r8, %r8
  42017a:	75 18 	jne	24 <runtime.newdefer+0x74>
  42017c:	4c 8d 05 9d 77 08 00 	leaq	554909(%rip), %r8
  420183:	4d 8b 84 c0 a8 00 00 00 	movq	168(%r8,%rax,8), %r8
  42018b:	4d 85 c0 	testq	%r8, %r8
  42018e:	0f 85 16 01 00 00 	jne	278 <runtime.newdefer+0x18a>
  420194:	4c 8b 44 f3 60 	movq	96(%rbx,%rsi,8), %r8
  420199:	4c 8b 4c f3 58 	movq	88(%rbx,%rsi,8), %r9
  42019e:	4d 85 c0 	testq	%r8, %r8
  4201a1:	7e 5b 	jle	91 <runtime.newdefer+0xde>
  4201a3:	4d 8d 50 ff 	leaq	-1(%r8), %r10
  4201a7:	4d 39 c2 	cmpq	%r8, %r10
  4201aa:	0f 83 5b 01 00 00 	jae	347 <runtime.newdefer+0x1eb>
  4201b0:	4f 8b 4c c1 f8 	movq	-8(%r9,%r8,8), %r9
  4201b5:	4c 89 4c 24 18 	movq	%r9, 24(%rsp)
  4201ba:	4c 8b 4c f3 58 	movq	88(%rbx,%rsi,8), %r9
  4201bf:	4c 8b 5c f3 60 	movq	96(%rbx,%rsi,8), %r11
  4201c4:	4d 39 da 	cmpq	%r11, %r10
  4201c7:	0f 83 37 01 00 00 	jae	311 <runtime.newdefer+0x1e4>
  4201cd:	4b 8d 7c c1 f8 	leaq	-8(%r9,%r8,8), %rdi
  4201d2:	44 8b 1d 37 38 0a 00 	movl	669751(%rip), %r11d
  4201d9:	45 85 db 	testl	%r11d, %r11d
  4201dc:	0f 85 bc 00 00 00 	jne	188 <runtime.newdefer+0x17e>
  4201e2:	4b c7 44 c1 f8 00 00 00 00 	movq	$0, -8(%r9,%r8,8)
  4201eb:	4c 8b 44 f3 68 	movq	104(%rbx,%rsi,8), %r8
  4201f0:	4d 39 c2 	cmpq	%r8, %r10
  4201f3:	0f 87 04 01 00 00 	ja	260 <runtime.newdefer+0x1dd>
  4201f9:	4c 89 54 f3 60 	movq	%r10, 96(%rbx,%rsi,8)
  4201fe:	48 8b 5c 24 18 	movq	24(%rsp), %rbx
  420203:	48 85 db 	testq	%rbx, %rbx
  420206:	74 60 	je	96 <runtime.newdefer+0x148>
  420208:	48 8b 5c 24 18 	movq	24(%rsp), %rbx
  42020d:	89 0b 	movl	%ecx, (%rbx)
  42020f:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  420214:	84 01 	testb	%al, (%rcx)
  420216:	8b 1d f4 37 0a 00 	movl	669684(%rip), %ebx
  42021c:	48 8d 79 28 	leaq	40(%rcx), %rdi
  420220:	48 8b 42 28 	movq	40(%rdx), %rax
  420224:	48 8d 72 28 	leaq	40(%rdx), %rsi
  420228:	85 db 	testl	%ebx, %ebx
  42022a:	75 35 	jne	53 <runtime.newdefer+0x141>
  42022c:	48 89 41 28 	movq	%rax, 40(%rcx)
  420230:	8b 0d da 37 0a 00 	movl	669658(%rip), %ecx
  420236:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42023b:	85 c9 	testl	%ecx, %ecx
  42023d:	75 18 	jne	24 <runtime.newdefer+0x137>
  42023f:	48 89 42 28 	movq	%rax, 40(%rdx)
  420243:	48 8b 44 24 18 	movq	24(%rsp), %rax
  420248:	48 89 44 24 70 	movq	%rax, 112(%rsp)
  42024d:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  420252:	48 83 c4 60 	addq	$96, %rsp
  420256:	c3 	retq
  420257:	48 89 f7 	movq	%rsi, %rdi
  42025a:	e8 41 66 02 00 	callq	157249 <runtime.gcWriteBarrier>
  42025f:	eb e2 	jmp	-30 <runtime.newdefer+0x123>
  420261:	e8 3a 66 02 00 	callq	157242 <runtime.gcWriteBarrier>
  420266:	eb c8 	jmp	-56 <runtime.newdefer+0x110>
  420268:	48 8d 05 81 2b 02 00 	leaq	142209(%rip), %rax
  42026f:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  420274:	89 4c 24 30 	movl	%ecx, 48(%rsp)
  420278:	48 8d 44 24 18 	leaq	24(%rsp), %rax
  42027d:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  420282:	48 8d 44 24 28 	leaq	40(%rsp), %rax
  420287:	48 89 04 24 	movq	%rax, (%rsp)
  42028b:	e8 90 41 02 00 	callq	147856 <runtime.systemstack>
  420290:	8b 4c 24 68 	movl	104(%rsp), %ecx
  420294:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  420299:	e9 6a ff ff ff 	jmp	-150 <runtime.newdefer+0xe8>
  42029e:	31 c0 	xorl	%eax, %eax
  4202a0:	e8 fb 65 02 00 	callq	157179 <runtime.gcWriteBarrier>
  4202a5:	e9 41 ff ff ff 	jmp	-191 <runtime.newdefer+0xcb>
  4202aa:	48 89 5c 24 20 	movq	%rbx, 32(%rsp)
  4202af:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  4202b4:	48 8d 0d 55 29 02 00 	leaq	141653(%rip), %rcx
  4202bb:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  4202c0:	48 89 5c 24 48 	movq	%rbx, 72(%rsp)
  4202c5:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  4202ca:	48 8d 44 24 40 	leaq	64(%rsp), %rax
  4202cf:	48 89 04 24 	movq	%rax, (%rsp)
  4202d3:	e8 48 41 02 00 	callq	147784 <runtime.systemstack>
  4202d8:	8b 4c 24 68 	movl	104(%rsp), %ecx
  4202dc:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  4202e1:	48 8b 5c 24 20 	movq	32(%rsp), %rbx
  4202e6:	48 8b 74 24 08 	movq	8(%rsp), %rsi
  4202eb:	e9 a4 fe ff ff 	jmp	-348 <runtime.newdefer+0x74>
  4202f0:	48 8d 42 0f 	leaq	15(%rdx), %rax
  4202f4:	48 c1 e8 04 	shrq	$4, %rax
  4202f8:	e9 4c fe ff ff 	jmp	-436 <runtime.newdefer+0x29>
  4202fd:	e8 ae f7 ff ff 	callq	-2130 <runtime.panicslice>
  420302:	0f 0b 	ud2
  420304:	e8 37 f7 ff ff 	callq	-2249 <runtime.panicindex>
  420309:	0f 0b 	ud2
  42030b:	e8 30 f7 ff ff 	callq	-2256 <runtime.panicindex>
  420310:	0f 0b 	ud2
  420312:	cc 	int3
  420313:	cc 	int3
  420314:	cc 	int3
  420315:	cc 	int3
  420316:	cc 	int3
  420317:	cc 	int3
  420318:	cc 	int3
  420319:	cc 	int3
  42031a:	cc 	int3
  42031b:	cc 	int3
  42031c:	cc 	int3
  42031d:	cc 	int3
  42031e:	cc 	int3
  42031f:	cc 	int3

runtime.freedefer:
  420320:	48 81 ec 88 00 00 00 	subq	$136, %rsp
  420327:	48 89 ac 24 80 00 00 00 	movq	%rbp, 128(%rsp)
  42032f:	48 8d ac 24 80 00 00 00 	leaq	128(%rsp), %rbp
  420337:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  42033f:	48 8b 48 20 	movq	32(%rax), %rcx
  420343:	48 8d 50 20 	leaq	32(%rax), %rdx
  420347:	48 89 54 24 60 	movq	%rdx, 96(%rsp)
  42034c:	48 85 c9 	testq	%rcx, %rcx
  42034f:	0f 85 0a 02 00 00 	jne	522 <runtime.freedefer+0x23f>
  420355:	48 8b 48 18 	movq	24(%rax), %rcx
  420359:	48 8d 78 18 	leaq	24(%rax), %rdi
  42035d:	48 89 7c 24 58 	movq	%rdi, 88(%rsp)
  420362:	48 85 c9 	testq	%rcx, %rcx
  420365:	0f 85 d8 01 00 00 	jne	472 <runtime.freedefer+0x223>
  42036b:	48 63 08 	movslq	(%rax), %rcx
  42036e:	48 85 c9 	testq	%rcx, %rcx
  420371:	0f 87 bf 01 00 00 	ja	447 <runtime.freedefer+0x216>
  420377:	31 c9 	xorl	%ecx, %ecx
  420379:	48 83 f9 05 	cmpq	$5, %rcx
  42037d:	0f 83 a3 01 00 00 	jae	419 <runtime.freedefer+0x206>
  420383:	64 48 8b 1c 25 f8 ff ff ff 	movq	%fs:-8, %rbx
  42038c:	48 8b 5b 30 	movq	48(%rbx), %rbx
  420390:	48 8b 9b d0 00 00 00 	movq	208(%rbx), %rbx
  420397:	48 89 5c 24 50 	movq	%rbx, 80(%rsp)
  42039c:	84 03 	testb	%al, (%rbx)
  42039e:	48 8d 34 49 	leaq	(%rcx,%rcx,2), %rsi
  4203a2:	48 89 74 24 40 	movq	%rsi, 64(%rsp)
  4203a7:	4c 8b 44 f3 68 	movq	104(%rbx,%rsi,8), %r8
  4203ac:	4c 8b 4c f3 60 	movq	96(%rbx,%rsi,8), %r9
  4203b1:	4c 8d 54 f3 58 	leaq	88(%rbx,%rsi,8), %r10
  4203b6:	4c 89 54 24 48 	movq	%r10, 72(%rsp)
  4203bb:	4d 39 c1 	cmpq	%r8, %r9
  4203be:	0f 84 18 01 00 00 	je	280 <runtime.freedefer+0x1bc>
  4203c4:	c7 00 00 00 00 00 	movl	$0, (%rax)
  4203ca:	c6 40 04 00 	movb	$0, 4(%rax)
  4203ce:	0f 57 c0 	xorps	%xmm0, %xmm0
  4203d1:	0f 11 40 08 	movups	%xmm0, 8(%rax)
  4203d5:	8b 0d 35 36 0a 00 	movl	669237(%rip), %ecx
  4203db:	4c 8d 40 28 	leaq	40(%rax), %r8
  4203df:	85 c9 	testl	%ecx, %ecx
  4203e1:	0f 85 cf 00 00 00 	jne	207 <runtime.freedefer+0x196>
  4203e7:	0f 11 40 18 	movups	%xmm0, 24(%rax)
  4203eb:	48 c7 40 28 00 00 00 00 	movq	$0, 40(%rax)
  4203f3:	48 8b 4c f3 68 	movq	104(%rbx,%rsi,8), %rcx
  4203f8:	48 8b 54 f3 60 	movq	96(%rbx,%rsi,8), %rdx
  4203fd:	4c 8b 44 f3 58 	movq	88(%rbx,%rsi,8), %r8
  420402:	4c 8d 4a 01 	leaq	1(%rdx), %r9
  420406:	49 39 c9 	cmpq	%rcx, %r9
  420409:	7f 32 	jg	50 <runtime.freedefer+0x11d>
  42040b:	48 8d 4a 01 	leaq	1(%rdx), %rcx
  42040f:	48 89 4c f3 60 	movq	%rcx, 96(%rbx,%rsi,8)
  420414:	8b 0d f6 35 0a 00 	movl	669174(%rip), %ecx
  42041a:	49 8d 3c d0 	leaq	(%r8,%rdx,8), %rdi
  42041e:	85 c9 	testl	%ecx, %ecx
  420420:	75 14 	jne	20 <runtime.freedefer+0x116>
  420422:	49 89 04 d0 	movq	%rax, (%r8,%rdx,8)
  420426:	48 8b ac 24 80 00 00 00 	movq	128(%rsp), %rbp
  42042e:	48 81 c4 88 00 00 00 	addq	$136, %rsp
  420435:	c3 	retq
  420436:	e8 65 64 02 00 	callq	156773 <runtime.gcWriteBarrier>
  42043b:	eb e9 	jmp	-23 <runtime.freedefer+0x106>
  42043d:	48 8d 05 3c 37 03 00 	leaq	210748(%rip), %rax
  420444:	48 89 04 24 	movq	%rax, (%rsp)
  420448:	4c 89 44 24 08 	movq	%r8, 8(%rsp)
  42044d:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  420452:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  420457:	4c 89 4c 24 20 	movq	%r9, 32(%rsp)
  42045c:	e8 ff 33 01 00 	callq	78847 <runtime.growslice>
  420461:	48 8b 44 24 28 	movq	40(%rsp), %rax
  420466:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  42046b:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  420470:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  420475:	48 8b 74 24 50 	movq	80(%rsp), %rsi
  42047a:	48 89 54 de 68 	movq	%rdx, 104(%rsi,%rbx,8)
  42047f:	8b 15 8b 35 0a 00 	movl	669067(%rip), %edx
  420485:	85 d2 	testl	%edx, %edx
  420487:	75 21 	jne	33 <runtime.freedefer+0x18a>
  420489:	48 89 44 de 58 	movq	%rax, 88(%rsi,%rbx,8)
  42048e:	48 89 ca 	movq	%rcx, %rdx
  420491:	49 89 c0 	movq	%rax, %r8
  420494:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  42049c:	48 89 df 	movq	%rbx, %rdi
  42049f:	48 89 f3 	movq	%rsi, %rbx
  4204a2:	48 89 fe 	movq	%rdi, %rsi
  4204a5:	e9 61 ff ff ff 	jmp	-159 <runtime.freedefer+0xeb>
  4204aa:	48 8b 7c 24 48 	movq	72(%rsp), %rdi
  4204af:	e8 ec 63 02 00 	callq	156652 <runtime.gcWriteBarrier>
  4204b4:	eb d8 	jmp	-40 <runtime.freedefer+0x16e>
  4204b6:	48 89 c1 	movq	%rax, %rcx
  4204b9:	31 c0 	xorl	%eax, %eax
  4204bb:	e8 e0 63 02 00 	callq	156640 <runtime.gcWriteBarrier>
  4204c0:	48 89 d7 	movq	%rdx, %rdi
  4204c3:	31 c0 	xorl	%eax, %eax
  4204c5:	e8 d6 63 02 00 	callq	156630 <runtime.gcWriteBarrier>
  4204ca:	4c 89 c7 	movq	%r8, %rdi
  4204cd:	31 c0 	xorl	%eax, %eax
  4204cf:	e8 cc 63 02 00 	callq	156620 <runtime.gcWriteBarrier>
  4204d4:	48 89 c8 	movq	%rcx, %rax
  4204d7:	e9 17 ff ff ff 	jmp	-233 <runtime.freedefer+0xd3>
  4204dc:	48 8d 05 5d 2a 02 00 	leaq	141917(%rip), %rax
  4204e3:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  4204e8:	48 89 5c 24 70 	movq	%rbx, 112(%rsp)
  4204ed:	48 89 4c 24 78 	movq	%rcx, 120(%rsp)
  4204f2:	48 8d 44 24 68 	leaq	104(%rsp), %rax
  4204f7:	48 89 04 24 	movq	%rax, (%rsp)
  4204fb:	e8 20 3f 02 00 	callq	147232 <runtime.systemstack>
  420500:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  420508:	48 8b 54 24 60 	movq	96(%rsp), %rdx
  42050d:	48 8b 5c 24 50 	movq	80(%rsp), %rbx
  420512:	48 8b 74 24 40 	movq	64(%rsp), %rsi
  420517:	48 8b 7c 24 58 	movq	88(%rsp), %rdi
  42051c:	4c 8b 54 24 48 	movq	72(%rsp), %r10
  420521:	e9 9e fe ff ff 	jmp	-354 <runtime.freedefer+0xa4>
  420526:	48 8b ac 24 80 00 00 00 	movq	128(%rsp), %rbp
  42052e:	48 81 c4 88 00 00 00 	addq	$136, %rsp
  420535:	c3 	retq
  420536:	48 83 c1 0f 	addq	$15, %rcx
  42053a:	48 c1 e9 04 	shrq	$4, %rcx
  42053e:	e9 36 fe ff ff 	jmp	-458 <runtime.freedefer+0x59>
  420543:	e8 78 00 00 00 	callq	120 <runtime.freedeferfn>
  420548:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  420550:	48 8b 54 24 60 	movq	96(%rsp), %rdx
  420555:	48 8b 7c 24 58 	movq	88(%rsp), %rdi
  42055a:	e9 0c fe ff ff 	jmp	-500 <runtime.freedefer+0x4b>
  42055f:	e8 1c 00 00 00 	callq	28 <runtime.freedeferpanic>
  420564:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  42056c:	48 8b 54 24 60 	movq	96(%rsp), %rdx
  420571:	e9 df fd ff ff 	jmp	-545 <runtime.freedefer+0x35>
  420576:	cc 	int3
  420577:	cc 	int3
  420578:	cc 	int3
  420579:	cc 	int3
  42057a:	cc 	int3
  42057b:	cc 	int3
  42057c:	cc 	int3
  42057d:	cc 	int3
  42057e:	cc 	int3
  42057f:	cc 	int3

runtime.freedeferpanic:
  420580:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  420589:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42058d:	76 29 	jbe	41 <runtime.freedeferpanic+0x38>
  42058f:	48 83 ec 18 	subq	$24, %rsp
  420593:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  420598:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  42059d:	48 8d 05 7b bf 04 00 	leaq	311163(%rip), %rax
  4205a4:	48 89 04 24 	movq	%rax, (%rsp)
  4205a8:	48 c7 44 24 08 1e 00 00 00 	movq	$30, 8(%rsp)
  4205b1:	e8 1a 0c 00 00 	callq	3098 <runtime.throw>
  4205b6:	0f 0b 	ud2
  4205b8:	e8 b3 3f 02 00 	callq	147379 <runtime.morestack_noctxt>
  4205bd:	eb c1 	jmp	-63 <runtime.freedeferpanic>
  4205bf:	cc 	int3

runtime.freedeferfn:
  4205c0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4205c9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4205cd:	76 29 	jbe	41 <runtime.freedeferfn+0x38>
  4205cf:	48 83 ec 18 	subq	$24, %rsp
  4205d3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  4205d8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  4205dd:	48 8d 05 2a b6 04 00 	leaq	308778(%rip), %rax
  4205e4:	48 89 04 24 	movq	%rax, (%rsp)
  4205e8:	48 c7 44 24 08 1a 00 00 00 	movq	$26, 8(%rsp)
  4205f1:	e8 da 0b 00 00 	callq	3034 <runtime.throw>
  4205f6:	0f 0b 	ud2
  4205f8:	e8 73 3f 02 00 	callq	147315 <runtime.morestack_noctxt>
  4205fd:	eb c1 	jmp	-63 <runtime.freedeferfn>
  4205ff:	cc 	int3

runtime.deferreturn:
  420600:	48 83 ec 48 	subq	$72, %rsp
  420604:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  420609:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  42060e:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  420617:	48 8b 51 28 	movq	40(%rcx), %rdx
  42061b:	48 8d 79 28 	leaq	40(%rcx), %rdi
  42061f:	48 85 d2 	testq	%rdx, %rdx
  420622:	0f 84 0c 01 00 00 	je	268 <runtime.deferreturn+0x134>
  420628:	48 8b 5a 08 	movq	8(%rdx), %rbx
  42062c:	48 8d 74 24 50 	leaq	80(%rsp), %rsi
  420631:	48 39 f3 	cmpq	%rsi, %rbx
  420634:	0f 85 f0 00 00 00 	jne	240 <runtime.deferreturn+0x12a>
  42063a:	8b 1a 	movl	(%rdx), %ebx
  42063c:	85 db 	testl	%ebx, %ebx
  42063e:	0f 85 86 00 00 00 	jne	134 <runtime.deferreturn+0xca>
  420644:	48 8b 5a 18 	movq	24(%rdx), %rbx
  420648:	48 8d 72 18 	leaq	24(%rdx), %rsi
  42064c:	44 8b 05 bd 33 0a 00 	movl	668605(%rip), %r8d
  420653:	45 85 c0 	testl	%r8d, %r8d
  420656:	75 5d 	jne	93 <runtime.deferreturn+0xb5>
  420658:	48 c7 42 18 00 00 00 00 	movq	$0, 24(%rdx)
  420660:	48 89 5c 24 20 	movq	%rbx, 32(%rsp)
  420665:	84 01 	testb	%al, (%rcx)
  420667:	8b 35 a3 33 0a 00 	movl	668579(%rip), %esi
  42066d:	48 8b 42 28 	movq	40(%rdx), %rax
  420671:	85 f6 	testl	%esi, %esi
  420673:	75 39 	jne	57 <runtime.deferreturn+0xae>
  420675:	48 89 41 28 	movq	%rax, 40(%rcx)
  420679:	48 89 14 24 	movq	%rdx, (%rsp)
  42067d:	e8 9e fc ff ff 	callq	-866 <runtime.freedefer>
  420682:	48 8d 44 24 50 	leaq	80(%rsp), %rax
  420687:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  42068c:	48 8b 44 24 20 	movq	32(%rsp), %rax
  420691:	48 89 04 24 	movq	%rax, (%rsp)
  420695:	48 8b 44 24 38 	movq	56(%rsp), %rax
  42069a:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  42069f:	e8 ec 54 02 00 	callq	152812 <runtime.jmpdefer>
  4206a4:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  4206a9:	48 83 c4 48 	addq	$72, %rsp
  4206ad:	c3 	retq
  4206ae:	e8 ed 61 02 00 	callq	156141 <runtime.gcWriteBarrier>
  4206b3:	eb c4 	jmp	-60 <runtime.deferreturn+0x79>
  4206b5:	48 89 f8 	movq	%rdi, %rax
  4206b8:	48 89 f7 	movq	%rsi, %rdi
  4206bb:	49 89 c0 	movq	%rax, %r8
  4206be:	31 c0 	xorl	%eax, %eax
  4206c0:	e8 db 61 02 00 	callq	156123 <runtime.gcWriteBarrier>
  4206c5:	4c 89 c7 	movq	%r8, %rdi
  4206c8:	eb 96 	jmp	-106 <runtime.deferreturn+0x60>
  4206ca:	83 fb 08 	cmpl	$8, %ebx
  4206cd:	75 19 	jne	25 <runtime.deferreturn+0xe8>
  4206cf:	48 8d 5a 30 	leaq	48(%rdx), %rbx
  4206d3:	84 03 	testb	%al, (%rbx)
  4206d5:	bb 30 00 00 00 	movl	$48, %ebx
  4206da:	48 8b 1c 13 	movq	(%rbx,%rdx), %rbx
  4206de:	48 89 5c 24 50 	movq	%rbx, 80(%rsp)
  4206e3:	e9 5c ff ff ff 	jmp	-164 <runtime.deferreturn+0x44>
  4206e8:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  4206ed:	48 89 7c 24 30 	movq	%rdi, 48(%rsp)
  4206f2:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  4206f7:	48 63 c3 	movslq	%ebx, %rax
  4206fa:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  4206ff:	48 8d 44 24 50 	leaq	80(%rsp), %rax
  420704:	48 89 04 24 	movq	%rax, (%rsp)
  420708:	48 8d 4a 30 	leaq	48(%rdx), %rcx
  42070c:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  420711:	e8 ea 69 02 00 	callq	158186 <runtime.memmove>
  420716:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  42071b:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  420720:	48 8b 7c 24 30 	movq	48(%rsp), %rdi
  420725:	e9 1a ff ff ff 	jmp	-230 <runtime.deferreturn+0x44>
  42072a:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  42072f:	48 83 c4 48 	addq	$72, %rsp
  420733:	c3 	retq
  420734:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  420739:	48 83 c4 48 	addq	$72, %rsp
  42073d:	c3 	retq
  42073e:	cc 	int3
  42073f:	cc 	int3

runtime.preprintpanics:
  420740:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  420749:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42074d:	0f 86 cf 01 00 00 	jbe	463 <runtime.preprintpanics+0x1e2>
  420753:	48 83 ec 70 	subq	$112, %rsp
  420757:	48 89 6c 24 68 	movq	%rbp, 104(%rsp)
  42075c:	48 8d 6c 24 68 	leaq	104(%rsp), %rbp
  420761:	c7 04 24 00 00 00 00 	movl	$0, (%rsp)
  420768:	48 8d 05 49 da 04 00 	leaq	318025(%rip), %rax
  42076f:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  420774:	e8 a7 f5 ff ff 	callq	-2649 <runtime.deferproc>
  420779:	85 c0 	testl	%eax, %eax
  42077b:	0f 85 91 01 00 00 	jne	401 <runtime.preprintpanics+0x1d2>
  420781:	48 8b 44 24 78 	movq	120(%rsp), %rax
  420786:	eb 04 	jmp	4 <runtime.preprintpanics+0x4c>
  420788:	48 8b 40 18 	movq	24(%rax), %rax
  42078c:	48 85 c0 	testq	%rax, %rax
  42078f:	0f 84 6d 01 00 00 	je	365 <runtime.preprintpanics+0x1c2>
  420795:	48 8b 48 10 	movq	16(%rax), %rcx
  420799:	48 8b 50 08 	movq	8(%rax), %rdx
  42079d:	48 8d 58 10 	leaq	16(%rax), %rbx
  4207a1:	48 85 d2 	testq	%rdx, %rdx
  4207a4:	74 e2 	je	-30 <runtime.preprintpanics+0x48>
  4207a6:	48 89 44 24 78 	movq	%rax, 120(%rsp)
  4207ab:	48 89 5c 24 40 	movq	%rbx, 64(%rsp)
  4207b0:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  4207b5:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  4207ba:	48 8d 05 7f b2 03 00 	leaq	242303(%rip), %rax
  4207c1:	48 89 04 24 	movq	%rax, (%rsp)
  4207c5:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  4207ca:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  4207cf:	e8 7c 8a fe ff 	callq	-95620 <runtime.assertE2I2>
  4207d4:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4207d9:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  4207de:	0f b6 54 24 28 	movzbl	40(%rsp), %edx
  4207e3:	84 d2 	testb	%dl, %dl
  4207e5:	74 6d 	je	109 <runtime.preprintpanics+0x114>
  4207e7:	48 8b 49 18 	movq	24(%rcx), %rcx
  4207eb:	48 89 04 24 	movq	%rax, (%rsp)
  4207ef:	ff d1 	callq	*%rcx
  4207f1:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4207f6:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  4207fb:	48 89 4c 24 58 	movq	%rcx, 88(%rsp)
  420800:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  420805:	48 8d 05 94 6b 03 00 	leaq	224148(%rip), %rax
  42080c:	48 89 04 24 	movq	%rax, (%rsp)
  420810:	48 8d 4c 24 58 	leaq	88(%rsp), %rcx
  420815:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  42081a:	e8 81 89 fe ff 	callq	-95871 <runtime.convT2Estring>
  42081f:	48 8b 44 24 18 	movq	24(%rsp), %rax
  420824:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  420829:	48 8b 54 24 78 	movq	120(%rsp), %rdx
  42082e:	48 89 4a 08 	movq	%rcx, 8(%rdx)
  420832:	8b 0d d8 31 0a 00 	movl	668120(%rip), %ecx
  420838:	85 c9 	testl	%ecx, %ecx
  42083a:	75 0c 	jne	12 <runtime.preprintpanics+0x108>
  42083c:	48 89 42 10 	movq	%rax, 16(%rdx)
  420840:	48 89 d0 	movq	%rdx, %rax
  420843:	e9 40 ff ff ff 	jmp	-192 <runtime.preprintpanics+0x48>
  420848:	48 8b 7c 24 40 	movq	64(%rsp), %rdi
  42084d:	e8 4e 60 02 00 	callq	155726 <runtime.gcWriteBarrier>
  420852:	eb ec 	jmp	-20 <runtime.preprintpanics+0x100>
  420854:	48 8d 05 65 b2 03 00 	leaq	242277(%rip), %rax
  42085b:	48 89 04 24 	movq	%rax, (%rsp)
  42085f:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  420864:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  420869:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  42086e:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  420873:	e8 d8 89 fe ff 	callq	-95784 <runtime.assertE2I2>
  420878:	0f b6 44 24 28 	movzbl	40(%rsp), %eax
  42087d:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  420882:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  420887:	84 c0 	testb	%al, %al
  420889:	75 0a 	jne	10 <runtime.preprintpanics+0x155>
  42088b:	48 8b 44 24 78 	movq	120(%rsp), %rax
  420890:	e9 f3 fe ff ff 	jmp	-269 <runtime.preprintpanics+0x48>
  420895:	48 8b 42 18 	movq	24(%rdx), %rax
  420899:	48 89 0c 24 	movq	%rcx, (%rsp)
  42089d:	ff d0 	callq	*%rax
  42089f:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4208a4:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  4208a9:	48 89 4c 24 48 	movq	%rcx, 72(%rsp)
  4208ae:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  4208b3:	48 8d 05 e6 6a 03 00 	leaq	223974(%rip), %rax
  4208ba:	48 89 04 24 	movq	%rax, (%rsp)
  4208be:	48 8d 4c 24 48 	leaq	72(%rsp), %rcx
  4208c3:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4208c8:	e8 d3 88 fe ff 	callq	-96045 <runtime.convT2Estring>
  4208cd:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4208d2:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  4208d7:	48 8b 54 24 78 	movq	120(%rsp), %rdx
  4208dc:	48 89 4a 08 	movq	%rcx, 8(%rdx)
  4208e0:	8b 0d 2a 31 0a 00 	movl	667946(%rip), %ecx
  4208e6:	85 c9 	testl	%ecx, %ecx
  4208e8:	75 0c 	jne	12 <runtime.preprintpanics+0x1b6>
  4208ea:	48 89 42 10 	movq	%rax, 16(%rdx)
  4208ee:	48 89 d0 	movq	%rdx, %rax
  4208f1:	e9 92 fe ff ff 	jmp	-366 <runtime.preprintpanics+0x48>
  4208f6:	48 8b 7c 24 40 	movq	64(%rsp), %rdi
  4208fb:	e8 a0 5f 02 00 	callq	155552 <runtime.gcWriteBarrier>
  420900:	eb ec 	jmp	-20 <runtime.preprintpanics+0x1ae>
  420902:	90 	nop
  420903:	e8 f8 fc ff ff 	callq	-776 <runtime.deferreturn>
  420908:	48 8b 6c 24 68 	movq	104(%rsp), %rbp
  42090d:	48 83 c4 70 	addq	$112, %rsp
  420911:	c3 	retq
  420912:	90 	nop
  420913:	e8 e8 fc ff ff 	callq	-792 <runtime.deferreturn>
  420918:	48 8b 6c 24 68 	movq	104(%rsp), %rbp
  42091d:	48 83 c4 70 	addq	$112, %rsp
  420921:	c3 	retq
  420922:	e8 49 3c 02 00 	callq	146505 <runtime.morestack_noctxt>
  420927:	e9 14 fe ff ff 	jmp	-492 <runtime.preprintpanics>
  42092c:	cc 	int3
  42092d:	cc 	int3
  42092e:	cc 	int3
  42092f:	cc 	int3

runtime.printpanics:
  420930:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  420939:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42093d:	0f 86 da 00 00 00 	jbe	218 <runtime.printpanics+0xed>
  420943:	48 83 ec 18 	subq	$24, %rsp
  420947:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  42094c:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  420951:	48 8b 44 24 20 	movq	32(%rsp), %rax
  420956:	48 8b 48 18 	movq	24(%rax), %rcx
  42095a:	48 85 c9 	testq	%rcx, %rcx
  42095d:	0f 85 89 00 00 00 	jne	137 <runtime.printpanics+0xbc>
  420963:	e8 98 11 00 00 	callq	4504 <runtime.printlock>
  420968:	48 8d 05 70 95 04 00 	leaq	300400(%rip), %rax
  42096f:	48 89 04 24 	movq	%rax, (%rsp)
  420973:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  42097c:	e8 bf 1a 00 00 	callq	6847 <runtime.printstring>
  420981:	e8 fa 11 00 00 	callq	4602 <runtime.printunlock>
  420986:	48 8b 44 24 20 	movq	32(%rsp), %rax
  42098b:	48 8b 48 08 	movq	8(%rax), %rcx
  42098f:	48 8b 50 10 	movq	16(%rax), %rdx
  420993:	48 89 0c 24 	movq	%rcx, (%rsp)
  420997:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  42099c:	e8 5f 45 fe ff 	callq	-113313 <runtime.printany>
  4209a1:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4209a6:	0f b6 40 20 	movzbl	32(%rax), %eax
  4209aa:	84 c0 	testb	%al, %al
  4209ac:	75 19 	jne	25 <runtime.printpanics+0x97>
  4209ae:	e8 4d 11 00 00 	callq	4429 <runtime.printlock>
  4209b3:	e8 d8 13 00 00 	callq	5080 <runtime.printnl>
  4209b8:	e8 c3 11 00 00 	callq	4547 <runtime.printunlock>
  4209bd:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  4209c2:	48 83 c4 18 	addq	$24, %rsp
  4209c6:	c3 	retq
  4209c7:	e8 34 11 00 00 	callq	4404 <runtime.printlock>
  4209cc:	48 8d 05 0f 9b 04 00 	leaq	301839(%rip), %rax
  4209d3:	48 89 04 24 	movq	%rax, (%rsp)
  4209d7:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  4209e0:	e8 5b 1a 00 00 	callq	6747 <runtime.printstring>
  4209e5:	e8 96 11 00 00 	callq	4502 <runtime.printunlock>
  4209ea:	eb c2 	jmp	-62 <runtime.printpanics+0x7e>
  4209ec:	48 89 0c 24 	movq	%rcx, (%rsp)
  4209f0:	e8 3b ff ff ff 	callq	-197 <runtime.printpanics>
  4209f5:	e8 06 11 00 00 	callq	4358 <runtime.printlock>
  4209fa:	48 8d 05 5d 92 04 00 	leaq	299613(%rip), %rax
  420a01:	48 89 04 24 	movq	%rax, (%rsp)
  420a05:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  420a0e:	e8 2d 1a 00 00 	callq	6701 <runtime.printstring>
  420a13:	e8 68 11 00 00 	callq	4456 <runtime.printunlock>
  420a18:	e9 46 ff ff ff 	jmp	-186 <runtime.printpanics+0x33>
  420a1d:	e8 4e 3b 02 00 	callq	146254 <runtime.morestack_noctxt>
  420a22:	e9 09 ff ff ff 	jmp	-247 <runtime.printpanics>
  420a27:	cc 	int3
  420a28:	cc 	int3
  420a29:	cc 	int3
  420a2a:	cc 	int3
  420a2b:	cc 	int3
  420a2c:	cc 	int3
  420a2d:	cc 	int3
  420a2e:	cc 	int3
  420a2f:	cc 	int3

runtime.gopanic:
  420a30:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  420a39:	48 8d 44 24 e8 	leaq	-24(%rsp), %rax
  420a3e:	48 3b 41 10 	cmpq	16(%rcx), %rax
  420a42:	0f 86 80 06 00 00 	jbe	1664 <runtime.gopanic+0x698>
  420a48:	48 81 ec 98 00 00 00 	subq	$152, %rsp
  420a4f:	48 89 ac 24 90 00 00 00 	movq	%rbp, 144(%rsp)
  420a57:	48 8d ac 24 90 00 00 00 	leaq	144(%rsp), %rbp
  420a5f:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  420a68:	48 8b 51 30 	movq	48(%rcx), %rdx
  420a6c:	48 8b 9a c0 00 00 00 	movq	192(%rdx), %rbx
  420a73:	48 39 cb 	cmpq	%rcx, %rbx
  420a76:	0f 85 e1 05 00 00 	jne	1505 <runtime.gopanic+0x62d>
  420a7c:	8b 9a 04 01 00 00 	movl	260(%rdx), %ebx
  420a82:	85 db 	testl	%ebx, %ebx
  420a84:	0f 85 a3 05 00 00 	jne	1443 <runtime.gopanic+0x5fd>
  420a8a:	8b 9a e8 00 00 00 	movl	232(%rdx), %ebx
  420a90:	85 db 	testl	%ebx, %ebx
  420a92:	0f 85 2a 05 00 00 	jne	1322 <runtime.gopanic+0x592>
  420a98:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  420a9d:	48 8b 9a f8 00 00 00 	movq	248(%rdx), %rbx
  420aa4:	48 85 db 	testq	%rbx, %rbx
  420aa7:	0f 85 35 04 00 00 	jne	1077 <runtime.gopanic+0x4b2>
  420aad:	8b 92 00 01 00 00 	movl	256(%rdx), %edx
  420ab3:	85 d2 	testl	%edx, %edx
  420ab5:	0f 85 bc 03 00 00 	jne	956 <runtime.gopanic+0x447>
  420abb:	48 c7 44 24 68 00 00 00 00 	movq	$0, 104(%rsp)
  420ac4:	0f 57 c0 	xorps	%xmm0, %xmm0
  420ac7:	0f 11 44 24 70 	movups	%xmm0, 112(%rsp)
  420acc:	0f 11 84 24 80 00 00 00 	movups	%xmm0, 128(%rsp)
  420ad4:	48 8b 94 24 a0 00 00 00 	movq	160(%rsp), %rdx
  420adc:	48 89 54 24 70 	movq	%rdx, 112(%rsp)
  420ae1:	48 8b 94 24 a8 00 00 00 	movq	168(%rsp), %rdx
  420ae9:	48 89 54 24 78 	movq	%rdx, 120(%rsp)
  420aee:	48 8b 51 20 	movq	32(%rcx), %rdx
  420af2:	48 89 94 24 80 00 00 00 	movq	%rdx, 128(%rsp)
  420afa:	48 8d 79 20 	leaq	32(%rcx), %rdi
  420afe:	8b 15 0c 2f 0a 00 	movl	667404(%rip), %edx
  420b04:	85 d2 	testl	%edx, %edx
  420b06:	0f 85 fe 02 00 00 	jne	766 <runtime.gopanic+0x3da>
  420b0c:	48 8d 44 24 68 	leaq	104(%rsp), %rax
  420b11:	48 89 41 20 	movq	%rax, 32(%rcx)
  420b15:	48 89 7c 24 60 	movq	%rdi, 96(%rsp)
  420b1a:	ba 01 00 00 00 	movl	$1, %edx
  420b1f:	48 8d 1d d6 2d 0a 00 	leaq	667094(%rip), %rbx
  420b26:	f0 	lock
  420b27:	0f c1 13 	xaddl	%edx, (%rbx)
  420b2a:	eb 16 	jmp	22 <runtime.gopanic+0x112>
  420b2c:	48 8d 44 24 68 	leaq	104(%rsp), %rax
  420b31:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  420b36:	48 8d 1d bf 2d 0a 00 	leaq	667071(%rip), %rbx
  420b3d:	48 8b 7c 24 60 	movq	96(%rsp), %rdi
  420b42:	48 8b 51 28 	movq	40(%rcx), %rdx
  420b46:	48 8d 71 28 	leaq	40(%rcx), %rsi
  420b4a:	48 85 d2 	testq	%rdx, %rdx
  420b4d:	0f 84 5d 02 00 00 	je	605 <runtime.gopanic+0x380>
  420b53:	44 0f b6 42 04 	movzbl	4(%rdx), %r8d
  420b58:	45 84 c0 	testb	%r8b, %r8b
  420b5b:	0f 84 82 00 00 00 	je	130 <runtime.gopanic+0x1b3>
  420b61:	4c 8b 42 20 	movq	32(%rdx), %r8
  420b65:	4c 8d 4a 20 	leaq	32(%rdx), %r9
  420b69:	4d 85 c0 	testq	%r8, %r8
  420b6c:	74 05 	je	5 <runtime.gopanic+0x143>
  420b6e:	41 c6 40 21 01 	movb	$1, 33(%r8)
  420b73:	44 8b 05 96 2e 0a 00 	movl	667286(%rip), %r8d
  420b7a:	4c 8d 52 18 	leaq	24(%rdx), %r10
  420b7e:	45 85 c0 	testl	%r8d, %r8d
  420b81:	75 3f 	jne	63 <runtime.gopanic+0x192>
  420b83:	48 c7 42 20 00 00 00 00 	movq	$0, 32(%rdx)
  420b8b:	48 c7 42 18 00 00 00 00 	movq	$0, 24(%rdx)
  420b93:	44 8b 05 76 2e 0a 00 	movl	667254(%rip), %r8d
  420b9a:	4c 8b 4a 28 	movq	40(%rdx), %r9
  420b9e:	45 85 c0 	testl	%r8d, %r8d
  420ba1:	75 12 	jne	18 <runtime.gopanic+0x185>
  420ba3:	4c 89 49 28 	movq	%r9, 40(%rcx)
  420ba7:	48 89 14 24 	movq	%rdx, (%rsp)
  420bab:	e8 70 f7 ff ff 	callq	-2192 <runtime.freedefer>
  420bb0:	e9 77 ff ff ff 	jmp	-137 <runtime.gopanic+0xfc>
  420bb5:	48 89 f7 	movq	%rsi, %rdi
  420bb8:	4c 89 c8 	movq	%r9, %rax
  420bbb:	e8 e0 5c 02 00 	callq	154848 <runtime.gcWriteBarrier>
  420bc0:	eb e5 	jmp	-27 <runtime.gopanic+0x177>
  420bc2:	49 89 f8 	movq	%rdi, %r8
  420bc5:	4c 89 cf 	movq	%r9, %rdi
  420bc8:	31 c0 	xorl	%eax, %eax
  420bca:	e8 d1 5c 02 00 	callq	154833 <runtime.gcWriteBarrier>
  420bcf:	4c 89 d7 	movq	%r10, %rdi
  420bd2:	31 c0 	xorl	%eax, %eax
  420bd4:	e8 c7 5c 02 00 	callq	154823 <runtime.gcWriteBarrier>
  420bd9:	48 8d 44 24 68 	leaq	104(%rsp), %rax
  420bde:	4c 89 c7 	movq	%r8, %rdi
  420be1:	eb b0 	jmp	-80 <runtime.gopanic+0x163>
  420be3:	48 89 74 24 58 	movq	%rsi, 88(%rsp)
  420be8:	48 89 54 24 50 	movq	%rdx, 80(%rsp)
  420bed:	c6 42 04 01 	movb	$1, 4(%rdx)
  420bf1:	44 8b 05 18 2e 0a 00 	movl	667160(%rip), %r8d
  420bf8:	4c 8d 4a 20 	leaq	32(%rdx), %r9
  420bfc:	4c 89 4c 24 48 	movq	%r9, 72(%rsp)
  420c01:	45 85 c0 	testl	%r8d, %r8d
  420c04:	0f 85 99 01 00 00 	jne	409 <runtime.gopanic+0x373>
  420c0a:	48 89 42 20 	movq	%rax, 32(%rdx)
  420c0e:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  420c16:	e8 c5 04 00 00 	callq	1221 <runtime.getargp>
  420c1b:	48 8b 44 24 08 	movq	8(%rsp), %rax
  420c20:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  420c25:	48 8b 44 24 50 	movq	80(%rsp), %rax
  420c2a:	8b 08 	movl	(%rax), %ecx
  420c2c:	85 c9 	testl	%ecx, %ecx
  420c2e:	0f 85 66 01 00 00 	jne	358 <runtime.gopanic+0x36a>
  420c34:	31 d2 	xorl	%edx, %edx
  420c36:	48 8b 58 18 	movq	24(%rax), %rbx
  420c3a:	89 4c 24 1c 	movl	%ecx, 28(%rsp)
  420c3e:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  420c46:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  420c4b:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  420c50:	89 4c 24 18 	movl	%ecx, 24(%rsp)
  420c54:	e8 27 39 02 00 	callq	145703 <runtime.reflectcall>
  420c59:	48 c7 44 24 68 00 00 00 00 	movq	$0, 104(%rsp)
  420c62:	48 8b 44 24 50 	movq	80(%rsp), %rax
  420c67:	48 8d 48 18 	leaq	24(%rax), %rcx
  420c6b:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  420c70:	48 8b 5a 28 	movq	40(%rdx), %rbx
  420c74:	48 39 c3 	cmpq	%rax, %rbx
  420c77:	0f 85 df 01 00 00 	jne	479 <runtime.gopanic+0x42c>
  420c7d:	8b 1d 8d 2d 0a 00 	movl	667021(%rip), %ebx
  420c83:	85 db 	testl	%ebx, %ebx
  420c85:	0f 85 ee 00 00 00 	jne	238 <runtime.gopanic+0x349>
  420c8b:	48 c7 40 20 00 00 00 00 	movq	$0, 32(%rax)
  420c93:	48 c7 40 18 00 00 00 00 	movq	$0, 24(%rax)
  420c9b:	8b 0d 6f 2d 0a 00 	movl	666991(%rip), %ecx
  420ca1:	48 8b 58 28 	movq	40(%rax), %rbx
  420ca5:	85 c9 	testl	%ecx, %ecx
  420ca7:	0f 85 b4 00 00 00 	jne	180 <runtime.gopanic+0x331>
  420cad:	48 89 5a 28 	movq	%rbx, 40(%rdx)
  420cb1:	48 8b 48 10 	movq	16(%rax), %rcx
  420cb5:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  420cba:	48 8b 50 08 	movq	8(%rax), %rdx
  420cbe:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  420cc3:	48 89 04 24 	movq	%rax, (%rsp)
  420cc7:	e8 54 f6 ff ff 	callq	-2476 <runtime.freedefer>
  420ccc:	0f b6 84 24 88 00 00 00 	movzbl	136(%rsp), %eax
  420cd4:	84 c0 	testb	%al, %al
  420cd6:	0f 84 50 fe ff ff 	je	-432 <runtime.gopanic+0xfc>
  420cdc:	b9 ff ff ff ff 	movl	$4294967295, %ecx
  420ce1:	48 8d 15 14 2c 0a 00 	leaq	666644(%rip), %rdx
  420ce8:	f0 	lock
  420ce9:	0f c1 0a 	xaddl	%ecx, (%rdx)
  420cec:	8b 0d 1e 2d 0a 00 	movl	666910(%rip), %ecx
  420cf2:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  420cfa:	85 c9 	testl	%ecx, %ecx
  420cfc:	75 52 	jne	82 <runtime.gopanic+0x320>
  420cfe:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  420d03:	48 89 41 20 	movq	%rax, 32(%rcx)
  420d07:	48 8b 51 20 	movq	32(%rcx), %rdx
  420d0b:	48 85 d2 	testq	%rdx, %rdx
  420d0e:	74 2b 	je	43 <runtime.gopanic+0x30b>
  420d10:	0f b6 5a 21 	movzbl	33(%rdx), %ebx
  420d14:	84 db 	testb	%bl, %bl
  420d16:	74 20 	je	32 <runtime.gopanic+0x308>
  420d18:	8b 1d f2 2c 0a 00 	movl	666866(%rip), %ebx
  420d1e:	48 8b 42 18 	movq	24(%rdx), %rax
  420d22:	85 db 	testl	%ebx, %ebx
  420d24:	75 06 	jne	6 <runtime.gopanic+0x2fc>
  420d26:	48 89 41 20 	movq	%rax, 32(%rcx)
  420d2a:	eb db 	jmp	-37 <runtime.gopanic+0x2d7>
  420d2c:	48 8b 7c 24 60 	movq	96(%rsp), %rdi
  420d31:	e8 6a 5b 02 00 	callq	154474 <runtime.gcWriteBarrier>
  420d36:	eb cf 	jmp	-49 <runtime.gopanic+0x2d7>
  420d38:	48 85 d2 	testq	%rdx, %rdx
  420d3b:	0f 85 d8 00 00 00 	jne	216 <runtime.gopanic+0x3e9>
  420d41:	c7 81 e8 00 00 00 00 00 00 00 	movl	$0, 232(%rcx)
  420d4b:	e9 c9 00 00 00 	jmp	201 <runtime.gopanic+0x3e9>
  420d50:	48 8b 7c 24 60 	movq	96(%rsp), %rdi
  420d55:	e8 46 5b 02 00 	callq	154438 <runtime.gcWriteBarrier>
  420d5a:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  420d5f:	eb a6 	jmp	-90 <runtime.gopanic+0x2d7>
  420d61:	48 8b 7c 24 58 	movq	88(%rsp), %rdi
  420d66:	48 89 c1 	movq	%rax, %rcx
  420d69:	48 89 d8 	movq	%rbx, %rax
  420d6c:	e8 2f 5b 02 00 	callq	154415 <runtime.gcWriteBarrier>
  420d71:	48 89 c8 	movq	%rcx, %rax
  420d74:	e9 38 ff ff ff 	jmp	-200 <runtime.gopanic+0x281>
  420d79:	48 8b 7c 24 48 	movq	72(%rsp), %rdi
  420d7e:	48 89 c3 	movq	%rax, %rbx
  420d81:	31 c0 	xorl	%eax, %eax
  420d83:	e8 18 5b 02 00 	callq	154392 <runtime.gcWriteBarrier>
  420d88:	48 89 cf 	movq	%rcx, %rdi
  420d8b:	31 c0 	xorl	%eax, %eax
  420d8d:	e8 0e 5b 02 00 	callq	154382 <runtime.gcWriteBarrier>
  420d92:	48 89 d8 	movq	%rbx, %rax
  420d95:	e9 01 ff ff ff 	jmp	-255 <runtime.gopanic+0x26b>
  420d9a:	48 8d 50 30 	leaq	48(%rax), %rdx
  420d9e:	e9 93 fe ff ff 	jmp	-365 <runtime.gopanic+0x206>
  420da3:	4c 89 cf 	movq	%r9, %rdi
  420da6:	e8 f5 5a 02 00 	callq	154357 <runtime.gcWriteBarrier>
  420dab:	e9 5e fe ff ff 	jmp	-418 <runtime.gopanic+0x1de>
  420db0:	48 8b 41 20 	movq	32(%rcx), %rax
  420db4:	48 89 04 24 	movq	%rax, (%rsp)
  420db8:	e8 83 f9 ff ff 	callq	-1661 <runtime.preprintpanics>
  420dbd:	e8 7e 03 00 00 	callq	894 <runtime.startpanic>
  420dc2:	b8 ff ff ff ff 	movl	$4294967295, %eax
  420dc7:	48 8d 0d 2e 2b 0a 00 	leaq	666414(%rip), %rcx
  420dce:	f0 	lock
  420dcf:	0f c1 01 	xaddl	%eax, (%rcx)
  420dd2:	48 8b 44 24 38 	movq	56(%rsp), %rax
  420dd7:	48 8b 40 20 	movq	32(%rax), %rax
  420ddb:	48 89 04 24 	movq	%rax, (%rsp)
  420ddf:	e8 4c fb ff ff 	callq	-1204 <runtime.printpanics>
  420de4:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  420dec:	e8 7f 03 00 00 	callq	895 <runtime.dopanic>
  420df1:	31 c0 	xorl	%eax, %eax
  420df3:	48 c7 00 00 00 00 00 	movq	$0, (%rax)
  420dfa:	48 8b ac 24 90 00 00 00 	movq	144(%rsp), %rbp
  420e02:	48 81 c4 98 00 00 00 	addq	$152, %rsp
  420e09:	c3 	retq
  420e0a:	48 8d 44 24 68 	leaq	104(%rsp), %rax
  420e0f:	e8 8c 5a 02 00 	callq	154252 <runtime.gcWriteBarrier>
  420e14:	e9 fc fc ff ff 	jmp	-772 <runtime.gopanic+0xe5>
  420e19:	48 8b 44 24 30 	movq	48(%rsp), %rax
  420e1e:	48 89 81 08 01 00 00 	movq	%rax, 264(%rcx)
  420e25:	48 8b 44 24 20 	movq	32(%rsp), %rax
  420e2a:	48 89 81 10 01 00 00 	movq	%rax, 272(%rcx)
  420e31:	48 8d 05 90 d3 04 00 	leaq	316304(%rip), %rax
  420e38:	48 89 04 24 	movq	%rax, (%rsp)
  420e3c:	e8 5f 35 02 00 	callq	144735 <runtime.mcall>
  420e41:	48 8d 05 50 9b 04 00 	leaq	301904(%rip), %rax
  420e48:	48 89 04 24 	movq	%rax, (%rsp)
  420e4c:	48 c7 44 24 08 0f 00 00 00 	movq	$15, 8(%rsp)
  420e55:	e8 76 03 00 00 	callq	886 <runtime.throw>
  420e5a:	0f 0b 	ud2
  420e5c:	48 8d 05 e3 a9 04 00 	leaq	305635(%rip), %rax
  420e63:	48 89 04 24 	movq	%rax, (%rsp)
  420e67:	48 c7 44 24 08 18 00 00 00 	movq	$24, 8(%rsp)
  420e70:	e8 5b 03 00 00 	callq	859 <runtime.throw>
  420e75:	0f 0b 	ud2
  420e77:	e8 84 0c 00 00 	callq	3204 <runtime.printlock>
  420e7c:	48 8d 05 5c 90 04 00 	leaq	299100(%rip), %rax
  420e83:	48 89 04 24 	movq	%rax, (%rsp)
  420e87:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  420e90:	e8 ab 15 00 00 	callq	5547 <runtime.printstring>
  420e95:	e8 e6 0c 00 00 	callq	3302 <runtime.printunlock>
  420e9a:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  420ea2:	48 89 04 24 	movq	%rax, (%rsp)
  420ea6:	48 8b 84 24 a8 00 00 00 	movq	168(%rsp), %rax
  420eae:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  420eb3:	e8 48 40 fe ff 	callq	-114616 <runtime.printany>
  420eb8:	e8 43 0c 00 00 	callq	3139 <runtime.printlock>
  420ebd:	e8 ce 0e 00 00 	callq	3790 <runtime.printnl>
  420ec2:	e8 b9 0c 00 00 	callq	3257 <runtime.printunlock>
  420ec7:	48 8d 05 50 a0 04 00 	leaq	303184(%rip), %rax
  420ece:	48 89 04 24 	movq	%rax, (%rsp)
  420ed2:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  420edb:	e8 f0 02 00 00 	callq	752 <runtime.throw>
  420ee0:	0f 0b 	ud2
  420ee2:	e8 19 0c 00 00 	callq	3097 <runtime.printlock>
  420ee7:	48 8d 05 f1 8f 04 00 	leaq	298993(%rip), %rax
  420eee:	48 89 04 24 	movq	%rax, (%rsp)
  420ef2:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  420efb:	e8 40 15 00 00 	callq	5440 <runtime.printstring>
  420f00:	e8 7b 0c 00 00 	callq	3195 <runtime.printunlock>
  420f05:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  420f0d:	48 89 04 24 	movq	%rax, (%rsp)
  420f11:	48 8b 84 24 a8 00 00 00 	movq	168(%rsp), %rax
  420f19:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  420f1e:	e8 dd 3f fe ff 	callq	-114723 <runtime.printany>
  420f23:	e8 d8 0b 00 00 	callq	3032 <runtime.printlock>
  420f28:	e8 63 0e 00 00 	callq	3683 <runtime.printnl>
  420f2d:	e8 4e 0c 00 00 	callq	3150 <runtime.printunlock>
  420f32:	e8 c9 0b 00 00 	callq	3017 <runtime.printlock>
  420f37:	48 8d 05 57 a2 04 00 	leaq	303703(%rip), %rax
  420f3e:	48 89 04 24 	movq	%rax, (%rsp)
  420f42:	48 c7 44 24 08 14 00 00 00 	movq	$20, 8(%rsp)
  420f4b:	e8 f0 14 00 00 	callq	5360 <runtime.printstring>
  420f50:	e8 2b 0c 00 00 	callq	3115 <runtime.printunlock>
  420f55:	48 8b 44 24 38 	movq	56(%rsp), %rax
  420f5a:	48 8b 40 30 	movq	48(%rax), %rax
  420f5e:	48 8b 88 f8 00 00 00 	movq	248(%rax), %rcx
  420f65:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  420f6a:	48 8b 80 f0 00 00 00 	movq	240(%rax), %rax
  420f71:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  420f76:	e8 85 0b 00 00 	callq	2949 <runtime.printlock>
  420f7b:	48 8b 44 24 40 	movq	64(%rsp), %rax
  420f80:	48 89 04 24 	movq	%rax, (%rsp)
  420f84:	48 8b 44 24 28 	movq	40(%rsp), %rax
  420f89:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  420f8e:	e8 ad 14 00 00 	callq	5293 <runtime.printstring>
  420f93:	e8 e8 0b 00 00 	callq	3048 <runtime.printunlock>
  420f98:	e8 63 0b 00 00 	callq	2915 <runtime.printlock>
  420f9d:	e8 ee 0d 00 00 	callq	3566 <runtime.printnl>
  420fa2:	e8 d9 0b 00 00 	callq	3033 <runtime.printunlock>
  420fa7:	48 8d 05 56 a7 04 00 	leaq	304982(%rip), %rax
  420fae:	48 89 04 24 	movq	%rax, (%rsp)
  420fb2:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  420fbb:	e8 10 02 00 00 	callq	528 <runtime.throw>
  420fc0:	0f 0b 	ud2
  420fc2:	e8 39 0b 00 00 	callq	2873 <runtime.printlock>
  420fc7:	48 8d 05 11 8f 04 00 	leaq	298769(%rip), %rax
  420fce:	48 89 04 24 	movq	%rax, (%rsp)
  420fd2:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  420fdb:	e8 60 14 00 00 	callq	5216 <runtime.printstring>
  420fe0:	e8 9b 0b 00 00 	callq	2971 <runtime.printunlock>
  420fe5:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  420fed:	48 89 04 24 	movq	%rax, (%rsp)
  420ff1:	48 8b 84 24 a8 00 00 00 	movq	168(%rsp), %rax
  420ff9:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  420ffe:	e8 fd 3e fe ff 	callq	-114947 <runtime.printany>
  421003:	e8 f8 0a 00 00 	callq	2808 <runtime.printlock>
  421008:	e8 83 0d 00 00 	callq	3459 <runtime.printnl>
  42100d:	e8 6e 0b 00 00 	callq	2926 <runtime.printunlock>
  421012:	48 8d 05 df 9e 04 00 	leaq	302815(%rip), %rax
  421019:	48 89 04 24 	movq	%rax, (%rsp)
  42101d:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  421026:	e8 a5 01 00 00 	callq	421 <runtime.throw>
  42102b:	0f 0b 	ud2
  42102d:	83 82 00 01 00 00 ff 	addl	$-1, 256(%rdx)
  421034:	48 8b 41 30 	movq	48(%rcx), %rax
  421038:	c7 80 04 01 00 00 00 00 00 00 	movl	$0, 260(%rax)
  421042:	48 8d 05 59 a4 04 00 	leaq	304217(%rip), %rax
  421049:	48 89 04 24 	movq	%rax, (%rsp)
  42104d:	48 c7 44 24 08 16 00 00 00 	movq	$22, 8(%rsp)
  421056:	e8 75 01 00 00 	callq	373 <runtime.throw>
  42105b:	0f 0b 	ud2
  42105d:	e8 9e 0a 00 00 	callq	2718 <runtime.printlock>
  421062:	48 8d 05 76 8e 04 00 	leaq	298614(%rip), %rax
  421069:	48 89 04 24 	movq	%rax, (%rsp)
  42106d:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  421076:	e8 c5 13 00 00 	callq	5061 <runtime.printstring>
  42107b:	e8 00 0b 00 00 	callq	2816 <runtime.printunlock>
  421080:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  421088:	48 89 04 24 	movq	%rax, (%rsp)
  42108c:	48 8b 84 24 a8 00 00 00 	movq	168(%rsp), %rax
  421094:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  421099:	e8 62 3e fe ff 	callq	-115102 <runtime.printany>
  42109e:	e8 5d 0a 00 00 	callq	2653 <runtime.printlock>
  4210a3:	e8 e8 0c 00 00 	callq	3304 <runtime.printnl>
  4210a8:	e8 d3 0a 00 00 	callq	2771 <runtime.printunlock>
  4210ad:	48 8d 05 29 a2 04 00 	leaq	303657(%rip), %rax
  4210b4:	48 89 04 24 	movq	%rax, (%rsp)
  4210b8:	48 c7 44 24 08 15 00 00 00 	movq	$21, 8(%rsp)
  4210c1:	e8 0a 01 00 00 	callq	266 <runtime.throw>
  4210c6:	0f 0b 	ud2
  4210c8:	e8 a3 34 02 00 	callq	144547 <runtime.morestack_noctxt>
  4210cd:	e9 5e f9 ff ff 	jmp	-1698 <runtime.gopanic>
  4210d2:	cc 	int3
  4210d3:	cc 	int3
  4210d4:	cc 	int3
  4210d5:	cc 	int3
  4210d6:	cc 	int3
  4210d7:	cc 	int3
  4210d8:	cc 	int3
  4210d9:	cc 	int3
  4210da:	cc 	int3
  4210db:	cc 	int3
  4210dc:	cc 	int3
  4210dd:	cc 	int3
  4210de:	cc 	int3
  4210df:	cc 	int3

runtime.getargp:
  4210e0:	48 8d 44 24 08 	leaq	8(%rsp), %rax
  4210e5:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  4210ea:	c3 	retq
  4210eb:	cc 	int3
  4210ec:	cc 	int3
  4210ed:	cc 	int3
  4210ee:	cc 	int3
  4210ef:	cc 	int3

runtime.gorecover:
  4210f0:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4210f9:	48 8b 40 20 	movq	32(%rax), %rax
  4210fd:	48 85 c0 	testq	%rax, %rax
  421100:	74 08 	je	8 <runtime.gorecover+0x1a>
  421102:	0f b6 48 20 	movzbl	32(%rax), %ecx
  421106:	84 c9 	testb	%cl, %cl
  421108:	74 09 	je	9 <runtime.gorecover+0x23>
  42110a:	0f 57 c0 	xorps	%xmm0, %xmm0
  42110d:	0f 11 44 24 10 	movups	%xmm0, 16(%rsp)
  421112:	c3 	retq
  421113:	48 8b 08 	movq	(%rax), %rcx
  421116:	48 8b 54 24 08 	movq	8(%rsp), %rdx
  42111b:	48 39 ca 	cmpq	%rcx, %rdx
  42111e:	75 ea 	jne	-22 <runtime.gorecover+0x1a>
  421120:	c6 40 20 01 	movb	$1, 32(%rax)
  421124:	48 8b 48 10 	movq	16(%rax), %rcx
  421128:	48 8b 40 08 	movq	8(%rax), %rax
  42112c:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  421131:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  421136:	c3 	retq
  421137:	cc 	int3
  421138:	cc 	int3
  421139:	cc 	int3
  42113a:	cc 	int3
  42113b:	cc 	int3
  42113c:	cc 	int3
  42113d:	cc 	int3
  42113e:	cc 	int3
  42113f:	cc 	int3

runtime.startpanic:
  421140:	48 83 ec 10 	subq	$16, %rsp
  421144:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  421149:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  42114e:	48 8d 05 ab d0 04 00 	leaq	315563(%rip), %rax
  421155:	48 89 04 24 	movq	%rax, (%rsp)
  421159:	e8 c2 32 02 00 	callq	144066 <runtime.systemstack>
  42115e:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  421163:	48 83 c4 10 	addq	$16, %rsp
  421167:	c3 	retq
  421168:	cc 	int3
  421169:	cc 	int3
  42116a:	cc 	int3
  42116b:	cc 	int3
  42116c:	cc 	int3
  42116d:	cc 	int3
  42116e:	cc 	int3
  42116f:	cc 	int3

runtime.dopanic:
  421170:	48 83 ec 30 	subq	$48, %rsp
  421174:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  421179:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  42117e:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  421187:	48 8d 0d b2 1f 02 00 	leaq	139186(%rip), %rcx
  42118e:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  421193:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  421198:	48 8b 44 24 30 	movq	48(%rsp), %rax
  42119d:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4211a2:	48 8d 44 24 38 	leaq	56(%rsp), %rax
  4211a7:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  4211ac:	48 8d 44 24 08 	leaq	8(%rsp), %rax
  4211b1:	48 89 04 24 	movq	%rax, (%rsp)
  4211b5:	e8 66 32 02 00 	callq	143974 <runtime.systemstack>
  4211ba:	31 c0 	xorl	%eax, %eax
  4211bc:	48 c7 00 00 00 00 00 	movq	$0, (%rax)
  4211c3:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  4211c8:	48 83 c4 30 	addq	$48, %rsp
  4211cc:	c3 	retq
  4211cd:	cc 	int3
  4211ce:	cc 	int3
  4211cf:	cc 	int3

runtime.throw:
  4211d0:	48 83 ec 18 	subq	$24, %rsp
  4211d4:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  4211d9:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  4211de:	e8 1d 09 00 00 	callq	2333 <runtime.printlock>
  4211e3:	48 8d 05 64 95 04 00 	leaq	300388(%rip), %rax
  4211ea:	48 89 04 24 	movq	%rax, (%rsp)
  4211ee:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  4211f7:	e8 44 12 00 00 	callq	4676 <runtime.printstring>
  4211fc:	48 8b 44 24 20 	movq	32(%rsp), %rax
  421201:	48 89 04 24 	movq	%rax, (%rsp)
  421205:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42120a:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  42120f:	e8 2c 12 00 00 	callq	4652 <runtime.printstring>
  421214:	e8 77 0b 00 00 	callq	2935 <runtime.printnl>
  421219:	e8 62 09 00 00 	callq	2402 <runtime.printunlock>
  42121e:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  421227:	48 8b 40 30 	movq	48(%rax), %rax
  42122b:	8b 88 ec 00 00 00 	movl	236(%rax), %ecx
  421231:	85 c9 	testl	%ecx, %ecx
  421233:	75 0a 	jne	10 <runtime.throw+0x6f>
  421235:	c7 80 ec 00 00 00 01 00 00 00 	movl	$1, 236(%rax)
  42123f:	e8 fc fe ff ff 	callq	-260 <runtime.startpanic>
  421244:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  42124c:	e8 1f ff ff ff 	callq	-225 <runtime.dopanic>
  421251:	31 c0 	xorl	%eax, %eax
  421253:	48 c7 00 00 00 00 00 	movq	$0, (%rax)
  42125a:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  42125f:	48 83 c4 18 	addq	$24, %rsp
  421263:	c3 	retq
  421264:	cc 	int3
  421265:	cc 	int3
  421266:	cc 	int3
  421267:	cc 	int3
  421268:	cc 	int3
  421269:	cc 	int3
  42126a:	cc 	int3
  42126b:	cc 	int3
  42126c:	cc 	int3
  42126d:	cc 	int3
  42126e:	cc 	int3
  42126f:	cc 	int3

runtime.recovery:
  421270:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  421279:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42127d:	0f 86 2c 01 00 00 	jbe	300 <runtime.recovery+0x13f>
  421283:	48 83 ec 30 	subq	$48, %rsp
  421287:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  42128c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  421291:	48 8b 44 24 38 	movq	56(%rsp), %rax
  421296:	48 8b 88 08 01 00 00 	movq	264(%rax), %rcx
  42129d:	48 8b 90 10 01 00 00 	movq	272(%rax), %rdx
  4212a4:	48 85 c9 	testq	%rcx, %rcx
  4212a7:	74 1b 	je	27 <runtime.recovery+0x54>
  4212a9:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  4212ae:	48 8b 18 	movq	(%rax), %rbx
  4212b1:	48 89 5c 24 20 	movq	%rbx, 32(%rsp)
  4212b6:	48 39 d9 	cmpq	%rbx, %rcx
  4212b9:	72 38 	jb	56 <runtime.recovery+0x83>
  4212bb:	48 8b 70 08 	movq	8(%rax), %rsi
  4212bf:	48 39 ce 	cmpq	%rcx, %rsi
  4212c2:	72 2f 	jb	47 <runtime.recovery+0x83>
  4212c4:	48 89 48 38 	movq	%rcx, 56(%rax)
  4212c8:	48 89 50 40 	movq	%rdx, 64(%rax)
  4212cc:	48 c7 40 60 00 00 00 00 	movq	$0, 96(%rax)
  4212d4:	48 c7 40 58 01 00 00 00 	movq	$1, 88(%rax)
  4212dc:	48 83 c0 38 	addq	$56, %rax
  4212e0:	48 89 04 24 	movq	%rax, (%rsp)
  4212e4:	e8 57 30 02 00 	callq	143447 <runtime.gogo>
  4212e9:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  4212ee:	48 83 c4 30 	addq	$48, %rsp
  4212f2:	c3 	retq
  4212f3:	48 8b 40 08 	movq	8(%rax), %rax
  4212f7:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4212fc:	e8 ff 07 00 00 	callq	2047 <runtime.printlock>
  421301:	48 8d 05 33 8e 04 00 	leaq	298547(%rip), %rax
  421308:	48 89 04 24 	movq	%rax, (%rsp)
  42130c:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  421315:	e8 26 11 00 00 	callq	4390 <runtime.printstring>
  42131a:	48 8b 44 24 10 	movq	16(%rsp), %rax
  42131f:	48 89 04 24 	movq	%rax, (%rsp)
  421323:	e8 c8 0f 00 00 	callq	4040 <runtime.printhex>
  421328:	48 8d 05 61 8d 04 00 	leaq	298337(%rip), %rax
  42132f:	48 89 04 24 	movq	%rax, (%rsp)
  421333:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  42133c:	e8 ff 10 00 00 	callq	4351 <runtime.printstring>
  421341:	48 8b 44 24 20 	movq	32(%rsp), %rax
  421346:	48 89 04 24 	movq	%rax, (%rsp)
  42134a:	e8 a1 0f 00 00 	callq	4001 <runtime.printhex>
  42134f:	48 8d 05 16 89 04 00 	leaq	297238(%rip), %rax
  421356:	48 89 04 24 	movq	%rax, (%rsp)
  42135a:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  421363:	e8 d8 10 00 00 	callq	4312 <runtime.printstring>
  421368:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42136d:	48 89 04 24 	movq	%rax, (%rsp)
  421371:	e8 7a 0f 00 00 	callq	3962 <runtime.printhex>
  421376:	48 8d 05 f9 88 04 00 	leaq	297209(%rip), %rax
  42137d:	48 89 04 24 	movq	%rax, (%rsp)
  421381:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  42138a:	e8 b1 10 00 00 	callq	4273 <runtime.printstring>
  42138f:	e8 ec 07 00 00 	callq	2028 <runtime.printunlock>
  421394:	48 8d 05 37 92 04 00 	leaq	299575(%rip), %rax
  42139b:	48 89 04 24 	movq	%rax, (%rsp)
  42139f:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  4213a8:	e8 23 fe ff ff 	callq	-477 <runtime.throw>
  4213ad:	0f 0b 	ud2
  4213af:	e8 bc 31 02 00 	callq	143804 <runtime.morestack_noctxt>
  4213b4:	e9 b7 fe ff ff 	jmp	-329 <runtime.recovery>
  4213b9:	cc 	int3
  4213ba:	cc 	int3
  4213bb:	cc 	int3
  4213bc:	cc 	int3
  4213bd:	cc 	int3
  4213be:	cc 	int3
  4213bf:	cc 	int3

runtime.startpanic_m:
  4213c0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4213c9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4213cd:	0f 86 a9 01 00 00 	jbe	425 <runtime.startpanic_m+0x1bc>
  4213d3:	48 83 ec 20 	subq	$32, %rsp
  4213d7:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  4213dc:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  4213e1:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4213ea:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  4213ef:	48 8b 15 c2 e3 08 00 	movq	582594(%rip), %rdx
  4213f6:	48 85 d2 	testq	%rdx, %rdx
  4213f9:	0f 84 50 01 00 00 	je	336 <runtime.startpanic_m+0x18f>
  4213ff:	48 8b 51 30 	movq	48(%rcx), %rdx
  421403:	ff 82 e8 00 00 00 	incl	232(%rdx)
  421409:	48 8b 51 30 	movq	48(%rcx), %rdx
  42140d:	8b 9a 08 01 00 00 	movl	264(%rdx), %ebx
  421413:	85 db 	testl	%ebx, %ebx
  421415:	0f 85 87 00 00 00 	jne	135 <runtime.startpanic_m+0xe2>
  42141b:	c7 82 08 01 00 00 01 00 00 00 	movl	$1, 264(%rdx)
  421425:	0f 57 c0 	xorps	%xmm0, %xmm0
  421428:	0f 11 81 f8 00 00 00 	movups	%xmm0, 248(%rcx)
  42142f:	8b 15 db 25 0a 00 	movl	665051(%rip), %edx
  421435:	48 8d b9 f0 00 00 00 	leaq	240(%rcx), %rdi
  42143c:	85 d2 	testl	%edx, %edx
  42143e:	75 59 	jne	89 <runtime.startpanic_m+0xd9>
  421440:	48 c7 81 f0 00 00 00 00 00 00 00 	movq	$0, 240(%rcx)
  42144b:	b8 01 00 00 00 	movl	$1, %eax
  421450:	48 8d 0d 9d 24 0a 00 	leaq	664733(%rip), %rcx
  421457:	f0 	lock
  421458:	0f c1 01 	xaddl	%eax, (%rcx)
  42145b:	48 8d 05 36 25 0a 00 	leaq	664886(%rip), %rax
  421462:	48 89 04 24 	movq	%rax, (%rsp)
  421466:	e8 b5 80 fe ff 	callq	-98123 <runtime.lock>
  42146b:	8b 05 83 26 0a 00 	movl	665219(%rip), %eax
  421471:	85 c0 	testl	%eax, %eax
  421473:	7e 18 	jle	24 <runtime.startpanic_m+0xcd>
  421475:	c6 04 24 01 	movb	$1, (%rsp)
  421479:	e8 72 bc 00 00 	callq	48242 <runtime.schedtrace>
  42147e:	e8 1d 30 00 00 	callq	12317 <runtime.freezetheworld>
  421483:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  421488:	48 83 c4 20 	addq	$32, %rsp
  42148c:	c3 	retq
  42148d:	8b 05 5d 26 0a 00 	movl	665181(%rip), %eax
  421493:	85 c0 	testl	%eax, %eax
  421495:	7f de 	jg	-34 <runtime.startpanic_m+0xb5>
  421497:	eb e5 	jmp	-27 <runtime.startpanic_m+0xbe>
  421499:	31 c0 	xorl	%eax, %eax
  42149b:	e8 00 54 02 00 	callq	152576 <runtime.gcWriteBarrier>
  4214a0:	eb a9 	jmp	-87 <runtime.startpanic_m+0x8b>
  4214a2:	83 fb 01 	cmpl	$1, %ebx
  4214a5:	74 58 	je	88 <runtime.startpanic_m+0x13f>
  4214a7:	83 fb 02 	cmpl	$2, %ebx
  4214aa:	75 3d 	jne	61 <runtime.startpanic_m+0x129>
  4214ac:	48 8b 41 30 	movq	48(%rcx), %rax
  4214b0:	c7 80 08 01 00 00 03 00 00 00 	movl	$3, 264(%rax)
  4214ba:	e8 41 06 00 00 	callq	1601 <runtime.printlock>
  4214bf:	48 8d 05 88 a4 04 00 	leaq	304264(%rip), %rax
  4214c6:	48 89 04 24 	movq	%rax, (%rsp)
  4214ca:	48 c7 44 24 08 18 00 00 00 	movq	$24, 8(%rsp)
  4214d3:	e8 68 0f 00 00 	callq	3944 <runtime.printstring>
  4214d8:	e8 a3 06 00 00 	callq	1699 <runtime.printunlock>
  4214dd:	c7 04 24 04 00 00 00 	movl	$4, (%rsp)
  4214e4:	e8 e7 62 02 00 	callq	156391 <runtime.exit>
  4214e9:	c7 04 24 05 00 00 00 	movl	$5, (%rsp)
  4214f0:	e8 db 62 02 00 	callq	156379 <runtime.exit>
  4214f5:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  4214fa:	48 83 c4 20 	addq	$32, %rsp
  4214fe:	c3 	retq
  4214ff:	c7 82 08 01 00 00 02 00 00 00 	movl	$2, 264(%rdx)
  421509:	e8 f2 05 00 00 	callq	1522 <runtime.printlock>
  42150e:	48 8d 05 f6 99 04 00 	leaq	301558(%rip), %rax
  421515:	48 89 04 24 	movq	%rax, (%rsp)
  421519:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  421522:	e8 19 0f 00 00 	callq	3865 <runtime.printstring>
  421527:	e8 54 06 00 00 	callq	1620 <runtime.printunlock>
  42152c:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  421534:	e8 37 fc ff ff 	callq	-969 <runtime.dopanic>
  421539:	c7 04 24 03 00 00 00 	movl	$3, (%rsp)
  421540:	e8 8b 62 02 00 	callq	156299 <runtime.exit>
  421545:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  42154a:	e9 5d ff ff ff 	jmp	-163 <runtime.startpanic_m+0xec>
  42154f:	e8 ac 05 00 00 	callq	1452 <runtime.printlock>
  421554:	48 8d 05 5b c2 04 00 	leaq	311899(%rip), %rax
  42155b:	48 89 04 24 	movq	%rax, (%rsp)
  42155f:	48 c7 44 24 08 2e 00 00 00 	movq	$46, 8(%rsp)
  421568:	e8 d3 0e 00 00 	callq	3795 <runtime.printstring>
  42156d:	e8 0e 06 00 00 	callq	1550 <runtime.printunlock>
  421572:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  421577:	e9 83 fe ff ff 	jmp	-381 <runtime.startpanic_m+0x3f>
  42157c:	e8 ef 2f 02 00 	callq	143343 <runtime.morestack_noctxt>
  421581:	e9 3a fe ff ff 	jmp	-454 <runtime.startpanic_m>
  421586:	cc 	int3
  421587:	cc 	int3
  421588:	cc 	int3
  421589:	cc 	int3
  42158a:	cc 	int3
  42158b:	cc 	int3
  42158c:	cc 	int3
  42158d:	cc 	int3
  42158e:	cc 	int3
  42158f:	cc 	int3

runtime.dopanic_m:
  421590:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  421599:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42159d:	0f 86 94 03 00 00 	jbe	916 <runtime.dopanic_m+0x3a7>
  4215a3:	48 83 ec 68 	subq	$104, %rsp
  4215a7:	48 89 6c 24 60 	movq	%rbp, 96(%rsp)
  4215ac:	48 8d 6c 24 60 	leaq	96(%rsp), %rbp
  4215b1:	48 8b 44 24 70 	movq	112(%rsp), %rax
  4215b6:	8b 88 e8 00 00 00 	movl	232(%rax), %ecx
  4215bc:	85 c9 	testl	%ecx, %ecx
  4215be:	0f 84 1c 01 00 00 	je	284 <runtime.dopanic_m+0x150>
  4215c4:	83 f9 41 	cmpl	$65, %ecx
  4215c7:	0f 82 43 03 00 00 	jb	835 <runtime.dopanic_m+0x380>
  4215cd:	31 d2 	xorl	%edx, %edx
  4215cf:	31 db 	xorl	%ebx, %ebx
  4215d1:	48 85 d2 	testq	%rdx, %rdx
  4215d4:	0f 84 fd 02 00 00 	je	765 <runtime.dopanic_m+0x347>
  4215da:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  4215df:	48 89 5c 24 50 	movq	%rbx, 80(%rsp)
  4215e4:	e8 17 05 00 00 	callq	1303 <runtime.printlock>
  4215e9:	48 8d 05 07 8a 04 00 	leaq	297479(%rip), %rax
  4215f0:	48 89 04 24 	movq	%rax, (%rsp)
  4215f4:	48 c7 44 24 08 08 00 00 00 	movq	$8, 8(%rsp)
  4215fd:	e8 3e 0e 00 00 	callq	3646 <runtime.printstring>
  421602:	48 8b 44 24 50 	movq	80(%rsp), %rax
  421607:	48 89 04 24 	movq	%rax, (%rsp)
  42160b:	48 8b 44 24 30 	movq	48(%rsp), %rax
  421610:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  421615:	e8 26 0e 00 00 	callq	3622 <runtime.printstring>
  42161a:	e8 61 05 00 00 	callq	1377 <runtime.printunlock>
  42161f:	48 8b 44 24 70 	movq	112(%rsp), %rax
  421624:	48 8b 88 08 01 00 00 	movq	264(%rax), %rcx
  42162b:	48 89 4c 24 48 	movq	%rcx, 72(%rsp)
  421630:	48 8b 90 10 01 00 00 	movq	272(%rax), %rdx
  421637:	48 89 54 24 40 	movq	%rdx, 64(%rsp)
  42163c:	48 8b 98 18 01 00 00 	movq	280(%rax), %rbx
  421643:	48 89 5c 24 38 	movq	%rbx, 56(%rsp)
  421648:	e8 b3 04 00 00 	callq	1203 <runtime.printlock>
  42164d:	48 8d 05 9f 87 04 00 	leaq	296863(%rip), %rax
  421654:	48 89 04 24 	movq	%rax, (%rsp)
  421658:	48 c7 44 24 08 06 00 00 00 	movq	$6, 8(%rsp)
  421661:	e8 da 0d 00 00 	callq	3546 <runtime.printstring>
  421666:	48 8b 44 24 48 	movq	72(%rsp), %rax
  42166b:	48 89 04 24 	movq	%rax, (%rsp)
  42166f:	e8 7c 0c 00 00 	callq	3196 <runtime.printhex>
  421674:	48 8d 05 6c 87 04 00 	leaq	296812(%rip), %rax
  42167b:	48 89 04 24 	movq	%rax, (%rsp)
  42167f:	48 c7 44 24 08 06 00 00 00 	movq	$6, 8(%rsp)
  421688:	e8 b3 0d 00 00 	callq	3507 <runtime.printstring>
  42168d:	48 8b 44 24 40 	movq	64(%rsp), %rax
  421692:	48 89 04 24 	movq	%rax, (%rsp)
  421696:	e8 55 0c 00 00 	callq	3157 <runtime.printhex>
  42169b:	48 8d 05 30 86 04 00 	leaq	296496(%rip), %rax
  4216a2:	48 89 04 24 	movq	%rax, (%rsp)
  4216a6:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  4216af:	e8 8c 0d 00 00 	callq	3468 <runtime.printstring>
  4216b4:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4216b9:	48 89 04 24 	movq	%rax, (%rsp)
  4216bd:	e8 2e 0c 00 00 	callq	3118 <runtime.printhex>
  4216c2:	48 8d 05 ad 85 04 00 	leaq	296365(%rip), %rax
  4216c9:	48 89 04 24 	movq	%rax, (%rsp)
  4216cd:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  4216d6:	e8 65 0d 00 00 	callq	3429 <runtime.printstring>
  4216db:	e8 a0 04 00 00 	callq	1184 <runtime.printunlock>
  4216e0:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4216e9:	8b 0d 19 39 08 00 	movl	538905(%rip), %ecx
  4216ef:	48 8b 40 30 	movq	48(%rax), %rax
  4216f3:	8b 90 ec 00 00 00 	movl	236(%rax), %edx
  4216f9:	85 d2 	testl	%edx, %edx
  4216fb:	0f 8e ca 01 00 00 	jle	458 <runtime.dopanic_m+0x33b>
  421701:	ba 01 00 00 00 	movl	$1, %edx
  421706:	0f b6 80 29 01 00 00 	movzbl	297(%rax), %eax
  42170d:	84 c0 	testb	%al, %al
  42170f:	0f 84 ac 01 00 00 	je	428 <runtime.dopanic_m+0x331>
  421715:	0f b6 c0 	movzbl	%al, %eax
  421718:	89 4c 24 28 	movl	%ecx, 40(%rsp)
  42171c:	64 48 8b 1c 25 f8 ff ff ff 	movq	%fs:-8, %rbx
  421725:	85 c0 	testl	%eax, %eax
  421727:	0f 8e 8a 00 00 00 	jle	138 <runtime.dopanic_m+0x227>
  42172d:	88 54 24 27 	movb	%dl, 39(%rsp)
  421731:	48 8b 74 24 70 	movq	112(%rsp), %rsi
  421736:	48 8b 7e 30 	movq	48(%rsi), %rdi
  42173a:	4c 8b 87 c0 00 00 00 	movq	192(%rdi), %r8
  421741:	4c 89 44 24 58 	movq	%r8, 88(%rsp)
  421746:	48 8b 3f 	movq	(%rdi), %rdi
  421749:	48 39 f7 	cmpq	%rsi, %rdi
  42174c:	0f 85 1f 01 00 00 	jne	287 <runtime.dopanic_m+0x2e1>
  421752:	83 f8 02 	cmpl	$2, %eax
  421755:	0f 8c ff 00 00 00 	jl	255 <runtime.dopanic_m+0x2ca>
  42175b:	e8 a0 03 00 00 	callq	928 <runtime.printlock>
  421760:	48 8d 05 1b 93 04 00 	leaq	299803(%rip), %rax
  421767:	48 89 04 24 	movq	%rax, (%rsp)
  42176b:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  421774:	e8 c7 0c 00 00 	callq	3271 <runtime.printstring>
  421779:	e8 02 04 00 00 	callq	1026 <runtime.printunlock>
  42177e:	48 8b 44 24 78 	movq	120(%rsp), %rax
  421783:	48 89 04 24 	movq	%rax, (%rsp)
  421787:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  42178f:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  421794:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  42179d:	48 8b 44 24 70 	movq	112(%rsp), %rax
  4217a2:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4217a7:	e8 14 be 01 00 	callq	114196 <runtime.traceback>
  4217ac:	0f b6 05 f0 20 0a 00 	movzbl	663792(%rip), %eax
  4217b3:	84 c0 	testb	%al, %al
  4217b5:	74 6f 	je	111 <runtime.dopanic_m+0x296>
  4217b7:	48 8d 05 da 21 0a 00 	leaq	664026(%rip), %rax
  4217be:	48 89 04 24 	movq	%rax, (%rsp)
  4217c2:	e8 f9 7e fe ff 	callq	-98567 <runtime.unlock>
  4217c7:	b8 ff ff ff ff 	movl	$4294967295, %eax
  4217cc:	48 8d 0d 21 21 0a 00 	leaq	663841(%rip), %rcx
  4217d3:	f0 	lock
  4217d4:	0f c1 01 	xaddl	%eax, (%rcx)
  4217d7:	ff c8 	decl	%eax
  4217d9:	85 c0 	testl	%eax, %eax
  4217db:	75 27 	jne	39 <runtime.dopanic_m+0x274>
  4217dd:	8b 44 24 28 	movl	40(%rsp), %eax
  4217e1:	0f ba e0 00 	btl	$0, %eax
  4217e5:	72 16 	jb	22 <runtime.dopanic_m+0x26d>
  4217e7:	c7 04 24 02 00 00 00 	movl	$2, (%rsp)
  4217ee:	e8 dd 5f 02 00 	callq	155613 <runtime.exit>
  4217f3:	48 8b 6c 24 60 	movq	96(%rsp), %rbp
  4217f8:	48 83 c4 68 	addq	$104, %rsp
  4217fc:	c3 	retq
  4217fd:	e8 9e 14 01 00 	callq	70814 <runtime.crash>
  421802:	eb e3 	jmp	-29 <runtime.dopanic_m+0x257>
  421804:	48 8d 05 3d 21 0a 00 	leaq	663869(%rip), %rax
  42180b:	48 89 04 24 	movq	%rax, (%rsp)
  42180f:	e8 0c 7d fe ff 	callq	-99060 <runtime.lock>
  421814:	48 8d 05 2d 21 0a 00 	leaq	663853(%rip), %rax
  42181b:	48 89 04 24 	movq	%rax, (%rsp)
  42181f:	e8 fc 7c fe ff 	callq	-99076 <runtime.lock>
  421824:	eb b7 	jmp	-73 <runtime.dopanic_m+0x24d>
  421826:	48 8b 44 24 58 	movq	88(%rsp), %rax
  42182b:	48 8b 4c 24 70 	movq	112(%rsp), %rcx
  421830:	48 39 c8 	cmpq	%rcx, %rax
  421833:	0f 95 c0 	setne	%al
  421836:	0f b6 54 24 27 	movzbl	39(%rsp), %edx
  42183b:	09 d0 	orl	%edx, %eax
  42183d:	84 c0 	testb	%al, %al
  42183f:	0f 84 72 ff ff ff 	je	-142 <runtime.dopanic_m+0x227>
  421845:	c6 05 57 20 0a 00 01 	movb	$1, 663639(%rip)
  42184c:	48 89 0c 24 	movq	%rcx, (%rsp)
  421850:	e8 6b c7 01 00 	callq	116587 <runtime.tracebackothers>
  421855:	e9 5d ff ff ff 	jmp	-163 <runtime.dopanic_m+0x227>
  42185a:	48 8b 43 30 	movq	48(%rbx), %rax
  42185e:	8b 80 ec 00 00 00 	movl	236(%rax), %eax
  421864:	85 c0 	testl	%eax, %eax
  421866:	0f 8f ef fe ff ff 	jg	-273 <runtime.dopanic_m+0x1cb>
  42186c:	e9 3b ff ff ff 	jmp	-197 <runtime.dopanic_m+0x21c>
  421871:	e8 8a 02 00 00 	callq	650 <runtime.printlock>
  421876:	e8 15 05 00 00 	callq	1301 <runtime.printnl>
  42187b:	e8 00 03 00 00 	callq	768 <runtime.printunlock>
  421880:	48 8b 44 24 70 	movq	112(%rsp), %rax
  421885:	48 89 04 24 	movq	%rax, (%rsp)
  421889:	e8 92 c4 01 00 	callq	115858 <runtime.goroutineheader>
  42188e:	48 8b 44 24 78 	movq	120(%rsp), %rax
  421893:	48 89 04 24 	movq	%rax, (%rsp)
  421897:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  42189f:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4218a4:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  4218ad:	48 8b 44 24 70 	movq	112(%rsp), %rax
  4218b2:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4218b7:	e8 04 bd 01 00 	callq	113924 <runtime.traceback>
  4218bc:	e9 eb fe ff ff 	jmp	-277 <runtime.dopanic_m+0x21c>
  4218c1:	89 c8 	movl	%ecx, %eax
  4218c3:	c1 e8 02 	shrl	$2, %eax
  4218c6:	e9 4d fe ff ff 	jmp	-435 <runtime.dopanic_m+0x188>
  4218cb:	0f ba e1 01 	btl	$1, %ecx
  4218cf:	0f 92 c2 	setb	%dl
  4218d2:	e9 2f fe ff ff 	jmp	-465 <runtime.dopanic_m+0x176>
  4218d7:	89 4c 24 2c 	movl	%ecx, 44(%rsp)
  4218db:	e8 20 02 00 00 	callq	544 <runtime.printlock>
  4218e0:	48 8d 05 10 87 04 00 	leaq	296720(%rip), %rax
  4218e7:	48 89 04 24 	movq	%rax, (%rsp)
  4218eb:	48 c7 44 24 08 08 00 00 00 	movq	$8, 8(%rsp)
  4218f4:	e8 47 0b 00 00 	callq	2887 <runtime.printstring>
  4218f9:	8b 44 24 2c 	movl	44(%rsp), %eax
  4218fd:	48 89 04 24 	movq	%rax, (%rsp)
  421901:	e8 ea 09 00 00 	callq	2538 <runtime.printhex>
  421906:	e8 75 02 00 00 	callq	629 <runtime.printunlock>
  42190b:	e9 0f fd ff ff 	jmp	-753 <runtime.dopanic_m+0x8f>
  421910:	48 83 f9 41 	cmpq	$65, %rcx
  421914:	73 1a 	jae	26 <runtime.dopanic_m+0x3a0>
  421916:	48 8d 34 49 	leaq	(%rcx,%rcx,2), %rsi
  42191a:	48 8d 3d 5f 46 08 00 	leaq	542303(%rip), %rdi
  421921:	48 8b 54 f7 10 	movq	16(%rdi,%rsi,8), %rdx
  421926:	48 8b 5c f7 08 	movq	8(%rdi,%rsi,8), %rbx
  42192b:	e9 a1 fc ff ff 	jmp	-863 <runtime.dopanic_m+0x41>
  421930:	e8 0b e1 ff ff 	callq	-7925 <runtime.panicindex>
  421935:	0f 0b 	ud2
  421937:	e8 34 2c 02 00 	callq	142388 <runtime.morestack_noctxt>
  42193c:	e9 4f fc ff ff 	jmp	-945 <runtime.dopanic_m>
  421941:	cc 	int3
  421942:	cc 	int3
  421943:	cc 	int3
  421944:	cc 	int3
  421945:	cc 	int3
  421946:	cc 	int3
  421947:	cc 	int3
  421948:	cc 	int3
  421949:	cc 	int3
  42194a:	cc 	int3
  42194b:	cc 	int3
  42194c:	cc 	int3
  42194d:	cc 	int3
  42194e:	cc 	int3
  42194f:	cc 	int3

runtime.canpanic:
  421950:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  421959:	48 8b 40 30 	movq	48(%rax), %rax
  42195d:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  421962:	48 85 c9 	testq	%rcx, %rcx
  421965:	74 0c 	je	12 <runtime.canpanic+0x23>
  421967:	48 8b 90 c0 00 00 00 	movq	192(%rax), %rdx
  42196e:	48 39 d1 	cmpq	%rdx, %rcx
  421971:	74 06 	je	6 <runtime.canpanic+0x29>
  421973:	c6 44 24 10 00 	movb	$0, 16(%rsp)
  421978:	c3 	retq
  421979:	8b 90 00 01 00 00 	movl	256(%rax), %edx
  42197f:	2b 90 04 01 00 00 	subl	260(%rax), %edx
  421985:	85 d2 	testl	%edx, %edx
  421987:	74 06 	je	6 <runtime.canpanic+0x3f>
  421989:	c6 44 24 10 00 	movb	$0, 16(%rsp)
  42198e:	c3 	retq
  42198f:	8b 90 e8 00 00 00 	movl	232(%rax), %edx
  421995:	85 d2 	testl	%edx, %edx
  421997:	75 f0 	jne	-16 <runtime.canpanic+0x39>
  421999:	8b 90 ec 00 00 00 	movl	236(%rax), %edx
  42199f:	85 d2 	testl	%edx, %edx
  4219a1:	75 e6 	jne	-26 <runtime.canpanic+0x39>
  4219a3:	48 8b 90 f8 00 00 00 	movq	248(%rax), %rdx
  4219aa:	48 85 d2 	testq	%rdx, %rdx
  4219ad:	75 da 	jne	-38 <runtime.canpanic+0x39>
  4219af:	8b 80 08 01 00 00 	movl	264(%rax), %eax
  4219b5:	85 c0 	testl	%eax, %eax
  4219b7:	75 d0 	jne	-48 <runtime.canpanic+0x39>
  4219b9:	8b 81 90 00 00 00 	movl	144(%rcx), %eax
  4219bf:	25 ff ef ff ff 	andl	$4294963199, %eax
  4219c4:	83 f8 02 	cmpl	$2, %eax
  4219c7:	74 06 	je	6 <runtime.canpanic+0x7f>
  4219c9:	c6 44 24 10 00 	movb	$0, 16(%rsp)
  4219ce:	c3 	retq
  4219cf:	48 8b 41 70 	movq	112(%rcx), %rax
  4219d3:	48 85 c0 	testq	%rax, %rax
  4219d6:	75 f1 	jne	-15 <runtime.canpanic+0x79>
  4219d8:	c6 44 24 10 01 	movb	$1, 16(%rsp)
  4219dd:	c3 	retq
  4219de:	cc 	int3
  4219df:	cc 	int3

runtime.recordForPanic:
  4219e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4219e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4219ed:	0f 86 fd 00 00 00 	jbe	253 <runtime.recordForPanic+0x110>
  4219f3:	48 83 ec 30 	subq	$48, %rsp
  4219f7:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  4219fc:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  421a01:	e8 fa 00 00 00 	callq	250 <runtime.printlock>
  421a06:	8b 05 e8 1e 0a 00 	movl	663272(%rip), %eax
  421a0c:	85 c0 	testl	%eax, %eax
  421a0e:	0f 85 c6 00 00 00 	jne	198 <runtime.recordForPanic+0xfa>
  421a14:	31 c0 	xorl	%eax, %eax
  421a16:	eb 59 	jmp	89 <runtime.recordForPanic+0x91>
  421a18:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  421a1d:	48 8d 05 bc 24 0a 00 	leaq	664764(%rip), %rax
  421a24:	48 01 c2 	addq	%rax, %rdx
  421a27:	48 89 14 24 	movq	%rdx, (%rsp)
  421a2b:	48 89 7c 24 08 	movq	%rdi, 8(%rsp)
  421a30:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  421a35:	e8 c6 56 02 00 	callq	153286 <runtime.memmove>
  421a3a:	48 8b 05 67 1f 0a 00 	movq	663399(%rip), %rax
  421a41:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  421a46:	48 01 c8 	addq	%rcx, %rax
  421a49:	48 89 c2 	movq	%rax, %rdx
  421a4c:	48 c1 f8 3f 	sarq	$63, %rax
  421a50:	48 c1 e8 37 	shrq	$55, %rax
  421a54:	48 01 d0 	addq	%rdx, %rax
  421a57:	48 c1 f8 09 	sarq	$9, %rax
  421a5b:	48 c1 e0 09 	shlq	$9, %rax
  421a5f:	48 29 c2 	subq	%rax, %rdx
  421a62:	48 89 15 3f 1f 0a 00 	movq	%rdx, 663359(%rip)
  421a69:	48 8b 44 24 20 	movq	32(%rsp), %rax
  421a6e:	48 01 c8 	addq	%rcx, %rax
  421a71:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  421a76:	48 39 c8 	cmpq	%rcx, %rax
  421a79:	7d 5f 	jge	95 <runtime.recordForPanic+0xfa>
  421a7b:	48 8b 15 26 1f 0a 00 	movq	663334(%rip), %rdx
  421a82:	48 81 fa 00 02 00 00 	cmpq	$512, %rdx
  421a89:	77 5e 	ja	94 <runtime.recordForPanic+0x109>
  421a8b:	48 8d 9a 00 fe ff ff 	leaq	-512(%rdx), %rbx
  421a92:	48 f7 db 	negq	%rbx
  421a95:	48 89 de 	movq	%rbx, %rsi
  421a98:	48 f7 db 	negq	%rbx
  421a9b:	48 c1 fb 3f 	sarq	$63, %rbx
  421a9f:	48 21 da 	andq	%rbx, %rdx
  421aa2:	48 39 c8 	cmpq	%rcx, %rax
  421aa5:	77 42 	ja	66 <runtime.recordForPanic+0x109>
  421aa7:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  421aac:	48 29 c1 	subq	%rax, %rcx
  421aaf:	48 8b 7c 24 48 	movq	72(%rsp), %rdi
  421ab4:	48 29 c7 	subq	%rax, %rdi
  421ab7:	48 f7 df 	negq	%rdi
  421aba:	48 c1 ff 3f 	sarq	$63, %rdi
  421abe:	48 21 c7 	andq	%rax, %rdi
  421ac1:	4c 8b 4c 24 38 	movq	56(%rsp), %r9
  421ac6:	4c 01 cf 	addq	%r9, %rdi
  421ac9:	48 39 ce 	cmpq	%rcx, %rsi
  421acc:	0f 8f 46 ff ff ff 	jg	-186 <runtime.recordForPanic+0x38>
  421ad2:	48 89 f1 	movq	%rsi, %rcx
  421ad5:	e9 3e ff ff ff 	jmp	-194 <runtime.recordForPanic+0x38>
  421ada:	e8 a1 00 00 00 	callq	161 <runtime.printunlock>
  421adf:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  421ae4:	48 83 c4 30 	addq	$48, %rsp
  421ae8:	c3 	retq
  421ae9:	e8 c2 df ff ff 	callq	-8254 <runtime.panicslice>
  421aee:	0f 0b 	ud2
  421af0:	e8 7b 2a 02 00 	callq	141947 <runtime.morestack_noctxt>
  421af5:	e9 e6 fe ff ff 	jmp	-282 <runtime.recordForPanic>
  421afa:	cc 	int3
  421afb:	cc 	int3
  421afc:	cc 	int3
  421afd:	cc 	int3
  421afe:	cc 	int3
  421aff:	cc 	int3

runtime.printlock:
  421b00:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  421b09:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  421b0d:	76 62 	jbe	98 <runtime.printlock+0x71>
  421b0f:	48 83 ec 18 	subq	$24, %rsp
  421b13:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  421b18:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  421b1d:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  421b26:	48 8b 40 30 	movq	48(%rax), %rax
  421b2a:	ff 80 00 01 00 00 	incl	256(%rax)
  421b30:	0f b6 88 18 01 00 00 	movzbl	280(%rax), %ecx
  421b37:	8d 51 01 	leal	1(%rcx), %edx
  421b3a:	88 90 18 01 00 00 	movb	%dl, 280(%rax)
  421b40:	84 c9 	testb	%cl, %cl
  421b42:	74 11 	je	17 <runtime.printlock+0x55>
  421b44:	83 80 00 01 00 00 ff 	addl	$-1, 256(%rax)
  421b4b:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  421b50:	48 83 c4 18 	addq	$24, %rsp
  421b54:	c3 	retq
  421b55:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  421b5a:	48 8d 05 ef 1d 0a 00 	leaq	663023(%rip), %rax
  421b61:	48 89 04 24 	movq	%rax, (%rsp)
  421b65:	e8 b6 79 fe ff 	callq	-99914 <runtime.lock>
  421b6a:	48 8b 44 24 08 	movq	8(%rsp), %rax
  421b6f:	eb d3 	jmp	-45 <runtime.printlock+0x44>
  421b71:	e8 fa 29 02 00 	callq	141818 <runtime.morestack_noctxt>
  421b76:	eb 88 	jmp	-120 <runtime.printlock>
  421b78:	cc 	int3
  421b79:	cc 	int3
  421b7a:	cc 	int3
  421b7b:	cc 	int3
  421b7c:	cc 	int3
  421b7d:	cc 	int3
  421b7e:	cc 	int3
  421b7f:	cc 	int3

runtime.printunlock:
  421b80:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  421b89:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  421b8d:	76 4c 	jbe	76 <runtime.printunlock+0x5b>
  421b8f:	48 83 ec 10 	subq	$16, %rsp
  421b93:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  421b98:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  421b9d:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  421ba6:	48 8b 40 30 	movq	48(%rax), %rax
  421baa:	0f b6 88 18 01 00 00 	movzbl	280(%rax), %ecx
  421bb1:	8d 51 ff 	leal	-1(%rcx), %edx
  421bb4:	88 90 18 01 00 00 	movb	%dl, 280(%rax)
  421bba:	80 f9 01 	cmpb	$1, %cl
  421bbd:	74 0a 	je	10 <runtime.printunlock+0x49>
  421bbf:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  421bc4:	48 83 c4 10 	addq	$16, %rsp
  421bc8:	c3 	retq
  421bc9:	48 8d 05 80 1d 0a 00 	leaq	662912(%rip), %rax
  421bd0:	48 89 04 24 	movq	%rax, (%rsp)
  421bd4:	e8 e7 7a fe ff 	callq	-99609 <runtime.unlock>
  421bd9:	eb e4 	jmp	-28 <runtime.printunlock+0x3f>
  421bdb:	e8 90 29 02 00 	callq	141712 <runtime.morestack_noctxt>
  421be0:	eb 9e 	jmp	-98 <runtime.printunlock>
  421be2:	cc 	int3
  421be3:	cc 	int3
  421be4:	cc 	int3
  421be5:	cc 	int3
  421be6:	cc 	int3
  421be7:	cc 	int3
  421be8:	cc 	int3
  421be9:	cc 	int3
  421bea:	cc 	int3
  421beb:	cc 	int3
  421bec:	cc 	int3
  421bed:	cc 	int3
  421bee:	cc 	int3
  421bef:	cc 	int3

runtime.gwrite:
  421bf0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  421bf9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  421bfd:	0f 86 27 01 00 00 	jbe	295 <runtime.gwrite+0x13a>
  421c03:	48 83 ec 30 	subq	$48, %rsp
  421c07:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  421c0c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  421c11:	48 8b 44 24 40 	movq	64(%rsp), %rax
  421c16:	48 85 c0 	testq	%rax, %rax
  421c19:	0f 84 f3 00 00 00 	je	243 <runtime.gwrite+0x122>
  421c1f:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  421c24:	48 89 0c 24 	movq	%rcx, (%rsp)
  421c28:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  421c2d:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  421c32:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  421c37:	e8 a4 fd ff ff 	callq	-604 <runtime.recordForPanic>
  421c3c:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  421c45:	48 85 c0 	testq	%rax, %rax
  421c48:	0f 84 98 00 00 00 	je	152 <runtime.gwrite+0xf6>
  421c4e:	48 8b 88 f0 00 00 00 	movq	240(%rax), %rcx
  421c55:	48 8b 90 00 01 00 00 	movq	256(%rax), %rdx
  421c5c:	48 8b 98 f8 00 00 00 	movq	248(%rax), %rbx
  421c63:	48 85 c9 	testq	%rcx, %rcx
  421c66:	74 7e 	je	126 <runtime.gwrite+0xf6>
  421c68:	48 39 d3 	cmpq	%rdx, %rbx
  421c6b:	0f 87 b2 00 00 00 	ja	178 <runtime.gwrite+0x133>
  421c71:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  421c76:	48 29 da 	subq	%rbx, %rdx
  421c79:	48 89 d6 	movq	%rdx, %rsi
  421c7c:	48 f7 da 	negq	%rdx
  421c7f:	48 c1 fa 3f 	sarq	$63, %rdx
  421c83:	48 21 d3 	andq	%rdx, %rbx
  421c86:	48 01 d9 	addq	%rbx, %rcx
  421c89:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  421c8e:	48 39 d6 	cmpq	%rdx, %rsi
  421c91:	7e 4e 	jle	78 <runtime.gwrite+0xf1>
  421c93:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  421c98:	48 89 0c 24 	movq	%rcx, (%rsp)
  421c9c:	48 8b 44 24 38 	movq	56(%rsp), %rax
  421ca1:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  421ca6:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  421cab:	e8 50 54 02 00 	callq	152656 <runtime.memmove>
  421cb0:	48 8b 44 24 20 	movq	32(%rsp), %rax
  421cb5:	48 8b 88 00 01 00 00 	movq	256(%rax), %rcx
  421cbc:	48 8b 90 f8 00 00 00 	movq	248(%rax), %rdx
  421cc3:	48 8b 5c 24 18 	movq	24(%rsp), %rbx
  421cc8:	48 01 da 	addq	%rbx, %rdx
  421ccb:	48 39 ca 	cmpq	%rcx, %rdx
  421cce:	77 4c 	ja	76 <runtime.gwrite+0x12c>
  421cd0:	48 89 90 f8 00 00 00 	movq	%rdx, 248(%rax)
  421cd7:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  421cdc:	48 83 c4 30 	addq	$48, %rsp
  421ce0:	c3 	retq
  421ce1:	48 89 f2 	movq	%rsi, %rdx
  421ce4:	eb ad 	jmp	-83 <runtime.gwrite+0xa3>
  421ce6:	48 8b 44 24 38 	movq	56(%rsp), %rax
  421ceb:	48 89 04 24 	movq	%rax, (%rsp)
  421cef:	48 8b 44 24 40 	movq	64(%rsp), %rax
  421cf4:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  421cf9:	48 8b 44 24 48 	movq	72(%rsp), %rax
  421cfe:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  421d03:	e8 f8 fa 01 00 	callq	129784 <runtime.writeErr>
  421d08:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  421d0d:	48 83 c4 30 	addq	$48, %rsp
  421d11:	c3 	retq
  421d12:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  421d17:	48 83 c4 30 	addq	$48, %rsp
  421d1b:	c3 	retq
  421d1c:	e8 8f dd ff ff 	callq	-8817 <runtime.panicslice>
  421d21:	0f 0b 	ud2
  421d23:	e8 88 dd ff ff 	callq	-8824 <runtime.panicslice>
  421d28:	0f 0b 	ud2
  421d2a:	e8 41 28 02 00 	callq	141377 <runtime.morestack_noctxt>
  421d2f:	e9 bc fe ff ff 	jmp	-324 <runtime.gwrite>
  421d34:	cc 	int3
  421d35:	cc 	int3
  421d36:	cc 	int3
  421d37:	cc 	int3
  421d38:	cc 	int3
  421d39:	cc 	int3
  421d3a:	cc 	int3
  421d3b:	cc 	int3
  421d3c:	cc 	int3
  421d3d:	cc 	int3
  421d3e:	cc 	int3
  421d3f:	cc 	int3

runtime.printsp:
  421d40:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  421d49:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  421d4d:	76 31 	jbe	49 <runtime.printsp+0x40>
  421d4f:	48 83 ec 18 	subq	$24, %rsp
  421d53:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  421d58:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  421d5d:	48 8d 05 ec 7e 04 00 	leaq	294636(%rip), %rax
  421d64:	48 89 04 24 	movq	%rax, (%rsp)
  421d68:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  421d71:	e8 ca 06 00 00 	callq	1738 <runtime.printstring>
  421d76:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  421d7b:	48 83 c4 18 	addq	$24, %rsp
  421d7f:	c3 	retq
  421d80:	e8 eb 27 02 00 	callq	141291 <runtime.morestack_noctxt>
  421d85:	eb b9 	jmp	-71 <runtime.printsp>
  421d87:	cc 	int3
  421d88:	cc 	int3
  421d89:	cc 	int3
  421d8a:	cc 	int3
  421d8b:	cc 	int3
  421d8c:	cc 	int3
  421d8d:	cc 	int3
  421d8e:	cc 	int3
  421d8f:	cc 	int3

runtime.printnl:
  421d90:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  421d99:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  421d9d:	76 31 	jbe	49 <runtime.printnl+0x40>
  421d9f:	48 83 ec 18 	subq	$24, %rsp
  421da3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  421da8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  421dad:	48 8d 05 a9 7e 04 00 	leaq	294569(%rip), %rax
  421db4:	48 89 04 24 	movq	%rax, (%rsp)
  421db8:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  421dc1:	e8 7a 06 00 00 	callq	1658 <runtime.printstring>
  421dc6:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  421dcb:	48 83 c4 18 	addq	$24, %rsp
  421dcf:	c3 	retq
  421dd0:	e8 9b 27 02 00 	callq	141211 <runtime.morestack_noctxt>
  421dd5:	eb b9 	jmp	-71 <runtime.printnl>
  421dd7:	cc 	int3
  421dd8:	cc 	int3
  421dd9:	cc 	int3
  421dda:	cc 	int3
  421ddb:	cc 	int3
  421ddc:	cc 	int3
  421ddd:	cc 	int3
  421dde:	cc 	int3
  421ddf:	cc 	int3

runtime.printbool:
  421de0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  421de9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  421ded:	76 55 	jbe	85 <runtime.printbool+0x64>
  421def:	48 83 ec 18 	subq	$24, %rsp
  421df3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  421df8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  421dfd:	0f b6 44 24 20 	movzbl	32(%rsp), %eax
  421e02:	84 c0 	testb	%al, %al
  421e04:	74 23 	je	35 <runtime.printbool+0x49>
  421e06:	48 8d 05 25 7f 04 00 	leaq	294693(%rip), %rax
  421e0d:	48 89 04 24 	movq	%rax, (%rsp)
  421e11:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  421e1a:	e8 21 06 00 00 	callq	1569 <runtime.printstring>
  421e1f:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  421e24:	48 83 c4 18 	addq	$24, %rsp
  421e28:	c3 	retq
  421e29:	48 8d 05 97 7f 04 00 	leaq	294807(%rip), %rax
  421e30:	48 89 04 24 	movq	%rax, (%rsp)
  421e34:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  421e3d:	e8 fe 05 00 00 	callq	1534 <runtime.printstring>
  421e42:	eb db 	jmp	-37 <runtime.printbool+0x3f>
  421e44:	e8 27 27 02 00 	callq	141095 <runtime.morestack_noctxt>
  421e49:	eb 95 	jmp	-107 <runtime.printbool>
  421e4b:	cc 	int3
  421e4c:	cc 	int3
  421e4d:	cc 	int3
  421e4e:	cc 	int3
  421e4f:	cc 	int3

runtime.printfloat:
  421e50:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  421e59:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  421e5d:	0f 86 72 02 00 00 	jbe	626 <runtime.printfloat+0x285>
  421e63:	48 83 ec 30 	subq	$48, %rsp
  421e67:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  421e6c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  421e71:	f2 0f 10 44 24 38 	movsd	56(%rsp), %xmm0
  421e77:	66 0f 2e c0 	ucomisd	%xmm0, %xmm0
  421e7b:	0f 85 31 02 00 00 	jne	561 <runtime.printfloat+0x262>
  421e81:	0f 8a 2b 02 00 00 	jp	555 <runtime.printfloat+0x262>
  421e87:	0f 10 c8 	movups	%xmm0, %xmm1
  421e8a:	f2 0f 58 c0 	addsd	%xmm0, %xmm0
  421e8e:	66 0f 2e c8 	ucomisd	%xmm0, %xmm1
  421e92:	0f 85 12 02 00 00 	jne	530 <runtime.printfloat+0x25a>
  421e98:	0f 8a 0c 02 00 00 	jp	524 <runtime.printfloat+0x25a>
  421e9e:	0f 57 d2 	xorps	%xmm2, %xmm2
  421ea1:	66 0f 2e ca 	ucomisd	%xmm2, %xmm1
  421ea5:	0f 87 dc 01 00 00 	ja	476 <runtime.printfloat+0x237>
  421eab:	66 0f 2e c8 	ucomisd	%xmm0, %xmm1
  421eaf:	75 0c 	jne	12 <runtime.printfloat+0x6d>
  421eb1:	7a 0a 	jp	10 <runtime.printfloat+0x6d>
  421eb3:	66 0f 2e d1 	ucomisd	%xmm1, %xmm2
  421eb7:	0f 87 a7 01 00 00 	ja	423 <runtime.printfloat+0x214>
  421ebd:	48 c7 44 24 1a 00 00 00 00 	movq	$0, 26(%rsp)
  421ec6:	48 c7 44 24 20 00 00 00 00 	movq	$0, 32(%rsp)
  421ecf:	c6 44 24 1a 2b 	movb	$43, 26(%rsp)
  421ed4:	66 0f 2e d1 	ucomisd	%xmm1, %xmm2
  421ed8:	0f 85 08 01 00 00 	jne	264 <runtime.printfloat+0x196>
  421ede:	0f 8a 02 01 00 00 	jp	258 <runtime.printfloat+0x196>
  421ee4:	f2 0f 10 05 e4 2b 05 00 	movsd	338916(%rip), %xmm0
  421eec:	f2 0f 5e c1 	divsd	%xmm1, %xmm0
  421ef0:	66 0f 2e d0 	ucomisd	%xmm0, %xmm2
  421ef4:	76 05 	jbe	5 <runtime.printfloat+0xab>
  421ef6:	c6 44 24 1a 2d 	movb	$45, 26(%rsp)
  421efb:	31 c0 	xorl	%eax, %eax
  421efd:	31 c9 	xorl	%ecx, %ecx
  421eff:	eb 28 	jmp	40 <runtime.printfloat+0xd9>
  421f01:	f2 48 0f 2c d1 	cvttsd2si	%xmm1, %rdx
  421f06:	48 8d 5a 30 	leaq	48(%rdx), %rbx
  421f0a:	88 5c 0c 1c 	movb	%bl, 28(%rsp,%rcx)
  421f0e:	48 ff c1 	incq	%rcx
  421f11:	0f 57 c0 	xorps	%xmm0, %xmm0
  421f14:	f2 48 0f 2a c2 	cvtsi2sdq	%rdx, %xmm0
  421f19:	f2 0f 5c c8 	subsd	%xmm0, %xmm1
  421f1d:	f2 0f 10 05 d3 2b 05 00 	movsd	338899(%rip), %xmm0
  421f25:	f2 0f 59 c8 	mulsd	%xmm0, %xmm1
  421f29:	48 83 f9 07 	cmpq	$7, %rcx
  421f2d:	7c d2 	jl	-46 <runtime.printfloat+0xb1>
  421f2f:	0f b6 4c 24 1c 	movzbl	28(%rsp), %ecx
  421f34:	88 4c 24 1b 	movb	%cl, 27(%rsp)
  421f38:	c6 44 24 1c 2e 	movb	$46, 28(%rsp)
  421f3d:	66 c7 44 24 23 65 2b 	movw	$11109, 35(%rsp)
  421f44:	48 85 c0 	testq	%rax, %rax
  421f47:	7d 08 	jge	8 <runtime.printfloat+0x101>
  421f49:	c6 44 24 24 2d 	movb	$45, 36(%rsp)
  421f4e:	48 f7 d8 	negq	%rax
  421f51:	48 89 c1 	movq	%rax, %rcx
  421f54:	48 b8 0b d7 a3 70 3d 0a d7 a3 	movabsq	$-6640827866535438581, %rax
  421f5e:	48 f7 e9 	imulq	%rcx
  421f61:	48 01 ca 	addq	%rcx, %rdx
  421f64:	48 89 cb 	movq	%rcx, %rbx
  421f67:	48 c1 f9 3f 	sarq	$63, %rcx
  421f6b:	48 c1 fa 06 	sarq	$6, %rdx
  421f6f:	48 29 ca 	subq	%rcx, %rdx
  421f72:	83 c2 30 	addl	$48, %edx
  421f75:	88 54 24 25 	movb	%dl, 37(%rsp)
  421f79:	48 b8 cd cc cc cc cc cc cc cc 	movabsq	$-3689348814741910323, %rax
  421f83:	48 f7 eb 	imulq	%rbx
  421f86:	48 01 da 	addq	%rbx, %rdx
  421f89:	48 c1 fa 03 	sarq	$3, %rdx
  421f8d:	48 29 ca 	subq	%rcx, %rdx
  421f90:	0f b6 ca 	movzbl	%dl, %ecx
  421f93:	69 c9 9a 01 00 00 	imull	$410, %ecx, %ecx
  421f99:	c1 e9 0c 	shrl	$12, %ecx
  421f9c:	6b c9 0a 	imull	$10, %ecx, %ecx
  421f9f:	48 89 d6 	movq	%rdx, %rsi
  421fa2:	29 ca 	subl	%ecx, %edx
  421fa4:	8d 4a 30 	leal	48(%rdx), %ecx
  421fa7:	88 4c 24 26 	movb	%cl, 38(%rsp)
  421fab:	48 8d 0c b6 	leaq	(%rsi,%rsi,4), %rcx
  421faf:	48 d1 e1 	shlq	%rcx
  421fb2:	48 29 cb 	subq	%rcx, %rbx
  421fb5:	8d 4b 30 	leal	48(%rbx), %ecx
  421fb8:	88 4c 24 27 	movb	%cl, 39(%rsp)
  421fbc:	48 8d 4c 24 1a 	leaq	26(%rsp), %rcx
  421fc1:	48 89 0c 24 	movq	%rcx, (%rsp)
  421fc5:	48 c7 44 24 08 0e 00 00 00 	movq	$14, 8(%rsp)
  421fce:	48 c7 44 24 10 0e 00 00 00 	movq	$14, 16(%rsp)
  421fd7:	e8 14 fc ff ff 	callq	-1004 <runtime.gwrite>
  421fdc:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  421fe1:	48 83 c4 30 	addq	$48, %rsp
  421fe5:	c3 	retq
  421fe6:	76 11 	jbe	17 <runtime.printfloat+0x1a9>
  421fe8:	c6 44 24 1a 2d 	movb	$45, 26(%rsp)
  421fed:	f2 0f 10 05 2b 2b 05 00 	movsd	338731(%rip), %xmm0
  421ff5:	66 0f ef c8 	pxor	%xmm0, %xmm1
  421ff9:	31 c0 	xorl	%eax, %eax
  421ffb:	eb 07 	jmp	7 <runtime.printfloat+0x1b4>
  421ffd:	48 ff c0 	incq	%rax
  422000:	f2 0f 5e c8 	divsd	%xmm0, %xmm1
  422004:	f2 0f 10 05 ec 2a 05 00 	movsd	338668(%rip), %xmm0
  42200c:	66 0f 2e c8 	ucomisd	%xmm0, %xmm1
  422010:	73 eb 	jae	-21 <runtime.printfloat+0x1ad>
  422012:	eb 07 	jmp	7 <runtime.printfloat+0x1cb>
  422014:	48 ff c8 	decq	%rax
  422017:	f2 0f 59 c8 	mulsd	%xmm0, %xmm1
  42201b:	f2 0f 10 15 ad 2a 05 00 	movsd	338605(%rip), %xmm2
  422023:	66 0f 2e d1 	ucomisd	%xmm1, %xmm2
  422027:	77 eb 	ja	-21 <runtime.printfloat+0x1c4>
  422029:	31 c9 	xorl	%ecx, %ecx
  42202b:	f2 0f 10 15 bd 2a 05 00 	movsd	338621(%rip), %xmm2
  422033:	eb 07 	jmp	7 <runtime.printfloat+0x1ec>
  422035:	48 ff c1 	incq	%rcx
  422038:	f2 0f 5e d0 	divsd	%xmm0, %xmm2
  42203c:	48 83 f9 07 	cmpq	$7, %rcx
  422040:	7c f3 	jl	-13 <runtime.printfloat+0x1e5>
  422042:	f2 0f 58 d1 	addsd	%xmm1, %xmm2
  422046:	66 0f 2e d0 	ucomisd	%xmm0, %xmm2
  42204a:	72 13 	jb	19 <runtime.printfloat+0x20f>
  42204c:	48 8d 48 01 	leaq	1(%rax), %rcx
  422050:	f2 0f 5e d0 	divsd	%xmm0, %xmm2
  422054:	0f 10 ca 	movups	%xmm2, %xmm1
  422057:	48 89 c8 	movq	%rcx, %rax
  42205a:	e9 9e fe ff ff 	jmp	-354 <runtime.printfloat+0xad>
  42205f:	48 89 c1 	movq	%rax, %rcx
  422062:	eb f0 	jmp	-16 <runtime.printfloat+0x204>
  422064:	48 8d 05 83 7c 04 00 	leaq	294019(%rip), %rax
  42206b:	48 89 04 24 	movq	%rax, (%rsp)
  42206f:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  422078:	e8 c3 03 00 00 	callq	963 <runtime.printstring>
  42207d:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  422082:	48 83 c4 30 	addq	$48, %rsp
  422086:	c3 	retq
  422087:	48 8d 05 58 7c 04 00 	leaq	293976(%rip), %rax
  42208e:	48 89 04 24 	movq	%rax, (%rsp)
  422092:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  42209b:	e8 a0 03 00 00 	callq	928 <runtime.printstring>
  4220a0:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  4220a5:	48 83 c4 30 	addq	$48, %rsp
  4220a9:	c3 	retq
  4220aa:	0f 57 d2 	xorps	%xmm2, %xmm2
  4220ad:	e9 fd fd ff ff 	jmp	-515 <runtime.printfloat+0x5f>
  4220b2:	48 8d 05 e6 7b 04 00 	leaq	293862(%rip), %rax
  4220b9:	48 89 04 24 	movq	%rax, (%rsp)
  4220bd:	48 c7 44 24 08 03 00 00 00 	movq	$3, 8(%rsp)
  4220c6:	e8 75 03 00 00 	callq	885 <runtime.printstring>
  4220cb:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  4220d0:	48 83 c4 30 	addq	$48, %rsp
  4220d4:	c3 	retq
  4220d5:	e8 96 24 02 00 	callq	140438 <runtime.morestack_noctxt>
  4220da:	e9 71 fd ff ff 	jmp	-655 <runtime.printfloat>
  4220df:	cc 	int3

runtime.printcomplex:
  4220e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4220e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4220ed:	76 74 	jbe	116 <runtime.printcomplex+0x83>
  4220ef:	48 83 ec 18 	subq	$24, %rsp
  4220f3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  4220f8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  4220fd:	e8 fe f9 ff ff 	callq	-1538 <runtime.printlock>
  422102:	48 8d 05 48 7b 04 00 	leaq	293704(%rip), %rax
  422109:	48 89 04 24 	movq	%rax, (%rsp)
  42210d:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  422116:	e8 25 03 00 00 	callq	805 <runtime.printstring>
  42211b:	f2 0f 10 44 24 20 	movsd	32(%rsp), %xmm0
  422121:	f2 0f 11 04 24 	movsd	%xmm0, (%rsp)
  422126:	e8 25 fd ff ff 	callq	-731 <runtime.printfloat>
  42212b:	f2 0f 10 44 24 28 	movsd	40(%rsp), %xmm0
  422131:	f2 0f 11 04 24 	movsd	%xmm0, (%rsp)
  422136:	e8 15 fd ff ff 	callq	-747 <runtime.printfloat>
  42213b:	48 8d 05 36 7b 04 00 	leaq	293686(%rip), %rax
  422142:	48 89 04 24 	movq	%rax, (%rsp)
  422146:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  42214f:	e8 ec 02 00 00 	callq	748 <runtime.printstring>
  422154:	e8 27 fa ff ff 	callq	-1497 <runtime.printunlock>
  422159:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  42215e:	48 83 c4 18 	addq	$24, %rsp
  422162:	c3 	retq
  422163:	e8 08 24 02 00 	callq	140296 <runtime.morestack_noctxt>
  422168:	e9 73 ff ff ff 	jmp	-141 <runtime.printcomplex>
  42216d:	cc 	int3
  42216e:	cc 	int3
  42216f:	cc 	int3

runtime.printuint:
  422170:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  422179:	48 8d 44 24 f8 	leaq	-8(%rsp), %rax
  42217e:	48 3b 41 10 	cmpq	16(%rcx), %rax
  422182:	0f 86 ea 00 00 00 	jbe	234 <runtime.printuint+0x102>
  422188:	48 81 ec 88 00 00 00 	subq	$136, %rsp
  42218f:	48 89 ac 24 80 00 00 00 	movq	%rbp, 128(%rsp)
  422197:	48 8d ac 24 80 00 00 00 	leaq	128(%rsp), %rbp
  42219f:	48 c7 44 24 1c 00 00 00 00 	movq	$0, 28(%rsp)
  4221a8:	48 8d 7c 24 20 	leaq	32(%rsp), %rdi
  4221ad:	0f 57 c0 	xorps	%xmm0, %xmm0
  4221b0:	48 8d 7f e0 	leaq	-32(%rdi), %rdi
  4221b4:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  4221b9:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  4221be:	e8 ee 48 02 00 	callq	149742 <runtime.duffzero+0x111>
  4221c3:	48 8b 6d 00 	movq	(%rbp), %rbp
  4221c7:	48 8b 8c 24 90 00 00 00 	movq	144(%rsp), %rcx
  4221cf:	b8 63 00 00 00 	movl	$99, %eax
  4221d4:	eb 07 	jmp	7 <runtime.printuint+0x6d>
  4221d6:	48 8d 46 ff 	leaq	-1(%rsi), %rax
  4221da:	48 89 d1 	movq	%rdx, %rcx
  4221dd:	48 85 c0 	testq	%rax, %rax
  4221e0:	7e 7d 	jle	125 <runtime.printuint+0xef>
  4221e2:	48 89 c2 	movq	%rax, %rdx
  4221e5:	48 89 c8 	movq	%rcx, %rax
  4221e8:	48 bb cd cc cc cc cc cc cc cc 	movabsq	$-3689348814741910323, %rbx
  4221f2:	48 89 d6 	movq	%rdx, %rsi
  4221f5:	48 f7 e3 	mulq	%rbx
  4221f8:	48 c1 ea 03 	shrq	$3, %rdx
  4221fc:	48 8d 3c 92 	leaq	(%rdx,%rdx,4), %rdi
  422200:	48 d1 e7 	shlq	%rdi
  422203:	49 89 c8 	movq	%rcx, %r8
  422206:	48 29 f9 	subq	%rdi, %rcx
  422209:	48 83 fe 64 	cmpq	$100, %rsi
  42220d:	73 5c 	jae	92 <runtime.printuint+0xfb>
  42220f:	48 83 c1 30 	addq	$48, %rcx
  422213:	88 4c 34 1c 	movb	%cl, 28(%rsp,%rsi)
  422217:	49 83 f8 0a 	cmpq	$10, %r8
  42221b:	73 b9 	jae	-71 <runtime.printuint+0x66>
  42221d:	48 83 fe 64 	cmpq	$100, %rsi
  422221:	77 41 	ja	65 <runtime.printuint+0xf4>
  422223:	48 8d 46 9c 	leaq	-100(%rsi), %rax
  422227:	48 f7 d8 	negq	%rax
  42222a:	48 89 c1 	movq	%rax, %rcx
  42222d:	48 f7 d8 	negq	%rax
  422230:	48 c1 f8 3f 	sarq	$63, %rax
  422234:	48 21 c6 	andq	%rax, %rsi
  422237:	48 8d 44 34 1c 	leaq	28(%rsp,%rsi), %rax
  42223c:	48 89 04 24 	movq	%rax, (%rsp)
  422240:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  422245:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  42224a:	e8 a1 f9 ff ff 	callq	-1631 <runtime.gwrite>
  42224f:	48 8b ac 24 80 00 00 00 	movq	128(%rsp), %rbp
  422257:	48 81 c4 88 00 00 00 	addq	$136, %rsp
  42225e:	c3 	retq
  42225f:	48 89 c6 	movq	%rax, %rsi
  422262:	eb b9 	jmp	-71 <runtime.printuint+0xad>
  422264:	e8 47 d8 ff ff 	callq	-10169 <runtime.panicslice>
  422269:	0f 0b 	ud2
  42226b:	e8 d0 d7 ff ff 	callq	-10288 <runtime.panicindex>
  422270:	0f 0b 	ud2
  422272:	e8 f9 22 02 00 	callq	140025 <runtime.morestack_noctxt>
  422277:	e9 f4 fe ff ff 	jmp	-268 <runtime.printuint>
  42227c:	cc 	int3
  42227d:	cc 	int3
  42227e:	cc 	int3
  42227f:	cc 	int3

runtime.printint:
  422280:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  422289:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42228d:	76 4e 	jbe	78 <runtime.printint+0x5d>
  42228f:	48 83 ec 18 	subq	$24, %rsp
  422293:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  422298:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  42229d:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4222a2:	48 85 c0 	testq	%rax, %rax
  4222a5:	7c 13 	jl	19 <runtime.printint+0x3a>
  4222a7:	48 89 04 24 	movq	%rax, (%rsp)
  4222ab:	e8 c0 fe ff ff 	callq	-320 <runtime.printuint>
  4222b0:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  4222b5:	48 83 c4 18 	addq	$24, %rsp
  4222b9:	c3 	retq
  4222ba:	48 8d 05 94 79 04 00 	leaq	293268(%rip), %rax
  4222c1:	48 89 04 24 	movq	%rax, (%rsp)
  4222c5:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  4222ce:	e8 6d 01 00 00 	callq	365 <runtime.printstring>
  4222d3:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4222d8:	48 f7 d8 	negq	%rax
  4222db:	eb ca 	jmp	-54 <runtime.printint+0x27>
  4222dd:	e8 8e 22 02 00 	callq	139918 <runtime.morestack_noctxt>
  4222e2:	eb 9c 	jmp	-100 <runtime.printint>
  4222e4:	cc 	int3
  4222e5:	cc 	int3
  4222e6:	cc 	int3
  4222e7:	cc 	int3
  4222e8:	cc 	int3
  4222e9:	cc 	int3
  4222ea:	cc 	int3
  4222eb:	cc 	int3
  4222ec:	cc 	int3
  4222ed:	cc 	int3
  4222ee:	cc 	int3
  4222ef:	cc 	int3

runtime.printhex:
  4222f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4222f9:	48 8d 44 24 f8 	leaq	-8(%rsp), %rax
  4222fe:	48 3b 41 10 	cmpq	16(%rcx), %rax
  422302:	0f 86 ee 00 00 00 	jbe	238 <runtime.printhex+0x106>
  422308:	48 81 ec 88 00 00 00 	subq	$136, %rsp
  42230f:	48 89 ac 24 80 00 00 00 	movq	%rbp, 128(%rsp)
  422317:	48 8d ac 24 80 00 00 00 	leaq	128(%rsp), %rbp
  42231f:	48 c7 44 24 1c 00 00 00 00 	movq	$0, 28(%rsp)
  422328:	48 8d 7c 24 20 	leaq	32(%rsp), %rdi
  42232d:	0f 57 c0 	xorps	%xmm0, %xmm0
  422330:	48 8d 7f e0 	leaq	-32(%rdi), %rdi
  422334:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  422339:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  42233e:	e8 6e 47 02 00 	callq	149358 <runtime.duffzero+0x111>
  422343:	48 8b 6d 00 	movq	(%rbp), %rbp
  422347:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  42234f:	b9 63 00 00 00 	movl	$99, %ecx
  422354:	eb 0a 	jmp	10 <runtime.printhex+0x70>
  422356:	48 ff c9 	decq	%rcx
  422359:	48 c1 ea 04 	shrq	$4, %rdx
  42235d:	48 89 d0 	movq	%rdx, %rax
  422360:	48 85 c9 	testq	%rcx, %rcx
  422363:	7e 22 	jle	34 <runtime.printhex+0x97>
  422365:	48 89 c2 	movq	%rax, %rdx
  422368:	48 83 e0 0f 	andq	$15, %rax
  42236c:	48 8d 1d bf 86 04 00 	leaq	296639(%rip), %rbx
  422373:	0f b6 04 03 	movzbl	(%rbx,%rax), %eax
  422377:	48 83 f9 64 	cmpq	$100, %rcx
  42237b:	73 72 	jae	114 <runtime.printhex+0xff>
  42237d:	88 44 0c 1c 	movb	%al, 28(%rsp,%rcx)
  422381:	48 83 fa 10 	cmpq	$16, %rdx
  422385:	73 cf 	jae	-49 <runtime.printhex+0x66>
  422387:	48 8d 41 ff 	leaq	-1(%rcx), %rax
  42238b:	48 83 f8 64 	cmpq	$100, %rax
  42238f:	73 57 	jae	87 <runtime.printhex+0xf8>
  422391:	c6 44 0c 1b 78 	movb	$120, 27(%rsp,%rcx)
  422396:	48 8d 41 fe 	leaq	-2(%rcx), %rax
  42239a:	48 83 f8 64 	cmpq	$100, %rax
  42239e:	73 41 	jae	65 <runtime.printhex+0xf1>
  4223a0:	c6 44 0c 1a 30 	movb	$48, 26(%rsp,%rcx)
  4223a5:	48 83 c1 9a 	addq	$-102, %rcx
  4223a9:	48 f7 d9 	negq	%rcx
  4223ac:	48 89 ca 	movq	%rcx, %rdx
  4223af:	48 f7 d9 	negq	%rcx
  4223b2:	48 c1 f9 3f 	sarq	$63, %rcx
  4223b6:	48 21 c8 	andq	%rcx, %rax
  4223b9:	48 8d 44 04 1c 	leaq	28(%rsp,%rax), %rax
  4223be:	48 89 04 24 	movq	%rax, (%rsp)
  4223c2:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  4223c7:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  4223cc:	e8 1f f8 ff ff 	callq	-2017 <runtime.gwrite>
  4223d1:	48 8b ac 24 80 00 00 00 	movq	128(%rsp), %rbp
  4223d9:	48 81 c4 88 00 00 00 	addq	$136, %rsp
  4223e0:	c3 	retq
  4223e1:	e8 5a d6 ff ff 	callq	-10662 <runtime.panicindex>
  4223e6:	0f 0b 	ud2
  4223e8:	e8 53 d6 ff ff 	callq	-10669 <runtime.panicindex>
  4223ed:	0f 0b 	ud2
  4223ef:	e8 4c d6 ff ff 	callq	-10676 <runtime.panicindex>
  4223f4:	0f 0b 	ud2
  4223f6:	e8 75 21 02 00 	callq	139637 <runtime.morestack_noctxt>
  4223fb:	e9 f0 fe ff ff 	jmp	-272 <runtime.printhex>

runtime.printpointer:
  422400:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  422409:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42240d:	76 26 	jbe	38 <runtime.printpointer+0x35>
  42240f:	48 83 ec 10 	subq	$16, %rsp
  422413:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  422418:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  42241d:	48 8b 44 24 18 	movq	24(%rsp), %rax
  422422:	48 89 04 24 	movq	%rax, (%rsp)
  422426:	e8 c5 fe ff ff 	callq	-315 <runtime.printhex>
  42242b:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  422430:	48 83 c4 10 	addq	$16, %rsp
  422434:	c3 	retq
  422435:	e8 36 21 02 00 	callq	139574 <runtime.morestack_noctxt>
  42243a:	eb c4 	jmp	-60 <runtime.printpointer>
  42243c:	cc 	int3
  42243d:	cc 	int3
  42243e:	cc 	int3
  42243f:	cc 	int3

runtime.printstring:
  422440:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  422449:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42244d:	76 78 	jbe	120 <runtime.printstring+0x87>
  42244f:	48 83 ec 48 	subq	$72, %rsp
  422453:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  422458:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  42245d:	48 8b 44 24 50 	movq	80(%rsp), %rax
  422462:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  422467:	48 8b 44 24 58 	movq	88(%rsp), %rax
  42246c:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  422471:	48 c7 44 24 28 00 00 00 00 	movq	$0, 40(%rsp)
  42247a:	0f 57 c0 	xorps	%xmm0, %xmm0
  42247d:	0f 11 44 24 30 	movups	%xmm0, 48(%rsp)
  422482:	48 8b 44 24 18 	movq	24(%rsp), %rax
  422487:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  42248c:	48 8b 44 24 20 	movq	32(%rsp), %rax
  422491:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  422496:	48 8b 44 24 20 	movq	32(%rsp), %rax
  42249b:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  4224a0:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4224a5:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  4224aa:	48 89 14 24 	movq	%rdx, (%rsp)
  4224ae:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4224b3:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  4224b8:	e8 33 f7 ff ff 	callq	-2253 <runtime.gwrite>
  4224bd:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  4224c2:	48 83 c4 48 	addq	$72, %rsp
  4224c6:	c3 	retq
  4224c7:	e8 a4 20 02 00 	callq	139428 <runtime.morestack_noctxt>
  4224cc:	e9 6f ff ff ff 	jmp	-145 <runtime.printstring>
  4224d1:	cc 	int3
  4224d2:	cc 	int3
  4224d3:	cc 	int3
  4224d4:	cc 	int3
  4224d5:	cc 	int3
  4224d6:	cc 	int3
  4224d7:	cc 	int3
  4224d8:	cc 	int3
  4224d9:	cc 	int3
  4224da:	cc 	int3
  4224db:	cc 	int3
  4224dc:	cc 	int3
  4224dd:	cc 	int3
  4224de:	cc 	int3
  4224df:	cc 	int3

runtime.printslice:
  4224e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4224e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4224ed:	0f 86 ab 00 00 00 	jbe	171 <runtime.printslice+0xbe>
  4224f3:	48 83 ec 28 	subq	$40, %rsp
  4224f7:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  4224fc:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  422501:	48 8b 44 24 40 	movq	64(%rsp), %rax
  422506:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  42250b:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  422510:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  422515:	e8 e6 f5 ff ff 	callq	-2586 <runtime.printlock>
  42251a:	48 8d 05 3b 77 04 00 	leaq	292667(%rip), %rax
  422521:	48 89 04 24 	movq	%rax, (%rsp)
  422525:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  42252e:	e8 0d ff ff ff 	callq	-243 <runtime.printstring>
  422533:	48 8b 44 24 10 	movq	16(%rsp), %rax
  422538:	48 89 04 24 	movq	%rax, (%rsp)
  42253c:	e8 3f fd ff ff 	callq	-705 <runtime.printint>
  422541:	48 8d 05 0f 77 04 00 	leaq	292623(%rip), %rax
  422548:	48 89 04 24 	movq	%rax, (%rsp)
  42254c:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  422555:	e8 e6 fe ff ff 	callq	-282 <runtime.printstring>
  42255a:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42255f:	48 89 04 24 	movq	%rax, (%rsp)
  422563:	e8 18 fd ff ff 	callq	-744 <runtime.printint>
  422568:	48 8d 05 f0 76 04 00 	leaq	292592(%rip), %rax
  42256f:	48 89 04 24 	movq	%rax, (%rsp)
  422573:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  42257c:	e8 bf fe ff ff 	callq	-321 <runtime.printstring>
  422581:	e8 fa f5 ff ff 	callq	-2566 <runtime.printunlock>
  422586:	48 8b 44 24 30 	movq	48(%rsp), %rax
  42258b:	48 89 04 24 	movq	%rax, (%rsp)
  42258f:	e8 6c fe ff ff 	callq	-404 <runtime.printpointer>
  422594:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  422599:	48 83 c4 28 	addq	$40, %rsp
  42259d:	c3 	retq
  42259e:	e8 cd 1f 02 00 	callq	139213 <runtime.morestack_noctxt>
  4225a3:	e9 38 ff ff ff 	jmp	-200 <runtime.printslice>
  4225a8:	cc 	int3
  4225a9:	cc 	int3
  4225aa:	cc 	int3
  4225ab:	cc 	int3
  4225ac:	cc 	int3
  4225ad:	cc 	int3
  4225ae:	cc 	int3
  4225af:	cc 	int3

runtime.printeface:
  4225b0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4225b9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4225bd:	0f 86 89 00 00 00 	jbe	137 <runtime.printeface+0x9c>
  4225c3:	48 83 ec 18 	subq	$24, %rsp
  4225c7:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  4225cc:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  4225d1:	e8 2a f5 ff ff 	callq	-2774 <runtime.printlock>
  4225d6:	48 8d 05 74 76 04 00 	leaq	292468(%rip), %rax
  4225dd:	48 89 04 24 	movq	%rax, (%rsp)
  4225e1:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  4225ea:	e8 51 fe ff ff 	callq	-431 <runtime.printstring>
  4225ef:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4225f4:	48 89 04 24 	movq	%rax, (%rsp)
  4225f8:	e8 03 fe ff ff 	callq	-509 <runtime.printpointer>
  4225fd:	48 8d 05 50 76 04 00 	leaq	292432(%rip), %rax
  422604:	48 89 04 24 	movq	%rax, (%rsp)
  422608:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  422611:	e8 2a fe ff ff 	callq	-470 <runtime.printstring>
  422616:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42261b:	48 89 04 24 	movq	%rax, (%rsp)
  42261f:	e8 dc fd ff ff 	callq	-548 <runtime.printpointer>
  422624:	48 8d 05 27 76 04 00 	leaq	292391(%rip), %rax
  42262b:	48 89 04 24 	movq	%rax, (%rsp)
  42262f:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  422638:	e8 03 fe ff ff 	callq	-509 <runtime.printstring>
  42263d:	e8 3e f5 ff ff 	callq	-2754 <runtime.printunlock>
  422642:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  422647:	48 83 c4 18 	addq	$24, %rsp
  42264b:	c3 	retq
  42264c:	e8 1f 1f 02 00 	callq	139039 <runtime.morestack_noctxt>
  422651:	e9 5a ff ff ff 	jmp	-166 <runtime.printeface>
  422656:	cc 	int3
  422657:	cc 	int3
  422658:	cc 	int3
  422659:	cc 	int3
  42265a:	cc 	int3
  42265b:	cc 	int3
  42265c:	cc 	int3
  42265d:	cc 	int3
  42265e:	cc 	int3
  42265f:	cc 	int3

runtime.hexdumpWords:
  422660:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  422669:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42266d:	0f 86 31 02 00 00 	jbe	561 <runtime.hexdumpWords+0x244>
  422673:	48 83 ec 60 	subq	$96, %rsp
  422677:	48 89 6c 24 58 	movq	%rbp, 88(%rsp)
  42267c:	48 8d 6c 24 58 	leaq	88(%rsp), %rbp
  422681:	e8 7a f4 ff ff 	callq	-2950 <runtime.printlock>
  422686:	c6 44 24 27 00 	movb	$0, 39(%rsp)
  42268b:	c6 44 24 27 20 	movb	$32, 39(%rsp)
  422690:	31 c0 	xorl	%eax, %eax
  422692:	eb 09 	jmp	9 <runtime.hexdumpWords+0x3d>
  422694:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  422699:	48 8d 41 08 	leaq	8(%rcx), %rax
  42269d:	48 8b 4c 24 68 	movq	104(%rsp), %rcx
  4226a2:	48 8d 1c 08 	leaq	(%rax,%rcx), %rbx
  4226a6:	48 8b 74 24 70 	movq	112(%rsp), %rsi
  4226ab:	48 39 f3 	cmpq	%rsi, %rbx
  4226ae:	0f 83 d2 01 00 00 	jae	466 <runtime.hexdumpWords+0x226>
  4226b4:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  4226b9:	48 89 5c 24 40 	movq	%rbx, 64(%rsp)
  4226be:	48 a9 0f 00 00 00 	testq	$15, %rax
  4226c4:	75 40 	jne	64 <runtime.hexdumpWords+0xa6>
  4226c6:	48 85 c0 	testq	%rax, %rax
  4226c9:	0f 85 9e 01 00 00 	jne	414 <runtime.hexdumpWords+0x20d>
  4226cf:	48 89 1c 24 	movq	%rbx, (%rsp)
  4226d3:	48 8b 05 e6 b9 04 00 	movq	309734(%rip), %rax
  4226da:	48 8d 15 df b9 04 00 	leaq	309727(%rip), %rdx
  4226e1:	ff d0 	callq	*%rax
  4226e3:	e8 18 f4 ff ff 	callq	-3048 <runtime.printlock>
  4226e8:	48 8d 05 81 75 04 00 	leaq	292225(%rip), %rax
  4226ef:	48 89 04 24 	movq	%rax, (%rsp)
  4226f3:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  4226fc:	e8 3f fd ff ff 	callq	-705 <runtime.printstring>
  422701:	e8 7a f4 ff ff 	callq	-2950 <runtime.printunlock>
  422706:	48 8b 54 24 78 	movq	120(%rsp), %rdx
  42270b:	48 85 d2 	testq	%rdx, %rdx
  42270e:	0f 85 2d 01 00 00 	jne	301 <runtime.hexdumpWords+0x1e1>
  422714:	48 8d 44 24 27 	leaq	39(%rsp), %rax
  422719:	48 89 04 24 	movq	%rax, (%rsp)
  42271d:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  422726:	48 c7 44 24 10 01 00 00 00 	movq	$1, 16(%rsp)
  42272f:	e8 bc f4 ff ff 	callq	-2884 <runtime.gwrite>
  422734:	48 8b 44 24 40 	movq	64(%rsp), %rax
  422739:	48 8b 00 	movq	(%rax), %rax
  42273c:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  422741:	48 89 04 24 	movq	%rax, (%rsp)
  422745:	48 8b 0d 74 b9 04 00 	movq	309620(%rip), %rcx
  42274c:	48 8d 15 6d b9 04 00 	leaq	309613(%rip), %rdx
  422753:	ff d1 	callq	*%rcx
  422755:	e8 a6 f3 ff ff 	callq	-3162 <runtime.printlock>
  42275a:	e8 e1 f5 ff ff 	callq	-2591 <runtime.printsp>
  42275f:	e8 1c f4 ff ff 	callq	-3044 <runtime.printunlock>
  422764:	48 8b 44 24 28 	movq	40(%rsp), %rax
  422769:	48 89 04 24 	movq	%rax, (%rsp)
  42276d:	e8 5e 5a 01 00 	callq	88670 <runtime.findfunc>
  422772:	48 8b 44 24 10 	movq	16(%rsp), %rax
  422777:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  42277c:	48 85 c9 	testq	%rcx, %rcx
  42277f:	0f 84 0f ff ff ff 	je	-241 <runtime.hexdumpWords+0x34>
  422785:	48 89 4c 24 50 	movq	%rcx, 80(%rsp)
  42278a:	48 89 0c 24 	movq	%rcx, (%rsp)
  42278e:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  422793:	e8 68 61 01 00 	callq	90472 <runtime.funcname>
  422798:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42279d:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  4227a2:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  4227a7:	48 89 4c 24 48 	movq	%rcx, 72(%rsp)
  4227ac:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  4227b1:	48 8b 12 	movq	(%rdx), %rdx
  4227b4:	48 89 54 24 40 	movq	%rdx, 64(%rsp)
  4227b9:	e8 42 f3 ff ff 	callq	-3262 <runtime.printlock>
  4227be:	48 8d 05 94 74 04 00 	leaq	291988(%rip), %rax
  4227c5:	48 89 04 24 	movq	%rax, (%rsp)
  4227c9:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  4227d2:	e8 69 fc ff ff 	callq	-919 <runtime.printstring>
  4227d7:	48 8b 44 24 48 	movq	72(%rsp), %rax
  4227dc:	48 89 04 24 	movq	%rax, (%rsp)
  4227e0:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4227e5:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4227ea:	e8 51 fc ff ff 	callq	-943 <runtime.printstring>
  4227ef:	48 8d 05 5d 74 04 00 	leaq	291933(%rip), %rax
  4227f6:	48 89 04 24 	movq	%rax, (%rsp)
  4227fa:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  422803:	e8 38 fc ff ff 	callq	-968 <runtime.printstring>
  422808:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42280d:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  422812:	48 29 c8 	subq	%rcx, %rax
  422815:	48 89 04 24 	movq	%rax, (%rsp)
  422819:	e8 52 f9 ff ff 	callq	-1710 <runtime.printuint>
  42281e:	48 8d 05 4d 74 04 00 	leaq	291917(%rip), %rax
  422825:	48 89 04 24 	movq	%rax, (%rsp)
  422829:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  422832:	e8 09 fc ff ff 	callq	-1015 <runtime.printstring>
  422837:	e8 44 f3 ff ff 	callq	-3260 <runtime.printunlock>
  42283c:	e9 53 fe ff ff 	jmp	-429 <runtime.hexdumpWords+0x34>
  422841:	48 8b 44 24 40 	movq	64(%rsp), %rax
  422846:	48 89 04 24 	movq	%rax, (%rsp)
  42284a:	48 8b 0a 	movq	(%rdx), %rcx
  42284d:	ff d1 	callq	*%rcx
  42284f:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  422854:	88 44 24 27 	movb	%al, 39(%rsp)
  422858:	0f b6 c0 	movzbl	%al, %eax
  42285b:	84 c0 	testb	%al, %al
  42285d:	0f 85 b1 fe ff ff 	jne	-335 <runtime.hexdumpWords+0xb4>
  422863:	c6 44 24 27 20 	movb	$32, 39(%rsp)
  422868:	e9 a7 fe ff ff 	jmp	-345 <runtime.hexdumpWords+0xb4>
  42286d:	e8 8e f2 ff ff 	callq	-3442 <runtime.printlock>
  422872:	e8 19 f5 ff ff 	callq	-2791 <runtime.printnl>
  422877:	e8 04 f3 ff ff 	callq	-3324 <runtime.printunlock>
  42287c:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  422881:	e9 49 fe ff ff 	jmp	-439 <runtime.hexdumpWords+0x6f>
  422886:	e8 75 f2 ff ff 	callq	-3467 <runtime.printlock>
  42288b:	e8 00 f5 ff ff 	callq	-2816 <runtime.printnl>
  422890:	e8 eb f2 ff ff 	callq	-3349 <runtime.printunlock>
  422895:	e8 e6 f2 ff ff 	callq	-3354 <runtime.printunlock>
  42289a:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  42289f:	48 83 c4 60 	addq	$96, %rsp
  4228a3:	c3 	retq
  4228a4:	e8 c7 1c 02 00 	callq	138439 <runtime.morestack_noctxt>
  4228a9:	e9 b2 fd ff ff 	jmp	-590 <runtime.hexdumpWords>
  4228ae:	cc 	int3
  4228af:	cc 	int3

runtime.main:
  4228b0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4228b9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4228bd:	0f 86 58 03 00 00 	jbe	856 <runtime.main+0x36b>
  4228c3:	48 83 ec 50 	subq	$80, %rsp
  4228c7:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  4228cc:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  4228d1:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4228da:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  4228df:	48 8b 48 30 	movq	48(%rax), %rcx
  4228e3:	48 8b 09 	movq	(%rcx), %rcx
  4228e6:	48 c7 81 30 01 00 00 00 00 00 00 	movq	$0, 304(%rcx)
  4228f1:	48 c7 05 4c 27 08 00 00 ca 9a 3b 	movq	$1000000000, 534348(%rip)
  4228fc:	c6 05 ac 0f 0a 00 01 	movb	$1, 659372(%rip)
  422903:	48 8d 0d ce b7 04 00 	leaq	309198(%rip), %rcx
  42290a:	48 89 0c 24 	movq	%rcx, (%rsp)
  42290e:	e8 0d 1b 02 00 	callq	137997 <runtime.systemstack>
  422913:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  42291c:	48 8b 40 30 	movq	48(%rax), %rax
  422920:	ff 80 f8 02 00 00 	incl	760(%rax)
  422926:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  42292f:	48 8b 48 30 	movq	48(%rax), %rcx
  422933:	48 8d 91 68 01 00 00 	leaq	360(%rcx), %rdx
  42293a:	84 02 	testb	%al, (%rdx)
  42293c:	48 89 c2 	movq	%rax, %rdx
  42293f:	48 89 81 68 01 00 00 	movq	%rax, 360(%rcx)
  422946:	48 8d 82 e0 00 00 00 	leaq	224(%rdx), %rax
  42294d:	84 00 	testb	%al, (%rax)
  42294f:	48 8b 42 30 	movq	48(%rdx), %rax
  422953:	48 89 82 e0 00 00 00 	movq	%rax, 224(%rdx)
  42295a:	48 8b 44 24 40 	movq	64(%rsp), %rax
  42295f:	48 8b 40 30 	movq	48(%rax), %rax
  422963:	48 8d 0d f6 55 08 00 	leaq	546294(%rip), %rcx
  42296a:	48 39 c8 	cmpq	%rcx, %rax
  42296d:	0f 85 8d 02 00 00 	jne	653 <runtime.main+0x350>
  422973:	e8 78 15 02 00 	callq	136568 <runtime.init>
  422978:	e8 b3 50 02 00 	callq	151731 <runtime.nanotime>
  42297d:	48 8b 04 24 	movq	(%rsp), %rax
  422981:	48 85 c0 	testq	%rax, %rax
  422984:	0f 84 5b 02 00 00 	je	603 <runtime.main+0x335>
  42298a:	c6 44 24 37 01 	movb	$1, 55(%rsp)
  42298f:	48 8d 44 24 37 	leaq	55(%rsp), %rax
  422994:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  422999:	c7 04 24 08 00 00 00 	movl	$8, (%rsp)
  4229a0:	48 8d 05 39 b7 04 00 	leaq	309049(%rip), %rax
  4229a7:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4229ac:	e8 6f d3 ff ff 	callq	-11409 <runtime.deferproc>
  4229b1:	85 c0 	testl	%eax, %eax
  4229b3:	0f 85 b0 01 00 00 	jne	432 <runtime.main+0x2b9>
  4229b9:	e8 72 50 02 00 	callq	151666 <runtime.nanotime>
  4229be:	48 8b 04 24 	movq	(%rsp), %rax
  4229c2:	48 89 05 f7 0f 0a 00 	movq	%rax, 659447(%rip)
  4229c9:	e8 82 d3 fe ff 	callq	-76926 <runtime.gcenable>
  4229ce:	48 8d 05 4b 41 03 00 	leaq	213323(%rip), %rax
  4229d5:	48 89 04 24 	movq	%rax, (%rsp)
  4229d9:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  4229e2:	e8 e9 03 fe ff 	callq	-130071 <runtime.makechan>
  4229e7:	8b 05 23 10 0a 00 	movl	659491(%rip), %eax
  4229ed:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  4229f2:	85 c0 	testl	%eax, %eax
  4229f4:	0f 85 5b 01 00 00 	jne	347 <runtime.main+0x2a5>
  4229fa:	48 89 0d 67 4c 08 00 	movq	%rcx, 543847(%rip)
  422a01:	0f b6 05 a4 0e 0a 00 	movzbl	659108(%rip), %eax
  422a08:	84 c0 	testb	%al, %al
  422a0a:	74 5e 	je	94 <runtime.main+0x1ba>
  422a0c:	48 8b 05 dd 4b 08 00 	movq	543709(%rip), %rax
  422a13:	48 85 c0 	testq	%rax, %rax
  422a16:	0f 84 ae 01 00 00 	je	430 <runtime.main+0x31a>
  422a1c:	48 8b 05 dd 4b 08 00 	movq	543709(%rip), %rax
  422a23:	48 85 c0 	testq	%rax, %rax
  422a26:	0f 84 83 01 00 00 	je	387 <runtime.main+0x2ff>
  422a2c:	48 8b 05 d5 4b 08 00 	movq	543701(%rip), %rax
  422a33:	48 85 c0 	testq	%rax, %rax
  422a36:	0f 84 58 01 00 00 	je	344 <runtime.main+0x2e4>
  422a3c:	48 8b 05 9d 4b 08 00 	movq	543645(%rip), %rax
  422a43:	48 85 c0 	testq	%rax, %rax
  422a46:	0f 84 2d 01 00 00 	je	301 <runtime.main+0x2c9>
  422a4c:	e8 9f 40 00 00 	callq	16543 <runtime.startTemplateThread>
  422a51:	48 8b 05 88 4b 08 00 	movq	543624(%rip), %rax
  422a58:	48 89 04 24 	movq	%rax, (%rsp)
  422a5c:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  422a65:	e8 b6 f8 fd ff 	callq	-132938 <runtime.cgocall>
  422a6a:	48 8b 05 77 b6 04 00 	movq	308855(%rip), %rax
  422a71:	48 8d 15 70 b6 04 00 	leaq	308848(%rip), %rdx
  422a78:	ff d0 	callq	*%rax
  422a7a:	48 8b 05 e7 4b 08 00 	movq	543719(%rip), %rax
  422a81:	48 89 04 24 	movq	%rax, (%rsp)
  422a85:	e8 86 0e fe ff 	callq	-127354 <runtime.closechan>
  422a8a:	c6 44 24 37 00 	movb	$0, 55(%rsp)
  422a8f:	e8 0c 83 00 00 	callq	33548 <runtime.unlockOSThread>
  422a94:	0f b6 05 10 0e 0a 00 	movzbl	658960(%rip), %eax
  422a9b:	84 c0 	testb	%al, %al
  422a9d:	0f 85 a2 00 00 00 	jne	162 <runtime.main+0x295>
  422aa3:	0f b6 05 03 0e 0a 00 	movzbl	658947(%rip), %eax
  422aaa:	84 c0 	testb	%al, %al
  422aac:	0f 85 93 00 00 00 	jne	147 <runtime.main+0x295>
  422ab2:	48 8b 05 37 b6 04 00 	movq	308791(%rip), %rax
  422ab9:	48 8d 15 30 b6 04 00 	leaq	308784(%rip), %rdx
  422ac0:	ff d0 	callq	*%rax
  422ac2:	8b 05 34 0e 0a 00 	movl	658996(%rip), %eax
  422ac8:	85 c0 	testl	%eax, %eax
  422aca:	74 28 	je	40 <runtime.main+0x244>
  422acc:	31 c0 	xorl	%eax, %eax
  422ace:	eb 12 	jmp	18 <runtime.main+0x232>
  422ad0:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  422ad5:	e8 e6 02 00 00 	callq	742 <runtime.Gosched>
  422ada:	48 8b 44 24 38 	movq	56(%rsp), %rax
  422adf:	48 ff c0 	incq	%rax
  422ae2:	48 3d e8 03 00 00 	cmpq	$1000, %rax
  422ae8:	7d 0a 	jge	10 <runtime.main+0x244>
  422aea:	8b 0d 0c 0e 0a 00 	movl	658956(%rip), %ecx
  422af0:	85 c9 	testl	%ecx, %ecx
  422af2:	75 dc 	jne	-36 <runtime.main+0x220>
  422af4:	8b 05 fa 0d 0a 00 	movl	658938(%rip), %eax
  422afa:	85 c0 	testl	%eax, %eax
  422afc:	75 16 	jne	22 <runtime.main+0x264>
  422afe:	c7 04 24 00 00 00 00 	movl	$0, (%rsp)
  422b05:	e8 c6 4c 02 00 	callq	150726 <runtime.exit>
  422b0a:	31 c0 	xorl	%eax, %eax
  422b0c:	c7 00 00 00 00 00 	movl	$0, (%rax)
  422b12:	eb f6 	jmp	-10 <runtime.main+0x25a>
  422b14:	0f 57 c0 	xorps	%xmm0, %xmm0
  422b17:	0f 11 04 24 	movups	%xmm0, (%rsp)
  422b1b:	48 8d 05 10 76 04 00 	leaq	292368(%rip), %rax
  422b22:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  422b27:	48 c7 44 24 18 09 00 00 00 	movq	$9, 24(%rsp)
  422b30:	c6 44 24 20 10 	movb	$16, 32(%rsp)
  422b35:	48 c7 44 24 28 01 00 00 00 	movq	$1, 40(%rsp)
  422b3e:	e8 ad 02 00 00 	callq	685 <runtime.gopark>
  422b43:	eb b9 	jmp	-71 <runtime.main+0x24e>
  422b45:	90 	nop
  422b46:	e8 b5 da ff ff 	callq	-9547 <runtime.deferreturn>
  422b4b:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  422b50:	48 83 c4 50 	addq	$80, %rsp
  422b54:	c3 	retq
  422b55:	48 8d 3d 0c 4b 08 00 	leaq	543500(%rip), %rdi
  422b5c:	48 89 c8 	movq	%rcx, %rax
  422b5f:	e8 3c 3d 02 00 	callq	146748 <runtime.gcWriteBarrier>
  422b64:	e9 98 fe ff ff 	jmp	-360 <runtime.main+0x151>
  422b69:	90 	nop
  422b6a:	e8 91 da ff ff 	callq	-9583 <runtime.deferreturn>
  422b6f:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  422b74:	48 83 c4 50 	addq	$80, %rsp
  422b78:	c3 	retq
  422b79:	48 8d 05 eb a3 04 00 	leaq	304107(%rip), %rax
  422b80:	48 89 04 24 	movq	%rax, (%rsp)
  422b84:	48 c7 44 24 08 25 00 00 00 	movq	$37, 8(%rsp)
  422b8d:	e8 3e e6 ff ff 	callq	-6594 <runtime.throw>
  422b92:	0f 0b 	ud2
  422b94:	48 8d 05 c4 86 04 00 	leaq	296644(%rip), %rax
  422b9b:	48 89 04 24 	movq	%rax, (%rsp)
  422b9f:	48 c7 44 24 08 15 00 00 00 	movq	$21, 8(%rsp)
  422ba8:	e8 23 e6 ff ff 	callq	-6621 <runtime.throw>
  422bad:	0f 0b 	ud2
  422baf:	48 8d 05 aa 82 04 00 	leaq	295594(%rip), %rax
  422bb6:	48 89 04 24 	movq	%rax, (%rsp)
  422bba:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  422bc3:	e8 08 e6 ff ff 	callq	-6648 <runtime.throw>
  422bc8:	0f 0b 	ud2
  422bca:	48 8d 05 ae 8d 04 00 	leaq	298414(%rip), %rax
  422bd1:	48 89 04 24 	movq	%rax, (%rsp)
  422bd5:	48 c7 44 24 08 19 00 00 00 	movq	$25, 8(%rsp)
  422bde:	e8 ed e5 ff ff 	callq	-6675 <runtime.throw>
  422be3:	0f 0b 	ud2
  422be5:	48 8d 05 01 8b 04 00 	leaq	297729(%rip), %rax
  422bec:	48 89 04 24 	movq	%rax, (%rsp)
  422bf0:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  422bf9:	e8 d2 e5 ff ff 	callq	-6702 <runtime.throw>
  422bfe:	0f 0b 	ud2
  422c00:	48 8d 05 b1 88 04 00 	leaq	297137(%rip), %rax
  422c07:	48 89 04 24 	movq	%rax, (%rsp)
  422c0b:	48 c7 44 24 08 16 00 00 00 	movq	$22, 8(%rsp)
  422c14:	e8 b7 e5 ff ff 	callq	-6729 <runtime.throw>
  422c19:	0f 0b 	ud2
  422c1b:	e8 50 19 02 00 	callq	137552 <runtime.morestack_noctxt>
  422c20:	e9 8b fc ff ff 	jmp	-885 <runtime.main>
  422c25:	cc 	int3
  422c26:	cc 	int3
  422c27:	cc 	int3
  422c28:	cc 	int3
  422c29:	cc 	int3
  422c2a:	cc 	int3
  422c2b:	cc 	int3
  422c2c:	cc 	int3
  422c2d:	cc 	int3
  422c2e:	cc 	int3
  422c2f:	cc 	int3

runtime.init.4:
  422c30:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  422c39:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  422c3d:	76 30 	jbe	48 <runtime.init.4+0x3f>
  422c3f:	48 83 ec 18 	subq	$24, %rsp
  422c43:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  422c48:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  422c4d:	c7 04 24 00 00 00 00 	movl	$0, (%rsp)
  422c54:	48 8d 05 0d b4 04 00 	leaq	308237(%rip), %rax
  422c5b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  422c60:	e8 8b 76 00 00 	callq	30347 <runtime.newproc>
  422c65:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  422c6a:	48 83 c4 18 	addq	$24, %rsp
  422c6e:	c3 	retq
  422c6f:	e8 fc 18 02 00 	callq	137468 <runtime.morestack_noctxt>
  422c74:	eb ba 	jmp	-70 <runtime.init.4>
  422c76:	cc 	int3
  422c77:	cc 	int3
  422c78:	cc 	int3
  422c79:	cc 	int3
  422c7a:	cc 	int3
  422c7b:	cc 	int3
  422c7c:	cc 	int3
  422c7d:	cc 	int3
  422c7e:	cc 	int3
  422c7f:	cc 	int3

runtime.forcegchelper:
  422c80:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  422c89:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  422c8d:	0f 86 1b 01 00 00 	jbe	283 <runtime.forcegchelper+0x12e>
  422c93:	48 83 ec 30 	subq	$48, %rsp
  422c97:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  422c9c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  422ca1:	8b 0d 69 0d 0a 00 	movl	658793(%rip), %ecx
  422ca7:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  422cb0:	85 c9 	testl	%ecx, %ecx
  422cb2:	0f 85 ca 00 00 00 	jne	202 <runtime.forcegchelper+0x102>
  422cb8:	48 89 05 59 4a 08 00 	movq	%rax, 543321(%rip)
  422cbf:	eb 2c 	jmp	44 <runtime.forcegchelper+0x6d>
  422cc1:	e8 6a 4d 02 00 	callq	150890 <runtime.nanotime>
  422cc6:	48 8b 04 24 	movq	(%rsp), %rax
  422cca:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  422cd2:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  422cdb:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  422ce0:	c7 44 24 18 00 00 00 00 	movl	$0, 24(%rsp)
  422ce8:	e8 93 e4 fe ff 	callq	-72557 <runtime.gcStart>
  422ced:	48 8d 05 1c 4a 08 00 	leaq	543260(%rip), %rax
  422cf4:	48 89 04 24 	movq	%rax, (%rsp)
  422cf8:	e8 23 68 fe ff 	callq	-104413 <runtime.lock>
  422cfd:	8b 05 1d 4a 08 00 	movl	543261(%rip), %eax
  422d03:	85 c0 	testl	%eax, %eax
  422d05:	0f 85 88 00 00 00 	jne	136 <runtime.forcegchelper+0x113>
  422d0b:	b8 01 00 00 00 	movl	$1, %eax
  422d10:	48 8d 0d 09 4a 08 00 	leaq	543241(%rip), %rcx
  422d17:	87 01 	xchgl	%eax, (%rcx)
  422d19:	48 8d 05 f0 49 08 00 	leaq	543216(%rip), %rax
  422d20:	48 89 04 24 	movq	%rax, (%rsp)
  422d24:	48 8d 05 31 7c 04 00 	leaq	293937(%rip), %rax
  422d2b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  422d30:	48 c7 44 24 10 0f 00 00 00 	movq	$15, 16(%rsp)
  422d39:	c6 44 24 18 14 	movb	$20, 24(%rsp)
  422d3e:	48 c7 44 24 20 01 00 00 00 	movq	$1, 32(%rsp)
  422d47:	e8 14 02 00 00 	callq	532 <runtime.goparkunlock>
  422d4c:	8b 05 8e 0d 0a 00 	movl	658830(%rip), %eax
  422d52:	85 c0 	testl	%eax, %eax
  422d54:	0f 8e 67 ff ff ff 	jle	-153 <runtime.forcegchelper+0x41>
  422d5a:	e8 a1 ed ff ff 	callq	-4703 <runtime.printlock>
  422d5f:	48 8d 05 a6 75 04 00 	leaq	292262(%rip), %rax
  422d66:	48 89 04 24 	movq	%rax, (%rsp)
  422d6a:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  422d73:	e8 c8 f6 ff ff 	callq	-2360 <runtime.printstring>
  422d78:	e8 03 ee ff ff 	callq	-4605 <runtime.printunlock>
  422d7d:	e9 3f ff ff ff 	jmp	-193 <runtime.forcegchelper+0x41>
  422d82:	48 8d 3d 8f 49 08 00 	leaq	543119(%rip), %rdi
  422d89:	e8 12 3b 02 00 	callq	146194 <runtime.gcWriteBarrier>
  422d8e:	e9 5a ff ff ff 	jmp	-166 <runtime.forcegchelper+0x6d>
  422d93:	48 8d 05 5b 83 04 00 	leaq	295771(%rip), %rax
  422d9a:	48 89 04 24 	movq	%rax, (%rsp)
  422d9e:	48 c7 44 24 08 14 00 00 00 	movq	$20, 8(%rsp)
  422da7:	e8 24 e4 ff ff 	callq	-7132 <runtime.throw>
  422dac:	0f 0b 	ud2
  422dae:	e8 bd 17 02 00 	callq	137149 <runtime.morestack_noctxt>
  422db3:	e9 c8 fe ff ff 	jmp	-312 <runtime.forcegchelper>
  422db8:	cc 	int3
  422db9:	cc 	int3
  422dba:	cc 	int3
  422dbb:	cc 	int3
  422dbc:	cc 	int3
  422dbd:	cc 	int3
  422dbe:	cc 	int3
  422dbf:	cc 	int3

runtime.Gosched:
  422dc0:	48 83 ec 10 	subq	$16, %rsp
  422dc4:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  422dc9:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  422dce:	48 8d 05 e3 b2 04 00 	leaq	307939(%rip), %rax
  422dd5:	48 89 04 24 	movq	%rax, (%rsp)
  422dd9:	e8 c2 15 02 00 	callq	136642 <runtime.mcall>
  422dde:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  422de3:	48 83 c4 10 	addq	$16, %rsp
  422de7:	c3 	retq
  422de8:	cc 	int3
  422de9:	cc 	int3
  422dea:	cc 	int3
  422deb:	cc 	int3
  422dec:	cc 	int3
  422ded:	cc 	int3
  422dee:	cc 	int3
  422def:	cc 	int3

runtime.gopark:
  422df0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  422df9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  422dfd:	0f 86 51 01 00 00 	jbe	337 <runtime.gopark+0x164>
  422e03:	48 83 ec 18 	subq	$24, %rsp
  422e07:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  422e0c:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  422e11:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  422e1a:	48 8b 51 30 	movq	48(%rcx), %rdx
  422e1e:	ff 82 00 01 00 00 	incl	256(%rdx)
  422e24:	48 8b 51 30 	movq	48(%rcx), %rdx
  422e28:	84 01 	testb	%al, (%rcx)
  422e2a:	48 8b 8a c0 00 00 00 	movq	192(%rdx), %rcx
  422e31:	8b 99 90 00 00 00 	movl	144(%rcx), %ebx
  422e37:	83 fb 02 	cmpl	$2, %ebx
  422e3a:	74 0c 	je	12 <runtime.gopark+0x58>
  422e3c:	81 fb 02 10 00 00 	cmpl	$4098, %ebx
  422e42:	0f 85 f1 00 00 00 	jne	241 <runtime.gopark+0x149>
  422e48:	8b 1d c2 0b 0a 00 	movl	658370(%rip), %ebx
  422e4e:	48 8d ba 10 03 00 00 	leaq	784(%rdx), %rdi
  422e55:	85 db 	testl	%ebx, %ebx
  422e57:	0f 85 cd 00 00 00 	jne	205 <runtime.gopark+0x13a>
  422e5d:	48 8b 5c 24 28 	movq	40(%rsp), %rbx
  422e62:	48 89 9a 10 03 00 00 	movq	%rbx, 784(%rdx)
  422e69:	8b 1d a1 0b 0a 00 	movl	658337(%rip), %ebx
  422e6f:	48 8d ba 08 03 00 00 	leaq	776(%rdx), %rdi
  422e76:	48 8b 44 24 20 	movq	32(%rsp), %rax
  422e7b:	85 db 	testl	%ebx, %ebx
  422e7d:	0f 85 9d 00 00 00 	jne	157 <runtime.gopark+0x130>
  422e83:	48 89 82 08 03 00 00 	movq	%rax, 776(%rdx)
  422e8a:	48 8b 5c 24 38 	movq	56(%rsp), %rbx
  422e8f:	48 89 99 b0 00 00 00 	movq	%rbx, 176(%rcx)
  422e96:	8b 1d 74 0b 0a 00 	movl	658292(%rip), %ebx
  422e9c:	48 8d b9 a8 00 00 00 	leaq	168(%rcx), %rdi
  422ea3:	85 db 	testl	%ebx, %ebx
  422ea5:	75 6d 	jne	109 <runtime.gopark+0x124>
  422ea7:	48 8b 44 24 30 	movq	48(%rsp), %rax
  422eac:	48 89 81 a8 00 00 00 	movq	%rax, 168(%rcx)
  422eb3:	0f b6 44 24 40 	movzbl	64(%rsp), %eax
  422eb8:	88 82 18 03 00 00 	movb	%al, 792(%rdx)
  422ebe:	48 8b 44 24 48 	movq	72(%rsp), %rax
  422ec3:	48 89 82 20 03 00 00 	movq	%rax, 800(%rdx)
  422eca:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  422ed3:	8b 8a 00 01 00 00 	movl	256(%rdx), %ecx
  422ed9:	8d 59 ff 	leal	-1(%rcx), %ebx
  422edc:	89 9a 00 01 00 00 	movl	%ebx, 256(%rdx)
  422ee2:	83 f9 01 	cmpl	$1, %ecx
  422ee5:	75 13 	jne	19 <runtime.gopark+0x10a>
  422ee7:	0f b6 88 c0 00 00 00 	movzbl	192(%rax), %ecx
  422eee:	84 c9 	testb	%cl, %cl
  422ef0:	74 08 	je	8 <runtime.gopark+0x10a>
  422ef2:	48 c7 40 10 de fa ff ff 	movq	$-1314, 16(%rax)
  422efa:	48 8d 05 97 b2 04 00 	leaq	307863(%rip), %rax
  422f01:	48 89 04 24 	movq	%rax, (%rsp)
  422f05:	e8 96 14 02 00 	callq	136342 <runtime.mcall>
  422f0a:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  422f0f:	48 83 c4 18 	addq	$24, %rsp
  422f13:	c3 	retq
  422f14:	48 8b 44 24 30 	movq	48(%rsp), %rax
  422f19:	e8 82 39 02 00 	callq	145794 <runtime.gcWriteBarrier>
  422f1e:	eb 93 	jmp	-109 <runtime.gopark+0xc3>
  422f20:	e8 7b 39 02 00 	callq	145787 <runtime.gcWriteBarrier>
  422f25:	e9 60 ff ff ff 	jmp	-160 <runtime.gopark+0x9a>
  422f2a:	48 8b 44 24 28 	movq	40(%rsp), %rax
  422f2f:	e8 6c 39 02 00 	callq	145772 <runtime.gcWriteBarrier>
  422f34:	e9 30 ff ff ff 	jmp	-208 <runtime.gopark+0x79>
  422f39:	48 8d 05 f1 81 04 00 	leaq	295409(%rip), %rax
  422f40:	48 89 04 24 	movq	%rax, (%rsp)
  422f44:	48 c7 44 24 08 14 00 00 00 	movq	$20, 8(%rsp)
  422f4d:	e8 7e e2 ff ff 	callq	-7554 <runtime.throw>
  422f52:	0f 0b 	ud2
  422f54:	e8 17 16 02 00 	callq	136727 <runtime.morestack_noctxt>
  422f59:	e9 92 fe ff ff 	jmp	-366 <runtime.gopark>
  422f5e:	cc 	int3
  422f5f:	cc 	int3

runtime.goparkunlock:
  422f60:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  422f69:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  422f6d:	76 59 	jbe	89 <runtime.goparkunlock+0x68>
  422f6f:	48 83 ec 38 	subq	$56, %rsp
  422f73:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  422f78:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  422f7d:	48 8d 05 1c b2 04 00 	leaq	307740(%rip), %rax
  422f84:	48 89 04 24 	movq	%rax, (%rsp)
  422f88:	48 8b 44 24 40 	movq	64(%rsp), %rax
  422f8d:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  422f92:	48 8b 44 24 48 	movq	72(%rsp), %rax
  422f97:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  422f9c:	48 8b 44 24 50 	movq	80(%rsp), %rax
  422fa1:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  422fa6:	0f b6 44 24 58 	movzbl	88(%rsp), %eax
  422fab:	88 44 24 20 	movb	%al, 32(%rsp)
  422faf:	48 8b 44 24 60 	movq	96(%rsp), %rax
  422fb4:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  422fb9:	e8 32 fe ff ff 	callq	-462 <runtime.gopark>
  422fbe:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  422fc3:	48 83 c4 38 	addq	$56, %rsp
  422fc7:	c3 	retq
  422fc8:	e8 a3 15 02 00 	callq	136611 <runtime.morestack_noctxt>
  422fcd:	eb 91 	jmp	-111 <runtime.goparkunlock>
  422fcf:	cc 	int3

runtime.goready:
  422fd0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  422fd9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  422fdd:	76 46 	jbe	70 <runtime.goready+0x55>
  422fdf:	48 83 ec 28 	subq	$40, %rsp
  422fe3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  422fe8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  422fed:	48 8d 05 ec 02 02 00 	leaq	131820(%rip), %rax
  422ff4:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  422ff9:	48 8b 44 24 30 	movq	48(%rsp), %rax
  422ffe:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  423003:	48 8b 44 24 38 	movq	56(%rsp), %rax
  423008:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  42300d:	48 8d 44 24 08 	leaq	8(%rsp), %rax
  423012:	48 89 04 24 	movq	%rax, (%rsp)
  423016:	e8 05 14 02 00 	callq	136197 <runtime.systemstack>
  42301b:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  423020:	48 83 c4 28 	addq	$40, %rsp
  423024:	c3 	retq
  423025:	e8 46 15 02 00 	callq	136518 <runtime.morestack_noctxt>
  42302a:	eb a4 	jmp	-92 <runtime.goready>
  42302c:	cc 	int3
  42302d:	cc 	int3
  42302e:	cc 	int3
  42302f:	cc 	int3

runtime.acquireSudog:
  423030:	48 83 ec 68 	subq	$104, %rsp
  423034:	48 89 6c 24 60 	movq	%rbp, 96(%rsp)
  423039:	48 8d 6c 24 60 	leaq	96(%rsp), %rbp
  42303e:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  423047:	48 8b 51 30 	movq	48(%rcx), %rdx
  42304b:	ff 82 00 01 00 00 	incl	256(%rdx)
  423051:	48 8b 51 30 	movq	48(%rcx), %rdx
  423055:	48 89 54 24 40 	movq	%rdx, 64(%rsp)
  42305a:	48 8b 9a d0 00 00 00 	movq	208(%rdx), %rbx
  423061:	84 01 	testb	%al, (%rcx)
  423063:	48 8b 8b 08 0e 00 00 	movq	3592(%rbx), %rcx
  42306a:	48 8d b3 00 0e 00 00 	leaq	3584(%rbx), %rsi
  423071:	48 85 c9 	testq	%rcx, %rcx
  423074:	0f 85 0f 03 00 00 	jne	783 <runtime.acquireSudog+0x359>
  42307a:	48 89 5c 24 58 	movq	%rbx, 88(%rsp)
  42307f:	48 89 74 24 50 	movq	%rsi, 80(%rsp)
  423084:	48 8d 05 25 49 08 00 	leaq	543013(%rip), %rax
  42308b:	48 89 04 24 	movq	%rax, (%rsp)
  42308f:	e8 8c 64 fe ff 	callq	-105332 <runtime.lock>
  423094:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  423099:	48 8b 91 08 0e 00 00 	movq	3592(%rcx), %rdx
  4230a0:	48 8b 99 10 0e 00 00 	movq	3600(%rcx), %rbx
  4230a7:	48 d1 eb 	shrq	%rbx
  4230aa:	48 39 da 	cmpq	%rbx, %rdx
  4230ad:	0f 8d 19 01 00 00 	jge	281 <runtime.acquireSudog+0x19c>
  4230b3:	48 8b 05 fe 48 08 00 	movq	542974(%rip), %rax
  4230ba:	48 85 c0 	testq	%rax, %rax
  4230bd:	0f 84 09 01 00 00 	je	265 <runtime.acquireSudog+0x19c>
  4230c3:	8b 15 47 09 0a 00 	movl	657735(%rip), %edx
  4230c9:	48 8b 58 10 	movq	16(%rax), %rbx
  4230cd:	48 8d 70 10 	leaq	16(%rax), %rsi
  4230d1:	85 d2 	testl	%edx, %edx
  4230d3:	0f 85 cf 00 00 00 	jne	207 <runtime.acquireSudog+0x178>
  4230d9:	48 89 1d d8 48 08 00 	movq	%rbx, 542936(%rip)
  4230e0:	48 c7 40 10 00 00 00 00 	movq	$0, 16(%rax)
  4230e8:	48 8b 91 00 0e 00 00 	movq	3584(%rcx), %rdx
  4230ef:	48 8b 99 08 0e 00 00 	movq	3592(%rcx), %rbx
  4230f6:	48 8b b1 10 0e 00 00 	movq	3600(%rcx), %rsi
  4230fd:	4c 8d 43 01 	leaq	1(%rbx), %r8
  423101:	49 39 f0 	cmpq	%rsi, %r8
  423104:	7f 2c 	jg	44 <runtime.acquireSudog+0x102>
  423106:	48 8d 73 01 	leaq	1(%rbx), %rsi
  42310a:	48 89 b1 08 0e 00 00 	movq	%rsi, 3592(%rcx)
  423111:	8b 35 f9 08 0a 00 	movl	657657(%rip), %esi
  423117:	48 8d 3c da 	leaq	(%rdx,%rbx,8), %rdi
  42311b:	85 f6 	testl	%esi, %esi
  42311d:	75 09 	jne	9 <runtime.acquireSudog+0xf8>
  42311f:	48 89 04 da 	movq	%rax, (%rdx,%rbx,8)
  423123:	e9 6c ff ff ff 	jmp	-148 <runtime.acquireSudog+0x64>
  423128:	e8 73 37 02 00 	callq	145267 <runtime.gcWriteBarrier>
  42312d:	e9 62 ff ff ff 	jmp	-158 <runtime.acquireSudog+0x64>
  423132:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  423137:	48 8d 05 42 1e 03 00 	leaq	204354(%rip), %rax
  42313e:	48 89 04 24 	movq	%rax, (%rsp)
  423142:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  423147:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  42314c:	48 89 74 24 18 	movq	%rsi, 24(%rsp)
  423151:	4c 89 44 24 20 	movq	%r8, 32(%rsp)
  423156:	e8 05 07 01 00 	callq	67333 <runtime.growslice>
  42315b:	48 8b 44 24 28 	movq	40(%rsp), %rax
  423160:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  423165:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  42316a:	48 8b 5c 24 58 	movq	88(%rsp), %rbx
  42316f:	48 89 93 10 0e 00 00 	movq	%rdx, 3600(%rbx)
  423176:	8b 15 94 08 0a 00 	movl	657556(%rip), %edx
  42317c:	85 d2 	testl	%edx, %edx
  42317e:	75 1c 	jne	28 <runtime.acquireSudog+0x16c>
  423180:	48 89 83 00 0e 00 00 	movq	%rax, 3584(%rbx)
  423187:	48 89 cb 	movq	%rcx, %rbx
  42318a:	48 89 c2 	movq	%rax, %rdx
  42318d:	48 8b 44 24 48 	movq	72(%rsp), %rax
  423192:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  423197:	e9 6a ff ff ff 	jmp	-150 <runtime.acquireSudog+0xd6>
  42319c:	48 8b 7c 24 50 	movq	80(%rsp), %rdi
  4231a1:	e8 fa 36 02 00 	callq	145146 <runtime.gcWriteBarrier>
  4231a6:	eb df 	jmp	-33 <runtime.acquireSudog+0x157>
  4231a8:	48 8d 3d 09 48 08 00 	leaq	542729(%rip), %rdi
  4231af:	48 89 c2 	movq	%rax, %rdx
  4231b2:	48 89 d8 	movq	%rbx, %rax
  4231b5:	e8 e6 36 02 00 	callq	145126 <runtime.gcWriteBarrier>
  4231ba:	48 89 f7 	movq	%rsi, %rdi
  4231bd:	31 c0 	xorl	%eax, %eax
  4231bf:	e8 dc 36 02 00 	callq	145116 <runtime.gcWriteBarrier>
  4231c4:	48 89 d0 	movq	%rdx, %rax
  4231c7:	e9 1c ff ff ff 	jmp	-228 <runtime.acquireSudog+0xb8>
  4231cc:	48 8d 05 dd 47 08 00 	leaq	542685(%rip), %rax
  4231d3:	48 89 04 24 	movq	%rax, (%rsp)
  4231d7:	e8 e4 64 fe ff 	callq	-105244 <runtime.unlock>
  4231dc:	48 8b 44 24 58 	movq	88(%rsp), %rax
  4231e1:	48 8b 88 08 0e 00 00 	movq	3592(%rax), %rcx
  4231e8:	48 85 c9 	testq	%rcx, %rcx
  4231eb:	0f 84 b1 00 00 00 	je	177 <runtime.acquireSudog+0x272>
  4231f1:	48 8b 88 08 0e 00 00 	movq	3592(%rax), %rcx
  4231f8:	48 8b 90 00 0e 00 00 	movq	3584(%rax), %rdx
  4231ff:	48 8d 59 ff 	leaq	-1(%rcx), %rbx
  423203:	48 39 cb 	cmpq	%rcx, %rbx
  423206:	0f 83 a7 01 00 00 	jae	423 <runtime.acquireSudog+0x383>
  42320c:	48 8b 74 ca f8 	movq	-8(%rdx,%rcx,8), %rsi
  423211:	48 8d 7c ca f8 	leaq	-8(%rdx,%rcx,8), %rdi
  423216:	44 8b 05 f3 07 0a 00 	movl	657395(%rip), %r8d
  42321d:	45 85 c0 	testl	%r8d, %r8d
  423220:	75 71 	jne	113 <runtime.acquireSudog+0x263>
  423222:	48 c7 44 ca f8 00 00 00 00 	movq	$0, -8(%rdx,%rcx,8)
  42322b:	48 8b 88 10 0e 00 00 	movq	3600(%rax), %rcx
  423232:	48 39 cb 	cmpq	%rcx, %rbx
  423235:	0f 87 71 01 00 00 	ja	369 <runtime.acquireSudog+0x37c>
  42323b:	48 89 98 08 0e 00 00 	movq	%rbx, 3592(%rax)
  423242:	48 8b 46 20 	movq	32(%rsi), %rax
  423246:	48 85 c0 	testq	%rax, %rax
  423249:	0f 85 42 01 00 00 	jne	322 <runtime.acquireSudog+0x361>
  42324f:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  423258:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  42325d:	8b 91 00 01 00 00 	movl	256(%rcx), %edx
  423263:	8d 5a ff 	leal	-1(%rdx), %ebx
  423266:	89 99 00 01 00 00 	movl	%ebx, 256(%rcx)
  42326c:	83 fa 01 	cmpl	$1, %edx
  42326f:	75 13 	jne	19 <runtime.acquireSudog+0x254>
  423271:	0f b6 88 c0 00 00 00 	movzbl	192(%rax), %ecx
  423278:	84 c9 	testb	%cl, %cl
  42327a:	74 08 	je	8 <runtime.acquireSudog+0x254>
  42327c:	48 c7 40 10 de fa ff ff 	movq	$-1314, 16(%rax)
  423284:	48 89 74 24 70 	movq	%rsi, 112(%rsp)
  423289:	48 8b 6c 24 60 	movq	96(%rsp), %rbp
  42328e:	48 83 c4 68 	addq	$104, %rsp
  423292:	c3 	retq
  423293:	48 89 c1 	movq	%rax, %rcx
  423296:	31 c0 	xorl	%eax, %eax
  423298:	e8 03 36 02 00 	callq	144899 <runtime.gcWriteBarrier>
  42329d:	48 89 c8 	movq	%rcx, %rax
  4232a0:	eb 89 	jmp	-119 <runtime.acquireSudog+0x1fb>
  4232a2:	48 8d 05 17 2f 04 00 	leaq	274199(%rip), %rax
  4232a9:	48 89 04 24 	movq	%rax, (%rsp)
  4232ad:	e8 6e 7e fe ff 	callq	-98706 <runtime.newobject>
  4232b2:	48 8b 44 24 58 	movq	88(%rsp), %rax
  4232b7:	48 8b 88 10 0e 00 00 	movq	3600(%rax), %rcx
  4232be:	48 8b 90 00 0e 00 00 	movq	3584(%rax), %rdx
  4232c5:	48 8b 98 08 0e 00 00 	movq	3592(%rax), %rbx
  4232cc:	48 8d 73 01 	leaq	1(%rbx), %rsi
  4232d0:	48 8b 7c 24 08 	movq	8(%rsp), %rdi
  4232d5:	48 39 ce 	cmpq	%rcx, %rsi
  4232d8:	7f 3b 	jg	59 <runtime.acquireSudog+0x2e5>
  4232da:	48 8d 4b 01 	leaq	1(%rbx), %rcx
  4232de:	48 89 88 08 0e 00 00 	movq	%rcx, 3592(%rax)
  4232e5:	48 8d 0c da 	leaq	(%rdx,%rbx,8), %rcx
  4232e9:	8b 35 21 07 0a 00 	movl	657185(%rip), %esi
  4232ef:	85 f6 	testl	%esi, %esi
  4232f1:	75 09 	jne	9 <runtime.acquireSudog+0x2cc>
  4232f3:	48 89 3c da 	movq	%rdi, (%rdx,%rbx,8)
  4232f7:	e9 f5 fe ff ff 	jmp	-267 <runtime.acquireSudog+0x1c1>
  4232fc:	48 89 fa 	movq	%rdi, %rdx
  4232ff:	48 89 cf 	movq	%rcx, %rdi
  423302:	48 89 c3 	movq	%rax, %rbx
  423305:	48 89 d0 	movq	%rdx, %rax
  423308:	e8 93 35 02 00 	callq	144787 <runtime.gcWriteBarrier>
  42330d:	48 89 d8 	movq	%rbx, %rax
  423310:	e9 dc fe ff ff 	jmp	-292 <runtime.acquireSudog+0x1c1>
  423315:	48 89 7c 24 48 	movq	%rdi, 72(%rsp)
  42331a:	48 8d 05 5f 1c 03 00 	leaq	203871(%rip), %rax
  423321:	48 89 04 24 	movq	%rax, (%rsp)
  423325:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  42332a:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  42332f:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  423334:	48 89 74 24 20 	movq	%rsi, 32(%rsp)
  423339:	e8 22 05 01 00 	callq	66850 <runtime.growslice>
  42333e:	48 8b 44 24 28 	movq	40(%rsp), %rax
  423343:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  423348:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  42334d:	48 8b 5c 24 58 	movq	88(%rsp), %rbx
  423352:	48 89 93 10 0e 00 00 	movq	%rdx, 3600(%rbx)
  423359:	8b 15 b1 06 0a 00 	movl	657073(%rip), %edx
  42335f:	85 d2 	testl	%edx, %edx
  423361:	75 1a 	jne	26 <runtime.acquireSudog+0x34d>
  423363:	48 89 83 00 0e 00 00 	movq	%rax, 3584(%rbx)
  42336a:	48 8b 7c 24 48 	movq	72(%rsp), %rdi
  42336f:	48 89 c2 	movq	%rax, %rdx
  423372:	48 89 d8 	movq	%rbx, %rax
  423375:	48 89 cb 	movq	%rcx, %rbx
  423378:	e9 5d ff ff ff 	jmp	-163 <runtime.acquireSudog+0x2aa>
  42337d:	48 8b 7c 24 50 	movq	80(%rsp), %rdi
  423382:	e8 19 35 02 00 	callq	144665 <runtime.gcWriteBarrier>
  423387:	eb e1 	jmp	-31 <runtime.acquireSudog+0x33a>
  423389:	48 89 d8 	movq	%rbx, %rax
  42338c:	e9 60 fe ff ff 	jmp	-416 <runtime.acquireSudog+0x1c1>
  423391:	48 8d 05 df a0 04 00 	leaq	303327(%rip), %rax
  423398:	48 89 04 24 	movq	%rax, (%rsp)
  42339c:	48 c7 44 24 08 2a 00 00 00 	movq	$42, 8(%rsp)
  4233a5:	e8 26 de ff ff 	callq	-8666 <runtime.throw>
  4233aa:	0f 0b 	ud2
  4233ac:	e8 ff c6 ff ff 	callq	-14593 <runtime.panicslice>
  4233b1:	0f 0b 	ud2
  4233b3:	e8 88 c6 ff ff 	callq	-14712 <runtime.panicindex>
  4233b8:	0f 0b 	ud2
  4233ba:	cc 	int3
  4233bb:	cc 	int3
  4233bc:	cc 	int3
  4233bd:	cc 	int3
  4233be:	cc 	int3
  4233bf:	cc 	int3

runtime.releaseSudog:
  4233c0:	48 83 ec 70 	subq	$112, %rsp
  4233c4:	48 89 6c 24 68 	movq	%rbp, 104(%rsp)
  4233c9:	48 8d 6c 24 68 	leaq	104(%rsp), %rbp
  4233ce:	48 8b 44 24 78 	movq	120(%rsp), %rax
  4233d3:	48 8b 48 20 	movq	32(%rax), %rcx
  4233d7:	48 85 c9 	testq	%rcx, %rcx
  4233da:	0f 85 7a 03 00 00 	jne	890 <runtime.releaseSudog+0x39a>
  4233e0:	0f b6 48 08 	movzbl	8(%rax), %ecx
  4233e4:	84 c9 	testb	%cl, %cl
  4233e6:	0f 85 53 03 00 00 	jne	851 <runtime.releaseSudog+0x37f>
  4233ec:	48 8b 48 10 	movq	16(%rax), %rcx
  4233f0:	48 85 c9 	testq	%rcx, %rcx
  4233f3:	0f 85 2b 03 00 00 	jne	811 <runtime.releaseSudog+0x364>
  4233f9:	48 8b 48 18 	movq	24(%rax), %rcx
  4233fd:	48 85 c9 	testq	%rcx, %rcx
  423400:	0f 85 03 03 00 00 	jne	771 <runtime.releaseSudog+0x349>
  423406:	48 8b 48 48 	movq	72(%rax), %rcx
  42340a:	48 85 c9 	testq	%rcx, %rcx
  42340d:	0f 85 db 02 00 00 	jne	731 <runtime.releaseSudog+0x32e>
  423413:	48 8b 48 58 	movq	88(%rax), %rcx
  423417:	48 85 c9 	testq	%rcx, %rcx
  42341a:	0f 85 b3 02 00 00 	jne	691 <runtime.releaseSudog+0x313>
  423420:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  423429:	48 8b 91 88 00 00 00 	movq	136(%rcx), %rdx
  423430:	48 85 d2 	testq	%rdx, %rdx
  423433:	0f 85 7f 02 00 00 	jne	639 <runtime.releaseSudog+0x2f8>
  423439:	48 8b 51 30 	movq	48(%rcx), %rdx
  42343d:	ff 82 00 01 00 00 	incl	256(%rdx)
  423443:	48 8b 51 30 	movq	48(%rcx), %rdx
  423447:	48 89 54 24 40 	movq	%rdx, 64(%rsp)
  42344c:	48 8b 9a d0 00 00 00 	movq	208(%rdx), %rbx
  423453:	48 89 5c 24 60 	movq	%rbx, 96(%rsp)
  423458:	84 01 	testb	%al, (%rcx)
  42345a:	48 8b 8b 10 0e 00 00 	movq	3600(%rbx), %rcx
  423461:	48 8b b3 08 0e 00 00 	movq	3592(%rbx), %rsi
  423468:	4c 8d 83 00 0e 00 00 	leaq	3584(%rbx), %r8
  42346f:	4c 89 44 24 58 	movq	%r8, 88(%rsp)
  423474:	48 39 ce 	cmpq	%rcx, %rsi
  423477:	0f 85 12 01 00 00 	jne	274 <runtime.releaseSudog+0x1cf>
  42347d:	31 c9 	xorl	%ecx, %ecx
  42347f:	48 89 ce 	movq	%rcx, %rsi
  423482:	eb 03 	jmp	3 <runtime.releaseSudog+0xc7>
  423484:	4c 89 e6 	movq	%r12, %rsi
  423487:	4c 8b 8b 00 0e 00 00 	movq	3584(%rbx), %r9
  42348e:	4c 8b 93 08 0e 00 00 	movq	3592(%rbx), %r10
  423495:	4c 8b 9b 10 0e 00 00 	movq	3600(%rbx), %r11
  42349c:	49 d1 eb 	shrq	%r11
  42349f:	4d 39 da 	cmpq	%r11, %r10
  4234a2:	0f 8e 8d 00 00 00 	jle	141 <runtime.releaseSudog+0x175>
  4234a8:	4d 8d 5a ff 	leaq	-1(%r10), %r11
  4234ac:	4d 39 d3 	cmpq	%r10, %r11
  4234af:	0f 83 fc 01 00 00 	jae	508 <runtime.releaseSudog+0x2f1>
  4234b5:	4f 8b 64 d1 f8 	movq	-8(%r9,%r10,8), %r12
  4234ba:	4b 8d 7c d1 f8 	leaq	-8(%r9,%r10,8), %rdi
  4234bf:	44 8b 2d 4a 05 0a 00 	movl	656714(%rip), %r13d
  4234c6:	45 85 ed 	testl	%r13d, %r13d
  4234c9:	75 5b 	jne	91 <runtime.releaseSudog+0x166>
  4234cb:	4b c7 44 d1 f8 00 00 00 00 	movq	$0, -8(%r9,%r10,8)
  4234d4:	4c 8b 8b 10 0e 00 00 	movq	3600(%rbx), %r9
  4234db:	4d 39 cb 	cmpq	%r9, %r11
  4234de:	0f 87 c6 01 00 00 	ja	454 <runtime.releaseSudog+0x2ea>
  4234e4:	4c 89 9b 08 0e 00 00 	movq	%r11, 3592(%rbx)
  4234eb:	48 85 c9 	testq	%rcx, %rcx
  4234ee:	74 2e 	je	46 <runtime.releaseSudog+0x15e>
  4234f0:	84 06 	testb	%al, (%rsi)
  4234f2:	44 8b 0d 17 05 0a 00 	movl	656663(%rip), %r9d
  4234f9:	48 8d 7e 10 	leaq	16(%rsi), %rdi
  4234fd:	45 85 c9 	testl	%r9d, %r9d
  423500:	75 09 	jne	9 <runtime.releaseSudog+0x14b>
  423502:	4c 89 66 10 	movq	%r12, 16(%rsi)
  423506:	e9 79 ff ff ff 	jmp	-135 <runtime.releaseSudog+0xc4>
  42350b:	48 89 c6 	movq	%rax, %rsi
  42350e:	4c 89 e0 	movq	%r12, %rax
  423511:	e8 8a 33 02 00 	callq	144266 <runtime.gcWriteBarrier>
  423516:	48 89 f0 	movq	%rsi, %rax
  423519:	e9 66 ff ff ff 	jmp	-154 <runtime.releaseSudog+0xc4>
  42351e:	4c 89 e1 	movq	%r12, %rcx
  423521:	e9 5e ff ff ff 	jmp	-162 <runtime.releaseSudog+0xc4>
  423526:	49 89 c1 	movq	%rax, %r9
  423529:	31 c0 	xorl	%eax, %eax
  42352b:	e8 70 33 02 00 	callq	144240 <runtime.gcWriteBarrier>
  423530:	4c 89 c8 	movq	%r9, %rax
  423533:	eb 9f 	jmp	-97 <runtime.releaseSudog+0x114>
  423535:	48 89 74 24 48 	movq	%rsi, 72(%rsp)
  42353a:	48 89 4c 24 50 	movq	%rcx, 80(%rsp)
  42353f:	48 8d 05 6a 44 08 00 	leaq	541802(%rip), %rax
  423546:	48 89 04 24 	movq	%rax, (%rsp)
  42354a:	e8 d1 5f fe ff 	callq	-106543 <runtime.lock>
  42354f:	48 8b 44 24 48 	movq	72(%rsp), %rax
  423554:	84 00 	testb	%al, (%rax)
  423556:	8b 0d b4 04 0a 00 	movl	656564(%rip), %ecx
  42355c:	48 8d 78 10 	leaq	16(%rax), %rdi
  423560:	48 8b 15 51 44 08 00 	movq	541777(%rip), %rdx
  423567:	85 c9 	testl	%ecx, %ecx
  423569:	0f 85 1d 01 00 00 	jne	285 <runtime.releaseSudog+0x2cc>
  42356f:	48 89 50 10 	movq	%rdx, 16(%rax)
  423573:	48 8b 44 24 50 	movq	80(%rsp), %rax
  423578:	48 89 05 39 44 08 00 	movq	%rax, 541753(%rip)
  42357f:	48 8d 05 2a 44 08 00 	leaq	541738(%rip), %rax
  423586:	48 89 04 24 	movq	%rax, (%rsp)
  42358a:	e8 31 61 fe ff 	callq	-106191 <runtime.unlock>
  42358f:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  423594:	48 8b 91 10 0e 00 00 	movq	3600(%rcx), %rdx
  42359b:	48 8b 99 08 0e 00 00 	movq	3592(%rcx), %rbx
  4235a2:	48 8b b1 00 0e 00 00 	movq	3584(%rcx), %rsi
  4235a9:	4c 8d 43 01 	leaq	1(%rbx), %r8
  4235ad:	49 39 d0 	cmpq	%rdx, %r8
  4235b0:	7f 6d 	jg	109 <runtime.releaseSudog+0x25f>
  4235b2:	48 8d 53 01 	leaq	1(%rbx), %rdx
  4235b6:	48 89 91 08 0e 00 00 	movq	%rdx, 3592(%rcx)
  4235bd:	8b 0d 4d 04 0a 00 	movl	656461(%rip), %ecx
  4235c3:	48 8d 3c de 	leaq	(%rsi,%rbx,8), %rdi
  4235c7:	85 c9 	testl	%ecx, %ecx
  4235c9:	75 48 	jne	72 <runtime.releaseSudog+0x253>
  4235cb:	48 8b 44 24 78 	movq	120(%rsp), %rax
  4235d0:	48 89 04 de 	movq	%rax, (%rsi,%rbx,8)
  4235d4:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4235dd:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  4235e2:	8b 91 00 01 00 00 	movl	256(%rcx), %edx
  4235e8:	8d 5a ff 	leal	-1(%rdx), %ebx
  4235eb:	89 99 00 01 00 00 	movl	%ebx, 256(%rcx)
  4235f1:	83 fa 01 	cmpl	$1, %edx
  4235f4:	75 13 	jne	19 <runtime.releaseSudog+0x249>
  4235f6:	0f b6 88 c0 00 00 00 	movzbl	192(%rax), %ecx
  4235fd:	84 c9 	testb	%cl, %cl
  4235ff:	74 08 	je	8 <runtime.releaseSudog+0x249>
  423601:	48 c7 40 10 de fa ff ff 	movq	$-1314, 16(%rax)
  423609:	48 8b 6c 24 68 	movq	104(%rsp), %rbp
  42360e:	48 83 c4 70 	addq	$112, %rsp
  423612:	c3 	retq
  423613:	48 8b 44 24 78 	movq	120(%rsp), %rax
  423618:	e8 83 32 02 00 	callq	144003 <runtime.gcWriteBarrier>
  42361d:	eb b5 	jmp	-75 <runtime.releaseSudog+0x214>
  42361f:	48 8d 05 5a 19 03 00 	leaq	203098(%rip), %rax
  423626:	48 89 04 24 	movq	%rax, (%rsp)
  42362a:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  42362f:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  423634:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  423639:	4c 89 44 24 20 	movq	%r8, 32(%rsp)
  42363e:	e8 1d 02 01 00 	callq	66077 <runtime.growslice>
  423643:	48 8b 44 24 28 	movq	40(%rsp), %rax
  423648:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  42364d:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  423652:	48 8b 5c 24 60 	movq	96(%rsp), %rbx
  423657:	48 89 93 10 0e 00 00 	movq	%rdx, 3600(%rbx)
  42365e:	8b 15 ac 03 0a 00 	movl	656300(%rip), %edx
  423664:	85 d2 	testl	%edx, %edx
  423666:	75 18 	jne	24 <runtime.releaseSudog+0x2c0>
  423668:	48 89 83 00 0e 00 00 	movq	%rax, 3584(%rbx)
  42366f:	48 89 c6 	movq	%rax, %rsi
  423672:	48 89 ca 	movq	%rcx, %rdx
  423675:	48 89 d9 	movq	%rbx, %rcx
  423678:	48 89 d3 	movq	%rdx, %rbx
  42367b:	e9 32 ff ff ff 	jmp	-206 <runtime.releaseSudog+0x1f2>
  423680:	48 8b 7c 24 58 	movq	88(%rsp), %rdi
  423685:	e8 16 32 02 00 	callq	143894 <runtime.gcWriteBarrier>
  42368a:	eb e3 	jmp	-29 <runtime.releaseSudog+0x2af>
  42368c:	48 89 d0 	movq	%rdx, %rax
  42368f:	e8 0c 32 02 00 	callq	143884 <runtime.gcWriteBarrier>
  423694:	48 8d 3d 1d 43 08 00 	leaq	541469(%rip), %rdi
  42369b:	48 8b 44 24 50 	movq	80(%rsp), %rax
  4236a0:	e8 fb 31 02 00 	callq	143867 <runtime.gcWriteBarrier>
  4236a5:	e9 d5 fe ff ff 	jmp	-299 <runtime.releaseSudog+0x1bf>
  4236aa:	e8 01 c4 ff ff 	callq	-15359 <runtime.panicslice>
  4236af:	0f 0b 	ud2
  4236b1:	e8 8a c3 ff ff 	callq	-15478 <runtime.panicindex>
  4236b6:	0f 0b 	ud2
  4236b8:	48 8d 05 0c 9f 04 00 	leaq	302860(%rip), %rax
  4236bf:	48 89 04 24 	movq	%rax, (%rsp)
  4236c3:	48 c7 44 24 08 2b 00 00 00 	movq	$43, 8(%rsp)
  4236cc:	e8 ff da ff ff 	callq	-9473 <runtime.throw>
  4236d1:	0f 0b 	ud2
  4236d3:	48 8d 05 88 8c 04 00 	leaq	298120(%rip), %rax
  4236da:	48 89 04 24 	movq	%rax, (%rsp)
  4236de:	48 c7 44 24 08 1d 00 00 00 	movq	$29, 8(%rsp)
  4236e7:	e8 e4 da ff ff 	callq	-9500 <runtime.throw>
  4236ec:	0f 0b 	ud2
  4236ee:	48 8d 05 c1 97 04 00 	leaq	300993(%rip), %rax
  4236f5:	48 89 04 24 	movq	%rax, (%rsp)
  4236f9:	48 c7 44 24 08 24 00 00 00 	movq	$36, 8(%rsp)
  423702:	e8 c9 da ff ff 	callq	-9527 <runtime.throw>
  423707:	0f 0b 	ud2
  423709:	48 8d 05 d3 91 04 00 	leaq	299475(%rip), %rax
  423710:	48 89 04 24 	movq	%rax, (%rsp)
  423714:	48 c7 44 24 08 20 00 00 00 	movq	$32, 8(%rsp)
  42371d:	e8 ae da ff ff 	callq	-9554 <runtime.throw>
  423722:	0f 0b 	ud2
  423724:	48 8d 05 98 91 04 00 	leaq	299416(%rip), %rax
  42372b:	48 89 04 24 	movq	%rax, (%rsp)
  42372f:	48 c7 44 24 08 20 00 00 00 	movq	$32, 8(%rsp)
  423738:	e8 93 da ff ff 	callq	-9581 <runtime.throw>
  42373d:	0f 0b 	ud2
  42373f:	48 8d 05 9a 99 04 00 	leaq	301466(%rip), %rax
  423746:	48 89 04 24 	movq	%rax, (%rsp)
  42374a:	48 c7 44 24 08 26 00 00 00 	movq	$38, 8(%rsp)
  423753:	e8 78 da ff ff 	callq	-9608 <runtime.throw>
  423758:	0f 0b 	ud2
  42375a:	48 8d 05 42 91 04 00 	leaq	299330(%rip), %rax
  423761:	48 89 04 24 	movq	%rax, (%rsp)
  423765:	48 c7 44 24 08 20 00 00 00 	movq	$32, 8(%rsp)
  42376e:	e8 5d da ff ff 	callq	-9635 <runtime.throw>
  423773:	0f 0b 	ud2
  423775:	cc 	int3
  423776:	cc 	int3
  423777:	cc 	int3
  423778:	cc 	int3
  423779:	cc 	int3
  42377a:	cc 	int3
  42377b:	cc 	int3
  42377c:	cc 	int3
  42377d:	cc 	int3
  42377e:	cc 	int3
  42377f:	cc 	int3

runtime.funcPC:
  423780:	b8 08 00 00 00 	movl	$8, %eax
  423785:	48 8d 4c 24 08 	leaq	8(%rsp), %rcx
  42378a:	48 8b 04 01 	movq	(%rcx,%rax), %rax
  42378e:	48 8d 4c 24 10 	leaq	16(%rsp), %rcx
  423793:	84 01 	testb	%al, (%rcx)
  423795:	48 8b 00 	movq	(%rax), %rax
  423798:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  42379d:	c3 	retq
  42379e:	cc 	int3
  42379f:	cc 	int3

runtime.badmcall:
  4237a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4237a9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4237ad:	76 29 	jbe	41 <runtime.badmcall+0x38>
  4237af:	48 83 ec 18 	subq	$24, %rsp
  4237b3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  4237b8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  4237bd:	48 8d 05 ce 96 04 00 	leaq	300750(%rip), %rax
  4237c4:	48 89 04 24 	movq	%rax, (%rsp)
  4237c8:	48 c7 44 24 08 24 00 00 00 	movq	$36, 8(%rsp)
  4237d1:	e8 fa d9 ff ff 	callq	-9734 <runtime.throw>
  4237d6:	0f 0b 	ud2
  4237d8:	e8 93 0d 02 00 	callq	134547 <runtime.morestack_noctxt>
  4237dd:	eb c1 	jmp	-63 <runtime.badmcall>
  4237df:	cc 	int3

runtime.badmcall2:
  4237e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4237e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4237ed:	76 29 	jbe	41 <runtime.badmcall2+0x38>
  4237ef:	48 83 ec 18 	subq	$24, %rsp
  4237f3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  4237f8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  4237fd:	48 8d 05 3f 90 04 00 	leaq	299071(%rip), %rax
  423804:	48 89 04 24 	movq	%rax, (%rsp)
  423808:	48 c7 44 24 08 20 00 00 00 	movq	$32, 8(%rsp)
  423811:	e8 ba d9 ff ff 	callq	-9798 <runtime.throw>
  423816:	0f 0b 	ud2
  423818:	e8 53 0d 02 00 	callq	134483 <runtime.morestack_noctxt>
  42381d:	eb c1 	jmp	-63 <runtime.badmcall2>
  42381f:	cc 	int3

runtime.badreflectcall:
  423820:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  423829:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42382d:	76 2c 	jbe	44 <runtime.badreflectcall+0x3b>
  42382f:	48 83 ec 18 	subq	$24, %rsp
  423833:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  423838:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  42383d:	48 8d 05 fc 77 03 00 	leaq	227324(%rip), %rax
  423844:	48 89 04 24 	movq	%rax, (%rsp)
  423848:	48 8d 05 41 15 05 00 	leaq	333121(%rip), %rax
  42384f:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  423854:	e8 d7 d1 ff ff 	callq	-11817 <runtime.gopanic>
  423859:	0f 0b 	ud2
  42385b:	e8 10 0d 02 00 	callq	134416 <runtime.morestack_noctxt>
  423860:	eb be 	jmp	-66 <runtime.badreflectcall>
  423862:	cc 	int3
  423863:	cc 	int3
  423864:	cc 	int3
  423865:	cc 	int3
  423866:	cc 	int3
  423867:	cc 	int3
  423868:	cc 	int3
  423869:	cc 	int3
  42386a:	cc 	int3
  42386b:	cc 	int3
  42386c:	cc 	int3
  42386d:	cc 	int3
  42386e:	cc 	int3
  42386f:	cc 	int3

runtime.badmorestackg0:
  423870:	48 83 ec 28 	subq	$40, %rsp
  423874:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  423879:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  42387e:	48 8b 05 ab 21 08 00 	movq	532907(%rip), %rax
  423885:	48 8b 0d ac 21 08 00 	movq	532908(%rip), %rcx
  42388c:	89 4c 24 10 	movl	%ecx, 16(%rsp)
  423890:	48 c7 04 24 02 00 00 00 	movq	$2, (%rsp)
  423898:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  42389d:	e8 ae 3f 02 00 	callq	147374 <runtime.write>
  4238a2:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4238a7:	48 83 c4 28 	addq	$40, %rsp
  4238ab:	c3 	retq
  4238ac:	cc 	int3
  4238ad:	cc 	int3
  4238ae:	cc 	int3
  4238af:	cc 	int3

runtime.badmorestackgsignal:
  4238b0:	48 83 ec 28 	subq	$40, %rsp
  4238b4:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  4238b9:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  4238be:	48 8b 05 7b 21 08 00 	movq	532859(%rip), %rax
  4238c5:	48 8b 0d 7c 21 08 00 	movq	532860(%rip), %rcx
  4238cc:	89 4c 24 10 	movl	%ecx, 16(%rsp)
  4238d0:	48 c7 04 24 02 00 00 00 	movq	$2, (%rsp)
  4238d8:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4238dd:	e8 6e 3f 02 00 	callq	147310 <runtime.write>
  4238e2:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4238e7:	48 83 c4 28 	addq	$40, %rsp
  4238eb:	c3 	retq
  4238ec:	cc 	int3
  4238ed:	cc 	int3
  4238ee:	cc 	int3
  4238ef:	cc 	int3

runtime.badctxt:
  4238f0:	48 83 ec 18 	subq	$24, %rsp
  4238f4:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  4238f9:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  4238fe:	48 8d 05 12 68 04 00 	leaq	288786(%rip), %rax
  423905:	48 89 04 24 	movq	%rax, (%rsp)
  423909:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  423912:	e8 b9 d8 ff ff 	callq	-10055 <runtime.throw>
  423917:	0f 0b 	ud2
  423919:	cc 	int3
  42391a:	cc 	int3
  42391b:	cc 	int3
  42391c:	cc 	int3
  42391d:	cc 	int3
  42391e:	cc 	int3
  42391f:	cc 	int3

runtime.allgadd:
  423920:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  423929:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42392d:	0f 86 21 01 00 00 	jbe	289 <runtime.allgadd+0x134>
  423933:	48 83 ec 48 	subq	$72, %rsp
  423937:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  42393c:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  423941:	48 8b 44 24 50 	movq	80(%rsp), %rax
  423946:	8b 88 90 00 00 00 	movl	144(%rax), %ecx
  42394c:	85 c9 	testl	%ecx, %ecx
  42394e:	0f 84 e5 00 00 00 	je	229 <runtime.allgadd+0x119>
  423954:	48 8d 05 bd ff 09 00 	leaq	655293(%rip), %rax
  42395b:	48 89 04 24 	movq	%rax, (%rsp)
  42395f:	e8 bc 5b fe ff 	callq	-107588 <runtime.lock>
  423964:	48 8b 05 25 3d 08 00 	movq	539941(%rip), %rax
  42396b:	48 8b 0d 26 3d 08 00 	movq	539942(%rip), %rcx
  423972:	48 8b 15 27 3d 08 00 	movq	539943(%rip), %rdx
  423979:	48 8d 59 01 	leaq	1(%rcx), %rbx
  42397d:	48 39 d3 	cmpq	%rdx, %rbx
  423980:	7f 56 	jg	86 <runtime.allgadd+0xb8>
  423982:	48 8d 51 01 	leaq	1(%rcx), %rdx
  423986:	48 89 15 0b 3d 08 00 	movq	%rdx, 539915(%rip)
  42398d:	48 8d 3c c8 	leaq	(%rax,%rcx,8), %rdi
  423991:	8b 15 79 00 0a 00 	movl	655481(%rip), %edx
  423997:	85 d2 	testl	%edx, %edx
  423999:	75 31 	jne	49 <runtime.allgadd+0xac>
  42399b:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  4239a0:	48 89 14 c8 	movq	%rdx, (%rax,%rcx,8)
  4239a4:	48 8b 05 ed 3c 08 00 	movq	539885(%rip), %rax
  4239ab:	48 89 05 5e ff 09 00 	movq	%rax, 655198(%rip)
  4239b2:	48 8d 05 5f ff 09 00 	leaq	655199(%rip), %rax
  4239b9:	48 89 04 24 	movq	%rax, (%rsp)
  4239bd:	e8 fe 5c fe ff 	callq	-107266 <runtime.unlock>
  4239c2:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  4239c7:	48 83 c4 48 	addq	$72, %rsp
  4239cb:	c3 	retq
  4239cc:	48 8b 44 24 50 	movq	80(%rsp), %rax
  4239d1:	e8 ca 2e 02 00 	callq	143050 <runtime.gcWriteBarrier>
  4239d6:	eb cc 	jmp	-52 <runtime.allgadd+0x84>
  4239d8:	48 8d 35 61 08 03 00 	leaq	198753(%rip), %rsi
  4239df:	48 89 34 24 	movq	%rsi, (%rsp)
  4239e3:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4239e8:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  4239ed:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  4239f2:	48 89 5c 24 20 	movq	%rbx, 32(%rsp)
  4239f7:	e8 64 fe 00 00 	callq	65124 <runtime.growslice>
  4239fc:	48 8b 44 24 28 	movq	40(%rsp), %rax
  423a01:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  423a06:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  423a0b:	48 89 15 8e 3c 08 00 	movq	%rdx, 539790(%rip)
  423a12:	8b 15 f8 ff 09 00 	movl	655352(%rip), %edx
  423a18:	85 d2 	testl	%edx, %edx
  423a1a:	75 0c 	jne	12 <runtime.allgadd+0x108>
  423a1c:	48 89 05 6d 3c 08 00 	movq	%rax, 539757(%rip)
  423a23:	e9 5a ff ff ff 	jmp	-166 <runtime.allgadd+0x62>
  423a28:	48 8d 3d 61 3c 08 00 	leaq	539745(%rip), %rdi
  423a2f:	e8 6c 2e 02 00 	callq	142956 <runtime.gcWriteBarrier>
  423a34:	e9 49 ff ff ff 	jmp	-183 <runtime.allgadd+0x62>
  423a39:	48 8d 05 71 7f 04 00 	leaq	294769(%rip), %rax
  423a40:	48 89 04 24 	movq	%rax, (%rsp)
  423a44:	48 c7 44 24 08 19 00 00 00 	movq	$25, 8(%rsp)
  423a4d:	e8 7e d7 ff ff 	callq	-10370 <runtime.throw>
  423a52:	0f 0b 	ud2
  423a54:	e8 17 0b 02 00 	callq	133911 <runtime.morestack_noctxt>
  423a59:	e9 c2 fe ff ff 	jmp	-318 <runtime.allgadd>
  423a5e:	cc 	int3
  423a5f:	cc 	int3

runtime.schedinit:
  423a60:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  423a69:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  423a6d:	0f 86 22 02 00 00 	jbe	546 <runtime.schedinit+0x235>
  423a73:	48 83 ec 60 	subq	$96, %rsp
  423a77:	48 89 6c 24 58 	movq	%rbp, 88(%rsp)
  423a7c:	48 8d 6c 24 58 	leaq	88(%rsp), %rbp
  423a81:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  423a8a:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  423a8f:	c7 05 b7 3e 08 00 10 27 00 00 	movl	$10000, 540343(%rip)
  423a99:	48 8d 0d 40 2c 03 00 	leaq	207936(%rip), %rcx
  423aa0:	48 89 4c 24 48 	movq	%rcx, 72(%rsp)
  423aa5:	48 8d 0d 4c a7 04 00 	leaq	304972(%rip), %rcx
  423aac:	48 89 4c 24 50 	movq	%rcx, 80(%rsp)
  423ab1:	b9 08 00 00 00 	movl	$8, %ecx
  423ab6:	48 8d 54 24 48 	leaq	72(%rsp), %rdx
  423abb:	48 8b 0c 0a 	movq	(%rdx,%rcx), %rcx
  423abf:	48 8d 54 24 50 	leaq	80(%rsp), %rdx
  423ac4:	84 02 	testb	%al, (%rdx)
  423ac6:	48 8b 09 	movq	(%rcx), %rcx
  423ac9:	48 89 0d f8 fe 09 00 	movq	%rcx, 655096(%rip)
  423ad0:	e8 ab 3f 01 00 	callq	81835 <runtime.moduledataverify>
  423ad5:	e8 66 03 01 00 	callq	66406 <runtime.stackinit>
  423ada:	e8 61 61 fe ff 	callq	-106143 <runtime.mallocinit>
  423adf:	48 8b 44 24 38 	movq	56(%rsp), %rax
  423ae4:	48 8b 48 30 	movq	48(%rax), %rcx
  423ae8:	48 89 0c 24 	movq	%rcx, (%rsp)
  423aec:	e8 6f 02 00 00 	callq	623 <runtime.mcommoninit>
  423af1:	e8 7a e2 fd ff 	callq	-138630 <runtime.alginit>
  423af6:	e8 d5 3c 01 00 	callq	81109 <runtime.modulesinit>
  423afb:	e8 b0 bc 01 00 	callq	113840 <runtime.typelinksinit>
  423b00:	e8 9b 53 fe ff 	callq	-109669 <runtime.itabsinit>
  423b05:	48 8b 44 24 38 	movq	56(%rsp), %rax
  423b0a:	48 8b 48 30 	movq	48(%rax), %rcx
  423b0e:	48 89 0c 24 	movq	%rcx, (%rsp)
  423b12:	e8 a9 f5 00 00 	callq	62889 <runtime.msigsave>
  423b17:	48 8b 44 24 38 	movq	56(%rsp), %rax
  423b1c:	48 8b 40 30 	movq	48(%rax), %rax
  423b20:	48 8b 80 80 00 00 00 	movq	128(%rax), %rax
  423b27:	48 89 05 4a fe 09 00 	movq	%rax, 654922(%rip)
  423b2e:	e8 0d b2 00 00 	callq	45581 <runtime.goargs>
  423b33:	e8 68 ba ff ff 	callq	-17816 <runtime.goenvs>
  423b38:	e8 93 bb 00 00 	callq	48019 <runtime.parsedebugvars>
  423b3d:	e8 6e c0 fe ff 	callq	-81810 <runtime.gcinit>
  423b42:	e8 e9 3e 02 00 	callq	147177 <runtime.nanotime>
  423b47:	48 8b 04 24 	movq	(%rsp), %rax
  423b4b:	48 89 05 d6 3d 08 00 	movq	%rax, 540118(%rip)
  423b52:	8b 05 8c fd 09 00 	movl	654732(%rip), %eax
  423b58:	89 44 24 24 	movl	%eax, 36(%rsp)
  423b5c:	48 8d 0d b3 67 04 00 	leaq	288691(%rip), %rcx
  423b63:	48 89 0c 24 	movq	%rcx, (%rsp)
  423b67:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  423b70:	e8 fb 0e fe ff 	callq	-127237 <runtime.gogetenv>
  423b75:	48 8b 44 24 10 	movq	16(%rsp), %rax
  423b7a:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  423b7f:	48 89 04 24 	movq	%rax, (%rsp)
  423b83:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  423b88:	e8 a3 3a 01 00 	callq	80547 <runtime.atoi32>
  423b8d:	8b 44 24 10 	movl	16(%rsp), %eax
  423b91:	0f b6 4c 24 14 	movzbl	20(%rsp), %ecx
  423b96:	84 c9 	testb	%cl, %cl
  423b98:	0f 84 d3 00 00 00 	je	211 <runtime.schedinit+0x211>
  423b9e:	85 c0 	testl	%eax, %eax
  423ba0:	0f 8e cb 00 00 00 	jle	203 <runtime.schedinit+0x211>
  423ba6:	89 04 24 	movl	%eax, (%rsp)
  423ba9:	e8 d2 79 00 00 	callq	31186 <runtime.procresize>
  423bae:	48 8b 44 24 08 	movq	8(%rsp), %rax
  423bb3:	48 85 c0 	testq	%rax, %rax
  423bb6:	0f 85 be 00 00 00 	jne	190 <runtime.schedinit+0x21a>
  423bbc:	8b 0d 02 ff 09 00 	movl	655106(%rip), %ecx
  423bc2:	83 f9 01 	cmpl	$1, %ecx
  423bc5:	7e 5c 	jle	92 <runtime.schedinit+0x1c3>
  423bc7:	c6 05 47 fe 09 00 01 	movb	$1, 654919(%rip)
  423bce:	c6 05 3b fe 09 00 01 	movb	$1, 654907(%rip)
  423bd5:	48 8b 0d dc 3a 08 00 	movq	539356(%rip), %rcx
  423bdc:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  423be1:	48 8b 15 c8 3a 08 00 	movq	539336(%rip), %rdx
  423be8:	48 89 54 24 40 	movq	%rdx, 64(%rsp)
  423bed:	31 c0 	xorl	%eax, %eax
  423bef:	eb 2d 	jmp	45 <runtime.schedinit+0x1be>
  423bf1:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  423bf6:	48 8b 0c c2 	movq	(%rdx,%rax,8), %rcx
  423bfa:	84 01 	testb	%al, (%rcx)
  423bfc:	48 81 c1 90 12 00 00 	addq	$4752, %rcx
  423c03:	48 89 0c 24 	movq	%rcx, (%rsp)
  423c07:	e8 44 a8 ff ff 	callq	-22460 <runtime.(*wbBuf).reset>
  423c0c:	48 8b 44 24 28 	movq	40(%rsp), %rax
  423c11:	48 ff c0 	incq	%rax
  423c14:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  423c19:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  423c1e:	48 39 c8 	cmpq	%rcx, %rax
  423c21:	7c ce 	jl	-50 <runtime.schedinit+0x191>
  423c23:	48 8b 0d 2e 1e 08 00 	movq	532014(%rip), %rcx
  423c2a:	48 85 c9 	testq	%rcx, %rcx
  423c2d:	75 23 	jne	35 <runtime.schedinit+0x1f2>
  423c2f:	48 c7 05 1e 1e 08 00 07 00 00 00 	movq	$7, 531998(%rip)
  423c3a:	8b 0d d0 fd 09 00 	movl	654800(%rip), %ecx
  423c40:	85 c9 	testl	%ecx, %ecx
  423c42:	75 18 	jne	24 <runtime.schedinit+0x1fc>
  423c44:	48 8d 05 2e 63 04 00 	leaq	287534(%rip), %rax
  423c4b:	48 89 05 fe 1d 08 00 	movq	%rax, 531966(%rip)
  423c52:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  423c57:	48 83 c4 60 	addq	$96, %rsp
  423c5b:	c3 	retq
  423c5c:	48 8d 3d ed 1d 08 00 	leaq	531949(%rip), %rdi
  423c63:	48 8d 05 0f 63 04 00 	leaq	287503(%rip), %rax
  423c6a:	e8 31 2c 02 00 	callq	142385 <runtime.gcWriteBarrier>
  423c6f:	eb e1 	jmp	-31 <runtime.schedinit+0x1f2>
  423c71:	8b 44 24 24 	movl	36(%rsp), %eax
  423c75:	e9 2c ff ff ff 	jmp	-212 <runtime.schedinit+0x146>
  423c7a:	48 8d 05 75 99 04 00 	leaq	301429(%rip), %rax
  423c81:	48 89 04 24 	movq	%rax, (%rsp)
  423c85:	48 c7 44 24 08 2b 00 00 00 	movq	$43, 8(%rsp)
  423c8e:	e8 3d d5 ff ff 	callq	-10947 <runtime.throw>
  423c93:	0f 0b 	ud2
  423c95:	e8 d6 08 02 00 	callq	133334 <runtime.morestack_noctxt>
  423c9a:	e9 c1 fd ff ff 	jmp	-575 <runtime.schedinit>
  423c9f:	cc 	int3

runtime.checkmcount:
  423ca0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  423ca9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  423cad:	0f 86 9b 00 00 00 	jbe	155 <runtime.checkmcount+0xae>
  423cb3:	48 83 ec 20 	subq	$32, %rsp
  423cb7:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  423cbc:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  423cc1:	8b 05 89 3c 08 00 	movl	539785(%rip), %eax
  423cc7:	48 8b 0d 7a 3c 08 00 	movq	539770(%rip), %rcx
  423cce:	48 2b 0d 83 3c 08 00 	subq	539779(%rip), %rcx
  423cd5:	39 c1 	cmpl	%eax, %ecx
  423cd7:	7f 0a 	jg	10 <runtime.checkmcount+0x43>
  423cd9:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  423cde:	48 83 c4 20 	addq	$32, %rsp
  423ce2:	c3 	retq
  423ce3:	89 44 24 14 	movl	%eax, 20(%rsp)
  423ce7:	e8 14 de ff ff 	callq	-8684 <runtime.printlock>
  423cec:	48 8d 05 03 7e 04 00 	leaq	294403(%rip), %rax
  423cf3:	48 89 04 24 	movq	%rax, (%rsp)
  423cf7:	48 c7 44 24 08 19 00 00 00 	movq	$25, 8(%rsp)
  423d00:	e8 3b e7 ff ff 	callq	-6341 <runtime.printstring>
  423d05:	8b 44 24 14 	movl	20(%rsp), %eax
  423d09:	48 63 c0 	movslq	%eax, %rax
  423d0c:	48 89 04 24 	movq	%rax, (%rsp)
  423d10:	e8 6b e5 ff ff 	callq	-6805 <runtime.printint>
  423d15:	48 8d 05 fa 6a 04 00 	leaq	289530(%rip), %rax
  423d1c:	48 89 04 24 	movq	%rax, (%rsp)
  423d20:	48 c7 44 24 08 0e 00 00 00 	movq	$14, 8(%rsp)
  423d29:	e8 12 e7 ff ff 	callq	-6382 <runtime.printstring>
  423d2e:	e8 4d de ff ff 	callq	-8627 <runtime.printunlock>
  423d33:	48 8d 05 de 6f 04 00 	leaq	290782(%rip), %rax
  423d3a:	48 89 04 24 	movq	%rax, (%rsp)
  423d3e:	48 c7 44 24 08 11 00 00 00 	movq	$17, 8(%rsp)
  423d47:	e8 84 d4 ff ff 	callq	-11132 <runtime.throw>
  423d4c:	0f 0b 	ud2
  423d4e:	e8 1d 08 02 00 	callq	133149 <runtime.morestack_noctxt>
  423d53:	e9 48 ff ff ff 	jmp	-184 <runtime.checkmcount>
  423d58:	cc 	int3
  423d59:	cc 	int3
  423d5a:	cc 	int3
  423d5b:	cc 	int3
  423d5c:	cc 	int3
  423d5d:	cc 	int3
  423d5e:	cc 	int3
  423d5f:	cc 	int3

runtime.mcommoninit:
  423d60:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  423d69:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  423d6d:	0f 86 c8 01 00 00 	jbe	456 <runtime.mcommoninit+0x1db>
  423d73:	48 83 ec 30 	subq	$48, %rsp
  423d77:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  423d7c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  423d81:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  423d8a:	48 8b 48 30 	movq	48(%rax), %rcx
  423d8e:	48 8b 09 	movq	(%rcx), %rcx
  423d91:	48 39 c8 	cmpq	%rcx, %rax
  423d94:	0f 85 4d 01 00 00 	jne	333 <runtime.mcommoninit+0x187>
  423d9a:	48 8d 05 8f 3b 08 00 	leaq	539535(%rip), %rax
  423da1:	48 89 04 24 	movq	%rax, (%rsp)
  423da5:	e8 76 57 fe ff 	callq	-108682 <runtime.lock>
  423daa:	48 8b 05 97 3b 08 00 	movq	539543(%rip), %rax
  423db1:	48 8d 48 01 	leaq	1(%rax), %rcx
  423db5:	48 39 c1 	cmpq	%rax, %rcx
  423db8:	0f 8c 62 01 00 00 	jl	354 <runtime.mcommoninit+0x1c0>
  423dbe:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  423dc3:	48 89 81 e0 00 00 00 	movq	%rax, 224(%rcx)
  423dca:	48 ff 05 77 3b 08 00 	incq	539511(%rip)
  423dd1:	e8 ca fe ff ff 	callq	-310 <runtime.checkmcount>
  423dd6:	48 8b 44 24 38 	movq	56(%rsp), %rax
  423ddb:	48 8b 88 e0 00 00 00 	movq	224(%rax), %rcx
  423de2:	69 c9 95 64 35 5f 	imull	$1597334677, %ecx, %ecx
  423de8:	89 88 20 01 00 00 	movl	%ecx, 288(%rax)
  423dee:	e8 fd 1e 02 00 	callq	139005 <runtime.cputicks>
  423df3:	48 8b 04 24 	movq	(%rsp), %rax
  423df7:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  423dfc:	89 81 24 01 00 00 	movl	%eax, 292(%rcx)
  423e02:	8b 91 20 01 00 00 	movl	288(%rcx), %edx
  423e08:	09 c2 	orl	%eax, %edx
  423e0a:	85 d2 	testl	%edx, %edx
  423e0c:	75 0a 	jne	10 <runtime.mcommoninit+0xb8>
  423e0e:	c7 81 24 01 00 00 01 00 00 00 	movl	$1, 292(%rcx)
  423e18:	48 89 0c 24 	movq	%rcx, (%rsp)
  423e1c:	e8 af b7 ff ff 	callq	-18513 <runtime.mpreinit>
  423e21:	48 8b 44 24 38 	movq	56(%rsp), %rax
  423e26:	48 8b 48 50 	movq	80(%rax), %rcx
  423e2a:	48 85 c9 	testq	%rcx, %rcx
  423e2d:	74 0e 	je	14 <runtime.mcommoninit+0xdd>
  423e2f:	48 8b 11 	movq	(%rcx), %rdx
  423e32:	48 81 c2 70 03 00 00 	addq	$880, %rdx
  423e39:	48 89 51 18 	movq	%rdx, 24(%rcx)
  423e3d:	8b 0d cd fb 09 00 	movl	654285(%rip), %ecx
  423e43:	48 8b 15 ce 37 08 00 	movq	538574(%rip), %rdx
  423e4a:	48 8d b8 50 01 00 00 	leaq	336(%rax), %rdi
  423e51:	85 c9 	testl	%ecx, %ecx
  423e53:	75 7f 	jne	127 <runtime.mcommoninit+0x174>
  423e55:	48 89 90 50 01 00 00 	movq	%rdx, 336(%rax)
  423e5c:	48 8d 0d b5 37 08 00 	leaq	538549(%rip), %rcx
  423e63:	48 89 0c 24 	movq	%rcx, (%rsp)
  423e67:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  423e6c:	e8 6f e0 fd ff 	callq	-139153 <runtime.atomicstorep>
  423e71:	48 8d 05 b8 3a 08 00 	leaq	539320(%rip), %rax
  423e78:	48 89 04 24 	movq	%rax, (%rsp)
  423e7c:	e8 3f 58 fe ff 	callq	-108481 <runtime.unlock>
  423e81:	0f b6 05 24 fa 09 00 	movzbl	653860(%rip), %eax
  423e88:	84 c0 	testb	%al, %al
  423e8a:	75 0a 	jne	10 <runtime.mcommoninit+0x136>
  423e8c:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  423e91:	48 83 c4 30 	addq	$48, %rsp
  423e95:	c3 	retq
  423e96:	48 8d 05 23 6d 03 00 	leaq	224547(%rip), %rax
  423e9d:	48 89 04 24 	movq	%rax, (%rsp)
  423ea1:	e8 7a 72 fe ff 	callq	-101766 <runtime.newobject>
  423ea6:	8b 05 64 fb 09 00 	movl	654180(%rip), %eax
  423eac:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  423eb1:	48 8d b9 40 01 00 00 	leaq	320(%rcx), %rdi
  423eb8:	48 8b 54 24 08 	movq	8(%rsp), %rdx
  423ebd:	85 c0 	testl	%eax, %eax
  423ebf:	75 09 	jne	9 <runtime.mcommoninit+0x16a>
  423ec1:	48 89 91 40 01 00 00 	movq	%rdx, 320(%rcx)
  423ec8:	eb c2 	jmp	-62 <runtime.mcommoninit+0x12c>
  423eca:	48 89 d0 	movq	%rdx, %rax
  423ecd:	e8 ce 29 02 00 	callq	141774 <runtime.gcWriteBarrier>
  423ed2:	eb b8 	jmp	-72 <runtime.mcommoninit+0x12c>
  423ed4:	48 89 c1 	movq	%rax, %rcx
  423ed7:	48 89 d0 	movq	%rdx, %rax
  423eda:	e8 c1 29 02 00 	callq	141761 <runtime.gcWriteBarrier>
  423edf:	48 89 c8 	movq	%rcx, %rax
  423ee2:	e9 75 ff ff ff 	jmp	-139 <runtime.mcommoninit+0xfc>
  423ee7:	48 8b 44 24 38 	movq	56(%rsp), %rax
  423eec:	84 00 	testb	%al, (%rax)
  423eee:	48 8d 88 70 01 00 00 	leaq	368(%rax), %rcx
  423ef5:	84 01 	testb	%al, (%rcx)
  423ef7:	48 c7 04 24 01 00 00 00 	movq	$1, (%rsp)
  423eff:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  423f04:	48 c7 44 24 10 20 00 00 00 	movq	$32, 16(%rsp)
  423f0d:	48 c7 44 24 18 20 00 00 00 	movq	$32, 24(%rsp)
  423f16:	e8 e5 99 01 00 	callq	104933 <runtime.callers>
  423f1b:	e9 7a fe ff ff 	jmp	-390 <runtime.mcommoninit+0x3a>
  423f20:	48 8d 05 68 7f 04 00 	leaq	294760(%rip), %rax
  423f27:	48 89 04 24 	movq	%rax, (%rsp)
  423f2b:	48 c7 44 24 08 1b 00 00 00 	movq	$27, 8(%rsp)
  423f34:	e8 97 d2 ff ff 	callq	-11625 <runtime.throw>
  423f39:	0f 0b 	ud2
  423f3b:	e8 30 06 02 00 	callq	132656 <runtime.morestack_noctxt>
  423f40:	e9 1b fe ff ff 	jmp	-485 <runtime.mcommoninit>
  423f45:	cc 	int3
  423f46:	cc 	int3
  423f47:	cc 	int3
  423f48:	cc 	int3
  423f49:	cc 	int3
  423f4a:	cc 	int3
  423f4b:	cc 	int3
  423f4c:	cc 	int3
  423f4d:	cc 	int3
  423f4e:	cc 	int3
  423f4f:	cc 	int3

runtime.ready:
  423f50:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  423f59:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  423f5d:	0f 86 6a 02 00 00 	jbe	618 <runtime.ready+0x27d>
  423f63:	48 83 ec 40 	subq	$64, %rsp
  423f67:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  423f6c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  423f71:	0f b6 05 58 f8 08 00 	movzbl	587864(%rip), %eax
  423f78:	84 c0 	testb	%al, %al
  423f7a:	0f 85 cc 00 00 00 	jne	204 <runtime.ready+0xfc>
  423f80:	48 8b 44 24 48 	movq	72(%rsp), %rax
  423f85:	8b 88 90 00 00 00 	movl	144(%rax), %ecx
  423f8b:	64 48 8b 14 25 f8 ff ff ff 	movq	%fs:-8, %rdx
  423f94:	48 8b 5a 30 	movq	48(%rdx), %rbx
  423f98:	ff 83 00 01 00 00 	incl	256(%rbx)
  423f9e:	81 e1 ff ef ff ff 	andl	$4294963199, %ecx
  423fa4:	83 f9 04 	cmpl	$4, %ecx
  423fa7:	0f 85 bc 00 00 00 	jne	188 <runtime.ready+0x119>
  423fad:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  423fb2:	48 89 04 24 	movq	%rax, (%rsp)
  423fb6:	48 b9 04 00 00 00 01 00 00 00 	movabsq	$4294967300, %rcx
  423fc0:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  423fc5:	e8 b6 0a 00 00 	callq	2742 <runtime.casgstatus>
  423fca:	48 8b 44 24 30 	movq	48(%rsp), %rax
  423fcf:	48 8b 48 30 	movq	48(%rax), %rcx
  423fd3:	48 8b 89 d0 00 00 00 	movq	208(%rcx), %rcx
  423fda:	48 89 0c 24 	movq	%rcx, (%rsp)
  423fde:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  423fe3:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  423fe8:	0f b6 4c 24 58 	movzbl	88(%rsp), %ecx
  423fed:	88 4c 24 10 	movb	%cl, 16(%rsp)
  423ff1:	e8 5a 9e 00 00 	callq	40538 <runtime.runqput>
  423ff6:	8b 05 74 39 08 00 	movl	538996(%rip), %eax
  423ffc:	85 c0 	testl	%eax, %eax
  423ffe:	74 0a 	je	10 <runtime.ready+0xba>
  424000:	8b 05 6e 39 08 00 	movl	538990(%rip), %eax
  424006:	85 c0 	testl	%eax, %eax
  424008:	74 3b 	je	59 <runtime.ready+0xf5>
  42400a:	48 8b 44 24 30 	movq	48(%rsp), %rax
  42400f:	48 8b 48 30 	movq	48(%rax), %rcx
  424013:	83 81 00 01 00 00 ff 	addl	$-1, 256(%rcx)
  42401a:	48 8b 48 30 	movq	48(%rax), %rcx
  42401e:	8b 89 00 01 00 00 	movl	256(%rcx), %ecx
  424024:	85 c9 	testl	%ecx, %ecx
  424026:	75 13 	jne	19 <runtime.ready+0xeb>
  424028:	0f b6 88 c0 00 00 00 	movzbl	192(%rax), %ecx
  42402f:	84 c9 	testb	%cl, %cl
  424031:	74 08 	je	8 <runtime.ready+0xeb>
  424033:	48 c7 40 10 de fa ff ff 	movq	$-1314, 16(%rax)
  42403b:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  424040:	48 83 c4 40 	addq	$64, %rsp
  424044:	c3 	retq
  424045:	e8 26 33 00 00 	callq	13094 <runtime.wakep>
  42404a:	eb be 	jmp	-66 <runtime.ready+0xba>
  42404c:	48 8b 44 24 48 	movq	72(%rsp), %rax
  424051:	48 89 04 24 	movq	%rax, (%rsp)
  424055:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  42405a:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  42405f:	e8 5c 6c 01 00 	callq	93276 <runtime.traceGoUnpark>
  424064:	e9 17 ff ff ff 	jmp	-233 <runtime.ready+0x30>
  424069:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  424072:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  424077:	8b 90 90 00 00 00 	movl	144(%rax), %edx
  42407d:	89 54 24 18 	movl	%edx, 24(%rsp)
  424081:	48 8b 98 98 00 00 00 	movq	152(%rax), %rbx
  424088:	48 89 5c 24 20 	movq	%rbx, 32(%rsp)
  42408d:	e8 6e da ff ff 	callq	-9618 <runtime.printlock>
  424092:	48 8d 05 c9 6a 04 00 	leaq	289481(%rip), %rax
  424099:	48 89 04 24 	movq	%rax, (%rsp)
  42409d:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  4240a6:	e8 95 e3 ff ff 	callq	-7275 <runtime.printstring>
  4240ab:	48 8b 44 24 48 	movq	72(%rsp), %rax
  4240b0:	48 89 04 24 	movq	%rax, (%rsp)
  4240b4:	e8 47 e3 ff ff 	callq	-7353 <runtime.printpointer>
  4240b9:	48 8d 05 d2 5d 04 00 	leaq	286162(%rip), %rax
  4240c0:	48 89 04 24 	movq	%rax, (%rsp)
  4240c4:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  4240cd:	e8 6e e3 ff ff 	callq	-7314 <runtime.printstring>
  4240d2:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4240d7:	48 89 04 24 	movq	%rax, (%rsp)
  4240db:	e8 a0 e1 ff ff 	callq	-7776 <runtime.printint>
  4240e0:	48 8d 05 2d 6d 04 00 	leaq	290093(%rip), %rax
  4240e7:	48 89 04 24 	movq	%rax, (%rsp)
  4240eb:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  4240f4:	e8 47 e3 ff ff 	callq	-7353 <runtime.printstring>
  4240f9:	8b 44 24 18 	movl	24(%rsp), %eax
  4240fd:	89 c0 	movl	%eax, %eax
  4240ff:	48 89 04 24 	movq	%rax, (%rsp)
  424103:	e8 68 e0 ff ff 	callq	-8088 <runtime.printuint>
  424108:	e8 83 dc ff ff 	callq	-9085 <runtime.printnl>
  42410d:	e8 6e da ff ff 	callq	-9618 <runtime.printunlock>
  424112:	48 8b 44 24 28 	movq	40(%rsp), %rax
  424117:	8b 88 90 00 00 00 	movl	144(%rax), %ecx
  42411d:	89 4c 24 1c 	movl	%ecx, 28(%rsp)
  424121:	48 8b 90 98 00 00 00 	movq	152(%rax), %rdx
  424128:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  42412d:	e8 ce d9 ff ff 	callq	-9778 <runtime.printlock>
  424132:	48 8d 05 19 6a 04 00 	leaq	289305(%rip), %rax
  424139:	48 89 04 24 	movq	%rax, (%rsp)
  42413d:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  424146:	e8 f5 e2 ff ff 	callq	-7435 <runtime.printstring>
  42414b:	48 8b 44 24 28 	movq	40(%rsp), %rax
  424150:	48 89 04 24 	movq	%rax, (%rsp)
  424154:	e8 a7 e2 ff ff 	callq	-7513 <runtime.printpointer>
  424159:	48 8d 05 32 5d 04 00 	leaq	286002(%rip), %rax
  424160:	48 89 04 24 	movq	%rax, (%rsp)
  424164:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  42416d:	e8 ce e2 ff ff 	callq	-7474 <runtime.printstring>
  424172:	48 8b 44 24 20 	movq	32(%rsp), %rax
  424177:	48 89 04 24 	movq	%rax, (%rsp)
  42417b:	e8 00 e1 ff ff 	callq	-7936 <runtime.printint>
  424180:	48 8d 05 7a 6c 04 00 	leaq	289914(%rip), %rax
  424187:	48 89 04 24 	movq	%rax, (%rsp)
  42418b:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  424194:	e8 a7 e2 ff ff 	callq	-7513 <runtime.printstring>
  424199:	8b 44 24 1c 	movl	28(%rsp), %eax
  42419d:	89 c0 	movl	%eax, %eax
  42419f:	48 89 04 24 	movq	%rax, (%rsp)
  4241a3:	e8 c8 df ff ff 	callq	-8248 <runtime.printuint>
  4241a8:	e8 e3 db ff ff 	callq	-9245 <runtime.printnl>
  4241ad:	e8 ce d9 ff ff 	callq	-9778 <runtime.printunlock>
  4241b2:	48 8d 05 39 72 04 00 	leaq	291385(%rip), %rax
  4241b9:	48 89 04 24 	movq	%rax, (%rsp)
  4241bd:	48 c7 44 24 08 16 00 00 00 	movq	$22, 8(%rsp)
  4241c6:	e8 05 d0 ff ff 	callq	-12283 <runtime.throw>
  4241cb:	0f 0b 	ud2
  4241cd:	e8 9e 03 02 00 	callq	131998 <runtime.morestack_noctxt>
  4241d2:	e9 79 fd ff ff 	jmp	-647 <runtime.ready>
  4241d7:	cc 	int3
  4241d8:	cc 	int3
  4241d9:	cc 	int3
  4241da:	cc 	int3
  4241db:	cc 	int3
  4241dc:	cc 	int3
  4241dd:	cc 	int3
  4241de:	cc 	int3
  4241df:	cc 	int3

runtime.gcprocs:
  4241e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4241e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4241ed:	76 76 	jbe	118 <runtime.gcprocs+0x85>
  4241ef:	48 83 ec 18 	subq	$24, %rsp
  4241f3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  4241f8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  4241fd:	48 8d 05 2c 37 08 00 	leaq	538412(%rip), %rax
  424204:	48 89 04 24 	movq	%rax, (%rsp)
  424208:	e8 13 53 fe ff 	callq	-109805 <runtime.lock>
  42420d:	8b 05 cd f6 09 00 	movl	653005(%rip), %eax
  424213:	8b 0d cb f6 09 00 	movl	653003(%rip), %ecx
  424219:	39 c8 	cmpl	%ecx, %eax
  42421b:	7e 44 	jle	68 <runtime.gcprocs+0x81>
  42421d:	83 f9 20 	cmpl	$32, %ecx
  424220:	7e 3b 	jle	59 <runtime.gcprocs+0x7d>
  424222:	b8 20 00 00 00 	movl	$32, %eax
  424227:	8b 0d 13 37 08 00 	movl	538387(%rip), %ecx
  42422d:	ff c1 	incl	%ecx
  42422f:	39 c8 	cmpl	%ecx, %eax
  424231:	7e 26 	jle	38 <runtime.gcprocs+0x79>
  424233:	89 4c 24 0c 	movl	%ecx, 12(%rsp)
  424237:	48 8d 05 f2 36 08 00 	leaq	538354(%rip), %rax
  42423e:	48 89 04 24 	movq	%rax, (%rsp)
  424242:	e8 79 54 fe ff 	callq	-109447 <runtime.unlock>
  424247:	8b 44 24 0c 	movl	12(%rsp), %eax
  42424b:	89 44 24 20 	movl	%eax, 32(%rsp)
  42424f:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  424254:	48 83 c4 18 	addq	$24, %rsp
  424258:	c3 	retq
  424259:	89 c1 	movl	%eax, %ecx
  42425b:	eb d6 	jmp	-42 <runtime.gcprocs+0x53>
  42425d:	89 c8 	movl	%ecx, %eax
  42425f:	eb c6 	jmp	-58 <runtime.gcprocs+0x47>
  424261:	89 c1 	movl	%eax, %ecx
  424263:	eb b8 	jmp	-72 <runtime.gcprocs+0x3d>
  424265:	e8 06 03 02 00 	callq	131846 <runtime.morestack_noctxt>
  42426a:	e9 71 ff ff ff 	jmp	-143 <runtime.gcprocs>
  42426f:	cc 	int3

runtime.needaddgcproc:
  424270:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  424279:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42427d:	76 7e 	jbe	126 <runtime.needaddgcproc+0x8d>
  42427f:	48 83 ec 18 	subq	$24, %rsp
  424283:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  424288:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  42428d:	48 8d 05 9c 36 08 00 	leaq	538268(%rip), %rax
  424294:	48 89 04 24 	movq	%rax, (%rsp)
  424298:	e8 83 52 fe ff 	callq	-109949 <runtime.lock>
  42429d:	8b 05 3d f6 09 00 	movl	652861(%rip), %eax
  4242a3:	8b 0d 3b f6 09 00 	movl	652859(%rip), %ecx
  4242a9:	39 c8 	cmpl	%ecx, %eax
  4242ab:	7e 4c 	jle	76 <runtime.needaddgcproc+0x89>
  4242ad:	83 f9 20 	cmpl	$32, %ecx
  4242b0:	7e 43 	jle	67 <runtime.needaddgcproc+0x85>
  4242b2:	b8 20 00 00 00 	movl	$32, %eax
  4242b7:	89 44 24 08 	movl	%eax, 8(%rsp)
  4242bb:	8b 0d 7f 36 08 00 	movl	538239(%rip), %ecx
  4242c1:	89 4c 24 0c 	movl	%ecx, 12(%rsp)
  4242c5:	48 8d 15 64 36 08 00 	leaq	538212(%rip), %rdx
  4242cc:	48 89 14 24 	movq	%rdx, (%rsp)
  4242d0:	e8 eb 53 fe ff 	callq	-109589 <runtime.unlock>
  4242d5:	8b 44 24 0c 	movl	12(%rsp), %eax
  4242d9:	ff c0 	incl	%eax
  4242db:	8b 4c 24 08 	movl	8(%rsp), %ecx
  4242df:	29 c1 	subl	%eax, %ecx
  4242e1:	85 c9 	testl	%ecx, %ecx
  4242e3:	48 8d 44 24 20 	leaq	32(%rsp), %rax
  4242e8:	0f 9f 00 	setg	(%rax)
  4242eb:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  4242f0:	48 83 c4 18 	addq	$24, %rsp
  4242f4:	c3 	retq
  4242f5:	89 c8 	movl	%ecx, %eax
  4242f7:	eb be 	jmp	-66 <runtime.needaddgcproc+0x47>
  4242f9:	89 c1 	movl	%eax, %ecx
  4242fb:	eb b0 	jmp	-80 <runtime.needaddgcproc+0x3d>
  4242fd:	e8 6e 02 02 00 	callq	131694 <runtime.morestack_noctxt>
  424302:	e9 69 ff ff ff 	jmp	-151 <runtime.needaddgcproc>
  424307:	cc 	int3
  424308:	cc 	int3
  424309:	cc 	int3
  42430a:	cc 	int3
  42430b:	cc 	int3
  42430c:	cc 	int3
  42430d:	cc 	int3
  42430e:	cc 	int3
  42430f:	cc 	int3

runtime.helpgc:
  424310:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  424319:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42431d:	0f 86 65 01 00 00 	jbe	357 <runtime.helpgc+0x178>
  424323:	48 83 ec 30 	subq	$48, %rsp
  424327:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  42432c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  424331:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  42433a:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  42433f:	48 8d 0d ea 35 08 00 	leaq	538090(%rip), %rcx
  424346:	48 89 0c 24 	movq	%rcx, (%rsp)
  42434a:	e8 d1 51 fe ff 	callq	-110127 <runtime.lock>
  42434f:	b8 01 00 00 00 	movl	$1, %eax
  424354:	31 c9 	xorl	%ecx, %ecx
  424356:	eb 36 	jmp	54 <runtime.helpgc+0x7e>
  424358:	89 44 24 14 	movl	%eax, 20(%rsp)
  42435c:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  424361:	48 8b 04 cf 	movq	(%rdi,%rcx,8), %rax
  424365:	48 8b 40 48 	movq	72(%rax), %rax
  424369:	48 89 83 60 01 00 00 	movq	%rax, 352(%rbx)
  424370:	48 8d 83 48 01 00 00 	leaq	328(%rbx), %rax
  424377:	48 89 04 24 	movq	%rax, (%rsp)
  42437b:	e8 10 54 fe ff 	callq	-109552 <runtime.notewakeup>
  424380:	8b 44 24 14 	movl	20(%rsp), %eax
  424384:	ff c0 	incl	%eax
  424386:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  42438b:	48 ff c1 	incq	%rcx
  42438e:	8b 54 24 38 	movl	56(%rsp), %edx
  424392:	39 d0 	cmpl	%edx, %eax
  424394:	0f 8d a4 00 00 00 	jge	164 <runtime.helpgc+0x12e>
  42439a:	48 8b 1d 17 33 08 00 	movq	537367(%rip), %rbx
  4243a1:	48 8b 35 08 33 08 00 	movq	537352(%rip), %rsi
  4243a8:	48 39 d9 	cmpq	%rbx, %rcx
  4243ab:	0f 83 d0 00 00 00 	jae	208 <runtime.helpgc+0x171>
  4243b1:	48 8b 1c ce 	movq	(%rsi,%rcx,8), %rbx
  4243b5:	48 8b 74 24 20 	movq	32(%rsp), %rsi
  4243ba:	48 8b 7e 30 	movq	48(%rsi), %rdi
  4243be:	48 8b 5b 48 	movq	72(%rbx), %rbx
  4243c2:	48 8b bf 60 01 00 00 	movq	352(%rdi), %rdi
  4243c9:	48 39 fb 	cmpq	%rdi, %rbx
  4243cc:	75 03 	jne	3 <runtime.helpgc+0xc1>
  4243ce:	48 ff c1 	incq	%rcx
  4243d1:	48 8b 1d 60 35 08 00 	movq	537952(%rip), %rbx
  4243d8:	48 85 db 	testq	%rbx, %rbx
  4243db:	74 18 	je	24 <runtime.helpgc+0xe5>
  4243dd:	48 8b bb 58 01 00 00 	movq	344(%rbx), %rdi
  4243e4:	48 89 3d 4d 35 08 00 	movq	%rdi, 537933(%rip)
  4243eb:	83 05 4e 35 08 00 ff 	addl	$-1, 537934(%rip)
  4243f2:	48 85 db 	testq	%rbx, %rbx
  4243f5:	74 6f 	je	111 <runtime.helpgc+0x156>
  4243f7:	89 83 10 01 00 00 	movl	%eax, 272(%rbx)
  4243fd:	48 8b 3d ac 32 08 00 	movq	537260(%rip), %rdi
  424404:	4c 8b 05 ad 32 08 00 	movq	537261(%rip), %r8
  42440b:	4c 39 c1 	cmpq	%r8, %rcx
  42440e:	73 4f 	jae	79 <runtime.helpgc+0x14f>
  424410:	4c 8d 83 d0 00 00 00 	leaq	208(%rbx), %r8
  424417:	41 84 00 	testb	%al, (%r8)
  42441a:	48 8b 3c cf 	movq	(%rdi,%rcx,8), %rdi
  42441e:	48 89 bb d0 00 00 00 	movq	%rdi, 208(%rbx)
  424425:	48 8b 3d 84 32 08 00 	movq	537220(%rip), %rdi
  42442c:	4c 8b 05 85 32 08 00 	movq	537221(%rip), %r8
  424433:	4c 39 c1 	cmpq	%r8, %rcx
  424436:	0f 82 1c ff ff ff 	jb	-228 <runtime.helpgc+0x48>
  42443c:	eb 1a 	jmp	26 <runtime.helpgc+0x148>
  42443e:	48 8d 05 eb 34 08 00 	leaq	537835(%rip), %rax
  424445:	48 89 04 24 	movq	%rax, (%rsp)
  424449:	e8 72 52 fe ff 	callq	-109966 <runtime.unlock>
  42444e:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  424453:	48 83 c4 30 	addq	$48, %rsp
  424457:	c3 	retq
  424458:	e8 e3 b5 ff ff 	callq	-18973 <runtime.panicindex>
  42445d:	0f 0b 	ud2
  42445f:	e8 dc b5 ff ff 	callq	-18980 <runtime.panicindex>
  424464:	0f 0b 	ud2
  424466:	48 8d 05 5b 6e 04 00 	leaq	290395(%rip), %rax
  42446d:	48 89 04 24 	movq	%rax, (%rsp)
  424471:	48 c7 44 24 08 15 00 00 00 	movq	$21, 8(%rsp)
  42447a:	e8 51 cd ff ff 	callq	-12975 <runtime.throw>
  42447f:	0f 0b 	ud2
  424481:	e8 ba b5 ff ff 	callq	-19014 <runtime.panicindex>
  424486:	0f 0b 	ud2
  424488:	e8 e3 00 02 00 	callq	131299 <runtime.morestack_noctxt>
  42448d:	e9 7e fe ff ff 	jmp	-386 <runtime.helpgc>
  424492:	cc 	int3
  424493:	cc 	int3
  424494:	cc 	int3
  424495:	cc 	int3
  424496:	cc 	int3
  424497:	cc 	int3
  424498:	cc 	int3
  424499:	cc 	int3
  42449a:	cc 	int3
  42449b:	cc 	int3
  42449c:	cc 	int3
  42449d:	cc 	int3
  42449e:	cc 	int3
  42449f:	cc 	int3

runtime.freezetheworld:
  4244a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4244a9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4244ad:	0f 86 8b 00 00 00 	jbe	139 <runtime.freezetheworld+0x9e>
  4244b3:	48 83 ec 18 	subq	$24, %rsp
  4244b7:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  4244bc:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  4244c1:	b8 01 00 00 00 	movl	$1, %eax
  4244c6:	48 8d 0d 03 f4 09 00 	leaq	652291(%rip), %rcx
  4244cd:	87 01 	xchgl	%eax, (%rcx)
  4244cf:	31 c0 	xorl	%eax, %eax
  4244d1:	eb 14 	jmp	20 <runtime.freezetheworld+0x47>
  4244d3:	c7 04 24 e8 03 00 00 	movl	$1000, (%rsp)
  4244da:	e8 d1 33 02 00 	callq	144337 <runtime.usleep>
  4244df:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4244e4:	48 ff c0 	incq	%rax
  4244e7:	48 83 f8 05 	cmpq	$5, %rax
  4244eb:	7d 2a 	jge	42 <runtime.freezetheworld+0x77>
  4244ed:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4244f2:	c7 05 00 35 08 00 ff ff ff 7f 	movl	$2147483647, 537856(%rip)
  4244fc:	b8 01 00 00 00 	movl	$1, %eax
  424501:	48 8d 0d f0 34 08 00 	leaq	537840(%rip), %rcx
  424508:	87 01 	xchgl	%eax, (%rcx)
  42450a:	e8 61 8b 00 00 	callq	35681 <runtime.preemptall>
  42450f:	0f b6 04 24 	movzbl	(%rsp), %eax
  424513:	84 c0 	testb	%al, %al
  424515:	75 bc 	jne	-68 <runtime.freezetheworld+0x33>
  424517:	c7 04 24 e8 03 00 00 	movl	$1000, (%rsp)
  42451e:	e8 8d 33 02 00 	callq	144269 <runtime.usleep>
  424523:	e8 48 8b 00 00 	callq	35656 <runtime.preemptall>
  424528:	c7 04 24 e8 03 00 00 	movl	$1000, (%rsp)
  42452f:	e8 7c 33 02 00 	callq	144252 <runtime.usleep>
  424534:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  424539:	48 83 c4 18 	addq	$24, %rsp
  42453d:	c3 	retq
  42453e:	e8 2d 00 02 00 	callq	131117 <runtime.morestack_noctxt>
  424543:	e9 58 ff ff ff 	jmp	-168 <runtime.freezetheworld>
  424548:	cc 	int3
  424549:	cc 	int3
  42454a:	cc 	int3
  42454b:	cc 	int3
  42454c:	cc 	int3
  42454d:	cc 	int3
  42454e:	cc 	int3
  42454f:	cc 	int3

runtime.casfrom_Gscanstatus:
  424550:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  424559:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42455d:	0f 86 31 04 00 00 	jbe	1073 <runtime.casfrom_Gscanstatus+0x444>
  424563:	48 83 ec 40 	subq	$64, %rsp
  424567:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  42456c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  424571:	8b 44 24 50 	movl	80(%rsp), %eax
  424575:	8d 88 ff ef ff ff 	leal	-4097(%rax), %ecx
  42457b:	83 f9 03 	cmpl	$3, %ecx
  42457e:	0f 87 25 02 00 00 	ja	549 <runtime.casfrom_Gscanstatus+0x259>
  424584:	89 c1 	movl	%eax, %ecx
  424586:	25 ff ef ff ff 	andl	$4294963199, %eax
  42458b:	8b 54 24 54 	movl	84(%rsp), %edx
  42458f:	39 c2 	cmpl	%eax, %edx
  424591:	75 22 	jne	34 <runtime.casfrom_Gscanstatus+0x65>
  424593:	89 c8 	movl	%ecx, %eax
  424595:	48 8b 5c 24 48 	movq	72(%rsp), %rbx
  42459a:	f0 	lock
  42459b:	0f b1 93 90 00 00 00 	cmpxchgl	%edx, 144(%rbx)
  4245a2:	40 0f 94 c6 	sete	%sil
  4245a6:	40 84 f6 	testb	%sil, %sil
  4245a9:	74 13 	je	19 <runtime.casfrom_Gscanstatus+0x6e>
  4245ab:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  4245b0:	48 83 c4 40 	addq	$64, %rsp
  4245b4:	c3 	retq
  4245b5:	48 8b 5c 24 48 	movq	72(%rsp), %rbx
  4245ba:	31 f6 	xorl	%esi, %esi
  4245bc:	eb e8 	jmp	-24 <runtime.casfrom_Gscanstatus+0x56>
  4245be:	e8 3d d5 ff ff 	callq	-10947 <runtime.printlock>
  4245c3:	48 8d 05 d8 8b 04 00 	leaq	297944(%rip), %rax
  4245ca:	48 89 04 24 	movq	%rax, (%rsp)
  4245ce:	48 c7 44 24 08 27 00 00 00 	movq	$39, 8(%rsp)
  4245d7:	e8 64 de ff ff 	callq	-8604 <runtime.printstring>
  4245dc:	48 8b 44 24 48 	movq	72(%rsp), %rax
  4245e1:	48 89 04 24 	movq	%rax, (%rsp)
  4245e5:	e8 16 de ff ff 	callq	-8682 <runtime.printpointer>
  4245ea:	48 8d 05 e7 5a 04 00 	leaq	285415(%rip), %rax
  4245f1:	48 89 04 24 	movq	%rax, (%rsp)
  4245f5:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  4245fe:	e8 3d de ff ff 	callq	-8643 <runtime.printstring>
  424603:	8b 44 24 50 	movl	80(%rsp), %eax
  424607:	48 89 04 24 	movq	%rax, (%rsp)
  42460b:	e8 e0 dc ff ff 	callq	-8992 <runtime.printhex>
  424610:	48 8d 05 b8 5a 04 00 	leaq	285368(%rip), %rax
  424617:	48 89 04 24 	movq	%rax, (%rsp)
  42461b:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  424624:	e8 17 de ff ff 	callq	-8681 <runtime.printstring>
  424629:	8b 44 24 54 	movl	84(%rsp), %eax
  42462d:	48 89 04 24 	movq	%rax, (%rsp)
  424631:	e8 ba dc ff ff 	callq	-9030 <runtime.printhex>
  424636:	e8 55 d7 ff ff 	callq	-10411 <runtime.printnl>
  42463b:	e8 40 d5 ff ff 	callq	-10944 <runtime.printunlock>
  424640:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  424649:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  42464e:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  424653:	8b 91 90 00 00 00 	movl	144(%rcx), %edx
  424659:	89 54 24 1c 	movl	%edx, 28(%rsp)
  42465d:	48 8b 99 98 00 00 00 	movq	152(%rcx), %rbx
  424664:	48 89 5c 24 20 	movq	%rbx, 32(%rsp)
  424669:	e8 92 d4 ff ff 	callq	-11118 <runtime.printlock>
  42466e:	48 8d 05 ed 64 04 00 	leaq	287981(%rip), %rax
  424675:	48 89 04 24 	movq	%rax, (%rsp)
  424679:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  424682:	e8 b9 dd ff ff 	callq	-8775 <runtime.printstring>
  424687:	48 8b 44 24 48 	movq	72(%rsp), %rax
  42468c:	48 89 04 24 	movq	%rax, (%rsp)
  424690:	e8 6b dd ff ff 	callq	-8853 <runtime.printpointer>
  424695:	48 8d 05 f6 57 04 00 	leaq	284662(%rip), %rax
  42469c:	48 89 04 24 	movq	%rax, (%rsp)
  4246a0:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  4246a9:	e8 92 dd ff ff 	callq	-8814 <runtime.printstring>
  4246ae:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4246b3:	48 89 04 24 	movq	%rax, (%rsp)
  4246b7:	e8 c4 db ff ff 	callq	-9276 <runtime.printint>
  4246bc:	48 8d 05 51 67 04 00 	leaq	288593(%rip), %rax
  4246c3:	48 89 04 24 	movq	%rax, (%rsp)
  4246c7:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  4246d0:	e8 6b dd ff ff 	callq	-8853 <runtime.printstring>
  4246d5:	8b 44 24 1c 	movl	28(%rsp), %eax
  4246d9:	89 c0 	movl	%eax, %eax
  4246db:	48 89 04 24 	movq	%rax, (%rsp)
  4246df:	e8 8c da ff ff 	callq	-9588 <runtime.printuint>
  4246e4:	e8 a7 d6 ff ff 	callq	-10585 <runtime.printnl>
  4246e9:	e8 92 d4 ff ff 	callq	-11118 <runtime.printunlock>
  4246ee:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4246f3:	8b 88 90 00 00 00 	movl	144(%rax), %ecx
  4246f9:	89 4c 24 10 	movl	%ecx, 16(%rsp)
  4246fd:	48 8b 90 98 00 00 00 	movq	152(%rax), %rdx
  424704:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  424709:	e8 f2 d3 ff ff 	callq	-11278 <runtime.printlock>
  42470e:	48 8d 05 3d 64 04 00 	leaq	287805(%rip), %rax
  424715:	48 89 04 24 	movq	%rax, (%rsp)
  424719:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  424722:	e8 19 dd ff ff 	callq	-8935 <runtime.printstring>
  424727:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42472c:	48 89 04 24 	movq	%rax, (%rsp)
  424730:	e8 cb dc ff ff 	callq	-9013 <runtime.printpointer>
  424735:	48 8d 05 56 57 04 00 	leaq	284502(%rip), %rax
  42473c:	48 89 04 24 	movq	%rax, (%rsp)
  424740:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  424749:	e8 f2 dc ff ff 	callq	-8974 <runtime.printstring>
  42474e:	48 8b 44 24 20 	movq	32(%rsp), %rax
  424753:	48 89 04 24 	movq	%rax, (%rsp)
  424757:	e8 24 db ff ff 	callq	-9436 <runtime.printint>
  42475c:	48 8d 05 9e 66 04 00 	leaq	288414(%rip), %rax
  424763:	48 89 04 24 	movq	%rax, (%rsp)
  424767:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  424770:	e8 cb dc ff ff 	callq	-9013 <runtime.printstring>
  424775:	8b 44 24 10 	movl	16(%rsp), %eax
  424779:	89 c0 	movl	%eax, %eax
  42477b:	48 89 04 24 	movq	%rax, (%rsp)
  42477f:	e8 ec d9 ff ff 	callq	-9748 <runtime.printuint>
  424784:	e8 07 d6 ff ff 	callq	-10745 <runtime.printnl>
  424789:	e8 f2 d3 ff ff 	callq	-11278 <runtime.printunlock>
  42478e:	48 8d 05 26 93 04 00 	leaq	299814(%rip), %rax
  424795:	48 89 04 24 	movq	%rax, (%rsp)
  424799:	48 c7 44 24 08 34 00 00 00 	movq	$52, 8(%rsp)
  4247a2:	e8 29 ca ff ff 	callq	-13783 <runtime.throw>
  4247a7:	0f 0b 	ud2
  4247a9:	e8 52 d3 ff ff 	callq	-11438 <runtime.printlock>
  4247ae:	48 8d 05 c0 8d 04 00 	leaq	298432(%rip), %rax
  4247b5:	48 89 04 24 	movq	%rax, (%rsp)
  4247b9:	48 c7 44 24 08 2b 00 00 00 	movq	$43, 8(%rsp)
  4247c2:	e8 79 dc ff ff 	callq	-9095 <runtime.printstring>
  4247c7:	48 8b 44 24 48 	movq	72(%rsp), %rax
  4247cc:	48 89 04 24 	movq	%rax, (%rsp)
  4247d0:	e8 2b dc ff ff 	callq	-9173 <runtime.printpointer>
  4247d5:	48 8d 05 fc 58 04 00 	leaq	284924(%rip), %rax
  4247dc:	48 89 04 24 	movq	%rax, (%rsp)
  4247e0:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  4247e9:	e8 52 dc ff ff 	callq	-9134 <runtime.printstring>
  4247ee:	8b 44 24 50 	movl	80(%rsp), %eax
  4247f2:	48 89 04 24 	movq	%rax, (%rsp)
  4247f6:	e8 f5 da ff ff 	callq	-9483 <runtime.printhex>
  4247fb:	48 8d 05 cd 58 04 00 	leaq	284877(%rip), %rax
  424802:	48 89 04 24 	movq	%rax, (%rsp)
  424806:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  42480f:	e8 2c dc ff ff 	callq	-9172 <runtime.printstring>
  424814:	8b 44 24 54 	movl	84(%rsp), %eax
  424818:	48 89 04 24 	movq	%rax, (%rsp)
  42481c:	e8 cf da ff ff 	callq	-9521 <runtime.printhex>
  424821:	e8 6a d5 ff ff 	callq	-10902 <runtime.printnl>
  424826:	e8 55 d3 ff ff 	callq	-11435 <runtime.printunlock>
  42482b:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  424834:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  424839:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  42483e:	8b 91 90 00 00 00 	movl	144(%rcx), %edx
  424844:	89 54 24 18 	movl	%edx, 24(%rsp)
  424848:	48 8b 99 98 00 00 00 	movq	152(%rcx), %rbx
  42484f:	48 89 5c 24 20 	movq	%rbx, 32(%rsp)
  424854:	e8 a7 d2 ff ff 	callq	-11609 <runtime.printlock>
  424859:	48 8d 05 02 63 04 00 	leaq	287490(%rip), %rax
  424860:	48 89 04 24 	movq	%rax, (%rsp)
  424864:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  42486d:	e8 ce db ff ff 	callq	-9266 <runtime.printstring>
  424872:	48 8b 44 24 48 	movq	72(%rsp), %rax
  424877:	48 89 04 24 	movq	%rax, (%rsp)
  42487b:	e8 80 db ff ff 	callq	-9344 <runtime.printpointer>
  424880:	48 8d 05 0b 56 04 00 	leaq	284171(%rip), %rax
  424887:	48 89 04 24 	movq	%rax, (%rsp)
  42488b:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  424894:	e8 a7 db ff ff 	callq	-9305 <runtime.printstring>
  424899:	48 8b 44 24 20 	movq	32(%rsp), %rax
  42489e:	48 89 04 24 	movq	%rax, (%rsp)
  4248a2:	e8 d9 d9 ff ff 	callq	-9767 <runtime.printint>
  4248a7:	48 8d 05 66 65 04 00 	leaq	288102(%rip), %rax
  4248ae:	48 89 04 24 	movq	%rax, (%rsp)
  4248b2:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  4248bb:	e8 80 db ff ff 	callq	-9344 <runtime.printstring>
  4248c0:	8b 44 24 18 	movl	24(%rsp), %eax
  4248c4:	89 c0 	movl	%eax, %eax
  4248c6:	48 89 04 24 	movq	%rax, (%rsp)
  4248ca:	e8 a1 d8 ff ff 	callq	-10079 <runtime.printuint>
  4248cf:	e8 bc d4 ff ff 	callq	-11076 <runtime.printnl>
  4248d4:	e8 a7 d2 ff ff 	callq	-11609 <runtime.printunlock>
  4248d9:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4248de:	8b 88 90 00 00 00 	movl	144(%rax), %ecx
  4248e4:	89 4c 24 14 	movl	%ecx, 20(%rsp)
  4248e8:	48 8b 90 98 00 00 00 	movq	152(%rax), %rdx
  4248ef:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  4248f4:	e8 07 d2 ff ff 	callq	-11769 <runtime.printlock>
  4248f9:	48 8d 05 52 62 04 00 	leaq	287314(%rip), %rax
  424900:	48 89 04 24 	movq	%rax, (%rsp)
  424904:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  42490d:	e8 2e db ff ff 	callq	-9426 <runtime.printstring>
  424912:	48 8b 44 24 30 	movq	48(%rsp), %rax
  424917:	48 89 04 24 	movq	%rax, (%rsp)
  42491b:	e8 e0 da ff ff 	callq	-9504 <runtime.printpointer>
  424920:	48 8d 05 6b 55 04 00 	leaq	284011(%rip), %rax
  424927:	48 89 04 24 	movq	%rax, (%rsp)
  42492b:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  424934:	e8 07 db ff ff 	callq	-9465 <runtime.printstring>
  424939:	48 8b 44 24 20 	movq	32(%rsp), %rax
  42493e:	48 89 04 24 	movq	%rax, (%rsp)
  424942:	e8 39 d9 ff ff 	callq	-9927 <runtime.printint>
  424947:	48 8d 05 b3 64 04 00 	leaq	287923(%rip), %rax
  42494e:	48 89 04 24 	movq	%rax, (%rsp)
  424952:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  42495b:	e8 e0 da ff ff 	callq	-9504 <runtime.printstring>
  424960:	8b 44 24 14 	movl	20(%rsp), %eax
  424964:	89 c0 	movl	%eax, %eax
  424966:	48 89 04 24 	movq	%rax, (%rsp)
  42496a:	e8 01 d8 ff ff 	callq	-10239 <runtime.printuint>
  42496f:	e8 1c d4 ff ff 	callq	-11236 <runtime.printnl>
  424974:	e8 07 d2 ff ff 	callq	-11769 <runtime.printunlock>
  424979:	48 8d 05 7a 92 04 00 	leaq	299642(%rip), %rax
  424980:	48 89 04 24 	movq	%rax, (%rsp)
  424984:	48 c7 44 24 08 37 00 00 00 	movq	$55, 8(%rsp)
  42498d:	e8 3e c8 ff ff 	callq	-14274 <runtime.throw>
  424992:	0f 0b 	ud2
  424994:	e8 d7 fb 01 00 	callq	130007 <runtime.morestack_noctxt>
  424999:	e9 b2 fb ff ff 	jmp	-1102 <runtime.casfrom_Gscanstatus>
  42499e:	cc 	int3
  42499f:	cc 	int3

runtime.castogscanstatus:
  4249a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4249a9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4249ad:	0f 86 bf 00 00 00 	jbe	191 <runtime.castogscanstatus+0xd2>
  4249b3:	48 83 ec 18 	subq	$24, %rsp
  4249b7:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  4249bc:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  4249c1:	8b 44 24 28 	movl	40(%rsp), %eax
  4249c5:	8d 48 ff 	leal	-1(%rax), %ecx
  4249c8:	83 f9 03 	cmpl	$3, %ecx
  4249cb:	77 2f 	ja	47 <runtime.castogscanstatus+0x5c>
  4249cd:	89 c1 	movl	%eax, %ecx
  4249cf:	0d 00 10 00 00 	orl	$4096, %eax
  4249d4:	8b 54 24 2c 	movl	44(%rsp), %edx
  4249d8:	39 c2 	cmpl	%eax, %edx
  4249da:	75 20 	jne	32 <runtime.castogscanstatus+0x5c>
  4249dc:	89 c8 	movl	%ecx, %eax
  4249de:	48 8b 5c 24 20 	movq	32(%rsp), %rbx
  4249e3:	f0 	lock
  4249e4:	0f b1 93 90 00 00 00 	cmpxchgl	%edx, 144(%rbx)
  4249eb:	0f 94 c1 	sete	%cl
  4249ee:	88 4c 24 30 	movb	%cl, 48(%rsp)
  4249f2:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  4249f7:	48 83 c4 18 	addq	$24, %rsp
  4249fb:	c3 	retq
  4249fc:	e8 ff d0 ff ff 	callq	-12033 <runtime.printlock>
  424a01:	48 8d 05 42 80 04 00 	leaq	294978(%rip), %rax
  424a08:	48 89 04 24 	movq	%rax, (%rsp)
  424a0c:	48 c7 44 24 08 21 00 00 00 	movq	$33, 8(%rsp)
  424a15:	e8 26 da ff ff 	callq	-9690 <runtime.printstring>
  424a1a:	8b 44 24 28 	movl	40(%rsp), %eax
  424a1e:	48 89 04 24 	movq	%rax, (%rsp)
  424a22:	e8 c9 d8 ff ff 	callq	-10039 <runtime.printhex>
  424a27:	48 8d 05 91 55 04 00 	leaq	284049(%rip), %rax
  424a2e:	48 89 04 24 	movq	%rax, (%rsp)
  424a32:	48 c7 44 24 08 08 00 00 00 	movq	$8, 8(%rsp)
  424a3b:	e8 00 da ff ff 	callq	-9728 <runtime.printstring>
  424a40:	8b 44 24 2c 	movl	44(%rsp), %eax
  424a44:	48 89 04 24 	movq	%rax, (%rsp)
  424a48:	e8 a3 d8 ff ff 	callq	-10077 <runtime.printhex>
  424a4d:	e8 3e d3 ff ff 	callq	-11458 <runtime.printnl>
  424a52:	e8 29 d1 ff ff 	callq	-11991 <runtime.printunlock>
  424a57:	48 8d 05 64 60 04 00 	leaq	286820(%rip), %rax
  424a5e:	48 89 04 24 	movq	%rax, (%rsp)
  424a62:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  424a6b:	e8 60 c7 ff ff 	callq	-14496 <runtime.throw>
  424a70:	0f 0b 	ud2
  424a72:	e8 f9 fa 01 00 	callq	129785 <runtime.morestack_noctxt>
  424a77:	e9 24 ff ff ff 	jmp	-220 <runtime.castogscanstatus>
  424a7c:	cc 	int3
  424a7d:	cc 	int3
  424a7e:	cc 	int3
  424a7f:	cc 	int3

runtime.casgstatus:
  424a80:	48 83 ec 58 	subq	$88, %rsp
  424a84:	48 89 6c 24 50 	movq	%rbp, 80(%rsp)
  424a89:	48 8d 6c 24 50 	leaq	80(%rsp), %rbp
  424a8e:	8b 44 24 68 	movl	104(%rsp), %eax
  424a92:	0f ba e0 0c 	btl	$12, %eax
  424a96:	0f 83 b9 01 00 00 	jae	441 <runtime.casgstatus+0x1d5>
  424a9c:	48 8d 0d 8d e8 01 00 	leaq	125069(%rip), %rcx
  424aa3:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  424aa8:	89 44 24 30 	movl	%eax, 48(%rsp)
  424aac:	8b 4c 24 6c 	movl	108(%rsp), %ecx
  424ab0:	89 4c 24 34 	movl	%ecx, 52(%rsp)
  424ab4:	48 8d 54 24 28 	leaq	40(%rsp), %rdx
  424ab9:	48 89 14 24 	movq	%rdx, (%rsp)
  424abd:	e8 5e f9 01 00 	callq	129374 <runtime.systemstack>
  424ac2:	8b 44 24 68 	movl	104(%rsp), %eax
  424ac6:	83 f8 02 	cmpl	$2, %eax
  424ac9:	0f 85 7c 01 00 00 	jne	380 <runtime.casgstatus+0x1cb>
  424acf:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  424ad4:	0f b6 91 c4 00 00 00 	movzbl	196(%rcx), %edx
  424adb:	84 d2 	testb	%dl, %dl
  424add:	0f 85 2f 01 00 00 	jne	303 <runtime.casgstatus+0x192>
  424ae3:	31 d2 	xorl	%edx, %edx
  424ae5:	31 db 	xorl	%ebx, %ebx
  424ae7:	eb 4c 	jmp	76 <runtime.casgstatus+0xb5>
  424ae9:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  424aee:	c7 04 24 01 00 00 00 	movl	$1, (%rsp)
  424af5:	e8 76 10 02 00 	callq	135286 <runtime.procyield>
  424afa:	48 8b 44 24 08 	movq	8(%rsp), %rax
  424aff:	48 ff c0 	incq	%rax
  424b02:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  424b07:	48 83 f8 0a 	cmpq	$10, %rax
  424b0b:	7d 7e 	jge	126 <runtime.casgstatus+0x10b>
  424b0d:	48 8b 54 24 60 	movq	96(%rsp), %rdx
  424b12:	8b 9a 90 00 00 00 	movl	144(%rdx), %ebx
  424b18:	8b 74 24 68 	movl	104(%rsp), %esi
  424b1c:	39 de 	cmpl	%ebx, %esi
  424b1e:	75 c9 	jne	-55 <runtime.casgstatus+0x69>
  424b20:	48 8b 7c 24 18 	movq	24(%rsp), %rdi
  424b25:	48 ff c7 	incq	%rdi
  424b28:	89 f0 	movl	%esi, %eax
  424b2a:	48 89 fa 	movq	%rdi, %rdx
  424b2d:	48 89 cb 	movq	%rcx, %rbx
  424b30:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  424b35:	8b 74 24 6c 	movl	108(%rsp), %esi
  424b39:	f0 	lock
  424b3a:	0f b1 b1 90 00 00 00 	cmpxchgl	%esi, 144(%rcx)
  424b41:	40 0f 94 c7 	sete	%dil
  424b45:	40 84 ff 	testb	%dil, %dil
  424b48:	0f 85 ae 00 00 00 	jne	174 <runtime.casgstatus+0x17c>
  424b4e:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  424b53:	8b 44 24 68 	movl	104(%rsp), %eax
  424b57:	83 f8 04 	cmpl	$4, %eax
  424b5a:	75 0b 	jne	11 <runtime.casgstatus+0xe7>
  424b5c:	8b b9 90 00 00 00 	movl	144(%rcx), %edi
  424b62:	83 ff 01 	cmpl	$1, %edi
  424b65:	74 64 	je	100 <runtime.casgstatus+0x14b>
  424b67:	48 85 d2 	testq	%rdx, %rdx
  424b6a:	74 4d 	je	77 <runtime.casgstatus+0x139>
  424b6c:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  424b71:	e8 ba 2e 02 00 	callq	143034 <runtime.nanotime>
  424b76:	48 8b 04 24 	movq	(%rsp), %rax
  424b7a:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  424b7f:	48 39 c8 	cmpq	%rcx, %rax
  424b82:	7d 12 	jge	18 <runtime.casgstatus+0x116>
  424b84:	31 c0 	xorl	%eax, %eax
  424b86:	e9 7c ff ff ff 	jmp	-132 <runtime.casgstatus+0x87>
  424b8b:	48 8b 54 24 60 	movq	96(%rsp), %rdx
  424b90:	8b 74 24 68 	movl	104(%rsp), %esi
  424b94:	eb 8a 	jmp	-118 <runtime.casgstatus+0xa0>
  424b96:	e8 b5 33 02 00 	callq	144309 <runtime.osyield>
  424b9b:	e8 90 2e 02 00 	callq	142992 <runtime.nanotime>
  424ba0:	48 8b 04 24 	movq	(%rsp), %rax
  424ba4:	48 8d 88 c4 09 00 00 	leaq	2500(%rax), %rcx
  424bab:	48 8b 54 24 60 	movq	96(%rsp), %rdx
  424bb0:	8b 74 24 68 	movl	104(%rsp), %esi
  424bb4:	e9 67 ff ff ff 	jmp	-153 <runtime.casgstatus+0xa0>
  424bb9:	e8 72 2e 02 00 	callq	142962 <runtime.nanotime>
  424bbe:	48 8b 04 24 	movq	(%rsp), %rax
  424bc2:	48 8d 98 88 13 00 00 	leaq	5000(%rax), %rbx
  424bc9:	eb a1 	jmp	-95 <runtime.casgstatus+0xec>
  424bcb:	48 89 5c 24 20 	movq	%rbx, 32(%rsp)
  424bd0:	48 8d 05 01 94 04 00 	leaq	300033(%rip), %rax
  424bd7:	48 89 04 24 	movq	%rax, (%rsp)
  424bdb:	e8 40 f8 01 00 	callq	129088 <runtime.systemstack>
  424be0:	8b 44 24 68 	movl	104(%rsp), %eax
  424be4:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  424be9:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  424bee:	48 8b 5c 24 20 	movq	32(%rsp), %rbx
  424bf3:	8b 74 24 6c 	movl	108(%rsp), %esi
  424bf7:	e9 6b ff ff ff 	jmp	-149 <runtime.casgstatus+0xe7>
  424bfc:	83 fe 02 	cmpl	$2, %esi
  424bff:	75 07 	jne	7 <runtime.casgstatus+0x188>
  424c01:	c6 81 c4 00 00 00 00 	movb	$0, 196(%rcx)
  424c08:	48 8b 6c 24 50 	movq	80(%rsp), %rbp
  424c0d:	48 83 c4 58 	addq	$88, %rsp
  424c11:	c3 	retq
  424c12:	48 8d 15 d7 e7 01 00 	leaq	124887(%rip), %rdx
  424c19:	48 89 54 24 38 	movq	%rdx, 56(%rsp)
  424c1e:	89 44 24 40 	movl	%eax, 64(%rsp)
  424c22:	8b 54 24 6c 	movl	108(%rsp), %edx
  424c26:	89 54 24 44 	movl	%edx, 68(%rsp)
  424c2a:	48 89 4c 24 48 	movq	%rcx, 72(%rsp)
  424c2f:	48 8d 5c 24 38 	leaq	56(%rsp), %rbx
  424c34:	48 89 1c 24 	movq	%rbx, (%rsp)
  424c38:	e8 e3 f7 01 00 	callq	128995 <runtime.systemstack>
  424c3d:	8b 44 24 68 	movl	104(%rsp), %eax
  424c41:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  424c46:	e9 98 fe ff ff 	jmp	-360 <runtime.casgstatus+0x63>
  424c4b:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  424c50:	e9 8e fe ff ff 	jmp	-370 <runtime.casgstatus+0x63>
  424c55:	8b 4c 24 6c 	movl	108(%rsp), %ecx
  424c59:	0f ba e1 0c 	btl	$12, %ecx
  424c5d:	0f 82 39 fe ff ff 	jb	-455 <runtime.casgstatus+0x1c>
  424c63:	39 c1 	cmpl	%eax, %ecx
  424c65:	0f 84 31 fe ff ff 	je	-463 <runtime.casgstatus+0x1c>
  424c6b:	e9 52 fe ff ff 	jmp	-430 <runtime.casgstatus+0x42>

runtime.scang:
  424c70:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  424c79:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  424c7d:	0f 86 7a 03 00 00 	jbe	890 <runtime.scang+0x38d>
  424c83:	48 83 ec 48 	subq	$72, %rsp
  424c87:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  424c8c:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  424c91:	48 8b 44 24 50 	movq	80(%rsp), %rax
  424c96:	c6 80 c3 00 00 00 00 	movb	$0, 195(%rax)
  424c9d:	31 c9 	xorl	%ecx, %ecx
  424c9f:	31 d2 	xorl	%edx, %edx
  424ca1:	eb 11 	jmp	17 <runtime.scang+0x44>
  424ca3:	48 8b 5c 24 28 	movq	40(%rsp), %rbx
  424ca8:	48 8d 4b 01 	leaq	1(%rbx), %rcx
  424cac:	48 89 c2 	movq	%rax, %rdx
  424caf:	48 8b 44 24 50 	movq	80(%rsp), %rax
  424cb4:	0f b6 98 c3 00 00 00 	movzbl	195(%rax), %ebx
  424cbb:	84 db 	testb	%bl, %bl
  424cbd:	0f 85 7a 01 00 00 	jne	378 <runtime.scang+0x1cd>
  424cc3:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  424cc8:	8b 98 90 00 00 00 	movl	144(%rax), %ebx
  424cce:	83 fb 04 	cmpl	$4, %ebx
  424cd1:	0f 87 9d 01 00 00 	ja	413 <runtime.scang+0x204>
  424cd7:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  424cdc:	83 fb 01 	cmpl	$1, %ebx
  424cdf:	0f 84 0b 01 00 00 	je	267 <runtime.scang+0x180>
  424ce5:	83 fb 02 	cmpl	$2, %ebx
  424ce8:	0f 85 f6 00 00 00 	jne	246 <runtime.scang+0x174>
  424cee:	0f b6 98 c2 00 00 00 	movzbl	194(%rax), %ebx
  424cf5:	84 db 	testb	%bl, %bl
  424cf7:	74 76 	je	118 <runtime.scang+0xff>
  424cf9:	0f b6 98 c0 00 00 00 	movzbl	192(%rax), %ebx
  424d00:	84 db 	testb	%bl, %bl
  424d02:	74 6b 	je	107 <runtime.scang+0xff>
  424d04:	48 8b 58 10 	movq	16(%rax), %rbx
  424d08:	48 81 fb de fa ff ff 	cmpq	$-1314, %rbx
  424d0f:	75 5e 	jne	94 <runtime.scang+0xff>
  424d11:	48 85 c9 	testq	%rcx, %rcx
  424d14:	74 47 	je	71 <runtime.scang+0xed>
  424d16:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  424d1b:	e8 10 2d 02 00 	callq	142608 <runtime.nanotime>
  424d20:	48 8b 04 24 	movq	(%rsp), %rax
  424d24:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  424d29:	48 39 c8 	cmpq	%rcx, %rax
  424d2c:	7d 16 	jge	22 <runtime.scang+0xd4>
  424d2e:	c7 04 24 0a 00 00 00 	movl	$10, (%rsp)
  424d35:	e8 36 0e 02 00 	callq	134710 <runtime.procyield>
  424d3a:	48 8b 44 24 30 	movq	48(%rsp), %rax
  424d3f:	e9 5f ff ff ff 	jmp	-161 <runtime.scang+0x33>
  424d44:	e8 07 32 02 00 	callq	143879 <runtime.osyield>
  424d49:	e8 e2 2c 02 00 	callq	142562 <runtime.nanotime>
  424d4e:	48 8b 04 24 	movq	(%rsp), %rax
  424d52:	48 05 88 13 00 00 	addq	$5000, %rax
  424d58:	e9 46 ff ff ff 	jmp	-186 <runtime.scang+0x33>
  424d5d:	e8 ce 2c 02 00 	callq	142542 <runtime.nanotime>
  424d62:	48 8b 04 24 	movq	(%rsp), %rax
  424d66:	48 8d 90 10 27 00 00 	leaq	10000(%rax), %rdx
  424d6d:	eb a7 	jmp	-89 <runtime.scang+0xa6>
  424d6f:	48 89 04 24 	movq	%rax, (%rsp)
  424d73:	48 b9 02 00 00 00 02 10 00 00 	movabsq	$17600775979010, %rcx
  424d7d:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  424d82:	e8 19 fc ff ff 	callq	-999 <runtime.castogscanstatus>
  424d87:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  424d8c:	84 c0 	testb	%al, %al
  424d8e:	74 28 	je	40 <runtime.scang+0x148>
  424d90:	48 8b 44 24 50 	movq	80(%rsp), %rax
  424d95:	0f b6 88 c3 00 00 00 	movzbl	195(%rax), %ecx
  424d9c:	84 c9 	testb	%cl, %cl
  424d9e:	74 2c 	je	44 <runtime.scang+0x15c>
  424da0:	48 89 04 24 	movq	%rax, (%rsp)
  424da4:	48 b9 02 10 00 00 02 00 00 00 	movabsq	$8589938690, %rcx
  424dae:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  424db3:	e8 98 f7 ff ff 	callq	-2152 <runtime.casfrom_Gscanstatus>
  424db8:	48 8b 44 24 50 	movq	80(%rsp), %rax
  424dbd:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  424dc2:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  424dc7:	e9 45 ff ff ff 	jmp	-187 <runtime.scang+0xa1>
  424dcc:	c6 80 c2 00 00 00 01 	movb	$1, 194(%rax)
  424dd3:	c6 80 c0 00 00 00 01 	movb	$1, 192(%rax)
  424dda:	48 c7 40 10 de fa ff ff 	movq	$-1314, 16(%rax)
  424de2:	eb bc 	jmp	-68 <runtime.scang+0x130>
  424de4:	8d 73 fd 	leal	-3(%rbx), %esi
  424de7:	83 fe 01 	cmpl	$1, %esi
  424dea:	0f 87 a9 00 00 00 	ja	169 <runtime.scang+0x229>
  424df0:	48 89 04 24 	movq	%rax, (%rsp)
  424df4:	89 5c 24 08 	movl	%ebx, 8(%rsp)
  424df8:	81 cb 00 10 00 00 	orl	$4096, %ebx
  424dfe:	89 5c 24 0c 	movl	%ebx, 12(%rsp)
  424e02:	e8 99 fb ff ff 	callq	-1127 <runtime.castogscanstatus>
  424e07:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  424e0c:	84 c0 	testb	%al, %al
  424e0e:	75 14 	jne	20 <runtime.scang+0x1b4>
  424e10:	48 8b 44 24 50 	movq	80(%rsp), %rax
  424e15:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  424e1a:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  424e1f:	e9 ed fe ff ff 	jmp	-275 <runtime.scang+0xa1>
  424e24:	48 8b 44 24 50 	movq	80(%rsp), %rax
  424e29:	0f b6 88 c3 00 00 00 	movzbl	195(%rax), %ecx
  424e30:	84 c9 	testb	%cl, %cl
  424e32:	74 1f 	je	31 <runtime.scang+0x1e3>
  424e34:	48 89 04 24 	movq	%rax, (%rsp)
  424e38:	e8 d3 01 00 00 	callq	467 <runtime.restartg>
  424e3d:	48 8b 44 24 50 	movq	80(%rsp), %rax
  424e42:	c6 80 c2 00 00 00 00 	movb	$0, 194(%rax)
  424e49:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  424e4e:	48 83 c4 48 	addq	$72, %rsp
  424e52:	c3 	retq
  424e53:	48 89 04 24 	movq	%rax, (%rsp)
  424e57:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  424e5c:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  424e61:	e8 3a 05 ff ff 	callq	-64198 <runtime.scanstack>
  424e66:	48 8b 44 24 50 	movq	80(%rsp), %rax
  424e6b:	c6 80 c3 00 00 00 01 	movb	$1, 195(%rax)
  424e72:	eb c0 	jmp	-64 <runtime.scang+0x1c4>
  424e74:	83 fb 06 	cmpl	$6, %ebx
  424e77:	74 17 	je	23 <runtime.scang+0x220>
  424e79:	83 fb 08 	cmpl	$8, %ebx
  424e7c:	0f 84 8f fe ff ff 	je	-369 <runtime.scang+0xa1>
  424e82:	81 fb 04 10 00 00 	cmpl	$4100, %ebx
  424e88:	0f 84 83 fe ff ff 	je	-381 <runtime.scang+0xa1>
  424e8e:	eb 09 	jmp	9 <runtime.scang+0x229>
  424e90:	c6 80 c3 00 00 00 01 	movb	$1, 195(%rax)
  424e97:	eb a4 	jmp	-92 <runtime.scang+0x1cd>
  424e99:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  424ea2:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  424ea7:	8b 90 90 00 00 00 	movl	144(%rax), %edx
  424ead:	89 54 24 18 	movl	%edx, 24(%rsp)
  424eb1:	48 8b 98 98 00 00 00 	movq	152(%rax), %rbx
  424eb8:	48 89 5c 24 30 	movq	%rbx, 48(%rsp)
  424ebd:	e8 3e cc ff ff 	callq	-13250 <runtime.printlock>
  424ec2:	48 8d 05 99 5c 04 00 	leaq	285849(%rip), %rax
  424ec9:	48 89 04 24 	movq	%rax, (%rsp)
  424ecd:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  424ed6:	e8 65 d5 ff ff 	callq	-10907 <runtime.printstring>
  424edb:	48 8b 44 24 50 	movq	80(%rsp), %rax
  424ee0:	48 89 04 24 	movq	%rax, (%rsp)
  424ee4:	e8 17 d5 ff ff 	callq	-10985 <runtime.printpointer>
  424ee9:	48 8d 05 a2 4f 04 00 	leaq	282530(%rip), %rax
  424ef0:	48 89 04 24 	movq	%rax, (%rsp)
  424ef4:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  424efd:	e8 3e d5 ff ff 	callq	-10946 <runtime.printstring>
  424f02:	48 8b 44 24 30 	movq	48(%rsp), %rax
  424f07:	48 89 04 24 	movq	%rax, (%rsp)
  424f0b:	e8 70 d3 ff ff 	callq	-11408 <runtime.printint>
  424f10:	48 8d 05 fd 5e 04 00 	leaq	286461(%rip), %rax
  424f17:	48 89 04 24 	movq	%rax, (%rsp)
  424f1b:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  424f24:	e8 17 d5 ff ff 	callq	-10985 <runtime.printstring>
  424f29:	8b 44 24 18 	movl	24(%rsp), %eax
  424f2d:	89 c0 	movl	%eax, %eax
  424f2f:	48 89 04 24 	movq	%rax, (%rsp)
  424f33:	e8 38 d2 ff ff 	callq	-11720 <runtime.printuint>
  424f38:	e8 53 ce ff ff 	callq	-12717 <runtime.printnl>
  424f3d:	e8 3e cc ff ff 	callq	-13250 <runtime.printunlock>
  424f42:	48 8b 44 24 38 	movq	56(%rsp), %rax
  424f47:	8b 88 90 00 00 00 	movl	144(%rax), %ecx
  424f4d:	89 4c 24 1c 	movl	%ecx, 28(%rsp)
  424f51:	48 8b 90 98 00 00 00 	movq	152(%rax), %rdx
  424f58:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  424f5d:	e8 9e cb ff ff 	callq	-13410 <runtime.printlock>
  424f62:	48 8d 05 e9 5b 04 00 	leaq	285673(%rip), %rax
  424f69:	48 89 04 24 	movq	%rax, (%rsp)
  424f6d:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  424f76:	e8 c5 d4 ff ff 	callq	-11067 <runtime.printstring>
  424f7b:	48 8b 44 24 38 	movq	56(%rsp), %rax
  424f80:	48 89 04 24 	movq	%rax, (%rsp)
  424f84:	e8 77 d4 ff ff 	callq	-11145 <runtime.printpointer>
  424f89:	48 8d 05 02 4f 04 00 	leaq	282370(%rip), %rax
  424f90:	48 89 04 24 	movq	%rax, (%rsp)
  424f94:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  424f9d:	e8 9e d4 ff ff 	callq	-11106 <runtime.printstring>
  424fa2:	48 8b 44 24 30 	movq	48(%rsp), %rax
  424fa7:	48 89 04 24 	movq	%rax, (%rsp)
  424fab:	e8 d0 d2 ff ff 	callq	-11568 <runtime.printint>
  424fb0:	48 8d 05 4a 5e 04 00 	leaq	286282(%rip), %rax
  424fb7:	48 89 04 24 	movq	%rax, (%rsp)
  424fbb:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  424fc4:	e8 77 d4 ff ff 	callq	-11145 <runtime.printstring>
  424fc9:	8b 44 24 1c 	movl	28(%rsp), %eax
  424fcd:	89 c0 	movl	%eax, %eax
  424fcf:	48 89 04 24 	movq	%rax, (%rsp)
  424fd3:	e8 98 d1 ff ff 	callq	-11880 <runtime.printuint>
  424fd8:	e8 b3 cd ff ff 	callq	-12877 <runtime.printnl>
  424fdd:	e8 9e cb ff ff 	callq	-13410 <runtime.printunlock>
  424fe2:	48 8d 05 9c 63 04 00 	leaq	287644(%rip), %rax
  424fe9:	48 89 04 24 	movq	%rax, (%rsp)
  424fed:	48 c7 44 24 08 15 00 00 00 	movq	$21, 8(%rsp)
  424ff6:	e8 d5 c1 ff ff 	callq	-15915 <runtime.throw>
  424ffb:	0f 0b 	ud2
  424ffd:	e8 6e f5 01 00 	callq	128366 <runtime.morestack_noctxt>
  425002:	e9 69 fc ff ff 	jmp	-919 <runtime.scang>
  425007:	cc 	int3
  425008:	cc 	int3
  425009:	cc 	int3
  42500a:	cc 	int3
  42500b:	cc 	int3
  42500c:	cc 	int3
  42500d:	cc 	int3
  42500e:	cc 	int3
  42500f:	cc 	int3

runtime.restartg:
  425010:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  425019:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42501d:	0f 86 b8 01 00 00 	jbe	440 <runtime.restartg+0x1cb>
  425023:	48 83 ec 30 	subq	$48, %rsp
  425027:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  42502c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  425031:	48 8b 44 24 38 	movq	56(%rsp), %rax
  425036:	8b 88 90 00 00 00 	movl	144(%rax), %ecx
  42503c:	83 f9 06 	cmpl	$6, %ecx
  42503f:	75 0a 	jne	10 <runtime.restartg+0x3b>
  425041:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  425046:	48 83 c4 30 	addq	$48, %rsp
  42504a:	c3 	retq
  42504b:	81 f9 01 10 00 00 	cmpl	$4097, %ecx
  425051:	75 19 	jne	25 <runtime.restartg+0x5c>
  425053:	48 89 04 24 	movq	%rax, (%rsp)
  425057:	89 4c 24 08 	movl	%ecx, 8(%rsp)
  42505b:	81 e1 ff ef ff ff 	andl	$4294963199, %ecx
  425061:	89 4c 24 0c 	movl	%ecx, 12(%rsp)
  425065:	e8 e6 f4 ff ff 	callq	-2842 <runtime.casfrom_Gscanstatus>
  42506a:	eb d5 	jmp	-43 <runtime.restartg+0x31>
  42506c:	8d 91 fd ef ff ff 	leal	-4099(%rcx), %edx
  425072:	83 fa 01 	cmpl	$1, %edx
  425075:	76 dc 	jbe	-36 <runtime.restartg+0x43>
  425077:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  425080:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  425085:	8b 90 90 00 00 00 	movl	144(%rax), %edx
  42508b:	89 54 24 10 	movl	%edx, 16(%rsp)
  42508f:	48 8b 98 98 00 00 00 	movq	152(%rax), %rbx
  425096:	48 89 5c 24 18 	movq	%rbx, 24(%rsp)
  42509b:	e8 60 ca ff ff 	callq	-13728 <runtime.printlock>
  4250a0:	48 8d 05 bb 5a 04 00 	leaq	285371(%rip), %rax
  4250a7:	48 89 04 24 	movq	%rax, (%rsp)
  4250ab:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  4250b4:	e8 87 d3 ff ff 	callq	-11385 <runtime.printstring>
  4250b9:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4250be:	48 89 04 24 	movq	%rax, (%rsp)
  4250c2:	e8 39 d3 ff ff 	callq	-11463 <runtime.printpointer>
  4250c7:	48 8d 05 c4 4d 04 00 	leaq	282052(%rip), %rax
  4250ce:	48 89 04 24 	movq	%rax, (%rsp)
  4250d2:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  4250db:	e8 60 d3 ff ff 	callq	-11424 <runtime.printstring>
  4250e0:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4250e5:	48 89 04 24 	movq	%rax, (%rsp)
  4250e9:	e8 92 d1 ff ff 	callq	-11886 <runtime.printint>
  4250ee:	48 8d 05 1f 5d 04 00 	leaq	285983(%rip), %rax
  4250f5:	48 89 04 24 	movq	%rax, (%rsp)
  4250f9:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  425102:	e8 39 d3 ff ff 	callq	-11463 <runtime.printstring>
  425107:	8b 44 24 10 	movl	16(%rsp), %eax
  42510b:	89 c0 	movl	%eax, %eax
  42510d:	48 89 04 24 	movq	%rax, (%rsp)
  425111:	e8 5a d0 ff ff 	callq	-12198 <runtime.printuint>
  425116:	e8 75 cc ff ff 	callq	-13195 <runtime.printnl>
  42511b:	e8 60 ca ff ff 	callq	-13728 <runtime.printunlock>
  425120:	48 8b 44 24 20 	movq	32(%rsp), %rax
  425125:	8b 88 90 00 00 00 	movl	144(%rax), %ecx
  42512b:	89 4c 24 14 	movl	%ecx, 20(%rsp)
  42512f:	48 8b 90 98 00 00 00 	movq	152(%rax), %rdx
  425136:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  42513b:	e8 c0 c9 ff ff 	callq	-13888 <runtime.printlock>
  425140:	48 8d 05 0b 5a 04 00 	leaq	285195(%rip), %rax
  425147:	48 89 04 24 	movq	%rax, (%rsp)
  42514b:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  425154:	e8 e7 d2 ff ff 	callq	-11545 <runtime.printstring>
  425159:	48 8b 44 24 20 	movq	32(%rsp), %rax
  42515e:	48 89 04 24 	movq	%rax, (%rsp)
  425162:	e8 99 d2 ff ff 	callq	-11623 <runtime.printpointer>
  425167:	48 8d 05 24 4d 04 00 	leaq	281892(%rip), %rax
  42516e:	48 89 04 24 	movq	%rax, (%rsp)
  425172:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  42517b:	e8 c0 d2 ff ff 	callq	-11584 <runtime.printstring>
  425180:	48 8b 44 24 18 	movq	24(%rsp), %rax
  425185:	48 89 04 24 	movq	%rax, (%rsp)
  425189:	e8 f2 d0 ff ff 	callq	-12046 <runtime.printint>
  42518e:	48 8d 05 6c 5c 04 00 	leaq	285804(%rip), %rax
  425195:	48 89 04 24 	movq	%rax, (%rsp)
  425199:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  4251a2:	e8 99 d2 ff ff 	callq	-11623 <runtime.printstring>
  4251a7:	8b 44 24 14 	movl	20(%rsp), %eax
  4251ab:	89 c0 	movl	%eax, %eax
  4251ad:	48 89 04 24 	movq	%rax, (%rsp)
  4251b1:	e8 ba cf ff ff 	callq	-12358 <runtime.printuint>
  4251b6:	e8 d5 cb ff ff 	callq	-13355 <runtime.printnl>
  4251bb:	e8 c0 c9 ff ff 	callq	-13888 <runtime.printunlock>
  4251c0:	48 8d 05 5c 6c 04 00 	leaq	289884(%rip), %rax
  4251c7:	48 89 04 24 	movq	%rax, (%rsp)
  4251cb:	48 c7 44 24 08 1b 00 00 00 	movq	$27, 8(%rsp)
  4251d4:	e8 f7 bf ff ff 	callq	-16393 <runtime.throw>
  4251d9:	0f 0b 	ud2
  4251db:	e8 90 f3 01 00 	callq	127888 <runtime.morestack_noctxt>
  4251e0:	e9 2b fe ff ff 	jmp	-469 <runtime.restartg>
  4251e5:	cc 	int3
  4251e6:	cc 	int3
  4251e7:	cc 	int3
  4251e8:	cc 	int3
  4251e9:	cc 	int3
  4251ea:	cc 	int3
  4251eb:	cc 	int3
  4251ec:	cc 	int3
  4251ed:	cc 	int3
  4251ee:	cc 	int3
  4251ef:	cc 	int3

runtime.stopTheWorldWithSema:
  4251f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4251f9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4251fd:	0f 86 b5 02 00 00 	jbe	693 <runtime.stopTheWorldWithSema+0x2c8>
  425203:	48 83 ec 60 	subq	$96, %rsp
  425207:	48 89 6c 24 58 	movq	%rbp, 88(%rsp)
  42520c:	48 8d 6c 24 58 	leaq	88(%rsp), %rbp
  425211:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  42521a:	48 8b 48 30 	movq	48(%rax), %rcx
  42521e:	8b 89 00 01 00 00 	movl	256(%rcx), %ecx
  425224:	85 c9 	testl	%ecx, %ecx
  425226:	0f 8f 71 02 00 00 	jg	625 <runtime.stopTheWorldWithSema+0x2ad>
  42522c:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  425231:	48 8d 05 f8 26 08 00 	leaq	534264(%rip), %rax
  425238:	48 89 04 24 	movq	%rax, (%rsp)
  42523c:	e8 df 42 fe ff 	callq	-113953 <runtime.lock>
  425241:	8b 05 99 e6 09 00 	movl	648857(%rip), %eax
  425247:	89 05 af 27 08 00 	movl	%eax, 534447(%rip)
  42524d:	b8 01 00 00 00 	movl	$1, %eax
  425252:	48 8d 0d 9f 27 08 00 	leaq	534431(%rip), %rcx
  425259:	87 01 	xchgl	%eax, (%rcx)
  42525b:	e8 10 7e 00 00 	callq	32272 <runtime.preemptall>
  425260:	48 8b 44 24 48 	movq	72(%rsp), %rax
  425265:	48 8b 40 30 	movq	48(%rax), %rax
  425269:	48 8b 80 d0 00 00 00 	movq	208(%rax), %rax
  425270:	c7 40 0c 03 00 00 00 	movl	$3, 12(%rax)
  425277:	83 05 7e 27 08 00 ff 	addl	$-1, 534398(%rip)
  42527e:	48 8b 05 33 24 08 00 	movq	533555(%rip), %rax
  425285:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  42528a:	48 8b 0d 1f 24 08 00 	movq	533535(%rip), %rcx
  425291:	48 89 4c 24 50 	movq	%rcx, 80(%rsp)
  425296:	31 d2 	xorl	%edx, %edx
  425298:	eb 06 	jmp	6 <runtime.stopTheWorldWithSema+0xb0>
  42529a:	48 ff c2 	incq	%rdx
  42529d:	48 89 f8 	movq	%rdi, %rax
  4252a0:	48 39 c2 	cmpq	%rax, %rdx
  4252a3:	0f 8d 97 00 00 00 	jge	151 <runtime.stopTheWorldWithSema+0x150>
  4252a9:	48 8b 1c d1 	movq	(%rcx,%rdx,8), %rbx
  4252ad:	8b 73 0c 	movl	12(%rbx), %esi
  4252b0:	83 fe 02 	cmpl	$2, %esi
  4252b3:	75 6f 	jne	111 <runtime.stopTheWorldWithSema+0x134>
  4252b5:	48 89 c7 	movq	%rax, %rdi
  4252b8:	89 f0 	movl	%esi, %eax
  4252ba:	41 b8 03 00 00 00 	movl	$3, %r8d
  4252c0:	f0 	lock
  4252c1:	44 0f b1 43 0c 	cmpxchgl	%r8d, 12(%rbx)
  4252c6:	40 0f 94 c6 	sete	%sil
  4252ca:	40 84 f6 	testb	%sil, %sil
  4252cd:	74 cb 	je	-53 <runtime.stopTheWorldWithSema+0xaa>
  4252cf:	0f b6 35 fa e4 08 00 	movzbl	582906(%rip), %esi
  4252d6:	40 84 f6 	testb	%sil, %sil
  4252d9:	75 0c 	jne	12 <runtime.stopTheWorldWithSema+0xf7>
  4252db:	ff 43 1c 	incl	28(%rbx)
  4252de:	83 05 17 27 08 00 ff 	addl	$-1, 534295(%rip)
  4252e5:	eb b3 	jmp	-77 <runtime.stopTheWorldWithSema+0xaa>
  4252e7:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  4252ec:	48 89 5c 24 38 	movq	%rbx, 56(%rsp)
  4252f1:	48 89 1c 24 	movq	%rbx, (%rsp)
  4252f5:	e8 06 5c 01 00 	callq	89094 <runtime.traceGoSysBlock>
  4252fa:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4252ff:	48 89 04 24 	movq	%rax, (%rsp)
  425303:	e8 e8 4f 01 00 	callq	85992 <runtime.traceProcStop>
  425308:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  42530d:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  425312:	48 8b 5c 24 38 	movq	56(%rsp), %rbx
  425317:	48 8b 7c 24 30 	movq	48(%rsp), %rdi
  42531c:	41 b8 03 00 00 00 	movl	$3, %r8d
  425322:	eb b7 	jmp	-73 <runtime.stopTheWorldWithSema+0xeb>
  425324:	48 89 c7 	movq	%rax, %rdi
  425327:	41 b8 03 00 00 00 	movl	$3, %r8d
  42532d:	e9 68 ff ff ff 	jmp	-152 <runtime.stopTheWorldWithSema+0xaa>
  425332:	c7 40 0c 03 00 00 00 	movl	$3, 12(%rax)
  425339:	83 05 bc 26 08 00 ff 	addl	$-1, 534204(%rip)
  425340:	48 8b 05 21 26 08 00 	movq	534049(%rip), %rax
  425347:	48 85 c0 	testq	%rax, %rax
  42534a:	74 1e 	je	30 <runtime.stopTheWorldWithSema+0x17a>
  42534c:	48 8b 48 10 	movq	16(%rax), %rcx
  425350:	48 89 0d 11 26 08 00 	movq	%rcx, 534033(%rip)
  425357:	b9 ff ff ff ff 	movl	$4294967295, %ecx
  42535c:	48 8d 15 0d 26 08 00 	leaq	534029(%rip), %rdx
  425363:	f0 	lock
  425364:	0f c1 0a 	xaddl	%ecx, (%rdx)
  425367:	48 85 c0 	testq	%rax, %rax
  42536a:	75 c6 	jne	-58 <runtime.stopTheWorldWithSema+0x142>
  42536c:	8b 05 8a 26 08 00 	movl	534154(%rip), %eax
  425372:	89 44 24 1c 	movl	%eax, 28(%rsp)
  425376:	48 8d 0d b3 25 08 00 	leaq	533939(%rip), %rcx
  42537d:	48 89 0c 24 	movq	%rcx, (%rsp)
  425381:	e8 3a 43 fe ff 	callq	-113862 <runtime.unlock>
  425386:	8b 44 24 1c 	movl	28(%rsp), %eax
  42538a:	85 c0 	testl	%eax, %eax
  42538c:	0f 8f c0 00 00 00 	jg	192 <runtime.stopTheWorldWithSema+0x262>
  425392:	8b 05 64 26 08 00 	movl	534116(%rip), %eax
  425398:	85 c0 	testl	%eax, %eax
  42539a:	0f 85 9f 00 00 00 	jne	159 <runtime.stopTheWorldWithSema+0x24f>
  4253a0:	48 8b 05 11 23 08 00 	movq	533265(%rip), %rax
  4253a7:	48 8b 0d 02 23 08 00 	movq	533250(%rip), %rcx
  4253ae:	31 d2 	xorl	%edx, %edx
  4253b0:	31 db 	xorl	%ebx, %ebx
  4253b2:	31 f6 	xorl	%esi, %esi
  4253b4:	eb 0c 	jmp	12 <runtime.stopTheWorldWithSema+0x1d2>
  4253b6:	48 ff c2 	incq	%rdx
  4253b9:	48 89 df 	movq	%rbx, %rdi
  4253bc:	48 89 f3 	movq	%rsi, %rbx
  4253bf:	48 89 fe 	movq	%rdi, %rsi
  4253c2:	48 39 c2 	cmpq	%rax, %rdx
  4253c5:	7d 25 	jge	37 <runtime.stopTheWorldWithSema+0x1fc>
  4253c7:	48 8b 3c d1 	movq	(%rcx,%rdx,8), %rdi
  4253cb:	8b 7f 0c 	movl	12(%rdi), %edi
  4253ce:	83 ff 03 	cmpl	$3, %edi
  4253d1:	74 0e 	je	14 <runtime.stopTheWorldWithSema+0x1f1>
  4253d3:	48 8d 1d 66 84 04 00 	leaq	296038(%rip), %rbx
  4253da:	be 2e 00 00 00 	movl	$46, %esi
  4253df:	eb d5 	jmp	-43 <runtime.stopTheWorldWithSema+0x1c6>
  4253e1:	48 89 df 	movq	%rbx, %rdi
  4253e4:	48 89 f3 	movq	%rsi, %rbx
  4253e7:	48 89 fe 	movq	%rdi, %rsi
  4253ea:	eb ca 	jmp	-54 <runtime.stopTheWorldWithSema+0x1c6>
  4253ec:	8b 05 de e4 09 00 	movl	648414(%rip), %eax
  4253f2:	85 c0 	testl	%eax, %eax
  4253f4:	75 13 	jne	19 <runtime.stopTheWorldWithSema+0x219>
  4253f6:	48 85 db 	testq	%rbx, %rbx
  4253f9:	0f 85 8e 00 00 00 	jne	142 <runtime.stopTheWorldWithSema+0x29d>
  4253ff:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  425404:	48 83 c4 60 	addq	$96, %rsp
  425408:	c3 	retq
  425409:	48 89 5c 24 20 	movq	%rbx, 32(%rsp)
  42540e:	48 89 74 24 40 	movq	%rsi, 64(%rsp)
  425413:	48 8d 05 2e e5 09 00 	leaq	648494(%rip), %rax
  42541a:	48 89 04 24 	movq	%rax, (%rsp)
  42541e:	e8 fd 40 fe ff 	callq	-114435 <runtime.lock>
  425423:	48 8d 05 1e e5 09 00 	leaq	648478(%rip), %rax
  42542a:	48 89 04 24 	movq	%rax, (%rsp)
  42542e:	e8 ed 40 fe ff 	callq	-114451 <runtime.lock>
  425433:	48 8b 5c 24 20 	movq	32(%rsp), %rbx
  425438:	48 8b 74 24 40 	movq	64(%rsp), %rsi
  42543d:	eb b7 	jmp	-73 <runtime.stopTheWorldWithSema+0x206>
  42543f:	bb 29 00 00 00 	movl	$41, %ebx
  425444:	48 8d 35 d9 7f 04 00 	leaq	294873(%rip), %rsi
  42544b:	eb 9f 	jmp	-97 <runtime.stopTheWorldWithSema+0x1fc>
  42544d:	e8 1e 7c 00 00 	callq	31774 <runtime.preemptall>
  425452:	48 8d 05 a7 25 08 00 	leaq	533927(%rip), %rax
  425459:	48 89 04 24 	movq	%rax, (%rsp)
  42545d:	48 c7 44 24 08 a0 86 01 00 	movq	$100000, 8(%rsp)
  425466:	e8 95 46 fe ff 	callq	-113003 <runtime.notetsleep>
  42546b:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  425470:	84 c0 	testb	%al, %al
  425472:	74 d9 	je	-39 <runtime.stopTheWorldWithSema+0x25d>
  425474:	48 8d 05 85 25 08 00 	leaq	533893(%rip), %rax
  42547b:	84 00 	testb	%al, (%rax)
  42547d:	48 c7 05 78 25 08 00 00 00 00 00 	movq	$0, 533880(%rip)
  425488:	e9 05 ff ff ff 	jmp	-251 <runtime.stopTheWorldWithSema+0x1a2>
  42548d:	48 89 34 24 	movq	%rsi, (%rsp)
  425491:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  425496:	e8 35 bd ff ff 	callq	-17099 <runtime.throw>
  42549b:	0f 0b 	ud2
  42549d:	48 8d 05 a8 6a 04 00 	leaq	289448(%rip), %rax
  4254a4:	48 89 04 24 	movq	%rax, (%rsp)
  4254a8:	48 c7 44 24 08 1b 00 00 00 	movq	$27, 8(%rsp)
  4254b1:	e8 1a bd ff ff 	callq	-17126 <runtime.throw>
  4254b6:	0f 0b 	ud2
  4254b8:	e8 b3 f0 01 00 	callq	127155 <runtime.morestack_noctxt>
  4254bd:	e9 2e fd ff ff 	jmp	-722 <runtime.stopTheWorldWithSema>
  4254c2:	cc 	int3
  4254c3:	cc 	int3
  4254c4:	cc 	int3
  4254c5:	cc 	int3
  4254c6:	cc 	int3
  4254c7:	cc 	int3
  4254c8:	cc 	int3
  4254c9:	cc 	int3
  4254ca:	cc 	int3
  4254cb:	cc 	int3
  4254cc:	cc 	int3
  4254cd:	cc 	int3
  4254ce:	cc 	int3
  4254cf:	cc 	int3

runtime.mhelpgc:
  4254d0:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4254d9:	48 8b 40 30 	movq	48(%rax), %rax
  4254dd:	c7 80 10 01 00 00 ff ff ff ff 	movl	$4294967295, 272(%rax)
  4254e7:	c3 	retq
  4254e8:	cc 	int3
  4254e9:	cc 	int3
  4254ea:	cc 	int3
  4254eb:	cc 	int3
  4254ec:	cc 	int3
  4254ed:	cc 	int3
  4254ee:	cc 	int3
  4254ef:	cc 	int3

runtime.startTheWorldWithSema:
  4254f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4254f9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4254fd:	0f 86 3c 02 00 00 	jbe	572 <runtime.startTheWorldWithSema+0x24f>
  425503:	48 83 ec 40 	subq	$64, %rsp
  425507:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  42550c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  425511:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  42551a:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  42551f:	48 8b 48 30 	movq	48(%rax), %rcx
  425523:	ff 81 00 01 00 00 	incl	256(%rcx)
  425529:	8b 0d b9 e3 09 00 	movl	648121(%rip), %ecx
  42552f:	85 c9 	testl	%ecx, %ecx
  425531:	0f 85 d1 01 00 00 	jne	465 <runtime.startTheWorldWithSema+0x218>
  425537:	e8 34 ed ff ff 	callq	-4812 <runtime.needaddgcproc>
  42553c:	0f b6 04 24 	movzbl	(%rsp), %eax
  425540:	88 44 24 17 	movb	%al, 23(%rsp)
  425544:	48 8d 0d e5 23 08 00 	leaq	533477(%rip), %rcx
  42554b:	48 89 0c 24 	movq	%rcx, (%rsp)
  42554f:	e8 cc 3f fe ff 	callq	-114740 <runtime.lock>
  425554:	8b 05 86 e3 09 00 	movl	648070(%rip), %eax
  42555a:	8b 0d 90 e3 09 00 	movl	648080(%rip), %ecx
  425560:	85 c9 	testl	%ecx, %ecx
  425562:	0f 84 99 01 00 00 	je	409 <runtime.startTheWorldWithSema+0x211>
  425568:	c7 05 7e e3 09 00 00 00 00 00 	movl	$0, 648062(%rip)
  425572:	89 0c 24 	movl	%ecx, (%rsp)
  425575:	e8 06 60 00 00 	callq	24582 <runtime.procresize>
  42557a:	48 8b 44 24 08 	movq	8(%rsp), %rax
  42557f:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  425584:	c7 05 6a 24 08 00 00 00 00 00 	movl	$0, 533610(%rip)
  42558e:	8b 0d 74 24 08 00 	movl	533620(%rip), %ecx
  425594:	85 c9 	testl	%ecx, %ecx
  425596:	0f 85 46 01 00 00 	jne	326 <runtime.startTheWorldWithSema+0x1f2>
  42559c:	48 8d 05 8d 23 08 00 	leaq	533389(%rip), %rax
  4255a3:	48 89 04 24 	movq	%rax, (%rsp)
  4255a7:	e8 14 41 fe ff 	callq	-114412 <runtime.unlock>
  4255ac:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4255b1:	0f b6 4c 24 17 	movzbl	23(%rsp), %ecx
  4255b6:	eb 07 	jmp	7 <runtime.startTheWorldWithSema+0xcf>
  4255b8:	89 c1 	movl	%eax, %ecx
  4255ba:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4255bf:	88 4c 24 17 	movb	%cl, 23(%rsp)
  4255c3:	48 85 c0 	testq	%rax, %rax
  4255c6:	74 67 	je	103 <runtime.startTheWorldWithSema+0x13f>
  4255c8:	48 8b 50 10 	movq	16(%rax), %rdx
  4255cc:	48 8b 58 40 	movq	64(%rax), %rbx
  4255d0:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  4255d5:	48 85 db 	testq	%rbx, %rbx
  4255d8:	74 3f 	je	63 <runtime.startTheWorldWithSema+0x129>
  4255da:	48 c7 40 40 00 00 00 00 	movq	$0, 64(%rax)
  4255e2:	48 8b b3 d8 00 00 00 	movq	216(%rbx), %rsi
  4255e9:	48 8d bb d8 00 00 00 	leaq	216(%rbx), %rdi
  4255f0:	48 85 f6 	testq	%rsi, %rsi
  4255f3:	0f 85 2b 01 00 00 	jne	299 <runtime.startTheWorldWithSema+0x234>
  4255f9:	84 07 	testb	%al, (%rdi)
  4255fb:	48 89 83 d8 00 00 00 	movq	%rax, 216(%rbx)
  425602:	48 8d 83 48 01 00 00 	leaq	328(%rbx), %rax
  425609:	48 89 04 24 	movq	%rax, (%rsp)
  42560d:	e8 7e 41 fe ff 	callq	-114306 <runtime.notewakeup>
  425612:	0f b6 44 24 17 	movzbl	23(%rsp), %eax
  425617:	eb 9f 	jmp	-97 <runtime.startTheWorldWithSema+0xc8>
  425619:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  425621:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  425626:	e8 15 12 00 00 	callq	4629 <runtime.newm>
  42562b:	31 c0 	xorl	%eax, %eax
  42562d:	eb 89 	jmp	-119 <runtime.startTheWorldWithSema+0xc8>
  42562f:	e8 fc 23 02 00 	callq	140284 <runtime.nanotime>
  425634:	48 8b 04 24 	movq	(%rsp), %rax
  425638:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  42563d:	0f b6 4c 24 48 	movzbl	72(%rsp), %ecx
  425642:	84 c9 	testb	%cl, %cl
  425644:	0f 85 89 00 00 00 	jne	137 <runtime.startTheWorldWithSema+0x1e3>
  42564a:	8b 0d 20 23 08 00 	movl	533280(%rip), %ecx
  425650:	85 c9 	testl	%ecx, %ecx
  425652:	74 0a 	je	10 <runtime.startTheWorldWithSema+0x16e>
  425654:	8b 0d 1a 23 08 00 	movl	533274(%rip), %ecx
  42565a:	85 c9 	testl	%ecx, %ecx
  42565c:	74 69 	je	105 <runtime.startTheWorldWithSema+0x1d7>
  42565e:	0f b6 4c 24 17 	movzbl	23(%rsp), %ecx
  425663:	84 c9 	testb	%cl, %cl
  425665:	75 40 	jne	64 <runtime.startTheWorldWithSema+0x1b7>
  425667:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  42566c:	48 8b 51 30 	movq	48(%rcx), %rdx
  425670:	83 82 00 01 00 00 ff 	addl	$-1, 256(%rdx)
  425677:	48 8b 51 30 	movq	48(%rcx), %rdx
  42567b:	8b 92 00 01 00 00 	movl	256(%rdx), %edx
  425681:	85 d2 	testl	%edx, %edx
  425683:	75 13 	jne	19 <runtime.startTheWorldWithSema+0x1a8>
  425685:	0f b6 91 c0 00 00 00 	movzbl	192(%rcx), %edx
  42568c:	84 d2 	testb	%dl, %dl
  42568e:	74 08 	je	8 <runtime.startTheWorldWithSema+0x1a8>
  425690:	48 c7 41 10 de fa ff ff 	movq	$-1314, 16(%rcx)
  425698:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  42569d:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  4256a2:	48 83 c4 40 	addq	$64, %rsp
  4256a6:	c3 	retq
  4256a7:	48 8d 05 b2 8a 04 00 	leaq	297650(%rip), %rax
  4256ae:	48 89 04 24 	movq	%rax, (%rsp)
  4256b2:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  4256bb:	e8 80 11 00 00 	callq	4480 <runtime.newm>
  4256c0:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4256c5:	eb a0 	jmp	-96 <runtime.startTheWorldWithSema+0x177>
  4256c7:	e8 a4 1c 00 00 	callq	7332 <runtime.wakep>
  4256cc:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4256d1:	eb 8b 	jmp	-117 <runtime.startTheWorldWithSema+0x16e>
  4256d3:	e8 48 4e 01 00 	callq	85576 <runtime.traceGCSTWDone>
  4256d8:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4256dd:	e9 68 ff ff ff 	jmp	-152 <runtime.startTheWorldWithSema+0x15a>
  4256e2:	c7 05 1c 23 08 00 00 00 00 00 	movl	$0, 533276(%rip)
  4256ec:	48 8d 05 1d 23 08 00 	leaq	533277(%rip), %rax
  4256f3:	48 89 04 24 	movq	%rax, (%rsp)
  4256f7:	e8 94 40 fe ff 	callq	-114540 <runtime.notewakeup>
  4256fc:	e9 9b fe ff ff 	jmp	-357 <runtime.startTheWorldWithSema+0xac>
  425701:	89 c1 	movl	%eax, %ecx
  425703:	e9 6a fe ff ff 	jmp	-406 <runtime.startTheWorldWithSema+0x82>
  425708:	c6 04 24 00 	movb	$0, (%rsp)
  42570c:	e8 1f 93 ff ff 	callq	-27873 <runtime.netpoll>
  425711:	48 8b 44 24 08 	movq	8(%rsp), %rax
  425716:	48 89 04 24 	movq	%rax, (%rsp)
  42571a:	e8 51 30 00 00 	callq	12369 <runtime.injectglist>
  42571f:	e9 13 fe ff ff 	jmp	-493 <runtime.startTheWorldWithSema+0x47>
  425724:	48 8d 05 1e 79 04 00 	leaq	293150(%rip), %rax
  42572b:	48 89 04 24 	movq	%rax, (%rsp)
  42572f:	48 c7 44 24 08 25 00 00 00 	movq	$37, 8(%rsp)
  425738:	e8 93 ba ff ff 	callq	-17773 <runtime.throw>
  42573d:	0f 0b 	ud2
  42573f:	e8 2c ee 01 00 	callq	126508 <runtime.morestack_noctxt>
  425744:	e9 a7 fd ff ff 	jmp	-601 <runtime.startTheWorldWithSema>
  425749:	cc 	int3
  42574a:	cc 	int3
  42574b:	cc 	int3
  42574c:	cc 	int3
  42574d:	cc 	int3
  42574e:	cc 	int3
  42574f:	cc 	int3

runtime.mstart:
  425750:	48 83 ec 20 	subq	$32, %rsp
  425754:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  425759:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  42575e:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  425767:	48 8b 08 	movq	(%rax), %rcx
  42576a:	48 85 c9 	testq	%rcx, %rcx
  42576d:	0f 94 c1 	sete	%cl
  425770:	88 4c 24 0f 	movb	%cl, 15(%rsp)
  425774:	75 32 	jne	50 <runtime.mstart+0x58>
  425776:	48 8b 50 08 	movq	8(%rax), %rdx
  42577a:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  42577f:	48 85 d2 	testq	%rdx, %rdx
  425782:	75 09 	jne	9 <runtime.mstart+0x3d>
  425784:	48 c7 44 24 10 00 20 00 00 	movq	$8192, 16(%rsp)
  42578d:	48 8d 54 24 10 	leaq	16(%rsp), %rdx
  425792:	48 89 50 08 	movq	%rdx, 8(%rax)
  425796:	48 8b 5c 24 10 	movq	16(%rsp), %rbx
  42579b:	48 29 da 	subq	%rbx, %rdx
  42579e:	48 81 c2 00 04 00 00 	addq	$1024, %rdx
  4257a5:	48 89 10 	movq	%rdx, (%rax)
  4257a8:	48 8b 08 	movq	(%rax), %rcx
  4257ab:	48 81 c1 70 03 00 00 	addq	$880, %rcx
  4257b2:	48 89 48 10 	movq	%rcx, 16(%rax)
  4257b6:	48 89 48 18 	movq	%rcx, 24(%rax)
  4257ba:	c7 04 24 00 00 00 00 	movl	$0, (%rsp)
  4257c1:	e8 1a 00 00 00 	callq	26 <runtime.mstart1>
  4257c6:	0f b6 44 24 0f 	movzbl	15(%rsp), %eax
  4257cb:	88 04 24 	movb	%al, (%rsp)
  4257ce:	e8 9d 01 00 00 	callq	413 <runtime.mexit>
  4257d3:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  4257d8:	48 83 c4 20 	addq	$32, %rsp
  4257dc:	c3 	retq
  4257dd:	cc 	int3
  4257de:	cc 	int3
  4257df:	cc 	int3

runtime.mstart1:
  4257e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4257e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4257ed:	0f 86 13 01 00 00 	jbe	275 <runtime.mstart1+0x126>
  4257f3:	48 83 ec 20 	subq	$32, %rsp
  4257f7:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  4257fc:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  425801:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  42580a:	48 8b 48 30 	movq	48(%rax), %rcx
  42580e:	48 8b 09 	movq	(%rcx), %rcx
  425811:	48 39 c1 	cmpq	%rax, %rcx
  425814:	0f 85 d1 00 00 00 	jne	209 <runtime.mstart1+0x10b>
  42581a:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  42581f:	48 8b 44 24 20 	movq	32(%rsp), %rax
  425824:	48 89 04 24 	movq	%rax, (%rsp)
  425828:	48 8d 44 24 28 	leaq	40(%rsp), %rax
  42582d:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  425832:	e8 e9 3c 00 00 	callq	15593 <runtime.save>
  425837:	e8 f4 ea 01 00 	callq	125684 <runtime.asminit>
  42583c:	e8 1f 9e ff ff 	callq	-25057 <runtime.minit>
  425841:	48 8b 44 24 10 	movq	16(%rsp), %rax
  425846:	48 8b 48 30 	movq	48(%rax), %rcx
  42584a:	48 8d 15 0f 27 08 00 	leaq	534287(%rip), %rdx
  425851:	48 39 d1 	cmpq	%rdx, %rcx
  425854:	74 7f 	je	127 <runtime.mstart1+0xf5>
  425856:	48 8b 48 30 	movq	48(%rax), %rcx
  42585a:	48 8b 89 b8 00 00 00 	movq	184(%rcx), %rcx
  425861:	48 85 c9 	testq	%rcx, %rcx
  425864:	75 59 	jne	89 <runtime.mstart1+0xdf>
  425866:	48 8b 48 30 	movq	48(%rax), %rcx
  42586a:	8b 99 10 01 00 00 	movl	272(%rcx), %ebx
  425870:	85 db 	testl	%ebx, %ebx
  425872:	75 3a 	jne	58 <runtime.mstart1+0xce>
  425874:	48 39 ca 	cmpq	%rcx, %rdx
  425877:	75 0f 	jne	15 <runtime.mstart1+0xa8>
  425879:	e8 82 30 00 00 	callq	12418 <runtime.schedule>
  42587e:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  425883:	48 83 c4 20 	addq	$32, %rsp
  425887:	c3 	retq
  425888:	48 8b 81 d8 00 00 00 	movq	216(%rcx), %rax
  42588f:	48 89 04 24 	movq	%rax, (%rsp)
  425893:	e8 48 67 00 00 	callq	26440 <runtime.acquirep>
  425898:	48 8b 44 24 10 	movq	16(%rsp), %rax
  42589d:	48 8b 40 30 	movq	48(%rax), %rax
  4258a1:	48 c7 80 d8 00 00 00 00 00 00 00 	movq	$0, 216(%rax)
  4258ac:	eb cb 	jmp	-53 <runtime.mstart1+0x99>
  4258ae:	c7 81 10 01 00 00 00 00 00 00 	movl	$0, 272(%rcx)
  4258b8:	e8 c3 13 00 00 	callq	5059 <runtime.stopm>
  4258bd:	eb ba 	jmp	-70 <runtime.mstart1+0x99>
  4258bf:	48 8b 01 	movq	(%rcx), %rax
  4258c2:	48 89 ca 	movq	%rcx, %rdx
  4258c5:	ff d0 	callq	*%rax
  4258c7:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4258cc:	48 8d 15 8d 26 08 00 	leaq	534157(%rip), %rdx
  4258d3:	eb 91 	jmp	-111 <runtime.mstart1+0x86>
  4258d5:	e8 36 00 00 00 	callq	54 <runtime.mstartm0>
  4258da:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4258df:	48 8d 15 7a 26 08 00 	leaq	534138(%rip), %rdx
  4258e6:	e9 6b ff ff ff 	jmp	-149 <runtime.mstart1+0x76>
  4258eb:	48 8d 05 81 55 04 00 	leaq	284033(%rip), %rax
  4258f2:	48 89 04 24 	movq	%rax, (%rsp)
  4258f6:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  4258ff:	e8 cc b8 ff ff 	callq	-18228 <runtime.throw>
  425904:	0f 0b 	ud2
  425906:	e8 65 ec 01 00 	callq	126053 <runtime.morestack_noctxt>
  42590b:	e9 d0 fe ff ff 	jmp	-304 <runtime.mstart1>

runtime.mstartm0:
  425910:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  425919:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42591d:	76 45 	jbe	69 <runtime.mstartm0+0x54>
  42591f:	48 83 ec 10 	subq	$16, %rsp
  425923:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  425928:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  42592d:	0f b6 05 78 df 09 00 	movzbl	647032(%rip), %eax
  425934:	84 c0 	testb	%al, %al
  425936:	74 0b 	je	11 <runtime.mstartm0+0x33>
  425938:	0f b6 05 63 df 09 00 	movzbl	647011(%rip), %eax
  42593f:	84 c0 	testb	%al, %al
  425941:	74 13 	je	19 <runtime.mstartm0+0x46>
  425943:	c6 04 24 00 	movb	$0, (%rsp)
  425947:	e8 64 c7 00 00 	callq	51044 <runtime.initsig>
  42594c:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  425951:	48 83 c4 10 	addq	$16, %rsp
  425955:	c3 	retq
  425956:	c6 05 45 df 09 00 01 	movb	$1, 646981(%rip)
  42595d:	e8 be 0a 00 00 	callq	2750 <runtime.newextram>
  425962:	eb df 	jmp	-33 <runtime.mstartm0+0x33>
  425964:	e8 07 ec 01 00 	callq	125959 <runtime.morestack_noctxt>
  425969:	eb a5 	jmp	-91 <runtime.mstartm0>
  42596b:	cc 	int3
  42596c:	cc 	int3
  42596d:	cc 	int3
  42596e:	cc 	int3
  42596f:	cc 	int3

runtime.mexit:
  425970:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  425979:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42597d:	0f 86 21 02 00 00 	jbe	545 <runtime.mexit+0x234>
  425983:	48 83 ec 20 	subq	$32, %rsp
  425987:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  42598c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  425991:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  42599a:	48 8b 40 30 	movq	48(%rax), %rax
  42599e:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  4259a3:	48 8d 0d b6 25 08 00 	leaq	533942(%rip), %rcx
  4259aa:	48 39 c1 	cmpq	%rax, %rcx
  4259ad:	0f 84 8a 01 00 00 	je	394 <runtime.mexit+0x1cd>
  4259b3:	e8 88 d7 00 00 	callq	55176 <runtime.sigblock>
  4259b8:	e8 f3 9c ff ff 	callq	-25357 <runtime.unminit>
  4259bd:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4259c2:	48 8b 48 50 	movq	80(%rax), %rcx
  4259c6:	48 85 c9 	testq	%rcx, %rcx
  4259c9:	0f 85 39 01 00 00 	jne	313 <runtime.mexit+0x198>
  4259cf:	48 8d 05 5a 1f 08 00 	leaq	532314(%rip), %rax
  4259d6:	48 89 04 24 	movq	%rax, (%rsp)
  4259da:	e8 41 3b fe ff 	callq	-115903 <runtime.lock>
  4259df:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4259e4:	48 8d 0d 2d 1c 08 00 	leaq	531501(%rip), %rcx
  4259eb:	eb 07 	jmp	7 <runtime.mexit+0x84>
  4259ed:	48 8d 8a 50 01 00 00 	leaq	336(%rdx), %rcx
  4259f4:	48 8b 11 	movq	(%rcx), %rdx
  4259f7:	48 85 d2 	testq	%rdx, %rdx
  4259fa:	0f 84 22 01 00 00 	je	290 <runtime.mexit+0x1b2>
  425a00:	48 39 c2 	cmpq	%rax, %rdx
  425a03:	75 e8 	jne	-24 <runtime.mexit+0x7d>
  425a05:	8b 15 05 e0 09 00 	movl	647173(%rip), %edx
  425a0b:	48 8b 98 50 01 00 00 	movq	336(%rax), %rbx
  425a12:	85 d2 	testl	%edx, %edx
  425a14:	0f 85 d8 00 00 00 	jne	216 <runtime.mexit+0x182>
  425a1a:	48 89 19 	movq	%rbx, (%rcx)
  425a1d:	0f b6 4c 24 28 	movzbl	40(%rsp), %ecx
  425a22:	84 c9 	testb	%cl, %cl
  425a24:	74 77 	je	119 <runtime.mexit+0x12d>
  425a26:	48 8d 05 03 1f 08 00 	leaq	532227(%rip), %rax
  425a2d:	48 89 04 24 	movq	%rax, (%rsp)
  425a31:	e8 8a 3c fe ff 	callq	-115574 <runtime.unlock>
  425a36:	e8 95 67 00 00 	callq	26517 <runtime.releasep>
  425a3b:	e8 30 16 00 00 	callq	5680 <runtime.handoffp>
  425a40:	48 8d 05 e9 1e 08 00 	leaq	532201(%rip), %rax
  425a47:	48 89 04 24 	movq	%rax, (%rsp)
  425a4b:	e8 d0 3a fe ff 	callq	-116016 <runtime.lock>
  425a50:	48 ff 05 01 1f 08 00 	incq	532225(%rip)
  425a57:	e8 14 6a 00 00 	callq	27156 <runtime.checkdead>
  425a5c:	48 8d 05 cd 1e 08 00 	leaq	532173(%rip), %rax
  425a63:	48 89 04 24 	movq	%rax, (%rsp)
  425a67:	e8 54 3c fe ff 	callq	-115628 <runtime.unlock>
  425a6c:	0f b6 44 24 28 	movzbl	40(%rsp), %eax
  425a71:	84 c0 	testb	%al, %al
  425a73:	74 0a 	je	10 <runtime.mexit+0x10f>
  425a75:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  425a7a:	48 83 c4 20 	addq	$32, %rsp
  425a7e:	c3 	retq
  425a7f:	48 8b 44 24 10 	movq	16(%rsp), %rax
  425a84:	48 05 1c 01 00 00 	addq	$284, %rax
  425a8a:	48 89 04 24 	movq	%rax, (%rsp)
  425a8e:	e8 4d 1d 02 00 	callq	138573 <runtime.exitThread>
  425a93:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  425a98:	48 83 c4 20 	addq	$32, %rsp
  425a9c:	c3 	retq
  425a9d:	ba 01 00 00 00 	movl	$1, %edx
  425aa2:	87 90 1c 01 00 00 	xchgl	%edx, 284(%rax)
  425aa8:	8b 15 62 df 09 00 	movl	647010(%rip), %edx
  425aae:	48 8d b8 38 03 00 00 	leaq	824(%rax), %rdi
  425ab5:	48 8b 1d 34 1f 08 00 	movq	532276(%rip), %rbx
  425abc:	85 d2 	testl	%edx, %edx
  425abe:	75 13 	jne	19 <runtime.mexit+0x163>
  425ac0:	48 89 98 38 03 00 00 	movq	%rbx, 824(%rax)
  425ac7:	48 89 05 22 1f 08 00 	movq	%rax, 532258(%rip)
  425ace:	e9 53 ff ff ff 	jmp	-173 <runtime.mexit+0xb6>
  425ad3:	48 89 c2 	movq	%rax, %rdx
  425ad6:	48 89 d8 	movq	%rbx, %rax
  425ad9:	e8 c2 0d 02 00 	callq	134594 <runtime.gcWriteBarrier>
  425ade:	48 8d 3d 0b 1f 08 00 	leaq	532235(%rip), %rdi
  425ae5:	48 89 d0 	movq	%rdx, %rax
  425ae8:	e8 b3 0d 02 00 	callq	134579 <runtime.gcWriteBarrier>
  425aed:	e9 34 ff ff ff 	jmp	-204 <runtime.mexit+0xb6>
  425af2:	48 89 cf 	movq	%rcx, %rdi
  425af5:	48 89 c2 	movq	%rax, %rdx
  425af8:	48 89 d8 	movq	%rbx, %rax
  425afb:	e8 a0 0d 02 00 	callq	134560 <runtime.gcWriteBarrier>
  425b00:	48 89 d0 	movq	%rdx, %rax
  425b03:	e9 15 ff ff ff 	jmp	-235 <runtime.mexit+0xad>
  425b08:	48 8b 41 08 	movq	8(%rcx), %rax
  425b0c:	48 8b 09 	movq	(%rcx), %rcx
  425b0f:	48 89 0c 24 	movq	%rcx, (%rsp)
  425b13:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  425b18:	e8 13 ed 00 00 	callq	60691 <runtime.stackfree>
  425b1d:	e9 ad fe ff ff 	jmp	-339 <runtime.mexit+0x5f>
  425b22:	48 8d 05 70 53 04 00 	leaq	283504(%rip), %rax
  425b29:	48 89 04 24 	movq	%rax, (%rsp)
  425b2d:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  425b36:	e8 95 b6 ff ff 	callq	-18795 <runtime.throw>
  425b3b:	0f 0b 	ud2
  425b3d:	e8 8e 66 00 00 	callq	26254 <runtime.releasep>
  425b42:	e8 29 15 00 00 	callq	5417 <runtime.handoffp>
  425b47:	48 8d 05 e2 1d 08 00 	leaq	531938(%rip), %rax
  425b4e:	48 89 04 24 	movq	%rax, (%rsp)
  425b52:	e8 c9 39 fe ff 	callq	-116279 <runtime.lock>
  425b57:	48 ff 05 fa 1d 08 00 	incq	531962(%rip)
  425b5e:	e8 0d 69 00 00 	callq	26893 <runtime.checkdead>
  425b63:	48 8d 05 c6 1d 08 00 	leaq	531910(%rip), %rax
  425b6a:	48 89 04 24 	movq	%rax, (%rsp)
  425b6e:	e8 4d 3b fe ff 	callq	-115891 <runtime.unlock>
  425b73:	48 8b 44 24 10 	movq	16(%rsp), %rax
  425b78:	84 00 	testb	%al, (%rax)
  425b7a:	48 05 48 01 00 00 	addq	$328, %rax
  425b80:	48 89 04 24 	movq	%rax, (%rsp)
  425b84:	e8 c7 3c fe ff 	callq	-115513 <runtime.notesleep>
  425b89:	48 8d 05 bc 50 04 00 	leaq	282812(%rip), %rax
  425b90:	48 89 04 24 	movq	%rax, (%rsp)
  425b94:	48 c7 44 24 08 11 00 00 00 	movq	$17, 8(%rsp)
  425b9d:	e8 2e b6 ff ff 	callq	-18898 <runtime.throw>
  425ba2:	0f 0b 	ud2
  425ba4:	e8 c7 e9 01 00 	callq	125383 <runtime.morestack_noctxt>
  425ba9:	e9 c2 fd ff ff 	jmp	-574 <runtime.mexit>
  425bae:	cc 	int3
  425baf:	cc 	int3

runtime.forEachP:
  425bb0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  425bb9:	48 3b 61 18 	cmpq	24(%rcx), %rsp
  425bbd:	0f 86 70 03 00 00 	jbe	880 <runtime.forEachP+0x383>
  425bc3:	48 83 ec 60 	subq	$96, %rsp
  425bc7:	48 89 6c 24 58 	movq	%rbp, 88(%rsp)
  425bcc:	48 8d 6c 24 58 	leaq	88(%rsp), %rbp
  425bd1:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  425bda:	48 8b 48 30 	movq	48(%rax), %rcx
  425bde:	ff 81 00 01 00 00 	incl	256(%rcx)
  425be4:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  425bed:	48 8b 49 30 	movq	48(%rcx), %rcx
  425bf1:	48 8b 89 d0 00 00 00 	movq	208(%rcx), %rcx
  425bf8:	48 8b 40 30 	movq	48(%rax), %rax
  425bfc:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  425c01:	48 89 4c 24 50 	movq	%rcx, 80(%rsp)
  425c06:	48 8d 15 23 1d 08 00 	leaq	531747(%rip), %rdx
  425c0d:	48 89 14 24 	movq	%rdx, (%rsp)
  425c11:	e8 0a 39 fe ff 	callq	-116470 <runtime.lock>
  425c16:	8b 05 04 1e 08 00 	movl	531972(%rip), %eax
  425c1c:	85 c0 	testl	%eax, %eax
  425c1e:	0f 85 f4 02 00 00 	jne	756 <runtime.forEachP+0x368>
  425c24:	8b 0d b6 dc 09 00 	movl	646326(%rip), %ecx
  425c2a:	ff c9 	decl	%ecx
  425c2c:	89 0d ee 1d 08 00 	movl	%ecx, 531950(%rip)
  425c32:	8b 0d d8 dd 09 00 	movl	646616(%rip), %ecx
  425c38:	85 c9 	testl	%ecx, %ecx
  425c3a:	0f 85 8c 02 00 00 	jne	652 <runtime.forEachP+0x31c>
  425c40:	48 8b 44 24 68 	movq	104(%rsp), %rax
  425c45:	48 89 05 cc 1d 08 00 	movq	%rax, 531916(%rip)
  425c4c:	48 8b 0d 65 1a 08 00 	movq	531045(%rip), %rcx
  425c53:	48 8b 15 56 1a 08 00 	movq	531030(%rip), %rdx
  425c5a:	48 8b 5c 24 50 	movq	80(%rsp), %rbx
  425c5f:	31 f6 	xorl	%esi, %esi
  425c61:	eb 03 	jmp	3 <runtime.forEachP+0xb6>
  425c63:	48 ff c6 	incq	%rsi
  425c66:	48 39 ce 	cmpq	%rcx, %rsi
  425c69:	7d 1a 	jge	26 <runtime.forEachP+0xd5>
  425c6b:	48 8b 3c f2 	movq	(%rdx,%rsi,8), %rdi
  425c6f:	48 39 df 	cmpq	%rbx, %rdi
  425c72:	74 ef 	je	-17 <runtime.forEachP+0xb3>
  425c74:	84 07 	testb	%al, (%rdi)
  425c76:	41 b8 01 00 00 00 	movl	$1, %r8d
  425c7c:	44 87 87 a0 22 00 00 	xchgl	%r8d, 8864(%rdi)
  425c83:	eb de 	jmp	-34 <runtime.forEachP+0xb3>
  425c85:	e8 e6 73 00 00 	callq	29670 <runtime.preemptall>
  425c8a:	48 8b 05 d7 1c 08 00 	movq	531671(%rip), %rax
  425c91:	eb 04 	jmp	4 <runtime.forEachP+0xe7>
  425c93:	48 8b 41 10 	movq	16(%rcx), %rax
  425c97:	48 85 c0 	testq	%rax, %rax
  425c9a:	74 3e 	je	62 <runtime.forEachP+0x12a>
  425c9c:	48 89 c1 	movq	%rax, %rcx
  425c9f:	b8 01 00 00 00 	movl	$1, %eax
  425ca4:	31 db 	xorl	%ebx, %ebx
  425ca6:	f0 	lock
  425ca7:	0f b1 99 a0 22 00 00 	cmpxchgl	%ebx, 8864(%rcx)
  425cae:	40 0f 94 c6 	sete	%sil
  425cb2:	40 84 f6 	testb	%sil, %sil
  425cb5:	74 dc 	je	-36 <runtime.forEachP+0xe3>
  425cb7:	48 89 4c 24 48 	movq	%rcx, 72(%rsp)
  425cbc:	48 89 0c 24 	movq	%rcx, (%rsp)
  425cc0:	48 8b 54 24 68 	movq	104(%rsp), %rdx
  425cc5:	48 8b 02 	movq	(%rdx), %rax
  425cc8:	ff d0 	callq	*%rax
  425cca:	83 05 4f 1d 08 00 ff 	addl	$-1, 531791(%rip)
  425cd1:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  425cd6:	31 db 	xorl	%ebx, %ebx
  425cd8:	eb b9 	jmp	-71 <runtime.forEachP+0xe3>
  425cda:	8b 05 40 1d 08 00 	movl	531776(%rip), %eax
  425ce0:	89 44 24 1c 	movl	%eax, 28(%rsp)
  425ce4:	48 8d 0d 45 1c 08 00 	leaq	531525(%rip), %rcx
  425ceb:	48 89 0c 24 	movq	%rcx, (%rsp)
  425cef:	e8 cc 39 fe ff 	callq	-116276 <runtime.unlock>
  425cf4:	48 8b 44 24 50 	movq	80(%rsp), %rax
  425cf9:	48 89 04 24 	movq	%rax, (%rsp)
  425cfd:	48 8b 54 24 68 	movq	104(%rsp), %rdx
  425d02:	48 8b 02 	movq	(%rdx), %rax
  425d05:	ff d0 	callq	*%rax
  425d07:	48 8b 05 aa 19 08 00 	movq	530858(%rip), %rax
  425d0e:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  425d13:	48 8b 0d 96 19 08 00 	movq	530838(%rip), %rcx
  425d1a:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  425d1f:	31 d2 	xorl	%edx, %edx
  425d21:	eb 06 	jmp	6 <runtime.forEachP+0x179>
  425d23:	48 ff c2 	incq	%rdx
  425d26:	48 89 f8 	movq	%rdi, %rax
  425d29:	48 39 c2 	cmpq	%rax, %rdx
  425d2c:	0f 8d 8c 00 00 00 	jge	140 <runtime.forEachP+0x20e>
  425d32:	48 8b 1c d1 	movq	(%rcx,%rdx,8), %rbx
  425d36:	8b 73 0c 	movl	12(%rbx), %esi
  425d39:	83 fe 02 	cmpl	$2, %esi
  425d3c:	75 75 	jne	117 <runtime.forEachP+0x203>
  425d3e:	8b bb a0 22 00 00 	movl	8864(%rbx), %edi
  425d44:	83 ff 01 	cmpl	$1, %edi
  425d47:	75 6a 	jne	106 <runtime.forEachP+0x203>
  425d49:	48 89 c7 	movq	%rax, %rdi
  425d4c:	89 f0 	movl	%esi, %eax
  425d4e:	45 31 c0 	xorl	%r8d, %r8d
  425d51:	f0 	lock
  425d52:	44 0f b1 43 0c 	cmpxchgl	%r8d, 12(%rbx)
  425d57:	40 0f 94 c6 	sete	%sil
  425d5b:	40 84 f6 	testb	%sil, %sil
  425d5e:	74 c3 	je	-61 <runtime.forEachP+0x173>
  425d60:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  425d65:	0f b6 05 64 da 08 00 	movzbl	580196(%rip), %eax
  425d6c:	84 c0 	testb	%al, %al
  425d6e:	75 20 	jne	32 <runtime.forEachP+0x1e0>
  425d70:	ff 43 1c 	incl	28(%rbx)
  425d73:	48 89 1c 24 	movq	%rbx, (%rsp)
  425d77:	e8 f4 12 00 00 	callq	4852 <runtime.handoffp>
  425d7c:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  425d81:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  425d86:	48 8b 7c 24 28 	movq	40(%rsp), %rdi
  425d8b:	45 31 c0 	xorl	%r8d, %r8d
  425d8e:	eb 93 	jmp	-109 <runtime.forEachP+0x173>
  425d90:	48 89 5c 24 30 	movq	%rbx, 48(%rsp)
  425d95:	48 89 1c 24 	movq	%rbx, (%rsp)
  425d99:	e8 62 51 01 00 	callq	86370 <runtime.traceGoSysBlock>
  425d9e:	48 8b 44 24 30 	movq	48(%rsp), %rax
  425da3:	48 89 04 24 	movq	%rax, (%rsp)
  425da7:	e8 44 45 01 00 	callq	83268 <runtime.traceProcStop>
  425dac:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  425db1:	eb bd 	jmp	-67 <runtime.forEachP+0x1c0>
  425db3:	48 89 c7 	movq	%rax, %rdi
  425db6:	45 31 c0 	xorl	%r8d, %r8d
  425db9:	e9 65 ff ff ff 	jmp	-155 <runtime.forEachP+0x173>
  425dbe:	8b 44 24 1c 	movl	28(%rsp), %eax
  425dc2:	85 c0 	testl	%eax, %eax
  425dc4:	0f 8f c7 00 00 00 	jg	199 <runtime.forEachP+0x2e1>
  425dca:	8b 05 50 1c 08 00 	movl	531536(%rip), %eax
  425dd0:	85 c0 	testl	%eax, %eax
  425dd2:	0f 85 25 01 00 00 	jne	293 <runtime.forEachP+0x34d>
  425dd8:	48 8b 05 d9 18 08 00 	movq	530649(%rip), %rax
  425ddf:	48 8b 0d ca 18 08 00 	movq	530634(%rip), %rcx
  425de6:	31 d2 	xorl	%edx, %edx
  425de8:	eb 03 	jmp	3 <runtime.forEachP+0x23d>
  425dea:	48 ff c2 	incq	%rdx
  425ded:	48 39 c2 	cmpq	%rax, %rdx
  425df0:	7d 16 	jge	22 <runtime.forEachP+0x258>
  425df2:	48 8b 1c d1 	movq	(%rcx,%rdx,8), %rbx
  425df6:	84 03 	testb	%al, (%rbx)
  425df8:	8b 9b a0 22 00 00 	movl	8864(%rbx), %ebx
  425dfe:	85 db 	testl	%ebx, %ebx
  425e00:	0f 85 dc 00 00 00 	jne	220 <runtime.forEachP+0x332>
  425e06:	eb e2 	jmp	-30 <runtime.forEachP+0x23a>
  425e08:	48 8d 05 21 1b 08 00 	leaq	531233(%rip), %rax
  425e0f:	48 89 04 24 	movq	%rax, (%rsp)
  425e13:	e8 08 37 fe ff 	callq	-116984 <runtime.lock>
  425e18:	8b 05 f2 db 09 00 	movl	646130(%rip), %eax
  425e1e:	85 c0 	testl	%eax, %eax
  425e20:	75 5a 	jne	90 <runtime.forEachP+0x2cc>
  425e22:	48 c7 05 eb 1b 08 00 00 00 00 00 	movq	$0, 531435(%rip)
  425e2d:	48 8d 05 fc 1a 08 00 	leaq	531196(%rip), %rax
  425e34:	48 89 04 24 	movq	%rax, (%rsp)
  425e38:	e8 83 38 fe ff 	callq	-116605 <runtime.unlock>
  425e3d:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  425e46:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  425e4b:	8b 91 00 01 00 00 	movl	256(%rcx), %edx
  425e51:	8d 5a ff 	leal	-1(%rdx), %ebx
  425e54:	89 99 00 01 00 00 	movl	%ebx, 256(%rcx)
  425e5a:	83 fa 01 	cmpl	$1, %edx
  425e5d:	75 13 	jne	19 <runtime.forEachP+0x2c2>
  425e5f:	0f b6 88 c0 00 00 00 	movzbl	192(%rax), %ecx
  425e66:	84 c9 	testb	%cl, %cl
  425e68:	74 08 	je	8 <runtime.forEachP+0x2c2>
  425e6a:	48 c7 40 10 de fa ff ff 	movq	$-1314, 16(%rax)
  425e72:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  425e77:	48 83 c4 60 	addq	$96, %rsp
  425e7b:	c3 	retq
  425e7c:	48 8d 3d 95 1b 08 00 	leaq	531349(%rip), %rdi
  425e83:	31 c0 	xorl	%eax, %eax
  425e85:	e8 16 0a 02 00 	callq	133654 <runtime.gcWriteBarrier>
  425e8a:	eb a1 	jmp	-95 <runtime.forEachP+0x27d>
  425e8c:	e8 df 71 00 00 	callq	29151 <runtime.preemptall>
  425e91:	48 8d 05 90 1b 08 00 	leaq	531344(%rip), %rax
  425e98:	48 89 04 24 	movq	%rax, (%rsp)
  425e9c:	48 c7 44 24 08 a0 86 01 00 	movq	$100000, 8(%rsp)
  425ea5:	e8 56 3c fe ff 	callq	-115626 <runtime.notetsleep>
  425eaa:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  425eaf:	84 c0 	testb	%al, %al
  425eb1:	74 d9 	je	-39 <runtime.forEachP+0x2dc>
  425eb3:	48 8d 05 6e 1b 08 00 	leaq	531310(%rip), %rax
  425eba:	84 00 	testb	%al, (%rax)
  425ebc:	48 c7 05 61 1b 08 00 00 00 00 00 	movq	$0, 531297(%rip)
  425ec7:	e9 fe fe ff ff 	jmp	-258 <runtime.forEachP+0x21a>
  425ecc:	48 8d 3d 45 1b 08 00 	leaq	531269(%rip), %rdi
  425ed3:	48 8b 44 24 68 	movq	104(%rsp), %rax
  425ed8:	e8 c3 09 02 00 	callq	133571 <runtime.gcWriteBarrier>
  425edd:	e9 6a fd ff ff 	jmp	-662 <runtime.forEachP+0x9c>
  425ee2:	48 8d 05 f1 5c 04 00 	leaq	285937(%rip), %rax
  425ee9:	48 89 04 24 	movq	%rax, (%rsp)
  425eed:	48 c7 44 24 08 1a 00 00 00 	movq	$26, 8(%rsp)
  425ef6:	e8 d5 b2 ff ff 	callq	-19755 <runtime.throw>
  425efb:	0f 0b 	ud2
  425efd:	48 8d 05 8f 4e 04 00 	leaq	282255(%rip), %rax
  425f04:	48 89 04 24 	movq	%rax, (%rsp)
  425f08:	48 c7 44 24 08 12 00 00 00 	movq	$18, 8(%rsp)
  425f11:	e8 ba b2 ff ff 	callq	-19782 <runtime.throw>
  425f16:	0f 0b 	ud2
  425f18:	48 8d 05 db 6c 04 00 	leaq	290011(%rip), %rax
  425f1f:	48 89 04 24 	movq	%rax, (%rsp)
  425f23:	48 c7 44 24 08 22 00 00 00 	movq	$34, 8(%rsp)
  425f2c:	e8 9f b2 ff ff 	callq	-19809 <runtime.throw>
  425f31:	0f 0b 	ud2
  425f33:	e8 c8 0d 01 00 	callq	69064 <runtime.morestackc>
  425f38:	e9 73 fc ff ff 	jmp	-909 <runtime.forEachP>
  425f3d:	cc 	int3
  425f3e:	cc 	int3
  425f3f:	cc 	int3

runtime.runSafePointFn:
  425f40:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  425f49:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  425f4d:	0f 86 a4 00 00 00 	jbe	164 <runtime.runSafePointFn+0xb7>
  425f53:	48 83 ec 10 	subq	$16, %rsp
  425f57:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  425f5c:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  425f61:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  425f6a:	48 8b 49 30 	movq	48(%rcx), %rcx
  425f6e:	48 8b 89 d0 00 00 00 	movq	208(%rcx), %rcx
  425f75:	84 01 	testb	%al, (%rcx)
  425f77:	b8 01 00 00 00 	movl	$1, %eax
  425f7c:	31 db 	xorl	%ebx, %ebx
  425f7e:	f0 	lock
  425f7f:	0f b1 99 a0 22 00 00 	cmpxchgl	%ebx, 8864(%rcx)
  425f86:	0f 94 c3 	sete	%bl
  425f89:	84 db 	testb	%bl, %bl
  425f8b:	74 60 	je	96 <runtime.runSafePointFn+0xad>
  425f8d:	48 8b 15 84 1a 08 00 	movq	531076(%rip), %rdx
  425f94:	48 89 0c 24 	movq	%rcx, (%rsp)
  425f98:	48 8b 02 	movq	(%rdx), %rax
  425f9b:	ff d0 	callq	*%rax
  425f9d:	48 8d 05 8c 19 08 00 	leaq	530828(%rip), %rax
  425fa4:	48 89 04 24 	movq	%rax, (%rsp)
  425fa8:	e8 73 35 fe ff 	callq	-117389 <runtime.lock>
  425fad:	8b 05 6d 1a 08 00 	movl	531053(%rip), %eax
  425fb3:	8d 48 ff 	leal	-1(%rax), %ecx
  425fb6:	89 0d 64 1a 08 00 	movl	%ecx, 531044(%rip)
  425fbc:	83 f8 01 	cmpl	$1, %eax
  425fbf:	74 1a 	je	26 <runtime.runSafePointFn+0x9b>
  425fc1:	48 8d 05 68 19 08 00 	leaq	530792(%rip), %rax
  425fc8:	48 89 04 24 	movq	%rax, (%rsp)
  425fcc:	e8 ef 36 fe ff 	callq	-117009 <runtime.unlock>
  425fd1:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  425fd6:	48 83 c4 10 	addq	$16, %rsp
  425fda:	c3 	retq
  425fdb:	48 8d 05 46 1a 08 00 	leaq	531014(%rip), %rax
  425fe2:	48 89 04 24 	movq	%rax, (%rsp)
  425fe6:	e8 a5 37 fe ff 	callq	-116827 <runtime.notewakeup>
  425feb:	eb d4 	jmp	-44 <runtime.runSafePointFn+0x81>
  425fed:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  425ff2:	48 83 c4 10 	addq	$16, %rsp
  425ff6:	c3 	retq
  425ff7:	e8 74 e5 01 00 	callq	124276 <runtime.morestack_noctxt>
  425ffc:	e9 3f ff ff ff 	jmp	-193 <runtime.runSafePointFn>
  426001:	cc 	int3
  426002:	cc 	int3
  426003:	cc 	int3
  426004:	cc 	int3
  426005:	cc 	int3
  426006:	cc 	int3
  426007:	cc 	int3
  426008:	cc 	int3
  426009:	cc 	int3
  42600a:	cc 	int3
  42600b:	cc 	int3
  42600c:	cc 	int3
  42600d:	cc 	int3
  42600e:	cc 	int3
  42600f:	cc 	int3

runtime.allocm:
  426010:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  426019:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42601d:	0f 86 96 02 00 00 	jbe	662 <runtime.allocm+0x2a9>
  426023:	48 83 ec 38 	subq	$56, %rsp
  426027:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  42602c:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  426031:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  42603a:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  42603f:	48 8b 48 30 	movq	48(%rax), %rcx
  426043:	ff 81 00 01 00 00 	incl	256(%rcx)
  426049:	48 8b 48 30 	movq	48(%rax), %rcx
  42604d:	48 8b 89 d0 00 00 00 	movq	208(%rcx), %rcx
  426054:	48 85 c9 	testq	%rcx, %rcx
  426057:	0f 84 44 02 00 00 	je	580 <runtime.allocm+0x291>
  42605d:	48 8b 0d 8c 19 08 00 	movq	530828(%rip), %rcx
  426064:	48 85 c9 	testq	%rcx, %rcx
  426067:	0f 84 bb 00 00 00 	je	187 <runtime.allocm+0x118>
  42606d:	48 8d 05 bc 18 08 00 	leaq	530620(%rip), %rax
  426074:	48 89 04 24 	movq	%rax, (%rsp)
  426078:	e8 a3 34 fe ff 	callq	-117597 <runtime.lock>
  42607d:	48 8b 05 6c 19 08 00 	movq	530796(%rip), %rax
  426084:	31 c9 	xorl	%ecx, %ecx
  426086:	eb 06 	jmp	6 <runtime.allocm+0x7e>
  426088:	48 89 c1 	movq	%rax, %rcx
  42608b:	48 89 d0 	movq	%rdx, %rax
  42608e:	48 85 c0 	testq	%rax, %rax
  426091:	74 70 	je	112 <runtime.allocm+0xf3>
  426093:	8b 90 1c 01 00 00 	movl	284(%rax), %edx
  426099:	85 d2 	testl	%edx, %edx
  42609b:	74 31 	je	49 <runtime.allocm+0xbe>
  42609d:	48 8b 90 38 03 00 00 	movq	824(%rax), %rdx
  4260a4:	48 8d b8 38 03 00 00 	leaq	824(%rax), %rdi
  4260ab:	8b 1d 5f d9 09 00 	movl	645471(%rip), %ebx
  4260b1:	85 db 	testl	%ebx, %ebx
  4260b3:	75 09 	jne	9 <runtime.allocm+0xae>
  4260b5:	48 89 88 38 03 00 00 	movq	%rcx, 824(%rax)
  4260bc:	eb ca 	jmp	-54 <runtime.allocm+0x78>
  4260be:	48 89 c3 	movq	%rax, %rbx
  4260c1:	48 89 c8 	movq	%rcx, %rax
  4260c4:	e8 d7 07 02 00 	callq	133079 <runtime.gcWriteBarrier>
  4260c9:	48 89 d8 	movq	%rbx, %rax
  4260cc:	eb ba 	jmp	-70 <runtime.allocm+0x78>
  4260ce:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  4260d3:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  4260d8:	48 8b 08 	movq	(%rax), %rcx
  4260db:	48 8b 11 	movq	(%rcx), %rdx
  4260de:	48 8b 49 08 	movq	8(%rcx), %rcx
  4260e2:	48 89 14 24 	movq	%rdx, (%rsp)
  4260e6:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4260eb:	e8 40 e7 00 00 	callq	59200 <runtime.stackfree>
  4260f0:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4260f5:	48 8b 90 38 03 00 00 	movq	824(%rax), %rdx
  4260fc:	48 8b 44 24 10 	movq	16(%rsp), %rax
  426101:	eb 85 	jmp	-123 <runtime.allocm+0x78>
  426103:	8b 15 07 d9 09 00 	movl	645383(%rip), %edx
  426109:	85 d2 	testl	%edx, %edx
  42610b:	0f 85 7c 01 00 00 	jne	380 <runtime.allocm+0x27d>
  426111:	48 89 0d d8 18 08 00 	movq	%rcx, 530648(%rip)
  426118:	48 8d 05 11 18 08 00 	leaq	530449(%rip), %rax
  42611f:	48 89 04 24 	movq	%rax, (%rsp)
  426123:	e8 98 35 fe ff 	callq	-117352 <runtime.unlock>
  426128:	48 8d 05 f1 34 04 00 	leaq	275697(%rip), %rax
  42612f:	48 89 04 24 	movq	%rax, (%rsp)
  426133:	e8 e8 4f fe ff 	callq	-110616 <runtime.newobject>
  426138:	48 8b 44 24 08 	movq	8(%rsp), %rax
  42613d:	8b 0d cd d8 09 00 	movl	645325(%rip), %ecx
  426143:	48 8d b8 b8 00 00 00 	leaq	184(%rax), %rdi
  42614a:	85 c9 	testl	%ecx, %ecx
  42614c:	0f 85 26 01 00 00 	jne	294 <runtime.allocm+0x268>
  426152:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  426157:	48 89 88 b8 00 00 00 	movq	%rcx, 184(%rax)
  42615e:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  426163:	48 89 04 24 	movq	%rax, (%rsp)
  426167:	e8 f4 db ff ff 	callq	-9228 <runtime.mcommoninit>
  42616c:	0f b6 05 39 d7 09 00 	movzbl	644921(%rip), %eax
  426173:	84 c0 	testb	%al, %al
  426175:	0f 84 c0 00 00 00 	je	192 <runtime.allocm+0x22b>
  42617b:	c7 04 24 ff ff ff ff 	movl	$4294967295, (%rsp)
  426182:	e8 b9 40 00 00 	callq	16569 <runtime.malg>
  426187:	8b 05 83 d8 09 00 	movl	645251(%rip), %eax
  42618d:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  426192:	85 c0 	testl	%eax, %eax
  426194:	0f 85 8c 00 00 00 	jne	140 <runtime.allocm+0x216>
  42619a:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42619f:	48 89 08 	movq	%rcx, (%rax)
  4261a2:	48 8b 08 	movq	(%rax), %rcx
  4261a5:	84 01 	testb	%al, (%rcx)
  4261a7:	8b 15 63 d8 09 00 	movl	645219(%rip), %edx
  4261ad:	48 8d 79 30 	leaq	48(%rcx), %rdi
  4261b1:	85 d2 	testl	%edx, %edx
  4261b3:	75 6a 	jne	106 <runtime.allocm+0x20f>
  4261b5:	48 89 41 30 	movq	%rax, 48(%rcx)
  4261b9:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  4261be:	48 8b 51 30 	movq	48(%rcx), %rdx
  4261c2:	48 8b 92 d0 00 00 00 	movq	208(%rdx), %rdx
  4261c9:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  4261ce:	48 39 d3 	cmpq	%rdx, %rbx
  4261d1:	74 3b 	je	59 <runtime.allocm+0x1fe>
  4261d3:	48 8b 51 30 	movq	48(%rcx), %rdx
  4261d7:	83 82 00 01 00 00 ff 	addl	$-1, 256(%rdx)
  4261de:	48 8b 51 30 	movq	48(%rcx), %rdx
  4261e2:	8b 92 00 01 00 00 	movl	256(%rdx), %edx
  4261e8:	85 d2 	testl	%edx, %edx
  4261ea:	75 13 	jne	19 <runtime.allocm+0x1ef>
  4261ec:	0f b6 91 c0 00 00 00 	movzbl	192(%rcx), %edx
  4261f3:	84 d2 	testb	%dl, %dl
  4261f5:	74 08 	je	8 <runtime.allocm+0x1ef>
  4261f7:	48 c7 41 10 de fa ff ff 	movq	$-1314, 16(%rcx)
  4261ff:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  426204:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  426209:	48 83 c4 38 	addq	$56, %rsp
  42620d:	c3 	retq
  42620e:	e8 bd 5f 00 00 	callq	24509 <runtime.releasep>
  426213:	48 8b 44 24 18 	movq	24(%rsp), %rax
  426218:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  42621d:	eb b4 	jmp	-76 <runtime.allocm+0x1c3>
  42621f:	e8 7c 06 02 00 	callq	132732 <runtime.gcWriteBarrier>
  426224:	eb 93 	jmp	-109 <runtime.allocm+0x1a9>
  426226:	48 8b 7c 24 18 	movq	24(%rsp), %rdi
  42622b:	48 89 c8 	movq	%rcx, %rax
  42622e:	e8 6d 06 02 00 	callq	132717 <runtime.gcWriteBarrier>
  426233:	48 89 f8 	movq	%rdi, %rax
  426236:	e9 67 ff ff ff 	jmp	-153 <runtime.allocm+0x192>
  42623b:	c7 04 24 00 20 00 00 	movl	$8192, (%rsp)
  426242:	e8 f9 3f 00 00 	callq	16377 <runtime.malg>
  426247:	8b 05 c3 d7 09 00 	movl	645059(%rip), %eax
  42624d:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  426252:	85 c0 	testl	%eax, %eax
  426254:	75 0d 	jne	13 <runtime.allocm+0x253>
  426256:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42625b:	48 89 08 	movq	%rcx, (%rax)
  42625e:	e9 3f ff ff ff 	jmp	-193 <runtime.allocm+0x192>
  426263:	48 8b 7c 24 18 	movq	24(%rsp), %rdi
  426268:	48 89 c8 	movq	%rcx, %rax
  42626b:	e8 30 06 02 00 	callq	132656 <runtime.gcWriteBarrier>
  426270:	48 89 f8 	movq	%rdi, %rax
  426273:	e9 2a ff ff ff 	jmp	-214 <runtime.allocm+0x192>
  426278:	48 89 c1 	movq	%rax, %rcx
  42627b:	48 8b 44 24 48 	movq	72(%rsp), %rax
  426280:	e8 1b 06 02 00 	callq	132635 <runtime.gcWriteBarrier>
  426285:	48 89 c8 	movq	%rcx, %rax
  426288:	e9 d1 fe ff ff 	jmp	-303 <runtime.allocm+0x14e>
  42628d:	48 8d 3d 5c 17 08 00 	leaq	530268(%rip), %rdi
  426294:	48 89 c8 	movq	%rcx, %rax
  426297:	e8 04 06 02 00 	callq	132612 <runtime.gcWriteBarrier>
  42629c:	e9 77 fe ff ff 	jmp	-393 <runtime.allocm+0x108>
  4262a1:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4262a6:	48 89 04 24 	movq	%rax, (%rsp)
  4262aa:	e8 31 5d 00 00 	callq	23857 <runtime.acquirep>
  4262af:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4262b4:	e9 a4 fd ff ff 	jmp	-604 <runtime.allocm+0x4d>
  4262b9:	e8 b2 e2 01 00 	callq	123570 <runtime.morestack_noctxt>
  4262be:	e9 4d fd ff ff 	jmp	-691 <runtime.allocm>
  4262c3:	cc 	int3
  4262c4:	cc 	int3
  4262c5:	cc 	int3
  4262c6:	cc 	int3
  4262c7:	cc 	int3
  4262c8:	cc 	int3
  4262c9:	cc 	int3
  4262ca:	cc 	int3
  4262cb:	cc 	int3
  4262cc:	cc 	int3
  4262cd:	cc 	int3
  4262ce:	cc 	int3
  4262cf:	cc 	int3

runtime.needm:
  4262d0:	48 83 ec 38 	subq	$56, %rsp
  4262d4:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  4262d9:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  4262de:	0f b6 05 c7 d5 09 00 	movzbl	644551(%rip), %eax
  4262e5:	84 c0 	testb	%al, %al
  4262e7:	74 0f 	je	15 <runtime.needm+0x28>
  4262e9:	0f b6 05 b2 d5 09 00 	movzbl	644530(%rip), %eax
  4262f0:	84 c0 	testb	%al, %al
  4262f2:	0f 84 de 00 00 00 	je	222 <runtime.needm+0x106>
  4262f8:	c6 04 24 00 	movb	$0, (%rsp)
  4262fc:	e8 7f 04 00 00 	callq	1151 <runtime.lockextra>
  426301:	48 8b 44 24 08 	movq	8(%rsp), %rax
  426306:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  42630b:	48 8d 88 28 01 00 00 	leaq	296(%rax), %rcx
  426312:	48 8b 90 58 01 00 00 	movq	344(%rax), %rdx
  426319:	48 85 d2 	testq	%rdx, %rdx
  42631c:	0f 94 01 	sete	(%rcx)
  42631f:	83 05 a2 d5 09 00 ff 	addl	$-1, 644514(%rip)
  426326:	48 8b 88 58 01 00 00 	movq	344(%rax), %rcx
  42632d:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  426332:	48 8d 15 1f d6 09 00 	leaq	644639(%rip), %rdx
  426339:	48 87 0a 	xchgq	%rcx, (%rdx)
  42633c:	48 89 04 24 	movq	%rax, (%rsp)
  426340:	e8 7b cd 00 00 	callq	52603 <runtime.msigsave>
  426345:	e8 f6 cd 00 00 	callq	52726 <runtime.sigblock>
  42634a:	48 8b 44 24 20 	movq	32(%rsp), %rax
  42634f:	48 8b 08 	movq	(%rax), %rcx
  426352:	48 89 0c 24 	movq	%rcx, (%rsp)
  426356:	e8 55 f9 01 00 	callq	129365 <runtime.setg>
  42635b:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  426364:	48 8d 4c 24 40 	leaq	64(%rsp), %rcx
  426369:	48 81 c1 00 04 00 00 	addq	$1024, %rcx
  426370:	48 89 48 08 	movq	%rcx, 8(%rax)
  426374:	48 8d 4c 24 40 	leaq	64(%rsp), %rcx
  426379:	48 8d 91 00 80 ff ff 	leaq	-32768(%rcx), %rdx
  426380:	48 89 10 	movq	%rdx, (%rax)
  426383:	48 81 c1 70 83 ff ff 	addq	$-31888, %rcx
  42638a:	48 89 48 10 	movq	%rcx, 16(%rax)
  42638e:	e8 9d df 01 00 	callq	122781 <runtime.asminit>
  426393:	e8 c8 92 ff ff 	callq	-27960 <runtime.minit>
  426398:	48 8b 44 24 20 	movq	32(%rsp), %rax
  42639d:	48 8b 80 c0 00 00 00 	movq	192(%rax), %rax
  4263a4:	48 89 04 24 	movq	%rax, (%rsp)
  4263a8:	48 b8 06 00 00 00 03 00 00 00 	movabsq	$12884901894, %rax
  4263b2:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4263b7:	e8 c4 e6 ff ff 	callq	-6460 <runtime.casgstatus>
  4263bc:	b8 ff ff ff ff 	movl	$4294967295, %eax
  4263c1:	48 8d 0d 98 15 08 00 	leaq	529816(%rip), %rcx
  4263c8:	f0 	lock
  4263c9:	0f c1 01 	xaddl	%eax, (%rcx)
  4263cc:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  4263d1:	48 83 c4 38 	addq	$56, %rsp
  4263d5:	c3 	retq
  4263d6:	48 8b 05 6b f7 07 00 	movq	522091(%rip), %rax
  4263dd:	48 8b 0d 5c f7 07 00 	movq	522076(%rip), %rcx
  4263e4:	48 85 c0 	testq	%rax, %rax
  4263e7:	76 27 	jbe	39 <runtime.needm+0x140>
  4263e9:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4263ee:	48 c7 04 24 02 00 00 00 	movq	$2, (%rsp)
  4263f6:	89 44 24 10 	movl	%eax, 16(%rsp)
  4263fa:	e8 51 14 02 00 	callq	136273 <runtime.write>
  4263ff:	c7 04 24 01 00 00 00 	movl	$1, (%rsp)
  426406:	e8 c5 13 02 00 	callq	136133 <runtime.exit>
  42640b:	e9 e8 fe ff ff 	jmp	-280 <runtime.needm+0x28>
  426410:	e8 2b 96 ff ff 	callq	-27093 <runtime.panicindex>
  426415:	0f 0b 	ud2
  426417:	cc 	int3
  426418:	cc 	int3
  426419:	cc 	int3
  42641a:	cc 	int3
  42641b:	cc 	int3
  42641c:	cc 	int3
  42641d:	cc 	int3
  42641e:	cc 	int3
  42641f:	cc 	int3

runtime.newextram:
  426420:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  426429:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42642d:	76 73 	jbe	115 <runtime.newextram+0x82>
  42642f:	48 83 ec 28 	subq	$40, %rsp
  426433:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  426438:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  42643d:	31 c0 	xorl	%eax, %eax
  42643f:	48 8d 0d 86 d4 09 00 	leaq	644230(%rip), %rcx
  426446:	87 01 	xchgl	%eax, (%rcx)
  426448:	85 c0 	testl	%eax, %eax
  42644a:	76 2a 	jbe	42 <runtime.newextram+0x56>
  42644c:	89 44 24 14 	movl	%eax, 20(%rsp)
  426450:	31 c9 	xorl	%ecx, %ecx
  426452:	eb 14 	jmp	20 <runtime.newextram+0x48>
  426454:	89 4c 24 10 	movl	%ecx, 16(%rsp)
  426458:	e8 53 00 00 00 	callq	83 <runtime.oneNewExtraM>
  42645d:	8b 44 24 10 	movl	16(%rsp), %eax
  426461:	8d 48 01 	leal	1(%rax), %ecx
  426464:	8b 44 24 14 	movl	20(%rsp), %eax
  426468:	39 c1 	cmpl	%eax, %ecx
  42646a:	72 e8 	jb	-24 <runtime.newextram+0x34>
  42646c:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  426471:	48 83 c4 28 	addq	$40, %rsp
  426475:	c3 	retq
  426476:	c6 04 24 01 	movb	$1, (%rsp)
  42647a:	e8 01 03 00 00 	callq	769 <runtime.lockextra>
  42647f:	48 8b 44 24 08 	movq	8(%rsp), %rax
  426484:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  426489:	48 89 c1 	movq	%rax, %rcx
  42648c:	48 8d 15 c5 d4 09 00 	leaq	644293(%rip), %rdx
  426493:	48 87 02 	xchgq	%rax, (%rdx)
  426496:	48 85 c9 	testq	%rcx, %rcx
  426499:	75 d1 	jne	-47 <runtime.newextram+0x4c>
  42649b:	e8 10 00 00 00 	callq	16 <runtime.oneNewExtraM>
  4264a0:	eb ca 	jmp	-54 <runtime.newextram+0x4c>
  4264a2:	e8 c9 e0 01 00 	callq	123081 <runtime.morestack_noctxt>
  4264a7:	e9 74 ff ff ff 	jmp	-140 <runtime.newextram>
  4264ac:	cc 	int3
  4264ad:	cc 	int3
  4264ae:	cc 	int3
  4264af:	cc 	int3

runtime.oneNewExtraM:
  4264b0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4264b9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4264bd:	0f 86 c1 01 00 00 	jbe	449 <runtime.oneNewExtraM+0x1d4>
  4264c3:	48 83 ec 48 	subq	$72, %rsp
  4264c7:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  4264cc:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  4264d1:	0f 57 c0 	xorps	%xmm0, %xmm0
  4264d4:	0f 11 04 24 	movups	%xmm0, (%rsp)
  4264d8:	e8 33 fb ff ff 	callq	-1229 <runtime.allocm>
  4264dd:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4264e2:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4264e7:	c7 04 24 00 10 00 00 	movl	$4096, (%rsp)
  4264ee:	e8 4d 3d 00 00 	callq	15693 <runtime.malg>
  4264f3:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4264f8:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  4264fd:	48 8d 0d dc 08 03 00 	leaq	198876(%rip), %rcx
  426504:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  426509:	48 8d 0d a0 7b 04 00 	leaq	293792(%rip), %rcx
  426510:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  426515:	84 01 	testb	%al, (%rcx)
  426517:	48 8d 4c 24 38 	leaq	56(%rsp), %rcx
  42651c:	84 01 	testb	%al, (%rcx)
  42651e:	48 8b 0d 8b 7b 04 00 	movq	293771(%rip), %rcx
  426525:	48 ff c1 	incq	%rcx
  426528:	48 89 48 40 	movq	%rcx, 64(%rax)
  42652c:	48 8b 48 08 	movq	8(%rax), %rcx
  426530:	48 83 c1 e0 	addq	$-32, %rcx
  426534:	48 89 48 38 	movq	%rcx, 56(%rax)
  426538:	48 c7 40 60 00 00 00 00 	movq	$0, 96(%rax)
  426540:	48 89 c1 	movq	%rax, %rcx
  426543:	48 89 41 48 	movq	%rax, 72(%rcx)
  426547:	48 8b 41 40 	movq	64(%rcx), %rax
  42654b:	48 89 41 78 	movq	%rax, 120(%rcx)
  42654f:	48 8b 41 38 	movq	56(%rcx), %rax
  426553:	48 89 41 70 	movq	%rax, 112(%rcx)
  426557:	48 8b 41 38 	movq	56(%rcx), %rax
  42655b:	48 89 81 80 00 00 00 	movq	%rax, 128(%rcx)
  426562:	c6 81 c4 00 00 00 01 	movb	$1, 196(%rcx)
  426569:	c6 81 c3 00 00 00 01 	movb	$1, 195(%rcx)
  426570:	48 89 0c 24 	movq	%rcx, (%rsp)
  426574:	48 b8 00 00 00 00 06 00 00 00 	movabsq	$25769803776, %rax
  42657e:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  426583:	e8 f8 e4 ff ff 	callq	-6920 <runtime.casgstatus>
  426588:	8b 05 82 d4 09 00 	movl	644226(%rip), %eax
  42658e:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  426593:	48 8d 79 30 	leaq	48(%rcx), %rdi
  426597:	85 c0 	testl	%eax, %eax
  426599:	0f 85 d3 00 00 00 	jne	211 <runtime.oneNewExtraM+0x1c2>
  42659f:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  4265a4:	48 89 51 30 	movq	%rdx, 48(%rcx)
  4265a8:	84 02 	testb	%al, (%rdx)
  4265aa:	8b 1d 60 d4 09 00 	movl	644192(%rip), %ebx
  4265b0:	48 8d ba c0 00 00 00 	leaq	192(%rdx), %rdi
  4265b7:	85 db 	testl	%ebx, %ebx
  4265b9:	0f 85 a6 00 00 00 	jne	166 <runtime.oneNewExtraM+0x1b5>
  4265bf:	48 89 8a c0 00 00 00 	movq	%rcx, 192(%rdx)
  4265c6:	ff 82 f8 02 00 00 	incl	760(%rdx)
  4265cc:	48 8d 82 68 01 00 00 	leaq	360(%rdx), %rax
  4265d3:	84 00 	testb	%al, (%rax)
  4265d5:	48 89 c8 	movq	%rcx, %rax
  4265d8:	48 89 8a 68 01 00 00 	movq	%rcx, 360(%rdx)
  4265df:	48 8d 88 e0 00 00 00 	leaq	224(%rax), %rcx
  4265e6:	84 01 	testb	%al, (%rcx)
  4265e8:	48 89 90 e0 00 00 00 	movq	%rdx, 224(%rax)
  4265ef:	ba 01 00 00 00 	movl	$1, %edx
  4265f4:	48 8d 1d 25 13 08 00 	leaq	529189(%rip), %rbx
  4265fb:	f0 	lock
  4265fc:	48 0f c1 13 	xaddq	%rdx, (%rbx)
  426600:	48 ff c2 	incq	%rdx
  426603:	48 89 90 98 00 00 00 	movq	%rdx, 152(%rax)
  42660a:	48 89 04 24 	movq	%rax, (%rsp)
  42660e:	e8 0d d3 ff ff 	callq	-11507 <runtime.allgadd>
  426613:	b8 01 00 00 00 	movl	$1, %eax
  426618:	48 8d 0d 41 13 08 00 	leaq	529217(%rip), %rcx
  42661f:	f0 	lock
  426620:	0f c1 01 	xaddl	%eax, (%rcx)
  426623:	c6 04 24 01 	movb	$1, (%rsp)
  426627:	e8 54 01 00 00 	callq	340 <runtime.lockextra>
  42662c:	48 8b 44 24 18 	movq	24(%rsp), %rax
  426631:	48 8d 88 58 01 00 00 	leaq	344(%rax), %rcx
  426638:	84 01 	testb	%al, (%rcx)
  42663a:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  42663f:	48 89 88 58 01 00 00 	movq	%rcx, 344(%rax)
  426646:	ff 05 7c d2 09 00 	incl	643708(%rip)
  42664c:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  426651:	48 8d 0d 00 d3 09 00 	leaq	643840(%rip), %rcx
  426658:	48 87 01 	xchgq	%rax, (%rcx)
  42665b:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  426660:	48 83 c4 48 	addq	$72, %rsp
  426664:	c3 	retq
  426665:	48 89 c8 	movq	%rcx, %rax
  426668:	e8 33 02 02 00 	callq	131635 <runtime.gcWriteBarrier>
  42666d:	e9 54 ff ff ff 	jmp	-172 <runtime.oneNewExtraM+0x116>
  426672:	48 8b 44 24 18 	movq	24(%rsp), %rax
  426677:	e8 24 02 02 00 	callq	131620 <runtime.gcWriteBarrier>
  42667c:	48 89 c2 	movq	%rax, %rdx
  42667f:	e9 24 ff ff ff 	jmp	-220 <runtime.oneNewExtraM+0xf8>
  426684:	e8 e7 de 01 00 	callq	122599 <runtime.morestack_noctxt>
  426689:	e9 22 fe ff ff 	jmp	-478 <runtime.oneNewExtraM>
  42668e:	cc 	int3
  42668f:	cc 	int3

runtime.dropm:
  426690:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  426699:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42669d:	0f 86 cc 00 00 00 	jbe	204 <runtime.dropm+0xdf>
  4266a3:	48 83 ec 30 	subq	$48, %rsp
  4266a7:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  4266ac:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  4266b1:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4266ba:	48 8b 40 30 	movq	48(%rax), %rax
  4266be:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4266c3:	48 8b 88 c0 00 00 00 	movq	192(%rax), %rcx
  4266ca:	48 89 0c 24 	movq	%rcx, (%rsp)
  4266ce:	48 b9 03 00 00 00 06 00 00 00 	movabsq	$25769803779, %rcx
  4266d8:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4266dd:	e8 9e e3 ff ff 	callq	-7266 <runtime.casgstatus>
  4266e2:	b8 01 00 00 00 	movl	$1, %eax
  4266e7:	48 8d 0d 72 12 08 00 	leaq	529010(%rip), %rcx
  4266ee:	f0 	lock
  4266ef:	0f c1 01 	xaddl	%eax, (%rcx)
  4266f2:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4266f7:	48 8b 88 80 00 00 00 	movq	128(%rax), %rcx
  4266fe:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  426703:	e8 38 ca 00 00 	callq	51768 <runtime.sigblock>
  426708:	e8 a3 8f ff ff 	callq	-28765 <runtime.unminit>
  42670d:	c6 04 24 01 	movb	$1, (%rsp)
  426711:	e8 6a 00 00 00 	callq	106 <runtime.lockextra>
  426716:	48 8b 44 24 08 	movq	8(%rsp), %rax
  42671b:	ff 05 a7 d1 09 00 	incl	643495(%rip)
  426721:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  426726:	48 8d 91 58 01 00 00 	leaq	344(%rcx), %rdx
  42672d:	84 02 	testb	%al, (%rdx)
  42672f:	48 89 81 58 01 00 00 	movq	%rax, 344(%rcx)
  426736:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  42673e:	e8 6d f5 01 00 	callq	128365 <runtime.setg>
  426743:	48 8b 44 24 18 	movq	24(%rsp), %rax
  426748:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  42674d:	48 8d 0d 04 d2 09 00 	leaq	643588(%rip), %rcx
  426754:	48 87 01 	xchgq	%rax, (%rcx)
  426757:	48 8b 44 24 10 	movq	16(%rsp), %rax
  42675c:	48 89 04 24 	movq	%rax, (%rsp)
  426760:	e8 9b c9 00 00 	callq	51611 <runtime.msigrestore>
  426765:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  42676a:	48 83 c4 30 	addq	$48, %rsp
  42676e:	c3 	retq
  42676f:	e8 fc dd 01 00 	callq	122364 <runtime.morestack_noctxt>
  426774:	e9 17 ff ff ff 	jmp	-233 <runtime.dropm>
  426779:	cc 	int3
  42677a:	cc 	int3
  42677b:	cc 	int3
  42677c:	cc 	int3
  42677d:	cc 	int3
  42677e:	cc 	int3
  42677f:	cc 	int3

runtime.lockextra:
  426780:	48 83 ec 18 	subq	$24, %rsp
  426784:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  426789:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  42678e:	31 c0 	xorl	%eax, %eax
  426790:	88 44 24 0f 	movb	%al, 15(%rsp)
  426794:	48 8b 0d bd d1 09 00 	movq	643517(%rip), %rcx
  42679b:	48 83 f9 01 	cmpq	$1, %rcx
  42679f:	0f 84 81 00 00 00 	je	129 <runtime.lockextra+0xa6>
  4267a5:	48 85 c9 	testq	%rcx, %rcx
  4267a8:	75 75 	jne	117 <runtime.lockextra+0x9f>
  4267aa:	0f b6 5c 24 20 	movzbl	32(%rsp), %ebx
  4267af:	84 db 	testb	%bl, %bl
  4267b1:	74 43 	je	67 <runtime.lockextra+0x76>
  4267b3:	48 89 c8 	movq	%rcx, %rax
  4267b6:	48 8d 35 9b d1 09 00 	leaq	643483(%rip), %rsi
  4267bd:	bf 01 00 00 00 	movl	$1, %edi
  4267c2:	f0 	lock
  4267c3:	48 0f b1 3e 	cmpxchgq	%rdi, (%rsi)
  4267c7:	41 0f 94 c0 	sete	%r8b
  4267cb:	45 84 c0 	testb	%r8b, %r8b
  4267ce:	75 17 	jne	23 <runtime.lockextra+0x67>
  4267d0:	48 8b 05 b9 79 04 00 	movq	293305(%rip), %rax
  4267d7:	48 8d 15 b2 79 04 00 	leaq	293298(%rip), %rdx
  4267de:	ff d0 	callq	*%rax
  4267e0:	0f b6 44 24 0f 	movzbl	15(%rsp), %eax
  4267e5:	eb a9 	jmp	-87 <runtime.lockextra+0x10>
  4267e7:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  4267ec:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  4267f1:	48 83 c4 18 	addq	$24, %rsp
  4267f5:	c3 	retq
  4267f6:	84 c0 	testb	%al, %al
  4267f8:	74 13 	je	19 <runtime.lockextra+0x8d>
  4267fa:	c7 04 24 01 00 00 00 	movl	$1, (%rsp)
  426801:	e8 aa 10 02 00 	callq	135338 <runtime.usleep>
  426806:	b8 01 00 00 00 	movl	$1, %eax
  42680b:	eb 83 	jmp	-125 <runtime.lockextra+0x10>
  42680d:	b8 01 00 00 00 	movl	$1, %eax
  426812:	48 8d 0d b3 d0 09 00 	leaq	643251(%rip), %rcx
  426819:	f0 	lock
  42681a:	0f c1 01 	xaddl	%eax, (%rcx)
  42681d:	eb db 	jmp	-37 <runtime.lockextra+0x7a>
  42681f:	0f b6 5c 24 20 	movzbl	32(%rsp), %ebx
  426824:	eb 8d 	jmp	-115 <runtime.lockextra+0x33>
  426826:	48 8b 05 63 79 04 00 	movq	293219(%rip), %rax
  42682d:	48 8d 15 5c 79 04 00 	leaq	293212(%rip), %rdx
  426834:	ff d0 	callq	*%rax
  426836:	0f b6 44 24 0f 	movzbl	15(%rsp), %eax
  42683b:	e9 50 ff ff ff 	jmp	-176 <runtime.lockextra+0x10>

runtime.newm:
  426840:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  426849:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42684d:	0f 86 28 01 00 00 	jbe	296 <runtime.newm+0x13b>
  426853:	48 83 ec 28 	subq	$40, %rsp
  426857:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  42685c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  426861:	48 8b 44 24 38 	movq	56(%rsp), %rax
  426866:	48 89 04 24 	movq	%rax, (%rsp)
  42686a:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  42686f:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  426874:	e8 97 f7 ff ff 	callq	-2153 <runtime.allocm>
  426879:	48 8b 44 24 10 	movq	16(%rsp), %rax
  42687e:	48 8d 88 d8 00 00 00 	leaq	216(%rax), %rcx
  426885:	84 01 	testb	%al, (%rcx)
  426887:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  42688c:	48 89 88 d8 00 00 00 	movq	%rcx, 216(%rax)
  426893:	48 8b 0d de d0 09 00 	movq	643294(%rip), %rcx
  42689a:	48 89 88 80 00 00 00 	movq	%rcx, 128(%rax)
  4268a1:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4268aa:	48 85 c9 	testq	%rcx, %rcx
  4268ad:	74 23 	je	35 <runtime.newm+0x92>
  4268af:	48 8b 49 30 	movq	48(%rcx), %rcx
  4268b3:	48 85 c9 	testq	%rcx, %rcx
  4268b6:	74 1a 	je	26 <runtime.newm+0x92>
  4268b8:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4268bd:	8b 91 f4 02 00 00 	movl	756(%rcx), %edx
  4268c3:	85 d2 	testl	%edx, %edx
  4268c5:	75 1e 	jne	30 <runtime.newm+0xa5>
  4268c7:	0f b6 89 19 01 00 00 	movzbl	281(%rcx), %ecx
  4268ce:	84 c9 	testb	%cl, %cl
  4268d0:	75 13 	jne	19 <runtime.newm+0xa5>
  4268d2:	48 89 04 24 	movq	%rax, (%rsp)
  4268d6:	e8 b5 00 00 00 	callq	181 <runtime.newm1>
  4268db:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4268e0:	48 83 c4 28 	addq	$40, %rsp
  4268e4:	c3 	retq
  4268e5:	48 8d 05 54 d1 09 00 	leaq	643412(%rip), %rax
  4268ec:	48 89 04 24 	movq	%rax, (%rsp)
  4268f0:	e8 2b 2c fe ff 	callq	-119765 <runtime.lock>
  4268f5:	8b 05 65 d1 09 00 	movl	643429(%rip), %eax
  4268fb:	85 c0 	testl	%eax, %eax
  4268fd:	74 61 	je	97 <runtime.newm+0x120>
  4268ff:	48 8b 05 42 d1 09 00 	movq	643394(%rip), %rax
  426906:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  42690b:	48 89 81 58 01 00 00 	movq	%rax, 344(%rcx)
  426912:	48 8d 05 2f d1 09 00 	leaq	643375(%rip), %rax
  426919:	84 00 	testb	%al, (%rax)
  42691b:	48 89 0d 26 d1 09 00 	movq	%rcx, 643366(%rip)
  426922:	0f b6 05 27 d1 09 00 	movzbl	643367(%rip), %eax
  426929:	84 c0 	testb	%al, %al
  42692b:	75 1a 	jne	26 <runtime.newm+0x107>
  42692d:	48 8d 05 0c d1 09 00 	leaq	643340(%rip), %rax
  426934:	48 89 04 24 	movq	%rax, (%rsp)
  426938:	e8 83 2d fe ff 	callq	-119421 <runtime.unlock>
  42693d:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  426942:	48 83 c4 28 	addq	$40, %rsp
  426946:	c3 	retq
  426947:	c6 05 02 d1 09 00 00 	movb	$0, 643330(%rip)
  42694e:	48 8d 05 03 d1 09 00 	leaq	643331(%rip), %rax
  426955:	48 89 04 24 	movq	%rax, (%rsp)
  426959:	e8 32 2e fe ff 	callq	-119246 <runtime.notewakeup>
  42695e:	eb cd 	jmp	-51 <runtime.newm+0xed>
  426960:	48 8d 05 3a 6b 04 00 	leaq	289594(%rip), %rax
  426967:	48 89 04 24 	movq	%rax, (%rsp)
  42696b:	48 c7 44 24 08 2a 00 00 00 	movq	$42, 8(%rsp)
  426974:	e8 57 a8 ff ff 	callq	-22441 <runtime.throw>
  426979:	0f 0b 	ud2
  42697b:	e8 f0 db 01 00 	callq	121840 <runtime.morestack_noctxt>
  426980:	e9 bb fe ff ff 	jmp	-325 <runtime.newm>
  426985:	cc 	int3
  426986:	cc 	int3
  426987:	cc 	int3
  426988:	cc 	int3
  426989:	cc 	int3
  42698a:	cc 	int3
  42698b:	cc 	int3
  42698c:	cc 	int3
  42698d:	cc 	int3
  42698e:	cc 	int3
  42698f:	cc 	int3

runtime.newm1:
  426990:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  426999:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42699d:	0f 86 35 01 00 00 	jbe	309 <runtime.newm1+0x148>
  4269a3:	48 83 ec 48 	subq	$72, %rsp
  4269a7:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  4269ac:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  4269b1:	0f b6 05 f4 ce 09 00 	movzbl	642804(%rip), %eax
  4269b8:	84 c0 	testb	%al, %al
  4269ba:	0f 84 b9 00 00 00 	je	185 <runtime.newm1+0xe9>
  4269c0:	48 c7 44 24 28 00 00 00 00 	movq	$0, 40(%rsp)
  4269c9:	0f 57 c0 	xorps	%xmm0, %xmm0
  4269cc:	0f 11 44 24 30 	movups	%xmm0, 48(%rsp)
  4269d1:	48 8b 05 18 0c 08 00 	movq	527384(%rip), %rax
  4269d8:	48 85 c0 	testq	%rax, %rax
  4269db:	0f 84 dc 00 00 00 	je	220 <runtime.newm1+0x12d>
  4269e1:	48 8d 44 24 28 	leaq	40(%rsp), %rax
  4269e6:	84 00 	testb	%al, (%rax)
  4269e8:	48 8b 44 24 50 	movq	80(%rsp), %rax
  4269ed:	48 8b 08 	movq	(%rax), %rcx
  4269f0:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  4269f5:	48 05 88 00 00 00 	addq	$136, %rax
  4269fb:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  426a00:	48 8d 05 d9 fc 02 00 	leaq	195801(%rip), %rax
  426a07:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  426a0c:	48 8d 05 65 77 04 00 	leaq	292709(%rip), %rax
  426a13:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  426a18:	b8 08 00 00 00 	movl	$8, %eax
  426a1d:	48 8d 4c 24 18 	leaq	24(%rsp), %rcx
  426a22:	48 8b 04 01 	movq	(%rcx,%rax), %rax
  426a26:	48 8d 4c 24 20 	leaq	32(%rsp), %rcx
  426a2b:	84 01 	testb	%al, (%rcx)
  426a2d:	48 8b 00 	movq	(%rax), %rax
  426a30:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  426a35:	48 8d 05 44 d0 09 00 	leaq	643140(%rip), %rax
  426a3c:	48 89 04 24 	movq	%rax, (%rsp)
  426a40:	e8 2b 93 00 00 	callq	37675 <runtime.(*rwmutex).rlock>
  426a45:	48 8b 05 a4 0b 08 00 	movq	527268(%rip), %rax
  426a4c:	48 89 04 24 	movq	%rax, (%rsp)
  426a50:	48 8d 44 24 28 	leaq	40(%rsp), %rax
  426a55:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  426a5a:	e8 91 f1 01 00 	callq	127377 <runtime.asmcgocall>
  426a5f:	48 8d 05 1a d0 09 00 	leaq	643098(%rip), %rax
  426a66:	48 89 04 24 	movq	%rax, (%rsp)
  426a6a:	e8 81 93 00 00 	callq	37761 <runtime.(*rwmutex).runlock>
  426a6f:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  426a74:	48 83 c4 48 	addq	$72, %rsp
  426a78:	c3 	retq
  426a79:	48 8d 05 00 d0 09 00 	leaq	643072(%rip), %rax
  426a80:	48 89 04 24 	movq	%rax, (%rsp)
  426a84:	e8 e7 92 00 00 	callq	37607 <runtime.(*rwmutex).rlock>
  426a89:	48 8b 44 24 50 	movq	80(%rsp), %rax
  426a8e:	48 8b 08 	movq	(%rax), %rcx
  426a91:	48 8b 49 08 	movq	8(%rcx), %rcx
  426a95:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  426a9a:	48 89 04 24 	movq	%rax, (%rsp)
  426a9e:	e8 1d 84 ff ff 	callq	-31715 <runtime.newosproc>
  426aa3:	48 8d 05 d6 cf 09 00 	leaq	643030(%rip), %rax
  426aaa:	48 89 04 24 	movq	%rax, (%rsp)
  426aae:	e8 3d 93 00 00 	callq	37693 <runtime.(*rwmutex).runlock>
  426ab3:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  426ab8:	48 83 c4 48 	addq	$72, %rsp
  426abc:	c3 	retq
  426abd:	48 8d 05 bb 4e 04 00 	leaq	282299(%rip), %rax
  426ac4:	48 89 04 24 	movq	%rax, (%rsp)
  426ac8:	48 c7 44 24 08 19 00 00 00 	movq	$25, 8(%rsp)
  426ad1:	e8 fa a6 ff ff 	callq	-22790 <runtime.throw>
  426ad6:	0f 0b 	ud2
  426ad8:	e8 93 da 01 00 	callq	121491 <runtime.morestack_noctxt>
  426add:	e9 ae fe ff ff 	jmp	-338 <runtime.newm1>
  426ae2:	cc 	int3
  426ae3:	cc 	int3
  426ae4:	cc 	int3
  426ae5:	cc 	int3
  426ae6:	cc 	int3
  426ae7:	cc 	int3
  426ae8:	cc 	int3
  426ae9:	cc 	int3
  426aea:	cc 	int3
  426aeb:	cc 	int3
  426aec:	cc 	int3
  426aed:	cc 	int3
  426aee:	cc 	int3
  426aef:	cc 	int3

runtime.startTemplateThread:
  426af0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  426af9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  426afd:	76 54 	jbe	84 <runtime.startTemplateThread+0x63>
  426aff:	48 83 ec 18 	subq	$24, %rsp
  426b03:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  426b08:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  426b0d:	31 c0 	xorl	%eax, %eax
  426b0f:	48 8d 0d 4a cf 09 00 	leaq	642890(%rip), %rcx
  426b16:	ba 01 00 00 00 	movl	$1, %edx
  426b1b:	f0 	lock
  426b1c:	0f b1 11 	cmpxchgl	%edx, (%rcx)
  426b1f:	0f 94 c1 	sete	%cl
  426b22:	84 c9 	testb	%cl, %cl
  426b24:	74 23 	je	35 <runtime.startTemplateThread+0x59>
  426b26:	48 8d 05 fb 76 04 00 	leaq	292603(%rip), %rax
  426b2d:	48 89 04 24 	movq	%rax, (%rsp)
  426b31:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  426b3a:	e8 01 fd ff ff 	callq	-767 <runtime.newm>
  426b3f:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  426b44:	48 83 c4 18 	addq	$24, %rsp
  426b48:	c3 	retq
  426b49:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  426b4e:	48 83 c4 18 	addq	$24, %rsp
  426b52:	c3 	retq
  426b53:	e8 18 da 01 00 	callq	121368 <runtime.morestack_noctxt>
  426b58:	eb 96 	jmp	-106 <runtime.startTemplateThread>
  426b5a:	cc 	int3
  426b5b:	cc 	int3
  426b5c:	cc 	int3
  426b5d:	cc 	int3
  426b5e:	cc 	int3
  426b5f:	cc 	int3

runtime.templateThread:
  426b60:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  426b69:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  426b6d:	0f 86 f8 00 00 00 	jbe	248 <runtime.templateThread+0x10b>
  426b73:	48 83 ec 18 	subq	$24, %rsp
  426b77:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  426b7c:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  426b81:	48 8d 05 a8 0d 08 00 	leaq	527784(%rip), %rax
  426b88:	48 89 04 24 	movq	%rax, (%rsp)
  426b8c:	e8 8f 29 fe ff 	callq	-120433 <runtime.lock>
  426b91:	ff 05 bd 0d 08 00 	incl	527805(%rip)
  426b97:	e8 d4 58 00 00 	callq	22740 <runtime.checkdead>
  426b9c:	48 8d 05 8d 0d 08 00 	leaq	527757(%rip), %rax
  426ba3:	48 89 04 24 	movq	%rax, (%rsp)
  426ba7:	e8 14 2b fe ff 	callq	-120044 <runtime.unlock>
  426bac:	e9 a8 00 00 00 	jmp	168 <runtime.templateThread+0xf9>
  426bb1:	48 8b 88 58 01 00 00 	movq	344(%rax), %rcx
  426bb8:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  426bbd:	48 c7 80 58 01 00 00 00 00 00 00 	movq	$0, 344(%rax)
  426bc8:	48 89 04 24 	movq	%rax, (%rsp)
  426bcc:	e8 bf fd ff ff 	callq	-577 <runtime.newm1>
  426bd1:	48 8b 44 24 08 	movq	8(%rsp), %rax
  426bd6:	48 85 c0 	testq	%rax, %rax
  426bd9:	75 d6 	jne	-42 <runtime.templateThread+0x51>
  426bdb:	48 8d 05 5e ce 09 00 	leaq	642654(%rip), %rax
  426be2:	48 89 04 24 	movq	%rax, (%rsp)
  426be6:	e8 35 29 fe ff 	callq	-120523 <runtime.lock>
  426beb:	48 8b 05 56 ce 09 00 	movq	642646(%rip), %rax
  426bf2:	48 85 c0 	testq	%rax, %rax
  426bf5:	74 27 	je	39 <runtime.templateThread+0xbe>
  426bf7:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  426bfc:	48 c7 05 41 ce 09 00 00 00 00 00 	movq	$0, 642625(%rip)
  426c07:	48 8d 0d 32 ce 09 00 	leaq	642610(%rip), %rcx
  426c0e:	48 89 0c 24 	movq	%rcx, (%rsp)
  426c12:	e8 a9 2a fe ff 	callq	-120151 <runtime.unlock>
  426c17:	48 8b 44 24 08 	movq	8(%rsp), %rax
  426c1c:	eb b8 	jmp	-72 <runtime.templateThread+0x76>
  426c1e:	c6 05 2b ce 09 00 01 	movb	$1, 642603(%rip)
  426c25:	48 8d 05 2c ce 09 00 	leaq	642604(%rip), %rax
  426c2c:	84 00 	testb	%al, (%rax)
  426c2e:	48 c7 05 1f ce 09 00 00 00 00 00 	movq	$0, 642591(%rip)
  426c39:	48 8d 0d 00 ce 09 00 	leaq	642560(%rip), %rcx
  426c40:	48 89 0c 24 	movq	%rcx, (%rsp)
  426c44:	e8 77 2a fe ff 	callq	-120201 <runtime.unlock>
  426c49:	48 8d 05 08 ce 09 00 	leaq	642568(%rip), %rax
  426c50:	48 89 04 24 	movq	%rax, (%rsp)
  426c54:	e8 f7 2b fe ff 	callq	-119817 <runtime.notesleep>
  426c59:	48 8d 05 e0 cd 09 00 	leaq	642528(%rip), %rax
  426c60:	48 89 04 24 	movq	%rax, (%rsp)
  426c64:	e8 b7 28 fe ff 	callq	-120649 <runtime.lock>
  426c69:	eb 80 	jmp	-128 <runtime.templateThread+0x8b>
  426c6b:	e8 00 d9 01 00 	callq	121088 <runtime.morestack_noctxt>
  426c70:	e9 eb fe ff ff 	jmp	-277 <runtime.templateThread>
  426c75:	cc 	int3
  426c76:	cc 	int3
  426c77:	cc 	int3
  426c78:	cc 	int3
  426c79:	cc 	int3
  426c7a:	cc 	int3
  426c7b:	cc 	int3
  426c7c:	cc 	int3
  426c7d:	cc 	int3
  426c7e:	cc 	int3
  426c7f:	cc 	int3

runtime.stopm:
  426c80:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  426c89:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  426c8d:	0f 86 80 01 00 00 	jbe	384 <runtime.stopm+0x193>
  426c93:	48 83 ec 20 	subq	$32, %rsp
  426c97:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  426c9c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  426ca1:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  426caa:	48 8b 48 30 	movq	48(%rax), %rcx
  426cae:	8b 91 00 01 00 00 	movl	256(%rcx), %edx
  426cb4:	85 d2 	testl	%edx, %edx
  426cb6:	0f 85 3c 01 00 00 	jne	316 <runtime.stopm+0x178>
  426cbc:	48 8b 91 d0 00 00 00 	movq	208(%rcx), %rdx
  426cc3:	48 85 d2 	testq	%rdx, %rdx
  426cc6:	0f 85 11 01 00 00 	jne	273 <runtime.stopm+0x15d>
  426ccc:	0f b6 89 14 01 00 00 	movzbl	276(%rcx), %ecx
  426cd3:	84 c9 	testb	%cl, %cl
  426cd5:	0f 85 e7 00 00 00 	jne	231 <runtime.stopm+0x142>
  426cdb:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  426ce0:	eb 36 	jmp	54 <runtime.stopm+0x98>
  426ce2:	e8 d9 c4 fe ff 	callq	-80679 <runtime.gchelper>
  426ce7:	48 8b 44 24 10 	movq	16(%rsp), %rax
  426cec:	48 8b 48 30 	movq	48(%rax), %rcx
  426cf0:	c7 81 10 01 00 00 00 00 00 00 	movl	$0, 272(%rcx)
  426cfa:	48 8b 48 30 	movq	48(%rax), %rcx
  426cfe:	48 c7 81 60 01 00 00 00 00 00 00 	movq	$0, 352(%rcx)
  426d09:	48 8b 48 30 	movq	48(%rax), %rcx
  426d0d:	48 c7 81 d0 00 00 00 00 00 00 00 	movq	$0, 208(%rcx)
  426d18:	48 8d 05 11 0c 08 00 	leaq	527377(%rip), %rax
  426d1f:	48 89 04 24 	movq	%rax, (%rsp)
  426d23:	e8 f8 27 fe ff 	callq	-120840 <runtime.lock>
  426d28:	48 8b 44 24 10 	movq	16(%rsp), %rax
  426d2d:	48 8b 48 30 	movq	48(%rax), %rcx
  426d31:	48 89 0c 24 	movq	%rcx, (%rsp)
  426d35:	e8 96 6e 00 00 	callq	28310 <runtime.mput>
  426d3a:	48 8d 05 ef 0b 08 00 	leaq	527343(%rip), %rax
  426d41:	48 89 04 24 	movq	%rax, (%rsp)
  426d45:	e8 76 29 fe ff 	callq	-120458 <runtime.unlock>
  426d4a:	48 8b 44 24 10 	movq	16(%rsp), %rax
  426d4f:	48 8b 48 30 	movq	48(%rax), %rcx
  426d53:	84 01 	testb	%al, (%rcx)
  426d55:	48 81 c1 48 01 00 00 	addq	$328, %rcx
  426d5c:	48 89 0c 24 	movq	%rcx, (%rsp)
  426d60:	e8 eb 2a fe ff 	callq	-120085 <runtime.notesleep>
  426d65:	48 8b 44 24 10 	movq	16(%rsp), %rax
  426d6a:	48 8b 48 30 	movq	48(%rax), %rcx
  426d6e:	48 8d 91 48 01 00 00 	leaq	328(%rcx), %rdx
  426d75:	84 02 	testb	%al, (%rdx)
  426d77:	48 c7 81 48 01 00 00 00 00 00 00 	movq	$0, 328(%rcx)
  426d82:	48 8b 48 30 	movq	48(%rax), %rcx
  426d86:	8b 91 10 01 00 00 	movl	272(%rcx), %edx
  426d8c:	85 d2 	testl	%edx, %edx
  426d8e:	0f 85 4e ff ff ff 	jne	-178 <runtime.stopm+0x62>
  426d94:	48 8b 81 d8 00 00 00 	movq	216(%rcx), %rax
  426d9b:	48 89 04 24 	movq	%rax, (%rsp)
  426d9f:	e8 3c 52 00 00 	callq	21052 <runtime.acquirep>
  426da4:	48 8b 44 24 10 	movq	16(%rsp), %rax
  426da9:	48 8b 40 30 	movq	48(%rax), %rax
  426dad:	48 c7 80 d8 00 00 00 00 00 00 00 	movq	$0, 216(%rax)
  426db8:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  426dbd:	48 83 c4 20 	addq	$32, %rsp
  426dc1:	c3 	retq
  426dc2:	48 8d 05 2d 3b 04 00 	leaq	277293(%rip), %rax
  426dc9:	48 89 04 24 	movq	%rax, (%rsp)
  426dcd:	48 c7 44 24 08 0e 00 00 00 	movq	$14, 8(%rsp)
  426dd6:	e8 f5 a3 ff ff 	callq	-23563 <runtime.throw>
  426ddb:	0f 0b 	ud2
  426ddd:	48 8d 05 ff 3b 04 00 	leaq	277503(%rip), %rax
  426de4:	48 89 04 24 	movq	%rax, (%rsp)
  426de8:	48 c7 44 24 08 0f 00 00 00 	movq	$15, 8(%rsp)
  426df1:	e8 da a3 ff ff 	callq	-23590 <runtime.throw>
  426df6:	0f 0b 	ud2
  426df8:	48 8d 05 a4 41 04 00 	leaq	278948(%rip), %rax
  426dff:	48 89 04 24 	movq	%rax, (%rsp)
  426e03:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  426e0c:	e8 bf a3 ff ff 	callq	-23617 <runtime.throw>
  426e11:	0f 0b 	ud2
  426e13:	e8 58 d7 01 00 	callq	120664 <runtime.morestack_noctxt>
  426e18:	e9 63 fe ff ff 	jmp	-413 <runtime.stopm>
  426e1d:	cc 	int3
  426e1e:	cc 	int3
  426e1f:	cc 	int3

runtime.mspinning:
  426e20:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  426e29:	48 8b 40 30 	movq	48(%rax), %rax
  426e2d:	c6 80 14 01 00 00 01 	movb	$1, 276(%rax)
  426e34:	c3 	retq
  426e35:	cc 	int3
  426e36:	cc 	int3
  426e37:	cc 	int3
  426e38:	cc 	int3
  426e39:	cc 	int3
  426e3a:	cc 	int3
  426e3b:	cc 	int3
  426e3c:	cc 	int3
  426e3d:	cc 	int3
  426e3e:	cc 	int3
  426e3f:	cc 	int3

runtime.startm:
  426e40:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  426e49:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  426e4d:	0f 86 08 02 00 00 	jbe	520 <runtime.startm+0x21b>
  426e53:	48 83 ec 30 	subq	$48, %rsp
  426e57:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  426e5c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  426e61:	48 8d 05 c8 0a 08 00 	leaq	527048(%rip), %rax
  426e68:	48 89 04 24 	movq	%rax, (%rsp)
  426e6c:	e8 af 26 fe ff 	callq	-121169 <runtime.lock>
  426e71:	48 8b 44 24 38 	movq	56(%rsp), %rax
  426e76:	48 85 c0 	testq	%rax, %rax
  426e79:	0f 84 07 01 00 00 	je	263 <runtime.startm+0x146>
  426e7f:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  426e84:	48 8b 0d ad 0a 08 00 	movq	527021(%rip), %rcx
  426e8b:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  426e90:	48 85 c9 	testq	%rcx, %rcx
  426e93:	74 15 	je	21 <runtime.startm+0x6a>
  426e95:	48 8b 91 58 01 00 00 	movq	344(%rcx), %rdx
  426e9c:	48 89 15 95 0a 08 00 	movq	%rdx, 526997(%rip)
  426ea3:	83 05 96 0a 08 00 ff 	addl	$-1, 526998(%rip)
  426eaa:	48 8d 05 7f 0a 08 00 	leaq	526975(%rip), %rax
  426eb1:	48 89 04 24 	movq	%rax, (%rsp)
  426eb5:	e8 06 28 fe ff 	callq	-120826 <runtime.unlock>
  426eba:	48 8b 44 24 20 	movq	32(%rsp), %rax
  426ebf:	48 85 c0 	testq	%rax, %rax
  426ec2:	0f 84 8d 00 00 00 	je	141 <runtime.startm+0x115>
  426ec8:	0f b6 88 14 01 00 00 	movzbl	276(%rax), %ecx
  426ecf:	84 c9 	testb	%cl, %cl
  426ed1:	0f 85 4e 01 00 00 	jne	334 <runtime.startm+0x1e5>
  426ed7:	48 8b 88 d8 00 00 00 	movq	216(%rax), %rcx
  426ede:	48 8d 90 d8 00 00 00 	leaq	216(%rax), %rdx
  426ee5:	48 85 c9 	testq	%rcx, %rcx
  426ee8:	0f 85 1c 01 00 00 	jne	284 <runtime.startm+0x1ca>
  426eee:	0f b6 4c 24 40 	movzbl	64(%rsp), %ecx
  426ef3:	84 c9 	testb	%cl, %cl
  426ef5:	75 2d 	jne	45 <runtime.startm+0xe4>
  426ef7:	88 88 14 01 00 00 	movb	%cl, 276(%rax)
  426efd:	84 02 	testb	%al, (%rdx)
  426eff:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  426f04:	48 89 88 d8 00 00 00 	movq	%rcx, 216(%rax)
  426f0b:	48 05 48 01 00 00 	addq	$328, %rax
  426f11:	48 89 04 24 	movq	%rax, (%rsp)
  426f15:	e8 76 28 fe ff 	callq	-120714 <runtime.notewakeup>
  426f1a:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  426f1f:	48 83 c4 30 	addq	$48, %rsp
  426f23:	c3 	retq
  426f24:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  426f29:	48 8b 44 24 10 	movq	16(%rsp), %rax
  426f2e:	48 89 04 24 	movq	%rax, (%rsp)
  426f32:	e8 d9 6e 00 00 	callq	28377 <runtime.runqempty>
  426f37:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  426f3c:	84 c0 	testb	%al, %al
  426f3e:	0f 84 ab 00 00 00 	je	171 <runtime.startm+0x1af>
  426f44:	48 8b 44 24 20 	movq	32(%rsp), %rax
  426f49:	0f b6 4c 24 40 	movzbl	64(%rsp), %ecx
  426f4e:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  426f53:	eb a2 	jmp	-94 <runtime.startm+0xb7>
  426f55:	0f b6 44 24 40 	movzbl	64(%rsp), %eax
  426f5a:	84 c0 	testb	%al, %al
  426f5c:	74 24 	je	36 <runtime.startm+0x142>
  426f5e:	48 8d 05 0b 72 04 00 	leaq	291339(%rip), %rax
  426f65:	48 89 04 24 	movq	%rax, (%rsp)
  426f69:	48 8b 44 24 10 	movq	16(%rsp), %rax
  426f6e:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  426f73:	e8 c8 f8 ff ff 	callq	-1848 <runtime.newm>
  426f78:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  426f7d:	48 83 c4 30 	addq	$48, %rsp
  426f81:	c3 	retq
  426f82:	31 c0 	xorl	%eax, %eax
  426f84:	eb df 	jmp	-33 <runtime.startm+0x125>
  426f86:	48 8b 05 db 09 08 00 	movq	526811(%rip), %rax
  426f8d:	48 85 c0 	testq	%rax, %rax
  426f90:	74 1e 	je	30 <runtime.startm+0x170>
  426f92:	48 8b 48 10 	movq	16(%rax), %rcx
  426f96:	48 89 0d cb 09 08 00 	movq	%rcx, 526795(%rip)
  426f9d:	b9 ff ff ff ff 	movl	$4294967295, %ecx
  426fa2:	48 8d 15 c7 09 08 00 	leaq	526791(%rip), %rdx
  426fa9:	f0 	lock
  426faa:	0f c1 0a 	xaddl	%ecx, (%rdx)
  426fad:	48 85 c0 	testq	%rax, %rax
  426fb0:	0f 85 c9 fe ff ff 	jne	-311 <runtime.startm+0x3f>
  426fb6:	48 8d 05 73 09 08 00 	leaq	526707(%rip), %rax
  426fbd:	48 89 04 24 	movq	%rax, (%rsp)
  426fc1:	e8 fa 26 fe ff 	callq	-121094 <runtime.unlock>
  426fc6:	0f b6 44 24 40 	movzbl	64(%rsp), %eax
  426fcb:	84 c0 	testb	%al, %al
  426fcd:	74 16 	je	22 <runtime.startm+0x1a5>
  426fcf:	b8 ff ff ff ff 	movl	$4294967295, %eax
  426fd4:	48 8d 0d 99 09 08 00 	leaq	526745(%rip), %rcx
  426fdb:	f0 	lock
  426fdc:	0f c1 01 	xaddl	%eax, (%rcx)
  426fdf:	ff c8 	decl	%eax
  426fe1:	85 c0 	testl	%eax, %eax
  426fe3:	7c 5b 	jl	91 <runtime.startm+0x200>
  426fe5:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  426fea:	48 83 c4 30 	addq	$48, %rsp
  426fee:	c3 	retq
  426fef:	48 8d 05 4b 4b 04 00 	leaq	281419(%rip), %rax
  426ff6:	48 89 04 24 	movq	%rax, (%rsp)
  426ffa:	48 c7 44 24 08 19 00 00 00 	movq	$25, 8(%rsp)
  427003:	e8 c8 a1 ff ff 	callq	-24120 <runtime.throw>
  427008:	0f 0b 	ud2
  42700a:	48 8d 05 c3 39 04 00 	leaq	276931(%rip), %rax
  427011:	48 89 04 24 	movq	%rax, (%rsp)
  427015:	48 c7 44 24 08 0f 00 00 00 	movq	$15, 8(%rsp)
  42701e:	e8 ad a1 ff ff 	callq	-24147 <runtime.throw>
  427023:	0f 0b 	ud2
  427025:	48 8d 05 44 43 04 00 	leaq	279364(%rip), %rax
  42702c:	48 89 04 24 	movq	%rax, (%rsp)
  427030:	48 c7 44 24 08 15 00 00 00 	movq	$21, 8(%rsp)
  427039:	e8 92 a1 ff ff 	callq	-24174 <runtime.throw>
  42703e:	0f 0b 	ud2
  427040:	48 8d 05 ea 4e 04 00 	leaq	282346(%rip), %rax
  427047:	48 89 04 24 	movq	%rax, (%rsp)
  42704b:	48 c7 44 24 08 1b 00 00 00 	movq	$27, 8(%rsp)
  427054:	e8 77 a1 ff ff 	callq	-24201 <runtime.throw>
  427059:	0f 0b 	ud2
  42705b:	e8 10 d5 01 00 	callq	120080 <runtime.morestack_noctxt>
  427060:	e9 db fd ff ff 	jmp	-549 <runtime.startm>
  427065:	cc 	int3
  427066:	cc 	int3
  427067:	cc 	int3
  427068:	cc 	int3
  427069:	cc 	int3
  42706a:	cc 	int3
  42706b:	cc 	int3
  42706c:	cc 	int3
  42706d:	cc 	int3
  42706e:	cc 	int3
  42706f:	cc 	int3

runtime.handoffp:
  427070:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  427079:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42707d:	0f 86 df 02 00 00 	jbe	735 <runtime.handoffp+0x2f2>
  427083:	48 83 ec 18 	subq	$24, %rsp
  427087:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  42708c:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  427091:	48 8b 44 24 20 	movq	32(%rsp), %rax
  427096:	48 89 04 24 	movq	%rax, (%rsp)
  42709a:	e8 71 6d 00 00 	callq	28017 <runtime.runqempty>
  42709f:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  4270a4:	84 c0 	testb	%al, %al
  4270a6:	74 0a 	je	10 <runtime.handoffp+0x42>
  4270a8:	8b 0d da 08 08 00 	movl	526554(%rip), %ecx
  4270ae:	85 c9 	testl	%ecx, %ecx
  4270b0:	74 1d 	je	29 <runtime.handoffp+0x5f>
  4270b2:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4270b7:	48 89 04 24 	movq	%rax, (%rsp)
  4270bb:	c6 44 24 08 00 	movb	$0, 8(%rsp)
  4270c0:	e8 7b fd ff ff 	callq	-645 <runtime.startm>
  4270c5:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  4270ca:	48 83 c4 18 	addq	$24, %rsp
  4270ce:	c3 	retq
  4270cf:	8b 0d ff c7 09 00 	movl	641023(%rip), %ecx
  4270d5:	85 c9 	testl	%ecx, %ecx
  4270d7:	0f 84 7b 02 00 00 	je	635 <runtime.handoffp+0x2e8>
  4270dd:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  4270e2:	48 85 c9 	testq	%rcx, %rcx
  4270e5:	74 3f 	je	63 <runtime.handoffp+0xb6>
  4270e7:	48 8d 91 70 12 00 00 	leaq	4720(%rcx), %rdx
  4270ee:	84 02 	testb	%al, (%rdx)
  4270f0:	48 8b 91 70 12 00 00 	movq	4720(%rcx), %rdx
  4270f7:	48 85 d2 	testq	%rdx, %rdx
  4270fa:	0f 84 4e 02 00 00 	je	590 <runtime.handoffp+0x2de>
  427100:	48 8b 52 10 	movq	16(%rdx), %rdx
  427104:	48 85 d2 	testq	%rdx, %rdx
  427107:	0f 85 3a 02 00 00 	jne	570 <runtime.handoffp+0x2d7>
  42710d:	48 8b 91 78 12 00 00 	movq	4728(%rcx), %rdx
  427114:	48 8b 52 10 	movq	16(%rdx), %rdx
  427118:	48 85 d2 	testq	%rdx, %rdx
  42711b:	0f 94 c2 	sete	%dl
  42711e:	84 d2 	testb	%dl, %dl
  427120:	0f 84 17 02 00 00 	je	535 <runtime.handoffp+0x2cd>
  427126:	48 8b 15 73 0c 08 00 	movq	527475(%rip), %rdx
  42712d:	48 85 d2 	testq	%rdx, %rdx
  427130:	0f 85 fd 01 00 00 	jne	509 <runtime.handoffp+0x2c3>
  427136:	8b 15 ec 0c 08 00 	movl	527596(%rip), %edx
  42713c:	8b 1d ea 0c 08 00 	movl	527594(%rip), %ebx
  427142:	39 da 	cmpl	%ebx, %edx
  427144:	0f 83 e2 01 00 00 	jae	482 <runtime.handoffp+0x2bc>
  42714a:	b8 01 00 00 00 	movl	$1, %eax
  42714f:	84 c0 	testb	%al, %al
  427151:	0f 85 bd 01 00 00 	jne	445 <runtime.handoffp+0x2a4>
  427157:	8b 15 17 08 08 00 	movl	526359(%rip), %edx
  42715d:	8b 1d 0d 08 08 00 	movl	526349(%rip), %ebx
  427163:	01 da 	addl	%ebx, %edx
  427165:	85 d2 	testl	%edx, %edx
  427167:	75 1d 	jne	29 <runtime.handoffp+0x116>
  427169:	31 c0 	xorl	%eax, %eax
  42716b:	48 8d 15 02 08 08 00 	leaq	526338(%rip), %rdx
  427172:	bb 01 00 00 00 	movl	$1, %ebx
  427177:	f0 	lock
  427178:	0f b1 1a 	cmpxchgl	%ebx, (%rdx)
  42717b:	0f 94 c2 	sete	%dl
  42717e:	84 d2 	testb	%dl, %dl
  427180:	0f 85 76 01 00 00 	jne	374 <runtime.handoffp+0x28c>
  427186:	48 8d 05 a3 07 08 00 	leaq	526243(%rip), %rax
  42718d:	48 89 04 24 	movq	%rax, (%rsp)
  427191:	e8 8a 23 fe ff 	callq	-121974 <runtime.lock>
  427196:	8b 05 5c 08 08 00 	movl	526428(%rip), %eax
  42719c:	85 c0 	testl	%eax, %eax
  42719e:	74 4c 	je	76 <runtime.handoffp+0x17c>
  4271a0:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4271a5:	c7 40 0c 03 00 00 00 	movl	$3, 12(%rax)
  4271ac:	8b 05 4a 08 08 00 	movl	526410(%rip), %eax
  4271b2:	8d 48 ff 	leal	-1(%rax), %ecx
  4271b5:	89 0d 41 08 08 00 	movl	%ecx, 526401(%rip)
  4271bb:	83 f8 01 	cmpl	$1, %eax
  4271be:	74 1a 	je	26 <runtime.handoffp+0x16a>
  4271c0:	48 8d 05 69 07 08 00 	leaq	526185(%rip), %rax
  4271c7:	48 89 04 24 	movq	%rax, (%rsp)
  4271cb:	e8 f0 24 fe ff 	callq	-121616 <runtime.unlock>
  4271d0:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  4271d5:	48 83 c4 18 	addq	$24, %rsp
  4271d9:	c3 	retq
  4271da:	48 8d 05 1f 08 08 00 	leaq	526367(%rip), %rax
  4271e1:	48 89 04 24 	movq	%rax, (%rsp)
  4271e5:	e8 a6 25 fe ff 	callq	-121434 <runtime.notewakeup>
  4271ea:	eb d4 	jmp	-44 <runtime.handoffp+0x150>
  4271ec:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  4271f1:	84 01 	testb	%al, (%rcx)
  4271f3:	8b 99 a0 22 00 00 	movl	8864(%rcx), %ebx
  4271f9:	85 db 	testl	%ebx, %ebx
  4271fb:	74 1a 	je	26 <runtime.handoffp+0x1a7>
  4271fd:	b8 01 00 00 00 	movl	$1, %eax
  427202:	31 db 	xorl	%ebx, %ebx
  427204:	f0 	lock
  427205:	0f b1 99 a0 22 00 00 	cmpxchgl	%ebx, 8864(%rcx)
  42720c:	0f 94 c3 	sete	%bl
  42720f:	84 db 	testb	%bl, %bl
  427211:	0f 85 a5 00 00 00 	jne	165 <runtime.handoffp+0x24c>
  427217:	8b 05 6b 07 08 00 	movl	526187(%rip), %eax
  42721d:	85 c0 	testl	%eax, %eax
  42721f:	75 6e 	jne	110 <runtime.handoffp+0x21f>
  427221:	8b 05 49 07 08 00 	movl	526153(%rip), %eax
  427227:	8b 15 b3 c6 09 00 	movl	640691(%rip), %edx
  42722d:	ff ca 	decl	%edx
  42722f:	39 c2 	cmpl	%eax, %edx
  427231:	75 0c 	jne	12 <runtime.handoffp+0x1cf>
  427233:	48 8b 05 ee 06 08 00 	movq	526062(%rip), %rax
  42723a:	48 85 c0 	testq	%rax, %rax
  42723d:	75 23 	jne	35 <runtime.handoffp+0x1f2>
  42723f:	48 89 0c 24 	movq	%rcx, (%rsp)
  427243:	e8 28 6b 00 00 	callq	27432 <runtime.pidleput>
  427248:	48 8d 05 e1 06 08 00 	leaq	526049(%rip), %rax
  42724f:	48 89 04 24 	movq	%rax, (%rsp)
  427253:	e8 68 24 fe ff 	callq	-121752 <runtime.unlock>
  427258:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  42725d:	48 83 c4 18 	addq	$24, %rsp
  427261:	c3 	retq
  427262:	48 8d 05 c7 06 08 00 	leaq	526023(%rip), %rax
  427269:	48 89 04 24 	movq	%rax, (%rsp)
  42726d:	e8 4e 24 fe ff 	callq	-121778 <runtime.unlock>
  427272:	48 8b 44 24 20 	movq	32(%rsp), %rax
  427277:	48 89 04 24 	movq	%rax, (%rsp)
  42727b:	c6 44 24 08 00 	movb	$0, 8(%rsp)
  427280:	e8 bb fb ff ff 	callq	-1093 <runtime.startm>
  427285:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  42728a:	48 83 c4 18 	addq	$24, %rsp
  42728e:	c3 	retq
  42728f:	48 8d 05 9a 06 08 00 	leaq	525978(%rip), %rax
  427296:	48 89 04 24 	movq	%rax, (%rsp)
  42729a:	e8 21 24 fe ff 	callq	-121823 <runtime.unlock>
  42729f:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4272a4:	48 89 04 24 	movq	%rax, (%rsp)
  4272a8:	c6 44 24 08 00 	movb	$0, 8(%rsp)
  4272ad:	e8 8e fb ff ff 	callq	-1138 <runtime.startm>
  4272b2:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  4272b7:	48 83 c4 18 	addq	$24, %rsp
  4272bb:	c3 	retq
  4272bc:	48 8b 15 55 07 08 00 	movq	526165(%rip), %rdx
  4272c3:	48 89 0c 24 	movq	%rcx, (%rsp)
  4272c7:	48 8b 02 	movq	(%rdx), %rax
  4272ca:	ff d0 	callq	*%rax
  4272cc:	8b 05 4e 07 08 00 	movl	526158(%rip), %eax
  4272d2:	8d 48 ff 	leal	-1(%rax), %ecx
  4272d5:	89 0d 45 07 08 00 	movl	%ecx, 526149(%rip)
  4272db:	83 f8 01 	cmpl	$1, %eax
  4272de:	74 0a 	je	10 <runtime.handoffp+0x27a>
  4272e0:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  4272e5:	e9 2d ff ff ff 	jmp	-211 <runtime.handoffp+0x1a7>
  4272ea:	48 8d 05 37 07 08 00 	leaq	526135(%rip), %rax
  4272f1:	48 89 04 24 	movq	%rax, (%rsp)
  4272f5:	e8 96 24 fe ff 	callq	-121706 <runtime.notewakeup>
  4272fa:	eb e4 	jmp	-28 <runtime.handoffp+0x270>
  4272fc:	48 89 0c 24 	movq	%rcx, (%rsp)
  427300:	c6 44 24 08 01 	movb	$1, 8(%rsp)
  427305:	e8 36 fb ff ff 	callq	-1226 <runtime.startm>
  42730a:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  42730f:	48 83 c4 18 	addq	$24, %rsp
  427313:	c3 	retq
  427314:	48 89 0c 24 	movq	%rcx, (%rsp)
  427318:	c6 44 24 08 00 	movb	$0, 8(%rsp)
  42731d:	e8 1e fb ff ff 	callq	-1250 <runtime.startm>
  427322:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  427327:	48 83 c4 18 	addq	$24, %rsp
  42732b:	c3 	retq
  42732c:	31 c0 	xorl	%eax, %eax
  42732e:	e9 1c fe ff ff 	jmp	-484 <runtime.handoffp+0xdf>
  427333:	b8 01 00 00 00 	movl	$1, %eax
  427338:	e9 12 fe ff ff 	jmp	-494 <runtime.handoffp+0xdf>
  42733d:	b8 01 00 00 00 	movl	$1, %eax
  427342:	e9 08 fe ff ff 	jmp	-504 <runtime.handoffp+0xdf>
  427347:	31 d2 	xorl	%edx, %edx
  427349:	e9 d0 fd ff ff 	jmp	-560 <runtime.handoffp+0xae>
  42734e:	ba 01 00 00 00 	movl	$1, %edx
  427353:	e9 c6 fd ff ff 	jmp	-570 <runtime.handoffp+0xae>
  427358:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  42735d:	e9 f5 fd ff ff 	jmp	-523 <runtime.handoffp+0xe7>
  427362:	e8 09 d2 01 00 	callq	119305 <runtime.morestack_noctxt>
  427367:	e9 04 fd ff ff 	jmp	-764 <runtime.handoffp>
  42736c:	cc 	int3
  42736d:	cc 	int3
  42736e:	cc 	int3
  42736f:	cc 	int3

runtime.wakep:
  427370:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  427379:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42737d:	76 4d 	jbe	77 <runtime.wakep+0x5c>
  42737f:	48 83 ec 18 	subq	$24, %rsp
  427383:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  427388:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  42738d:	31 c0 	xorl	%eax, %eax
  42738f:	48 8d 0d de 05 08 00 	leaq	525790(%rip), %rcx
  427396:	ba 01 00 00 00 	movl	$1, %edx
  42739b:	f0 	lock
  42739c:	0f b1 11 	cmpxchgl	%edx, (%rcx)
  42739f:	0f 94 c1 	sete	%cl
  4273a2:	84 c9 	testb	%cl, %cl
  4273a4:	74 1c 	je	28 <runtime.wakep+0x52>
  4273a6:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  4273ae:	c6 44 24 08 01 	movb	$1, 8(%rsp)
  4273b3:	e8 88 fa ff ff 	callq	-1400 <runtime.startm>
  4273b8:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  4273bd:	48 83 c4 18 	addq	$24, %rsp
  4273c1:	c3 	retq
  4273c2:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  4273c7:	48 83 c4 18 	addq	$24, %rsp
  4273cb:	c3 	retq
  4273cc:	e8 9f d1 01 00 	callq	119199 <runtime.morestack_noctxt>
  4273d1:	eb 9d 	jmp	-99 <runtime.wakep>
  4273d3:	cc 	int3
  4273d4:	cc 	int3
  4273d5:	cc 	int3
  4273d6:	cc 	int3
  4273d7:	cc 	int3
  4273d8:	cc 	int3
  4273d9:	cc 	int3
  4273da:	cc 	int3
  4273db:	cc 	int3
  4273dc:	cc 	int3
  4273dd:	cc 	int3
  4273de:	cc 	int3
  4273df:	cc 	int3

runtime.stoplockedm:
  4273e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4273e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4273ed:	0f 86 9a 02 00 00 	jbe	666 <runtime.stoplockedm+0x2ad>
  4273f3:	48 83 ec 38 	subq	$56, %rsp
  4273f7:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  4273fc:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  427401:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  42740a:	48 8b 48 30 	movq	48(%rax), %rcx
  42740e:	48 8b 91 68 01 00 00 	movq	360(%rcx), %rdx
  427415:	48 85 d2 	testq	%rdx, %rdx
  427418:	0f 84 54 02 00 00 	je	596 <runtime.stoplockedm+0x292>
  42741e:	48 8b 92 e0 00 00 00 	movq	224(%rdx), %rdx
  427425:	48 39 ca 	cmpq	%rcx, %rdx
  427428:	0f 85 44 02 00 00 	jne	580 <runtime.stoplockedm+0x292>
  42742e:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  427433:	48 8b 89 d0 00 00 00 	movq	208(%rcx), %rcx
  42743a:	48 85 c9 	testq	%rcx, %rcx
  42743d:	0f 85 94 00 00 00 	jne	148 <runtime.stoplockedm+0xf7>
  427443:	c7 04 24 01 00 00 00 	movl	$1, (%rsp)
  42744a:	e8 b1 4f 00 00 	callq	20401 <runtime.incidlelocked>
  42744f:	48 8b 44 24 28 	movq	40(%rsp), %rax
  427454:	48 8b 48 30 	movq	48(%rax), %rcx
  427458:	84 01 	testb	%al, (%rcx)
  42745a:	84 00 	testb	%al, (%rax)
  42745c:	48 81 c1 48 01 00 00 	addq	$328, %rcx
  427463:	48 89 0c 24 	movq	%rcx, (%rsp)
  427467:	e8 e4 23 fe ff 	callq	-121884 <runtime.notesleep>
  42746c:	48 8b 44 24 28 	movq	40(%rsp), %rax
  427471:	48 8b 48 30 	movq	48(%rax), %rcx
  427475:	48 8d 91 48 01 00 00 	leaq	328(%rcx), %rdx
  42747c:	84 02 	testb	%al, (%rdx)
  42747e:	48 c7 81 48 01 00 00 00 00 00 00 	movq	$0, 328(%rcx)
  427489:	48 8b 48 30 	movq	48(%rax), %rcx
  42748d:	48 8b 89 68 01 00 00 	movq	360(%rcx), %rcx
  427494:	8b 89 90 00 00 00 	movl	144(%rcx), %ecx
  42749a:	81 e1 ff ef ff ff 	andl	$4294963199, %ecx
  4274a0:	83 f9 01 	cmpl	$1, %ecx
  4274a3:	75 41 	jne	65 <runtime.stoplockedm+0x106>
  4274a5:	48 8b 48 30 	movq	48(%rax), %rcx
  4274a9:	48 8b 89 d8 00 00 00 	movq	216(%rcx), %rcx
  4274b0:	48 89 0c 24 	movq	%rcx, (%rsp)
  4274b4:	e8 27 4b 00 00 	callq	19239 <runtime.acquirep>
  4274b9:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4274be:	48 8b 40 30 	movq	48(%rax), %rax
  4274c2:	48 c7 80 d8 00 00 00 00 00 00 00 	movq	$0, 216(%rax)
  4274cd:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  4274d2:	48 83 c4 38 	addq	$56, %rsp
  4274d6:	c3 	retq
  4274d7:	e8 f4 4c 00 00 	callq	19700 <runtime.releasep>
  4274dc:	e8 8f fb ff ff 	callq	-1137 <runtime.handoffp>
  4274e1:	e9 5d ff ff ff 	jmp	-163 <runtime.stoplockedm+0x63>
  4274e6:	e8 15 a6 ff ff 	callq	-23019 <runtime.printlock>
  4274eb:	48 8d 05 57 68 04 00 	leaq	288855(%rip), %rax
  4274f2:	48 89 04 24 	movq	%rax, (%rsp)
  4274f6:	48 c7 44 24 08 39 00 00 00 	movq	$57, 8(%rsp)
  4274ff:	e8 3c af ff ff 	callq	-20676 <runtime.printstring>
  427504:	e8 77 a6 ff ff 	callq	-22921 <runtime.printunlock>
  427509:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  427512:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  427517:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  42751c:	8b 91 90 00 00 00 	movl	144(%rcx), %edx
  427522:	89 54 24 14 	movl	%edx, 20(%rsp)
  427526:	48 8b 99 98 00 00 00 	movq	152(%rcx), %rbx
  42752d:	48 89 5c 24 18 	movq	%rbx, 24(%rsp)
  427532:	e8 c9 a5 ff ff 	callq	-23095 <runtime.printlock>
  427537:	48 8d 05 24 36 04 00 	leaq	276004(%rip), %rax
  42753e:	48 89 04 24 	movq	%rax, (%rsp)
  427542:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  42754b:	e8 f0 ae ff ff 	callq	-20752 <runtime.printstring>
  427550:	48 8b 44 24 28 	movq	40(%rsp), %rax
  427555:	48 89 04 24 	movq	%rax, (%rsp)
  427559:	e8 a2 ae ff ff 	callq	-20830 <runtime.printpointer>
  42755e:	48 8d 05 2d 29 04 00 	leaq	272685(%rip), %rax
  427565:	48 89 04 24 	movq	%rax, (%rsp)
  427569:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  427572:	e8 c9 ae ff ff 	callq	-20791 <runtime.printstring>
  427577:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42757c:	48 89 04 24 	movq	%rax, (%rsp)
  427580:	e8 fb ac ff ff 	callq	-21253 <runtime.printint>
  427585:	48 8d 05 88 38 04 00 	leaq	276616(%rip), %rax
  42758c:	48 89 04 24 	movq	%rax, (%rsp)
  427590:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  427599:	e8 a2 ae ff ff 	callq	-20830 <runtime.printstring>
  42759e:	8b 44 24 14 	movl	20(%rsp), %eax
  4275a2:	89 c0 	movl	%eax, %eax
  4275a4:	48 89 04 24 	movq	%rax, (%rsp)
  4275a8:	e8 c3 ab ff ff 	callq	-21565 <runtime.printuint>
  4275ad:	e8 de a7 ff ff 	callq	-22562 <runtime.printnl>
  4275b2:	e8 c9 a5 ff ff 	callq	-23095 <runtime.printunlock>
  4275b7:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4275bc:	8b 88 90 00 00 00 	movl	144(%rax), %ecx
  4275c2:	89 4c 24 10 	movl	%ecx, 16(%rsp)
  4275c6:	48 8b 90 98 00 00 00 	movq	152(%rax), %rdx
  4275cd:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  4275d2:	e8 29 a5 ff ff 	callq	-23255 <runtime.printlock>
  4275d7:	48 8d 05 74 35 04 00 	leaq	275828(%rip), %rax
  4275de:	48 89 04 24 	movq	%rax, (%rsp)
  4275e2:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  4275eb:	e8 50 ae ff ff 	callq	-20912 <runtime.printstring>
  4275f0:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4275f5:	48 89 04 24 	movq	%rax, (%rsp)
  4275f9:	e8 02 ae ff ff 	callq	-20990 <runtime.printpointer>
  4275fe:	48 8d 05 8d 28 04 00 	leaq	272525(%rip), %rax
  427605:	48 89 04 24 	movq	%rax, (%rsp)
  427609:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  427612:	e8 29 ae ff ff 	callq	-20951 <runtime.printstring>
  427617:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42761c:	48 89 04 24 	movq	%rax, (%rsp)
  427620:	e8 5b ac ff ff 	callq	-21413 <runtime.printint>
  427625:	48 8d 05 d5 37 04 00 	leaq	276437(%rip), %rax
  42762c:	48 89 04 24 	movq	%rax, (%rsp)
  427630:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  427639:	e8 02 ae ff ff 	callq	-20990 <runtime.printstring>
  42763e:	8b 44 24 10 	movl	16(%rsp), %eax
  427642:	89 c0 	movl	%eax, %eax
  427644:	48 89 04 24 	movq	%rax, (%rsp)
  427648:	e8 23 ab ff ff 	callq	-21725 <runtime.printuint>
  42764d:	e8 3e a7 ff ff 	callq	-22722 <runtime.printnl>
  427652:	e8 29 a5 ff ff 	callq	-23255 <runtime.printunlock>
  427657:	48 8d 05 fc 44 04 00 	leaq	279804(%rip), %rax
  42765e:	48 89 04 24 	movq	%rax, (%rsp)
  427662:	48 c7 44 24 08 19 00 00 00 	movq	$25, 8(%rsp)
  42766b:	e8 60 9b ff ff 	callq	-25760 <runtime.throw>
  427670:	0f 0b 	ud2
  427672:	48 8d 05 b8 54 04 00 	leaq	283832(%rip), %rax
  427679:	48 89 04 24 	movq	%rax, (%rsp)
  42767d:	48 c7 44 24 08 21 00 00 00 	movq	$33, 8(%rsp)
  427686:	e8 45 9b ff ff 	callq	-25787 <runtime.throw>
  42768b:	0f 0b 	ud2
  42768d:	e8 de ce 01 00 	callq	118494 <runtime.morestack_noctxt>
  427692:	e9 49 fd ff ff 	jmp	-695 <runtime.stoplockedm>
  427697:	cc 	int3
  427698:	cc 	int3
  427699:	cc 	int3
  42769a:	cc 	int3
  42769b:	cc 	int3
  42769c:	cc 	int3
  42769d:	cc 	int3
  42769e:	cc 	int3
  42769f:	cc 	int3

runtime.startlockedm:
  4276a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4276a9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4276ad:	0f 86 c6 00 00 00 	jbe	198 <runtime.startlockedm+0xd9>
  4276b3:	48 83 ec 28 	subq	$40, %rsp
  4276b7:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  4276bc:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  4276c1:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4276ca:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4276cf:	48 8b 89 e0 00 00 00 	movq	224(%rcx), %rcx
  4276d6:	48 8b 40 30 	movq	48(%rax), %rax
  4276da:	48 39 c1 	cmpq	%rax, %rcx
  4276dd:	74 7f 	je	127 <runtime.startlockedm+0xbe>
  4276df:	48 8b 81 d8 00 00 00 	movq	216(%rcx), %rax
  4276e6:	48 8d 91 d8 00 00 00 	leaq	216(%rcx), %rdx
  4276ed:	48 85 c0 	testq	%rax, %rax
  4276f0:	75 51 	jne	81 <runtime.startlockedm+0xa3>
  4276f2:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  4276f7:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  4276fc:	c7 04 24 ff ff ff ff 	movl	$4294967295, (%rsp)
  427703:	e8 f8 4c 00 00 	callq	19704 <runtime.incidlelocked>
  427708:	e8 c3 4a 00 00 	callq	19139 <runtime.releasep>
  42770d:	48 8b 44 24 18 	movq	24(%rsp), %rax
  427712:	84 00 	testb	%al, (%rax)
  427714:	48 8b 04 24 	movq	(%rsp), %rax
  427718:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  42771d:	48 89 81 d8 00 00 00 	movq	%rax, 216(%rcx)
  427724:	48 8d 81 48 01 00 00 	leaq	328(%rcx), %rax
  42772b:	48 89 04 24 	movq	%rax, (%rsp)
  42772f:	e8 5c 20 fe ff 	callq	-122788 <runtime.notewakeup>
  427734:	e8 47 f5 ff ff 	callq	-2745 <runtime.stopm>
  427739:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  42773e:	48 83 c4 28 	addq	$40, %rsp
  427742:	c3 	retq
  427743:	48 8d 05 11 3c 04 00 	leaq	277521(%rip), %rax
  42774a:	48 89 04 24 	movq	%rax, (%rsp)
  42774e:	48 c7 44 24 08 15 00 00 00 	movq	$21, 8(%rsp)
  427757:	e8 74 9a ff ff 	callq	-25996 <runtime.throw>
  42775c:	0f 0b 	ud2
  42775e:	48 8d 05 45 45 04 00 	leaq	279877(%rip), %rax
  427765:	48 89 04 24 	movq	%rax, (%rsp)
  427769:	48 c7 44 24 08 1a 00 00 00 	movq	$26, 8(%rsp)
  427772:	e8 59 9a ff ff 	callq	-26023 <runtime.throw>
  427777:	0f 0b 	ud2
  427779:	e8 f2 cd 01 00 	callq	118258 <runtime.morestack_noctxt>
  42777e:	e9 1d ff ff ff 	jmp	-227 <runtime.startlockedm>
  427783:	cc 	int3
  427784:	cc 	int3
  427785:	cc 	int3
  427786:	cc 	int3
  427787:	cc 	int3
  427788:	cc 	int3
  427789:	cc 	int3
  42778a:	cc 	int3
  42778b:	cc 	int3
  42778c:	cc 	int3
  42778d:	cc 	int3
  42778e:	cc 	int3
  42778f:	cc 	int3

runtime.gcstopm:
  427790:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  427799:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42779d:	0f 86 f6 00 00 00 	jbe	246 <runtime.gcstopm+0x109>
  4277a3:	48 83 ec 20 	subq	$32, %rsp
  4277a7:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  4277ac:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  4277b1:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4277ba:	8b 0d 38 02 08 00 	movl	524856(%rip), %ecx
  4277c0:	85 c9 	testl	%ecx, %ecx
  4277c2:	0f 84 b6 00 00 00 	je	182 <runtime.gcstopm+0xee>
  4277c8:	48 8b 40 30 	movq	48(%rax), %rax
  4277cc:	0f b6 88 14 01 00 00 	movzbl	276(%rax), %ecx
  4277d3:	84 c9 	testb	%cl, %cl
  4277d5:	74 1d 	je	29 <runtime.gcstopm+0x64>
  4277d7:	c6 80 14 01 00 00 00 	movb	$0, 276(%rax)
  4277de:	b8 ff ff ff ff 	movl	$4294967295, %eax
  4277e3:	48 8d 0d 8a 01 08 00 	leaq	524682(%rip), %rcx
  4277ea:	f0 	lock
  4277eb:	0f c1 01 	xaddl	%eax, (%rcx)
  4277ee:	ff c8 	decl	%eax
  4277f0:	85 c0 	testl	%eax, %eax
  4277f2:	7c 6f 	jl	111 <runtime.gcstopm+0xd3>
  4277f4:	e8 d7 49 00 00 	callq	18903 <runtime.releasep>
  4277f9:	48 8b 04 24 	movq	(%rsp), %rax
  4277fd:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  427802:	48 8d 0d 27 01 08 00 	leaq	524583(%rip), %rcx
  427809:	48 89 0c 24 	movq	%rcx, (%rsp)
  42780d:	e8 0e 1d fe ff 	callq	-123634 <runtime.lock>
  427812:	48 8b 44 24 10 	movq	16(%rsp), %rax
  427817:	c7 40 0c 03 00 00 00 	movl	$3, 12(%rax)
  42781e:	8b 05 d8 01 08 00 	movl	524760(%rip), %eax
  427824:	8d 48 ff 	leal	-1(%rax), %ecx
  427827:	89 0d cf 01 08 00 	movl	%ecx, 524751(%rip)
  42782d:	83 f8 01 	cmpl	$1, %eax
  427830:	74 1f 	je	31 <runtime.gcstopm+0xc1>
  427832:	48 8d 05 f7 00 08 00 	leaq	524535(%rip), %rax
  427839:	48 89 04 24 	movq	%rax, (%rsp)
  42783d:	e8 7e 1e fe ff 	callq	-123266 <runtime.unlock>
  427842:	e8 39 f4 ff ff 	callq	-3015 <runtime.stopm>
  427847:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  42784c:	48 83 c4 20 	addq	$32, %rsp
  427850:	c3 	retq
  427851:	48 8d 05 a8 01 08 00 	leaq	524712(%rip), %rax
  427858:	48 89 04 24 	movq	%rax, (%rsp)
  42785c:	e8 2f 1f fe ff 	callq	-123089 <runtime.notewakeup>
  427861:	eb cf 	jmp	-49 <runtime.gcstopm+0xa2>
  427863:	48 8d 05 84 48 04 00 	leaq	280708(%rip), %rax
  42786a:	48 89 04 24 	movq	%rax, (%rsp)
  42786e:	48 c7 44 24 08 1c 00 00 00 	movq	$28, 8(%rsp)
  427877:	e8 54 99 ff ff 	callq	-26284 <runtime.throw>
  42787c:	0f 0b 	ud2
  42787e:	48 8d 05 ab 44 04 00 	leaq	279723(%rip), %rax
  427885:	48 89 04 24 	movq	%rax, (%rsp)
  427889:	48 c7 44 24 08 1b 00 00 00 	movq	$27, 8(%rsp)
  427892:	e8 39 99 ff ff 	callq	-26311 <runtime.throw>
  427897:	0f 0b 	ud2
  427899:	e8 d2 cc 01 00 	callq	117970 <runtime.morestack_noctxt>
  42789e:	e9 ed fe ff ff 	jmp	-275 <runtime.gcstopm>
  4278a3:	cc 	int3
  4278a4:	cc 	int3
  4278a5:	cc 	int3
  4278a6:	cc 	int3
  4278a7:	cc 	int3
  4278a8:	cc 	int3
  4278a9:	cc 	int3
  4278aa:	cc 	int3
  4278ab:	cc 	int3
  4278ac:	cc 	int3
  4278ad:	cc 	int3
  4278ae:	cc 	int3
  4278af:	cc 	int3

runtime.execute:
  4278b0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4278b9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4278bd:	0f 86 52 01 00 00 	jbe	338 <runtime.execute+0x165>
  4278c3:	48 83 ec 20 	subq	$32, %rsp
  4278c7:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  4278cc:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  4278d1:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4278da:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  4278df:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  4278e4:	48 89 0c 24 	movq	%rcx, (%rsp)
  4278e8:	48 ba 01 00 00 00 02 00 00 00 	movabsq	$8589934593, %rdx
  4278f2:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  4278f7:	e8 84 d1 ff ff 	callq	-11900 <runtime.casgstatus>
  4278fc:	48 8b 44 24 28 	movq	40(%rsp), %rax
  427901:	48 c7 80 a0 00 00 00 00 00 00 00 	movq	$0, 160(%rax)
  42790c:	c6 80 c0 00 00 00 00 	movb	$0, 192(%rax)
  427913:	48 8b 08 	movq	(%rax), %rcx
  427916:	48 81 c1 70 03 00 00 	addq	$880, %rcx
  42791d:	48 89 48 10 	movq	%rcx, 16(%rax)
  427921:	0f b6 4c 24 30 	movzbl	48(%rsp), %ecx
  427926:	84 c9 	testb	%cl, %cl
  427928:	0f 84 cf 00 00 00 	je	207 <runtime.execute+0x14d>
  42792e:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  427933:	48 8b 51 30 	movq	48(%rcx), %rdx
  427937:	84 02 	testb	%al, (%rdx)
  427939:	8b 1d d1 c0 09 00 	movl	639185(%rip), %ebx
  42793f:	48 8d ba c0 00 00 00 	leaq	192(%rdx), %rdi
  427946:	85 db 	testl	%ebx, %ebx
  427948:	0f 85 a5 00 00 00 	jne	165 <runtime.execute+0x143>
  42794e:	48 89 82 c0 00 00 00 	movq	%rax, 192(%rdx)
  427955:	8b 15 b5 c0 09 00 	movl	639157(%rip), %edx
  42795b:	48 8d 78 30 	leaq	48(%rax), %rdi
  42795f:	48 8b 59 30 	movq	48(%rcx), %rbx
  427963:	85 d2 	testl	%edx, %edx
  427965:	75 79 	jne	121 <runtime.execute+0x130>
  427967:	48 89 58 30 	movq	%rbx, 48(%rax)
  42796b:	48 8b 49 30 	movq	48(%rcx), %rcx
  42796f:	8b 15 bb 00 08 00 	movl	524475(%rip), %edx
  427975:	8b 89 0c 01 00 00 	movl	268(%rcx), %ecx
  42797b:	39 d1 	cmpl	%edx, %ecx
  42797d:	75 52 	jne	82 <runtime.execute+0x121>
  42797f:	0f b6 0d 4a be 08 00 	movzbl	573002(%rip), %ecx
  427986:	84 c9 	testb	%cl, %cl
  427988:	74 19 	je	25 <runtime.execute+0xf3>
  42798a:	48 8b 48 70 	movq	112(%rax), %rcx
  42798e:	48 85 c9 	testq	%rcx, %rcx
  427991:	74 0b 	je	11 <runtime.execute+0xee>
  427993:	0f b6 88 c7 00 00 00 	movzbl	199(%rax), %ecx
  42799a:	84 c9 	testb	%cl, %cl
  42799c:	75 21 	jne	33 <runtime.execute+0x10f>
  42799e:	e8 ad 2f 01 00 	callq	77741 <runtime.traceGoStart>
  4279a3:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4279a8:	48 83 c0 38 	addq	$56, %rax
  4279ac:	48 89 04 24 	movq	%rax, (%rsp)
  4279b0:	e8 8b c9 01 00 	callq	117131 <runtime.gogo>
  4279b5:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  4279ba:	48 83 c4 20 	addq	$32, %rsp
  4279be:	c3 	retq
  4279bf:	48 8b 88 c8 00 00 00 	movq	200(%rax), %rcx
  4279c6:	48 89 0c 24 	movq	%rcx, (%rsp)
  4279ca:	e8 51 34 01 00 	callq	78929 <runtime.traceGoSysExit>
  4279cf:	eb cd 	jmp	-51 <runtime.execute+0xee>
  4279d1:	89 14 24 	movl	%edx, (%rsp)
  4279d4:	e8 a7 a8 00 00 	callq	43175 <runtime.setThreadCPUProfiler>
  4279d9:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4279de:	eb 9f 	jmp	-97 <runtime.execute+0xcf>
  4279e0:	48 89 c2 	movq	%rax, %rdx
  4279e3:	48 89 d8 	movq	%rbx, %rax
  4279e6:	e8 b5 ee 01 00 	callq	126645 <runtime.gcWriteBarrier>
  4279eb:	48 89 d0 	movq	%rdx, %rax
  4279ee:	e9 78 ff ff ff 	jmp	-136 <runtime.execute+0xbb>
  4279f3:	e8 a8 ee 01 00 	callq	126632 <runtime.gcWriteBarrier>
  4279f8:	e9 58 ff ff ff 	jmp	-168 <runtime.execute+0xa5>
  4279fd:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  427a02:	48 8b 51 30 	movq	48(%rcx), %rdx
  427a06:	48 8b 92 d0 00 00 00 	movq	208(%rdx), %rdx
  427a0d:	ff 42 18 	incl	24(%rdx)
  427a10:	e9 19 ff ff ff 	jmp	-231 <runtime.execute+0x7e>
  427a15:	e8 56 cb 01 00 	callq	117590 <runtime.morestack_noctxt>
  427a1a:	e9 91 fe ff ff 	jmp	-367 <runtime.execute>
  427a1f:	cc 	int3

runtime.findrunnable:
  427a20:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  427a29:	48 8d 44 24 e0 	leaq	-32(%rsp), %rax
  427a2e:	48 3b 41 10 	cmpq	16(%rcx), %rax
  427a32:	0f 86 8c 0b 00 00 	jbe	2956 <runtime.findrunnable+0xba4>
  427a38:	48 81 ec a0 00 00 00 	subq	$160, %rsp
  427a3f:	48 89 ac 24 98 00 00 00 	movq	%rbp, 152(%rsp)
  427a47:	48 8d ac 24 98 00 00 00 	leaq	152(%rsp), %rbp
  427a4f:	48 8d 44 24 10 	leaq	16(%rsp), %rax
  427a54:	48 89 84 24 90 00 00 00 	movq	%rax, 144(%rsp)
  427a5c:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  427a65:	48 89 8c 24 80 00 00 00 	movq	%rcx, 128(%rsp)
  427a6d:	e9 ca 04 00 00 	jmp	1226 <runtime.findrunnable+0x51c>
  427a72:	31 d2 	xorl	%edx, %edx
  427a74:	f7 f1 	divl	%ecx
  427a76:	89 54 24 40 	movl	%edx, 64(%rsp)
  427a7a:	4c 8b 44 24 30 	movq	48(%rsp), %r8
  427a7f:	4c 8b 8c 24 80 00 00 00 	movq	128(%rsp), %r9
  427a87:	8b 4c 24 38 	movl	56(%rsp), %ecx
  427a8b:	8b 54 24 3c 	movl	60(%rsp), %edx
  427a8f:	39 d1 	cmpl	%edx, %ecx
  427a91:	0f 84 a9 00 00 00 	je	169 <runtime.findrunnable+0x120>
  427a97:	8b 05 5b ff 07 00 	movl	524123(%rip), %eax
  427a9d:	85 c0 	testl	%eax, %eax
  427a9f:	0f 85 8b 00 00 00 	jne	139 <runtime.findrunnable+0x110>
  427aa5:	8b 44 24 40 	movl	64(%rsp), %eax
  427aa9:	48 8b 0d 08 fc 07 00 	movq	523272(%rip), %rcx
  427ab0:	48 8b 15 f9 fb 07 00 	movq	523257(%rip), %rdx
  427ab7:	48 39 c8 	cmpq	%rcx, %rax
  427aba:	0f 83 e8 0a 00 00 	jae	2792 <runtime.findrunnable+0xb88>
  427ac0:	48 8b 04 c2 	movq	(%rdx,%rax,8), %rax
  427ac4:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  427ac9:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  427ad1:	48 89 04 24 	movq	%rax, (%rsp)
  427ad5:	49 83 f8 02 	cmpq	$2, %r8
  427ad9:	48 8b 8c 24 90 00 00 00 	movq	144(%rsp), %rcx
  427ae1:	0f 9f 01 	setg	(%rcx)
  427ae4:	e8 87 68 00 00 	callq	26759 <runtime.runqsteal>
  427ae9:	48 8b 44 24 18 	movq	24(%rsp), %rax
  427aee:	48 85 c0 	testq	%rax, %rax
  427af1:	75 1d 	jne	29 <runtime.findrunnable+0xf0>
  427af3:	ff 44 24 38 	incl	56(%rsp)
  427af7:	8b 44 24 40 	movl	64(%rsp), %eax
  427afb:	03 44 24 44 	addl	68(%rsp), %eax
  427aff:	8b 4c 24 3c 	movl	60(%rsp), %ecx
  427b03:	85 c9 	testl	%ecx, %ecx
  427b05:	0f 85 67 ff ff ff 	jne	-153 <runtime.findrunnable+0x52>
  427b0b:	e9 91 0a 00 00 	jmp	2705 <runtime.findrunnable+0xb81>
  427b10:	48 89 84 24 a8 00 00 00 	movq	%rax, 168(%rsp)
  427b18:	c6 84 24 b0 00 00 00 00 	movb	$0, 176(%rsp)
  427b20:	48 8b ac 24 98 00 00 00 	movq	152(%rsp), %rbp
  427b28:	48 81 c4 a0 00 00 00 	addq	$160, %rsp
  427b2f:	c3 	retq
  427b30:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  427b38:	4c 89 c9 	movq	%r9, %rcx
  427b3b:	e9 fc 03 00 00 	jmp	1020 <runtime.findrunnable+0x51c>
  427b40:	49 8d 40 01 	leaq	1(%r8), %rax
  427b44:	4c 89 ca 	movq	%r9, %rdx
  427b47:	48 83 f8 04 	cmpq	$4, %rax
  427b4b:	0f 8d a3 00 00 00 	jge	163 <runtime.findrunnable+0x1d4>
  427b51:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  427b5a:	48 8b 49 30 	movq	48(%rcx), %rcx
  427b5e:	8b 99 20 01 00 00 	movl	288(%rcx), %ebx
  427b64:	8b b1 24 01 00 00 	movl	292(%rcx), %esi
  427b6a:	89 b1 20 01 00 00 	movl	%esi, 288(%rcx)
  427b70:	89 df 	movl	%ebx, %edi
  427b72:	c1 e3 11 	shll	$17, %ebx
  427b75:	31 fb 	xorl	%edi, %ebx
  427b77:	89 f7 	movl	%esi, %edi
  427b79:	31 de 	xorl	%ebx, %esi
  427b7b:	c1 eb 07 	shrl	$7, %ebx
  427b7e:	31 f3 	xorl	%esi, %ebx
  427b80:	89 fe 	movl	%edi, %esi
  427b82:	c1 ef 10 	shrl	$16, %edi
  427b85:	31 df 	xorl	%ebx, %edi
  427b87:	89 b9 24 01 00 00 	movl	%edi, 292(%rcx)
  427b8d:	8d 0c 37 	leal	(%rdi,%rsi), %ecx
  427b90:	8b 1d 2a fc 07 00 	movl	523306(%rip), %ebx
  427b96:	48 8b 35 2b fc 07 00 	movq	523307(%rip), %rsi
  427b9d:	48 8b 3d 2c fc 07 00 	movq	523308(%rip), %rdi
  427ba4:	85 db 	testl	%ebx, %ebx
  427ba6:	0f 84 11 0a 00 00 	je	2577 <runtime.findrunnable+0xb9d>
  427bac:	49 89 c0 	movq	%rax, %r8
  427baf:	89 c8 	movl	%ecx, %eax
  427bb1:	49 89 d1 	movq	%rdx, %r9
  427bb4:	31 d2 	xorl	%edx, %edx
  427bb6:	f7 f3 	divl	%ebx
  427bb8:	85 ff 	testl	%edi, %edi
  427bba:	0f 84 f6 09 00 00 	je	2550 <runtime.findrunnable+0xb96>
  427bc0:	89 c8 	movl	%ecx, %eax
  427bc2:	89 d1 	movl	%edx, %ecx
  427bc4:	31 d2 	xorl	%edx, %edx
  427bc6:	f7 f7 	divl	%edi
  427bc8:	89 d2 	movl	%edx, %edx
  427bca:	48 39 fa 	cmpq	%rdi, %rdx
  427bcd:	0f 83 dc 09 00 00 	jae	2524 <runtime.findrunnable+0xb8f>
  427bd3:	4c 89 44 24 30 	movq	%r8, 48(%rsp)
  427bd8:	8b 14 96 	movl	(%rsi,%rdx,4), %edx
  427bdb:	c7 44 24 38 00 00 00 00 	movl	$0, 56(%rsp)
  427be3:	89 5c 24 3c 	movl	%ebx, 60(%rsp)
  427be7:	89 4c 24 40 	movl	%ecx, 64(%rsp)
  427beb:	89 54 24 44 	movl	%edx, 68(%rsp)
  427bef:	e9 93 fe ff ff 	jmp	-365 <runtime.findrunnable+0x67>
  427bf4:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  427bfc:	e9 97 01 00 00 	jmp	407 <runtime.findrunnable+0x378>
  427c01:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  427c06:	48 8d 4b 01 	leaq	1(%rbx), %rcx
  427c0a:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  427c12:	0f b6 54 24 27 	movzbl	39(%rsp), %edx
  427c17:	48 8b 5c 24 28 	movq	40(%rsp), %rbx
  427c1c:	48 39 d9 	cmpq	%rbx, %rcx
  427c1f:	0f 8d 80 00 00 00 	jge	128 <runtime.findrunnable+0x285>
  427c25:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  427c2a:	48 8b 44 24 70 	movq	112(%rsp), %rax
  427c2f:	48 8b 14 c8 	movq	(%rax,%rcx,8), %rdx
  427c33:	48 89 14 24 	movq	%rdx, (%rsp)
  427c37:	e8 d4 61 00 00 	callq	25044 <runtime.runqempty>
  427c3c:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  427c41:	84 c0 	testb	%al, %al
  427c43:	75 bc 	jne	-68 <runtime.findrunnable+0x1e1>
  427c45:	48 8d 05 e4 fc 07 00 	leaq	523492(%rip), %rax
  427c4c:	48 89 04 24 	movq	%rax, (%rsp)
  427c50:	e8 cb 18 fe ff 	callq	-124725 <runtime.lock>
  427c55:	48 8b 05 0c fd 07 00 	movq	523532(%rip), %rax
  427c5c:	48 89 84 24 88 00 00 00 	movq	%rax, 136(%rsp)
  427c64:	48 85 c0 	testq	%rax, %rax
  427c67:	74 1b 	je	27 <runtime.findrunnable+0x264>
  427c69:	48 8b 48 10 	movq	16(%rax), %rcx
  427c6d:	48 89 0d f4 fc 07 00 	movq	%rcx, 523508(%rip)
  427c74:	b9 ff ff ff ff 	movl	$4294967295, %ecx
  427c79:	48 8d 15 f0 fc 07 00 	leaq	523504(%rip), %rdx
  427c80:	f0 	lock
  427c81:	0f c1 0a 	xaddl	%ecx, (%rdx)
  427c84:	48 8d 05 a5 fc 07 00 	leaq	523429(%rip), %rax
  427c8b:	48 89 04 24 	movq	%rax, (%rsp)
  427c8f:	e8 2c 1a fe ff 	callq	-124372 <runtime.unlock>
  427c94:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  427c9c:	48 85 c0 	testq	%rax, %rax
  427c9f:	0f 85 21 05 00 00 	jne	1313 <runtime.findrunnable+0x7a6>
  427ca5:	8b 05 29 bc 09 00 	movl	637993(%rip), %eax
  427cab:	85 c0 	testl	%eax, %eax
  427cad:	0f 84 4b 02 00 00 	je	587 <runtime.findrunnable+0x4de>
  427cb3:	48 8b 05 e6 00 08 00 	movq	524518(%rip), %rax
  427cba:	48 85 c0 	testq	%rax, %rax
  427cbd:	0f 85 f9 04 00 00 	jne	1273 <runtime.findrunnable+0x79c>
  427cc3:	8b 05 5f 01 08 00 	movl	524639(%rip), %eax
  427cc9:	8b 0d 5d 01 08 00 	movl	524637(%rip), %ecx
  427ccf:	39 c8 	cmpl	%ecx, %eax
  427cd1:	0f 83 de 04 00 00 	jae	1246 <runtime.findrunnable+0x795>
  427cd7:	b8 01 00 00 00 	movl	$1, %eax
  427cdc:	84 c0 	testb	%al, %al
  427cde:	0f 84 1a 02 00 00 	je	538 <runtime.findrunnable+0x4de>
  427ce4:	48 8d 05 45 fc 07 00 	leaq	523333(%rip), %rax
  427ceb:	48 89 04 24 	movq	%rax, (%rsp)
  427cef:	e8 2c 18 fe ff 	callq	-124884 <runtime.lock>
  427cf4:	48 8b 05 6d fc 07 00 	movq	523373(%rip), %rax
  427cfb:	48 85 c0 	testq	%rax, %rax
  427cfe:	0f 84 a5 04 00 00 	je	1189 <runtime.findrunnable+0x789>
  427d04:	48 8b 48 10 	movq	16(%rax), %rcx
  427d08:	48 89 0d 59 fc 07 00 	movq	%rcx, 523353(%rip)
  427d0f:	b9 ff ff ff ff 	movl	$4294967295, %ecx
  427d14:	48 8d 15 55 fc 07 00 	leaq	523349(%rip), %rdx
  427d1b:	f0 	lock
  427d1c:	0f c1 0a 	xaddl	%ecx, (%rdx)
  427d1f:	48 85 c0 	testq	%rax, %rax
  427d22:	74 10 	je	16 <runtime.findrunnable+0x314>
  427d24:	48 8b 88 58 12 00 00 	movq	4696(%rax), %rcx
  427d2b:	48 85 c9 	testq	%rcx, %rcx
  427d2e:	0f 84 65 04 00 00 	je	1125 <runtime.findrunnable+0x779>
  427d34:	48 89 44 24 78 	movq	%rax, 120(%rsp)
  427d39:	48 8d 0d f0 fb 07 00 	leaq	523248(%rip), %rcx
  427d40:	48 89 0c 24 	movq	%rcx, (%rsp)
  427d44:	e8 77 19 fe ff 	callq	-124553 <runtime.unlock>
  427d49:	48 8b 44 24 78 	movq	120(%rsp), %rax
  427d4e:	48 85 c0 	testq	%rax, %rax
  427d51:	0f 84 a7 01 00 00 	je	423 <runtime.findrunnable+0x4de>
  427d57:	48 89 04 24 	movq	%rax, (%rsp)
  427d5b:	e8 80 42 00 00 	callq	17024 <runtime.acquirep>
  427d60:	0f b6 44 24 27 	movzbl	39(%rsp), %eax
  427d65:	84 c0 	testb	%al, %al
  427d67:	0f 84 84 01 00 00 	je	388 <runtime.findrunnable+0x4d1>
  427d6d:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  427d75:	48 8b 48 30 	movq	48(%rax), %rcx
  427d79:	c6 81 14 01 00 00 01 	movb	$1, 276(%rcx)
  427d80:	b9 01 00 00 00 	movl	$1, %ecx
  427d85:	48 8d 15 e8 fb 07 00 	leaq	523240(%rip), %rdx
  427d8c:	f0 	lock
  427d8d:	0f c1 0a 	xaddl	%ecx, (%rdx)
  427d90:	48 89 c2 	movq	%rax, %rdx
  427d93:	48 8b 44 24 78 	movq	120(%rsp), %rax
  427d98:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  427d9d:	8b 0d 31 bb 09 00 	movl	637745(%rip), %ecx
  427da3:	85 c9 	testl	%ecx, %ecx
  427da5:	74 7e 	je	126 <runtime.findrunnable+0x405>
  427da7:	84 00 	testb	%al, (%rax)
  427da9:	48 8b 88 58 12 00 00 	movq	4696(%rax), %rcx
  427db0:	48 85 c9 	testq	%rcx, %rcx
  427db3:	74 70 	je	112 <runtime.findrunnable+0x405>
  427db5:	48 8d 88 70 12 00 00 	leaq	4720(%rax), %rcx
  427dbc:	84 01 	testb	%al, (%rcx)
  427dbe:	48 8b 88 70 12 00 00 	movq	4720(%rax), %rcx
  427dc5:	48 85 c9 	testq	%rcx, %rcx
  427dc8:	0f 84 64 05 00 00 	je	1380 <runtime.findrunnable+0x912>
  427dce:	48 8b 49 10 	movq	16(%rcx), %rcx
  427dd2:	48 85 c9 	testq	%rcx, %rcx
  427dd5:	0f 85 50 05 00 00 	jne	1360 <runtime.findrunnable+0x90b>
  427ddb:	48 8b 88 78 12 00 00 	movq	4728(%rax), %rcx
  427de2:	48 8b 49 10 	movq	16(%rcx), %rcx
  427de6:	48 85 c9 	testq	%rcx, %rcx
  427de9:	0f 94 c1 	sete	%cl
  427dec:	84 c9 	testb	%cl, %cl
  427dee:	0f 84 2d 05 00 00 	je	1325 <runtime.findrunnable+0x901>
  427df4:	48 8b 0d a5 ff 07 00 	movq	524197(%rip), %rcx
  427dfb:	48 85 c9 	testq	%rcx, %rcx
  427dfe:	0f 85 13 05 00 00 	jne	1299 <runtime.findrunnable+0x8f7>
  427e04:	8b 0d 1e 00 08 00 	movl	524318(%rip), %ecx
  427e0a:	8b 1d 1c 00 08 00 	movl	524316(%rip), %ebx
  427e10:	39 d9 	cmpl	%ebx, %ecx
  427e12:	0f 83 f8 04 00 00 	jae	1272 <runtime.findrunnable+0x8f0>
  427e18:	b9 01 00 00 00 	movl	$1, %ecx
  427e1d:	84 c9 	testb	%cl, %cl
  427e1f:	0f 85 6a 04 00 00 	jne	1130 <runtime.findrunnable+0x86f>
  427e25:	48 8b 05 8c f8 07 00 	movq	522380(%rip), %rax
  427e2c:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  427e31:	48 8b 0d 78 f8 07 00 	movq	522360(%rip), %rcx
  427e38:	48 89 4c 24 70 	movq	%rcx, 112(%rsp)
  427e3d:	48 8d 15 ec fa 07 00 	leaq	522988(%rip), %rdx
  427e44:	48 89 14 24 	movq	%rdx, (%rsp)
  427e48:	e8 d3 16 fe ff 	callq	-125229 <runtime.lock>
  427e4d:	8b 05 a5 fb 07 00 	movl	523173(%rip), %eax
  427e53:	85 c0 	testl	%eax, %eax
  427e55:	0f 85 0f 04 00 00 	jne	1039 <runtime.findrunnable+0x84a>
  427e5b:	48 8b 44 24 48 	movq	72(%rsp), %rax
  427e60:	84 00 	testb	%al, (%rax)
  427e62:	8b 88 a0 22 00 00 	movl	8864(%rax), %ecx
  427e68:	85 c9 	testl	%ecx, %ecx
  427e6a:	0f 85 fa 03 00 00 	jne	1018 <runtime.findrunnable+0x84a>
  427e70:	8b 0d 12 fb 07 00 	movl	523026(%rip), %ecx
  427e76:	85 c9 	testl	%ecx, %ecx
  427e78:	0f 85 9c 03 00 00 	jne	924 <runtime.findrunnable+0x7fa>
  427e7e:	e8 4d 43 00 00 	callq	17229 <runtime.releasep>
  427e83:	48 8b 04 24 	movq	(%rsp), %rax
  427e87:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  427e8c:	48 39 c8 	cmpq	%rcx, %rax
  427e8f:	0f 85 f1 06 00 00 	jne	1777 <runtime.findrunnable+0xb66>
  427e95:	48 89 0c 24 	movq	%rcx, (%rsp)
  427e99:	e8 d2 5e 00 00 	callq	24274 <runtime.pidleput>
  427e9e:	48 8d 05 8b fa 07 00 	leaq	522891(%rip), %rax
  427ea5:	48 89 04 24 	movq	%rax, (%rsp)
  427ea9:	e8 12 18 fe ff 	callq	-124910 <runtime.unlock>
  427eae:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  427eb6:	48 8b 48 30 	movq	48(%rax), %rcx
  427eba:	0f b6 91 14 01 00 00 	movzbl	276(%rcx), %edx
  427ec1:	84 d2 	testb	%dl, %dl
  427ec3:	74 21 	je	33 <runtime.findrunnable+0x4c6>
  427ec5:	c6 81 14 01 00 00 00 	movb	$0, 276(%rcx)
  427ecc:	b9 ff ff ff ff 	movl	$4294967295, %ecx
  427ed1:	48 8d 1d 9c fa 07 00 	leaq	522908(%rip), %rbx
  427ed8:	f0 	lock
  427ed9:	0f c1 0b 	xaddl	%ecx, (%rbx)
  427edc:	ff c9 	decl	%ecx
  427ede:	85 c9 	testl	%ecx, %ecx
  427ee0:	0f 8c 85 06 00 00 	jl	1669 <runtime.findrunnable+0xb4b>
  427ee6:	88 54 24 27 	movb	%dl, 39(%rsp)
  427eea:	31 c9 	xorl	%ecx, %ecx
  427eec:	e9 26 fd ff ff 	jmp	-730 <runtime.findrunnable+0x1f7>
  427ef1:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  427ef9:	e9 92 fe ff ff 	jmp	-366 <runtime.findrunnable+0x370>
  427efe:	8b 05 e4 b9 09 00 	movl	637412(%rip), %eax
  427f04:	85 c0 	testl	%eax, %eax
  427f06:	74 1f 	je	31 <runtime.findrunnable+0x507>
  427f08:	8b 05 de b9 09 00 	movl	637406(%rip), %eax
  427f0e:	85 c0 	testl	%eax, %eax
  427f10:	76 15 	jbe	21 <runtime.findrunnable+0x507>
  427f12:	31 c0 	xorl	%eax, %eax
  427f14:	48 8d 0d 0d fa 07 00 	leaq	522765(%rip), %rcx
  427f1b:	48 87 01 	xchgq	%rax, (%rcx)
  427f1e:	48 85 c0 	testq	%rax, %rax
  427f21:	0f 85 20 01 00 00 	jne	288 <runtime.findrunnable+0x627>
  427f27:	e8 54 ed ff ff 	callq	-4780 <runtime.stopm>
  427f2c:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  427f34:	48 8b 8c 24 80 00 00 00 	movq	128(%rsp), %rcx
  427f3c:	48 8b 51 30 	movq	48(%rcx), %rdx
  427f40:	48 8b 92 d0 00 00 00 	movq	208(%rdx), %rdx
  427f47:	8b 1d ab fa 07 00 	movl	522923(%rip), %ebx
  427f4d:	85 db 	testl	%ebx, %ebx
  427f4f:	74 17 	je	23 <runtime.findrunnable+0x548>
  427f51:	e8 3a f8 ff ff 	callq	-1990 <runtime.gcstopm>
  427f56:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  427f5e:	48 8b 8c 24 80 00 00 00 	movq	128(%rsp), %rcx
  427f66:	eb d4 	jmp	-44 <runtime.findrunnable+0x51c>
  427f68:	48 89 94 24 88 00 00 00 	movq	%rdx, 136(%rsp)
  427f70:	84 02 	testb	%al, (%rdx)
  427f72:	8b 9a a0 22 00 00 	movl	8864(%rdx), %ebx
  427f78:	85 db 	testl	%ebx, %ebx
  427f7a:	0f 85 93 05 00 00 	jne	1427 <runtime.findrunnable+0xaf3>
  427f80:	0f b6 1d 1e b9 09 00 	movzbl	637214(%rip), %ebx
  427f87:	84 db 	testb	%bl, %bl
  427f89:	74 0f 	je	15 <runtime.findrunnable+0x57a>
  427f8b:	0f b6 1d 14 b9 09 00 	movzbl	637204(%rip), %ebx
  427f92:	84 db 	testb	%bl, %bl
  427f94:	0f 85 39 05 00 00 	jne	1337 <runtime.findrunnable+0xab3>
  427f9a:	48 8b 1d 7f da 07 00 	movq	514687(%rip), %rbx
  427fa1:	48 8b 1b 	movq	(%rbx), %rbx
  427fa4:	48 85 db 	testq	%rbx, %rbx
  427fa7:	0f 85 07 05 00 00 	jne	1287 <runtime.findrunnable+0xa94>
  427fad:	48 89 14 24 	movq	%rdx, (%rsp)
  427fb1:	e8 ba 61 00 00 	callq	25018 <runtime.runqget>
  427fb6:	48 8b 44 24 08 	movq	8(%rsp), %rax
  427fbb:	0f b6 4c 24 10 	movzbl	16(%rsp), %ecx
  427fc0:	48 85 c0 	testq	%rax, %rax
  427fc3:	0f 85 cc 04 00 00 	jne	1228 <runtime.findrunnable+0xa75>
  427fc9:	8b 0d b9 f9 07 00 	movl	522681(%rip), %ecx
  427fcf:	85 c9 	testl	%ecx, %ecx
  427fd1:	0f 85 4d 04 00 00 	jne	1101 <runtime.findrunnable+0xa04>
  427fd7:	8b 0d 0b b9 09 00 	movl	637195(%rip), %ecx
  427fdd:	85 c9 	testl	%ecx, %ecx
  427fdf:	74 1a 	je	26 <runtime.findrunnable+0x5db>
  427fe1:	8b 0d 05 b9 09 00 	movl	637189(%rip), %ecx
  427fe7:	85 c9 	testl	%ecx, %ecx
  427fe9:	76 10 	jbe	16 <runtime.findrunnable+0x5db>
  427feb:	48 8b 0d 36 f9 07 00 	movq	522550(%rip), %rcx
  427ff2:	48 85 c9 	testq	%rcx, %rcx
  427ff5:	0f 85 97 03 00 00 	jne	919 <runtime.findrunnable+0x972>
  427ffb:	8b 0d df b8 09 00 	movl	637151(%rip), %ecx
  428001:	8b 15 69 f9 07 00 	movl	522601(%rip), %edx
  428007:	8d 59 ff 	leal	-1(%rcx), %ebx
  42800a:	39 d3 	cmpl	%edx, %ebx
  42800c:	0f 84 6b 03 00 00 	je	875 <runtime.findrunnable+0x95d>
  428012:	48 8b 94 24 80 00 00 00 	movq	128(%rsp), %rdx
  42801a:	48 8b 5a 30 	movq	48(%rdx), %rbx
  42801e:	0f b6 9b 14 01 00 00 	movzbl	276(%rbx), %ebx
  428025:	84 db 	testb	%bl, %bl
  428027:	0f 84 2b 03 00 00 	je	811 <runtime.findrunnable+0x938>
  42802d:	48 8b 4a 30 	movq	48(%rdx), %rcx
  428031:	0f b6 99 14 01 00 00 	movzbl	276(%rcx), %ebx
  428038:	84 db 	testb	%bl, %bl
  42803a:	0f 84 fc 02 00 00 	je	764 <runtime.findrunnable+0x91c>
  428040:	31 c0 	xorl	%eax, %eax
  428042:	e9 00 fb ff ff 	jmp	-1280 <runtime.findrunnable+0x127>
  428047:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  42804f:	48 8b 50 30 	movq	48(%rax), %rdx
  428053:	48 8b 9a d0 00 00 00 	movq	208(%rdx), %rbx
  42805a:	48 85 db 	testq	%rbx, %rbx
  42805d:	0f 85 ed 04 00 00 	jne	1261 <runtime.findrunnable+0xb30>
  428063:	0f b6 92 14 01 00 00 	movzbl	276(%rdx), %edx
  42806a:	84 d2 	testb	%dl, %dl
  42806c:	0f 85 c3 04 00 00 	jne	1219 <runtime.findrunnable+0xb15>
  428072:	c6 04 24 01 	movb	$1, (%rsp)
  428076:	e8 b5 69 ff ff 	callq	-38475 <runtime.netpoll>
  42807b:	48 8b 44 24 08 	movq	8(%rsp), %rax
  428080:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  428085:	e8 a6 f9 01 00 	callq	129446 <runtime.nanotime>
  42808a:	48 8b 04 24 	movq	(%rsp), %rax
  42808e:	48 8d 0d 93 f8 07 00 	leaq	522387(%rip), %rcx
  428095:	48 87 01 	xchgq	%rax, (%rcx)
  428098:	48 8b 44 24 50 	movq	80(%rsp), %rax
  42809d:	48 85 c0 	testq	%rax, %rax
  4280a0:	0f 84 81 fe ff ff 	je	-383 <runtime.findrunnable+0x507>
  4280a6:	48 8d 05 83 f8 07 00 	leaq	522371(%rip), %rax
  4280ad:	48 89 04 24 	movq	%rax, (%rsp)
  4280b1:	e8 6a 14 fe ff 	callq	-125846 <runtime.lock>
  4280b6:	48 8b 05 ab f8 07 00 	movq	522411(%rip), %rax
  4280bd:	48 89 84 24 88 00 00 00 	movq	%rax, 136(%rsp)
  4280c5:	48 85 c0 	testq	%rax, %rax
  4280c8:	74 1b 	je	27 <runtime.findrunnable+0x6c5>
  4280ca:	48 8b 48 10 	movq	16(%rax), %rcx
  4280ce:	48 89 0d 93 f8 07 00 	movq	%rcx, 522387(%rip)
  4280d5:	b9 ff ff ff ff 	movl	$4294967295, %ecx
  4280da:	48 8d 15 8f f8 07 00 	leaq	522383(%rip), %rdx
  4280e1:	f0 	lock
  4280e2:	0f c1 0a 	xaddl	%ecx, (%rdx)
  4280e5:	48 8d 05 44 f8 07 00 	leaq	522308(%rip), %rax
  4280ec:	48 89 04 24 	movq	%rax, (%rsp)
  4280f0:	e8 cb 15 fe ff 	callq	-125493 <runtime.unlock>
  4280f5:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  4280fd:	48 85 c0 	testq	%rax, %rax
  428100:	75 13 	jne	19 <runtime.findrunnable+0x6f5>
  428102:	48 8b 44 24 50 	movq	80(%rsp), %rax
  428107:	48 89 04 24 	movq	%rax, (%rsp)
  42810b:	e8 60 06 00 00 	callq	1632 <runtime.injectglist>
  428110:	e9 12 fe ff ff 	jmp	-494 <runtime.findrunnable+0x507>
  428115:	48 89 04 24 	movq	%rax, (%rsp)
  428119:	e8 c2 3e 00 00 	callq	16066 <runtime.acquirep>
  42811e:	48 8b 44 24 50 	movq	80(%rsp), %rax
  428123:	48 8b 88 b8 00 00 00 	movq	184(%rax), %rcx
  42812a:	48 89 0c 24 	movq	%rcx, (%rsp)
  42812e:	e8 3d 06 00 00 	callq	1597 <runtime.injectglist>
  428133:	48 8b 44 24 50 	movq	80(%rsp), %rax
  428138:	48 89 04 24 	movq	%rax, (%rsp)
  42813c:	48 b9 04 00 00 00 01 00 00 00 	movabsq	$4294967300, %rcx
  428146:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  42814b:	e8 30 c9 ff ff 	callq	-14032 <runtime.casgstatus>
  428150:	0f b6 05 79 b6 08 00 	movzbl	571001(%rip), %eax
  428157:	84 c0 	testb	%al, %al
  428159:	75 25 	jne	37 <runtime.findrunnable+0x760>
  42815b:	48 8b 44 24 50 	movq	80(%rsp), %rax
  428160:	48 89 84 24 a8 00 00 00 	movq	%rax, 168(%rsp)
  428168:	c6 84 24 b0 00 00 00 00 	movb	$0, 176(%rsp)
  428170:	48 8b ac 24 98 00 00 00 	movq	152(%rsp), %rbp
  428178:	48 81 c4 a0 00 00 00 	addq	$160, %rsp
  42817f:	c3 	retq
  428180:	48 8b 44 24 50 	movq	80(%rsp), %rax
  428185:	48 89 04 24 	movq	%rax, (%rsp)
  428189:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  428192:	e8 29 2b 01 00 	callq	76585 <runtime.traceGoUnpark>
  428197:	eb c2 	jmp	-62 <runtime.findrunnable+0x73b>
  428199:	48 89 04 24 	movq	%rax, (%rsp)
  42819d:	e8 ce 5b 00 00 	callq	23502 <runtime.pidleput>
  4281a2:	31 c0 	xorl	%eax, %eax
  4281a4:	e9 8b fb ff ff 	jmp	-1141 <runtime.findrunnable+0x314>
  4281a9:	48 8d 15 c0 f7 07 00 	leaq	522176(%rip), %rdx
  4281b0:	e9 6d fb ff ff 	jmp	-1171 <runtime.findrunnable+0x302>
  4281b5:	31 c0 	xorl	%eax, %eax
  4281b7:	e9 20 fb ff ff 	jmp	-1248 <runtime.findrunnable+0x2bc>
  4281bc:	b8 01 00 00 00 	movl	$1, %eax
  4281c1:	e9 16 fb ff ff 	jmp	-1258 <runtime.findrunnable+0x2bc>
  4281c6:	48 89 04 24 	movq	%rax, (%rsp)
  4281ca:	e8 11 3e 00 00 	callq	15889 <runtime.acquirep>
  4281cf:	0f b6 44 24 27 	movzbl	39(%rsp), %eax
  4281d4:	84 c0 	testb	%al, %al
  4281d6:	74 38 	je	56 <runtime.findrunnable+0x7f0>
  4281d8:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  4281e0:	48 8b 48 30 	movq	48(%rax), %rcx
  4281e4:	c6 81 14 01 00 00 01 	movb	$1, 276(%rcx)
  4281eb:	b9 01 00 00 00 	movl	$1, %ecx
  4281f0:	48 8d 15 7d f7 07 00 	leaq	522109(%rip), %rdx
  4281f7:	f0 	lock
  4281f8:	0f c1 0a 	xaddl	%ecx, (%rdx)
  4281fb:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  428203:	48 8b 8c 24 80 00 00 00 	movq	128(%rsp), %rcx
  42820b:	e9 2c fd ff ff 	jmp	-724 <runtime.findrunnable+0x51c>
  428210:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  428218:	eb e1 	jmp	-31 <runtime.findrunnable+0x7db>
  42821a:	48 89 04 24 	movq	%rax, (%rsp)
  42821e:	c7 44 24 08 00 00 00 00 	movl	$0, 8(%rsp)
  428226:	e8 05 5a 00 00 	callq	23045 <runtime.globrunqget>
  42822b:	48 8b 44 24 10 	movq	16(%rsp), %rax
  428230:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  428235:	48 8d 0d f4 f6 07 00 	leaq	521972(%rip), %rcx
  42823c:	48 89 0c 24 	movq	%rcx, (%rsp)
  428240:	e8 7b 14 fe ff 	callq	-125829 <runtime.unlock>
  428245:	48 8b 44 24 68 	movq	104(%rsp), %rax
  42824a:	48 89 84 24 a8 00 00 00 	movq	%rax, 168(%rsp)
  428252:	c6 84 24 b0 00 00 00 00 	movb	$0, 176(%rsp)
  42825a:	48 8b ac 24 98 00 00 00 	movq	152(%rsp), %rbp
  428262:	48 81 c4 a0 00 00 00 	addq	$160, %rsp
  428269:	c3 	retq
  42826a:	48 8d 05 bf f6 07 00 	leaq	521919(%rip), %rax
  428271:	48 89 04 24 	movq	%rax, (%rsp)
  428275:	e8 46 14 fe ff 	callq	-125882 <runtime.unlock>
  42827a:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  428282:	48 8b 8c 24 80 00 00 00 	movq	128(%rsp), %rcx
  42828a:	e9 ad fc ff ff 	jmp	-851 <runtime.findrunnable+0x51c>
  42828f:	48 c7 80 60 12 00 00 02 00 00 00 	movq	$2, 4704(%rax)
  42829a:	48 8b 80 58 12 00 00 	movq	4696(%rax), %rax
  4282a1:	48 89 84 24 88 00 00 00 	movq	%rax, 136(%rsp)
  4282a9:	48 89 04 24 	movq	%rax, (%rsp)
  4282ad:	48 b9 04 00 00 00 01 00 00 00 	movabsq	$4294967300, %rcx
  4282b7:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4282bc:	e8 bf c7 ff ff 	callq	-14401 <runtime.casgstatus>
  4282c1:	0f b6 05 08 b5 08 00 	movzbl	570632(%rip), %eax
  4282c8:	84 c0 	testb	%al, %al
  4282ca:	75 28 	jne	40 <runtime.findrunnable+0x8d4>
  4282cc:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  4282d4:	48 89 84 24 a8 00 00 00 	movq	%rax, 168(%rsp)
  4282dc:	c6 84 24 b0 00 00 00 00 	movb	$0, 176(%rsp)
  4282e4:	48 8b ac 24 98 00 00 00 	movq	152(%rsp), %rbp
  4282ec:	48 81 c4 a0 00 00 00 	addq	$160, %rsp
  4282f3:	c3 	retq
  4282f4:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  4282fc:	48 89 04 24 	movq	%rax, (%rsp)
  428300:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  428309:	e8 b2 29 01 00 	callq	76210 <runtime.traceGoUnpark>
  42830e:	eb bc 	jmp	-68 <runtime.findrunnable+0x8ac>
  428310:	31 c9 	xorl	%ecx, %ecx
  428312:	e9 06 fb ff ff 	jmp	-1274 <runtime.findrunnable+0x3fd>
  428317:	b9 01 00 00 00 	movl	$1, %ecx
  42831c:	e9 fc fa ff ff 	jmp	-1284 <runtime.findrunnable+0x3fd>
  428321:	b9 01 00 00 00 	movl	$1, %ecx
  428326:	e9 f2 fa ff ff 	jmp	-1294 <runtime.findrunnable+0x3fd>
  42832b:	31 c9 	xorl	%ecx, %ecx
  42832d:	e9 ba fa ff ff 	jmp	-1350 <runtime.findrunnable+0x3cc>
  428332:	b9 01 00 00 00 	movl	$1, %ecx
  428337:	e9 b0 fa ff ff 	jmp	-1360 <runtime.findrunnable+0x3cc>
  42833c:	c6 81 14 01 00 00 01 	movb	$1, 276(%rcx)
  428343:	b9 01 00 00 00 	movl	$1, %ecx
  428348:	48 8d 1d 25 f6 07 00 	leaq	521765(%rip), %rbx
  42834f:	f0 	lock
  428350:	0f c1 0b 	xaddl	%ecx, (%rbx)
  428353:	e9 e8 fc ff ff 	jmp	-792 <runtime.findrunnable+0x620>
  428358:	8b 1d 16 f6 07 00 	movl	521750(%rip), %ebx
  42835e:	8b 35 0c f6 07 00 	movl	521740(%rip), %esi
  428364:	d1 e3 	shll	%ebx
  428366:	29 f1 	subl	%esi, %ecx
  428368:	39 cb 	cmpl	%ecx, %ebx
  42836a:	0f 82 bd fc ff ff 	jb	-835 <runtime.findrunnable+0x60d>
  428370:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  428378:	e9 1b fa ff ff 	jmp	-1509 <runtime.findrunnable+0x378>
  42837d:	48 8b 94 24 80 00 00 00 	movq	128(%rsp), %rdx
  428385:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  42838d:	e9 06 fa ff ff 	jmp	-1530 <runtime.findrunnable+0x378>
  428392:	c6 04 24 00 	movb	$0, (%rsp)
  428396:	e8 95 66 ff ff 	callq	-39275 <runtime.netpoll>
  42839b:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4283a0:	48 85 c0 	testq	%rax, %rax
  4283a3:	0f 84 52 fc ff ff 	je	-942 <runtime.findrunnable+0x5db>
  4283a9:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  4283ae:	48 8b 88 b8 00 00 00 	movq	184(%rax), %rcx
  4283b5:	48 89 0c 24 	movq	%rcx, (%rsp)
  4283b9:	e8 b2 03 00 00 	callq	946 <runtime.injectglist>
  4283be:	48 8b 44 24 58 	movq	88(%rsp), %rax
  4283c3:	48 89 04 24 	movq	%rax, (%rsp)
  4283c7:	48 b9 04 00 00 00 01 00 00 00 	movabsq	$4294967300, %rcx
  4283d1:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4283d6:	e8 a5 c6 ff ff 	callq	-14683 <runtime.casgstatus>
  4283db:	0f b6 05 ee b3 08 00 	movzbl	570350(%rip), %eax
  4283e2:	84 c0 	testb	%al, %al
  4283e4:	75 25 	jne	37 <runtime.findrunnable+0x9eb>
  4283e6:	48 8b 44 24 58 	movq	88(%rsp), %rax
  4283eb:	48 89 84 24 a8 00 00 00 	movq	%rax, 168(%rsp)
  4283f3:	c6 84 24 b0 00 00 00 00 	movb	$0, 176(%rsp)
  4283fb:	48 8b ac 24 98 00 00 00 	movq	152(%rsp), %rbp
  428403:	48 81 c4 a0 00 00 00 	addq	$160, %rsp
  42840a:	c3 	retq
  42840b:	48 8b 44 24 58 	movq	88(%rsp), %rax
  428410:	48 89 04 24 	movq	%rax, (%rsp)
  428414:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  42841d:	e8 9e 28 01 00 	callq	75934 <runtime.traceGoUnpark>
  428422:	eb c2 	jmp	-62 <runtime.findrunnable+0x9c6>
  428424:	48 8d 05 05 f5 07 00 	leaq	521477(%rip), %rax
  42842b:	48 89 04 24 	movq	%rax, (%rsp)
  42842f:	e8 ec 10 fe ff 	callq	-126740 <runtime.lock>
  428434:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  42843c:	48 89 04 24 	movq	%rax, (%rsp)
  428440:	c7 44 24 08 00 00 00 00 	movl	$0, 8(%rsp)
  428448:	e8 e3 57 00 00 	callq	22499 <runtime.globrunqget>
  42844d:	48 8b 44 24 10 	movq	16(%rsp), %rax
  428452:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  428457:	48 8d 0d d2 f4 07 00 	leaq	521426(%rip), %rcx
  42845e:	48 89 0c 24 	movq	%rcx, (%rsp)
  428462:	e8 59 12 fe ff 	callq	-126375 <runtime.unlock>
  428467:	48 8b 44 24 60 	movq	96(%rsp), %rax
  42846c:	48 85 c0 	testq	%rax, %rax
  42846f:	0f 84 62 fb ff ff 	je	-1182 <runtime.findrunnable+0x5b7>
  428475:	48 89 84 24 a8 00 00 00 	movq	%rax, 168(%rsp)
  42847d:	c6 84 24 b0 00 00 00 00 	movb	$0, 176(%rsp)
  428485:	48 8b ac 24 98 00 00 00 	movq	152(%rsp), %rbp
  42848d:	48 81 c4 a0 00 00 00 	addq	$160, %rsp
  428494:	c3 	retq
  428495:	48 89 84 24 a8 00 00 00 	movq	%rax, 168(%rsp)
  42849d:	88 8c 24 b0 00 00 00 	movb	%cl, 176(%rsp)
  4284a4:	48 8b ac 24 98 00 00 00 	movq	152(%rsp), %rbp
  4284ac:	48 81 c4 a0 00 00 00 	addq	$160, %rsp
  4284b3:	c3 	retq
  4284b4:	48 89 1c 24 	movq	%rbx, (%rsp)
  4284b8:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  4284c1:	e8 2a d7 01 00 	callq	120618 <runtime.asmcgocall>
  4284c6:	48 8b 94 24 88 00 00 00 	movq	136(%rsp), %rdx
  4284ce:	e9 da fa ff ff 	jmp	-1318 <runtime.findrunnable+0x58d>
  4284d3:	e8 c8 74 fe ff 	callq	-101176 <runtime.wakefing>
  4284d8:	48 8b 04 24 	movq	(%rsp), %rax
  4284dc:	48 85 c0 	testq	%rax, %rax
  4284df:	75 1d 	jne	29 <runtime.findrunnable+0xade>
  4284e1:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  4284e9:	48 8b 8c 24 80 00 00 00 	movq	128(%rsp), %rcx
  4284f1:	48 8b 94 24 88 00 00 00 	movq	136(%rsp), %rdx
  4284f9:	e9 9c fa ff ff 	jmp	-1380 <runtime.findrunnable+0x57a>
  4284fe:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  428507:	c6 44 24 10 01 	movb	$1, 16(%rsp)
  42850c:	e8 3f ba ff ff 	callq	-17857 <runtime.ready>
  428511:	eb ce 	jmp	-50 <runtime.findrunnable+0xac1>
  428513:	e8 28 da ff ff 	callq	-9688 <runtime.runSafePointFn>
  428518:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  428520:	48 8b 8c 24 80 00 00 00 	movq	128(%rsp), %rcx
  428528:	48 8b 94 24 88 00 00 00 	movq	136(%rsp), %rdx
  428530:	e9 4b fa ff ff 	jmp	-1461 <runtime.findrunnable+0x560>
  428535:	48 8d 05 d0 47 04 00 	leaq	280528(%rip), %rax
  42853c:	48 89 04 24 	movq	%rax, (%rsp)
  428540:	48 c7 44 24 08 23 00 00 00 	movq	$35, 8(%rsp)
  428549:	e8 82 8c ff ff 	callq	-29566 <runtime.throw>
  42854e:	0f 0b 	ud2
  428550:	48 8d 05 5f 3b 04 00 	leaq	277343(%rip), %rax
  428557:	48 89 04 24 	movq	%rax, (%rsp)
  42855b:	48 c7 44 24 08 1c 00 00 00 	movq	$28, 8(%rsp)
  428564:	e8 67 8c ff ff 	callq	-29593 <runtime.throw>
  428569:	0f 0b 	ud2
  42856b:	48 8d 05 75 44 04 00 	leaq	279669(%rip), %rax
  428572:	48 89 04 24 	movq	%rax, (%rsp)
  428576:	48 c7 44 24 08 21 00 00 00 	movq	$33, 8(%rsp)
  42857f:	e8 4c 8c ff ff 	callq	-29620 <runtime.throw>
  428584:	0f 0b 	ud2
  428586:	48 8d 05 26 2d 04 00 	leaq	273702(%rip), %rax
  42858d:	48 89 04 24 	movq	%rax, (%rsp)
  428591:	48 c7 44 24 08 15 00 00 00 	movq	$21, 8(%rsp)
  42859a:	e8 31 8c ff ff 	callq	-29647 <runtime.throw>
  42859f:	0f 0b 	ud2
  4285a1:	e8 7a 75 ff ff 	callq	-35462 <runtime.panicdivide>
  4285a6:	0f 0b 	ud2
  4285a8:	e8 93 74 ff ff 	callq	-35693 <runtime.panicindex>
  4285ad:	0f 0b 	ud2
  4285af:	e8 8c 74 ff ff 	callq	-35700 <runtime.panicindex>
  4285b4:	0f 0b 	ud2
  4285b6:	e8 65 75 ff ff 	callq	-35483 <runtime.panicdivide>
  4285bb:	0f 0b 	ud2
  4285bd:	e8 5e 75 ff ff 	callq	-35490 <runtime.panicdivide>
  4285c2:	0f 0b 	ud2
  4285c4:	e8 a7 bf 01 00 	callq	114599 <runtime.morestack_noctxt>
  4285c9:	e9 52 f4 ff ff 	jmp	-2990 <runtime.findrunnable>
  4285ce:	cc 	int3
  4285cf:	cc 	int3

runtime.pollWork:
  4285d0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4285d9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4285dd:	0f 86 ba 00 00 00 	jbe	186 <runtime.pollWork+0xcd>
  4285e3:	48 83 ec 18 	subq	$24, %rsp
  4285e7:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  4285ec:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  4285f1:	8b 05 91 f3 07 00 	movl	521105(%rip), %eax
  4285f7:	85 c0 	testl	%eax, %eax
  4285f9:	0f 85 8f 00 00 00 	jne	143 <runtime.pollWork+0xbe>
  4285ff:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  428608:	48 8b 40 30 	movq	48(%rax), %rax
  42860c:	48 8b 80 d0 00 00 00 	movq	208(%rax), %rax
  428613:	48 89 04 24 	movq	%rax, (%rsp)
  428617:	e8 f4 57 00 00 	callq	22516 <runtime.runqempty>
  42861c:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  428621:	84 c0 	testb	%al, %al
  428623:	74 5a 	je	90 <runtime.pollWork+0xaf>
  428625:	8b 05 bd b2 09 00 	movl	635581(%rip), %eax
  42862b:	85 c0 	testl	%eax, %eax
  42862d:	74 16 	je	22 <runtime.pollWork+0x75>
  42862f:	8b 05 b7 b2 09 00 	movl	635575(%rip), %eax
  428635:	85 c0 	testl	%eax, %eax
  428637:	76 0c 	jbe	12 <runtime.pollWork+0x75>
  428639:	48 8b 05 e8 f2 07 00 	movq	520936(%rip), %rax
  428640:	48 85 c0 	testq	%rax, %rax
  428643:	75 0f 	jne	15 <runtime.pollWork+0x84>
  428645:	c6 44 24 20 00 	movb	$0, 32(%rsp)
  42864a:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  42864f:	48 83 c4 18 	addq	$24, %rsp
  428653:	c3 	retq
  428654:	c6 04 24 00 	movb	$0, (%rsp)
  428658:	e8 d3 63 ff ff 	callq	-39981 <runtime.netpoll>
  42865d:	48 8b 44 24 08 	movq	8(%rsp), %rax
  428662:	48 85 c0 	testq	%rax, %rax
  428665:	74 de 	je	-34 <runtime.pollWork+0x75>
  428667:	48 89 04 24 	movq	%rax, (%rsp)
  42866b:	e8 00 01 00 00 	callq	256 <runtime.injectglist>
  428670:	c6 44 24 20 01 	movb	$1, 32(%rsp)
  428675:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  42867a:	48 83 c4 18 	addq	$24, %rsp
  42867e:	c3 	retq
  42867f:	c6 44 24 20 01 	movb	$1, 32(%rsp)
  428684:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  428689:	48 83 c4 18 	addq	$24, %rsp
  42868d:	c3 	retq
  42868e:	c6 44 24 20 01 	movb	$1, 32(%rsp)
  428693:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  428698:	48 83 c4 18 	addq	$24, %rsp
  42869c:	c3 	retq
  42869d:	e8 ce be 01 00 	callq	114382 <runtime.morestack_noctxt>
  4286a2:	e9 29 ff ff ff 	jmp	-215 <runtime.pollWork>
  4286a7:	cc 	int3
  4286a8:	cc 	int3
  4286a9:	cc 	int3
  4286aa:	cc 	int3
  4286ab:	cc 	int3
  4286ac:	cc 	int3
  4286ad:	cc 	int3
  4286ae:	cc 	int3
  4286af:	cc 	int3

runtime.resetspinning:
  4286b0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4286b9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4286bd:	0f 86 96 00 00 00 	jbe	150 <runtime.resetspinning+0xa9>
  4286c3:	48 83 ec 18 	subq	$24, %rsp
  4286c7:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  4286cc:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  4286d1:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4286da:	48 8b 40 30 	movq	48(%rax), %rax
  4286de:	0f b6 88 14 01 00 00 	movzbl	276(%rax), %ecx
  4286e5:	84 c9 	testb	%cl, %cl
  4286e7:	74 55 	je	85 <runtime.resetspinning+0x8e>
  4286e9:	c6 80 14 01 00 00 00 	movb	$0, 276(%rax)
  4286f0:	b8 ff ff ff ff 	movl	$4294967295, %eax
  4286f5:	48 8d 0d 78 f2 07 00 	leaq	520824(%rip), %rcx
  4286fc:	f0 	lock
  4286fd:	0f c1 01 	xaddl	%eax, (%rcx)
  428700:	ff c8 	decl	%eax
  428702:	85 c0 	testl	%eax, %eax
  428704:	7c 1d 	jl	29 <runtime.resetspinning+0x73>
  428706:	75 0a 	jne	10 <runtime.resetspinning+0x62>
  428708:	8b 05 62 f2 07 00 	movl	520802(%rip), %eax
  42870e:	85 c0 	testl	%eax, %eax
  428710:	77 0a 	ja	10 <runtime.resetspinning+0x6c>
  428712:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  428717:	48 83 c4 18 	addq	$24, %rsp
  42871b:	c3 	retq
  42871c:	e8 4f ec ff ff 	callq	-5041 <runtime.wakep>
  428721:	eb ef 	jmp	-17 <runtime.resetspinning+0x62>
  428723:	48 8d 05 bd 42 04 00 	leaq	279229(%rip), %rax
  42872a:	48 89 04 24 	movq	%rax, (%rsp)
  42872e:	48 c7 44 24 08 21 00 00 00 	movq	$33, 8(%rsp)
  428737:	e8 94 8a ff ff 	callq	-30060 <runtime.throw>
  42873c:	0f 0b 	ud2
  42873e:	48 8d 05 e2 3f 04 00 	leaq	278498(%rip), %rax
  428745:	48 89 04 24 	movq	%rax, (%rsp)
  428749:	48 c7 44 24 08 1f 00 00 00 	movq	$31, 8(%rsp)
  428752:	e8 79 8a ff ff 	callq	-30087 <runtime.throw>
  428757:	0f 0b 	ud2
  428759:	e8 12 be 01 00 	callq	114194 <runtime.morestack_noctxt>
  42875e:	e9 4d ff ff ff 	jmp	-179 <runtime.resetspinning>
  428763:	cc 	int3
  428764:	cc 	int3
  428765:	cc 	int3
  428766:	cc 	int3
  428767:	cc 	int3
  428768:	cc 	int3
  428769:	cc 	int3
  42876a:	cc 	int3
  42876b:	cc 	int3
  42876c:	cc 	int3
  42876d:	cc 	int3
  42876e:	cc 	int3
  42876f:	cc 	int3

runtime.injectglist:
  428770:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  428779:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42877d:	0f 86 6e 01 00 00 	jbe	366 <runtime.injectglist+0x181>
  428783:	48 83 ec 38 	subq	$56, %rsp
  428787:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  42878c:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  428791:	48 8b 44 24 40 	movq	64(%rsp), %rax
  428796:	48 85 c0 	testq	%rax, %rax
  428799:	0f 84 48 01 00 00 	je	328 <runtime.injectglist+0x177>
  42879f:	0f b6 0d 2a b0 08 00 	movzbl	569386(%rip), %ecx
  4287a6:	84 c9 	testb	%cl, %cl
  4287a8:	74 32 	je	50 <runtime.injectglist+0x6c>
  4287aa:	48 89 c1 	movq	%rax, %rcx
  4287ad:	eb 28 	jmp	40 <runtime.injectglist+0x67>
  4287af:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4287b4:	48 89 04 24 	movq	%rax, (%rsp)
  4287b8:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  4287c1:	e8 fa 24 01 00 	callq	75002 <runtime.traceGoUnpark>
  4287c6:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4287cb:	48 8b 80 b8 00 00 00 	movq	184(%rax), %rax
  4287d2:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  4287d7:	48 85 c0 	testq	%rax, %rax
  4287da:	75 d3 	jne	-45 <runtime.injectglist+0x3f>
  4287dc:	48 8d 05 4d f1 07 00 	leaq	520525(%rip), %rax
  4287e3:	48 89 04 24 	movq	%rax, (%rsp)
  4287e7:	e8 34 0d fe ff 	callq	-127692 <runtime.lock>
  4287ec:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4287f1:	31 c9 	xorl	%ecx, %ecx
  4287f3:	eb 24 	jmp	36 <runtime.injectglist+0xa9>
  4287f5:	48 8d 1d 84 f1 07 00 	leaq	520580(%rip), %rbx
  4287fc:	84 03 	testb	%al, (%rbx)
  4287fe:	48 89 15 7b f1 07 00 	movq	%rdx, 520571(%rip)
  428805:	ff 05 7d f1 07 00 	incl	520573(%rip)
  42880b:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  428810:	48 8d 4a 01 	leaq	1(%rdx), %rcx
  428814:	48 8b 44 24 28 	movq	40(%rsp), %rax
  428819:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  42881e:	48 85 c0 	testq	%rax, %rax
  428821:	74 75 	je	117 <runtime.injectglist+0x128>
  428823:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  428828:	48 8b 88 b8 00 00 00 	movq	184(%rax), %rcx
  42882f:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  428834:	48 89 04 24 	movq	%rax, (%rsp)
  428838:	48 ba 04 00 00 00 01 00 00 00 	movabsq	$4294967300, %rdx
  428842:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  428847:	e8 34 c2 ff ff 	callq	-15820 <runtime.casgstatus>
  42884c:	48 8b 44 24 20 	movq	32(%rsp), %rax
  428851:	48 c7 80 b8 00 00 00 00 00 00 00 	movq	$0, 184(%rax)
  42885c:	48 8b 0d 1d f1 07 00 	movq	520477(%rip), %rcx
  428863:	48 85 c9 	testq	%rcx, %rcx
  428866:	74 18 	je	24 <runtime.injectglist+0x110>
  428868:	48 8d 91 b8 00 00 00 	leaq	184(%rcx), %rdx
  42886f:	84 02 	testb	%al, (%rdx)
  428871:	48 89 c2 	movq	%rax, %rdx
  428874:	48 89 81 b8 00 00 00 	movq	%rax, 184(%rcx)
  42887b:	e9 75 ff ff ff 	jmp	-139 <runtime.injectglist+0x85>
  428880:	48 8d 0d f1 f0 07 00 	leaq	520433(%rip), %rcx
  428887:	84 01 	testb	%al, (%rcx)
  428889:	48 89 c2 	movq	%rax, %rdx
  42888c:	48 89 05 e5 f0 07 00 	movq	%rax, 520421(%rip)
  428893:	e9 5d ff ff ff 	jmp	-163 <runtime.injectglist+0x85>
  428898:	48 8d 05 91 f0 07 00 	leaq	520337(%rip), %rax
  42889f:	48 89 04 24 	movq	%rax, (%rsp)
  4288a3:	e8 18 0e fe ff 	callq	-127464 <runtime.unlock>
  4288a8:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4288ad:	eb 1f 	jmp	31 <runtime.injectglist+0x15e>
  4288af:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  4288b4:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  4288bc:	c6 44 24 08 00 	movb	$0, 8(%rsp)
  4288c1:	e8 7a e5 ff ff 	callq	-6790 <runtime.startm>
  4288c6:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4288cb:	48 ff c8 	decq	%rax
  4288ce:	48 85 c0 	testq	%rax, %rax
  4288d1:	74 0a 	je	10 <runtime.injectglist+0x16d>
  4288d3:	8b 0d 97 f0 07 00 	movl	520343(%rip), %ecx
  4288d9:	85 c9 	testl	%ecx, %ecx
  4288db:	75 d2 	jne	-46 <runtime.injectglist+0x13f>
  4288dd:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  4288e2:	48 83 c4 38 	addq	$56, %rsp
  4288e6:	c3 	retq
  4288e7:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  4288ec:	48 83 c4 38 	addq	$56, %rsp
  4288f0:	c3 	retq
  4288f1:	e8 7a bc 01 00 	callq	113786 <runtime.morestack_noctxt>
  4288f6:	e9 75 fe ff ff 	jmp	-395 <runtime.injectglist>
  4288fb:	cc 	int3
  4288fc:	cc 	int3
  4288fd:	cc 	int3
  4288fe:	cc 	int3
  4288ff:	cc 	int3

runtime.schedule:
  428900:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  428909:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42890d:	0f 86 40 03 00 00 	jbe	832 <runtime.schedule+0x353>
  428913:	48 83 ec 40 	subq	$64, %rsp
  428917:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  42891c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  428921:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  42892a:	48 8b 48 30 	movq	48(%rax), %rcx
  42892e:	8b 91 00 01 00 00 	movl	256(%rcx), %edx
  428934:	85 d2 	testl	%edx, %edx
  428936:	0f 85 fc 02 00 00 	jne	764 <runtime.schedule+0x338>
  42893c:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  428941:	48 8b 89 68 01 00 00 	movq	360(%rcx), %rcx
  428948:	48 85 c9 	testq	%rcx, %rcx
  42894b:	0f 85 84 02 00 00 	jne	644 <runtime.schedule+0x2d5>
  428951:	48 8b 48 30 	movq	48(%rax), %rcx
  428955:	0f b6 89 19 01 00 00 	movzbl	281(%rcx), %ecx
  42895c:	84 c9 	testb	%cl, %cl
  42895e:	0f 85 b9 02 00 00 	jne	697 <runtime.schedule+0x31d>
  428964:	eb 0e 	jmp	14 <runtime.schedule+0x74>
  428966:	48 89 04 24 	movq	%rax, (%rsp)
  42896a:	e8 31 ed ff ff 	callq	-4815 <runtime.startlockedm>
  42896f:	48 8b 44 24 28 	movq	40(%rsp), %rax
  428974:	8b 0d 7e f0 07 00 	movl	520318(%rip), %ecx
  42897a:	85 c9 	testl	%ecx, %ecx
  42897c:	0f 85 44 02 00 00 	jne	580 <runtime.schedule+0x2c6>
  428982:	48 8b 48 30 	movq	48(%rax), %rcx
  428986:	48 8b 89 d0 00 00 00 	movq	208(%rcx), %rcx
  42898d:	84 01 	testb	%al, (%rcx)
  42898f:	8b 89 a0 22 00 00 	movl	8864(%rcx), %ecx
  428995:	85 c9 	testl	%ecx, %ecx
  428997:	0f 85 1a 02 00 00 	jne	538 <runtime.schedule+0x2b7>
  42899d:	0f b6 0d 2c ae 08 00 	movzbl	568876(%rip), %ecx
  4289a4:	84 c9 	testb	%cl, %cl
  4289a6:	0f 84 f5 01 00 00 	je	501 <runtime.schedule+0x2a1>
  4289ac:	e8 9f 0a 01 00 	callq	68255 <runtime.traceReader>
  4289b1:	48 8b 04 24 	movq	(%rsp), %rax
  4289b5:	48 85 c0 	testq	%rax, %rax
  4289b8:	0f 85 a9 01 00 00 	jne	425 <runtime.schedule+0x267>
  4289be:	48 85 c0 	testq	%rax, %rax
  4289c1:	0f 84 63 01 00 00 	je	355 <runtime.schedule+0x22a>
  4289c7:	48 85 c0 	testq	%rax, %rax
  4289ca:	0f 84 c5 00 00 00 	je	197 <runtime.schedule+0x195>
  4289d0:	48 85 c0 	testq	%rax, %rax
  4289d3:	74 71 	je	113 <runtime.schedule+0x146>
  4289d5:	31 c9 	xorl	%ecx, %ecx
  4289d7:	48 85 c0 	testq	%rax, %rax
  4289da:	74 5a 	je	90 <runtime.schedule+0x136>
  4289dc:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  4289e1:	48 8b 5a 30 	movq	48(%rdx), %rbx
  4289e5:	0f b6 9b 14 01 00 00 	movzbl	276(%rbx), %ebx
  4289ec:	84 db 	testb	%bl, %bl
  4289ee:	75 27 	jne	39 <runtime.schedule+0x117>
  4289f0:	48 8b 98 e0 00 00 00 	movq	224(%rax), %rbx
  4289f7:	48 85 db 	testq	%rbx, %rbx
  4289fa:	0f 85 66 ff ff ff 	jne	-154 <runtime.schedule+0x66>
  428a00:	48 89 04 24 	movq	%rax, (%rsp)
  428a04:	88 4c 24 08 	movb	%cl, 8(%rsp)
  428a08:	e8 a3 ee ff ff 	callq	-4445 <runtime.execute>
  428a0d:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  428a12:	48 83 c4 40 	addq	$64, %rsp
  428a16:	c3 	retq
  428a17:	88 4c 24 1f 	movb	%cl, 31(%rsp)
  428a1b:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  428a20:	e8 8b fc ff ff 	callq	-885 <runtime.resetspinning>
  428a25:	48 8b 44 24 20 	movq	32(%rsp), %rax
  428a2a:	0f b6 4c 24 1f 	movzbl	31(%rsp), %ecx
  428a2f:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  428a34:	eb ba 	jmp	-70 <runtime.schedule+0xf0>
  428a36:	e8 e5 ef ff ff 	callq	-4123 <runtime.findrunnable>
  428a3b:	48 8b 04 24 	movq	(%rsp), %rax
  428a3f:	0f b6 4c 24 08 	movzbl	8(%rsp), %ecx
  428a44:	eb 96 	jmp	-106 <runtime.schedule+0xdc>
  428a46:	48 8b 44 24 28 	movq	40(%rsp), %rax
  428a4b:	48 8b 48 30 	movq	48(%rax), %rcx
  428a4f:	48 8b 89 d0 00 00 00 	movq	208(%rcx), %rcx
  428a56:	48 89 0c 24 	movq	%rcx, (%rsp)
  428a5a:	e8 11 57 00 00 	callq	22289 <runtime.runqget>
  428a5f:	48 8b 44 24 08 	movq	8(%rsp), %rax
  428a64:	0f b6 4c 24 10 	movzbl	16(%rsp), %ecx
  428a69:	48 85 c0 	testq	%rax, %rax
  428a6c:	74 1d 	je	29 <runtime.schedule+0x18b>
  428a6e:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  428a73:	48 8b 5a 30 	movq	48(%rdx), %rbx
  428a77:	0f b6 9b 14 01 00 00 	movzbl	276(%rbx), %ebx
  428a7e:	84 db 	testb	%bl, %bl
  428a80:	0f 85 7c 01 00 00 	jne	380 <runtime.schedule+0x302>
  428a86:	e9 4c ff ff ff 	jmp	-180 <runtime.schedule+0xd7>
  428a8b:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  428a90:	e9 42 ff ff ff 	jmp	-190 <runtime.schedule+0xd7>
  428a95:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  428a9a:	48 8b 51 30 	movq	48(%rcx), %rdx
  428a9e:	48 8b 92 d0 00 00 00 	movq	208(%rdx), %rdx
  428aa5:	8b 52 18 	movl	24(%rdx), %edx
  428aa8:	bb 7e 8a 4b 86 	movl	$2253097598, %ebx
  428aad:	48 0f af da 	imulq	%rdx, %rbx
  428ab1:	48 c1 eb 25 	shrq	$37, %rbx
  428ab5:	6b db 3d 	imull	$61, %ebx, %ebx
  428ab8:	29 da 	subl	%ebx, %edx
  428aba:	85 d2 	testl	%edx, %edx
  428abc:	0f 85 0e ff ff ff 	jne	-242 <runtime.schedule+0xd0>
  428ac2:	8b 15 c0 ee 07 00 	movl	519872(%rip), %edx
  428ac8:	85 d2 	testl	%edx, %edx
  428aca:	0f 8e 00 ff ff ff 	jle	-256 <runtime.schedule+0xd0>
  428ad0:	48 8d 05 59 ee 07 00 	leaq	519769(%rip), %rax
  428ad7:	48 89 04 24 	movq	%rax, (%rsp)
  428adb:	e8 40 0a fe ff 	callq	-128448 <runtime.lock>
  428ae0:	48 8b 44 24 28 	movq	40(%rsp), %rax
  428ae5:	48 8b 48 30 	movq	48(%rax), %rcx
  428ae9:	48 8b 89 d0 00 00 00 	movq	208(%rcx), %rcx
  428af0:	48 89 0c 24 	movq	%rcx, (%rsp)
  428af4:	c7 44 24 08 01 00 00 00 	movl	$1, 8(%rsp)
  428afc:	e8 2f 51 00 00 	callq	20783 <runtime.globrunqget>
  428b01:	48 8b 44 24 10 	movq	16(%rsp), %rax
  428b06:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  428b0b:	48 8d 0d 1e ee 07 00 	leaq	519710(%rip), %rcx
  428b12:	48 89 0c 24 	movq	%rcx, (%rsp)
  428b16:	e8 a5 0b fe ff 	callq	-128091 <runtime.unlock>
  428b1b:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  428b20:	48 8b 44 24 20 	movq	32(%rsp), %rax
  428b25:	e9 a6 fe ff ff 	jmp	-346 <runtime.schedule+0xd0>
  428b2a:	8b 0d a4 ad 09 00 	movl	634276(%rip), %ecx
  428b30:	85 c9 	testl	%ecx, %ecx
  428b32:	0f 84 8f fe ff ff 	je	-369 <runtime.schedule+0xc7>
  428b38:	48 8b 44 24 28 	movq	40(%rsp), %rax
  428b3d:	48 8b 48 30 	movq	48(%rax), %rcx
  428b41:	48 8b 89 d0 00 00 00 	movq	208(%rcx), %rcx
  428b48:	48 8d 15 d1 b0 09 00 	leaq	635089(%rip), %rdx
  428b4f:	48 89 14 24 	movq	%rdx, (%rsp)
  428b53:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  428b58:	e8 b3 7e fe ff 	callq	-98637 <runtime.(*gcControllerState).findRunnableGCWorker>
  428b5d:	48 8b 44 24 10 	movq	16(%rsp), %rax
  428b62:	e9 60 fe ff ff 	jmp	-416 <runtime.schedule+0xc7>
  428b67:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  428b6c:	48 b8 04 00 00 00 01 00 00 00 	movabsq	$4294967300, %rax
  428b76:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  428b7b:	e8 00 bf ff ff 	callq	-16640 <runtime.casgstatus>
  428b80:	48 8b 44 24 30 	movq	48(%rsp), %rax
  428b85:	48 89 04 24 	movq	%rax, (%rsp)
  428b89:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  428b92:	e8 29 21 01 00 	callq	74025 <runtime.traceGoUnpark>
  428b97:	48 8b 44 24 30 	movq	48(%rsp), %rax
  428b9c:	e9 1d fe ff ff 	jmp	-483 <runtime.schedule+0xbe>
  428ba1:	0f b6 0d 29 ac 08 00 	movzbl	568361(%rip), %ecx
  428ba8:	84 c9 	testb	%cl, %cl
  428baa:	0f 85 fc fd ff ff 	jne	-516 <runtime.schedule+0xac>
  428bb0:	31 c0 	xorl	%eax, %eax
  428bb2:	e9 07 fe ff ff 	jmp	-505 <runtime.schedule+0xbe>
  428bb7:	e8 84 d3 ff ff 	callq	-11388 <runtime.runSafePointFn>
  428bbc:	48 8b 44 24 28 	movq	40(%rsp), %rax
  428bc1:	e9 d7 fd ff ff 	jmp	-553 <runtime.schedule+0x9d>
  428bc6:	e8 c5 eb ff ff 	callq	-5179 <runtime.gcstopm>
  428bcb:	48 8b 44 24 28 	movq	40(%rsp), %rax
  428bd0:	e9 9f fd ff ff 	jmp	-609 <runtime.schedule+0x74>
  428bd5:	e8 06 e8 ff ff 	callq	-6138 <runtime.stoplockedm>
  428bda:	48 8b 44 24 28 	movq	40(%rsp), %rax
  428bdf:	48 8b 48 30 	movq	48(%rax), %rcx
  428be3:	48 8b 89 68 01 00 00 	movq	360(%rcx), %rcx
  428bea:	48 89 0c 24 	movq	%rcx, (%rsp)
  428bee:	c6 44 24 08 00 	movb	$0, 8(%rsp)
  428bf3:	e8 b8 ec ff ff 	callq	-4936 <runtime.execute>
  428bf8:	48 8b 44 24 28 	movq	40(%rsp), %rax
  428bfd:	e9 4f fd ff ff 	jmp	-689 <runtime.schedule+0x51>
  428c02:	48 8d 05 79 40 04 00 	leaq	278649(%rip), %rax
  428c09:	48 89 04 24 	movq	%rax, (%rsp)
  428c0d:	48 c7 44 24 08 22 00 00 00 	movq	$34, 8(%rsp)
  428c16:	e8 b5 85 ff ff 	callq	-31307 <runtime.throw>
  428c1b:	0f 0b 	ud2
  428c1d:	48 8d 05 5e 1f 04 00 	leaq	270174(%rip), %rax
  428c24:	48 89 04 24 	movq	%rax, (%rsp)
  428c28:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  428c31:	e8 9a 85 ff ff 	callq	-31334 <runtime.throw>
  428c36:	0f 0b 	ud2
  428c38:	48 8d 05 7d 2b 04 00 	leaq	273277(%rip), %rax
  428c3f:	48 89 04 24 	movq	%rax, (%rsp)
  428c43:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  428c4c:	e8 7f 85 ff ff 	callq	-31361 <runtime.throw>
  428c51:	0f 0b 	ud2
  428c53:	e8 18 b9 01 00 	callq	112920 <runtime.morestack_noctxt>
  428c58:	e9 a3 fc ff ff 	jmp	-861 <runtime.schedule>
  428c5d:	cc 	int3
  428c5e:	cc 	int3
  428c5f:	cc 	int3

runtime.parkunlock_c:
  428c60:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  428c69:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  428c6d:	76 2b 	jbe	43 <runtime.parkunlock_c+0x3a>
  428c6f:	48 83 ec 10 	subq	$16, %rsp
  428c73:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  428c78:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  428c7d:	48 8b 44 24 20 	movq	32(%rsp), %rax
  428c82:	48 89 04 24 	movq	%rax, (%rsp)
  428c86:	e8 35 0a fe ff 	callq	-128459 <runtime.unlock>
  428c8b:	c6 44 24 28 01 	movb	$1, 40(%rsp)
  428c90:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  428c95:	48 83 c4 10 	addq	$16, %rsp
  428c99:	c3 	retq
  428c9a:	e8 d1 b8 01 00 	callq	112849 <runtime.morestack_noctxt>
  428c9f:	eb bf 	jmp	-65 <runtime.parkunlock_c>
  428ca1:	cc 	int3
  428ca2:	cc 	int3
  428ca3:	cc 	int3
  428ca4:	cc 	int3
  428ca5:	cc 	int3
  428ca6:	cc 	int3
  428ca7:	cc 	int3
  428ca8:	cc 	int3
  428ca9:	cc 	int3
  428caa:	cc 	int3
  428cab:	cc 	int3
  428cac:	cc 	int3
  428cad:	cc 	int3
  428cae:	cc 	int3
  428caf:	cc 	int3

runtime.park_m:
  428cb0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  428cb9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  428cbd:	0f 86 c2 01 00 00 	jbe	450 <runtime.park_m+0x1d5>
  428cc3:	48 83 ec 28 	subq	$40, %rsp
  428cc7:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  428ccc:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  428cd1:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  428cda:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  428cdf:	0f b6 0d ea aa 08 00 	movzbl	568042(%rip), %ecx
  428ce6:	84 c9 	testb	%cl, %cl
  428ce8:	0f 85 73 01 00 00 	jne	371 <runtime.park_m+0x1b1>
  428cee:	48 8b 44 24 30 	movq	48(%rsp), %rax
  428cf3:	48 89 04 24 	movq	%rax, (%rsp)
  428cf7:	48 b9 02 00 00 00 04 00 00 00 	movabsq	$17179869186, %rcx
  428d01:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  428d06:	e8 75 bd ff ff 	callq	-17035 <runtime.casgstatus>
  428d0b:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  428d14:	48 8b 48 30 	movq	48(%rax), %rcx
  428d18:	48 8b 91 c0 00 00 00 	movq	192(%rcx), %rdx
  428d1f:	84 01 	testb	%al, (%rcx)
  428d21:	48 8d 4a 30 	leaq	48(%rdx), %rcx
  428d25:	84 01 	testb	%al, (%rcx)
  428d27:	31 c9 	xorl	%ecx, %ecx
  428d29:	48 89 4a 30 	movq	%rcx, 48(%rdx)
  428d2d:	48 8b 48 30 	movq	48(%rax), %rcx
  428d31:	84 00 	testb	%al, (%rax)
  428d33:	48 8d 81 c0 00 00 00 	leaq	192(%rcx), %rax
  428d3a:	84 00 	testb	%al, (%rax)
  428d3c:	31 c0 	xorl	%eax, %eax
  428d3e:	48 89 81 c0 00 00 00 	movq	%rax, 192(%rcx)
  428d45:	48 8b 44 24 18 	movq	24(%rsp), %rax
  428d4a:	48 8b 48 30 	movq	48(%rax), %rcx
  428d4e:	48 8b 91 08 03 00 00 	movq	776(%rcx), %rdx
  428d55:	48 8d 99 08 03 00 00 	leaq	776(%rcx), %rbx
  428d5c:	48 85 d2 	testq	%rdx, %rdx
  428d5f:	75 0f 	jne	15 <runtime.park_m+0xc0>
  428d61:	e8 9a fb ff ff 	callq	-1126 <runtime.schedule>
  428d66:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  428d6b:	48 83 c4 28 	addq	$40, %rsp
  428d6f:	c3 	retq
  428d70:	84 03 	testb	%al, (%rbx)
  428d72:	48 8b 91 08 03 00 00 	movq	776(%rcx), %rdx
  428d79:	48 8b 81 10 03 00 00 	movq	784(%rcx), %rax
  428d80:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  428d85:	48 8b 44 24 30 	movq	48(%rsp), %rax
  428d8a:	48 89 04 24 	movq	%rax, (%rsp)
  428d8e:	48 8b 0a 	movq	(%rdx), %rcx
  428d91:	ff d1 	callq	*%rcx
  428d93:	48 8b 44 24 18 	movq	24(%rsp), %rax
  428d98:	48 8b 48 30 	movq	48(%rax), %rcx
  428d9c:	84 01 	testb	%al, (%rcx)
  428d9e:	0f b6 5c 24 10 	movzbl	16(%rsp), %ebx
  428da3:	8b 35 67 ac 09 00 	movl	633959(%rip), %esi
  428da9:	48 8d b9 08 03 00 00 	leaq	776(%rcx), %rdi
  428db0:	85 f6 	testl	%esi, %esi
  428db2:	0f 85 97 00 00 00 	jne	151 <runtime.park_m+0x19f>
  428db8:	48 c7 81 08 03 00 00 00 00 00 00 	movq	$0, 776(%rcx)
  428dc3:	48 8b 48 30 	movq	48(%rax), %rcx
  428dc7:	84 01 	testb	%al, (%rcx)
  428dc9:	8b 15 41 ac 09 00 	movl	633921(%rip), %edx
  428dcf:	48 8d b9 10 03 00 00 	leaq	784(%rcx), %rdi
  428dd6:	85 d2 	testl	%edx, %edx
  428dd8:	75 6c 	jne	108 <runtime.park_m+0x196>
  428dda:	48 c7 81 10 03 00 00 00 00 00 00 	movq	$0, 784(%rcx)
  428de5:	84 db 	testb	%bl, %bl
  428de7:	0f 85 74 ff ff ff 	jne	-140 <runtime.park_m+0xb1>
  428ded:	0f b6 05 dc a9 08 00 	movzbl	567772(%rip), %eax
  428df4:	84 c0 	testb	%al, %al
  428df6:	75 35 	jne	53 <runtime.park_m+0x17d>
  428df8:	48 8b 44 24 30 	movq	48(%rsp), %rax
  428dfd:	48 89 04 24 	movq	%rax, (%rsp)
  428e01:	48 b9 04 00 00 00 01 00 00 00 	movabsq	$4294967300, %rcx
  428e0b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  428e10:	e8 6b bc ff ff 	callq	-17301 <runtime.casgstatus>
  428e15:	48 8b 44 24 30 	movq	48(%rsp), %rax
  428e1a:	48 89 04 24 	movq	%rax, (%rsp)
  428e1e:	c6 44 24 08 01 	movb	$1, 8(%rsp)
  428e23:	e8 88 ea ff ff 	callq	-5496 <runtime.execute>
  428e28:	e9 34 ff ff ff 	jmp	-204 <runtime.park_m+0xb1>
  428e2d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  428e32:	48 89 04 24 	movq	%rax, (%rsp)
  428e36:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  428e3f:	e8 7c 1e 01 00 	callq	73340 <runtime.traceGoUnpark>
  428e44:	eb b2 	jmp	-78 <runtime.park_m+0x148>
  428e46:	31 c0 	xorl	%eax, %eax
  428e48:	e8 53 da 01 00 	callq	121427 <runtime.gcWriteBarrier>
  428e4d:	eb 96 	jmp	-106 <runtime.park_m+0x135>
  428e4f:	48 89 c1 	movq	%rax, %rcx
  428e52:	31 c0 	xorl	%eax, %eax
  428e54:	e8 47 da 01 00 	callq	121415 <runtime.gcWriteBarrier>
  428e59:	48 89 c8 	movq	%rcx, %rax
  428e5c:	e9 62 ff ff ff 	jmp	-158 <runtime.park_m+0x113>
  428e61:	48 8b 48 30 	movq	48(%rax), %rcx
  428e65:	0f b6 91 18 03 00 00 	movzbl	792(%rcx), %edx
  428e6c:	48 8b 89 20 03 00 00 	movq	800(%rcx), %rcx
  428e73:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  428e78:	88 14 24 	movb	%dl, (%rsp)
  428e7b:	e8 b0 1d 01 00 	callq	73136 <runtime.traceGoPark>
  428e80:	e9 69 fe ff ff 	jmp	-407 <runtime.park_m+0x3e>
  428e85:	e8 e6 b6 01 00 	callq	112358 <runtime.morestack_noctxt>
  428e8a:	e9 21 fe ff ff 	jmp	-479 <runtime.park_m>
  428e8f:	cc 	int3

runtime.goschedImpl:
  428e90:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  428e99:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  428e9d:	0f 86 67 02 00 00 	jbe	615 <runtime.goschedImpl+0x27a>
  428ea3:	48 83 ec 30 	subq	$48, %rsp
  428ea7:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  428eac:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  428eb1:	48 8b 44 24 38 	movq	56(%rsp), %rax
  428eb6:	8b 88 90 00 00 00 	movl	144(%rax), %ecx
  428ebc:	81 e1 ff ef ff ff 	andl	$4294963199, %ecx
  428ec2:	83 f9 02 	cmpl	$2, %ecx
  428ec5:	0f 85 db 00 00 00 	jne	219 <runtime.goschedImpl+0x116>
  428ecb:	48 89 04 24 	movq	%rax, (%rsp)
  428ecf:	48 b9 02 00 00 00 01 00 00 00 	movabsq	$4294967298, %rcx
  428ed9:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  428ede:	e8 9d bb ff ff 	callq	-17507 <runtime.casgstatus>
  428ee3:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  428eec:	48 8b 48 30 	movq	48(%rax), %rcx
  428ef0:	48 8b 91 c0 00 00 00 	movq	192(%rcx), %rdx
  428ef7:	84 01 	testb	%al, (%rcx)
  428ef9:	48 8d 4a 30 	leaq	48(%rdx), %rcx
  428efd:	84 01 	testb	%al, (%rcx)
  428eff:	31 c9 	xorl	%ecx, %ecx
  428f01:	48 89 4a 30 	movq	%rcx, 48(%rdx)
  428f05:	48 8b 48 30 	movq	48(%rax), %rcx
  428f09:	84 00 	testb	%al, (%rax)
  428f0b:	48 8d 81 c0 00 00 00 	leaq	192(%rcx), %rax
  428f12:	84 00 	testb	%al, (%rax)
  428f14:	31 c0 	xorl	%eax, %eax
  428f16:	48 89 81 c0 00 00 00 	movq	%rax, 192(%rcx)
  428f1d:	48 8d 05 0c ea 07 00 	leaq	518668(%rip), %rax
  428f24:	48 89 04 24 	movq	%rax, (%rsp)
  428f28:	e8 f3 05 fe ff 	callq	-129549 <runtime.lock>
  428f2d:	48 8b 44 24 38 	movq	56(%rsp), %rax
  428f32:	48 c7 80 b8 00 00 00 00 00 00 00 	movq	$0, 184(%rax)
  428f3d:	48 8b 0d 3c ea 07 00 	movq	518716(%rip), %rcx
  428f44:	48 85 c9 	testq	%rcx, %rcx
  428f47:	74 48 	je	72 <runtime.goschedImpl+0x101>
  428f49:	48 8d 91 b8 00 00 00 	leaq	184(%rcx), %rdx
  428f50:	84 02 	testb	%al, (%rdx)
  428f52:	48 89 c2 	movq	%rax, %rdx
  428f55:	48 89 81 b8 00 00 00 	movq	%rax, 184(%rcx)
  428f5c:	48 8d 05 1d ea 07 00 	leaq	518685(%rip), %rax
  428f63:	84 00 	testb	%al, (%rax)
  428f65:	48 89 15 14 ea 07 00 	movq	%rdx, 518676(%rip)
  428f6c:	ff 05 16 ea 07 00 	incl	518678(%rip)
  428f72:	48 8d 05 b7 e9 07 00 	leaq	518583(%rip), %rax
  428f79:	48 89 04 24 	movq	%rax, (%rsp)
  428f7d:	e8 3e 07 fe ff 	callq	-129218 <runtime.unlock>
  428f82:	e8 79 f9 ff ff 	callq	-1671 <runtime.schedule>
  428f87:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  428f8c:	48 83 c4 30 	addq	$48, %rsp
  428f90:	c3 	retq
  428f91:	48 8d 0d e0 e9 07 00 	leaq	518624(%rip), %rcx
  428f98:	84 01 	testb	%al, (%rcx)
  428f9a:	48 89 c2 	movq	%rax, %rdx
  428f9d:	48 89 05 d4 e9 07 00 	movq	%rax, 518612(%rip)
  428fa4:	eb b6 	jmp	-74 <runtime.goschedImpl+0xcc>
  428fa6:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  428faf:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  428fb4:	8b 90 90 00 00 00 	movl	144(%rax), %edx
  428fba:	89 54 24 10 	movl	%edx, 16(%rsp)
  428fbe:	48 8b 98 98 00 00 00 	movq	152(%rax), %rbx
  428fc5:	48 89 5c 24 18 	movq	%rbx, 24(%rsp)
  428fca:	e8 31 8b ff ff 	callq	-29903 <runtime.printlock>
  428fcf:	48 8d 05 8c 1b 04 00 	leaq	269196(%rip), %rax
  428fd6:	48 89 04 24 	movq	%rax, (%rsp)
  428fda:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  428fe3:	e8 58 94 ff ff 	callq	-27560 <runtime.printstring>
  428fe8:	48 8b 44 24 38 	movq	56(%rsp), %rax
  428fed:	48 89 04 24 	movq	%rax, (%rsp)
  428ff1:	e8 0a 94 ff ff 	callq	-27638 <runtime.printpointer>
  428ff6:	48 8d 05 95 0e 04 00 	leaq	265877(%rip), %rax
  428ffd:	48 89 04 24 	movq	%rax, (%rsp)
  429001:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  42900a:	e8 31 94 ff ff 	callq	-27599 <runtime.printstring>
  42900f:	48 8b 44 24 18 	movq	24(%rsp), %rax
  429014:	48 89 04 24 	movq	%rax, (%rsp)
  429018:	e8 63 92 ff ff 	callq	-28061 <runtime.printint>
  42901d:	48 8d 05 f0 1d 04 00 	leaq	269808(%rip), %rax
  429024:	48 89 04 24 	movq	%rax, (%rsp)
  429028:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  429031:	e8 0a 94 ff ff 	callq	-27638 <runtime.printstring>
  429036:	8b 44 24 10 	movl	16(%rsp), %eax
  42903a:	89 c0 	movl	%eax, %eax
  42903c:	48 89 04 24 	movq	%rax, (%rsp)
  429040:	e8 2b 91 ff ff 	callq	-28373 <runtime.printuint>
  429045:	e8 46 8d ff ff 	callq	-29370 <runtime.printnl>
  42904a:	e8 31 8b ff ff 	callq	-29903 <runtime.printunlock>
  42904f:	48 8b 44 24 20 	movq	32(%rsp), %rax
  429054:	8b 88 90 00 00 00 	movl	144(%rax), %ecx
  42905a:	89 4c 24 14 	movl	%ecx, 20(%rsp)
  42905e:	48 8b 90 98 00 00 00 	movq	152(%rax), %rdx
  429065:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  42906a:	e8 91 8a ff ff 	callq	-30063 <runtime.printlock>
  42906f:	48 8d 05 dc 1a 04 00 	leaq	269020(%rip), %rax
  429076:	48 89 04 24 	movq	%rax, (%rsp)
  42907a:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  429083:	e8 b8 93 ff ff 	callq	-27720 <runtime.printstring>
  429088:	48 8b 44 24 20 	movq	32(%rsp), %rax
  42908d:	48 89 04 24 	movq	%rax, (%rsp)
  429091:	e8 6a 93 ff ff 	callq	-27798 <runtime.printpointer>
  429096:	48 8d 05 f5 0d 04 00 	leaq	265717(%rip), %rax
  42909d:	48 89 04 24 	movq	%rax, (%rsp)
  4290a1:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  4290aa:	e8 91 93 ff ff 	callq	-27759 <runtime.printstring>
  4290af:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4290b4:	48 89 04 24 	movq	%rax, (%rsp)
  4290b8:	e8 c3 91 ff ff 	callq	-28221 <runtime.printint>
  4290bd:	48 8d 05 3d 1d 04 00 	leaq	269629(%rip), %rax
  4290c4:	48 89 04 24 	movq	%rax, (%rsp)
  4290c8:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  4290d1:	e8 6a 93 ff ff 	callq	-27798 <runtime.printstring>
  4290d6:	8b 44 24 14 	movl	20(%rsp), %eax
  4290da:	89 c0 	movl	%eax, %eax
  4290dc:	48 89 04 24 	movq	%rax, (%rsp)
  4290e0:	e8 8b 90 ff ff 	callq	-28533 <runtime.printuint>
  4290e5:	e8 a6 8c ff ff 	callq	-29530 <runtime.printnl>
  4290ea:	e8 91 8a ff ff 	callq	-30063 <runtime.printunlock>
  4290ef:	48 8d 05 d0 14 04 00 	leaq	267472(%rip), %rax
  4290f6:	48 89 04 24 	movq	%rax, (%rsp)
  4290fa:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  429103:	e8 c8 80 ff ff 	callq	-32568 <runtime.throw>
  429108:	0f 0b 	ud2
  42910a:	e8 61 b4 01 00 	callq	111713 <runtime.morestack_noctxt>
  42910f:	e9 7c fd ff ff 	jmp	-644 <runtime.goschedImpl>
  429114:	cc 	int3
  429115:	cc 	int3
  429116:	cc 	int3
  429117:	cc 	int3
  429118:	cc 	int3
  429119:	cc 	int3
  42911a:	cc 	int3
  42911b:	cc 	int3
  42911c:	cc 	int3
  42911d:	cc 	int3
  42911e:	cc 	int3
  42911f:	cc 	int3

runtime.gosched_m:
  429120:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  429129:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42912d:	76 38 	jbe	56 <runtime.gosched_m+0x47>
  42912f:	48 83 ec 10 	subq	$16, %rsp
  429133:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  429138:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  42913d:	0f b6 05 8c a6 08 00 	movzbl	566924(%rip), %eax
  429144:	84 c0 	testb	%al, %al
  429146:	75 18 	jne	24 <runtime.gosched_m+0x40>
  429148:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42914d:	48 89 04 24 	movq	%rax, (%rsp)
  429151:	e8 3a fd ff ff 	callq	-710 <runtime.goschedImpl>
  429156:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  42915b:	48 83 c4 10 	addq	$16, %rsp
  42915f:	c3 	retq
  429160:	e8 eb 19 01 00 	callq	72171 <runtime.traceGoSched>
  429165:	eb e1 	jmp	-31 <runtime.gosched_m+0x28>
  429167:	e8 04 b4 01 00 	callq	111620 <runtime.morestack_noctxt>
  42916c:	eb b2 	jmp	-78 <runtime.gosched_m>
  42916e:	cc 	int3
  42916f:	cc 	int3

runtime.gopreempt_m:
  429170:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  429179:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42917d:	76 38 	jbe	56 <runtime.gopreempt_m+0x47>
  42917f:	48 83 ec 10 	subq	$16, %rsp
  429183:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  429188:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  42918d:	0f b6 05 3c a6 08 00 	movzbl	566844(%rip), %eax
  429194:	84 c0 	testb	%al, %al
  429196:	75 18 	jne	24 <runtime.gopreempt_m+0x40>
  429198:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42919d:	48 89 04 24 	movq	%rax, (%rsp)
  4291a1:	e8 ea fc ff ff 	callq	-790 <runtime.goschedImpl>
  4291a6:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  4291ab:	48 83 c4 10 	addq	$16, %rsp
  4291af:	c3 	retq
  4291b0:	e8 0b 1a 01 00 	callq	72203 <runtime.traceGoPreempt>
  4291b5:	eb e1 	jmp	-31 <runtime.gopreempt_m+0x28>
  4291b7:	e8 b4 b3 01 00 	callq	111540 <runtime.morestack_noctxt>
  4291bc:	eb b2 	jmp	-78 <runtime.gopreempt_m>
  4291be:	cc 	int3
  4291bf:	cc 	int3

runtime.goexit1:
  4291c0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4291c9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4291cd:	76 3a 	jbe	58 <runtime.goexit1+0x49>
  4291cf:	48 83 ec 10 	subq	$16, %rsp
  4291d3:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  4291d8:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  4291dd:	0f b6 05 ec a5 08 00 	movzbl	566764(%rip), %eax
  4291e4:	84 c0 	testb	%al, %al
  4291e6:	75 1a 	jne	26 <runtime.goexit1+0x42>
  4291e8:	48 8d 05 b9 4e 04 00 	leaq	282297(%rip), %rax
  4291ef:	48 89 04 24 	movq	%rax, (%rsp)
  4291f3:	e8 a8 b1 01 00 	callq	111016 <runtime.mcall>
  4291f8:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  4291fd:	48 83 c4 10 	addq	$16, %rsp
  429201:	c3 	retq
  429202:	e8 e9 18 01 00 	callq	71913 <runtime.traceGoEnd>
  429207:	eb df 	jmp	-33 <runtime.goexit1+0x28>
  429209:	e8 62 b3 01 00 	callq	111458 <runtime.morestack_noctxt>
  42920e:	eb b0 	jmp	-80 <runtime.goexit1>

runtime.goexit0:
  429210:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  429219:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42921d:	0f 86 f2 02 00 00 	jbe	754 <runtime.goexit0+0x305>
  429223:	48 83 ec 30 	subq	$48, %rsp
  429227:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  42922c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  429231:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  42923a:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  42923f:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  429244:	48 89 0c 24 	movq	%rcx, (%rsp)
  429248:	48 ba 02 00 00 00 06 00 00 00 	movabsq	$25769803778, %rdx
  429252:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  429257:	e8 24 b8 ff ff 	callq	-18396 <runtime.casgstatus>
  42925c:	48 8b 44 24 38 	movq	56(%rsp), %rax
  429261:	48 89 04 24 	movq	%rax, (%rsp)
  429265:	e8 c6 51 01 00 	callq	86470 <runtime.isSystemGoroutine>
  42926a:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  42926f:	84 c0 	testb	%al, %al
  429271:	74 10 	je	16 <runtime.goexit0+0x73>
  429273:	b9 ff ff ff ff 	movl	$4294967295, %ecx
  429278:	48 8d 15 e1 e6 07 00 	leaq	517857(%rip), %rdx
  42927f:	f0 	lock
  429280:	0f c1 0a 	xaddl	%ecx, (%rdx)
  429283:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  429288:	84 01 	testb	%al, (%rcx)
  42928a:	8b 15 80 a7 09 00 	movl	632704(%rip), %edx
  429290:	48 8d 79 30 	leaq	48(%rcx), %rdi
  429294:	85 d2 	testl	%edx, %edx
  429296:	0f 85 19 02 00 00 	jne	537 <runtime.goexit0+0x2a5>
  42929c:	48 c7 41 30 00 00 00 00 	movq	$0, 48(%rcx)
  4292a4:	48 8b 91 e0 00 00 00 	movq	224(%rcx), %rdx
  4292ab:	48 c7 81 e0 00 00 00 00 00 00 00 	movq	$0, 224(%rcx)
  4292b6:	48 8b 5c 24 20 	movq	32(%rsp), %rbx
  4292bb:	48 8b 73 30 	movq	48(%rbx), %rsi
  4292bf:	48 c7 86 68 01 00 00 00 00 00 00 	movq	$0, 360(%rsi)
  4292ca:	c6 81 c1 00 00 00 00 	movb	$0, 193(%rcx)
  4292d1:	8b 35 39 a7 09 00 	movl	632633(%rip), %esi
  4292d7:	48 8d 79 28 	leaq	40(%rcx), %rdi
  4292db:	4c 8d 41 20 	leaq	32(%rcx), %r8
  4292df:	85 f6 	testl	%esi, %esi
  4292e1:	0f 85 b8 01 00 00 	jne	440 <runtime.goexit0+0x28f>
  4292e7:	48 c7 41 28 00 00 00 00 	movq	$0, 40(%rcx)
  4292ef:	48 c7 41 20 00 00 00 00 	movq	$0, 32(%rcx)
  4292f7:	0f 57 c0 	xorps	%xmm0, %xmm0
  4292fa:	0f 11 81 f8 00 00 00 	movups	%xmm0, 248(%rcx)
  429301:	8b 35 09 a7 09 00 	movl	632585(%rip), %esi
  429307:	48 8d b9 f0 00 00 00 	leaq	240(%rcx), %rdi
  42930e:	85 f6 	testl	%esi, %esi
  429310:	0f 85 7a 01 00 00 	jne	378 <runtime.goexit0+0x280>
  429316:	48 c7 81 f0 00 00 00 00 00 00 00 	movq	$0, 240(%rcx)
  429321:	48 c7 81 b0 00 00 00 00 00 00 00 	movq	$0, 176(%rcx)
  42932c:	8b 35 de a6 09 00 	movl	632542(%rip), %esi
  429332:	48 8d b9 a8 00 00 00 	leaq	168(%rcx), %rdi
  429339:	4c 8d 81 88 00 00 00 	leaq	136(%rcx), %r8
  429340:	4c 8d 89 58 01 00 00 	leaq	344(%rcx), %r9
  429347:	4c 8d 91 60 01 00 00 	leaq	352(%rcx), %r10
  42934e:	85 f6 	testl	%esi, %esi
  429350:	0f 85 12 01 00 00 	jne	274 <runtime.goexit0+0x258>
  429356:	48 c7 81 a8 00 00 00 00 00 00 00 	movq	$0, 168(%rcx)
  429361:	48 c7 81 88 00 00 00 00 00 00 00 	movq	$0, 136(%rcx)
  42936c:	0f 11 81 58 01 00 00 	movups	%xmm0, 344(%rcx)
  429373:	8b 05 5b a5 09 00 	movl	632155(%rip), %eax
  429379:	85 c0 	testl	%eax, %eax
  42937b:	74 38 	je	56 <runtime.goexit0+0x1a5>
  42937d:	48 8b 81 70 01 00 00 	movq	368(%rcx), %rax
  429384:	48 85 c0 	testq	%rax, %rax
  429387:	7e 2c 	jle	44 <runtime.goexit0+0x1a5>
  429389:	0f 57 c0 	xorps	%xmm0, %xmm0
  42938c:	f2 48 0f 2a c0 	cvtsi2sdq	%rax, %xmm0
  429391:	f2 0f 59 05 c7 a8 09 00 	mulsd	633031(%rip), %xmm0
  429399:	f2 48 0f 2c c0 	cvttsd2si	%xmm0, %rax
  42939e:	48 8d 35 83 a8 09 00 	leaq	632963(%rip), %rsi
  4293a5:	f0 	lock
  4293a6:	48 0f c1 06 	xaddq	%rax, (%rsi)
  4293aa:	48 c7 81 70 01 00 00 00 00 00 00 	movq	$0, 368(%rcx)
  4293b5:	c6 81 c4 00 00 00 01 	movb	$1, 196(%rcx)
  4293bc:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4293c5:	48 8b 70 30 	movq	48(%rax), %rsi
  4293c9:	48 8b be c0 00 00 00 	movq	192(%rsi), %rdi
  4293d0:	84 06 	testb	%al, (%rsi)
  4293d2:	48 8d 77 30 	leaq	48(%rdi), %rsi
  4293d6:	84 06 	testb	%al, (%rsi)
  4293d8:	31 f6 	xorl	%esi, %esi
  4293da:	48 89 77 30 	movq	%rsi, 48(%rdi)
  4293de:	48 8b 70 30 	movq	48(%rax), %rsi
  4293e2:	84 00 	testb	%al, (%rax)
  4293e4:	48 8d 86 c0 00 00 00 	leaq	192(%rsi), %rax
  4293eb:	84 00 	testb	%al, (%rax)
  4293ed:	31 c0 	xorl	%eax, %eax
  4293ef:	48 89 86 c0 00 00 00 	movq	%rax, 192(%rsi)
  4293f6:	48 8b 43 30 	movq	48(%rbx), %rax
  4293fa:	8b b0 f8 02 00 00 	movl	760(%rax), %esi
  429400:	85 f6 	testl	%esi, %esi
  429402:	0f 85 b9 00 00 00 	jne	185 <runtime.goexit0+0x2b1>
  429408:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  42940d:	c7 80 f4 02 00 00 00 00 00 00 	movl	$0, 756(%rax)
  429417:	48 8b 43 30 	movq	48(%rbx), %rax
  42941b:	48 8b 80 d0 00 00 00 	movq	208(%rax), %rax
  429422:	48 89 04 24 	movq	%rax, (%rsp)
  429426:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  42942b:	e8 20 14 00 00 	callq	5152 <runtime.gfput>
  429430:	48 8b 44 24 18 	movq	24(%rsp), %rax
  429435:	48 85 c0 	testq	%rax, %rax
  429438:	75 0f 	jne	15 <runtime.goexit0+0x239>
  42943a:	e8 c1 f4 ff ff 	callq	-2879 <runtime.schedule>
  42943f:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  429444:	48 83 c4 30 	addq	$48, %rsp
  429448:	c3 	retq
  429449:	48 8b 44 24 20 	movq	32(%rsp), %rax
  42944e:	48 8b 40 30 	movq	48(%rax), %rax
  429452:	48 8b 08 	movq	(%rax), %rcx
  429455:	84 01 	testb	%al, (%rcx)
  429457:	84 00 	testb	%al, (%rax)
  429459:	48 8d 41 38 	leaq	56(%rcx), %rax
  42945d:	48 89 04 24 	movq	%rax, (%rsp)
  429461:	e8 da ae 01 00 	callq	110298 <runtime.gogo>
  429466:	eb d2 	jmp	-46 <runtime.goexit0+0x22a>
  429468:	31 c0 	xorl	%eax, %eax
  42946a:	e8 31 d4 01 00 	callq	119857 <runtime.gcWriteBarrier>
  42946f:	4c 89 c7 	movq	%r8, %rdi
  429472:	31 c0 	xorl	%eax, %eax
  429474:	e8 27 d4 01 00 	callq	119847 <runtime.gcWriteBarrier>
  429479:	4c 89 cf 	movq	%r9, %rdi
  42947c:	e8 1f d4 01 00 	callq	119839 <runtime.gcWriteBarrier>
  429481:	4c 89 d7 	movq	%r10, %rdi
  429484:	31 c0 	xorl	%eax, %eax
  429486:	e8 15 d4 01 00 	callq	119829 <runtime.gcWriteBarrier>
  42948b:	e9 e3 fe ff ff 	jmp	-285 <runtime.goexit0+0x163>
  429490:	31 c0 	xorl	%eax, %eax
  429492:	e8 09 d4 01 00 	callq	119817 <runtime.gcWriteBarrier>
  429497:	0f 57 c0 	xorps	%xmm0, %xmm0
  42949a:	e9 82 fe ff ff 	jmp	-382 <runtime.goexit0+0x111>
  42949f:	31 c0 	xorl	%eax, %eax
  4294a1:	e8 fa d3 01 00 	callq	119802 <runtime.gcWriteBarrier>
  4294a6:	4c 89 c7 	movq	%r8, %rdi
  4294a9:	31 c0 	xorl	%eax, %eax
  4294ab:	e8 f0 d3 01 00 	callq	119792 <runtime.gcWriteBarrier>
  4294b0:	e9 42 fe ff ff 	jmp	-446 <runtime.goexit0+0xe7>
  4294b5:	31 c0 	xorl	%eax, %eax
  4294b7:	e8 e4 d3 01 00 	callq	119780 <runtime.gcWriteBarrier>
  4294bc:	e9 e3 fd ff ff 	jmp	-541 <runtime.goexit0+0x94>
  4294c1:	89 74 24 14 	movl	%esi, 20(%rsp)
  4294c5:	e8 36 86 ff ff 	callq	-31178 <runtime.printlock>
  4294ca:	48 8d 05 c0 21 04 00 	leaq	270784(%rip), %rax
  4294d1:	48 89 04 24 	movq	%rax, (%rsp)
  4294d5:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  4294de:	e8 5d 8f ff ff 	callq	-28835 <runtime.printstring>
  4294e3:	8b 44 24 14 	movl	20(%rsp), %eax
  4294e7:	48 89 04 24 	movq	%rax, (%rsp)
  4294eb:	e8 80 8c ff ff 	callq	-29568 <runtime.printuint>
  4294f0:	e8 9b 88 ff ff 	callq	-30565 <runtime.printnl>
  4294f5:	e8 86 86 ff ff 	callq	-31098 <runtime.printunlock>
  4294fa:	48 8d 05 65 28 04 00 	leaq	272485(%rip), %rax
  429501:	48 89 04 24 	movq	%rax, (%rsp)
  429505:	48 c7 44 24 08 1b 00 00 00 	movq	$27, 8(%rsp)
  42950e:	e8 bd 7c ff ff 	callq	-33603 <runtime.throw>
  429513:	0f 0b 	ud2
  429515:	e8 56 b0 01 00 	callq	110678 <runtime.morestack_noctxt>
  42951a:	e9 f1 fc ff ff 	jmp	-783 <runtime.goexit0>
  42951f:	cc 	int3

runtime.save:
  429520:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  429529:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  42952e:	48 89 48 40 	movq	%rcx, 64(%rax)
  429532:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  429537:	48 89 48 38 	movq	%rcx, 56(%rax)
  42953b:	48 c7 40 60 00 00 00 00 	movq	$0, 96(%rax)
  429543:	48 c7 40 58 00 00 00 00 	movq	$0, 88(%rax)
  42954b:	48 89 c1 	movq	%rax, %rcx
  42954e:	48 89 41 48 	movq	%rax, 72(%rcx)
  429552:	48 8b 41 50 	movq	80(%rcx), %rax
  429556:	48 85 c0 	testq	%rax, %rax
  429559:	75 01 	jne	1 <runtime.save+0x3c>
  42955b:	c3 	retq
  42955c:	e8 8f a3 ff ff 	callq	-23665 <runtime.badctxt>
  429561:	eb f8 	jmp	-8 <runtime.save+0x3b>
  429563:	cc 	int3
  429564:	cc 	int3
  429565:	cc 	int3
  429566:	cc 	int3
  429567:	cc 	int3
  429568:	cc 	int3
  429569:	cc 	int3
  42956a:	cc 	int3
  42956b:	cc 	int3
  42956c:	cc 	int3
  42956d:	cc 	int3
  42956e:	cc 	int3
  42956f:	cc 	int3

runtime.reentersyscall:
  429570:	48 83 ec 30 	subq	$48, %rsp
  429574:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  429579:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  42957e:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  429587:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  42958c:	48 8b 48 30 	movq	48(%rax), %rcx
  429590:	ff 81 00 01 00 00 	incl	256(%rcx)
  429596:	48 c7 40 10 de fa ff ff 	movq	$-1314, 16(%rax)
  42959e:	c6 80 c5 00 00 00 01 	movb	$1, 197(%rax)
  4295a5:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  4295aa:	48 89 0c 24 	movq	%rcx, (%rsp)
  4295ae:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  4295b3:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  4295b8:	e8 63 ff ff ff 	callq	-157 <runtime.save>
  4295bd:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4295c2:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  4295c7:	48 89 41 70 	movq	%rax, 112(%rcx)
  4295cb:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  4295d0:	48 89 51 78 	movq	%rdx, 120(%rcx)
  4295d4:	48 89 0c 24 	movq	%rcx, (%rsp)
  4295d8:	48 bb 02 00 00 00 03 00 00 00 	movabsq	$12884901890, %rbx
  4295e2:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  4295e7:	e8 94 b4 ff ff 	callq	-19308 <runtime.casgstatus>
  4295ec:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4295f1:	48 8b 48 70 	movq	112(%rax), %rcx
  4295f5:	48 8b 10 	movq	(%rax), %rdx
  4295f8:	48 39 d1 	cmpq	%rdx, %rcx
  4295fb:	0f 83 90 01 00 00 	jae	400 <runtime.reentersyscall+0x221>
  429601:	48 8d 0d 28 9f 01 00 	leaq	106280(%rip), %rcx
  429608:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  42960d:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  429612:	48 8d 4c 24 18 	leaq	24(%rsp), %rcx
  429617:	48 89 0c 24 	movq	%rcx, (%rsp)
  42961b:	e8 00 ae 01 00 	callq	110080 <runtime.systemstack>
  429620:	0f b6 05 a9 a1 08 00 	movzbl	565673(%rip), %eax
  429627:	84 c0 	testb	%al, %al
  429629:	0f 85 35 01 00 00 	jne	309 <runtime.reentersyscall+0x1f4>
  42962f:	8b 05 d3 e3 07 00 	movl	517075(%rip), %eax
  429635:	85 c0 	testl	%eax, %eax
  429637:	0f 85 fa 00 00 00 	jne	250 <runtime.reentersyscall+0x1c7>
  42963d:	48 8b 44 24 10 	movq	16(%rsp), %rax
  429642:	48 8b 48 30 	movq	48(%rax), %rcx
  429646:	48 8b 89 d0 00 00 00 	movq	208(%rcx), %rcx
  42964d:	84 01 	testb	%al, (%rcx)
  42964f:	8b 89 a0 22 00 00 	movl	8864(%rcx), %ecx
  429655:	85 c9 	testl	%ecx, %ecx
  429657:	0f 85 a8 00 00 00 	jne	168 <runtime.reentersyscall+0x195>
  42965d:	48 8b 48 30 	movq	48(%rax), %rcx
  429661:	48 8b 91 d0 00 00 00 	movq	208(%rcx), %rdx
  429668:	8b 52 1c 	movl	28(%rdx), %edx
  42966b:	89 91 2c 03 00 00 	movl	%edx, 812(%rcx)
  429671:	c6 80 c7 00 00 00 01 	movb	$1, 199(%rax)
  429678:	48 8b 48 30 	movq	48(%rax), %rcx
  42967c:	48 c7 81 60 01 00 00 00 00 00 00 	movq	$0, 352(%rcx)
  429687:	48 8b 48 30 	movq	48(%rax), %rcx
  42968b:	48 8b 89 d0 00 00 00 	movq	208(%rcx), %rcx
  429692:	48 c7 41 40 00 00 00 00 	movq	$0, 64(%rcx)
  42969a:	48 8b 48 30 	movq	48(%rax), %rcx
  42969e:	48 8b 91 d0 00 00 00 	movq	208(%rcx), %rdx
  4296a5:	84 01 	testb	%al, (%rcx)
  4296a7:	b9 02 00 00 00 	movl	$2, %ecx
  4296ac:	87 4a 0c 	xchgl	%ecx, 12(%rdx)
  4296af:	8b 0d 43 e3 07 00 	movl	516931(%rip), %ecx
  4296b5:	85 c9 	testl	%ecx, %ecx
  4296b7:	75 1d 	jne	29 <runtime.reentersyscall+0x166>
  4296b9:	48 c7 40 10 de fa ff ff 	movq	$-1314, 16(%rax)
  4296c1:	48 8b 40 30 	movq	48(%rax), %rax
  4296c5:	83 80 00 01 00 00 ff 	addl	$-1, 256(%rax)
  4296cc:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  4296d1:	48 83 c4 30 	addq	$48, %rsp
  4296d5:	c3 	retq
  4296d6:	48 8d 05 33 49 04 00 	leaq	280883(%rip), %rax
  4296dd:	48 89 04 24 	movq	%rax, (%rsp)
  4296e1:	e8 3a ad 01 00 	callq	109882 <runtime.systemstack>
  4296e6:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4296eb:	48 89 04 24 	movq	%rax, (%rsp)
  4296ef:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4296f4:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4296f9:	e8 22 fe ff ff 	callq	-478 <runtime.save>
  4296fe:	48 8b 44 24 10 	movq	16(%rsp), %rax
  429703:	eb b4 	jmp	-76 <runtime.reentersyscall+0x149>
  429705:	48 8d 05 c4 4a 04 00 	leaq	281284(%rip), %rax
  42970c:	48 89 04 24 	movq	%rax, (%rsp)
  429710:	e8 0b ad 01 00 	callq	109835 <runtime.systemstack>
  429715:	48 8b 44 24 38 	movq	56(%rsp), %rax
  42971a:	48 89 04 24 	movq	%rax, (%rsp)
  42971e:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  429723:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  429728:	e8 f3 fd ff ff 	callq	-525 <runtime.save>
  42972d:	48 8b 44 24 10 	movq	16(%rsp), %rax
  429732:	e9 26 ff ff ff 	jmp	-218 <runtime.reentersyscall+0xed>
  429737:	48 8d 05 da 48 04 00 	leaq	280794(%rip), %rax
  42973e:	48 89 04 24 	movq	%rax, (%rsp)
  429742:	e8 d9 ac 01 00 	callq	109785 <runtime.systemstack>
  429747:	48 8b 44 24 38 	movq	56(%rsp), %rax
  42974c:	48 89 04 24 	movq	%rax, (%rsp)
  429750:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  429755:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  42975a:	e8 c1 fd ff ff 	callq	-575 <runtime.save>
  42975f:	e9 d9 fe ff ff 	jmp	-295 <runtime.reentersyscall+0xcd>
  429764:	48 8d 05 cd 4a 04 00 	leaq	281293(%rip), %rax
  42976b:	48 89 04 24 	movq	%rax, (%rsp)
  42976f:	e8 ac ac 01 00 	callq	109740 <runtime.systemstack>
  429774:	48 8b 44 24 38 	movq	56(%rsp), %rax
  429779:	48 89 04 24 	movq	%rax, (%rsp)
  42977d:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  429782:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  429787:	e8 94 fd ff ff 	callq	-620 <runtime.save>
  42978c:	e9 9e fe ff ff 	jmp	-354 <runtime.reentersyscall+0xbf>
  429791:	48 8b 50 08 	movq	8(%rax), %rdx
  429795:	48 39 ca 	cmpq	%rcx, %rdx
  429798:	0f 82 63 fe ff ff 	jb	-413 <runtime.reentersyscall+0x91>
  42979e:	e9 7d fe ff ff 	jmp	-387 <runtime.reentersyscall+0xb0>
  4297a3:	cc 	int3
  4297a4:	cc 	int3
  4297a5:	cc 	int3
  4297a6:	cc 	int3
  4297a7:	cc 	int3
  4297a8:	cc 	int3
  4297a9:	cc 	int3
  4297aa:	cc 	int3
  4297ab:	cc 	int3
  4297ac:	cc 	int3
  4297ad:	cc 	int3
  4297ae:	cc 	int3
  4297af:	cc 	int3

runtime.entersyscall:
  4297b0:	48 83 ec 18 	subq	$24, %rsp
  4297b4:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  4297b9:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  4297be:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4297c3:	48 89 04 24 	movq	%rax, (%rsp)
  4297c7:	48 8d 44 24 20 	leaq	32(%rsp), %rax
  4297cc:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4297d1:	e8 9a fd ff ff 	callq	-614 <runtime.reentersyscall>
  4297d6:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  4297db:	48 83 c4 18 	addq	$24, %rsp
  4297df:	c3 	retq

runtime.entersyscall_sysmon:
  4297e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4297e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4297ed:	76 5f 	jbe	95 <runtime.entersyscall_sysmon+0x6e>
  4297ef:	48 83 ec 10 	subq	$16, %rsp
  4297f3:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  4297f8:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  4297fd:	48 8d 05 2c e1 07 00 	leaq	516396(%rip), %rax
  429804:	48 89 04 24 	movq	%rax, (%rsp)
  429808:	e8 13 fd fd ff 	callq	-131821 <runtime.lock>
  42980d:	8b 05 f5 e1 07 00 	movl	516597(%rip), %eax
  429813:	85 c0 	testl	%eax, %eax
  429815:	75 1a 	jne	26 <runtime.entersyscall_sysmon+0x51>
  429817:	48 8d 05 12 e1 07 00 	leaq	516370(%rip), %rax
  42981e:	48 89 04 24 	movq	%rax, (%rsp)
  429822:	e8 99 fe fd ff 	callq	-131431 <runtime.unlock>
  429827:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  42982c:	48 83 c4 10 	addq	$16, %rsp
  429830:	c3 	retq
  429831:	31 c0 	xorl	%eax, %eax
  429833:	48 8d 0d ce e1 07 00 	leaq	516558(%rip), %rcx
  42983a:	87 01 	xchgl	%eax, (%rcx)
  42983c:	48 8d 05 cd e1 07 00 	leaq	516557(%rip), %rax
  429843:	48 89 04 24 	movq	%rax, (%rsp)
  429847:	e8 44 ff fd ff 	callq	-131260 <runtime.notewakeup>
  42984c:	eb c9 	jmp	-55 <runtime.entersyscall_sysmon+0x37>
  42984e:	e8 1d ad 01 00 	callq	109853 <runtime.morestack_noctxt>
  429853:	eb 8b 	jmp	-117 <runtime.entersyscall_sysmon>
  429855:	cc 	int3
  429856:	cc 	int3
  429857:	cc 	int3
  429858:	cc 	int3
  429859:	cc 	int3
  42985a:	cc 	int3
  42985b:	cc 	int3
  42985c:	cc 	int3
  42985d:	cc 	int3
  42985e:	cc 	int3
  42985f:	cc 	int3

runtime.entersyscall_gcwait:
  429860:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  429869:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42986d:	0f 86 c8 00 00 00 	jbe	200 <runtime.entersyscall_gcwait+0xdb>
  429873:	48 83 ec 18 	subq	$24, %rsp
  429877:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  42987c:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  429881:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  42988a:	48 8b 40 30 	movq	48(%rax), %rax
  42988e:	48 8b 80 d0 00 00 00 	movq	208(%rax), %rax
  429895:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  42989a:	48 8d 0d 8f e0 07 00 	leaq	516239(%rip), %rcx
  4298a1:	48 89 0c 24 	movq	%rcx, (%rsp)
  4298a5:	e8 76 fc fd ff 	callq	-131978 <runtime.lock>
  4298aa:	8b 05 4c e1 07 00 	movl	516428(%rip), %eax
  4298b0:	85 c0 	testl	%eax, %eax
  4298b2:	7e 3d 	jle	61 <runtime.entersyscall_gcwait+0x91>
  4298b4:	b8 02 00 00 00 	movl	$2, %eax
  4298b9:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  4298be:	ba 03 00 00 00 	movl	$3, %edx
  4298c3:	f0 	lock
  4298c4:	0f b1 51 0c 	cmpxchgl	%edx, 12(%rcx)
  4298c8:	0f 94 c2 	sete	%dl
  4298cb:	84 d2 	testb	%dl, %dl
  4298cd:	74 22 	je	34 <runtime.entersyscall_gcwait+0x91>
  4298cf:	0f b6 05 fa 9e 08 00 	movzbl	564986(%rip), %eax
  4298d6:	84 c0 	testb	%al, %al
  4298d8:	75 43 	jne	67 <runtime.entersyscall_gcwait+0xbd>
  4298da:	ff 41 1c 	incl	28(%rcx)
  4298dd:	8b 05 19 e1 07 00 	movl	516377(%rip), %eax
  4298e3:	8d 48 ff 	leal	-1(%rax), %ecx
  4298e6:	89 0d 10 e1 07 00 	movl	%ecx, 516368(%rip)
  4298ec:	83 f8 01 	cmpl	$1, %eax
  4298ef:	74 1a 	je	26 <runtime.entersyscall_gcwait+0xab>
  4298f1:	48 8d 05 38 e0 07 00 	leaq	516152(%rip), %rax
  4298f8:	48 89 04 24 	movq	%rax, (%rsp)
  4298fc:	e8 bf fd fd ff 	callq	-131649 <runtime.unlock>
  429901:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  429906:	48 83 c4 18 	addq	$24, %rsp
  42990a:	c3 	retq
  42990b:	48 8d 05 ee e0 07 00 	leaq	516334(%rip), %rax
  429912:	48 89 04 24 	movq	%rax, (%rsp)
  429916:	e8 75 fe fd ff 	callq	-131467 <runtime.notewakeup>
  42991b:	eb d4 	jmp	-44 <runtime.entersyscall_gcwait+0x91>
  42991d:	48 89 0c 24 	movq	%rcx, (%rsp)
  429921:	e8 da 15 01 00 	callq	71130 <runtime.traceGoSysBlock>
  429926:	48 8b 44 24 08 	movq	8(%rsp), %rax
  42992b:	48 89 04 24 	movq	%rax, (%rsp)
  42992f:	e8 bc 09 01 00 	callq	68028 <runtime.traceProcStop>
  429934:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  429939:	eb 9f 	jmp	-97 <runtime.entersyscall_gcwait+0x7a>
  42993b:	e8 30 ac 01 00 	callq	109616 <runtime.morestack_noctxt>
  429940:	e9 1b ff ff ff 	jmp	-229 <runtime.entersyscall_gcwait>
  429945:	cc 	int3
  429946:	cc 	int3
  429947:	cc 	int3
  429948:	cc 	int3
  429949:	cc 	int3
  42994a:	cc 	int3
  42994b:	cc 	int3
  42994c:	cc 	int3
  42994d:	cc 	int3
  42994e:	cc 	int3
  42994f:	cc 	int3

runtime.entersyscallblock:
  429950:	48 83 ec 60 	subq	$96, %rsp
  429954:	48 89 6c 24 58 	movq	%rbp, 88(%rsp)
  429959:	48 8d 6c 24 58 	leaq	88(%rsp), %rbp
  42995e:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  429967:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  42996c:	48 8b 48 30 	movq	48(%rax), %rcx
  429970:	ff 81 00 01 00 00 	incl	256(%rcx)
  429976:	c6 80 c5 00 00 00 01 	movb	$1, 197(%rax)
  42997d:	48 c7 40 10 de fa ff ff 	movq	$-1314, 16(%rax)
  429985:	48 8b 48 30 	movq	48(%rax), %rcx
  429989:	48 8b 91 d0 00 00 00 	movq	208(%rcx), %rdx
  429990:	8b 52 1c 	movl	28(%rdx), %edx
  429993:	89 91 2c 03 00 00 	movl	%edx, 812(%rcx)
  429999:	c6 80 c7 00 00 00 01 	movb	$1, 199(%rax)
  4299a0:	48 8b 48 30 	movq	48(%rax), %rcx
  4299a4:	48 8b 89 d0 00 00 00 	movq	208(%rcx), %rcx
  4299ab:	ff 41 1c 	incl	28(%rcx)
  4299ae:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  4299b3:	48 89 0c 24 	movq	%rcx, (%rsp)
  4299b7:	48 8d 54 24 68 	leaq	104(%rsp), %rdx
  4299bc:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  4299c1:	e8 5a fb ff ff 	callq	-1190 <runtime.save>
  4299c6:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4299cb:	48 8b 48 38 	movq	56(%rax), %rcx
  4299cf:	48 89 48 70 	movq	%rcx, 112(%rax)
  4299d3:	48 8b 48 40 	movq	64(%rax), %rcx
  4299d7:	48 89 48 78 	movq	%rcx, 120(%rax)
  4299db:	48 8b 48 70 	movq	112(%rax), %rcx
  4299df:	48 8b 10 	movq	(%rax), %rdx
  4299e2:	48 39 d1 	cmpq	%rdx, %rcx
  4299e5:	0f 83 f1 00 00 00 	jae	241 <runtime.entersyscallblock+0x18c>
  4299eb:	48 8b 50 38 	movq	56(%rax), %rdx
  4299ef:	48 c7 44 24 30 00 00 00 00 	movq	$0, 48(%rsp)
  4299f8:	0f 57 c0 	xorps	%xmm0, %xmm0
  4299fb:	0f 11 44 24 38 	movups	%xmm0, 56(%rsp)
  429a00:	0f 11 44 24 48 	movups	%xmm0, 72(%rsp)
  429a05:	48 8d 1d 24 9c 01 00 	leaq	105508(%rip), %rbx
  429a0c:	48 89 5c 24 30 	movq	%rbx, 48(%rsp)
  429a11:	48 8d 5c 24 68 	leaq	104(%rsp), %rbx
  429a16:	48 89 5c 24 38 	movq	%rbx, 56(%rsp)
  429a1b:	48 89 54 24 40 	movq	%rdx, 64(%rsp)
  429a20:	48 89 4c 24 48 	movq	%rcx, 72(%rsp)
  429a25:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  429a2a:	48 8d 4c 24 30 	leaq	48(%rsp), %rcx
  429a2f:	48 89 0c 24 	movq	%rcx, (%rsp)
  429a33:	e8 e8 a9 01 00 	callq	109032 <runtime.systemstack>
  429a38:	48 8b 44 24 10 	movq	16(%rsp), %rax
  429a3d:	48 89 04 24 	movq	%rax, (%rsp)
  429a41:	48 b9 02 00 00 00 03 00 00 00 	movabsq	$12884901890, %rcx
  429a4b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  429a50:	e8 2b b0 ff ff 	callq	-20437 <runtime.casgstatus>
  429a55:	48 8b 44 24 10 	movq	16(%rsp), %rax
  429a5a:	48 8b 48 70 	movq	112(%rax), %rcx
  429a5e:	48 8b 10 	movq	(%rax), %rdx
  429a61:	48 39 d1 	cmpq	%rdx, %rcx
  429a64:	73 6b 	jae	107 <runtime.entersyscallblock+0x181>
  429a66:	48 8d 0d 03 9d 01 00 	leaq	105731(%rip), %rcx
  429a6d:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  429a72:	48 8d 4c 24 68 	leaq	104(%rsp), %rcx
  429a77:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  429a7c:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  429a81:	48 8d 54 24 18 	leaq	24(%rsp), %rdx
  429a86:	48 89 14 24 	movq	%rdx, (%rsp)
  429a8a:	e8 91 a9 01 00 	callq	108945 <runtime.systemstack>
  429a8f:	48 8d 05 8a 45 04 00 	leaq	279946(%rip), %rax
  429a96:	48 89 04 24 	movq	%rax, (%rsp)
  429a9a:	e8 81 a9 01 00 	callq	108929 <runtime.systemstack>
  429a9f:	48 8b 44 24 60 	movq	96(%rsp), %rax
  429aa4:	48 89 04 24 	movq	%rax, (%rsp)
  429aa8:	48 8d 44 24 68 	leaq	104(%rsp), %rax
  429aad:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  429ab2:	e8 69 fa ff ff 	callq	-1431 <runtime.save>
  429ab7:	48 8b 44 24 10 	movq	16(%rsp), %rax
  429abc:	48 8b 40 30 	movq	48(%rax), %rax
  429ac0:	83 80 00 01 00 00 ff 	addl	$-1, 256(%rax)
  429ac7:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  429acc:	48 83 c4 60 	addq	$96, %rsp
  429ad0:	c3 	retq
  429ad1:	48 8b 50 08 	movq	8(%rax), %rdx
  429ad5:	48 39 ca 	cmpq	%rcx, %rdx
  429ad8:	72 8c 	jb	-116 <runtime.entersyscallblock+0x116>
  429ada:	eb b3 	jmp	-77 <runtime.entersyscallblock+0x13f>
  429adc:	48 8b 50 08 	movq	8(%rax), %rdx
  429ae0:	48 39 ca 	cmpq	%rcx, %rdx
  429ae3:	0f 82 02 ff ff ff 	jb	-254 <runtime.entersyscallblock+0x9b>
  429ae9:	e9 4a ff ff ff 	jmp	-182 <runtime.entersyscallblock+0xe8>
  429aee:	cc 	int3
  429aef:	cc 	int3

runtime.entersyscallblock_handoff:
  429af0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  429af9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  429afd:	76 51 	jbe	81 <runtime.entersyscallblock_handoff+0x60>
  429aff:	48 83 ec 10 	subq	$16, %rsp
  429b03:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  429b08:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  429b0d:	0f b6 05 bc 9c 08 00 	movzbl	564412(%rip), %eax
  429b14:	84 c0 	testb	%al, %al
  429b16:	75 14 	jne	20 <runtime.entersyscallblock_handoff+0x3c>
  429b18:	e8 b3 26 00 00 	callq	9907 <runtime.releasep>
  429b1d:	e8 4e d5 ff ff 	callq	-10930 <runtime.handoffp>
  429b22:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  429b27:	48 83 c4 10 	addq	$16, %rsp
  429b2b:	c3 	retq
  429b2c:	e8 8f 12 01 00 	callq	70287 <runtime.traceGoSysCall>
  429b31:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  429b3a:	48 8b 40 30 	movq	48(%rax), %rax
  429b3e:	48 8b 80 d0 00 00 00 	movq	208(%rax), %rax
  429b45:	48 89 04 24 	movq	%rax, (%rsp)
  429b49:	e8 b2 13 01 00 	callq	70578 <runtime.traceGoSysBlock>
  429b4e:	eb c8 	jmp	-56 <runtime.entersyscallblock_handoff+0x28>
  429b50:	e8 1b aa 01 00 	callq	109083 <runtime.morestack_noctxt>
  429b55:	eb 99 	jmp	-103 <runtime.entersyscallblock_handoff>
  429b57:	cc 	int3
  429b58:	cc 	int3
  429b59:	cc 	int3
  429b5a:	cc 	int3
  429b5b:	cc 	int3
  429b5c:	cc 	int3
  429b5d:	cc 	int3
  429b5e:	cc 	int3
  429b5f:	cc 	int3

runtime.exitsyscall:
  429b60:	48 83 ec 28 	subq	$40, %rsp
  429b64:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  429b69:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  429b6e:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  429b77:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  429b7c:	48 8b 48 30 	movq	48(%rax), %rcx
  429b80:	ff 81 00 01 00 00 	incl	256(%rcx)
  429b86:	48 8b 48 70 	movq	112(%rax), %rcx
  429b8a:	48 8d 54 24 30 	leaq	48(%rsp), %rdx
  429b8f:	48 39 ca 	cmpq	%rcx, %rdx
  429b92:	0f 87 ed 01 00 00 	ja	493 <runtime.exitsyscall+0x225>
  429b98:	48 c7 80 a0 00 00 00 00 00 00 00 	movq	$0, 160(%rax)
  429ba3:	48 8b 48 30 	movq	48(%rax), %rcx
  429ba7:	48 8b 89 d0 00 00 00 	movq	208(%rcx), %rcx
  429bae:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  429bb3:	e8 e8 01 00 00 	callq	488 <runtime.exitsyscallfast>
  429bb8:	0f b6 04 24 	movzbl	(%rsp), %eax
  429bbc:	84 c0 	testb	%al, %al
  429bbe:	0f 85 cd 00 00 00 	jne	205 <runtime.exitsyscall+0x131>
  429bc4:	48 8b 44 24 10 	movq	16(%rsp), %rax
  429bc9:	48 c7 80 c8 00 00 00 00 00 00 00 	movq	$0, 200(%rax)
  429bd4:	0f b6 0d f5 9b 08 00 	movzbl	564213(%rip), %ecx
  429bdb:	84 c9 	testb	%cl, %cl
  429bdd:	75 0f 	jne	15 <runtime.exitsyscall+0x8e>
  429bdf:	e9 a8 00 00 00 	jmp	168 <runtime.exitsyscall+0x12c>
  429be4:	e8 67 e3 01 00 	callq	123751 <runtime.osyield>
  429be9:	48 8b 44 24 10 	movq	16(%rsp), %rax
  429bee:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  429bf3:	48 85 c9 	testq	%rcx, %rcx
  429bf6:	74 11 	je	17 <runtime.exitsyscall+0xa9>
  429bf8:	48 8b 50 30 	movq	48(%rax), %rdx
  429bfc:	8b 59 1c 	movl	28(%rcx), %ebx
  429bff:	8b 92 2c 03 00 00 	movl	812(%rdx), %edx
  429c05:	39 d3 	cmpl	%edx, %ebx
  429c07:	74 db 	je	-37 <runtime.exitsyscall+0x84>
  429c09:	e8 e2 c0 01 00 	callq	114914 <runtime.cputicks>
  429c0e:	48 8b 04 24 	movq	(%rsp), %rax
  429c12:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  429c17:	48 89 81 c8 00 00 00 	movq	%rax, 200(%rcx)
  429c1e:	48 8b 41 30 	movq	48(%rcx), %rax
  429c22:	83 80 00 01 00 00 ff 	addl	$-1, 256(%rax)
  429c29:	48 8d 05 10 44 04 00 	leaq	279568(%rip), %rax
  429c30:	48 89 04 24 	movq	%rax, (%rsp)
  429c34:	e8 67 a7 01 00 	callq	108391 <runtime.mcall>
  429c39:	48 8b 44 24 10 	movq	16(%rsp), %rax
  429c3e:	48 8b 48 30 	movq	48(%rax), %rcx
  429c42:	48 8b 89 60 01 00 00 	movq	352(%rcx), %rcx
  429c49:	48 85 c9 	testq	%rcx, %rcx
  429c4c:	74 27 	je	39 <runtime.exitsyscall+0x115>
  429c4e:	48 c7 40 70 00 00 00 00 	movq	$0, 112(%rax)
  429c56:	48 8b 48 30 	movq	48(%rax), %rcx
  429c5a:	48 8b 89 d0 00 00 00 	movq	208(%rcx), %rcx
  429c61:	ff 41 1c 	incl	28(%rcx)
  429c64:	c6 80 c5 00 00 00 00 	movb	$0, 197(%rax)
  429c6b:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  429c70:	48 83 c4 28 	addq	$40, %rsp
  429c74:	c3 	retq
  429c75:	48 8d 05 bc 43 04 00 	leaq	279484(%rip), %rax
  429c7c:	48 89 04 24 	movq	%rax, (%rsp)
  429c80:	e8 9b a7 01 00 	callq	108443 <runtime.systemstack>
  429c85:	48 8b 44 24 10 	movq	16(%rsp), %rax
  429c8a:	eb c2 	jmp	-62 <runtime.exitsyscall+0xee>
  429c8c:	48 89 c1 	movq	%rax, %rcx
  429c8f:	eb 8d 	jmp	-115 <runtime.exitsyscall+0xbe>
  429c91:	48 8b 44 24 10 	movq	16(%rsp), %rax
  429c96:	48 8b 48 30 	movq	48(%rax), %rcx
  429c9a:	48 8b 89 60 01 00 00 	movq	352(%rcx), %rcx
  429ca1:	48 85 c9 	testq	%rcx, %rcx
  429ca4:	0f 84 c1 00 00 00 	je	193 <runtime.exitsyscall+0x20b>
  429caa:	0f b6 0d 1f 9b 08 00 	movzbl	563999(%rip), %ecx
  429cb1:	84 c9 	testb	%cl, %cl
  429cb3:	74 29 	je	41 <runtime.exitsyscall+0x17e>
  429cb5:	48 8b 48 30 	movq	48(%rax), %rcx
  429cb9:	48 8b 91 d0 00 00 00 	movq	208(%rcx), %rdx
  429cc0:	48 8b 5c 24 18 	movq	24(%rsp), %rbx
  429cc5:	48 39 d3 	cmpq	%rdx, %rbx
  429cc8:	0f 84 87 00 00 00 	je	135 <runtime.exitsyscall+0x1f5>
  429cce:	48 8d 05 5b 45 04 00 	leaq	279899(%rip), %rax
  429cd5:	48 89 04 24 	movq	%rax, (%rsp)
  429cd9:	e8 42 a7 01 00 	callq	108354 <runtime.systemstack>
  429cde:	48 8b 44 24 10 	movq	16(%rsp), %rax
  429ce3:	48 8b 48 30 	movq	48(%rax), %rcx
  429ce7:	48 8b 89 d0 00 00 00 	movq	208(%rcx), %rcx
  429cee:	ff 41 1c 	incl	28(%rcx)
  429cf1:	48 89 04 24 	movq	%rax, (%rsp)
  429cf5:	48 b9 03 00 00 00 02 00 00 00 	movabsq	$8589934595, %rcx
  429cff:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  429d04:	e8 77 ad ff ff 	callq	-21129 <runtime.casgstatus>
  429d09:	48 8b 44 24 10 	movq	16(%rsp), %rax
  429d0e:	48 c7 40 70 00 00 00 00 	movq	$0, 112(%rax)
  429d16:	48 8b 48 30 	movq	48(%rax), %rcx
  429d1a:	83 81 00 01 00 00 ff 	addl	$-1, 256(%rcx)
  429d21:	0f b6 88 c0 00 00 00 	movzbl	192(%rax), %ecx
  429d28:	84 c9 	testb	%cl, %cl
  429d2a:	74 19 	je	25 <runtime.exitsyscall+0x1e5>
  429d2c:	48 c7 40 10 de fa ff ff 	movq	$-1314, 16(%rax)
  429d34:	c6 80 c5 00 00 00 00 	movb	$0, 197(%rax)
  429d3b:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  429d40:	48 83 c4 28 	addq	$40, %rsp
  429d44:	c3 	retq
  429d45:	48 8b 08 	movq	(%rax), %rcx
  429d48:	48 81 c1 70 03 00 00 	addq	$880, %rcx
  429d4f:	48 89 48 10 	movq	%rcx, 16(%rax)
  429d53:	eb df 	jmp	-33 <runtime.exitsyscall+0x1d4>
  429d55:	8b 89 2c 03 00 00 	movl	812(%rcx), %ecx
  429d5b:	8b 52 1c 	movl	28(%rdx), %edx
  429d5e:	39 d1 	cmpl	%edx, %ecx
  429d60:	0f 85 68 ff ff ff 	jne	-152 <runtime.exitsyscall+0x16e>
  429d66:	e9 73 ff ff ff 	jmp	-141 <runtime.exitsyscall+0x17e>
  429d6b:	48 8d 05 be 42 04 00 	leaq	279230(%rip), %rax
  429d72:	48 89 04 24 	movq	%rax, (%rsp)
  429d76:	e8 a5 a6 01 00 	callq	108197 <runtime.systemstack>
  429d7b:	48 8b 44 24 10 	movq	16(%rsp), %rax
  429d80:	e9 25 ff ff ff 	jmp	-219 <runtime.exitsyscall+0x14a>
  429d85:	48 8d 05 9c 42 04 00 	leaq	279196(%rip), %rax
  429d8c:	48 89 04 24 	movq	%rax, (%rsp)
  429d90:	e8 8b a6 01 00 	callq	108171 <runtime.systemstack>
  429d95:	48 8b 44 24 10 	movq	16(%rsp), %rax
  429d9a:	e9 f9 fd ff ff 	jmp	-519 <runtime.exitsyscall+0x38>
  429d9f:	cc 	int3

runtime.exitsyscallfast:
  429da0:	48 83 ec 38 	subq	$56, %rsp
  429da4:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  429da9:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  429dae:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  429db7:	8b 15 3f dc 07 00 	movl	515135(%rip), %edx
  429dbd:	81 fa ff ff ff 7f 	cmpl	$2147483647, %edx
  429dc3:	0f 84 d1 00 00 00 	je	209 <runtime.exitsyscallfast+0xfa>
  429dc9:	48 8b 51 30 	movq	48(%rcx), %rdx
  429dcd:	48 8b 92 d0 00 00 00 	movq	208(%rdx), %rdx
  429dd4:	48 85 d2 	testq	%rdx, %rdx
  429dd7:	74 22 	je	34 <runtime.exitsyscallfast+0x5b>
  429dd9:	8b 5a 0c 	movl	12(%rdx), %ebx
  429ddc:	83 fb 02 	cmpl	$2, %ebx
  429ddf:	75 1a 	jne	26 <runtime.exitsyscallfast+0x5b>
  429de1:	b8 02 00 00 00 	movl	$2, %eax
  429de6:	bb 01 00 00 00 	movl	$1, %ebx
  429deb:	f0 	lock
  429dec:	0f b1 5a 0c 	cmpxchgl	%ebx, 12(%rdx)
  429df0:	0f 94 c2 	sete	%dl
  429df3:	84 d2 	testb	%dl, %dl
  429df5:	0f 85 8b 00 00 00 	jne	139 <runtime.exitsyscallfast+0xe6>
  429dfb:	48 8b 41 30 	movq	48(%rcx), %rax
  429dff:	48 8b 90 d0 00 00 00 	movq	208(%rax), %rdx
  429e06:	48 c7 80 60 01 00 00 00 00 00 00 	movq	$0, 352(%rax)
  429e11:	48 8b 41 30 	movq	48(%rcx), %rax
  429e15:	48 c7 80 d0 00 00 00 00 00 00 00 	movq	$0, 208(%rax)
  429e20:	48 8b 05 41 db 07 00 	movq	514881(%rip), %rax
  429e27:	48 85 c0 	testq	%rax, %rax
  429e2a:	75 0f 	jne	15 <runtime.exitsyscallfast+0x9b>
  429e2c:	c6 44 24 40 00 	movb	$0, 64(%rsp)
  429e31:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  429e36:	48 83 c4 38 	addq	$56, %rsp
  429e3a:	c3 	retq
  429e3b:	c6 44 24 0f 00 	movb	$0, 15(%rsp)
  429e40:	48 8d 05 29 9b 01 00 	leaq	105257(%rip), %rax
  429e47:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  429e4c:	48 8d 44 24 0f 	leaq	15(%rsp), %rax
  429e51:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  429e56:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  429e5b:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  429e60:	48 8d 44 24 10 	leaq	16(%rsp), %rax
  429e65:	48 89 04 24 	movq	%rax, (%rsp)
  429e69:	e8 b2 a5 01 00 	callq	107954 <runtime.systemstack>
  429e6e:	0f b6 44 24 0f 	movzbl	15(%rsp), %eax
  429e73:	84 c0 	testb	%al, %al
  429e75:	74 b5 	je	-75 <runtime.exitsyscallfast+0x8c>
  429e77:	c6 44 24 40 01 	movb	$1, 64(%rsp)
  429e7c:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  429e81:	48 83 c4 38 	addq	$56, %rsp
  429e85:	c3 	retq
  429e86:	e8 45 00 00 00 	callq	69 <runtime.exitsyscallfast_reacquired>
  429e8b:	c6 44 24 40 01 	movb	$1, 64(%rsp)
  429e90:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  429e95:	48 83 c4 38 	addq	$56, %rsp
  429e99:	c3 	retq
  429e9a:	48 8b 41 30 	movq	48(%rcx), %rax
  429e9e:	48 c7 80 60 01 00 00 00 00 00 00 	movq	$0, 352(%rax)
  429ea9:	48 8b 41 30 	movq	48(%rcx), %rax
  429ead:	48 c7 80 d0 00 00 00 00 00 00 00 	movq	$0, 208(%rax)
  429eb8:	c6 44 24 40 00 	movb	$0, 64(%rsp)
  429ebd:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  429ec2:	48 83 c4 38 	addq	$56, %rsp
  429ec6:	c3 	retq
  429ec7:	cc 	int3
  429ec8:	cc 	int3
  429ec9:	cc 	int3
  429eca:	cc 	int3
  429ecb:	cc 	int3
  429ecc:	cc 	int3
  429ecd:	cc 	int3
  429ece:	cc 	int3
  429ecf:	cc 	int3

runtime.exitsyscallfast_reacquired:
  429ed0:	48 83 ec 28 	subq	$40, %rsp
  429ed4:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  429ed9:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  429ede:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  429ee7:	48 8b 48 30 	movq	48(%rax), %rcx
  429eeb:	48 8b 91 d0 00 00 00 	movq	208(%rcx), %rdx
  429ef2:	48 8b 52 48 	movq	72(%rdx), %rdx
  429ef6:	48 89 91 60 01 00 00 	movq	%rdx, 352(%rcx)
  429efd:	48 8b 48 30 	movq	48(%rax), %rcx
  429f01:	48 8b 91 d0 00 00 00 	movq	208(%rcx), %rdx
  429f08:	48 8d 5a 40 	leaq	64(%rdx), %rbx
  429f0c:	84 03 	testb	%al, (%rbx)
  429f0e:	48 89 4a 40 	movq	%rcx, 64(%rdx)
  429f12:	48 8b 48 30 	movq	48(%rax), %rcx
  429f16:	48 8b 91 d0 00 00 00 	movq	208(%rcx), %rdx
  429f1d:	8b 89 2c 03 00 00 	movl	812(%rcx), %ecx
  429f23:	8b 52 1c 	movl	28(%rdx), %edx
  429f26:	39 d1 	cmpl	%edx, %ecx
  429f28:	74 19 	je	25 <runtime.exitsyscallfast_reacquired+0x73>
  429f2a:	0f b6 0d 9f 98 08 00 	movzbl	563359(%rip), %ecx
  429f31:	84 c9 	testb	%cl, %cl
  429f33:	75 18 	jne	24 <runtime.exitsyscallfast_reacquired+0x7d>
  429f35:	48 8b 40 30 	movq	48(%rax), %rax
  429f39:	48 8b 80 d0 00 00 00 	movq	208(%rax), %rax
  429f40:	ff 40 1c 	incl	28(%rax)
  429f43:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  429f48:	48 83 c4 28 	addq	$40, %rsp
  429f4c:	c3 	retq
  429f4d:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  429f52:	48 8d 0d c7 9a 01 00 	leaq	105159(%rip), %rcx
  429f59:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  429f5e:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  429f63:	48 8d 4c 24 10 	leaq	16(%rsp), %rcx
  429f68:	48 89 0c 24 	movq	%rcx, (%rsp)
  429f6c:	e8 af a4 01 00 	callq	107695 <runtime.systemstack>
  429f71:	48 8b 44 24 08 	movq	8(%rsp), %rax
  429f76:	eb bd 	jmp	-67 <runtime.exitsyscallfast_reacquired+0x65>
  429f78:	cc 	int3
  429f79:	cc 	int3
  429f7a:	cc 	int3
  429f7b:	cc 	int3
  429f7c:	cc 	int3
  429f7d:	cc 	int3
  429f7e:	cc 	int3
  429f7f:	cc 	int3

runtime.exitsyscallfast_pidle:
  429f80:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  429f89:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  429f8d:	0f 86 bb 00 00 00 	jbe	187 <runtime.exitsyscallfast_pidle+0xce>
  429f93:	48 83 ec 18 	subq	$24, %rsp
  429f97:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  429f9c:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  429fa1:	48 8d 05 88 d9 07 00 	leaq	514440(%rip), %rax
  429fa8:	48 89 04 24 	movq	%rax, (%rsp)
  429fac:	e8 6f f5 fd ff 	callq	-133777 <runtime.lock>
  429fb1:	48 8b 05 b0 d9 07 00 	movq	514480(%rip), %rax
  429fb8:	48 85 c0 	testq	%rax, %rax
  429fbb:	74 1e 	je	30 <runtime.exitsyscallfast_pidle+0x5b>
  429fbd:	48 8b 48 10 	movq	16(%rax), %rcx
  429fc1:	48 89 0d a0 d9 07 00 	movq	%rcx, 514464(%rip)
  429fc8:	b9 ff ff ff ff 	movl	$4294967295, %ecx
  429fcd:	48 8d 15 9c d9 07 00 	leaq	514460(%rip), %rdx
  429fd4:	f0 	lock
  429fd5:	0f c1 0a 	xaddl	%ecx, (%rdx)
  429fd8:	48 85 c0 	testq	%rax, %rax
  429fdb:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  429fe0:	74 0a 	je	10 <runtime.exitsyscallfast_pidle+0x6c>
  429fe2:	8b 0d 20 da 07 00 	movl	514592(%rip), %ecx
  429fe8:	85 c9 	testl	%ecx, %ecx
  429fea:	75 41 	jne	65 <runtime.exitsyscallfast_pidle+0xad>
  429fec:	48 8d 05 3d d9 07 00 	leaq	514365(%rip), %rax
  429ff3:	48 89 04 24 	movq	%rax, (%rsp)
  429ff7:	e8 c4 f6 fd ff 	callq	-133436 <runtime.unlock>
  429ffc:	48 8b 44 24 08 	movq	8(%rsp), %rax
  42a001:	48 85 c0 	testq	%rax, %rax
  42a004:	74 18 	je	24 <runtime.exitsyscallfast_pidle+0x9e>
  42a006:	48 89 04 24 	movq	%rax, (%rsp)
  42a00a:	e8 d1 1f 00 00 	callq	8145 <runtime.acquirep>
  42a00f:	c6 44 24 20 01 	movb	$1, 32(%rsp)
  42a014:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  42a019:	48 83 c4 18 	addq	$24, %rsp
  42a01d:	c3 	retq
  42a01e:	c6 44 24 20 00 	movb	$0, 32(%rsp)
  42a023:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  42a028:	48 83 c4 18 	addq	$24, %rsp
  42a02c:	c3 	retq
  42a02d:	31 c0 	xorl	%eax, %eax
  42a02f:	48 8d 0d ea d8 07 00 	leaq	514282(%rip), %rcx
  42a036:	87 81 e8 00 00 00 	xchgl	%eax, 232(%rcx)
  42a03c:	48 8d 05 cd d9 07 00 	leaq	514509(%rip), %rax
  42a043:	48 89 04 24 	movq	%rax, (%rsp)
  42a047:	e8 44 f7 fd ff 	callq	-133308 <runtime.notewakeup>
  42a04c:	eb 9e 	jmp	-98 <runtime.exitsyscallfast_pidle+0x6c>
  42a04e:	e8 1d a5 01 00 	callq	107805 <runtime.morestack_noctxt>
  42a053:	e9 28 ff ff ff 	jmp	-216 <runtime.exitsyscallfast_pidle>
  42a058:	cc 	int3
  42a059:	cc 	int3
  42a05a:	cc 	int3
  42a05b:	cc 	int3
  42a05c:	cc 	int3
  42a05d:	cc 	int3
  42a05e:	cc 	int3
  42a05f:	cc 	int3

runtime.exitsyscall0:
  42a060:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42a069:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42a06d:	0f 86 c1 01 00 00 	jbe	449 <runtime.exitsyscall0+0x1d4>
  42a073:	48 83 ec 28 	subq	$40, %rsp
  42a077:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  42a07c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  42a081:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  42a08a:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  42a08f:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  42a094:	48 89 0c 24 	movq	%rcx, (%rsp)
  42a098:	48 ba 03 00 00 00 01 00 00 00 	movabsq	$4294967299, %rdx
  42a0a2:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  42a0a7:	e8 d4 a9 ff ff 	callq	-22060 <runtime.casgstatus>
  42a0ac:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  42a0b5:	48 8b 48 30 	movq	48(%rax), %rcx
  42a0b9:	48 8b 91 c0 00 00 00 	movq	192(%rcx), %rdx
  42a0c0:	84 01 	testb	%al, (%rcx)
  42a0c2:	48 8d 4a 30 	leaq	48(%rdx), %rcx
  42a0c6:	84 01 	testb	%al, (%rcx)
  42a0c8:	31 c9 	xorl	%ecx, %ecx
  42a0ca:	48 89 4a 30 	movq	%rcx, 48(%rdx)
  42a0ce:	48 8b 48 30 	movq	48(%rax), %rcx
  42a0d2:	84 00 	testb	%al, (%rax)
  42a0d4:	48 8d 81 c0 00 00 00 	leaq	192(%rcx), %rax
  42a0db:	84 00 	testb	%al, (%rax)
  42a0dd:	31 c0 	xorl	%eax, %eax
  42a0df:	48 89 81 c0 00 00 00 	movq	%rax, 192(%rcx)
  42a0e6:	48 8d 05 43 d8 07 00 	leaq	514115(%rip), %rax
  42a0ed:	48 89 04 24 	movq	%rax, (%rsp)
  42a0f1:	e8 2a f4 fd ff 	callq	-134102 <runtime.lock>
  42a0f6:	48 8b 05 6b d8 07 00 	movq	514155(%rip), %rax
  42a0fd:	48 85 c0 	testq	%rax, %rax
  42a100:	74 1e 	je	30 <runtime.exitsyscall0+0xc0>
  42a102:	48 8b 48 10 	movq	16(%rax), %rcx
  42a106:	48 89 0d 5b d8 07 00 	movq	%rcx, 514139(%rip)
  42a10d:	b9 ff ff ff ff 	movl	$4294967295, %ecx
  42a112:	48 8d 15 57 d8 07 00 	leaq	514135(%rip), %rdx
  42a119:	f0 	lock
  42a11a:	0f c1 0a 	xaddl	%ecx, (%rdx)
  42a11d:	48 85 c0 	testq	%rax, %rax
  42a120:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  42a125:	0f 84 aa 00 00 00 	je	170 <runtime.exitsyscall0+0x175>
  42a12b:	8b 0d d7 d8 07 00 	movl	514263(%rip), %ecx
  42a131:	85 c9 	testl	%ecx, %ecx
  42a133:	75 7b 	jne	123 <runtime.exitsyscall0+0x150>
  42a135:	48 8d 05 f4 d7 07 00 	leaq	514036(%rip), %rax
  42a13c:	48 89 04 24 	movq	%rax, (%rsp)
  42a140:	e8 7b f5 fd ff 	callq	-133765 <runtime.unlock>
  42a145:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42a14a:	48 85 c0 	testq	%rax, %rax
  42a14d:	75 43 	jne	67 <runtime.exitsyscall0+0x132>
  42a14f:	48 8b 44 24 10 	movq	16(%rsp), %rax
  42a154:	48 8b 40 30 	movq	48(%rax), %rax
  42a158:	48 8b 80 68 01 00 00 	movq	360(%rax), %rax
  42a15f:	48 85 c0 	testq	%rax, %rax
  42a162:	75 14 	jne	20 <runtime.exitsyscall0+0x118>
  42a164:	e8 17 cb ff ff 	callq	-13545 <runtime.stopm>
  42a169:	e8 92 e7 ff ff 	callq	-6254 <runtime.schedule>
  42a16e:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  42a173:	48 83 c4 28 	addq	$40, %rsp
  42a177:	c3 	retq
  42a178:	e8 63 d2 ff ff 	callq	-11677 <runtime.stoplockedm>
  42a17d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  42a182:	48 89 04 24 	movq	%rax, (%rsp)
  42a186:	c6 44 24 08 00 	movb	$0, 8(%rsp)
  42a18b:	e8 20 d7 ff ff 	callq	-10464 <runtime.execute>
  42a190:	eb d2 	jmp	-46 <runtime.exitsyscall0+0x104>
  42a192:	48 89 04 24 	movq	%rax, (%rsp)
  42a196:	e8 45 1e 00 00 	callq	7749 <runtime.acquirep>
  42a19b:	48 8b 44 24 30 	movq	48(%rsp), %rax
  42a1a0:	48 89 04 24 	movq	%rax, (%rsp)
  42a1a4:	c6 44 24 08 00 	movb	$0, 8(%rsp)
  42a1a9:	e8 02 d7 ff ff 	callq	-10494 <runtime.execute>
  42a1ae:	eb 9f 	jmp	-97 <runtime.exitsyscall0+0xef>
  42a1b0:	31 c0 	xorl	%eax, %eax
  42a1b2:	48 8d 0d 4f d8 07 00 	leaq	514127(%rip), %rcx
  42a1b9:	87 01 	xchgl	%eax, (%rcx)
  42a1bb:	48 8d 05 4e d8 07 00 	leaq	514126(%rip), %rax
  42a1c2:	48 89 04 24 	movq	%rax, (%rsp)
  42a1c6:	e8 c5 f5 fd ff 	callq	-133691 <runtime.notewakeup>
  42a1cb:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42a1d0:	e9 60 ff ff ff 	jmp	-160 <runtime.exitsyscall0+0xd5>
  42a1d5:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  42a1da:	48 c7 81 b8 00 00 00 00 00 00 00 	movq	$0, 184(%rcx)
  42a1e5:	48 8b 15 94 d7 07 00 	movq	513940(%rip), %rdx
  42a1ec:	48 85 d2 	testq	%rdx, %rdx
  42a1ef:	74 2e 	je	46 <runtime.exitsyscall0+0x1bf>
  42a1f1:	48 8d 9a b8 00 00 00 	leaq	184(%rdx), %rbx
  42a1f8:	84 03 	testb	%al, (%rbx)
  42a1fa:	48 89 cb 	movq	%rcx, %rbx
  42a1fd:	48 89 8a b8 00 00 00 	movq	%rcx, 184(%rdx)
  42a204:	48 8d 0d 75 d7 07 00 	leaq	513909(%rip), %rcx
  42a20b:	84 01 	testb	%al, (%rcx)
  42a20d:	48 89 1d 6c d7 07 00 	movq	%rbx, 513900(%rip)
  42a214:	ff 05 6e d7 07 00 	incl	513902(%rip)
  42a21a:	e9 16 ff ff ff 	jmp	-234 <runtime.exitsyscall0+0xd5>
  42a21f:	48 8d 15 52 d7 07 00 	leaq	513874(%rip), %rdx
  42a226:	84 02 	testb	%al, (%rdx)
  42a228:	48 89 cb 	movq	%rcx, %rbx
  42a22b:	48 89 0d 46 d7 07 00 	movq	%rcx, 513862(%rip)
  42a232:	eb d0 	jmp	-48 <runtime.exitsyscall0+0x1a4>
  42a234:	e8 37 a3 01 00 	callq	107319 <runtime.morestack_noctxt>
  42a239:	e9 22 fe ff ff 	jmp	-478 <runtime.exitsyscall0>
  42a23e:	cc 	int3
  42a23f:	cc 	int3

runtime.malg:
  42a240:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42a249:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42a24d:	0f 86 90 00 00 00 	jbe	144 <runtime.malg+0xa3>
  42a253:	48 83 ec 38 	subq	$56, %rsp
  42a257:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  42a25c:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  42a261:	48 8d 05 38 ef 03 00 	leaq	257848(%rip), %rax
  42a268:	48 89 04 24 	movq	%rax, (%rsp)
  42a26c:	e8 af 0e fe ff 	callq	-127313 <runtime.newobject>
  42a271:	48 8b 44 24 08 	movq	8(%rsp), %rax
  42a276:	8b 4c 24 40 	movl	64(%rsp), %ecx
  42a27a:	85 c9 	testl	%ecx, %ecx
  42a27c:	7d 0f 	jge	15 <runtime.malg+0x4d>
  42a27e:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  42a283:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  42a288:	48 83 c4 38 	addq	$56, %rsp
  42a28c:	c3 	retq
  42a28d:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  42a292:	89 0c 24 	movl	%ecx, (%rsp)
  42a295:	e8 e6 b9 00 00 	callq	47590 <runtime.round2>
  42a29a:	8b 44 24 08 	movl	8(%rsp), %eax
  42a29e:	48 8d 0d db 97 01 00 	leaq	104411(%rip), %rcx
  42a2a5:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  42a2aa:	89 44 24 20 	movl	%eax, 32(%rsp)
  42a2ae:	48 8b 44 24 10 	movq	16(%rsp), %rax
  42a2b3:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  42a2b8:	48 8d 4c 24 18 	leaq	24(%rsp), %rcx
  42a2bd:	48 89 0c 24 	movq	%rcx, (%rsp)
  42a2c1:	e8 5a a1 01 00 	callq	106842 <runtime.systemstack>
  42a2c6:	48 8b 44 24 10 	movq	16(%rsp), %rax
  42a2cb:	48 8b 08 	movq	(%rax), %rcx
  42a2ce:	48 81 c1 70 03 00 00 	addq	$880, %rcx
  42a2d5:	48 89 48 10 	movq	%rcx, 16(%rax)
  42a2d9:	48 c7 40 18 ff ff ff ff 	movq	$-1, 24(%rax)
  42a2e1:	eb 9b 	jmp	-101 <runtime.malg+0x3e>
  42a2e3:	e8 88 a2 01 00 	callq	107144 <runtime.morestack_noctxt>
  42a2e8:	e9 53 ff ff ff 	jmp	-173 <runtime.malg>
  42a2ed:	cc 	int3
  42a2ee:	cc 	int3
  42a2ef:	cc 	int3

runtime.newproc:
  42a2f0:	48 83 ec 38 	subq	$56, %rsp
  42a2f4:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  42a2f9:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  42a2fe:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  42a307:	0f 57 c0 	xorps	%xmm0, %xmm0
  42a30a:	0f 11 44 24 10 	movups	%xmm0, 16(%rsp)
  42a30f:	0f 11 44 24 20 	movups	%xmm0, 32(%rsp)
  42a314:	48 8d 05 c5 97 01 00 	leaq	104389(%rip), %rax
  42a31b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  42a320:	48 8d 44 24 48 	leaq	72(%rsp), %rax
  42a325:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  42a32a:	48 8d 44 24 50 	leaq	80(%rsp), %rax
  42a32f:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  42a334:	8b 44 24 40 	movl	64(%rsp), %eax
  42a338:	89 44 24 20 	movl	%eax, 32(%rsp)
  42a33c:	48 8b 44 24 38 	movq	56(%rsp), %rax
  42a341:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  42a346:	48 8d 44 24 08 	leaq	8(%rsp), %rax
  42a34b:	48 89 04 24 	movq	%rax, (%rsp)
  42a34f:	e8 cc a0 01 00 	callq	106700 <runtime.systemstack>
  42a354:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  42a359:	48 83 c4 38 	addq	$56, %rsp
  42a35d:	c3 	retq
  42a35e:	cc 	int3
  42a35f:	cc 	int3

runtime.newproc1:
  42a360:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42a369:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42a36d:	0f 86 ce 04 00 00 	jbe	1230 <runtime.newproc1+0x4e1>
  42a373:	48 81 ec 80 00 00 00 	subq	$128, %rsp
  42a37a:	48 89 6c 24 78 	movq	%rbp, 120(%rsp)
  42a37f:	48 8d 6c 24 78 	leaq	120(%rsp), %rbp
  42a384:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  42a38d:	48 8b 8c 24 88 00 00 00 	movq	136(%rsp), %rcx
  42a395:	48 85 c9 	testq	%rcx, %rcx
  42a398:	0f 84 7a 04 00 00 	je	1146 <runtime.newproc1+0x4b8>
  42a39e:	48 8b 50 30 	movq	48(%rax), %rdx
  42a3a2:	ff 82 00 01 00 00 	incl	256(%rdx)
  42a3a8:	8b 94 24 98 00 00 00 	movl	152(%rsp), %edx
  42a3af:	8d 5a 07 	leal	7(%rdx), %ebx
  42a3b2:	83 e3 f8 	andl	$-8, %ebx
  42a3b5:	81 fb d8 07 00 00 	cmpl	$2008, %ebx
  42a3bb:	0f 8d 3c 04 00 00 	jge	1084 <runtime.newproc1+0x49d>
  42a3c1:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  42a3c6:	89 5c 24 2c 	movl	%ebx, 44(%rsp)
  42a3ca:	48 8b 48 30 	movq	48(%rax), %rcx
  42a3ce:	48 8b 89 d0 00 00 00 	movq	208(%rcx), %rcx
  42a3d5:	48 89 4c 24 60 	movq	%rcx, 96(%rsp)
  42a3da:	48 89 0c 24 	movq	%rcx, (%rsp)
  42a3de:	e8 7d 06 00 00 	callq	1661 <runtime.gfget>
  42a3e3:	48 8b 44 24 08 	movq	8(%rsp), %rax
  42a3e8:	48 85 c0 	testq	%rax, %rax
  42a3eb:	0f 84 90 03 00 00 	je	912 <runtime.newproc1+0x421>
  42a3f1:	48 8b 48 08 	movq	8(%rax), %rcx
  42a3f5:	48 85 c9 	testq	%rcx, %rcx
  42a3f8:	0f 84 e4 03 00 00 	je	996 <runtime.newproc1+0x482>
  42a3fe:	8b 88 90 00 00 00 	movl	144(%rax), %ecx
  42a404:	83 f9 06 	cmpl	$6, %ecx
  42a407:	0f 85 ba 03 00 00 	jne	954 <runtime.newproc1+0x467>
  42a40d:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  42a412:	8b 4c 24 2c 	movl	44(%rsp), %ecx
  42a416:	48 63 c9 	movslq	%ecx, %rcx
  42a419:	48 83 c1 20 	addq	$32, %rcx
  42a41d:	48 8b 50 08 	movq	8(%rax), %rdx
  42a421:	48 29 ca 	subq	%rcx, %rdx
  42a424:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  42a429:	8b 8c 24 98 00 00 00 	movl	152(%rsp), %ecx
  42a430:	85 c9 	testl	%ecx, %ecx
  42a432:	0f 8f 64 02 00 00 	jg	612 <runtime.newproc1+0x33c>
  42a438:	48 8d 48 38 	leaq	56(%rax), %rcx
  42a43c:	48 89 4c 24 58 	movq	%rcx, 88(%rsp)
  42a441:	48 89 0c 24 	movq	%rcx, (%rsp)
  42a445:	48 c7 44 24 08 38 00 00 00 	movq	$56, 8(%rsp)
  42a44e:	e8 1d ca 01 00 	callq	117277 <runtime.memclrNoHeapPointers>
  42a453:	48 8b 44 24 30 	movq	48(%rsp), %rax
  42a458:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  42a45d:	48 89 41 38 	movq	%rax, 56(%rcx)
  42a461:	48 89 81 80 00 00 00 	movq	%rax, 128(%rcx)
  42a468:	48 8d 05 71 c9 02 00 	leaq	182641(%rip), %rax
  42a46f:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  42a474:	48 8d 05 35 3c 04 00 	leaq	277557(%rip), %rax
  42a47b:	48 89 44 24 70 	movq	%rax, 112(%rsp)
  42a480:	84 00 	testb	%al, (%rax)
  42a482:	48 8d 44 24 70 	leaq	112(%rsp), %rax
  42a487:	84 00 	testb	%al, (%rax)
  42a489:	48 8b 05 20 3c 04 00 	movq	277536(%rip), %rax
  42a490:	48 ff c0 	incq	%rax
  42a493:	48 89 41 40 	movq	%rax, 64(%rcx)
  42a497:	48 89 c8 	movq	%rcx, %rax
  42a49a:	48 89 48 48 	movq	%rcx, 72(%rax)
  42a49e:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  42a4a3:	84 01 	testb	%al, (%rcx)
  42a4a5:	48 8b 48 38 	movq	56(%rax), %rcx
  42a4a9:	48 83 c1 f8 	addq	$-8, %rcx
  42a4ad:	48 89 ca 	movq	%rcx, %rdx
  42a4b0:	48 8b 9c 24 88 00 00 00 	movq	136(%rsp), %rbx
  42a4b8:	48 8b 33 	movq	(%rbx), %rsi
  42a4bb:	48 8b 78 40 	movq	64(%rax), %rdi
  42a4bf:	48 89 39 	movq	%rdi, (%rcx)
  42a4c2:	48 89 50 38 	movq	%rdx, 56(%rax)
  42a4c6:	48 89 70 40 	movq	%rsi, 64(%rax)
  42a4ca:	8b 0d 40 95 09 00 	movl	628032(%rip), %ecx
  42a4d0:	48 8d 78 50 	leaq	80(%rax), %rdi
  42a4d4:	85 c9 	testl	%ecx, %ecx
  42a4d6:	0f 85 ad 01 00 00 	jne	429 <runtime.newproc1+0x329>
  42a4dc:	48 89 58 50 	movq	%rbx, 80(%rax)
  42a4e0:	48 8b 8c 24 a0 00 00 00 	movq	160(%rsp), %rcx
  42a4e8:	48 89 88 20 01 00 00 	movq	%rcx, 288(%rax)
  42a4ef:	48 8b 0b 	movq	(%rbx), %rcx
  42a4f2:	48 89 88 28 01 00 00 	movq	%rcx, 296(%rax)
  42a4f9:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  42a4fe:	48 8b 51 30 	movq	48(%rcx), %rdx
  42a502:	48 8b 92 c0 00 00 00 	movq	192(%rdx), %rdx
  42a509:	48 85 d2 	testq	%rdx, %rdx
  42a50c:	74 23 	je	35 <runtime.newproc1+0x1d1>
  42a50e:	8b 1d fc 94 09 00 	movl	627964(%rip), %ebx
  42a514:	48 8d b8 58 01 00 00 	leaq	344(%rax), %rdi
  42a51b:	48 8b 92 58 01 00 00 	movq	344(%rdx), %rdx
  42a522:	85 db 	testl	%ebx, %ebx
  42a524:	0f 85 4c 01 00 00 	jne	332 <runtime.newproc1+0x316>
  42a52a:	48 89 90 58 01 00 00 	movq	%rdx, 344(%rax)
  42a531:	48 89 04 24 	movq	%rax, (%rsp)
  42a535:	e8 f6 3e 01 00 	callq	81654 <runtime.isSystemGoroutine>
  42a53a:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  42a53f:	84 c0 	testb	%al, %al
  42a541:	74 10 	je	16 <runtime.newproc1+0x1f3>
  42a543:	b8 01 00 00 00 	movl	$1, %eax
  42a548:	48 8d 0d 11 d4 07 00 	leaq	513041(%rip), %rcx
  42a54f:	f0 	lock
  42a550:	0f c1 01 	xaddl	%eax, (%rcx)
  42a553:	48 8b 44 24 48 	movq	72(%rsp), %rax
  42a558:	c6 80 c4 00 00 00 00 	movb	$0, 196(%rax)
  42a55f:	48 89 04 24 	movq	%rax, (%rsp)
  42a563:	48 b9 06 00 00 00 01 00 00 00 	movabsq	$4294967302, %rcx
  42a56d:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  42a572:	e8 09 a5 ff ff 	callq	-23287 <runtime.casgstatus>
  42a577:	48 8b 44 24 60 	movq	96(%rsp), %rax
  42a57c:	48 8b 88 d0 05 00 00 	movq	1488(%rax), %rcx
  42a583:	48 8b 90 d8 05 00 00 	movq	1496(%rax), %rdx
  42a58a:	48 39 d1 	cmpq	%rdx, %rcx
  42a58d:	75 27 	jne	39 <runtime.newproc1+0x256>
  42a58f:	b9 10 00 00 00 	movl	$16, %ecx
  42a594:	48 8d 15 85 d3 07 00 	leaq	512901(%rip), %rdx
  42a59b:	f0 	lock
  42a59c:	48 0f c1 0a 	xaddq	%rcx, (%rdx)
  42a5a0:	48 8d 51 01 	leaq	1(%rcx), %rdx
  42a5a4:	48 89 90 d0 05 00 00 	movq	%rdx, 1488(%rax)
  42a5ab:	48 83 c1 11 	addq	$17, %rcx
  42a5af:	48 89 88 d8 05 00 00 	movq	%rcx, 1496(%rax)
  42a5b6:	48 8b 88 d0 05 00 00 	movq	1488(%rax), %rcx
  42a5bd:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  42a5c2:	48 89 8a 98 00 00 00 	movq	%rcx, 152(%rdx)
  42a5c9:	48 ff 80 d0 05 00 00 	incq	1488(%rax)
  42a5d0:	0f b6 0d f9 91 08 00 	movzbl	561657(%rip), %ecx
  42a5d7:	84 c9 	testb	%cl, %cl
  42a5d9:	75 77 	jne	119 <runtime.newproc1+0x2f2>
  42a5db:	48 89 04 24 	movq	%rax, (%rsp)
  42a5df:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  42a5e4:	c6 44 24 10 01 	movb	$1, 16(%rsp)
  42a5e9:	e8 62 38 00 00 	callq	14434 <runtime.runqput>
  42a5ee:	8b 05 7c d3 07 00 	movl	512892(%rip), %eax
  42a5f4:	85 c0 	testl	%eax, %eax
  42a5f6:	74 15 	je	21 <runtime.newproc1+0x2ad>
  42a5f8:	8b 05 76 d3 07 00 	movl	512886(%rip), %eax
  42a5fe:	85 c0 	testl	%eax, %eax
  42a600:	75 0b 	jne	11 <runtime.newproc1+0x2ad>
  42a602:	0f b6 05 a6 92 09 00 	movzbl	627366(%rip), %eax
  42a609:	84 c0 	testb	%al, %al
  42a60b:	75 3e 	jne	62 <runtime.newproc1+0x2eb>
  42a60d:	48 8b 44 24 50 	movq	80(%rsp), %rax
  42a612:	48 8b 48 30 	movq	48(%rax), %rcx
  42a616:	83 81 00 01 00 00 ff 	addl	$-1, 256(%rcx)
  42a61d:	48 8b 48 30 	movq	48(%rax), %rcx
  42a621:	8b 89 00 01 00 00 	movl	256(%rcx), %ecx
  42a627:	85 c9 	testl	%ecx, %ecx
  42a629:	75 13 	jne	19 <runtime.newproc1+0x2de>
  42a62b:	0f b6 88 c0 00 00 00 	movzbl	192(%rax), %ecx
  42a632:	84 c9 	testb	%cl, %cl
  42a634:	74 08 	je	8 <runtime.newproc1+0x2de>
  42a636:	48 c7 40 10 de fa ff ff 	movq	$-1314, 16(%rax)
  42a63e:	48 8b 6c 24 78 	movq	120(%rsp), %rbp
  42a643:	48 81 c4 80 00 00 00 	addq	$128, %rsp
  42a64a:	c3 	retq
  42a64b:	e8 20 cd ff ff 	callq	-13024 <runtime.wakep>
  42a650:	eb bb 	jmp	-69 <runtime.newproc1+0x2ad>
  42a652:	48 8b 82 28 01 00 00 	movq	296(%rdx), %rax
  42a659:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  42a65e:	48 89 14 24 	movq	%rdx, (%rsp)
  42a662:	e8 e9 01 01 00 	callq	66025 <runtime.traceGoCreate>
  42a667:	48 8b 44 24 60 	movq	96(%rsp), %rax
  42a66c:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  42a671:	e9 65 ff ff ff 	jmp	-155 <runtime.newproc1+0x27b>
  42a676:	48 89 c3 	movq	%rax, %rbx
  42a679:	48 89 d0 	movq	%rdx, %rax
  42a67c:	e8 1f c2 01 00 	callq	115231 <runtime.gcWriteBarrier>
  42a681:	48 89 d8 	movq	%rbx, %rax
  42a684:	e9 a8 fe ff ff 	jmp	-344 <runtime.newproc1+0x1d1>
  42a689:	48 89 c1 	movq	%rax, %rcx
  42a68c:	48 89 d8 	movq	%rbx, %rax
  42a68f:	e8 0c c2 01 00 	callq	115212 <runtime.gcWriteBarrier>
  42a694:	48 89 c8 	movq	%rcx, %rax
  42a697:	e9 44 fe ff ff 	jmp	-444 <runtime.newproc1+0x180>
  42a69c:	48 89 14 24 	movq	%rdx, (%rsp)
  42a6a0:	48 8b 94 24 90 00 00 00 	movq	144(%rsp), %rdx
  42a6a8:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  42a6ad:	48 63 c9 	movslq	%ecx, %rcx
  42a6b0:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  42a6b5:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  42a6ba:	e8 41 ca 01 00 	callq	117313 <runtime.memmove>
  42a6bf:	0f b6 05 4e 93 09 00 	movzbl	627534(%rip), %eax
  42a6c6:	84 c0 	testb	%al, %al
  42a6c8:	0f 84 a9 00 00 00 	je	169 <runtime.newproc1+0x417>
  42a6ce:	48 8b 44 24 50 	movq	80(%rsp), %rax
  42a6d3:	48 8b 48 30 	movq	48(%rax), %rcx
  42a6d7:	48 8b 89 c0 00 00 00 	movq	192(%rcx), %rcx
  42a6de:	0f b6 89 c3 00 00 00 	movzbl	195(%rcx), %ecx
  42a6e5:	84 c9 	testb	%cl, %cl
  42a6e7:	74 0a 	je	10 <runtime.newproc1+0x393>
  42a6e9:	48 8b 44 24 48 	movq	72(%rsp), %rax
  42a6ee:	e9 45 fd ff ff 	jmp	-699 <runtime.newproc1+0xd8>
  42a6f3:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  42a6fb:	48 8b 08 	movq	(%rax), %rcx
  42a6fe:	48 89 0c 24 	movq	%rcx, (%rsp)
  42a702:	e8 c9 da 00 00 	callq	56009 <runtime.findfunc>
  42a707:	48 8b 44 24 10 	movq	16(%rsp), %rax
  42a70c:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  42a711:	48 89 0c 24 	movq	%rcx, (%rsp)
  42a715:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  42a71a:	c7 44 24 10 00 00 00 00 	movl	$0, 16(%rsp)
  42a722:	e8 c9 e7 00 00 	callq	59337 <runtime.funcdata>
  42a727:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42a72c:	48 89 04 24 	movq	%rax, (%rsp)
  42a730:	c7 44 24 08 00 00 00 00 	movl	$0, 8(%rsp)
  42a738:	e8 b3 ea 00 00 	callq	60083 <runtime.stackmapdata>
  42a73d:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42a742:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  42a747:	48 89 0c 24 	movq	%rcx, (%rsp)
  42a74b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  42a750:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  42a755:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  42a75a:	48 c7 44 24 18 00 00 00 00 	movq	$0, 24(%rsp)
  42a763:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  42a768:	e8 93 23 fe ff 	callq	-121965 <runtime.bulkBarrierBitmap>
  42a76d:	48 8b 44 24 50 	movq	80(%rsp), %rax
  42a772:	e9 72 ff ff ff 	jmp	-142 <runtime.newproc1+0x389>
  42a777:	48 8b 44 24 50 	movq	80(%rsp), %rax
  42a77c:	e9 68 ff ff ff 	jmp	-152 <runtime.newproc1+0x389>
  42a781:	c7 04 24 00 08 00 00 	movl	$2048, (%rsp)
  42a788:	e8 b3 fa ff ff 	callq	-1357 <runtime.malg>
  42a78d:	48 8b 44 24 08 	movq	8(%rsp), %rax
  42a792:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  42a797:	48 89 04 24 	movq	%rax, (%rsp)
  42a79b:	48 b9 00 00 00 00 06 00 00 00 	movabsq	$25769803776, %rcx
  42a7a5:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  42a7aa:	e8 d1 a2 ff ff 	callq	-23855 <runtime.casgstatus>
  42a7af:	48 8b 44 24 40 	movq	64(%rsp), %rax
  42a7b4:	48 89 04 24 	movq	%rax, (%rsp)
  42a7b8:	e8 63 91 ff ff 	callq	-28317 <runtime.allgadd>
  42a7bd:	48 8b 44 24 40 	movq	64(%rsp), %rax
  42a7c2:	e9 2a fc ff ff 	jmp	-982 <runtime.newproc1+0x91>
  42a7c7:	48 8d 05 90 19 04 00 	leaq	268688(%rip), %rax
  42a7ce:	48 89 04 24 	movq	%rax, (%rsp)
  42a7d2:	48 c7 44 24 08 1c 00 00 00 	movq	$28, 8(%rsp)
  42a7db:	e8 f0 69 ff ff 	callq	-38416 <runtime.throw>
  42a7e0:	0f 0b 	ud2
  42a7e2:	48 8d 05 91 19 04 00 	leaq	268689(%rip), %rax
  42a7e9:	48 89 04 24 	movq	%rax, (%rsp)
  42a7ed:	48 c7 44 24 08 1c 00 00 00 	movq	$28, 8(%rsp)
  42a7f6:	e8 d5 69 ff ff 	callq	-38443 <runtime.throw>
  42a7fb:	0f 0b 	ud2
  42a7fd:	48 8d 05 64 34 04 00 	leaq	275556(%rip), %rax
  42a804:	48 89 04 24 	movq	%rax, (%rsp)
  42a808:	48 c7 44 24 08 37 00 00 00 	movq	$55, 8(%rsp)
  42a811:	e8 ba 69 ff ff 	callq	-38470 <runtime.throw>
  42a816:	0f 0b 	ud2
  42a818:	48 8b 40 30 	movq	48(%rax), %rax
  42a81c:	c7 80 ec 00 00 00 ff ff ff ff 	movl	$4294967295, 236(%rax)
  42a826:	48 8d 05 f0 08 04 00 	leaq	264432(%rip), %rax
  42a82d:	48 89 04 24 	movq	%rax, (%rsp)
  42a831:	48 c7 44 24 08 14 00 00 00 	movq	$20, 8(%rsp)
  42a83a:	e8 91 69 ff ff 	callq	-38511 <runtime.throw>
  42a83f:	0f 0b 	ud2
  42a841:	e8 2a 9d 01 00 	callq	105770 <runtime.morestack_noctxt>
  42a846:	e9 15 fb ff ff 	jmp	-1259 <runtime.newproc1>
  42a84b:	cc 	int3
  42a84c:	cc 	int3
  42a84d:	cc 	int3
  42a84e:	cc 	int3
  42a84f:	cc 	int3

runtime.gfput:
  42a850:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42a859:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42a85d:	0f 86 f0 01 00 00 	jbe	496 <runtime.gfput+0x203>
  42a863:	48 83 ec 20 	subq	$32, %rsp
  42a867:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  42a86c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  42a871:	48 8b 44 24 30 	movq	48(%rsp), %rax
  42a876:	8b 88 90 00 00 00 	movl	144(%rax), %ecx
  42a87c:	83 f9 06 	cmpl	$6, %ecx
  42a87f:	0f 85 b3 01 00 00 	jne	435 <runtime.gfput+0x1e8>
  42a885:	48 8b 48 08 	movq	8(%rax), %rcx
  42a889:	48 8b 10 	movq	(%rax), %rdx
  42a88c:	48 89 cb 	movq	%rcx, %rbx
  42a88f:	48 29 d1 	subq	%rdx, %rcx
  42a892:	48 81 f9 00 08 00 00 	cmpq	$2048, %rcx
  42a899:	0f 85 73 01 00 00 	jne	371 <runtime.gfput+0x1c2>
  42a89f:	48 8d 88 b8 00 00 00 	leaq	184(%rax), %rcx
  42a8a6:	84 01 	testb	%al, (%rcx)
  42a8a8:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  42a8ad:	48 8b 91 f0 0d 00 00 	movq	3568(%rcx), %rdx
  42a8b4:	48 89 90 b8 00 00 00 	movq	%rdx, 184(%rax)
  42a8bb:	48 8d b9 f0 0d 00 00 	leaq	3568(%rcx), %rdi
  42a8c2:	8b 15 48 91 09 00 	movl	627016(%rip), %edx
  42a8c8:	85 d2 	testl	%edx, %edx
  42a8ca:	0f 85 38 01 00 00 	jne	312 <runtime.gfput+0x1b8>
  42a8d0:	48 89 81 f0 0d 00 00 	movq	%rax, 3568(%rcx)
  42a8d7:	8b 81 f8 0d 00 00 	movl	3576(%rcx), %eax
  42a8dd:	ff c0 	incl	%eax
  42a8df:	89 81 f8 0d 00 00 	movl	%eax, 3576(%rcx)
  42a8e5:	83 f8 40 	cmpl	$64, %eax
  42a8e8:	0f 8c 10 01 00 00 	jl	272 <runtime.gfput+0x1ae>
  42a8ee:	48 89 7c 24 10 	movq	%rdi, 16(%rsp)
  42a8f3:	48 8d 05 96 d0 07 00 	leaq	512150(%rip), %rax
  42a8fa:	48 89 04 24 	movq	%rax, (%rsp)
  42a8fe:	e8 1d ec fd ff 	callq	-136163 <runtime.lock>
  42a903:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42a908:	eb 06 	jmp	6 <runtime.gfput+0xc0>
  42a90a:	ff 05 98 d0 07 00 	incl	512152(%rip)
  42a910:	8b 88 f8 0d 00 00 	movl	3576(%rax), %ecx
  42a916:	83 f9 20 	cmpl	$32, %ecx
  42a919:	0f 8c cf 00 00 00 	jl	207 <runtime.gfput+0x19e>
  42a91f:	ff c9 	decl	%ecx
  42a921:	89 88 f8 0d 00 00 	movl	%ecx, 3576(%rax)
  42a927:	48 8b 88 f0 0d 00 00 	movq	3568(%rax), %rcx
  42a92e:	8b 15 dc 90 09 00 	movl	626908(%rip), %edx
  42a934:	48 8b 99 b8 00 00 00 	movq	184(%rcx), %rbx
  42a93b:	48 8d b1 b8 00 00 00 	leaq	184(%rcx), %rsi
  42a942:	85 d2 	testl	%edx, %edx
  42a944:	0f 85 8c 00 00 00 	jne	140 <runtime.gfput+0x186>
  42a94a:	48 89 98 f0 0d 00 00 	movq	%rbx, 3568(%rax)
  42a951:	48 8b 11 	movq	(%rcx), %rdx
  42a954:	48 85 d2 	testq	%rdx, %rdx
  42a957:	75 3d 	jne	61 <runtime.gfput+0x146>
  42a959:	84 06 	testb	%al, (%rsi)
  42a95b:	48 8b 15 3e d0 07 00 	movq	512062(%rip), %rdx
  42a962:	48 89 91 b8 00 00 00 	movq	%rdx, 184(%rcx)
  42a969:	8b 15 a1 90 09 00 	movl	626849(%rip), %edx
  42a96f:	85 d2 	testl	%edx, %edx
  42a971:	75 09 	jne	9 <runtime.gfput+0x12c>
  42a973:	48 89 0d 26 d0 07 00 	movq	%rcx, 512038(%rip)
  42a97a:	eb 8e 	jmp	-114 <runtime.gfput+0xba>
  42a97c:	48 8d 3d 1d d0 07 00 	leaq	512029(%rip), %rdi
  42a983:	48 89 c2 	movq	%rax, %rdx
  42a986:	48 89 c8 	movq	%rcx, %rax
  42a989:	e8 12 bf 01 00 	callq	114450 <runtime.gcWriteBarrier>
  42a98e:	48 89 d0 	movq	%rdx, %rax
  42a991:	e9 74 ff ff ff 	jmp	-140 <runtime.gfput+0xba>
  42a996:	84 06 	testb	%al, (%rsi)
  42a998:	48 8b 15 f9 cf 07 00 	movq	511993(%rip), %rdx
  42a99f:	48 89 91 b8 00 00 00 	movq	%rdx, 184(%rcx)
  42a9a6:	8b 15 64 90 09 00 	movl	626788(%rip), %edx
  42a9ac:	85 d2 	testl	%edx, %edx
  42a9ae:	75 0c 	jne	12 <runtime.gfput+0x16c>
  42a9b0:	48 89 0d e1 cf 07 00 	movq	%rcx, 511969(%rip)
  42a9b7:	e9 4e ff ff ff 	jmp	-178 <runtime.gfput+0xba>
  42a9bc:	48 8d 3d d5 cf 07 00 	leaq	511957(%rip), %rdi
  42a9c3:	48 89 c2 	movq	%rax, %rdx
  42a9c6:	48 89 c8 	movq	%rcx, %rax
  42a9c9:	e8 d2 be 01 00 	callq	114386 <runtime.gcWriteBarrier>
  42a9ce:	48 89 d0 	movq	%rdx, %rax
  42a9d1:	e9 34 ff ff ff 	jmp	-204 <runtime.gfput+0xba>
  42a9d6:	48 8b 7c 24 10 	movq	16(%rsp), %rdi
  42a9db:	48 89 c2 	movq	%rax, %rdx
  42a9de:	48 89 d8 	movq	%rbx, %rax
  42a9e1:	e8 ba be 01 00 	callq	114362 <runtime.gcWriteBarrier>
  42a9e6:	48 89 d0 	movq	%rdx, %rax
  42a9e9:	e9 63 ff ff ff 	jmp	-157 <runtime.gfput+0x101>
  42a9ee:	48 8d 05 9b cf 07 00 	leaq	511899(%rip), %rax
  42a9f5:	48 89 04 24 	movq	%rax, (%rsp)
  42a9f9:	e8 c2 ec fd ff 	callq	-135998 <runtime.unlock>
  42a9fe:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  42aa03:	48 83 c4 20 	addq	$32, %rsp
  42aa07:	c3 	retq
  42aa08:	e8 93 be 01 00 	callq	114323 <runtime.gcWriteBarrier>
  42aa0d:	e9 c5 fe ff ff 	jmp	-315 <runtime.gfput+0x87>
  42aa12:	48 89 14 24 	movq	%rdx, (%rsp)
  42aa16:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  42aa1b:	e8 10 9e 00 00 	callq	40464 <runtime.stackfree>
  42aa20:	0f 57 c0 	xorps	%xmm0, %xmm0
  42aa23:	48 8b 44 24 30 	movq	48(%rsp), %rax
  42aa28:	0f 11 00 	movups	%xmm0, (%rax)
  42aa2b:	48 c7 40 10 00 00 00 00 	movq	$0, 16(%rax)
  42aa33:	e9 67 fe ff ff 	jmp	-409 <runtime.gfput+0x4f>
  42aa38:	48 8d 05 3b 18 04 00 	leaq	268347(%rip), %rax
  42aa3f:	48 89 04 24 	movq	%rax, (%rsp)
  42aa43:	48 c7 44 24 08 1d 00 00 00 	movq	$29, 8(%rsp)
  42aa4c:	e8 7f 67 ff ff 	callq	-39041 <runtime.throw>
  42aa51:	0f 0b 	ud2
  42aa53:	e8 18 9b 01 00 	callq	105240 <runtime.morestack_noctxt>
  42aa58:	e9 f3 fd ff ff 	jmp	-525 <runtime.gfput>
  42aa5d:	cc 	int3
  42aa5e:	cc 	int3
  42aa5f:	cc 	int3

runtime.gfget:
  42aa60:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42aa69:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42aa6d:	0f 86 c5 01 00 00 	jbe	453 <runtime.gfget+0x1d8>
  42aa73:	48 83 ec 30 	subq	$48, %rsp
  42aa77:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  42aa7c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  42aa81:	e9 e9 00 00 00 	jmp	233 <runtime.gfget+0x10f>
  42aa86:	8b 88 f8 0d 00 00 	movl	3576(%rax), %ecx
  42aa8c:	83 f9 20 	cmpl	$32, %ecx
  42aa8f:	0f 8d ca 00 00 00 	jge	202 <runtime.gfget+0xff>
  42aa95:	48 8b 0d fc ce 07 00 	movq	511740(%rip), %rcx
  42aa9c:	48 85 c9 	testq	%rcx, %rcx
  42aa9f:	74 7b 	je	123 <runtime.gfget+0xbc>
  42aaa1:	8b 15 69 8f 09 00 	movl	626537(%rip), %edx
  42aaa7:	48 8b 99 b8 00 00 00 	movq	184(%rcx), %rbx
  42aaae:	85 d2 	testl	%edx, %edx
  42aab0:	75 53 	jne	83 <runtime.gfget+0xa5>
  42aab2:	48 89 1d df ce 07 00 	movq	%rbx, 511711(%rip)
  42aab9:	ff 80 f8 0d 00 00 	incl	3576(%rax)
  42aabf:	83 05 e2 ce 07 00 ff 	addl	$-1, 511714(%rip)
  42aac6:	48 8d 91 b8 00 00 00 	leaq	184(%rcx), %rdx
  42aacd:	84 02 	testb	%al, (%rdx)
  42aacf:	48 8b 90 f0 0d 00 00 	movq	3568(%rax), %rdx
  42aad6:	48 89 91 b8 00 00 00 	movq	%rdx, 184(%rcx)
  42aadd:	8b 15 2d 8f 09 00 	movl	626477(%rip), %edx
  42aae3:	85 d2 	testl	%edx, %edx
  42aae5:	75 09 	jne	9 <runtime.gfget+0x90>
  42aae7:	48 89 88 f0 0d 00 00 	movq	%rcx, 3568(%rax)
  42aaee:	eb 96 	jmp	-106 <runtime.gfget+0x26>
  42aaf0:	48 8b 7c 24 10 	movq	16(%rsp), %rdi
  42aaf5:	48 89 c2 	movq	%rax, %rdx
  42aaf8:	48 89 c8 	movq	%rcx, %rax
  42aafb:	e8 a0 bd 01 00 	callq	114080 <runtime.gcWriteBarrier>
  42ab00:	48 89 d0 	movq	%rdx, %rax
  42ab03:	eb 81 	jmp	-127 <runtime.gfget+0x26>
  42ab05:	48 8d 3d 8c ce 07 00 	leaq	511628(%rip), %rdi
  42ab0c:	48 89 c2 	movq	%rax, %rdx
  42ab0f:	48 89 d8 	movq	%rbx, %rax
  42ab12:	e8 89 bd 01 00 	callq	114057 <runtime.gcWriteBarrier>
  42ab17:	48 89 d0 	movq	%rdx, %rax
  42ab1a:	eb 9d 	jmp	-99 <runtime.gfget+0x59>
  42ab1c:	48 8b 0d 7d ce 07 00 	movq	511613(%rip), %rcx
  42ab23:	48 85 c9 	testq	%rcx, %rcx
  42ab26:	74 37 	je	55 <runtime.gfget+0xff>
  42ab28:	8b 15 e2 8e 09 00 	movl	626402(%rip), %edx
  42ab2e:	48 8b 99 b8 00 00 00 	movq	184(%rcx), %rbx
  42ab35:	85 d2 	testl	%edx, %edx
  42ab37:	75 0c 	jne	12 <runtime.gfget+0xe5>
  42ab39:	48 89 1d 60 ce 07 00 	movq	%rbx, 511584(%rip)
  42ab40:	e9 74 ff ff ff 	jmp	-140 <runtime.gfget+0x59>
  42ab45:	48 8d 3d 54 ce 07 00 	leaq	511572(%rip), %rdi
  42ab4c:	48 89 c2 	movq	%rax, %rdx
  42ab4f:	48 89 d8 	movq	%rbx, %rax
  42ab52:	e8 49 bd 01 00 	callq	113993 <runtime.gcWriteBarrier>
  42ab57:	48 89 d0 	movq	%rdx, %rax
  42ab5a:	e9 5a ff ff ff 	jmp	-166 <runtime.gfget+0x59>
  42ab5f:	48 8d 05 2a ce 07 00 	leaq	511530(%rip), %rax
  42ab66:	48 89 04 24 	movq	%rax, (%rsp)
  42ab6a:	e8 51 eb fd ff 	callq	-136367 <runtime.unlock>
  42ab6f:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  42ab74:	48 8b 91 f0 0d 00 00 	movq	3568(%rcx), %rdx
  42ab7b:	48 8d b9 f0 0d 00 00 	leaq	3568(%rcx), %rdi
  42ab82:	48 85 d2 	testq	%rdx, %rdx
  42ab85:	75 3a 	jne	58 <runtime.gfget+0x161>
  42ab87:	48 89 7c 24 10 	movq	%rdi, 16(%rsp)
  42ab8c:	48 8b 1d 05 ce 07 00 	movq	511493(%rip), %rbx
  42ab93:	48 85 db 	testq	%rbx, %rbx
  42ab96:	74 1a 	je	26 <runtime.gfget+0x152>
  42ab98:	48 8d 05 f1 cd 07 00 	leaq	511473(%rip), %rax
  42ab9f:	48 89 04 24 	movq	%rax, (%rsp)
  42aba3:	e8 78 e9 fd ff 	callq	-136840 <runtime.lock>
  42aba8:	48 8b 44 24 38 	movq	56(%rsp), %rax
  42abad:	e9 d4 fe ff ff 	jmp	-300 <runtime.gfget+0x26>
  42abb2:	48 8b 1d e7 cd 07 00 	movq	511463(%rip), %rbx
  42abb9:	48 85 db 	testq	%rbx, %rbx
  42abbc:	75 da 	jne	-38 <runtime.gfget+0x138>
  42abbe:	48 85 d2 	testq	%rdx, %rdx
  42abc1:	74 27 	je	39 <runtime.gfget+0x18a>
  42abc3:	8b 1d 47 8e 09 00 	movl	626247(%rip), %ebx
  42abc9:	48 8b 82 b8 00 00 00 	movq	184(%rdx), %rax
  42abd0:	85 db 	testl	%ebx, %ebx
  42abd2:	75 5d 	jne	93 <runtime.gfget+0x1d1>
  42abd4:	48 89 81 f0 0d 00 00 	movq	%rax, 3568(%rcx)
  42abdb:	83 81 f8 0d 00 00 ff 	addl	$-1, 3576(%rcx)
  42abe2:	48 8b 02 	movq	(%rdx), %rax
  42abe5:	48 85 c0 	testq	%rax, %rax
  42abe8:	74 0f 	je	15 <runtime.gfget+0x199>
  42abea:	48 89 54 24 40 	movq	%rdx, 64(%rsp)
  42abef:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  42abf4:	48 83 c4 30 	addq	$48, %rsp
  42abf8:	c3 	retq
  42abf9:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  42abfe:	48 8d 05 3b 8f 01 00 	leaq	102203(%rip), %rax
  42ac05:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  42ac0a:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  42ac0f:	48 8d 44 24 18 	leaq	24(%rsp), %rax
  42ac14:	48 89 04 24 	movq	%rax, (%rsp)
  42ac18:	e8 03 98 01 00 	callq	104451 <runtime.systemstack>
  42ac1d:	48 8b 54 24 08 	movq	8(%rsp), %rdx
  42ac22:	48 8b 02 	movq	(%rdx), %rax
  42ac25:	48 05 70 03 00 00 	addq	$880, %rax
  42ac2b:	48 89 42 10 	movq	%rax, 16(%rdx)
  42ac2f:	eb b9 	jmp	-71 <runtime.gfget+0x18a>
  42ac31:	e8 6a bc 01 00 	callq	113770 <runtime.gcWriteBarrier>
  42ac36:	eb a3 	jmp	-93 <runtime.gfget+0x17b>
  42ac38:	e8 33 99 01 00 	callq	104755 <runtime.morestack_noctxt>
  42ac3d:	e9 1e fe ff ff 	jmp	-482 <runtime.gfget>
  42ac42:	cc 	int3
  42ac43:	cc 	int3
  42ac44:	cc 	int3
  42ac45:	cc 	int3
  42ac46:	cc 	int3
  42ac47:	cc 	int3
  42ac48:	cc 	int3
  42ac49:	cc 	int3
  42ac4a:	cc 	int3
  42ac4b:	cc 	int3
  42ac4c:	cc 	int3
  42ac4d:	cc 	int3
  42ac4e:	cc 	int3
  42ac4f:	cc 	int3

runtime.gfpurge:
  42ac50:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42ac59:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42ac5d:	0f 86 24 01 00 00 	jbe	292 <runtime.gfpurge+0x137>
  42ac63:	48 83 ec 10 	subq	$16, %rsp
  42ac67:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  42ac6c:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  42ac71:	48 8d 05 18 cd 07 00 	leaq	511256(%rip), %rax
  42ac78:	48 89 04 24 	movq	%rax, (%rsp)
  42ac7c:	e8 9f e8 fd ff 	callq	-137057 <runtime.lock>
  42ac81:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42ac86:	eb 06 	jmp	6 <runtime.gfpurge+0x3e>
  42ac88:	ff 05 1a cd 07 00 	incl	511258(%rip)
  42ac8e:	8b 88 f8 0d 00 00 	movl	3576(%rax), %ecx
  42ac94:	85 c9 	testl	%ecx, %ecx
  42ac96:	0f 84 d1 00 00 00 	je	209 <runtime.gfpurge+0x11d>
  42ac9c:	ff c9 	decl	%ecx
  42ac9e:	89 88 f8 0d 00 00 	movl	%ecx, 3576(%rax)
  42aca4:	48 8b 88 f0 0d 00 00 	movq	3568(%rax), %rcx
  42acab:	48 8d b8 f0 0d 00 00 	leaq	3568(%rax), %rdi
  42acb2:	8b 15 58 8d 09 00 	movl	626008(%rip), %edx
  42acb8:	48 8b 99 b8 00 00 00 	movq	184(%rcx), %rbx
  42acbf:	48 8d b1 b8 00 00 00 	leaq	184(%rcx), %rsi
  42acc6:	85 d2 	testl	%edx, %edx
  42acc8:	0f 85 8c 00 00 00 	jne	140 <runtime.gfpurge+0x10a>
  42acce:	48 89 98 f0 0d 00 00 	movq	%rbx, 3568(%rax)
  42acd5:	48 8b 11 	movq	(%rcx), %rdx
  42acd8:	48 85 d2 	testq	%rdx, %rdx
  42acdb:	75 3d 	jne	61 <runtime.gfpurge+0xca>
  42acdd:	84 06 	testb	%al, (%rsi)
  42acdf:	48 8b 15 ba cc 07 00 	movq	511162(%rip), %rdx
  42ace6:	48 89 91 b8 00 00 00 	movq	%rdx, 184(%rcx)
  42aced:	8b 15 1d 8d 09 00 	movl	625949(%rip), %edx
  42acf3:	85 d2 	testl	%edx, %edx
  42acf5:	75 09 	jne	9 <runtime.gfpurge+0xb0>
  42acf7:	48 89 0d a2 cc 07 00 	movq	%rcx, 511138(%rip)
  42acfe:	eb 88 	jmp	-120 <runtime.gfpurge+0x38>
  42ad00:	48 8d 3d 99 cc 07 00 	leaq	511129(%rip), %rdi
  42ad07:	48 89 c2 	movq	%rax, %rdx
  42ad0a:	48 89 c8 	movq	%rcx, %rax
  42ad0d:	e8 8e bb 01 00 	callq	113550 <runtime.gcWriteBarrier>
  42ad12:	48 89 d0 	movq	%rdx, %rax
  42ad15:	e9 6e ff ff ff 	jmp	-146 <runtime.gfpurge+0x38>
  42ad1a:	84 06 	testb	%al, (%rsi)
  42ad1c:	48 8b 15 75 cc 07 00 	movq	511093(%rip), %rdx
  42ad23:	48 89 91 b8 00 00 00 	movq	%rdx, 184(%rcx)
  42ad2a:	8b 15 e0 8c 09 00 	movl	625888(%rip), %edx
  42ad30:	85 d2 	testl	%edx, %edx
  42ad32:	75 0c 	jne	12 <runtime.gfpurge+0xf0>
  42ad34:	48 89 0d 5d cc 07 00 	movq	%rcx, 511069(%rip)
  42ad3b:	e9 48 ff ff ff 	jmp	-184 <runtime.gfpurge+0x38>
  42ad40:	48 8d 3d 51 cc 07 00 	leaq	511057(%rip), %rdi
  42ad47:	48 89 c2 	movq	%rax, %rdx
  42ad4a:	48 89 c8 	movq	%rcx, %rax
  42ad4d:	e8 4e bb 01 00 	callq	113486 <runtime.gcWriteBarrier>
  42ad52:	48 89 d0 	movq	%rdx, %rax
  42ad55:	e9 2e ff ff ff 	jmp	-210 <runtime.gfpurge+0x38>
  42ad5a:	48 89 c2 	movq	%rax, %rdx
  42ad5d:	48 89 d8 	movq	%rbx, %rax
  42ad60:	e8 3b bb 01 00 	callq	113467 <runtime.gcWriteBarrier>
  42ad65:	48 89 d0 	movq	%rdx, %rax
  42ad68:	e9 68 ff ff ff 	jmp	-152 <runtime.gfpurge+0x85>
  42ad6d:	48 8d 05 1c cc 07 00 	leaq	511004(%rip), %rax
  42ad74:	48 89 04 24 	movq	%rax, (%rsp)
  42ad78:	e8 43 e9 fd ff 	callq	-136893 <runtime.unlock>
  42ad7d:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  42ad82:	48 83 c4 10 	addq	$16, %rsp
  42ad86:	c3 	retq
  42ad87:	e8 e4 97 01 00 	callq	104420 <runtime.morestack_noctxt>
  42ad8c:	e9 bf fe ff ff 	jmp	-321 <runtime.gfpurge>
  42ad91:	cc 	int3
  42ad92:	cc 	int3
  42ad93:	cc 	int3
  42ad94:	cc 	int3
  42ad95:	cc 	int3
  42ad96:	cc 	int3
  42ad97:	cc 	int3
  42ad98:	cc 	int3
  42ad99:	cc 	int3
  42ad9a:	cc 	int3
  42ad9b:	cc 	int3
  42ad9c:	cc 	int3
  42ad9d:	cc 	int3
  42ad9e:	cc 	int3
  42ad9f:	cc 	int3

runtime.unlockOSThread:
  42ada0:	48 83 ec 18 	subq	$24, %rsp
  42ada4:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  42ada9:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  42adae:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  42adb7:	48 8b 48 30 	movq	48(%rax), %rcx
  42adbb:	8b 89 f8 02 00 00 	movl	760(%rcx), %ecx
  42adc1:	85 c9 	testl	%ecx, %ecx
  42adc3:	74 4e 	je	78 <runtime.unlockOSThread+0x73>
  42adc5:	48 8b 40 30 	movq	48(%rax), %rax
  42adc9:	83 80 f8 02 00 00 ff 	addl	$-1, 760(%rax)
  42add0:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  42add9:	48 8b 48 30 	movq	48(%rax), %rcx
  42addd:	8b 91 f8 02 00 00 	movl	760(%rcx), %edx
  42ade3:	85 d2 	testl	%edx, %edx
  42ade5:	74 0a 	je	10 <runtime.unlockOSThread+0x51>
  42ade7:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  42adec:	48 83 c4 18 	addq	$24, %rsp
  42adf0:	c3 	retq
  42adf1:	8b 91 f4 02 00 00 	movl	756(%rcx), %edx
  42adf7:	85 d2 	testl	%edx, %edx
  42adf9:	75 ec 	jne	-20 <runtime.unlockOSThread+0x47>
  42adfb:	48 c7 81 68 01 00 00 00 00 00 00 	movq	$0, 360(%rcx)
  42ae06:	48 c7 80 e0 00 00 00 00 00 00 00 	movq	$0, 224(%rax)
  42ae11:	eb d4 	jmp	-44 <runtime.unlockOSThread+0x47>
  42ae13:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  42ae18:	48 8d 05 89 31 04 00 	leaq	274825(%rip), %rax
  42ae1f:	48 89 04 24 	movq	%rax, (%rsp)
  42ae23:	e8 f8 95 01 00 	callq	103928 <runtime.systemstack>
  42ae28:	48 8b 44 24 08 	movq	8(%rsp), %rax
  42ae2d:	eb 96 	jmp	-106 <runtime.unlockOSThread+0x25>
  42ae2f:	cc 	int3

runtime.badunlockosthread:
  42ae30:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42ae39:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42ae3d:	76 29 	jbe	41 <runtime.badunlockosthread+0x38>
  42ae3f:	48 83 ec 18 	subq	$24, %rsp
  42ae43:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  42ae48:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  42ae4d:	48 8d 05 e4 2f 04 00 	leaq	274404(%rip), %rax
  42ae54:	48 89 04 24 	movq	%rax, (%rsp)
  42ae58:	48 c7 44 24 08 3e 00 00 00 	movq	$62, 8(%rsp)
  42ae61:	e8 6a 63 ff ff 	callq	-40086 <runtime.throw>
  42ae66:	0f 0b 	ud2
  42ae68:	e8 03 97 01 00 	callq	104195 <runtime.morestack_noctxt>
  42ae6d:	eb c1 	jmp	-63 <runtime.badunlockosthread>
  42ae6f:	cc 	int3

runtime._System:
  42ae70:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42ae79:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42ae7d:	76 1a 	jbe	26 <runtime._System+0x29>
  42ae7f:	48 83 ec 08 	subq	$8, %rsp
  42ae83:	48 89 2c 24 	movq	%rbp, (%rsp)
  42ae87:	48 8d 2c 24 	leaq	(%rsp), %rbp
  42ae8b:	e8 e0 ff ff ff 	callq	-32 <runtime._System>
  42ae90:	48 8b 2c 24 	movq	(%rsp), %rbp
  42ae94:	48 83 c4 08 	addq	$8, %rsp
  42ae98:	c3 	retq
  42ae99:	e8 d2 96 01 00 	callq	104146 <runtime.morestack_noctxt>
  42ae9e:	eb d0 	jmp	-48 <runtime._System>

runtime._ExternalCode:
  42aea0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42aea9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42aead:	76 1a 	jbe	26 <runtime._ExternalCode+0x29>
  42aeaf:	48 83 ec 08 	subq	$8, %rsp
  42aeb3:	48 89 2c 24 	movq	%rbp, (%rsp)
  42aeb7:	48 8d 2c 24 	leaq	(%rsp), %rbp
  42aebb:	e8 e0 ff ff ff 	callq	-32 <runtime._ExternalCode>
  42aec0:	48 8b 2c 24 	movq	(%rsp), %rbp
  42aec4:	48 83 c4 08 	addq	$8, %rsp
  42aec8:	c3 	retq
  42aec9:	e8 a2 96 01 00 	callq	104098 <runtime.morestack_noctxt>
  42aece:	eb d0 	jmp	-48 <runtime._ExternalCode>

runtime._LostExternalCode:
  42aed0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42aed9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42aedd:	76 1a 	jbe	26 <runtime._LostExternalCode+0x29>
  42aedf:	48 83 ec 08 	subq	$8, %rsp
  42aee3:	48 89 2c 24 	movq	%rbp, (%rsp)
  42aee7:	48 8d 2c 24 	leaq	(%rsp), %rbp
  42aeeb:	e8 e0 ff ff ff 	callq	-32 <runtime._LostExternalCode>
  42aef0:	48 8b 2c 24 	movq	(%rsp), %rbp
  42aef4:	48 83 c4 08 	addq	$8, %rsp
  42aef8:	c3 	retq
  42aef9:	e8 72 96 01 00 	callq	104050 <runtime.morestack_noctxt>
  42aefe:	eb d0 	jmp	-48 <runtime._LostExternalCode>

runtime._GC:
  42af00:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42af09:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42af0d:	76 1a 	jbe	26 <runtime._GC+0x29>
  42af0f:	48 83 ec 08 	subq	$8, %rsp
  42af13:	48 89 2c 24 	movq	%rbp, (%rsp)
  42af17:	48 8d 2c 24 	leaq	(%rsp), %rbp
  42af1b:	e8 e0 ff ff ff 	callq	-32 <runtime._GC>
  42af20:	48 8b 2c 24 	movq	(%rsp), %rbp
  42af24:	48 83 c4 08 	addq	$8, %rsp
  42af28:	c3 	retq
  42af29:	e8 42 96 01 00 	callq	104002 <runtime.morestack_noctxt>
  42af2e:	eb d0 	jmp	-48 <runtime._GC>

runtime.sigprof:
  42af30:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42af39:	48 8d 84 24 e8 fd ff ff 	leaq	-536(%rsp), %rax
  42af41:	48 3b 41 10 	cmpq	16(%rcx), %rax
  42af45:	0f 86 6d 04 00 00 	jbe	1133 <runtime.sigprof+0x488>
  42af4b:	48 81 ec 98 02 00 00 	subq	$664, %rsp
  42af52:	48 89 ac 24 90 02 00 00 	movq	%rbp, 656(%rsp)
  42af5a:	48 8d ac 24 90 02 00 00 	leaq	656(%rsp), %rbp
  42af62:	0f 57 c0 	xorps	%xmm0, %xmm0
  42af65:	0f 11 84 24 60 02 00 00 	movups	%xmm0, 608(%rsp)
  42af6d:	0f 11 84 24 70 02 00 00 	movups	%xmm0, 624(%rsp)
  42af75:	0f 11 84 24 80 02 00 00 	movups	%xmm0, 640(%rsp)
  42af7d:	8b 05 31 8a 09 00 	movl	625201(%rip), %eax
  42af83:	85 c0 	testl	%eax, %eax
  42af85:	0f 84 08 04 00 00 	je	1032 <runtime.sigprof+0x463>
  42af8b:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  42af94:	48 8b 40 30 	movq	48(%rax), %rax
  42af98:	ff 80 e8 00 00 00 	incl	232(%rax)
  42af9e:	48 8b 84 24 b8 02 00 00 	movq	696(%rsp), %rax
  42afa6:	48 85 c0 	testq	%rax, %rax
  42afa9:	0f 84 d7 03 00 00 	je	983 <runtime.sigprof+0x456>
  42afaf:	48 8b 08 	movq	(%rax), %rcx
  42afb2:	48 8b 94 24 a8 02 00 00 	movq	680(%rsp), %rdx
  42afba:	48 39 ca 	cmpq	%rcx, %rdx
  42afbd:	0f 83 6d 03 00 00 	jae	877 <runtime.sigprof+0x400>
  42afc3:	31 c9 	xorl	%ecx, %ecx
  42afc5:	48 8d 7c 24 60 	leaq	96(%rsp), %rdi
  42afca:	0f 57 c0 	xorps	%xmm0, %xmm0
  42afcd:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  42afd2:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  42afd7:	e8 5c ba 01 00 	callq	113244 <runtime.duffzero+0x98>
  42afdc:	48 8b 6d 00 	movq	(%rbp), %rbp
  42afe0:	48 8b 9c 24 c0 02 00 00 	movq	704(%rsp), %rbx
  42afe8:	8b b3 38 01 00 00 	movl	312(%rbx), %esi
  42afee:	85 f6 	testl	%esi, %esi
  42aff0:	0f 8e c3 02 00 00 	jle	707 <runtime.sigprof+0x389>
  42aff6:	48 8b b3 c0 00 00 00 	movq	192(%rbx), %rsi
  42affd:	48 85 f6 	testq	%rsi, %rsi
  42b000:	0f 84 b3 02 00 00 	je	691 <runtime.sigprof+0x389>
  42b006:	48 8b 7e 78 	movq	120(%rsi), %rdi
  42b00a:	48 85 ff 	testq	%rdi, %rdi
  42b00d:	0f 84 a6 02 00 00 	je	678 <runtime.sigprof+0x389>
  42b013:	48 8b 76 70 	movq	112(%rsi), %rsi
  42b017:	48 85 f6 	testq	%rsi, %rsi
  42b01a:	0f 84 99 02 00 00 	je	665 <runtime.sigprof+0x389>
  42b020:	8b 8b 3c 01 00 00 	movl	316(%rbx), %ecx
  42b026:	85 c9 	testl	%ecx, %ecx
  42b028:	0f 85 81 02 00 00 	jne	641 <runtime.sigprof+0x37f>
  42b02e:	48 8b 8b 40 01 00 00 	movq	320(%rbx), %rcx
  42b035:	48 85 c9 	testq	%rcx, %rcx
  42b038:	0f 84 71 02 00 00 	je	625 <runtime.sigprof+0x37f>
  42b03e:	48 8b 11 	movq	(%rcx), %rdx
  42b041:	48 85 d2 	testq	%rdx, %rdx
  42b044:	0f 84 65 02 00 00 	je	613 <runtime.sigprof+0x37f>
  42b04a:	31 d2 	xorl	%edx, %edx
  42b04c:	eb 03 	jmp	3 <runtime.sigprof+0x121>
  42b04e:	48 ff c2 	incq	%rdx
  42b051:	48 83 fa 20 	cmpq	$32, %rdx
  42b055:	7d 0d 	jge	13 <runtime.sigprof+0x134>
  42b057:	48 8b 34 d1 	movq	(%rcx,%rdx,8), %rsi
  42b05b:	48 85 f6 	testq	%rsi, %rsi
  42b05e:	75 ee 	jne	-18 <runtime.sigprof+0x11e>
  42b060:	48 83 fa 20 	cmpq	$32, %rdx
  42b064:	0f 87 47 03 00 00 	ja	839 <runtime.sigprof+0x481>
  42b06a:	48 89 54 24 58 	movq	%rdx, 88(%rsp)
  42b06f:	48 83 fa 40 	cmpq	$64, %rdx
  42b073:	0f 8d 2c 02 00 00 	jge	556 <runtime.sigprof+0x375>
  42b079:	48 8d 44 24 60 	leaq	96(%rsp), %rax
  42b07e:	48 89 04 24 	movq	%rax, (%rsp)
  42b082:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  42b087:	48 c1 e2 03 	shlq	$3, %rdx
  42b08b:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  42b090:	e8 6b c0 01 00 	callq	114795 <runtime.memmove>
  42b095:	48 8b 84 24 c0 02 00 00 	movq	704(%rsp), %rax
  42b09d:	48 8b 88 40 01 00 00 	movq	320(%rax), %rcx
  42b0a4:	48 c7 01 00 00 00 00 	movq	$0, (%rcx)
  42b0ab:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  42b0b0:	48 8b 90 c0 00 00 00 	movq	192(%rax), %rdx
  42b0b7:	48 8b 5a 78 	movq	120(%rdx), %rbx
  42b0bb:	48 8b 72 70 	movq	112(%rdx), %rsi
  42b0bf:	48 83 f9 40 	cmpq	$64, %rcx
  42b0c3:	0f 83 e1 02 00 00 	jae	737 <runtime.sigprof+0x47a>
  42b0c9:	48 8d 44 cc 60 	leaq	96(%rsp,%rcx,8), %rax
  42b0ce:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  42b0d3:	48 89 1c 24 	movq	%rbx, (%rsp)
  42b0d7:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  42b0dc:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  42b0e5:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  42b0ea:	48 c7 44 24 20 00 00 00 00 	movq	$0, 32(%rsp)
  42b0f3:	48 8d 41 c0 	leaq	-64(%rcx), %rax
  42b0f7:	48 f7 d8 	negq	%rax
  42b0fa:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  42b0ff:	0f 57 c0 	xorps	%xmm0, %xmm0
  42b102:	0f 11 44 24 38 	movups	%xmm0, 56(%rsp)
  42b107:	48 c7 44 24 48 00 00 00 00 	movq	$0, 72(%rsp)
  42b110:	e8 1b 02 01 00 	callq	66075 <runtime.gentraceback>
  42b115:	48 8b 44 24 50 	movq	80(%rsp), %rax
  42b11a:	48 85 c0 	testq	%rax, %rax
  42b11d:	0f 8f b1 00 00 00 	jg	177 <runtime.sigprof+0x2a4>
  42b123:	48 8b 05 7e a7 07 00 	movq	501630(%rip), %rax
  42b12a:	48 8b 8c 24 a0 02 00 00 	movq	672(%rsp), %rcx
  42b132:	48 39 c1 	cmpq	%rax, %rcx
  42b135:	0f 86 51 01 00 00 	jbe	337 <runtime.sigprof+0x35c>
  42b13b:	48 8d 05 9e b5 02 00 	leaq	177566(%rip), %rax
  42b142:	48 89 84 24 60 02 00 00 	movq	%rax, 608(%rsp)
  42b14a:	48 8d 0d 0f 2e 04 00 	leaq	273935(%rip), %rcx
  42b151:	48 89 8c 24 68 02 00 00 	movq	%rcx, 616(%rsp)
  42b159:	b9 08 00 00 00 	movl	$8, %ecx
  42b15e:	48 8d 94 24 60 02 00 00 	leaq	608(%rsp), %rdx
  42b166:	48 8b 14 0a 	movq	(%rdx,%rcx), %rdx
  42b16a:	48 8d 9c 24 68 02 00 00 	leaq	616(%rsp), %rbx
  42b172:	84 03 	testb	%al, (%rbx)
  42b174:	48 8b 12 	movq	(%rdx), %rdx
  42b177:	48 ff c2 	incq	%rdx
  42b17a:	48 89 54 24 60 	movq	%rdx, 96(%rsp)
  42b17f:	48 8b 94 24 c0 02 00 00 	movq	704(%rsp), %rdx
  42b187:	48 8b 9a f8 00 00 00 	movq	248(%rdx), %rbx
  42b18e:	48 85 db 	testq	%rbx, %rbx
  42b191:	0f 84 aa 00 00 00 	je	170 <runtime.sigprof+0x311>
  42b197:	48 89 84 24 80 02 00 00 	movq	%rax, 640(%rsp)
  42b19f:	48 8d 05 c2 2d 04 00 	leaq	273858(%rip), %rax
  42b1a6:	48 89 84 24 88 02 00 00 	movq	%rax, 648(%rsp)
  42b1ae:	48 8d 84 24 80 02 00 00 	leaq	640(%rsp), %rax
  42b1b6:	48 8b 04 08 	movq	(%rax,%rcx), %rax
  42b1ba:	48 8d 8c 24 88 02 00 00 	leaq	648(%rsp), %rcx
  42b1c2:	84 01 	testb	%al, (%rcx)
  42b1c4:	48 8b 00 	movq	(%rax), %rax
  42b1c7:	48 ff c0 	incq	%rax
  42b1ca:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  42b1cf:	b8 02 00 00 00 	movl	$2, %eax
  42b1d4:	8b 0d da 87 09 00 	movl	624602(%rip), %ecx
  42b1da:	85 c9 	testl	%ecx, %ecx
  42b1dc:	74 3f 	je	63 <runtime.sigprof+0x2ed>
  42b1de:	48 83 f8 40 	cmpq	$64, %rax
  42b1e2:	0f 87 bb 01 00 00 	ja	443 <runtime.sigprof+0x473>
  42b1e8:	48 8d 0d 31 d1 07 00 	leaq	512305(%rip), %rcx
  42b1ef:	48 89 0c 24 	movq	%rcx, (%rsp)
  42b1f3:	48 8b 8c 24 b8 02 00 00 	movq	696(%rsp), %rcx
  42b1fb:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  42b200:	48 8d 4c 24 60 	leaq	96(%rsp), %rcx
  42b205:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  42b20a:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  42b20f:	48 c7 44 24 20 40 00 00 00 	movq	$64, 32(%rsp)
  42b218:	e8 c3 93 fd ff 	callq	-158781 <runtime.(*cpuProfile).add>
  42b21d:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  42b226:	48 8b 40 30 	movq	48(%rax), %rax
  42b22a:	83 80 e8 00 00 00 ff 	addl	$-1, 232(%rax)
  42b231:	48 8b ac 24 90 02 00 00 	movq	656(%rsp), %rbp
  42b239:	48 81 c4 98 02 00 00 	addq	$664, %rsp
  42b240:	c3 	retq
  42b241:	8b 92 10 01 00 00 	movl	272(%rdx), %edx
  42b247:	85 d2 	testl	%edx, %edx
  42b249:	0f 85 48 ff ff ff 	jne	-184 <runtime.sigprof+0x267>
  42b24f:	48 89 84 24 70 02 00 00 	movq	%rax, 624(%rsp)
  42b257:	48 8d 05 1a 2d 04 00 	leaq	273690(%rip), %rax
  42b25e:	48 89 84 24 78 02 00 00 	movq	%rax, 632(%rsp)
  42b266:	48 8d 84 24 70 02 00 00 	leaq	624(%rsp), %rax
  42b26e:	48 8b 04 08 	movq	(%rax,%rcx), %rax
  42b272:	48 8d 8c 24 78 02 00 00 	leaq	632(%rsp), %rcx
  42b27a:	84 01 	testb	%al, (%rcx)
  42b27c:	48 8b 00 	movq	(%rax), %rax
  42b27f:	48 ff c0 	incq	%rax
  42b282:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  42b287:	e9 43 ff ff ff 	jmp	-189 <runtime.sigprof+0x29f>
  42b28c:	48 8d 05 4d b4 02 00 	leaq	177229(%rip), %rax
  42b293:	b9 08 00 00 00 	movl	$8, %ecx
  42b298:	48 8b 94 24 a0 02 00 00 	movq	672(%rsp), %rdx
  42b2a0:	e9 d5 fe ff ff 	jmp	-299 <runtime.sigprof+0x24a>
  42b2a5:	ba 40 00 00 00 	movl	$64, %edx
  42b2aa:	e9 ca fd ff ff 	jmp	-566 <runtime.sigprof+0x149>
  42b2af:	48 89 d8 	movq	%rbx, %rax
  42b2b2:	31 c9 	xorl	%ecx, %ecx
  42b2b4:	e9 f7 fd ff ff 	jmp	-521 <runtime.sigprof+0x180>
  42b2b9:	84 c9 	testb	%cl, %cl
  42b2bb:	75 0a 	jne	10 <runtime.sigprof+0x397>
  42b2bd:	31 c9 	xorl	%ecx, %ecx
  42b2bf:	48 89 c8 	movq	%rcx, %rax
  42b2c2:	e9 53 fe ff ff 	jmp	-429 <runtime.sigprof+0x1ea>
  42b2c7:	48 8d 4c 24 60 	leaq	96(%rsp), %rcx
  42b2cc:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  42b2d1:	48 8b 8c 24 a0 02 00 00 	movq	672(%rsp), %rcx
  42b2d9:	48 89 0c 24 	movq	%rcx, (%rsp)
  42b2dd:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  42b2e2:	48 8b 94 24 b0 02 00 00 	movq	688(%rsp), %rdx
  42b2ea:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  42b2ef:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  42b2f4:	48 c7 44 24 20 00 00 00 00 	movq	$0, 32(%rsp)
  42b2fd:	48 c7 44 24 30 40 00 00 00 	movq	$64, 48(%rsp)
  42b306:	0f 11 44 24 38 	movups	%xmm0, 56(%rsp)
  42b30b:	48 c7 44 24 48 06 00 00 00 	movq	$6, 72(%rsp)
  42b314:	e8 17 00 01 00 	callq	65559 <runtime.gentraceback>
  42b319:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  42b31e:	48 8b 84 24 b8 02 00 00 	movq	696(%rsp), %rax
  42b326:	48 8b 9c 24 c0 02 00 00 	movq	704(%rsp), %rbx
  42b32e:	eb 8f 	jmp	-113 <runtime.sigprof+0x38f>
  42b330:	48 8b 48 08 	movq	8(%rax), %rcx
  42b334:	48 39 d1 	cmpq	%rdx, %rcx
  42b337:	0f 82 86 fc ff ff 	jb	-890 <runtime.sigprof+0x93>
  42b33d:	48 8b 84 24 a0 02 00 00 	movq	672(%rsp), %rax
  42b345:	48 89 04 24 	movq	%rax, (%rsp)
  42b349:	e8 b2 01 00 00 	callq	434 <runtime.setsSP>
  42b34e:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  42b353:	84 c0 	testb	%al, %al
  42b355:	74 15 	je	21 <runtime.sigprof+0x43c>
  42b357:	48 8b 84 24 b8 02 00 00 	movq	696(%rsp), %rax
  42b35f:	48 8b 94 24 a8 02 00 00 	movq	680(%rsp), %rdx
  42b367:	e9 57 fc ff ff 	jmp	-937 <runtime.sigprof+0x93>
  42b36c:	48 8b 84 24 b8 02 00 00 	movq	696(%rsp), %rax
  42b374:	48 8b 94 24 a8 02 00 00 	movq	680(%rsp), %rdx
  42b37c:	b9 01 00 00 00 	movl	$1, %ecx
  42b381:	e9 3f fc ff ff 	jmp	-961 <runtime.sigprof+0x95>
  42b386:	48 8b 94 24 a8 02 00 00 	movq	680(%rsp), %rdx
  42b38e:	e9 30 fc ff ff 	jmp	-976 <runtime.sigprof+0x93>
  42b393:	48 8b ac 24 90 02 00 00 	movq	656(%rsp), %rbp
  42b39b:	48 81 c4 98 02 00 00 	addq	$664, %rsp
  42b3a2:	c3 	retq
  42b3a3:	e8 08 47 ff ff 	callq	-47352 <runtime.panicslice>
  42b3a8:	0f 0b 	ud2
  42b3aa:	e8 91 46 ff ff 	callq	-47471 <runtime.panicindex>
  42b3af:	0f 0b 	ud2
  42b3b1:	e8 fa 46 ff ff 	callq	-47366 <runtime.panicslice>
  42b3b6:	0f 0b 	ud2
  42b3b8:	e8 b3 91 01 00 	callq	102835 <runtime.morestack_noctxt>
  42b3bd:	e9 6e fb ff ff 	jmp	-1170 <runtime.sigprof>
  42b3c2:	cc 	int3
  42b3c3:	cc 	int3
  42b3c4:	cc 	int3
  42b3c5:	cc 	int3
  42b3c6:	cc 	int3
  42b3c7:	cc 	int3
  42b3c8:	cc 	int3
  42b3c9:	cc 	int3
  42b3ca:	cc 	int3
  42b3cb:	cc 	int3
  42b3cc:	cc 	int3
  42b3cd:	cc 	int3
  42b3ce:	cc 	int3
  42b3cf:	cc 	int3

runtime.sigprofNonGo:
  42b3d0:	48 83 ec 28 	subq	$40, %rsp
  42b3d4:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  42b3d9:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  42b3de:	8b 05 d0 85 09 00 	movl	624080(%rip), %eax
  42b3e4:	85 c0 	testl	%eax, %eax
  42b3e6:	74 46 	je	70 <runtime.sigprofNonGo+0x5e>
  42b3e8:	31 c0 	xorl	%eax, %eax
  42b3ea:	eb 03 	jmp	3 <runtime.sigprofNonGo+0x1f>
  42b3ec:	48 ff c0 	incq	%rax
  42b3ef:	48 83 f8 20 	cmpq	$32, %rax
  42b3f3:	7d 4e 	jge	78 <runtime.sigprofNonGo+0x73>
  42b3f5:	48 8d 0d c4 88 09 00 	leaq	624836(%rip), %rcx
  42b3fc:	48 8b 14 c1 	movq	(%rcx,%rax,8), %rdx
  42b400:	48 85 d2 	testq	%rdx, %rdx
  42b403:	75 e7 	jne	-25 <runtime.sigprofNonGo+0x1c>
  42b405:	48 83 f8 20 	cmpq	$32, %rax
  42b409:	77 41 	ja	65 <runtime.sigprofNonGo+0x7c>
  42b40b:	48 8d 15 0e cf 07 00 	leaq	511758(%rip), %rdx
  42b412:	48 89 14 24 	movq	%rdx, (%rsp)
  42b416:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  42b41b:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  42b420:	48 c7 44 24 18 20 00 00 00 	movq	$32, 24(%rsp)
  42b429:	e8 e2 92 fd ff 	callq	-159006 <runtime.(*cpuProfile).addNonGo>
  42b42e:	31 c0 	xorl	%eax, %eax
  42b430:	48 8d 0d c9 84 09 00 	leaq	623817(%rip), %rcx
  42b437:	87 01 	xchgl	%eax, (%rcx)
  42b439:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  42b43e:	48 83 c4 28 	addq	$40, %rsp
  42b442:	c3 	retq
  42b443:	48 8d 0d 76 88 09 00 	leaq	624758(%rip), %rcx
  42b44a:	eb bd 	jmp	-67 <runtime.sigprofNonGo+0x39>
  42b44c:	e8 5f 46 ff ff 	callq	-47521 <runtime.panicslice>
  42b451:	0f 0b 	ud2
  42b453:	cc 	int3
  42b454:	cc 	int3
  42b455:	cc 	int3
  42b456:	cc 	int3
  42b457:	cc 	int3
  42b458:	cc 	int3
  42b459:	cc 	int3
  42b45a:	cc 	int3
  42b45b:	cc 	int3
  42b45c:	cc 	int3
  42b45d:	cc 	int3
  42b45e:	cc 	int3
  42b45f:	cc 	int3

runtime.sigprofNonGoPC:
  42b460:	48 83 ec 48 	subq	$72, %rsp
  42b464:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  42b469:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  42b46e:	8b 05 40 85 09 00 	movl	623936(%rip), %eax
  42b474:	85 c0 	testl	%eax, %eax
  42b476:	75 0a 	jne	10 <runtime.sigprofNonGoPC+0x22>
  42b478:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  42b47d:	48 83 c4 48 	addq	$72, %rsp
  42b481:	c3 	retq
  42b482:	48 8d 05 57 b2 02 00 	leaq	176727(%rip), %rax
  42b489:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  42b48e:	48 8d 05 cb 2a 04 00 	leaq	273099(%rip), %rax
  42b495:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  42b49a:	b8 08 00 00 00 	movl	$8, %eax
  42b49f:	48 8d 4c 24 30 	leaq	48(%rsp), %rcx
  42b4a4:	48 8b 04 01 	movq	(%rcx,%rax), %rax
  42b4a8:	48 8d 4c 24 38 	leaq	56(%rsp), %rcx
  42b4ad:	84 01 	testb	%al, (%rcx)
  42b4af:	48 8b 00 	movq	(%rax), %rax
  42b4b2:	0f 57 c0 	xorps	%xmm0, %xmm0
  42b4b5:	0f 11 44 24 20 	movups	%xmm0, 32(%rsp)
  42b4ba:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  42b4bf:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  42b4c4:	48 ff c0 	incq	%rax
  42b4c7:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  42b4cc:	48 8d 05 4d ce 07 00 	leaq	511565(%rip), %rax
  42b4d3:	48 89 04 24 	movq	%rax, (%rsp)
  42b4d7:	48 8d 44 24 20 	leaq	32(%rsp), %rax
  42b4dc:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  42b4e1:	48 c7 44 24 10 02 00 00 00 	movq	$2, 16(%rsp)
  42b4ea:	48 c7 44 24 18 02 00 00 00 	movq	$2, 24(%rsp)
  42b4f3:	e8 18 92 fd ff 	callq	-159208 <runtime.(*cpuProfile).addNonGo>
  42b4f8:	e9 7b ff ff ff 	jmp	-133 <runtime.sigprofNonGoPC+0x18>
  42b4fd:	cc 	int3
  42b4fe:	cc 	int3
  42b4ff:	cc 	int3

runtime.setsSP:
  42b500:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42b509:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42b50d:	76 68 	jbe	104 <runtime.setsSP+0x77>
  42b50f:	48 83 ec 20 	subq	$32, %rsp
  42b513:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  42b518:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  42b51d:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42b522:	48 89 04 24 	movq	%rax, (%rsp)
  42b526:	e8 a5 cc 00 00 	callq	52389 <runtime.findfunc>
  42b52b:	48 8b 44 24 08 	movq	8(%rsp), %rax
  42b530:	48 85 c0 	testq	%rax, %rax
  42b533:	74 33 	je	51 <runtime.setsSP+0x68>
  42b535:	8b 40 10 	movl	16(%rax), %eax
  42b538:	8d 48 fd 	leal	-3(%rax), %ecx
  42b53b:	83 f9 01 	cmpl	$1, %ecx
  42b53e:	77 0f 	ja	15 <runtime.setsSP+0x4f>
  42b540:	c6 44 24 30 01 	movb	$1, 48(%rsp)
  42b545:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  42b54a:	48 83 c4 20 	addq	$32, %rsp
  42b54e:	c3 	retq
  42b54f:	83 f8 0f 	cmpl	$15, %eax
  42b552:	74 ec 	je	-20 <runtime.setsSP+0x40>
  42b554:	83 f8 11 	cmpl	$17, %eax
  42b557:	74 e7 	je	-25 <runtime.setsSP+0x40>
  42b559:	c6 44 24 30 00 	movb	$0, 48(%rsp)
  42b55e:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  42b563:	48 83 c4 20 	addq	$32, %rsp
  42b567:	c3 	retq
  42b568:	c6 44 24 30 01 	movb	$1, 48(%rsp)
  42b56d:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  42b572:	48 83 c4 20 	addq	$32, %rsp
  42b576:	c3 	retq
  42b577:	e8 f4 8f 01 00 	callq	102388 <runtime.morestack_noctxt>
  42b57c:	eb 82 	jmp	-126 <runtime.setsSP>
  42b57e:	cc 	int3
  42b57f:	cc 	int3

runtime.procresize:
  42b580:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42b589:	48 8d 44 24 c8 	leaq	-56(%rsp), %rax
  42b58e:	48 3b 41 10 	cmpq	16(%rcx), %rax
  42b592:	0f 86 3a 0a 00 00 	jbe	2618 <runtime.procresize+0xa52>
  42b598:	48 81 ec b8 00 00 00 	subq	$184, %rsp
  42b59f:	48 89 ac 24 b0 00 00 00 	movq	%rbp, 176(%rsp)
  42b5a7:	48 8d ac 24 b0 00 00 00 	leaq	176(%rsp), %rbp
  42b5af:	8b 05 2b 83 09 00 	movl	623403(%rip), %eax
  42b5b5:	85 c0 	testl	%eax, %eax
  42b5b7:	0f 8c fa 09 00 00 	jl	2554 <runtime.procresize+0xa37>
  42b5bd:	8b 8c 24 c0 00 00 00 	movl	192(%rsp), %ecx
  42b5c4:	85 c9 	testl	%ecx, %ecx
  42b5c6:	0f 8e eb 09 00 00 	jle	2539 <runtime.procresize+0xa37>
  42b5cc:	89 44 24 40 	movl	%eax, 64(%rsp)
  42b5d0:	0f b6 15 f9 81 08 00 	movzbl	557561(%rip), %edx
  42b5d7:	84 d2 	testb	%dl, %dl
  42b5d9:	0f 85 7f 09 00 00 	jne	2431 <runtime.procresize+0x9de>
  42b5df:	e8 4c c4 01 00 	callq	115788 <runtime.nanotime>
  42b5e4:	48 8b 04 24 	movq	(%rsp), %rax
  42b5e8:	48 8b 0d 49 c4 07 00 	movq	509001(%rip), %rcx
  42b5ef:	48 85 c9 	testq	%rcx, %rcx
  42b5f2:	0f 84 5a 09 00 00 	je	2394 <runtime.procresize+0x9d2>
  42b5f8:	8b 54 24 40 	movl	64(%rsp), %edx
  42b5fc:	48 63 da 	movslq	%edx, %rbx
  42b5ff:	48 89 c6 	movq	%rax, %rsi
  42b602:	48 29 c8 	subq	%rcx, %rax
  42b605:	48 0f af d8 	imulq	%rax, %rbx
  42b609:	48 03 1d 30 c4 07 00 	addq	508976(%rip), %rbx
  42b610:	48 89 1d 29 c4 07 00 	movq	%rbx, 508969(%rip)
  42b617:	48 89 35 1a c4 07 00 	movq	%rsi, 508954(%rip)
  42b61e:	48 8b 05 93 c0 07 00 	movq	508051(%rip), %rax
  42b625:	8b 8c 24 c0 00 00 00 	movl	192(%rsp), %ecx
  42b62c:	39 c1 	cmpl	%eax, %ecx
  42b62e:	0f 8f 00 08 00 00 	jg	2048 <runtime.procresize+0x8b4>
  42b634:	31 c0 	xorl	%eax, %eax
  42b636:	eb 02 	jmp	2 <runtime.procresize+0xba>
  42b638:	ff c0 	incl	%eax
  42b63a:	39 c8 	cmpl	%ecx, %eax
  42b63c:	0f 8d b4 01 00 00 	jge	436 <runtime.procresize+0x276>
  42b642:	48 8b 1d 67 c0 07 00 	movq	508007(%rip), %rbx
  42b649:	48 8b 35 68 c0 07 00 	movq	508008(%rip), %rsi
  42b650:	48 63 f8 	movslq	%eax, %rdi
  42b653:	48 39 f7 	cmpq	%rsi, %rdi
  42b656:	0f 83 4d 09 00 00 	jae	2381 <runtime.procresize+0xa29>
  42b65c:	89 44 24 4c 	movl	%eax, 76(%rsp)
  42b660:	48 8b 1c fb 	movq	(%rbx,%rdi,8), %rbx
  42b664:	48 85 db 	testq	%rbx, %rbx
  42b667:	74 5f 	je	95 <runtime.procresize+0x148>
  42b669:	48 8b 73 48 	movq	72(%rbx), %rsi
  42b66d:	48 85 f6 	testq	%rsi, %rsi
  42b670:	75 c6 	jne	-58 <runtime.procresize+0xb8>
  42b672:	48 89 5c 24 70 	movq	%rbx, 112(%rsp)
  42b677:	85 d2 	testl	%edx, %edx
  42b679:	75 27 	jne	39 <runtime.procresize+0x122>
  42b67b:	85 c0 	testl	%eax, %eax
  42b67d:	75 23 	jne	35 <runtime.procresize+0x122>
  42b67f:	64 48 8b 34 25 f8 ff ff ff 	movq	%fs:-8, %rsi
  42b688:	48 8b 76 30 	movq	48(%rsi), %rsi
  42b68c:	48 8b b6 60 01 00 00 	movq	352(%rsi), %rsi
  42b693:	48 85 f6 	testq	%rsi, %rsi
  42b696:	0f 84 eb 08 00 00 	je	2283 <runtime.procresize+0xa07>
  42b69c:	48 89 73 48 	movq	%rsi, 72(%rbx)
  42b6a0:	eb 96 	jmp	-106 <runtime.procresize+0xb8>
  42b6a2:	e8 79 2c fe ff 	callq	-119687 <runtime.allocmcache>
  42b6a7:	48 8b 04 24 	movq	(%rsp), %rax
  42b6ab:	48 8b 4c 24 70 	movq	112(%rsp), %rcx
  42b6b0:	48 89 41 48 	movq	%rax, 72(%rcx)
  42b6b4:	8b 44 24 4c 	movl	76(%rsp), %eax
  42b6b8:	8b 8c 24 c0 00 00 00 	movl	192(%rsp), %ecx
  42b6bf:	8b 54 24 40 	movl	64(%rsp), %edx
  42b6c3:	e9 70 ff ff ff 	jmp	-144 <runtime.procresize+0xb8>
  42b6c8:	48 89 7c 24 68 	movq	%rdi, 104(%rsp)
  42b6cd:	48 8d 05 ac c6 03 00 	leaq	247468(%rip), %rax
  42b6d4:	48 89 04 24 	movq	%rax, (%rsp)
  42b6d8:	e8 43 fa fd ff 	callq	-132541 <runtime.newobject>
  42b6dd:	48 8b 44 24 08 	movq	8(%rsp), %rax
  42b6e2:	8b 4c 24 4c 	movl	76(%rsp), %ecx
  42b6e6:	89 48 08 	movl	%ecx, 8(%rax)
  42b6e9:	c7 40 0c 03 00 00 00 	movl	$3, 12(%rax)
  42b6f0:	48 c7 80 08 0e 00 00 00 00 00 00 	movq	$0, 3592(%rax)
  42b6fb:	48 c7 80 10 0e 00 00 80 00 00 00 	movq	$128, 3600(%rax)
  42b706:	8b 15 04 83 09 00 	movl	623364(%rip), %edx
  42b70c:	48 8d b8 00 0e 00 00 	leaq	3584(%rax), %rdi
  42b713:	48 8d 98 18 0e 00 00 	leaq	3608(%rax), %rbx
  42b71a:	85 d2 	testl	%edx, %edx
  42b71c:	0f 85 c1 00 00 00 	jne	193 <runtime.procresize+0x263>
  42b722:	48 89 98 00 0e 00 00 	movq	%rbx, 3584(%rax)
  42b729:	31 d2 	xorl	%edx, %edx
  42b72b:	eb 04 	jmp	4 <runtime.procresize+0x1b1>
  42b72d:	49 8d 50 01 	leaq	1(%r8), %rdx
  42b731:	48 83 fa 05 	cmpq	$5, %rdx
  42b735:	7d 4b 	jge	75 <runtime.procresize+0x202>
  42b737:	48 8d 1c 52 	leaq	(%rdx,%rdx,2), %rbx
  42b73b:	48 c7 44 d8 60 00 00 00 00 	movq	$0, 96(%rax,%rbx,8)
  42b744:	48 c7 44 d8 68 20 00 00 00 	movq	$32, 104(%rax,%rbx,8)
  42b74d:	48 8d 7c d8 58 	leaq	88(%rax,%rbx,8), %rdi
  42b752:	8b 35 b8 82 09 00 	movl	623288(%rip), %esi
  42b758:	49 89 d0 	movq	%rdx, %r8
  42b75b:	48 c1 e2 08 	shlq	$8, %rdx
  42b75f:	48 8d 94 10 d0 00 00 00 	leaq	208(%rax,%rdx), %rdx
  42b767:	85 f6 	testl	%esi, %esi
  42b769:	75 07 	jne	7 <runtime.procresize+0x1f2>
  42b76b:	48 89 54 d8 58 	movq	%rdx, 88(%rax,%rbx,8)
  42b770:	eb bb 	jmp	-69 <runtime.procresize+0x1ad>
  42b772:	48 89 c3 	movq	%rax, %rbx
  42b775:	48 89 d0 	movq	%rdx, %rax
  42b778:	e8 23 b1 01 00 	callq	110883 <runtime.gcWriteBarrier>
  42b77d:	48 89 d8 	movq	%rbx, %rax
  42b780:	eb ab 	jmp	-85 <runtime.procresize+0x1ad>
  42b782:	48 89 44 24 70 	movq	%rax, 112(%rsp)
  42b787:	48 8d 88 90 12 00 00 	leaq	4752(%rax), %rcx
  42b78e:	48 89 0c 24 	movq	%rcx, (%rsp)
  42b792:	e8 b9 2c ff ff 	callq	-54087 <runtime.(*wbBuf).reset>
  42b797:	48 8b 05 1a bf 07 00 	movq	507674(%rip), %rax
  42b79e:	48 8b 0d 0b bf 07 00 	movq	507659(%rip), %rcx
  42b7a5:	48 8b 54 24 68 	movq	104(%rsp), %rdx
  42b7aa:	48 39 c2 	cmpq	%rax, %rdx
  42b7ad:	0f 83 ef 07 00 00 	jae	2031 <runtime.procresize+0xa22>
  42b7b3:	48 8d 04 d1 	leaq	(%rcx,%rdx,8), %rax
  42b7b7:	48 89 04 24 	movq	%rax, (%rsp)
  42b7bb:	48 8b 44 24 70 	movq	112(%rsp), %rax
  42b7c0:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  42b7c5:	e8 16 67 fd ff 	callq	-170218 <runtime.atomicstorep>
  42b7ca:	8b 44 24 4c 	movl	76(%rsp), %eax
  42b7ce:	8b 8c 24 c0 00 00 00 	movl	192(%rsp), %ecx
  42b7d5:	8b 54 24 40 	movl	64(%rsp), %edx
  42b7d9:	48 8b 5c 24 70 	movq	112(%rsp), %rbx
  42b7de:	e9 86 fe ff ff 	jmp	-378 <runtime.procresize+0xe9>
  42b7e3:	48 89 c2 	movq	%rax, %rdx
  42b7e6:	48 89 d8 	movq	%rbx, %rax
  42b7e9:	e8 b2 b0 01 00 	callq	110770 <runtime.gcWriteBarrier>
  42b7ee:	48 89 d0 	movq	%rdx, %rax
  42b7f1:	e9 33 ff ff ff 	jmp	-205 <runtime.procresize+0x1a9>
  42b7f6:	89 c8 	movl	%ecx, %eax
  42b7f8:	e9 3e 02 00 00 	jmp	574 <runtime.procresize+0x4bb>
  42b7fd:	ff 05 85 c1 07 00 	incl	508293(%rip)
  42b803:	8b b3 e0 05 00 00 	movl	1504(%rbx), %esi
  42b809:	8b bb e4 05 00 00 	movl	1508(%rbx), %edi
  42b80f:	39 fe 	cmpl	%edi, %esi
  42b811:	74 54 	je	84 <runtime.procresize+0x2e7>
  42b813:	8d 77 ff 	leal	-1(%rdi), %esi
  42b816:	89 b3 e4 05 00 00 	movl	%esi, 1508(%rbx)
  42b81c:	40 0f b6 f6 	movzbl	%sil, %esi
  42b820:	48 8b b4 f3 e8 05 00 00 	movq	1512(%rbx,%rsi,8), %rsi
  42b828:	48 8b 3d 49 c1 07 00 	movq	508233(%rip), %rdi
  42b82f:	48 89 be b8 00 00 00 	movq	%rdi, 184(%rsi)
  42b836:	48 8d 3d 3b c1 07 00 	leaq	508219(%rip), %rdi
  42b83d:	84 07 	testb	%al, (%rdi)
  42b83f:	48 89 f7 	movq	%rsi, %rdi
  42b842:	48 89 35 2f c1 07 00 	movq	%rsi, 508207(%rip)
  42b849:	48 8b 35 30 c1 07 00 	movq	508208(%rip), %rsi
  42b850:	48 85 f6 	testq	%rsi, %rsi
  42b853:	75 a8 	jne	-88 <runtime.procresize+0x27d>
  42b855:	48 8d 35 24 c1 07 00 	leaq	508196(%rip), %rsi
  42b85c:	84 06 	testb	%al, (%rsi)
  42b85e:	48 89 3d 1b c1 07 00 	movq	%rdi, 508187(%rip)
  42b865:	eb 96 	jmp	-106 <runtime.procresize+0x27d>
  42b867:	48 8b b3 e8 0d 00 00 	movq	3560(%rbx), %rsi
  42b86e:	48 85 f6 	testq	%rsi, %rsi
  42b871:	74 4e 	je	78 <runtime.procresize+0x341>
  42b873:	48 8b 3d fe c0 07 00 	movq	508158(%rip), %rdi
  42b87a:	48 89 be b8 00 00 00 	movq	%rdi, 184(%rsi)
  42b881:	48 8d 3d f0 c0 07 00 	leaq	508144(%rip), %rdi
  42b888:	84 07 	testb	%al, (%rdi)
  42b88a:	48 89 f7 	movq	%rsi, %rdi
  42b88d:	48 89 35 e4 c0 07 00 	movq	%rsi, 508132(%rip)
  42b894:	48 8b 35 e5 c0 07 00 	movq	508133(%rip), %rsi
  42b89b:	48 85 f6 	testq	%rsi, %rsi
  42b89e:	75 10 	jne	16 <runtime.procresize+0x330>
  42b8a0:	48 8d 35 d9 c0 07 00 	leaq	508121(%rip), %rsi
  42b8a7:	84 06 	testb	%al, (%rsi)
  42b8a9:	48 89 3d d0 c0 07 00 	movq	%rdi, 508112(%rip)
  42b8b0:	ff 05 d2 c0 07 00 	incl	508114(%rip)
  42b8b6:	48 c7 83 e8 0d 00 00 00 00 00 00 	movq	$0, 3560(%rbx)
  42b8c1:	48 8b b3 58 12 00 00 	movq	4696(%rbx), %rsi
  42b8c8:	48 8d bb 58 12 00 00 	leaq	4696(%rbx), %rdi
  42b8cf:	48 85 f6 	testq	%rsi, %rsi
  42b8d2:	0f 85 08 02 00 00 	jne	520 <runtime.procresize+0x560>
  42b8d8:	8b 35 fe 7f 09 00 	movl	622590(%rip), %esi
  42b8de:	85 f6 	testl	%esi, %esi
  42b8e0:	0f 85 cc 01 00 00 	jne	460 <runtime.procresize+0x532>
  42b8e6:	48 8d 83 18 0e 00 00 	leaq	3608(%rbx), %rax
  42b8ed:	48 89 04 24 	movq	%rax, (%rsp)
  42b8f1:	48 c7 44 24 08 00 04 00 00 	movq	$1024, 8(%rsp)
  42b8fa:	e8 81 04 fe ff 	callq	-129919 <runtime.memclrHasPointers>
  42b8ff:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  42b907:	48 8d 88 18 0e 00 00 	leaq	3608(%rax), %rcx
  42b90e:	84 01 	testb	%al, (%rcx)
  42b910:	48 c7 80 08 0e 00 00 00 00 00 00 	movq	$0, 3592(%rax)
  42b91b:	48 c7 80 10 0e 00 00 80 00 00 00 	movq	$128, 3600(%rax)
  42b926:	8b 15 e4 80 09 00 	movl	622820(%rip), %edx
  42b92c:	48 8d b8 00 0e 00 00 	leaq	3584(%rax), %rdi
  42b933:	85 d2 	testl	%edx, %edx
  42b935:	0f 85 64 01 00 00 	jne	356 <runtime.procresize+0x51f>
  42b93b:	48 89 88 00 0e 00 00 	movq	%rcx, 3584(%rax)
  42b942:	31 c9 	xorl	%ecx, %ecx
  42b944:	eb 07 	jmp	7 <runtime.procresize+0x3cd>
  42b946:	48 8d 48 01 	leaq	1(%rax), %rcx
  42b94a:	48 89 d0 	movq	%rdx, %rax
  42b94d:	48 83 f9 05 	cmpq	$5, %rcx
  42b951:	0f 8d 81 00 00 00 	jge	129 <runtime.procresize+0x458>
  42b957:	48 89 4c 24 60 	movq	%rcx, 96(%rsp)
  42b95c:	48 c1 e1 08 	shlq	$8, %rcx
  42b960:	48 89 4c 24 68 	movq	%rcx, 104(%rsp)
  42b965:	48 8d 9c 08 d0 00 00 00 	leaq	208(%rax,%rcx), %rbx
  42b96d:	48 89 1c 24 	movq	%rbx, (%rsp)
  42b971:	48 c7 44 24 08 00 01 00 00 	movq	$256, 8(%rsp)
  42b97a:	e8 01 04 fe ff 	callq	-130047 <runtime.memclrHasPointers>
  42b97f:	48 8b 44 24 60 	movq	96(%rsp), %rax
  42b984:	48 8d 0c 40 	leaq	(%rax,%rax,2), %rcx
  42b988:	48 8b 94 24 80 00 00 00 	movq	128(%rsp), %rdx
  42b990:	48 c7 44 ca 60 00 00 00 00 	movq	$0, 96(%rdx,%rcx,8)
  42b999:	48 c7 44 ca 68 20 00 00 00 	movq	$32, 104(%rdx,%rcx,8)
  42b9a2:	48 8b 5c 24 68 	movq	104(%rsp), %rbx
  42b9a7:	48 8d 9c 1a d0 00 00 00 	leaq	208(%rdx,%rbx), %rbx
  42b9af:	48 8d 7c ca 58 	leaq	88(%rdx,%rcx,8), %rdi
  42b9b4:	8b 35 56 80 09 00 	movl	622678(%rip), %esi
  42b9ba:	85 f6 	testl	%esi, %esi
  42b9bc:	75 07 	jne	7 <runtime.procresize+0x445>
  42b9be:	48 89 5c ca 58 	movq	%rbx, 88(%rdx,%rcx,8)
  42b9c3:	eb 81 	jmp	-127 <runtime.procresize+0x3c6>
  42b9c5:	48 89 c1 	movq	%rax, %rcx
  42b9c8:	48 89 d8 	movq	%rbx, %rax
  42b9cb:	e8 d0 ae 01 00 	callq	110288 <runtime.gcWriteBarrier>
  42b9d0:	48 89 c8 	movq	%rcx, %rax
  42b9d3:	e9 6e ff ff ff 	jmp	-146 <runtime.procresize+0x3c6>
  42b9d8:	48 8b 48 48 	movq	72(%rax), %rcx
  42b9dc:	48 89 0c 24 	movq	%rcx, (%rsp)
  42b9e0:	e8 eb 29 fe ff 	callq	-120341 <runtime.freemcache>
  42b9e5:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  42b9ed:	48 c7 40 48 00 00 00 00 	movq	$0, 72(%rax)
  42b9f5:	48 89 04 24 	movq	%rax, (%rsp)
  42b9f9:	e8 52 f2 ff ff 	callq	-3502 <runtime.gfpurge>
  42b9fe:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  42ba06:	48 89 04 24 	movq	%rax, (%rsp)
  42ba0a:	e8 41 db 00 00 	callq	56129 <runtime.traceProcFree>
  42ba0f:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  42ba17:	48 c7 80 48 12 00 00 00 00 00 00 	movq	$0, 4680(%rax)
  42ba22:	c7 40 0c 04 00 00 00 	movl	$4, 12(%rax)
  42ba29:	8b 44 24 48 	movl	72(%rsp), %eax
  42ba2d:	8d 48 01 	leal	1(%rax), %ecx
  42ba30:	8b 84 24 c0 00 00 00 	movl	192(%rsp), %eax
  42ba37:	8b 54 24 40 	movl	64(%rsp), %edx
  42ba3b:	39 d1 	cmpl	%edx, %ecx
  42ba3d:	0f 8d b1 01 00 00 	jge	433 <runtime.procresize+0x674>
  42ba43:	48 8b 1d 6e bc 07 00 	movq	506990(%rip), %rbx
  42ba4a:	48 8b 35 5f bc 07 00 	movq	506975(%rip), %rsi
  42ba51:	48 63 f9 	movslq	%ecx, %rdi
  42ba54:	48 39 df 	cmpq	%rbx, %rdi
  42ba57:	0f 83 23 05 00 00 	jae	1315 <runtime.procresize+0xa00>
  42ba5d:	89 4c 24 48 	movl	%ecx, 72(%rsp)
  42ba61:	48 8b 1c fe 	movq	(%rsi,%rdi,8), %rbx
  42ba65:	48 89 9c 24 80 00 00 00 	movq	%rbx, 128(%rsp)
  42ba6d:	0f b6 35 5c 7d 08 00 	movzbl	556380(%rip), %esi
  42ba74:	40 84 f6 	testb	%sil, %sil
  42ba77:	0f 84 86 fd ff ff 	je	-634 <runtime.procresize+0x283>
  42ba7d:	64 48 8b 34 25 f8 ff ff ff 	movq	%fs:-8, %rsi
  42ba86:	48 8b 76 30 	movq	48(%rsi), %rsi
  42ba8a:	48 8b b6 d0 00 00 00 	movq	208(%rsi), %rsi
  42ba91:	48 39 de 	cmpq	%rbx, %rsi
  42ba94:	0f 84 28 01 00 00 	je	296 <runtime.procresize+0x642>
  42ba9a:	e9 64 fd ff ff 	jmp	-668 <runtime.procresize+0x283>
  42ba9f:	48 89 c2 	movq	%rax, %rdx
  42baa2:	48 89 c8 	movq	%rcx, %rax
  42baa5:	e8 f6 ad 01 00 	callq	110070 <runtime.gcWriteBarrier>
  42baaa:	48 89 d0 	movq	%rdx, %rax
  42baad:	e9 90 fe ff ff 	jmp	-368 <runtime.procresize+0x3c2>
  42bab2:	48 89 1c 24 	movq	%rbx, (%rsp)
  42bab6:	e8 15 2b ff ff 	callq	-54507 <runtime.wbBufFlush1>
  42babb:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  42bac3:	48 8d 88 70 12 00 00 	leaq	4720(%rax), %rcx
  42baca:	48 89 0c 24 	movq	%rcx, (%rsp)
  42bace:	e8 ad d7 fe ff 	callq	-75859 <runtime.(*gcWork).dispose>
  42bad3:	48 8b 9c 24 80 00 00 00 	movq	128(%rsp), %rbx
  42badb:	e9 06 fe ff ff 	jmp	-506 <runtime.procresize+0x366>
  42bae0:	48 89 bc 24 a8 00 00 00 	movq	%rdi, 168(%rsp)
  42bae8:	48 89 b4 24 a0 00 00 00 	movq	%rsi, 160(%rsp)
  42baf0:	48 89 34 24 	movq	%rsi, (%rsp)
  42baf4:	48 b8 04 00 00 00 01 00 00 00 	movabsq	$4294967300, %rax
  42bafe:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  42bb03:	e8 78 8f ff ff 	callq	-28808 <runtime.casgstatus>
  42bb08:	0f b6 05 c1 7c 08 00 	movzbl	556225(%rip), %eax
  42bb0f:	84 c0 	testb	%al, %al
  42bb11:	0f 85 8c 00 00 00 	jne	140 <runtime.procresize+0x623>
  42bb17:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  42bb1f:	48 c7 80 b8 00 00 00 00 00 00 00 	movq	$0, 184(%rax)
  42bb2a:	48 8b 0d 4f be 07 00 	movq	507471(%rip), %rcx
  42bb31:	48 85 c9 	testq	%rcx, %rcx
  42bb34:	74 58 	je	88 <runtime.procresize+0x60e>
  42bb36:	48 8d 91 b8 00 00 00 	leaq	184(%rcx), %rdx
  42bb3d:	84 02 	testb	%al, (%rdx)
  42bb3f:	48 89 c2 	movq	%rax, %rdx
  42bb42:	48 89 81 b8 00 00 00 	movq	%rax, 184(%rcx)
  42bb49:	48 8d 35 30 be 07 00 	leaq	507440(%rip), %rsi
  42bb50:	84 06 	testb	%al, (%rsi)
  42bb52:	48 89 15 27 be 07 00 	movq	%rdx, 507431(%rip)
  42bb59:	ff 05 29 be 07 00 	incl	507433(%rip)
  42bb5f:	48 8b b4 24 a8 00 00 00 	movq	168(%rsp), %rsi
  42bb67:	84 06 	testb	%al, (%rsi)
  42bb69:	31 f6 	xorl	%esi, %esi
  42bb6b:	48 8b 9c 24 80 00 00 00 	movq	128(%rsp), %rbx
  42bb73:	48 89 b3 58 12 00 00 	movq	%rsi, 4696(%rbx)
  42bb7a:	8b 84 24 c0 00 00 00 	movl	192(%rsp), %eax
  42bb81:	8b 4c 24 48 	movl	72(%rsp), %ecx
  42bb85:	8b 54 24 40 	movl	64(%rsp), %edx
  42bb89:	e9 4a fd ff ff 	jmp	-694 <runtime.procresize+0x358>
  42bb8e:	48 8d 0d e3 bd 07 00 	leaq	507363(%rip), %rcx
  42bb95:	84 01 	testb	%al, (%rcx)
  42bb97:	48 89 c2 	movq	%rax, %rdx
  42bb9a:	48 89 05 d7 bd 07 00 	movq	%rax, 507351(%rip)
  42bba1:	eb a6 	jmp	-90 <runtime.procresize+0x5c9>
  42bba3:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  42bbab:	48 89 04 24 	movq	%rax, (%rsp)
  42bbaf:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  42bbb8:	e8 03 f1 00 00 	callq	61699 <runtime.traceGoUnpark>
  42bbbd:	e9 55 ff ff ff 	jmp	-171 <runtime.procresize+0x597>
  42bbc2:	e8 89 ef 00 00 	callq	61321 <runtime.traceGoSched>
  42bbc7:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  42bbcf:	48 89 04 24 	movq	%rax, (%rsp)
  42bbd3:	e8 18 e7 00 00 	callq	59160 <runtime.traceProcStop>
  42bbd8:	8b 84 24 c0 00 00 00 	movl	192(%rsp), %eax
  42bbdf:	8b 4c 24 48 	movl	72(%rsp), %ecx
  42bbe3:	8b 54 24 40 	movl	64(%rsp), %edx
  42bbe7:	48 8b 9c 24 80 00 00 00 	movq	128(%rsp), %rbx
  42bbef:	e9 0f fc ff ff 	jmp	-1009 <runtime.procresize+0x283>
  42bbf4:	48 8b 0d bd ba 07 00 	movq	506557(%rip), %rcx
  42bbfb:	39 c8 	cmpl	%ecx, %eax
  42bbfd:	0f 85 e4 01 00 00 	jne	484 <runtime.procresize+0x867>
  42bc03:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42bc0c:	48 89 8c 24 98 00 00 00 	movq	%rcx, 152(%rsp)
  42bc14:	48 8b 51 30 	movq	48(%rcx), %rdx
  42bc18:	48 8b 92 d0 00 00 00 	movq	208(%rdx), %rdx
  42bc1f:	48 85 d2 	testq	%rdx, %rdx
  42bc22:	0f 84 b7 01 00 00 	je	439 <runtime.procresize+0x85f>
  42bc28:	48 89 d3 	movq	%rdx, %rbx
  42bc2b:	8b 72 08 	movl	8(%rdx), %esi
  42bc2e:	39 c6 	cmpl	%eax, %esi
  42bc30:	0f 8d 26 01 00 00 	jge	294 <runtime.procresize+0x7dc>
  42bc36:	c7 42 0c 01 00 00 00 	movl	$1, 12(%rdx)
  42bc3d:	8d 50 ff 	leal	-1(%rax), %edx
  42bc40:	31 db 	xorl	%ebx, %ebx
  42bc42:	eb 02 	jmp	2 <runtime.procresize+0x6c6>
  42bc44:	ff ca 	decl	%edx
  42bc46:	48 89 5c 24 78 	movq	%rbx, 120(%rsp)
  42bc4b:	85 d2 	testl	%edx, %edx
  42bc4d:	0f 8c c8 00 00 00 	jl	200 <runtime.procresize+0x79b>
  42bc53:	48 8b 35 5e ba 07 00 	movq	506462(%rip), %rsi
  42bc5a:	48 8b 3d 4f ba 07 00 	movq	506447(%rip), %rdi
  42bc61:	4c 63 c2 	movslq	%edx, %r8
  42bc64:	49 39 f0 	cmpq	%rsi, %r8
  42bc67:	0f 83 fe 02 00 00 	jae	766 <runtime.procresize+0x9eb>
  42bc6d:	48 8b 71 30 	movq	48(%rcx), %rsi
  42bc71:	4a 8b 3c c7 	movq	(%rdi,%r8,8), %rdi
  42bc75:	48 8b b6 d0 00 00 00 	movq	208(%rsi), %rsi
  42bc7c:	48 39 fe 	cmpq	%rdi, %rsi
  42bc7f:	74 c3 	je	-61 <runtime.procresize+0x6c4>
  42bc81:	89 54 24 44 	movl	%edx, 68(%rsp)
  42bc85:	48 89 bc 24 88 00 00 00 	movq	%rdi, 136(%rsp)
  42bc8d:	c7 47 0c 00 00 00 00 	movl	$0, 12(%rdi)
  42bc94:	48 89 3c 24 	movq	%rdi, (%rsp)
  42bc98:	e8 73 21 00 00 	callq	8563 <runtime.runqempty>
  42bc9d:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  42bca2:	84 c0 	testb	%al, %al
  42bca4:	75 5d 	jne	93 <runtime.procresize+0x783>
  42bca6:	48 8b 05 8b bc 07 00 	movq	507019(%rip), %rax
  42bcad:	48 85 c0 	testq	%rax, %rax
  42bcb0:	74 15 	je	21 <runtime.procresize+0x747>
  42bcb2:	48 8b 88 58 01 00 00 	movq	344(%rax), %rcx
  42bcb9:	48 89 0d 78 bc 07 00 	movq	%rcx, 507000(%rip)
  42bcc0:	83 05 79 bc 07 00 ff 	addl	$-1, 507001(%rip)
  42bcc7:	48 8b 8c 24 88 00 00 00 	movq	136(%rsp), %rcx
  42bccf:	48 8d 51 40 	leaq	64(%rcx), %rdx
  42bcd3:	84 02 	testb	%al, (%rdx)
  42bcd5:	48 89 41 40 	movq	%rax, 64(%rcx)
  42bcd9:	48 8d 41 10 	leaq	16(%rcx), %rax
  42bcdd:	84 00 	testb	%al, (%rax)
  42bcdf:	48 8b 44 24 78 	movq	120(%rsp), %rax
  42bce4:	48 89 41 10 	movq	%rax, 16(%rcx)
  42bce8:	8b 84 24 c0 00 00 00 	movl	192(%rsp), %eax
  42bcef:	8b 54 24 44 	movl	68(%rsp), %edx
  42bcf3:	48 89 cb 	movq	%rcx, %rbx
  42bcf6:	48 8b 8c 24 98 00 00 00 	movq	152(%rsp), %rcx
  42bcfe:	e9 41 ff ff ff 	jmp	-191 <runtime.procresize+0x6c4>
  42bd03:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  42bd0b:	48 89 04 24 	movq	%rax, (%rsp)
  42bd0f:	e8 5c 20 00 00 	callq	8284 <runtime.pidleput>
  42bd14:	48 8b 4c 24 78 	movq	120(%rsp), %rcx
  42bd19:	eb cd 	jmp	-51 <runtime.procresize+0x768>
  42bd1b:	48 8d 0d 9e ba 07 00 	leaq	506526(%rip), %rcx
  42bd22:	48 89 0c 24 	movq	%rcx, (%rsp)
  42bd26:	89 44 24 08 	movl	%eax, 8(%rsp)
  42bd2a:	e8 31 27 00 00 	callq	10033 <runtime.(*randomOrder).reset>
  42bd2f:	8b 84 24 c0 00 00 00 	movl	192(%rsp), %eax
  42bd36:	48 8d 0d a3 7b 09 00 	leaq	621475(%rip), %rcx
  42bd3d:	87 01 	xchgl	%eax, (%rcx)
  42bd3f:	48 8b 44 24 78 	movq	120(%rsp), %rax
  42bd44:	48 89 84 24 c8 00 00 00 	movq	%rax, 200(%rsp)
  42bd4c:	48 8b ac 24 b0 00 00 00 	movq	176(%rsp), %rbp
  42bd54:	48 81 c4 b8 00 00 00 	addq	$184, %rsp
  42bd5b:	c3 	retq
  42bd5c:	48 85 db 	testq	%rbx, %rbx
  42bd5f:	74 08 	je	8 <runtime.procresize+0x7e9>
  42bd61:	48 c7 43 40 00 00 00 00 	movq	$0, 64(%rbx)
  42bd69:	48 8b 51 30 	movq	48(%rcx), %rdx
  42bd6d:	48 c7 82 d0 00 00 00 00 00 00 00 	movq	$0, 208(%rdx)
  42bd78:	48 8b 51 30 	movq	48(%rcx), %rdx
  42bd7c:	48 c7 82 60 01 00 00 00 00 00 00 	movq	$0, 352(%rdx)
  42bd87:	48 8b 15 2a b9 07 00 	movq	506154(%rip), %rdx
  42bd8e:	48 8b 1d 1b b9 07 00 	movq	506139(%rip), %rbx
  42bd95:	48 85 d2 	testq	%rdx, %rdx
  42bd98:	0f 86 d4 01 00 00 	jbe	468 <runtime.procresize+0x9f2>
  42bd9e:	48 8b 03 	movq	(%rbx), %rax
  42bda1:	48 c7 40 40 00 00 00 00 	movq	$0, 64(%rax)
  42bda9:	c7 40 0c 00 00 00 00 	movl	$0, 12(%rax)
  42bdb0:	48 89 04 24 	movq	%rax, (%rsp)
  42bdb4:	e8 27 02 00 00 	callq	551 <runtime.acquirep>
  42bdb9:	0f b6 05 10 7a 08 00 	movzbl	555536(%rip), %eax
  42bdc0:	84 c0 	testb	%al, %al
  42bdc2:	75 14 	jne	20 <runtime.procresize+0x858>
  42bdc4:	8b 84 24 c0 00 00 00 	movl	192(%rsp), %eax
  42bdcb:	48 8b 8c 24 98 00 00 00 	movq	152(%rsp), %rcx
  42bdd3:	e9 65 fe ff ff 	jmp	-411 <runtime.procresize+0x6bd>
  42bdd8:	e8 73 eb 00 00 	callq	60275 <runtime.traceGoStart>
  42bddd:	eb e5 	jmp	-27 <runtime.procresize+0x844>
  42bddf:	48 89 d3 	movq	%rdx, %rbx
  42bde2:	e9 78 ff ff ff 	jmp	-136 <runtime.procresize+0x7df>
  42bde7:	48 8d 05 32 7b 09 00 	leaq	621362(%rip), %rax
  42bdee:	48 89 04 24 	movq	%rax, (%rsp)
  42bdf2:	e8 29 d7 fd ff 	callq	-141527 <runtime.lock>
  42bdf7:	48 8b 05 c2 b8 07 00 	movq	506050(%rip), %rax
  42bdfe:	8b 8c 24 c0 00 00 00 	movl	192(%rsp), %ecx
  42be05:	48 63 d1 	movslq	%ecx, %rdx
  42be08:	48 39 c2 	cmpq	%rax, %rdx
  42be0b:	0f 87 68 01 00 00 	ja	360 <runtime.procresize+0x9f9>
  42be11:	48 89 15 a0 b8 07 00 	movq	%rdx, 506016(%rip)
  42be18:	48 8d 05 01 7b 09 00 	leaq	621313(%rip), %rax
  42be1f:	48 89 04 24 	movq	%rax, (%rsp)
  42be23:	e8 98 d8 fd ff 	callq	-141160 <runtime.unlock>
  42be28:	8b 84 24 c0 00 00 00 	movl	192(%rsp), %eax
  42be2f:	e9 cf fd ff ff 	jmp	-561 <runtime.procresize+0x683>
  42be34:	48 8d 05 e5 7a 09 00 	leaq	621285(%rip), %rax
  42be3b:	48 89 04 24 	movq	%rax, (%rsp)
  42be3f:	e8 dc d6 fd ff 	callq	-141604 <runtime.lock>
  42be44:	48 8b 05 75 b8 07 00 	movq	505973(%rip), %rax
  42be4b:	8b 8c 24 c0 00 00 00 	movl	192(%rsp), %ecx
  42be52:	39 c1 	cmpl	%eax, %ecx
  42be54:	7f 33 	jg	51 <runtime.procresize+0x909>
  42be56:	48 63 d1 	movslq	%ecx, %rdx
  42be59:	48 39 c2 	cmpq	%rax, %rdx
  42be5c:	0f 87 4e 01 00 00 	ja	334 <runtime.procresize+0xa30>
  42be62:	48 89 15 4f b8 07 00 	movq	%rdx, 505935(%rip)
  42be69:	48 8d 05 b0 7a 09 00 	leaq	621232(%rip), %rax
  42be70:	48 89 04 24 	movq	%rax, (%rsp)
  42be74:	e8 47 d8 fd ff 	callq	-141241 <runtime.unlock>
  42be79:	8b 8c 24 c0 00 00 00 	movl	192(%rsp), %ecx
  42be80:	8b 54 24 40 	movl	64(%rsp), %edx
  42be84:	e9 ab f7 ff ff 	jmp	-2133 <runtime.procresize+0xb4>
  42be89:	48 8d 05 f0 8a 02 00 	leaq	166640(%rip), %rax
  42be90:	48 89 04 24 	movq	%rax, (%rsp)
  42be94:	48 63 d1 	movslq	%ecx, %rdx
  42be97:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  42be9c:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  42bea1:	e8 ba 78 00 00 	callq	30906 <runtime.makeslice>
  42bea6:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42beab:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  42beb0:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  42beb5:	48 89 4c 24 50 	movq	%rcx, 80(%rsp)
  42beba:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  42bebf:	48 89 94 24 90 00 00 00 	movq	%rdx, 144(%rsp)
  42bec7:	48 8b 1d f2 b7 07 00 	movq	505842(%rip), %rbx
  42bece:	48 8b 35 db b7 07 00 	movq	505819(%rip), %rsi
  42bed5:	48 8d 3d a4 8a 02 00 	leaq	166564(%rip), %rdi
  42bedc:	48 89 3c 24 	movq	%rdi, (%rsp)
  42bee0:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  42bee5:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  42beea:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  42beef:	48 89 74 24 20 	movq	%rsi, 32(%rsp)
  42bef4:	48 89 5c 24 28 	movq	%rbx, 40(%rsp)
  42bef9:	48 89 5c 24 30 	movq	%rbx, 48(%rsp)
  42befe:	e8 dd fc fd ff 	callq	-131875 <runtime.typedslicecopy>
  42bf03:	48 8b 44 24 50 	movq	80(%rsp), %rax
  42bf08:	48 89 05 a9 b7 07 00 	movq	%rax, 505769(%rip)
  42bf0f:	48 8b 44 24 58 	movq	88(%rsp), %rax
  42bf14:	48 89 05 a5 b7 07 00 	movq	%rax, 505765(%rip)
  42bf1b:	8b 05 ef 7a 09 00 	movl	621295(%rip), %eax
  42bf21:	85 c0 	testl	%eax, %eax
  42bf23:	75 14 	jne	20 <runtime.procresize+0x9b9>
  42bf25:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  42bf2d:	48 89 05 7c b7 07 00 	movq	%rax, 505724(%rip)
  42bf34:	e9 30 ff ff ff 	jmp	-208 <runtime.procresize+0x8e9>
  42bf39:	48 8d 3d 70 b7 07 00 	leaq	505712(%rip), %rdi
  42bf40:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  42bf48:	e8 53 a9 01 00 	callq	108883 <runtime.gcWriteBarrier>
  42bf4d:	e9 17 ff ff ff 	jmp	-233 <runtime.procresize+0x8e9>
  42bf52:	8b 54 24 40 	movl	64(%rsp), %edx
  42bf56:	48 89 c6 	movq	%rax, %rsi
  42bf59:	e9 b9 f6 ff ff 	jmp	-2375 <runtime.procresize+0x97>
  42bf5e:	89 0c 24 	movl	%ecx, (%rsp)
  42bf61:	e8 8a e2 00 00 	callq	57994 <runtime.traceGomaxprocs>
  42bf66:	e9 74 f6 ff ff 	jmp	-2444 <runtime.procresize+0x5f>
  42bf6b:	e8 d0 3a ff ff 	callq	-50480 <runtime.panicindex>
  42bf70:	0f 0b 	ud2
  42bf72:	e8 c9 3a ff ff 	callq	-50487 <runtime.panicindex>
  42bf77:	0f 0b 	ud2
  42bf79:	e8 32 3b ff ff 	callq	-50382 <runtime.panicslice>
  42bf7e:	0f 0b 	ud2
  42bf80:	e8 bb 3a ff ff 	callq	-50501 <runtime.panicindex>
  42bf85:	0f 0b 	ud2
  42bf87:	48 8d 05 ec e9 03 00 	leaq	256492(%rip), %rax
  42bf8e:	48 89 04 24 	movq	%rax, (%rsp)
  42bf92:	48 c7 44 24 08 0f 00 00 00 	movq	$15, 8(%rsp)
  42bf9b:	e8 30 52 ff ff 	callq	-44496 <runtime.throw>
  42bfa0:	0f 0b 	ud2
  42bfa2:	e8 99 3a ff ff 	callq	-50535 <runtime.panicindex>
  42bfa7:	0f 0b 	ud2
  42bfa9:	e8 92 3a ff ff 	callq	-50542 <runtime.panicindex>
  42bfae:	0f 0b 	ud2
  42bfb0:	e8 fb 3a ff ff 	callq	-50437 <runtime.panicslice>
  42bfb5:	0f 0b 	ud2
  42bfb7:	48 8d 05 5d f7 03 00 	leaq	259933(%rip), %rax
  42bfbe:	48 89 04 24 	movq	%rax, (%rsp)
  42bfc2:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  42bfcb:	e8 00 52 ff ff 	callq	-44544 <runtime.throw>
  42bfd0:	0f 0b 	ud2
  42bfd2:	e8 99 85 01 00 	callq	99737 <runtime.morestack_noctxt>
  42bfd7:	e9 a4 f5 ff ff 	jmp	-2652 <runtime.procresize>
  42bfdc:	cc 	int3
  42bfdd:	cc 	int3
  42bfde:	cc 	int3
  42bfdf:	cc 	int3

runtime.acquirep:
  42bfe0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42bfe9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42bfed:	76 55 	jbe	85 <runtime.acquirep+0x64>
  42bfef:	48 83 ec 10 	subq	$16, %rsp
  42bff3:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  42bff8:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  42bffd:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42c002:	48 89 04 24 	movq	%rax, (%rsp)
  42c006:	e8 45 00 00 00 	callq	69 <runtime.acquirep1>
  42c00b:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  42c014:	48 8b 40 30 	movq	48(%rax), %rax
  42c018:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  42c01d:	48 8b 49 48 	movq	72(%rcx), %rcx
  42c021:	48 89 88 60 01 00 00 	movq	%rcx, 352(%rax)
  42c028:	0f b6 05 a1 77 08 00 	movzbl	554913(%rip), %eax
  42c02f:	84 c0 	testb	%al, %al
  42c031:	75 0a 	jne	10 <runtime.acquirep+0x5d>
  42c033:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  42c038:	48 83 c4 10 	addq	$16, %rsp
  42c03c:	c3 	retq
  42c03d:	e8 2e e2 00 00 	callq	57902 <runtime.traceProcStart>
  42c042:	eb ef 	jmp	-17 <runtime.acquirep+0x53>
  42c044:	e8 27 85 01 00 	callq	99623 <runtime.morestack_noctxt>
  42c049:	eb 95 	jmp	-107 <runtime.acquirep>
  42c04b:	cc 	int3
  42c04c:	cc 	int3
  42c04d:	cc 	int3
  42c04e:	cc 	int3
  42c04f:	cc 	int3

runtime.acquirep1:
  42c050:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42c059:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42c05d:	0f 86 63 01 00 00 	jbe	355 <runtime.acquirep1+0x176>
  42c063:	48 83 ec 30 	subq	$48, %rsp
  42c067:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  42c06c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  42c071:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  42c07a:	48 8b 48 30 	movq	48(%rax), %rcx
  42c07e:	48 8b 91 d0 00 00 00 	movq	208(%rcx), %rdx
  42c085:	48 8d 99 d0 00 00 00 	leaq	208(%rcx), %rbx
  42c08c:	48 85 d2 	testq	%rdx, %rdx
  42c08f:	0f 85 16 01 00 00 	jne	278 <runtime.acquirep1+0x15b>
  42c095:	48 8b 91 60 01 00 00 	movq	352(%rcx), %rdx
  42c09c:	48 85 d2 	testq	%rdx, %rdx
  42c09f:	0f 85 06 01 00 00 	jne	262 <runtime.acquirep1+0x15b>
  42c0a5:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  42c0aa:	48 8b 72 40 	movq	64(%rdx), %rsi
  42c0ae:	48 8d 7a 40 	leaq	64(%rdx), %rdi
  42c0b2:	48 85 f6 	testq	%rsi, %rsi
  42c0b5:	75 33 	jne	51 <runtime.acquirep1+0x9a>
  42c0b7:	44 8b 42 0c 	movl	12(%rdx), %r8d
  42c0bb:	45 85 c0 	testl	%r8d, %r8d
  42c0be:	75 27 	jne	39 <runtime.acquirep1+0x97>
  42c0c0:	84 03 	testb	%al, (%rbx)
  42c0c2:	48 89 d3 	movq	%rdx, %rbx
  42c0c5:	48 89 91 d0 00 00 00 	movq	%rdx, 208(%rcx)
  42c0cc:	84 07 	testb	%al, (%rdi)
  42c0ce:	48 8b 40 30 	movq	48(%rax), %rax
  42c0d2:	48 89 43 40 	movq	%rax, 64(%rbx)
  42c0d6:	c7 43 0c 01 00 00 00 	movl	$1, 12(%rbx)
  42c0dd:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  42c0e2:	48 83 c4 30 	addq	$48, %rsp
  42c0e6:	c3 	retq
  42c0e7:	48 85 f6 	testq	%rsi, %rsi
  42c0ea:	48 89 74 24 20 	movq	%rsi, 32(%rsp)
  42c0ef:	74 0c 	je	12 <runtime.acquirep1+0xad>
  42c0f1:	48 8b 8e e0 00 00 00 	movq	224(%rsi), %rcx
  42c0f8:	48 89 c8 	movq	%rcx, %rax
  42c0fb:	eb 02 	jmp	2 <runtime.acquirep1+0xaf>
  42c0fd:	31 c0 	xorl	%eax, %eax
  42c0ff:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  42c104:	8b 4a 0c 	movl	12(%rdx), %ecx
  42c107:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  42c10c:	e8 ef 59 ff ff 	callq	-42513 <runtime.printlock>
  42c111:	48 8d 05 35 e8 03 00 	leaq	256053(%rip), %rax
  42c118:	48 89 04 24 	movq	%rax, (%rsp)
  42c11c:	48 c7 44 24 08 0f 00 00 00 	movq	$15, 8(%rsp)
  42c125:	e8 16 63 ff ff 	callq	-40170 <runtime.printstring>
  42c12a:	48 8b 44 24 20 	movq	32(%rsp), %rax
  42c12f:	48 89 04 24 	movq	%rax, (%rsp)
  42c133:	e8 38 60 ff ff 	callq	-40904 <runtime.printuint>
  42c138:	48 8d 05 12 db 03 00 	leaq	252690(%rip), %rax
  42c13f:	48 89 04 24 	movq	%rax, (%rsp)
  42c143:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  42c14c:	e8 ef 62 ff ff 	callq	-40209 <runtime.printstring>
  42c151:	48 8b 44 24 10 	movq	16(%rsp), %rax
  42c156:	48 89 04 24 	movq	%rax, (%rsp)
  42c15a:	e8 21 61 ff ff 	callq	-40671 <runtime.printint>
  42c15f:	48 8d 05 18 e4 03 00 	leaq	255000(%rip), %rax
  42c166:	48 89 04 24 	movq	%rax, (%rsp)
  42c16a:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  42c173:	e8 c8 62 ff ff 	callq	-40248 <runtime.printstring>
  42c178:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42c17d:	48 89 04 24 	movq	%rax, (%rsp)
  42c181:	e8 ea 5f ff ff 	callq	-40982 <runtime.printuint>
  42c186:	e8 05 5c ff ff 	callq	-41979 <runtime.printnl>
  42c18b:	e8 f0 59 ff ff 	callq	-42512 <runtime.printunlock>
  42c190:	48 8d 05 01 f8 03 00 	leaq	260097(%rip), %rax
  42c197:	48 89 04 24 	movq	%rax, (%rsp)
  42c19b:	48 c7 44 24 08 19 00 00 00 	movq	$25, 8(%rsp)
  42c1a4:	e8 27 50 ff ff 	callq	-45017 <runtime.throw>
  42c1a9:	0f 0b 	ud2
  42c1ab:	48 8d 05 55 f4 03 00 	leaq	259157(%rip), %rax
  42c1b2:	48 89 04 24 	movq	%rax, (%rsp)
  42c1b6:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  42c1bf:	e8 0c 50 ff ff 	callq	-45044 <runtime.throw>
  42c1c4:	0f 0b 	ud2
  42c1c6:	e8 a5 83 01 00 	callq	99237 <runtime.morestack_noctxt>
  42c1cb:	e9 80 fe ff ff 	jmp	-384 <runtime.acquirep1>

runtime.releasep:
  42c1d0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42c1d9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42c1dd:	0f 86 0a 02 00 00 	jbe	522 <runtime.releasep+0x21d>
  42c1e3:	48 83 ec 50 	subq	$80, %rsp
  42c1e7:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  42c1ec:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  42c1f1:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  42c1fa:	48 8b 48 30 	movq	48(%rax), %rcx
  42c1fe:	48 8b 91 d0 00 00 00 	movq	208(%rcx), %rdx
  42c205:	48 85 d2 	testq	%rdx, %rdx
  42c208:	0f 84 c4 01 00 00 	je	452 <runtime.releasep+0x202>
  42c20e:	48 8b 99 60 01 00 00 	movq	352(%rcx), %rbx
  42c215:	48 85 db 	testq	%rbx, %rbx
  42c218:	0f 84 b4 01 00 00 	je	436 <runtime.releasep+0x202>
  42c21e:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  42c223:	48 89 5c 24 38 	movq	%rbx, 56(%rsp)
  42c228:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  42c22d:	48 8b 72 40 	movq	64(%rdx), %rsi
  42c231:	48 89 74 24 10 	movq	%rsi, 16(%rsp)
  42c236:	48 39 ce 	cmpq	%rcx, %rsi
  42c239:	75 72 	jne	114 <runtime.releasep+0xdd>
  42c23b:	48 8b 72 48 	movq	72(%rdx), %rsi
  42c23f:	48 39 de 	cmpq	%rbx, %rsi
  42c242:	75 69 	jne	105 <runtime.releasep+0xdd>
  42c244:	8b 72 0c 	movl	12(%rdx), %esi
  42c247:	83 fe 01 	cmpl	$1, %esi
  42c24a:	75 61 	jne	97 <runtime.releasep+0xdd>
  42c24c:	0f b6 0d 7d 75 08 00 	movzbl	554365(%rip), %ecx
  42c253:	84 c9 	testb	%cl, %cl
  42c255:	75 3c 	jne	60 <runtime.releasep+0xc3>
  42c257:	48 8b 48 30 	movq	48(%rax), %rcx
  42c25b:	48 c7 81 d0 00 00 00 00 00 00 00 	movq	$0, 208(%rcx)
  42c266:	48 8b 40 30 	movq	48(%rax), %rax
  42c26a:	48 c7 80 60 01 00 00 00 00 00 00 	movq	$0, 352(%rax)
  42c275:	48 c7 42 40 00 00 00 00 	movq	$0, 64(%rdx)
  42c27d:	c7 42 0c 00 00 00 00 	movl	$0, 12(%rdx)
  42c284:	48 89 54 24 58 	movq	%rdx, 88(%rsp)
  42c289:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  42c28e:	48 83 c4 50 	addq	$80, %rsp
  42c292:	c3 	retq
  42c293:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  42c298:	48 89 14 24 	movq	%rdx, (%rsp)
  42c29c:	e8 4f e0 00 00 	callq	57423 <runtime.traceProcStop>
  42c2a1:	48 8b 44 24 20 	movq	32(%rsp), %rax
  42c2a6:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  42c2ab:	eb aa 	jmp	-86 <runtime.releasep+0x87>
  42c2ad:	8b 42 0c 	movl	12(%rdx), %eax
  42c2b0:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  42c2b5:	48 8b 4a 48 	movq	72(%rdx), %rcx
  42c2b9:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  42c2be:	e8 3d 58 ff ff 	callq	-42947 <runtime.printlock>
  42c2c3:	48 8d 05 68 e3 03 00 	leaq	254824(%rip), %rax
  42c2ca:	48 89 04 24 	movq	%rax, (%rsp)
  42c2ce:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  42c2d7:	e8 64 61 ff ff 	callq	-40604 <runtime.printstring>
  42c2dc:	48 8b 44 24 40 	movq	64(%rsp), %rax
  42c2e1:	48 89 04 24 	movq	%rax, (%rsp)
  42c2e5:	e8 16 61 ff ff 	callq	-40682 <runtime.printpointer>
  42c2ea:	48 8d 05 20 db 03 00 	leaq	252704(%rip), %rax
  42c2f1:	48 89 04 24 	movq	%rax, (%rsp)
  42c2f5:	48 c7 44 24 08 06 00 00 00 	movq	$6, 8(%rsp)
  42c2fe:	e8 3d 61 ff ff 	callq	-40643 <runtime.printstring>
  42c303:	48 8b 44 24 30 	movq	48(%rsp), %rax
  42c308:	48 89 04 24 	movq	%rax, (%rsp)
  42c30c:	e8 ef 60 ff ff 	callq	-40721 <runtime.printpointer>
  42c311:	48 8d 05 ff da 03 00 	leaq	252671(%rip), %rax
  42c318:	48 89 04 24 	movq	%rax, (%rsp)
  42c31c:	48 c7 44 24 08 06 00 00 00 	movq	$6, 8(%rsp)
  42c325:	e8 16 61 ff ff 	callq	-40682 <runtime.printstring>
  42c32a:	48 8b 44 24 10 	movq	16(%rsp), %rax
  42c32f:	48 89 04 24 	movq	%rax, (%rsp)
  42c333:	e8 38 5e ff ff 	callq	-41416 <runtime.printuint>
  42c338:	48 8d 05 a6 e0 03 00 	leaq	254118(%rip), %rax
  42c33f:	48 89 04 24 	movq	%rax, (%rsp)
  42c343:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  42c34c:	e8 ef 60 ff ff 	callq	-40721 <runtime.printstring>
  42c351:	48 8b 44 24 38 	movq	56(%rsp), %rax
  42c356:	48 89 04 24 	movq	%rax, (%rsp)
  42c35a:	e8 a1 60 ff ff 	callq	-40799 <runtime.printpointer>
  42c35f:	48 8d 05 a0 e0 03 00 	leaq	254112(%rip), %rax
  42c366:	48 89 04 24 	movq	%rax, (%rsp)
  42c36a:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  42c373:	e8 c8 60 ff ff 	callq	-40760 <runtime.printstring>
  42c378:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42c37d:	48 89 04 24 	movq	%rax, (%rsp)
  42c381:	e8 7a 60 ff ff 	callq	-40838 <runtime.printpointer>
  42c386:	48 8d 05 84 e0 03 00 	leaq	254084(%rip), %rax
  42c38d:	48 89 04 24 	movq	%rax, (%rsp)
  42c391:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  42c39a:	e8 a1 60 ff ff 	callq	-40799 <runtime.printstring>
  42c39f:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42c3a4:	48 89 04 24 	movq	%rax, (%rsp)
  42c3a8:	e8 c3 5d ff ff 	callq	-41533 <runtime.printuint>
  42c3ad:	e8 de 59 ff ff 	callq	-42530 <runtime.printnl>
  42c3b2:	e8 c9 57 ff ff 	callq	-43063 <runtime.printunlock>
  42c3b7:	48 8d 05 bb f6 03 00 	leaq	259771(%rip), %rax
  42c3be:	48 89 04 24 	movq	%rax, (%rsp)
  42c3c2:	48 c7 44 24 08 19 00 00 00 	movq	$25, 8(%rsp)
  42c3cb:	e8 00 4e ff ff 	callq	-45568 <runtime.throw>
  42c3d0:	0f 0b 	ud2
  42c3d2:	48 8d 05 19 ef 03 00 	leaq	257817(%rip), %rax
  42c3d9:	48 89 04 24 	movq	%rax, (%rsp)
  42c3dd:	48 c7 44 24 08 15 00 00 00 	movq	$21, 8(%rsp)
  42c3e6:	e8 e5 4d ff ff 	callq	-45595 <runtime.throw>
  42c3eb:	0f 0b 	ud2
  42c3ed:	e8 7e 81 01 00 	callq	98686 <runtime.morestack_noctxt>
  42c3f2:	e9 d9 fd ff ff 	jmp	-551 <runtime.releasep>
  42c3f7:	cc 	int3
  42c3f8:	cc 	int3
  42c3f9:	cc 	int3
  42c3fa:	cc 	int3
  42c3fb:	cc 	int3
  42c3fc:	cc 	int3
  42c3fd:	cc 	int3
  42c3fe:	cc 	int3
  42c3ff:	cc 	int3

runtime.incidlelocked:
  42c400:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42c409:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42c40d:	76 55 	jbe	85 <runtime.incidlelocked+0x64>
  42c40f:	48 83 ec 10 	subq	$16, %rsp
  42c413:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  42c418:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  42c41d:	48 8d 05 0c b5 07 00 	leaq	505100(%rip), %rax
  42c424:	48 89 04 24 	movq	%rax, (%rsp)
  42c428:	e8 f3 d0 fd ff 	callq	-143117 <runtime.lock>
  42c42d:	8b 05 11 b5 07 00 	movl	505105(%rip), %eax
  42c433:	8b 4c 24 18 	movl	24(%rsp), %ecx
  42c437:	01 c8 	addl	%ecx, %eax
  42c439:	89 05 05 b5 07 00 	movl	%eax, 505093(%rip)
  42c43f:	85 c9 	testl	%ecx, %ecx
  42c441:	7f 1a 	jg	26 <runtime.incidlelocked+0x5d>
  42c443:	48 8d 05 e6 b4 07 00 	leaq	505062(%rip), %rax
  42c44a:	48 89 04 24 	movq	%rax, (%rsp)
  42c44e:	e8 6d d2 fd ff 	callq	-142739 <runtime.unlock>
  42c453:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  42c458:	48 83 c4 10 	addq	$16, %rsp
  42c45c:	c3 	retq
  42c45d:	e8 0e 00 00 00 	callq	14 <runtime.checkdead>
  42c462:	eb df 	jmp	-33 <runtime.incidlelocked+0x43>
  42c464:	e8 07 81 01 00 	callq	98567 <runtime.morestack_noctxt>
  42c469:	eb 95 	jmp	-107 <runtime.incidlelocked>
  42c46b:	cc 	int3
  42c46c:	cc 	int3
  42c46d:	cc 	int3
  42c46e:	cc 	int3
  42c46f:	cc 	int3

runtime.checkdead:
  42c470:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42c479:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42c47d:	0f 86 56 04 00 00 	jbe	1110 <runtime.checkdead+0x469>
  42c483:	48 83 ec 50 	subq	$80, %rsp
  42c487:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  42c48c:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  42c491:	0f b6 05 15 74 09 00 	movzbl	619541(%rip), %eax
  42c498:	84 c0 	testb	%al, %al
  42c49a:	0f 85 2e 02 00 00 	jne	558 <runtime.checkdead+0x25e>
  42c4a0:	0f b6 05 04 74 09 00 	movzbl	619524(%rip), %eax
  42c4a7:	84 c0 	testb	%al, %al
  42c4a9:	0f 85 1f 02 00 00 	jne	543 <runtime.checkdead+0x25e>
  42c4af:	8b 05 3f 74 09 00 	movl	619583(%rip), %eax
  42c4b5:	85 c0 	testl	%eax, %eax
  42c4b7:	0f 87 07 02 00 00 	ja	519 <runtime.checkdead+0x254>
  42c4bd:	8b 05 7d b4 07 00 	movl	504957(%rip), %eax
  42c4c3:	48 8b 0d 7e b4 07 00 	movq	504958(%rip), %rcx
  42c4ca:	48 2b 0d 87 b4 07 00 	subq	504967(%rip), %rcx
  42c4d1:	48 89 ca 	movq	%rcx, %rdx
  42c4d4:	29 c1 	subl	%eax, %ecx
  42c4d6:	8b 1d 68 b4 07 00 	movl	504936(%rip), %ebx
  42c4dc:	29 d9 	subl	%ebx, %ecx
  42c4de:	8b 35 70 b4 07 00 	movl	504944(%rip), %esi
  42c4e4:	29 f1 	subl	%esi, %ecx
  42c4e6:	85 c9 	testl	%ecx, %ecx
  42c4e8:	0f 8f cc 01 00 00 	jg	460 <runtime.checkdead+0x24a>
  42c4ee:	0f 8c 05 03 00 00 	jl	773 <runtime.checkdead+0x389>
  42c4f4:	48 8d 05 1d 74 09 00 	leaq	619549(%rip), %rax
  42c4fb:	48 89 04 24 	movq	%rax, (%rsp)
  42c4ff:	e8 1c d0 fd ff 	callq	-143332 <runtime.lock>
  42c504:	31 c0 	xorl	%eax, %eax
  42c506:	48 89 c1 	movq	%rax, %rcx
  42c509:	eb 0e 	jmp	14 <runtime.checkdead+0xa9>
  42c50b:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  42c510:	48 ff c2 	incq	%rdx
  42c513:	48 89 c1 	movq	%rax, %rcx
  42c516:	48 89 d0 	movq	%rdx, %rax
  42c519:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  42c51e:	48 8b 15 73 b1 07 00 	movq	504179(%rip), %rdx
  42c525:	48 8b 1d 64 b1 07 00 	movq	504164(%rip), %rbx
  42c52c:	48 39 d0 	cmpq	%rdx, %rax
  42c52f:	7d 5f 	jge	95 <runtime.checkdead+0x120>
  42c531:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  42c536:	48 8b 0c c3 	movq	(%rbx,%rax,8), %rcx
  42c53a:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  42c53f:	48 89 0c 24 	movq	%rcx, (%rsp)
  42c543:	e8 e8 1e 01 00 	callq	73448 <runtime.isSystemGoroutine>
  42c548:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  42c54d:	84 c0 	testb	%al, %al
  42c54f:	74 07 	je	7 <runtime.checkdead+0xe8>
  42c551:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42c556:	eb b3 	jmp	-77 <runtime.checkdead+0x9b>
  42c558:	48 8b 44 24 38 	movq	56(%rsp), %rax
  42c55d:	8b 88 90 00 00 00 	movl	144(%rax), %ecx
  42c563:	89 ca 	movl	%ecx, %edx
  42c565:	81 e1 ff ef ff ff 	andl	$4294963199, %ecx
  42c56b:	8d 59 ff 	leal	-1(%rcx), %ebx
  42c56e:	83 fb 02 	cmpl	$2, %ebx
  42c571:	0f 86 e4 01 00 00 	jbe	484 <runtime.checkdead+0x2eb>
  42c577:	83 f9 04 	cmpl	$4, %ecx
  42c57a:	75 0a 	jne	10 <runtime.checkdead+0x116>
  42c57c:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42c581:	48 ff c0 	incq	%rax
  42c584:	eb 85 	jmp	-123 <runtime.checkdead+0x9b>
  42c586:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42c58b:	e9 7b ff ff ff 	jmp	-133 <runtime.checkdead+0x9b>
  42c590:	48 8d 05 81 73 09 00 	leaq	619393(%rip), %rax
  42c597:	48 89 04 24 	movq	%rax, (%rsp)
  42c59b:	e8 20 d1 fd ff 	callq	-143072 <runtime.unlock>
  42c5a0:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42c5a5:	48 85 c0 	testq	%rax, %rax
  42c5a8:	0f 84 92 01 00 00 	je	402 <runtime.checkdead+0x2d0>
  42c5ae:	e8 bd cc 00 00 	callq	52413 <runtime.timejump>
  42c5b3:	48 8b 04 24 	movq	(%rsp), %rax
  42c5b7:	48 85 c0 	testq	%rax, %rax
  42c5ba:	0f 84 4e 01 00 00 	je	334 <runtime.checkdead+0x29e>
  42c5c0:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  42c5c5:	48 b8 04 00 00 00 01 00 00 00 	movabsq	$4294967300, %rax
  42c5cf:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  42c5d4:	e8 a7 84 ff ff 	callq	-31577 <runtime.casgstatus>
  42c5d9:	48 8b 44 24 40 	movq	64(%rsp), %rax
  42c5de:	48 c7 80 b8 00 00 00 00 00 00 00 	movq	$0, 184(%rax)
  42c5e9:	48 8b 0d 90 b3 07 00 	movq	504720(%rip), %rcx
  42c5f0:	48 85 c9 	testq	%rcx, %rcx
  42c5f3:	0f 84 a9 00 00 00 	je	169 <runtime.checkdead+0x232>
  42c5f9:	48 8d 91 b8 00 00 00 	leaq	184(%rcx), %rdx
  42c600:	84 02 	testb	%al, (%rdx)
  42c602:	48 89 c2 	movq	%rax, %rdx
  42c605:	48 89 81 b8 00 00 00 	movq	%rax, 184(%rcx)
  42c60c:	48 8d 05 6d b3 07 00 	leaq	504685(%rip), %rax
  42c613:	84 00 	testb	%al, (%rax)
  42c615:	48 89 15 64 b3 07 00 	movq	%rdx, 504676(%rip)
  42c61c:	ff 05 66 b3 07 00 	incl	504678(%rip)
  42c622:	48 8b 05 3f b3 07 00 	movq	504639(%rip), %rax
  42c629:	48 85 c0 	testq	%rax, %rax
  42c62c:	74 1e 	je	30 <runtime.checkdead+0x1dc>
  42c62e:	48 8b 48 10 	movq	16(%rax), %rcx
  42c632:	48 89 0d 2f b3 07 00 	movq	%rcx, 504623(%rip)
  42c639:	b9 ff ff ff ff 	movl	$4294967295, %ecx
  42c63e:	48 8d 15 2b b3 07 00 	leaq	504619(%rip), %rdx
  42c645:	f0 	lock
  42c646:	0f c1 0a 	xaddl	%ecx, (%rdx)
  42c649:	48 85 c0 	testq	%rax, %rax
  42c64c:	0f 84 a1 00 00 00 	je	161 <runtime.checkdead+0x283>
  42c652:	48 8b 0d df b2 07 00 	movq	504543(%rip), %rcx
  42c659:	48 85 c9 	testq	%rcx, %rcx
  42c65c:	74 18 	je	24 <runtime.checkdead+0x206>
  42c65e:	48 8b 91 58 01 00 00 	movq	344(%rcx), %rdx
  42c665:	48 89 15 cc b2 07 00 	movq	%rdx, 504524(%rip)
  42c66c:	83 05 cd b2 07 00 ff 	addl	$-1, 504525(%rip)
  42c673:	48 85 c9 	testq	%rcx, %rcx
  42c676:	74 60 	je	96 <runtime.checkdead+0x268>
  42c678:	48 8d 91 d8 00 00 00 	leaq	216(%rcx), %rdx
  42c67f:	84 02 	testb	%al, (%rdx)
  42c681:	48 89 81 d8 00 00 00 	movq	%rax, 216(%rcx)
  42c688:	48 8d 81 48 01 00 00 	leaq	328(%rcx), %rax
  42c68f:	48 89 04 24 	movq	%rax, (%rsp)
  42c693:	e8 f8 d0 fd ff 	callq	-143112 <runtime.notewakeup>
  42c698:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  42c69d:	48 83 c4 50 	addq	$80, %rsp
  42c6a1:	c3 	retq
  42c6a2:	48 8d 0d cf b2 07 00 	leaq	504527(%rip), %rcx
  42c6a9:	84 01 	testb	%al, (%rcx)
  42c6ab:	48 89 c2 	movq	%rax, %rdx
  42c6ae:	48 89 05 c3 b2 07 00 	movq	%rax, 504515(%rip)
  42c6b5:	e9 52 ff ff ff 	jmp	-174 <runtime.checkdead+0x19c>
  42c6ba:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  42c6bf:	48 83 c4 50 	addq	$80, %rsp
  42c6c3:	c3 	retq
  42c6c4:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  42c6c9:	48 83 c4 50 	addq	$80, %rsp
  42c6cd:	c3 	retq
  42c6ce:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  42c6d3:	48 83 c4 50 	addq	$80, %rsp
  42c6d7:	c3 	retq
  42c6d8:	48 8d 05 36 f3 03 00 	leaq	258870(%rip), %rax
  42c6df:	48 89 04 24 	movq	%rax, (%rsp)
  42c6e3:	48 c7 44 24 08 19 00 00 00 	movq	$25, 8(%rsp)
  42c6ec:	e8 df 4a ff ff 	callq	-46369 <runtime.throw>
  42c6f1:	0f 0b 	ud2
  42c6f3:	48 8d 05 34 f3 03 00 	leaq	258868(%rip), %rax
  42c6fa:	48 89 04 24 	movq	%rax, (%rsp)
  42c6fe:	48 c7 44 24 08 19 00 00 00 	movq	$25, 8(%rsp)
  42c707:	e8 c4 4a ff ff 	callq	-46396 <runtime.throw>
  42c70c:	0f 0b 	ud2
  42c70e:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  42c717:	48 8b 40 30 	movq	48(%rax), %rax
  42c71b:	c7 80 ec 00 00 00 ff ff ff ff 	movl	$4294967295, 236(%rax)
  42c725:	48 8d 05 64 08 04 00 	leaq	264292(%rip), %rax
  42c72c:	48 89 04 24 	movq	%rax, (%rsp)
  42c730:	48 c7 44 24 08 25 00 00 00 	movq	$37, 8(%rsp)
  42c739:	e8 92 4a ff ff 	callq	-46446 <runtime.throw>
  42c73e:	0f 0b 	ud2
  42c740:	48 8d 05 7d 14 04 00 	leaq	267389(%rip), %rax
  42c747:	48 89 04 24 	movq	%rax, (%rsp)
  42c74b:	48 c7 44 24 08 36 00 00 00 	movq	$54, 8(%rsp)
  42c754:	e8 77 4a ff ff 	callq	-46473 <runtime.throw>
  42c759:	0f 0b 	ud2
  42c75b:	89 54 24 1c 	movl	%edx, 28(%rsp)
  42c75f:	48 8d 05 b2 71 09 00 	leaq	618930(%rip), %rax
  42c766:	48 89 04 24 	movq	%rax, (%rsp)
  42c76a:	e8 51 cf fd ff 	callq	-143535 <runtime.unlock>
  42c76f:	48 8b 44 24 38 	movq	56(%rsp), %rax
  42c774:	48 8b 80 98 00 00 00 	movq	152(%rax), %rax
  42c77b:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  42c780:	e8 7b 53 ff ff 	callq	-44165 <runtime.printlock>
  42c785:	48 8d 05 cd f6 03 00 	leaq	259789(%rip), %rax
  42c78c:	48 89 04 24 	movq	%rax, (%rsp)
  42c790:	48 c7 44 24 08 1b 00 00 00 	movq	$27, 8(%rsp)
  42c799:	e8 a2 5c ff ff 	callq	-41822 <runtime.printstring>
  42c79e:	48 8b 44 24 30 	movq	48(%rsp), %rax
  42c7a3:	48 89 04 24 	movq	%rax, (%rsp)
  42c7a7:	e8 d4 5a ff ff 	callq	-42284 <runtime.printint>
  42c7ac:	48 8d 05 27 dc 03 00 	leaq	252967(%rip), %rax
  42c7b3:	48 89 04 24 	movq	%rax, (%rsp)
  42c7b7:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  42c7c0:	e8 7b 5c ff ff 	callq	-41861 <runtime.printstring>
  42c7c5:	8b 44 24 1c 	movl	28(%rsp), %eax
  42c7c9:	89 c0 	movl	%eax, %eax
  42c7cb:	48 89 04 24 	movq	%rax, (%rsp)
  42c7cf:	e8 9c 59 ff ff 	callq	-42596 <runtime.printuint>
  42c7d4:	e8 b7 55 ff ff 	callq	-43593 <runtime.printnl>
  42c7d9:	e8 a2 53 ff ff 	callq	-44126 <runtime.printunlock>
  42c7de:	48 8d 05 8f ea 03 00 	leaq	256655(%rip), %rax
  42c7e5:	48 89 04 24 	movq	%rax, (%rsp)
  42c7e9:	48 c7 44 24 08 15 00 00 00 	movq	$21, 8(%rsp)
  42c7f2:	e8 d9 49 ff ff 	callq	-46631 <runtime.throw>
  42c7f7:	0f 0b 	ud2
  42c7f9:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  42c7fe:	89 44 24 18 	movl	%eax, 24(%rsp)
  42c802:	89 5c 24 14 	movl	%ebx, 20(%rsp)
  42c806:	89 74 24 10 	movl	%esi, 16(%rsp)
  42c80a:	e8 f1 52 ff ff 	callq	-44303 <runtime.printlock>
  42c80f:	48 8d 05 5e f6 03 00 	leaq	259678(%rip), %rax
  42c816:	48 89 04 24 	movq	%rax, (%rsp)
  42c81a:	48 c7 44 24 08 1b 00 00 00 	movq	$27, 8(%rsp)
  42c823:	e8 18 5c ff ff 	callq	-41960 <runtime.printstring>
  42c828:	8b 44 24 18 	movl	24(%rsp), %eax
  42c82c:	48 63 c0 	movslq	%eax, %rax
  42c82f:	48 89 04 24 	movq	%rax, (%rsp)
  42c833:	e8 48 5a ff ff 	callq	-42424 <runtime.printint>
  42c838:	48 8d 05 9f df 03 00 	leaq	253855(%rip), %rax
  42c83f:	48 89 04 24 	movq	%rax, (%rsp)
  42c843:	48 c7 44 24 08 0e 00 00 00 	movq	$14, 8(%rsp)
  42c84c:	e8 ef 5b ff ff 	callq	-42001 <runtime.printstring>
  42c851:	8b 44 24 14 	movl	20(%rsp), %eax
  42c855:	48 63 c0 	movslq	%eax, %rax
  42c858:	48 89 04 24 	movq	%rax, (%rsp)
  42c85c:	e8 1f 5a ff ff 	callq	-42465 <runtime.printint>
  42c861:	48 8d 05 3f d7 03 00 	leaq	251711(%rip), %rax
  42c868:	48 89 04 24 	movq	%rax, (%rsp)
  42c86c:	48 c7 44 24 08 08 00 00 00 	movq	$8, 8(%rsp)
  42c875:	e8 c6 5b ff ff 	callq	-42042 <runtime.printstring>
  42c87a:	48 8b 44 24 30 	movq	48(%rsp), %rax
  42c87f:	48 63 c0 	movslq	%eax, %rax
  42c882:	48 89 04 24 	movq	%rax, (%rsp)
  42c886:	e8 f5 59 ff ff 	callq	-42507 <runtime.printint>
  42c88b:	48 8d 05 eb d5 03 00 	leaq	251371(%rip), %rax
  42c892:	48 89 04 24 	movq	%rax, (%rsp)
  42c896:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  42c89f:	e8 9c 5b ff ff 	callq	-42084 <runtime.printstring>
  42c8a4:	8b 44 24 10 	movl	16(%rsp), %eax
  42c8a8:	48 63 c0 	movslq	%eax, %rax
  42c8ab:	48 89 04 24 	movq	%rax, (%rsp)
  42c8af:	e8 cc 59 ff ff 	callq	-42548 <runtime.printint>
  42c8b4:	e8 d7 54 ff ff 	callq	-43817 <runtime.printnl>
  42c8b9:	e8 c2 52 ff ff 	callq	-44350 <runtime.printunlock>
  42c8be:	48 8d 05 1e fc 03 00 	leaq	261150(%rip), %rax
  42c8c5:	48 89 04 24 	movq	%rax, (%rsp)
  42c8c9:	48 c7 44 24 08 1e 00 00 00 	movq	$30, 8(%rsp)
  42c8d2:	e8 f9 48 ff ff 	callq	-46855 <runtime.throw>
  42c8d7:	0f 0b 	ud2
  42c8d9:	e8 92 7c 01 00 	callq	97426 <runtime.morestack_noctxt>
  42c8de:	e9 8d fb ff ff 	jmp	-1139 <runtime.checkdead>
  42c8e3:	cc 	int3
  42c8e4:	cc 	int3
  42c8e5:	cc 	int3
  42c8e6:	cc 	int3
  42c8e7:	cc 	int3
  42c8e8:	cc 	int3
  42c8e9:	cc 	int3
  42c8ea:	cc 	int3
  42c8eb:	cc 	int3
  42c8ec:	cc 	int3
  42c8ed:	cc 	int3
  42c8ee:	cc 	int3
  42c8ef:	cc 	int3

runtime.sysmon:
  42c8f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42c8f9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42c8fd:	0f 86 d5 04 00 00 	jbe	1237 <runtime.sysmon+0x4e8>
  42c903:	48 81 ec 80 00 00 00 	subq	$128, %rsp
  42c90a:	48 89 6c 24 78 	movq	%rbp, 120(%rsp)
  42c90f:	48 8d 6c 24 78 	leaq	120(%rsp), %rbp
  42c914:	48 8d 05 15 b0 07 00 	leaq	503829(%rip), %rax
  42c91b:	48 89 04 24 	movq	%rax, (%rsp)
  42c91f:	e8 fc cb fd ff 	callq	-144388 <runtime.lock>
  42c924:	ff 05 2a b0 07 00 	incl	503850(%rip)
  42c92a:	e8 41 fb ff ff 	callq	-1215 <runtime.checkdead>
  42c92f:	48 8d 05 fa af 07 00 	leaq	503802(%rip), %rax
  42c936:	48 89 04 24 	movq	%rax, (%rsp)
  42c93a:	e8 81 cd fd ff 	callq	-143999 <runtime.unlock>
  42c93f:	8b 05 a7 71 09 00 	movl	618919(%rip), %eax
  42c945:	85 c0 	testl	%eax, %eax
  42c947:	0f 8e 7c 04 00 00 	jle	1148 <runtime.sysmon+0x4d9>
  42c94d:	48 c7 05 d8 86 07 00 80 96 98 00 	movq	$10000000, 493272(%rip)
  42c958:	b8 00 2d 31 01 	movl	$20000000, %eax
  42c95d:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  42c962:	e8 c9 b0 01 00 	callq	110793 <runtime.nanotime>
  42c967:	48 8b 04 24 	movq	(%rsp), %rax
  42c96b:	31 c9 	xorl	%ecx, %ecx
  42c96d:	31 d2 	xorl	%edx, %edx
  42c96f:	48 89 cb 	movq	%rcx, %rbx
  42c972:	31 f6 	xorl	%esi, %esi
  42c974:	eb 12 	jmp	18 <runtime.sysmon+0x98>
  42c976:	8b 54 24 24 	movl	36(%rsp), %edx
  42c97a:	48 89 d8 	movq	%rbx, %rax
  42c97d:	48 89 cb 	movq	%rcx, %rbx
  42c980:	4c 89 c6 	movq	%r8, %rsi
  42c983:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  42c988:	48 85 c9 	testq	%rcx, %rcx
  42c98b:	0f 85 27 04 00 00 	jne	1063 <runtime.sysmon+0x4c8>
  42c991:	ba 14 00 00 00 	movl	$20, %edx
  42c996:	48 89 74 24 40 	movq	%rsi, 64(%rsp)
  42c99b:	48 89 5c 24 38 	movq	%rbx, 56(%rsp)
  42c9a0:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  42c9a5:	48 89 4c 24 50 	movq	%rcx, 80(%rsp)
  42c9aa:	81 fa 10 27 00 00 	cmpl	$10000, %edx
  42c9b0:	76 05 	jbe	5 <runtime.sysmon+0xc7>
  42c9b2:	ba 10 27 00 00 	movl	$10000, %edx
  42c9b7:	89 54 24 24 	movl	%edx, 36(%rsp)
  42c9bb:	89 14 24 	movl	%edx, (%rsp)
  42c9be:	e8 ed ae 01 00 	callq	110317 <runtime.usleep>
  42c9c3:	8b 05 2b 71 09 00 	movl	618795(%rip), %eax
  42c9c9:	85 c0 	testl	%eax, %eax
  42c9cb:	0f 8f d9 03 00 00 	jg	985 <runtime.sysmon+0x4ba>
  42c9d1:	8b 05 21 b0 07 00 	movl	503841(%rip), %eax
  42c9d7:	85 c0 	testl	%eax, %eax
  42c9d9:	0f 84 b7 03 00 00 	je	951 <runtime.sysmon+0x4a6>
  42c9df:	48 8d 05 4a af 07 00 	leaq	503626(%rip), %rax
  42c9e6:	48 89 04 24 	movq	%rax, (%rsp)
  42c9ea:	e8 31 cb fd ff 	callq	-144591 <runtime.lock>
  42c9ef:	8b 05 03 b0 07 00 	movl	503811(%rip), %eax
  42c9f5:	85 c0 	testl	%eax, %eax
  42c9f7:	0f 84 77 03 00 00 	je	887 <runtime.sysmon+0x484>
  42c9fd:	b8 01 00 00 00 	movl	$1, %eax
  42ca02:	48 8d 0d ff af 07 00 	leaq	503807(%rip), %rcx
  42ca09:	87 01 	xchgl	%eax, (%rcx)
  42ca0b:	48 8d 05 1e af 07 00 	leaq	503582(%rip), %rax
  42ca12:	48 89 04 24 	movq	%rax, (%rsp)
  42ca16:	e8 a5 cc fd ff 	callq	-144219 <runtime.unlock>
  42ca1b:	48 8b 05 0e 86 07 00 	movq	493070(%rip), %rax
  42ca22:	48 89 c1 	movq	%rax, %rcx
  42ca25:	48 c1 f8 3f 	sarq	$63, %rax
  42ca29:	48 c1 e8 3f 	shrq	$63, %rax
  42ca2d:	48 01 c8 	addq	%rcx, %rax
  42ca30:	48 d1 f8 	sarq	%rax
  42ca33:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  42ca38:	48 39 ca 	cmpq	%rcx, %rdx
  42ca3b:	0f 8d 2b 03 00 00 	jge	811 <runtime.sysmon+0x47c>
  42ca41:	48 89 d0 	movq	%rdx, %rax
  42ca44:	48 c1 fa 3f 	sarq	$63, %rdx
  42ca48:	48 c1 ea 3f 	shrq	$63, %rdx
  42ca4c:	48 8d 0c 10 	leaq	(%rax,%rdx), %rcx
  42ca50:	48 d1 f9 	sarq	%rcx
  42ca53:	48 8d 05 b6 af 07 00 	leaq	503734(%rip), %rax
  42ca5a:	48 89 04 24 	movq	%rax, (%rsp)
  42ca5e:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  42ca63:	e8 98 d0 fd ff 	callq	-143208 <runtime.notetsleep>
  42ca68:	48 8d 05 c1 ae 07 00 	leaq	503489(%rip), %rax
  42ca6f:	48 89 04 24 	movq	%rax, (%rsp)
  42ca73:	e8 a8 ca fd ff 	callq	-144728 <runtime.lock>
  42ca78:	31 c0 	xorl	%eax, %eax
  42ca7a:	48 8d 0d 87 af 07 00 	leaq	503687(%rip), %rcx
  42ca81:	87 01 	xchgl	%eax, (%rcx)
  42ca83:	48 8d 05 86 af 07 00 	leaq	503686(%rip), %rax
  42ca8a:	84 00 	testb	%al, (%rax)
  42ca8c:	48 c7 05 79 af 07 00 00 00 00 00 	movq	$0, 503673(%rip)
  42ca97:	b8 14 00 00 00 	movl	$20, %eax
  42ca9c:	31 c9 	xorl	%ecx, %ecx
  42ca9e:	48 89 4c 24 50 	movq	%rcx, 80(%rsp)
  42caa3:	89 44 24 24 	movl	%eax, 36(%rsp)
  42caa7:	48 8d 15 82 ae 07 00 	leaq	503426(%rip), %rdx
  42caae:	48 89 14 24 	movq	%rdx, (%rsp)
  42cab2:	e8 09 cc fd ff 	callq	-144375 <runtime.unlock>
  42cab7:	8b 44 24 24 	movl	36(%rsp), %eax
  42cabb:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  42cac0:	48 89 4c 24 50 	movq	%rcx, 80(%rsp)
  42cac5:	89 44 24 24 	movl	%eax, 36(%rsp)
  42cac9:	48 8b 15 50 8f 07 00 	movq	495440(%rip), %rdx
  42cad0:	48 8b 12 	movq	(%rdx), %rdx
  42cad3:	48 85 d2 	testq	%rdx, %rdx
  42cad6:	0f 85 79 02 00 00 	jne	633 <runtime.sysmon+0x465>
  42cadc:	48 8b 05 45 ae 07 00 	movq	503365(%rip), %rax
  42cae3:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  42cae8:	e8 43 af 01 00 	callq	110403 <runtime.nanotime>
  42caed:	48 8b 04 24 	movq	(%rsp), %rax
  42caf1:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  42caf6:	8b 0d ec 6d 09 00 	movl	617964(%rip), %ecx
  42cafc:	85 c9 	testl	%ecx, %ecx
  42cafe:	74 1a 	je	26 <runtime.sysmon+0x22a>
  42cb00:	48 8b 4c 24 68 	movq	104(%rsp), %rcx
  42cb05:	48 85 c9 	testq	%rcx, %rcx
  42cb08:	74 10 	je	16 <runtime.sysmon+0x22a>
  42cb0a:	48 8d 91 80 96 98 00 	leaq	10000000(%rcx), %rdx
  42cb11:	48 39 c2 	cmpq	%rax, %rdx
  42cb14:	0f 8c dc 01 00 00 	jl	476 <runtime.sysmon+0x406>
  42cb1a:	48 89 04 24 	movq	%rax, (%rsp)
  42cb1e:	e8 cd 02 00 00 	callq	717 <runtime.retake>
  42cb23:	8b 44 24 08 	movl	8(%rsp), %eax
  42cb27:	85 c0 	testl	%eax, %eax
  42cb29:	0f 84 b9 01 00 00 	je	441 <runtime.sysmon+0x3f8>
  42cb2f:	31 c0 	xorl	%eax, %eax
  42cb31:	0f b6 0d 98 8c 09 00 	movzbl	625816(%rip), %ecx
  42cb38:	84 c9 	testb	%cl, %cl
  42cb3a:	74 0e 	je	14 <runtime.sysmon+0x25a>
  42cb3c:	8b 0d b2 6d 09 00 	movl	617906(%rip), %ecx
  42cb42:	85 c9 	testl	%ecx, %ecx
  42cb44:	0f 84 47 01 00 00 	je	327 <runtime.sysmon+0x3a1>
  42cb4a:	31 c9 	xorl	%ecx, %ecx
  42cb4c:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  42cb51:	84 c9 	testb	%cl, %cl
  42cb53:	74 0e 	je	14 <runtime.sysmon+0x273>
  42cb55:	8b 0d c5 ab 07 00 	movl	502725(%rip), %ecx
  42cb5b:	85 c9 	testl	%ecx, %ecx
  42cb5d:	0f 85 d8 00 00 00 	jne	216 <runtime.sysmon+0x34b>
  42cb63:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  42cb68:	48 89 ca 	movq	%rcx, %rdx
  42cb6b:	48 c1 f9 3f 	sarq	$63, %rcx
  42cb6f:	48 c1 e9 3f 	shrq	$63, %rcx
  42cb73:	48 01 d1 	addq	%rdx, %rcx
  42cb76:	48 d1 f9 	sarq	%rcx
  42cb79:	48 8b 5c 24 48 	movq	72(%rsp), %rbx
  42cb7e:	48 01 d9 	addq	%rbx, %rcx
  42cb81:	48 8b 74 24 28 	movq	40(%rsp), %rsi
  42cb86:	48 39 f1 	cmpq	%rsi, %rcx
  42cb89:	7c 6d 	jl	109 <runtime.sysmon+0x308>
  42cb8b:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  42cb90:	8b 3d 5e 6f 09 00 	movl	618334(%rip), %edi
  42cb96:	85 ff 	testl	%edi, %edi
  42cb98:	7e 54 	jle	84 <runtime.sysmon+0x2fe>
  42cb9a:	48 63 ff 	movslq	%edi, %rdi
  42cb9d:	48 69 ff 40 42 0f 00 	imulq	$1000000, %rdi, %rdi
  42cba4:	4c 8b 44 24 40 	movq	64(%rsp), %r8
  42cba9:	4c 01 c7 	addq	%r8, %rdi
  42cbac:	48 39 f7 	cmpq	%rsi, %rdi
  42cbaf:	0f 8f c1 fd ff ff 	jg	-575 <runtime.sysmon+0x86>
  42cbb5:	48 89 4c 24 60 	movq	%rcx, 96(%rsp)
  42cbba:	48 89 5c 24 58 	movq	%rbx, 88(%rsp)
  42cbbf:	8b 05 2b 6f 09 00 	movl	618283(%rip), %eax
  42cbc5:	85 c0 	testl	%eax, %eax
  42cbc7:	0f 9f 04 24 	setg	(%rsp)
  42cbcb:	e8 20 05 00 00 	callq	1312 <runtime.schedtrace>
  42cbd0:	48 8b 44 24 50 	movq	80(%rsp), %rax
  42cbd5:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  42cbda:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  42cbdf:	48 8b 5c 24 58 	movq	88(%rsp), %rbx
  42cbe4:	4c 8b 44 24 28 	movq	40(%rsp), %r8
  42cbe9:	e9 88 fd ff ff 	jmp	-632 <runtime.sysmon+0x86>
  42cbee:	4c 8b 44 24 40 	movq	64(%rsp), %r8
  42cbf3:	e9 7e fd ff ff 	jmp	-642 <runtime.sysmon+0x86>
  42cbf8:	48 8d 05 a1 f6 07 00 	leaq	521889(%rip), %rax
  42cbff:	48 89 04 24 	movq	%rax, (%rsp)
  42cc03:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  42cc08:	89 4c 24 08 	movl	%ecx, 8(%rsp)
  42cc0c:	48 89 74 24 10 	movq	%rsi, 16(%rsp)
  42cc11:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  42cc16:	e8 75 f1 fe ff 	callq	-69259 <runtime.(*mheap).scavenge>
  42cc1b:	48 8b 44 24 38 	movq	56(%rsp), %rax
  42cc20:	48 8d 48 01 	leaq	1(%rax), %rcx
  42cc24:	48 8b 44 24 50 	movq	80(%rsp), %rax
  42cc29:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  42cc2e:	48 8b 74 24 28 	movq	40(%rsp), %rsi
  42cc33:	48 89 f3 	movq	%rsi, %rbx
  42cc36:	e9 55 ff ff ff 	jmp	-171 <runtime.sysmon+0x2a0>
  42cc3b:	48 8d 05 ce aa 07 00 	leaq	502478(%rip), %rax
  42cc42:	48 89 04 24 	movq	%rax, (%rsp)
  42cc46:	e8 d5 c8 fd ff 	callq	-145195 <runtime.lock>
  42cc4b:	c7 05 cb aa 07 00 00 00 00 00 	movl	$0, 502475(%rip)
  42cc55:	48 8b 05 bc aa 07 00 	movq	502460(%rip), %rax
  42cc5c:	48 c7 80 b8 00 00 00 00 00 00 00 	movq	$0, 184(%rax)
  42cc67:	48 8b 05 aa aa 07 00 	movq	502442(%rip), %rax
  42cc6e:	48 89 04 24 	movq	%rax, (%rsp)
  42cc72:	e8 f9 ba ff ff 	callq	-17671 <runtime.injectglist>
  42cc77:	48 8d 05 92 aa 07 00 	leaq	502418(%rip), %rax
  42cc7e:	48 89 04 24 	movq	%rax, (%rsp)
  42cc82:	e8 39 ca fd ff 	callq	-144839 <runtime.unlock>
  42cc87:	48 8b 44 24 50 	movq	80(%rsp), %rax
  42cc8c:	e9 d2 fe ff ff 	jmp	-302 <runtime.sysmon+0x273>
  42cc91:	8b 0d 45 6c 09 00 	movl	617541(%rip), %ecx
  42cc97:	85 c9 	testl	%ecx, %ecx
  42cc99:	74 07 	je	7 <runtime.sysmon+0x3b2>
  42cc9b:	31 c9 	xorl	%ecx, %ecx
  42cc9d:	e9 aa fe ff ff 	jmp	-342 <runtime.sysmon+0x25c>
  42cca2:	8b 0d 30 6c 09 00 	movl	617520(%rip), %ecx
  42cca8:	85 c9 	testl	%ecx, %ecx
  42ccaa:	7d 07 	jge	7 <runtime.sysmon+0x3c3>
  42ccac:	31 c9 	xorl	%ecx, %ecx
  42ccae:	e9 99 fe ff ff 	jmp	-359 <runtime.sysmon+0x25c>
  42ccb3:	48 8b 0d 66 91 09 00 	movq	627046(%rip), %rcx
  42ccba:	48 85 c9 	testq	%rcx, %rcx
  42ccbd:	74 1d 	je	29 <runtime.sysmon+0x3ec>
  42ccbf:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  42ccc4:	48 89 d3 	movq	%rdx, %rbx
  42ccc7:	48 29 ca 	subq	%rcx, %rdx
  42ccca:	48 8b 0d 5f 83 07 00 	movq	492383(%rip), %rcx
  42ccd1:	48 39 ca 	cmpq	%rcx, %rdx
  42ccd4:	0f 9f c1 	setg	%cl
  42ccd7:	e9 70 fe ff ff 	jmp	-400 <runtime.sysmon+0x25c>
  42ccdc:	48 8b 5c 24 28 	movq	40(%rsp), %rbx
  42cce1:	31 c9 	xorl	%ecx, %ecx
  42cce3:	e9 64 fe ff ff 	jmp	-412 <runtime.sysmon+0x25c>
  42cce8:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  42cced:	48 8d 41 01 	leaq	1(%rcx), %rax
  42ccf1:	e9 3b fe ff ff 	jmp	-453 <runtime.sysmon+0x241>
  42ccf6:	48 89 c2 	movq	%rax, %rdx
  42ccf9:	48 89 c8 	movq	%rcx, %rax
  42ccfc:	48 8d 1d 25 ac 07 00 	leaq	502821(%rip), %rbx
  42cd03:	f0 	lock
  42cd04:	48 0f b1 13 	cmpxchgq	%rdx, (%rbx)
  42cd08:	0f 94 c1 	sete	%cl
  42cd0b:	c6 04 24 00 	movb	$0, (%rsp)
  42cd0f:	e8 1c 1d ff ff 	callq	-58084 <runtime.netpoll>
  42cd14:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  42cd19:	48 85 c9 	testq	%rcx, %rcx
  42cd1c:	75 0a 	jne	10 <runtime.sysmon+0x438>
  42cd1e:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42cd23:	e9 f2 fd ff ff 	jmp	-526 <runtime.sysmon+0x22a>
  42cd28:	48 89 4c 24 70 	movq	%rcx, 112(%rsp)
  42cd2d:	c7 04 24 ff ff ff ff 	movl	$4294967295, (%rsp)
  42cd34:	e8 c7 f6 ff ff 	callq	-2361 <runtime.incidlelocked>
  42cd39:	48 8b 44 24 70 	movq	112(%rsp), %rax
  42cd3e:	48 89 04 24 	movq	%rax, (%rsp)
  42cd42:	e8 29 ba ff ff 	callq	-17879 <runtime.injectglist>
  42cd47:	c7 04 24 01 00 00 00 	movl	$1, (%rsp)
  42cd4e:	e8 ad f6 ff ff 	callq	-2387 <runtime.incidlelocked>
  42cd53:	eb c9 	jmp	-55 <runtime.sysmon+0x42e>
  42cd55:	48 89 14 24 	movq	%rdx, (%rsp)
  42cd59:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  42cd62:	e8 89 8e 01 00 	callq	102025 <runtime.asmcgocall>
  42cd67:	e9 70 fd ff ff 	jmp	-656 <runtime.sysmon+0x1ec>
  42cd6c:	48 89 c1 	movq	%rax, %rcx
  42cd6f:	e9 df fc ff ff 	jmp	-801 <runtime.sysmon+0x163>
  42cd74:	8b 05 f6 ab 07 00 	movl	502774(%rip), %eax
  42cd7a:	8b 0d 60 6b 09 00 	movl	617312(%rip), %ecx
  42cd80:	39 c8 	cmpl	%ecx, %eax
  42cd82:	0f 84 75 fc ff ff 	je	-907 <runtime.sysmon+0x10d>
  42cd88:	8b 44 24 24 	movl	36(%rsp), %eax
  42cd8c:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  42cd91:	e9 08 fd ff ff 	jmp	-760 <runtime.sysmon+0x1ae>
  42cd96:	8b 05 d4 ab 07 00 	movl	502740(%rip), %eax
  42cd9c:	8b 0d 3e 6b 09 00 	movl	617278(%rip), %ecx
  42cda2:	39 c8 	cmpl	%ecx, %eax
  42cda4:	0f 84 35 fc ff ff 	je	-971 <runtime.sysmon+0xef>
  42cdaa:	8b 44 24 24 	movl	36(%rsp), %eax
  42cdae:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  42cdb3:	e9 08 fd ff ff 	jmp	-760 <runtime.sysmon+0x1d0>
  42cdb8:	48 83 f9 32 	cmpq	$50, %rcx
  42cdbc:	0f 8e d4 fb ff ff 	jle	-1068 <runtime.sysmon+0xa6>
  42cdc2:	d1 e2 	shll	%edx
  42cdc4:	e9 cd fb ff ff 	jmp	-1075 <runtime.sysmon+0xa6>
  42cdc9:	48 b8 00 b8 64 d9 45 00 00 00 	movabsq	$300000000000, %rax
  42cdd3:	e9 85 fb ff ff 	jmp	-1147 <runtime.sysmon+0x6d>
  42cdd8:	e8 93 77 01 00 	callq	96147 <runtime.morestack_noctxt>
  42cddd:	e9 0e fb ff ff 	jmp	-1266 <runtime.sysmon>
  42cde2:	cc 	int3
  42cde3:	cc 	int3
  42cde4:	cc 	int3
  42cde5:	cc 	int3
  42cde6:	cc 	int3
  42cde7:	cc 	int3
  42cde8:	cc 	int3
  42cde9:	cc 	int3
  42cdea:	cc 	int3
  42cdeb:	cc 	int3
  42cdec:	cc 	int3
  42cded:	cc 	int3
  42cdee:	cc 	int3
  42cdef:	cc 	int3

runtime.retake:
  42cdf0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42cdf9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42cdfd:	0f 86 5c 02 00 00 	jbe	604 <runtime.retake+0x26f>
  42ce03:	48 83 ec 38 	subq	$56, %rsp
  42ce07:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  42ce0c:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  42ce11:	48 8d 05 08 6b 09 00 	leaq	617224(%rip), %rax
  42ce18:	48 89 04 24 	movq	%rax, (%rsp)
  42ce1c:	e8 ff c6 fd ff 	callq	-145665 <runtime.lock>
  42ce21:	31 c0 	xorl	%eax, %eax
  42ce23:	48 89 c1 	movq	%rax, %rcx
  42ce26:	eb 03 	jmp	3 <runtime.retake+0x3b>
  42ce28:	48 ff c0 	incq	%rax
  42ce2b:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  42ce30:	48 8b 15 81 a8 07 00 	movq	501889(%rip), %rdx
  42ce37:	48 8b 1d 72 a8 07 00 	movq	501874(%rip), %rbx
  42ce3e:	48 39 d0 	cmpq	%rdx, %rax
  42ce41:	0f 8d f5 01 00 00 	jge	501 <runtime.retake+0x24c>
  42ce47:	48 8b 14 c3 	movq	(%rbx,%rax,8), %rdx
  42ce4b:	48 85 d2 	testq	%rdx, %rdx
  42ce4e:	0f 84 de 01 00 00 	je	478 <runtime.retake+0x242>
  42ce54:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  42ce59:	48 8d 5a 20 	leaq	32(%rdx), %rbx
  42ce5d:	8b 72 0c 	movl	12(%rdx), %esi
  42ce60:	83 fe 02 	cmpl	$2, %esi
  42ce63:	0f 85 36 01 00 00 	jne	310 <runtime.retake+0x1af>
  42ce69:	84 03 	testb	%al, (%rbx)
  42ce6b:	8b 5a 1c 	movl	28(%rdx), %ebx
  42ce6e:	8b 7a 30 	movl	48(%rdx), %edi
  42ce71:	48 39 df 	cmpq	%rbx, %rdi
  42ce74:	74 0e 	je	14 <runtime.retake+0x94>
  42ce76:	89 5a 30 	movl	%ebx, 48(%rdx)
  42ce79:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  42ce7e:	48 89 5a 38 	movq	%rbx, 56(%rdx)
  42ce82:	eb a4 	jmp	-92 <runtime.retake+0x38>
  42ce84:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  42ce89:	89 74 24 14 	movl	%esi, 20(%rsp)
  42ce8d:	48 89 14 24 	movq	%rdx, (%rsp)
  42ce91:	e8 7a 0f 00 00 	callq	3962 <runtime.runqempty>
  42ce96:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  42ce9b:	84 c0 	testb	%al, %al
  42ce9d:	74 42 	je	66 <runtime.retake+0xf1>
  42ce9f:	8b 05 cf aa 07 00 	movl	502479(%rip), %eax
  42cea5:	8b 0d c5 aa 07 00 	movl	502469(%rip), %ecx
  42ceab:	01 c8 	addl	%ecx, %eax
  42cead:	85 c0 	testl	%eax, %eax
  42ceaf:	0f 86 db 00 00 00 	jbe	219 <runtime.retake+0x1a0>
  42ceb5:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42ceba:	48 8b 48 38 	movq	56(%rax), %rcx
  42cebe:	48 81 c1 80 96 98 00 	addq	$10000000, %rcx
  42cec5:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  42ceca:	48 39 d1 	cmpq	%rdx, %rcx
  42cecd:	7e 12 	jle	18 <runtime.retake+0xf1>
  42cecf:	48 8b 44 24 20 	movq	32(%rsp), %rax
  42ced4:	48 89 d3 	movq	%rdx, %rbx
  42ced7:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  42cedc:	e9 47 ff ff ff 	jmp	-185 <runtime.retake+0x38>
  42cee1:	48 8d 05 38 6a 09 00 	leaq	617016(%rip), %rax
  42cee8:	48 89 04 24 	movq	%rax, (%rsp)
  42ceec:	e8 cf c7 fd ff 	callq	-145457 <runtime.unlock>
  42cef1:	c7 04 24 ff ff ff ff 	movl	$4294967295, (%rsp)
  42cef8:	e8 03 f5 ff ff 	callq	-2813 <runtime.incidlelocked>
  42cefd:	8b 44 24 14 	movl	20(%rsp), %eax
  42cf01:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  42cf06:	31 d2 	xorl	%edx, %edx
  42cf08:	f0 	lock
  42cf09:	0f b1 51 0c 	cmpxchgl	%edx, 12(%rcx)
  42cf0d:	0f 94 c0 	sete	%al
  42cf10:	84 c0 	testb	%al, %al
  42cf12:	74 75 	je	117 <runtime.retake+0x199>
  42cf14:	0f b6 05 b5 68 08 00 	movzbl	551093(%rip), %eax
  42cf1b:	84 c0 	testb	%al, %al
  42cf1d:	75 4c 	jne	76 <runtime.retake+0x17b>
  42cf1f:	ff 41 1c 	incl	28(%rcx)
  42cf22:	48 89 0c 24 	movq	%rcx, (%rsp)
  42cf26:	e8 45 a1 ff ff 	callq	-24251 <runtime.handoffp>
  42cf2b:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42cf30:	48 ff c0 	incq	%rax
  42cf33:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  42cf38:	c7 04 24 01 00 00 00 	movl	$1, (%rsp)
  42cf3f:	e8 bc f4 ff ff 	callq	-2884 <runtime.incidlelocked>
  42cf44:	48 8d 05 d5 69 09 00 	leaq	616917(%rip), %rax
  42cf4b:	48 89 04 24 	movq	%rax, (%rsp)
  42cf4f:	e8 cc c5 fd ff 	callq	-145972 <runtime.lock>
  42cf54:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42cf59:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  42cf5e:	48 89 c1 	movq	%rax, %rcx
  42cf61:	48 8b 44 24 20 	movq	32(%rsp), %rax
  42cf66:	e9 bd fe ff ff 	jmp	-323 <runtime.retake+0x38>
  42cf6b:	48 89 0c 24 	movq	%rcx, (%rsp)
  42cf6f:	e8 8c df 00 00 	callq	57228 <runtime.traceGoSysBlock>
  42cf74:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42cf79:	48 89 04 24 	movq	%rax, (%rsp)
  42cf7d:	e8 6e d3 00 00 	callq	54126 <runtime.traceProcStop>
  42cf82:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  42cf87:	eb 96 	jmp	-106 <runtime.retake+0x12f>
  42cf89:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42cf8e:	eb a3 	jmp	-93 <runtime.retake+0x143>
  42cf90:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42cf95:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  42cf9a:	e9 42 ff ff ff 	jmp	-190 <runtime.retake+0xf1>
  42cf9f:	83 fe 01 	cmpl	$1, %esi
  42cfa2:	0f 85 83 00 00 00 	jne	131 <runtime.retake+0x23b>
  42cfa8:	84 03 	testb	%al, (%rbx)
  42cfaa:	8b 5a 18 	movl	24(%rdx), %ebx
  42cfad:	8b 72 20 	movl	32(%rdx), %esi
  42cfb0:	48 39 de 	cmpq	%rbx, %rsi
  42cfb3:	74 11 	je	17 <runtime.retake+0x1d6>
  42cfb5:	89 5a 20 	movl	%ebx, 32(%rdx)
  42cfb8:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  42cfbd:	48 89 5a 28 	movq	%rbx, 40(%rdx)
  42cfc1:	e9 62 fe ff ff 	jmp	-414 <runtime.retake+0x38>
  42cfc6:	48 8b 5a 28 	movq	40(%rdx), %rbx
  42cfca:	48 81 c3 80 96 98 00 	addq	$10000000, %rbx
  42cfd1:	48 8b 74 24 40 	movq	64(%rsp), %rsi
  42cfd6:	48 39 f3 	cmpq	%rsi, %rbx
  42cfd9:	7e 08 	jle	8 <runtime.retake+0x1f3>
  42cfdb:	48 89 f3 	movq	%rsi, %rbx
  42cfde:	e9 45 fe ff ff 	jmp	-443 <runtime.retake+0x38>
  42cfe3:	48 8b 52 40 	movq	64(%rdx), %rdx
  42cfe7:	48 85 d2 	testq	%rdx, %rdx
  42cfea:	74 12 	je	18 <runtime.retake+0x20e>
  42cfec:	64 48 8b 1c 25 f8 ff ff ff 	movq	%fs:-8, %rbx
  42cff5:	48 8b 5b 30 	movq	48(%rbx), %rbx
  42cff9:	48 39 d3 	cmpq	%rdx, %rbx
  42cffc:	75 08 	jne	8 <runtime.retake+0x216>
  42cffe:	48 89 c8 	movq	%rcx, %rax
  42d001:	e9 53 ff ff ff 	jmp	-173 <runtime.retake+0x169>
  42d006:	48 8b 9a c0 00 00 00 	movq	192(%rdx), %rbx
  42d00d:	48 85 db 	testq	%rbx, %rbx
  42d010:	74 ec 	je	-20 <runtime.retake+0x20e>
  42d012:	48 8b 12 	movq	(%rdx), %rdx
  42d015:	48 39 d3 	cmpq	%rdx, %rbx
  42d018:	74 e4 	je	-28 <runtime.retake+0x20e>
  42d01a:	c6 83 c0 00 00 00 01 	movb	$1, 192(%rbx)
  42d021:	48 c7 43 10 de fa ff ff 	movq	$-1314, 16(%rbx)
  42d029:	eb d3 	jmp	-45 <runtime.retake+0x20e>
  42d02b:	48 8b 74 24 40 	movq	64(%rsp), %rsi
  42d030:	eb cc 	jmp	-52 <runtime.retake+0x20e>
  42d032:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  42d037:	e9 ec fd ff ff 	jmp	-532 <runtime.retake+0x38>
  42d03c:	48 8d 05 dd 68 09 00 	leaq	616669(%rip), %rax
  42d043:	48 89 04 24 	movq	%rax, (%rsp)
  42d047:	e8 74 c6 fd ff 	callq	-145804 <runtime.unlock>
  42d04c:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42d051:	89 44 24 48 	movl	%eax, 72(%rsp)
  42d055:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  42d05a:	48 83 c4 38 	addq	$56, %rsp
  42d05e:	c3 	retq
  42d05f:	e8 0c 75 01 00 	callq	95500 <runtime.morestack_noctxt>
  42d064:	e9 87 fd ff ff 	jmp	-633 <runtime.retake>
  42d069:	cc 	int3
  42d06a:	cc 	int3
  42d06b:	cc 	int3
  42d06c:	cc 	int3
  42d06d:	cc 	int3
  42d06e:	cc 	int3
  42d06f:	cc 	int3

runtime.preemptall:
  42d070:	48 8b 05 41 a6 07 00 	movq	501313(%rip), %rax
  42d077:	48 8b 0d 32 a6 07 00 	movq	501298(%rip), %rcx
  42d07e:	31 d2 	xorl	%edx, %edx
  42d080:	31 db 	xorl	%ebx, %ebx
  42d082:	eb 03 	jmp	3 <runtime.preemptall+0x17>
  42d084:	48 ff c2 	incq	%rdx
  42d087:	48 39 c2 	cmpq	%rax, %rdx
  42d08a:	7d 5b 	jge	91 <runtime.preemptall+0x77>
  42d08c:	48 8b 34 d1 	movq	(%rcx,%rdx,8), %rsi
  42d090:	8b 7e 0c 	movl	12(%rsi), %edi
  42d093:	83 ff 01 	cmpl	$1, %edi
  42d096:	75 ec 	jne	-20 <runtime.preemptall+0x14>
  42d098:	48 8b 76 40 	movq	64(%rsi), %rsi
  42d09c:	48 85 f6 	testq	%rsi, %rsi
  42d09f:	74 12 	je	18 <runtime.preemptall+0x43>
  42d0a1:	64 48 8b 3c 25 f8 ff ff ff 	movq	%fs:-8, %rdi
  42d0aa:	48 8b 7f 30 	movq	48(%rdi), %rdi
  42d0ae:	48 39 f7 	cmpq	%rsi, %rdi
  42d0b1:	75 06 	jne	6 <runtime.preemptall+0x49>
  42d0b3:	31 f6 	xorl	%esi, %esi
  42d0b5:	09 f3 	orl	%esi, %ebx
  42d0b7:	eb cb 	jmp	-53 <runtime.preemptall+0x14>
  42d0b9:	48 8b be c0 00 00 00 	movq	192(%rsi), %rdi
  42d0c0:	48 85 ff 	testq	%rdi, %rdi
  42d0c3:	74 08 	je	8 <runtime.preemptall+0x5d>
  42d0c5:	48 8b 36 	movq	(%rsi), %rsi
  42d0c8:	48 39 f7 	cmpq	%rsi, %rdi
  42d0cb:	75 04 	jne	4 <runtime.preemptall+0x61>
  42d0cd:	31 f6 	xorl	%esi, %esi
  42d0cf:	eb e4 	jmp	-28 <runtime.preemptall+0x45>
  42d0d1:	c6 87 c0 00 00 00 01 	movb	$1, 192(%rdi)
  42d0d8:	48 c7 47 10 de fa ff ff 	movq	$-1314, 16(%rdi)
  42d0e0:	be 01 00 00 00 	movl	$1, %esi
  42d0e5:	eb ce 	jmp	-50 <runtime.preemptall+0x45>
  42d0e7:	88 5c 24 08 	movb	%bl, 8(%rsp)
  42d0eb:	c3 	retq
  42d0ec:	cc 	int3
  42d0ed:	cc 	int3
  42d0ee:	cc 	int3
  42d0ef:	cc 	int3

runtime.schedtrace:
  42d0f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42d0f9:	48 8d 44 24 a8 	leaq	-88(%rsp), %rax
  42d0fe:	48 3b 41 10 	cmpq	16(%rcx), %rax
  42d102:	0f 86 b5 0a 00 00 	jbe	2741 <runtime.schedtrace+0xacd>
  42d108:	48 81 ec d8 00 00 00 	subq	$216, %rsp
  42d10f:	48 89 ac 24 d0 00 00 00 	movq	%rbp, 208(%rsp)
  42d117:	48 8d ac 24 d0 00 00 00 	leaq	208(%rsp), %rbp
  42d11f:	e8 0c a9 01 00 	callq	108812 <runtime.nanotime>
  42d124:	48 8b 04 24 	movq	(%rsp), %rax
  42d128:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  42d12d:	48 8b 0d ac 68 09 00 	movq	616620(%rip), %rcx
  42d134:	48 85 c9 	testq	%rcx, %rcx
  42d137:	75 07 	jne	7 <runtime.schedtrace+0x50>
  42d139:	48 89 05 a0 68 09 00 	movq	%rax, 616608(%rip)
  42d140:	48 8d 05 e9 a7 07 00 	leaq	501737(%rip), %rax
  42d147:	48 89 04 24 	movq	%rax, (%rsp)
  42d14b:	e8 d0 c3 fd ff 	callq	-146480 <runtime.lock>
  42d150:	48 63 05 31 a8 07 00 	movslq	501809(%rip), %rax
  42d157:	48 89 84 24 b0 00 00 00 	movq	%rax, 176(%rsp)
  42d15f:	48 63 0d da a7 07 00 	movslq	501722(%rip), %rcx
  42d166:	48 89 8c 24 a8 00 00 00 	movq	%rcx, 168(%rsp)
  42d16e:	8b 15 00 a8 07 00 	movl	501760(%rip), %edx
  42d174:	48 89 94 24 a0 00 00 00 	movq	%rdx, 160(%rsp)
  42d17c:	8b 1d ee a7 07 00 	movl	501742(%rip), %ebx
  42d182:	48 89 9c 24 98 00 00 00 	movq	%rbx, 152(%rsp)
  42d18a:	48 8b 35 4f 68 09 00 	movq	616527(%rip), %rsi
  42d191:	48 89 b4 24 90 00 00 00 	movq	%rsi, 144(%rsp)
  42d199:	48 8b 3d a8 a7 07 00 	movq	501672(%rip), %rdi
  42d1a0:	48 2b 3d b1 a7 07 00 	subq	501681(%rip), %rdi
  42d1a7:	48 89 bc 24 88 00 00 00 	movq	%rdi, 136(%rsp)
  42d1af:	e8 4c 49 ff ff 	callq	-46772 <runtime.printlock>
  42d1b4:	48 8d 05 80 cc 03 00 	leaq	248960(%rip), %rax
  42d1bb:	48 89 04 24 	movq	%rax, (%rsp)
  42d1bf:	48 c7 44 24 08 06 00 00 00 	movq	$6, 8(%rsp)
  42d1c8:	e8 73 52 ff ff 	callq	-44429 <runtime.printstring>
  42d1cd:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42d1d2:	48 8b 8c 24 90 00 00 00 	movq	144(%rsp), %rcx
  42d1da:	48 29 c8 	subq	%rcx, %rax
  42d1dd:	48 89 c1 	movq	%rax, %rcx
  42d1e0:	48 b8 db 34 b6 d7 82 de 1b 43 	movabsq	$4835703278458516699, %rax
  42d1ea:	48 f7 e9 	imulq	%rcx
  42d1ed:	48 c1 f9 3f 	sarq	$63, %rcx
  42d1f1:	48 c1 fa 12 	sarq	$18, %rdx
  42d1f5:	48 29 ca 	subq	%rcx, %rdx
  42d1f8:	48 89 14 24 	movq	%rdx, (%rsp)
  42d1fc:	e8 7f 50 ff ff 	callq	-44929 <runtime.printint>
  42d201:	48 8d 05 81 d7 03 00 	leaq	251777(%rip), %rax
  42d208:	48 89 04 24 	movq	%rax, (%rsp)
  42d20c:	48 c7 44 24 08 0f 00 00 00 	movq	$15, 8(%rsp)
  42d215:	e8 26 52 ff ff 	callq	-44506 <runtime.printstring>
  42d21a:	48 63 05 bf 66 09 00 	movslq	616127(%rip), %rax
  42d221:	48 89 04 24 	movq	%rax, (%rsp)
  42d225:	e8 56 50 ff ff 	callq	-44970 <runtime.printint>
  42d22a:	48 8d 05 9e d1 03 00 	leaq	250270(%rip), %rax
  42d231:	48 89 04 24 	movq	%rax, (%rsp)
  42d235:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  42d23e:	e8 fd 51 ff ff 	callq	-44547 <runtime.printstring>
  42d243:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  42d24b:	48 89 04 24 	movq	%rax, (%rsp)
  42d24f:	e8 1c 4f ff ff 	callq	-45284 <runtime.printuint>
  42d254:	48 8d 05 59 ce 03 00 	leaq	249433(%rip), %rax
  42d25b:	48 89 04 24 	movq	%rax, (%rsp)
  42d25f:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  42d268:	e8 d3 51 ff ff 	callq	-44589 <runtime.printstring>
  42d26d:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  42d275:	48 63 c0 	movslq	%eax, %rax
  42d278:	48 89 04 24 	movq	%rax, (%rsp)
  42d27c:	e8 ff 4f ff ff 	callq	-45057 <runtime.printint>
  42d281:	48 8d 05 2b d9 03 00 	leaq	252203(%rip), %rax
  42d288:	48 89 04 24 	movq	%rax, (%rsp)
  42d28c:	48 c7 44 24 08 11 00 00 00 	movq	$17, 8(%rsp)
  42d295:	e8 a6 51 ff ff 	callq	-44634 <runtime.printstring>
  42d29a:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  42d2a2:	48 89 04 24 	movq	%rax, (%rsp)
  42d2a6:	e8 c5 4e ff ff 	callq	-45371 <runtime.printuint>
  42d2ab:	48 8d 05 e6 d3 03 00 	leaq	250854(%rip), %rax
  42d2b2:	48 89 04 24 	movq	%rax, (%rsp)
  42d2b6:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  42d2bf:	e8 7c 51 ff ff 	callq	-44676 <runtime.printstring>
  42d2c4:	48 8b 84 24 a8 00 00 00 	movq	168(%rsp), %rax
  42d2cc:	48 89 04 24 	movq	%rax, (%rsp)
  42d2d0:	e8 ab 4f ff ff 	callq	-45141 <runtime.printint>
  42d2d5:	48 8d 05 d6 cf 03 00 	leaq	249814(%rip), %rax
  42d2dc:	48 89 04 24 	movq	%rax, (%rsp)
  42d2e0:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  42d2e9:	e8 52 51 ff ff 	callq	-44718 <runtime.printstring>
  42d2ee:	48 8b 84 24 b0 00 00 00 	movq	176(%rsp), %rax
  42d2f6:	48 89 04 24 	movq	%rax, (%rsp)
  42d2fa:	e8 81 4f ff ff 	callq	-45183 <runtime.printint>
  42d2ff:	e8 7c 48 ff ff 	callq	-46980 <runtime.printunlock>
  42d304:	0f b6 84 24 e0 00 00 00 	movzbl	224(%rsp), %eax
  42d30c:	84 c0 	testb	%al, %al
  42d30e:	0f 85 ab 07 00 00 	jne	1963 <runtime.schedtrace+0x9cf>
  42d314:	48 8b 0d 9d a3 07 00 	movq	500637(%rip), %rcx
  42d31b:	48 89 8c 24 80 00 00 00 	movq	%rcx, 128(%rsp)
  42d323:	48 8b 15 86 a3 07 00 	movq	500614(%rip), %rdx
  42d32a:	48 89 94 24 c8 00 00 00 	movq	%rdx, 200(%rsp)
  42d332:	31 db 	xorl	%ebx, %ebx
  42d334:	eb 21 	jmp	33 <runtime.schedtrace+0x267>
  42d336:	48 8b 74 24 58 	movq	88(%rsp), %rsi
  42d33b:	48 8d 5e 01 	leaq	1(%rsi), %rbx
  42d33f:	0f b6 84 24 e0 00 00 00 	movzbl	224(%rsp), %eax
  42d347:	48 8b 8c 24 80 00 00 00 	movq	128(%rsp), %rcx
  42d34f:	48 8b 94 24 c8 00 00 00 	movq	200(%rsp), %rdx
  42d357:	48 39 cb 	cmpq	%rcx, %rbx
  42d35a:	0f 8d 51 02 00 00 	jge	593 <runtime.schedtrace+0x4c1>
  42d360:	48 89 5c 24 58 	movq	%rbx, 88(%rsp)
  42d365:	48 8b 34 da 	movq	(%rdx,%rbx,8), %rsi
  42d369:	48 8b 7e 40 	movq	64(%rsi), %rdi
  42d36d:	44 8b 86 e0 05 00 00 	movl	1504(%rsi), %r8d
  42d374:	44 89 44 24 24 	movl	%r8d, 36(%rsp)
  42d379:	44 8b 8e e4 05 00 00 	movl	1508(%rsi), %r9d
  42d380:	44 89 4c 24 1c 	movl	%r9d, 28(%rsp)
  42d385:	84 c0 	testb	%al, %al
  42d387:	0f 84 81 01 00 00 	je	385 <runtime.schedtrace+0x41e>
  42d38d:	48 85 ff 	testq	%rdi, %rdi
  42d390:	0f 84 6c 01 00 00 	je	364 <runtime.schedtrace+0x412>
  42d396:	48 8b bf e0 00 00 00 	movq	224(%rdi), %rdi
  42d39d:	48 89 7c 24 50 	movq	%rdi, 80(%rsp)
  42d3a2:	48 63 86 f8 0d 00 00 	movslq	3576(%rsi), %rax
  42d3a9:	48 89 84 24 b0 00 00 00 	movq	%rax, 176(%rsp)
  42d3b1:	8b 4e 1c 	movl	28(%rsi), %ecx
  42d3b4:	48 89 8c 24 a0 00 00 00 	movq	%rcx, 160(%rsp)
  42d3bc:	8b 56 18 	movl	24(%rsi), %edx
  42d3bf:	48 89 94 24 98 00 00 00 	movq	%rdx, 152(%rsp)
  42d3c7:	8b 5e 0c 	movl	12(%rsi), %ebx
  42d3ca:	48 89 5c 24 78 	movq	%rbx, 120(%rsp)
  42d3cf:	e8 2c 47 ff ff 	callq	-47316 <runtime.printlock>
  42d3d4:	48 8d 05 a9 c8 03 00 	leaq	247977(%rip), %rax
  42d3db:	48 89 04 24 	movq	%rax, (%rsp)
  42d3df:	48 c7 44 24 08 03 00 00 00 	movq	$3, 8(%rsp)
  42d3e8:	e8 53 50 ff ff 	callq	-44973 <runtime.printstring>
  42d3ed:	48 8b 44 24 58 	movq	88(%rsp), %rax
  42d3f2:	48 89 04 24 	movq	%rax, (%rsp)
  42d3f6:	e8 85 4e ff ff 	callq	-45435 <runtime.printint>
  42d3fb:	48 8d 05 e8 cc 03 00 	leaq	249064(%rip), %rax
  42d402:	48 89 04 24 	movq	%rax, (%rsp)
  42d406:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  42d40f:	e8 2c 50 ff ff 	callq	-45012 <runtime.printstring>
  42d414:	48 8b 44 24 78 	movq	120(%rsp), %rax
  42d419:	48 89 04 24 	movq	%rax, (%rsp)
  42d41d:	e8 4e 4d ff ff 	callq	-45746 <runtime.printuint>
  42d422:	48 8d 05 fe cf 03 00 	leaq	249854(%rip), %rax
  42d429:	48 89 04 24 	movq	%rax, (%rsp)
  42d42d:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  42d436:	e8 05 50 ff ff 	callq	-45051 <runtime.printstring>
  42d43b:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  42d443:	48 89 04 24 	movq	%rax, (%rsp)
  42d447:	e8 24 4d ff ff 	callq	-45788 <runtime.printuint>
  42d44c:	48 8d 05 79 d2 03 00 	leaq	250489(%rip), %rax
  42d453:	48 89 04 24 	movq	%rax, (%rsp)
  42d457:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  42d460:	e8 db 4f ff ff 	callq	-45093 <runtime.printstring>
  42d465:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  42d46d:	48 89 04 24 	movq	%rax, (%rsp)
  42d471:	e8 fa 4c ff ff 	callq	-45830 <runtime.printuint>
  42d476:	48 8d 05 19 c8 03 00 	leaq	247833(%rip), %rax
  42d47d:	48 89 04 24 	movq	%rax, (%rsp)
  42d481:	48 c7 44 24 08 03 00 00 00 	movq	$3, 8(%rsp)
  42d48a:	e8 b1 4f ff ff 	callq	-45135 <runtime.printstring>
  42d48f:	48 8b 44 24 50 	movq	80(%rsp), %rax
  42d494:	48 89 04 24 	movq	%rax, (%rsp)
  42d498:	e8 e3 4d ff ff 	callq	-45597 <runtime.printint>
  42d49d:	48 8d 05 04 ce 03 00 	leaq	249348(%rip), %rax
  42d4a4:	48 89 04 24 	movq	%rax, (%rsp)
  42d4a8:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  42d4b1:	e8 8a 4f ff ff 	callq	-45174 <runtime.printstring>
  42d4b6:	8b 44 24 1c 	movl	28(%rsp), %eax
  42d4ba:	8b 4c 24 24 	movl	36(%rsp), %ecx
  42d4be:	29 c8 	subl	%ecx, %eax
  42d4c0:	48 89 04 24 	movq	%rax, (%rsp)
  42d4c4:	e8 a7 4c ff ff 	callq	-45913 <runtime.printuint>
  42d4c9:	48 8d 05 ba cd 03 00 	leaq	249274(%rip), %rax
  42d4d0:	48 89 04 24 	movq	%rax, (%rsp)
  42d4d4:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  42d4dd:	e8 5e 4f ff ff 	callq	-45218 <runtime.printstring>
  42d4e2:	48 8b 84 24 b0 00 00 00 	movq	176(%rsp), %rax
  42d4ea:	48 89 04 24 	movq	%rax, (%rsp)
  42d4ee:	e8 8d 4d ff ff 	callq	-45683 <runtime.printint>
  42d4f3:	e8 98 48 ff ff 	callq	-46952 <runtime.printnl>
  42d4f8:	e8 83 46 ff ff 	callq	-47485 <runtime.printunlock>
  42d4fd:	e9 34 fe ff ff 	jmp	-460 <runtime.schedtrace+0x246>
  42d502:	48 c7 c7 ff ff ff ff 	movq	$-1, %rdi
  42d509:	e9 8f fe ff ff 	jmp	-369 <runtime.schedtrace+0x2ad>
  42d50e:	e8 ed 45 ff ff 	callq	-47635 <runtime.printlock>
  42d513:	e8 28 48 ff ff 	callq	-47064 <runtime.printsp>
  42d518:	e8 63 46 ff ff 	callq	-47517 <runtime.printunlock>
  42d51d:	48 8b 44 24 58 	movq	88(%rsp), %rax
  42d522:	48 85 c0 	testq	%rax, %rax
  42d525:	74 62 	je	98 <runtime.schedtrace+0x499>
  42d527:	e8 d4 45 ff ff 	callq	-47660 <runtime.printlock>
  42d52c:	8b 44 24 1c 	movl	28(%rsp), %eax
  42d530:	8b 4c 24 24 	movl	36(%rsp), %ecx
  42d534:	29 c8 	subl	%ecx, %eax
  42d536:	48 89 04 24 	movq	%rax, (%rsp)
  42d53a:	e8 31 4c ff ff 	callq	-46031 <runtime.printuint>
  42d53f:	e8 3c 46 ff ff 	callq	-47556 <runtime.printunlock>
  42d544:	48 8b 05 6d a1 07 00 	movq	500077(%rip), %rax
  42d54b:	48 ff c8 	decq	%rax
  42d54e:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  42d553:	48 39 c8 	cmpq	%rcx, %rax
  42d556:	0f 85 da fd ff ff 	jne	-550 <runtime.schedtrace+0x246>
  42d55c:	e8 9f 45 ff ff 	callq	-47713 <runtime.printlock>
  42d561:	48 8d 05 0e c7 03 00 	leaq	247566(%rip), %rax
  42d568:	48 89 04 24 	movq	%rax, (%rsp)
  42d56c:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  42d575:	e8 c6 4e ff ff 	callq	-45370 <runtime.printstring>
  42d57a:	e8 01 46 ff ff 	callq	-47615 <runtime.printunlock>
  42d57f:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  42d584:	e9 ad fd ff ff 	jmp	-595 <runtime.schedtrace+0x246>
  42d589:	e8 72 45 ff ff 	callq	-47758 <runtime.printlock>
  42d58e:	48 8d 05 c7 c6 03 00 	leaq	247495(%rip), %rax
  42d595:	48 89 04 24 	movq	%rax, (%rsp)
  42d599:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  42d5a2:	e8 99 4e ff ff 	callq	-45415 <runtime.printstring>
  42d5a7:	e8 d4 45 ff ff 	callq	-47660 <runtime.printunlock>
  42d5ac:	e9 76 ff ff ff 	jmp	-138 <runtime.schedtrace+0x437>
  42d5b1:	84 c0 	testb	%al, %al
  42d5b3:	0f 84 e6 04 00 00 	je	1254 <runtime.schedtrace+0x9af>
  42d5b9:	48 8b 05 58 a0 07 00 	movq	499800(%rip), %rax
  42d5c0:	e9 a7 02 00 00 	jmp	679 <runtime.schedtrace+0x77c>
  42d5c5:	48 89 84 24 b8 00 00 00 	movq	%rax, 184(%rsp)
  42d5cd:	48 89 5c 24 30 	movq	%rbx, 48(%rsp)
  42d5d2:	48 63 88 10 01 00 00 	movslq	272(%rax), %rcx
  42d5d9:	48 89 8c 24 b0 00 00 00 	movq	%rcx, 176(%rsp)
  42d5e1:	48 63 90 08 01 00 00 	movslq	264(%rax), %rdx
  42d5e8:	48 89 94 24 a8 00 00 00 	movq	%rdx, 168(%rsp)
  42d5f0:	48 63 b0 00 01 00 00 	movslq	256(%rax), %rsi
  42d5f7:	48 89 b4 24 90 00 00 00 	movq	%rsi, 144(%rsp)
  42d5ff:	48 63 b8 ec 00 00 00 	movslq	236(%rax), %rdi
  42d606:	48 89 bc 24 88 00 00 00 	movq	%rdi, 136(%rsp)
  42d60e:	4c 63 80 e8 00 00 00 	movslq	232(%rax), %r8
  42d615:	4c 89 44 24 70 	movq	%r8, 112(%rsp)
  42d61a:	4c 8b 88 e0 00 00 00 	movq	224(%rax), %r9
  42d621:	4c 89 4c 24 68 	movq	%r9, 104(%rsp)
  42d626:	4c 8b 90 f0 00 00 00 	movq	240(%rax), %r10
  42d62d:	4c 89 94 24 c0 00 00 00 	movq	%r10, 192(%rsp)
  42d635:	4c 8b 98 f8 00 00 00 	movq	248(%rax), %r11
  42d63c:	4c 89 9c 24 80 00 00 00 	movq	%r11, 128(%rsp)
  42d644:	44 0f b6 a0 14 01 00 00 	movzbl	276(%rax), %r12d
  42d64c:	44 88 64 24 17 	movb	%r12b, 23(%rsp)
  42d651:	44 0f b6 a8 15 01 00 00 	movzbl	277(%rax), %r13d
  42d659:	44 88 6c 24 16 	movb	%r13b, 22(%rsp)
  42d65e:	e8 9d 44 ff ff 	callq	-47971 <runtime.printlock>
  42d663:	48 8d 05 17 c6 03 00 	leaq	247319(%rip), %rax
  42d66a:	48 89 04 24 	movq	%rax, (%rsp)
  42d66e:	48 c7 44 24 08 03 00 00 00 	movq	$3, 8(%rsp)
  42d677:	e8 c4 4d ff ff 	callq	-45628 <runtime.printstring>
  42d67c:	48 8b 44 24 68 	movq	104(%rsp), %rax
  42d681:	48 89 04 24 	movq	%rax, (%rsp)
  42d685:	e8 f6 4b ff ff 	callq	-46090 <runtime.printint>
  42d68a:	48 8d 05 61 c6 03 00 	leaq	247393(%rip), %rax
  42d691:	48 89 04 24 	movq	%rax, (%rsp)
  42d695:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  42d69e:	e8 9d 4d ff ff 	callq	-45667 <runtime.printstring>
  42d6a3:	8b 44 24 20 	movl	32(%rsp), %eax
  42d6a7:	48 63 c0 	movslq	%eax, %rax
  42d6aa:	48 89 04 24 	movq	%rax, (%rsp)
  42d6ae:	e8 cd 4b ff ff 	callq	-46131 <runtime.printint>
  42d6b3:	48 8d 05 45 c7 03 00 	leaq	247621(%rip), %rax
  42d6ba:	48 89 04 24 	movq	%rax, (%rsp)
  42d6be:	48 c7 44 24 08 06 00 00 00 	movq	$6, 8(%rsp)
  42d6c7:	e8 74 4d ff ff 	callq	-45708 <runtime.printstring>
  42d6cc:	48 8b 44 24 40 	movq	64(%rsp), %rax
  42d6d1:	48 89 04 24 	movq	%rax, (%rsp)
  42d6d5:	e8 a6 4b ff ff 	callq	-46170 <runtime.printint>
  42d6da:	48 8d 05 0f cd 03 00 	leaq	249103(%rip), %rax
  42d6e1:	48 89 04 24 	movq	%rax, (%rsp)
  42d6e5:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  42d6ee:	e8 4d 4d ff ff 	callq	-45747 <runtime.printstring>
  42d6f3:	48 8b 44 24 70 	movq	112(%rsp), %rax
  42d6f8:	48 89 04 24 	movq	%rax, (%rsp)
  42d6fc:	e8 7f 4b ff ff 	callq	-46209 <runtime.printint>
  42d701:	48 8d 05 f0 cb 03 00 	leaq	248816(%rip), %rax
  42d708:	48 89 04 24 	movq	%rax, (%rsp)
  42d70c:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  42d715:	e8 26 4d ff ff 	callq	-45786 <runtime.printstring>
  42d71a:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  42d722:	48 89 04 24 	movq	%rax, (%rsp)
  42d726:	e8 55 4b ff ff 	callq	-46251 <runtime.printint>
  42d72b:	48 8d 05 04 ce 03 00 	leaq	249348(%rip), %rax
  42d732:	48 89 04 24 	movq	%rax, (%rsp)
  42d736:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  42d73f:	e8 fc 4c ff ff 	callq	-45828 <runtime.printstring>
  42d744:	48 8b 84 24 c0 00 00 00 	movq	192(%rsp), %rax
  42d74c:	48 89 04 24 	movq	%rax, (%rsp)
  42d750:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  42d758:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  42d75d:	e8 de 4c ff ff 	callq	-45858 <runtime.printstring>
  42d762:	48 8d 05 06 c7 03 00 	leaq	247558(%rip), %rax
  42d769:	48 89 04 24 	movq	%rax, (%rsp)
  42d76d:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  42d776:	e8 c5 4c ff ff 	callq	-45883 <runtime.printstring>
  42d77b:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  42d783:	48 89 04 24 	movq	%rax, (%rsp)
  42d787:	e8 f4 4a ff ff 	callq	-46348 <runtime.printint>
  42d78c:	48 8d 05 d5 c6 03 00 	leaq	247509(%rip), %rax
  42d793:	48 89 04 24 	movq	%rax, (%rsp)
  42d797:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  42d7a0:	e8 9b 4c ff ff 	callq	-45925 <runtime.printstring>
  42d7a5:	48 8b 84 24 a8 00 00 00 	movq	168(%rsp), %rax
  42d7ad:	48 89 04 24 	movq	%rax, (%rsp)
  42d7b1:	e8 ca 4a ff ff 	callq	-46390 <runtime.printint>
  42d7b6:	48 8d 05 da c7 03 00 	leaq	247770(%rip), %rax
  42d7bd:	48 89 04 24 	movq	%rax, (%rsp)
  42d7c1:	48 c7 44 24 08 08 00 00 00 	movq	$8, 8(%rsp)
  42d7ca:	e8 71 4c ff ff 	callq	-45967 <runtime.printstring>
  42d7cf:	48 8b 84 24 b0 00 00 00 	movq	176(%rsp), %rax
  42d7d7:	48 89 04 24 	movq	%rax, (%rsp)
  42d7db:	e8 a0 4a ff ff 	callq	-46432 <runtime.printint>
  42d7e0:	48 8d 05 df ca 03 00 	leaq	248543(%rip), %rax
  42d7e7:	48 89 04 24 	movq	%rax, (%rsp)
  42d7eb:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  42d7f4:	e8 47 4c ff ff 	callq	-46009 <runtime.printstring>
  42d7f9:	0f b6 44 24 17 	movzbl	23(%rsp), %eax
  42d7fe:	88 04 24 	movb	%al, (%rsp)
  42d801:	e8 da 45 ff ff 	callq	-47654 <runtime.printbool>
  42d806:	48 8d 05 44 c8 03 00 	leaq	247876(%rip), %rax
  42d80d:	48 89 04 24 	movq	%rax, (%rsp)
  42d811:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  42d81a:	e8 21 4c ff ff 	callq	-46047 <runtime.printstring>
  42d81f:	0f b6 44 24 16 	movzbl	22(%rsp), %eax
  42d824:	88 04 24 	movb	%al, (%rsp)
  42d827:	e8 b4 45 ff ff 	callq	-47692 <runtime.printbool>
  42d82c:	48 8d 05 39 c8 03 00 	leaq	247865(%rip), %rax
  42d833:	48 89 04 24 	movq	%rax, (%rsp)
  42d837:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  42d840:	e8 fb 4b ff ff 	callq	-46085 <runtime.printstring>
  42d845:	48 8b 44 24 30 	movq	48(%rsp), %rax
  42d84a:	48 89 04 24 	movq	%rax, (%rsp)
  42d84e:	e8 2d 4a ff ff 	callq	-46547 <runtime.printint>
  42d853:	e8 38 45 ff ff 	callq	-47816 <runtime.printnl>
  42d858:	e8 23 43 ff ff 	callq	-48349 <runtime.printunlock>
  42d85d:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  42d865:	48 8b 80 50 01 00 00 	movq	336(%rax), %rax
  42d86c:	48 85 c0 	testq	%rax, %rax
  42d86f:	74 5f 	je	95 <runtime.schedtrace+0x7e0>
  42d871:	48 8b 88 d0 00 00 00 	movq	208(%rax), %rcx
  42d878:	48 8b 90 c0 00 00 00 	movq	192(%rax), %rdx
  42d87f:	48 8b 98 68 01 00 00 	movq	360(%rax), %rbx
  42d886:	48 85 c9 	testq	%rcx, %rcx
  42d889:	74 3e 	je	62 <runtime.schedtrace+0x7d9>
  42d88b:	8b 49 08 	movl	8(%rcx), %ecx
  42d88e:	48 85 d2 	testq	%rdx, %rdx
  42d891:	74 2d 	je	45 <runtime.schedtrace+0x7d0>
  42d893:	48 8b 92 98 00 00 00 	movq	152(%rdx), %rdx
  42d89a:	48 89 54 24 40 	movq	%rdx, 64(%rsp)
  42d89f:	89 4c 24 20 	movl	%ecx, 32(%rsp)
  42d8a3:	48 85 db 	testq	%rbx, %rbx
  42d8a6:	74 0c 	je	12 <runtime.schedtrace+0x7c4>
  42d8a8:	48 8b 9b 98 00 00 00 	movq	152(%rbx), %rbx
  42d8af:	e9 11 fd ff ff 	jmp	-751 <runtime.schedtrace+0x4d5>
  42d8b4:	48 c7 c3 ff ff ff ff 	movq	$-1, %rbx
  42d8bb:	e9 05 fd ff ff 	jmp	-763 <runtime.schedtrace+0x4d5>
  42d8c0:	48 c7 c2 ff ff ff ff 	movq	$-1, %rdx
  42d8c7:	eb d1 	jmp	-47 <runtime.schedtrace+0x7aa>
  42d8c9:	b9 ff ff ff ff 	movl	$4294967295, %ecx
  42d8ce:	eb be 	jmp	-66 <runtime.schedtrace+0x79e>
  42d8d0:	48 8d 05 41 60 09 00 	leaq	614465(%rip), %rax
  42d8d7:	48 89 04 24 	movq	%rax, (%rsp)
  42d8db:	e8 40 bc fd ff 	callq	-148416 <runtime.lock>
  42d8e0:	31 c0 	xorl	%eax, %eax
  42d8e2:	e9 2a 01 00 00 	jmp	298 <runtime.schedtrace+0x921>
  42d8e7:	48 89 5c 24 38 	movq	%rbx, 56(%rsp)
  42d8ec:	8b 81 90 00 00 00 	movl	144(%rcx), %eax
  42d8f2:	89 44 24 18 	movl	%eax, 24(%rsp)
  42d8f6:	48 8b 91 98 00 00 00 	movq	152(%rcx), %rdx
  42d8fd:	48 89 94 24 b0 00 00 00 	movq	%rdx, 176(%rsp)
  42d905:	48 8b b1 b0 00 00 00 	movq	176(%rcx), %rsi
  42d90c:	48 89 b4 24 80 00 00 00 	movq	%rsi, 128(%rsp)
  42d914:	48 8b 89 a8 00 00 00 	movq	168(%rcx), %rcx
  42d91b:	48 89 8c 24 c0 00 00 00 	movq	%rcx, 192(%rsp)
  42d923:	e8 d8 41 ff ff 	callq	-48680 <runtime.printlock>
  42d928:	48 8d 05 4f c3 03 00 	leaq	246607(%rip), %rax
  42d92f:	48 89 04 24 	movq	%rax, (%rsp)
  42d933:	48 c7 44 24 08 03 00 00 00 	movq	$3, 8(%rsp)
  42d93c:	e8 ff 4a ff ff 	callq	-46337 <runtime.printstring>
  42d941:	48 8b 84 24 b0 00 00 00 	movq	176(%rsp), %rax
  42d949:	48 89 04 24 	movq	%rax, (%rsp)
  42d94d:	e8 2e 49 ff ff 	callq	-46802 <runtime.printint>
  42d952:	48 8d 05 91 c7 03 00 	leaq	247697(%rip), %rax
  42d959:	48 89 04 24 	movq	%rax, (%rsp)
  42d95d:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  42d966:	e8 d5 4a ff ff 	callq	-46379 <runtime.printstring>
  42d96b:	8b 44 24 18 	movl	24(%rsp), %eax
  42d96f:	89 c0 	movl	%eax, %eax
  42d971:	48 89 04 24 	movq	%rax, (%rsp)
  42d975:	e8 f6 47 ff ff 	callq	-47114 <runtime.printuint>
  42d97a:	48 8d 05 d0 c2 03 00 	leaq	246480(%rip), %rax
  42d981:	48 89 04 24 	movq	%rax, (%rsp)
  42d985:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  42d98e:	e8 ad 4a ff ff 	callq	-46419 <runtime.printstring>
  42d993:	48 8b 84 24 c0 00 00 00 	movq	192(%rsp), %rax
  42d99b:	48 89 04 24 	movq	%rax, (%rsp)
  42d99f:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  42d9a7:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  42d9ac:	e8 8f 4a ff ff 	callq	-46449 <runtime.printstring>
  42d9b1:	48 8d 05 2a c3 03 00 	leaq	246570(%rip), %rax
  42d9b8:	48 89 04 24 	movq	%rax, (%rsp)
  42d9bc:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  42d9c5:	e8 76 4a ff ff 	callq	-46474 <runtime.printstring>
  42d9ca:	48 8b 44 24 48 	movq	72(%rsp), %rax
  42d9cf:	48 89 04 24 	movq	%rax, (%rsp)
  42d9d3:	e8 a8 48 ff ff 	callq	-46936 <runtime.printint>
  42d9d8:	48 8d 05 96 c6 03 00 	leaq	247446(%rip), %rax
  42d9df:	48 89 04 24 	movq	%rax, (%rsp)
  42d9e3:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  42d9ec:	e8 4f 4a ff ff 	callq	-46513 <runtime.printstring>
  42d9f1:	48 8b 44 24 38 	movq	56(%rsp), %rax
  42d9f6:	48 89 04 24 	movq	%rax, (%rsp)
  42d9fa:	e8 81 48 ff ff 	callq	-46975 <runtime.printint>
  42d9ff:	e8 8c 43 ff ff 	callq	-48244 <runtime.printnl>
  42da04:	e8 77 41 ff ff 	callq	-48777 <runtime.printunlock>
  42da09:	48 8b 44 24 60 	movq	96(%rsp), %rax
  42da0e:	48 ff c0 	incq	%rax
  42da11:	48 8b 0d 78 9c 07 00 	movq	498808(%rip), %rcx
  42da18:	48 8b 15 79 9c 07 00 	movq	498809(%rip), %rdx
  42da1f:	48 39 d0 	cmpq	%rdx, %rax
  42da22:	7d 4b 	jge	75 <runtime.schedtrace+0x97f>
  42da24:	48 8b 0c c1 	movq	(%rcx,%rax,8), %rcx
  42da28:	48 8b 51 30 	movq	48(%rcx), %rdx
  42da2c:	48 8b 99 e0 00 00 00 	movq	224(%rcx), %rbx
  42da33:	48 85 d2 	testq	%rdx, %rdx
  42da36:	74 2e 	je	46 <runtime.schedtrace+0x976>
  42da38:	48 8b 92 e0 00 00 00 	movq	224(%rdx), %rdx
  42da3f:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  42da44:	48 89 54 24 48 	movq	%rdx, 72(%rsp)
  42da49:	48 85 db 	testq	%rbx, %rbx
  42da4c:	74 0c 	je	12 <runtime.schedtrace+0x96a>
  42da4e:	48 8b 9b e0 00 00 00 	movq	224(%rbx), %rbx
  42da55:	e9 8d fe ff ff 	jmp	-371 <runtime.schedtrace+0x7f7>
  42da5a:	48 c7 c3 ff ff ff ff 	movq	$-1, %rbx
  42da61:	e9 81 fe ff ff 	jmp	-383 <runtime.schedtrace+0x7f7>
  42da66:	48 c7 c2 ff ff ff ff 	movq	$-1, %rdx
  42da6d:	eb d0 	jmp	-48 <runtime.schedtrace+0x94f>
  42da6f:	48 8d 05 a2 5e 09 00 	leaq	614050(%rip), %rax
  42da76:	48 89 04 24 	movq	%rax, (%rsp)
  42da7a:	e8 41 bc fd ff 	callq	-148415 <runtime.unlock>
  42da7f:	48 8d 05 aa 9e 07 00 	leaq	499370(%rip), %rax
  42da86:	48 89 04 24 	movq	%rax, (%rsp)
  42da8a:	e8 31 bc fd ff 	callq	-148431 <runtime.unlock>
  42da8f:	48 8b ac 24 d0 00 00 00 	movq	208(%rsp), %rbp
  42da97:	48 81 c4 d8 00 00 00 	addq	$216, %rsp
  42da9e:	c3 	retq
  42da9f:	48 8d 05 8a 9e 07 00 	leaq	499338(%rip), %rax
  42daa6:	48 89 04 24 	movq	%rax, (%rsp)
  42daaa:	e8 11 bc fd ff 	callq	-148463 <runtime.unlock>
  42daaf:	48 8b ac 24 d0 00 00 00 	movq	208(%rsp), %rbp
  42dab7:	48 81 c4 d8 00 00 00 	addq	$216, %rsp
  42dabe:	c3 	retq
  42dabf:	8b 05 43 9f 07 00 	movl	499523(%rip), %eax
  42dac5:	48 89 84 24 a0 00 00 00 	movq	%rax, 160(%rsp)
  42dacd:	48 63 0d 28 9f 07 00 	movslq	499496(%rip), %rcx
  42dad4:	48 89 8c 24 b0 00 00 00 	movq	%rcx, 176(%rsp)
  42dadc:	48 63 15 61 9e 07 00 	movslq	499297(%rip), %rdx
  42dae3:	48 89 94 24 a8 00 00 00 	movq	%rdx, 168(%rsp)
  42daeb:	8b 1d 07 9f 07 00 	movl	499463(%rip), %ebx
  42daf1:	48 89 9c 24 98 00 00 00 	movq	%rbx, 152(%rsp)
  42daf9:	e8 02 40 ff ff 	callq	-49150 <runtime.printlock>
  42dafe:	48 8d 05 a9 c8 03 00 	leaq	247977(%rip), %rax
  42db05:	48 89 04 24 	movq	%rax, (%rsp)
  42db09:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  42db12:	e8 29 49 ff ff 	callq	-46807 <runtime.printstring>
  42db17:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  42db1f:	48 89 04 24 	movq	%rax, (%rsp)
  42db23:	e8 48 46 ff ff 	callq	-47544 <runtime.printuint>
  42db28:	48 8d 05 af cc 03 00 	leaq	249007(%rip), %rax
  42db2f:	48 89 04 24 	movq	%rax, (%rsp)
  42db33:	48 c7 44 24 08 0e 00 00 00 	movq	$14, 8(%rsp)
  42db3c:	e8 ff 48 ff ff 	callq	-46849 <runtime.printstring>
  42db41:	48 8b 84 24 a8 00 00 00 	movq	168(%rsp), %rax
  42db49:	48 89 04 24 	movq	%rax, (%rsp)
  42db4d:	e8 2e 47 ff ff 	callq	-47314 <runtime.printint>
  42db52:	48 8d 05 77 c7 03 00 	leaq	247671(%rip), %rax
  42db59:	48 89 04 24 	movq	%rax, (%rsp)
  42db5d:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  42db66:	e8 d5 48 ff ff 	callq	-46891 <runtime.printstring>
  42db6b:	48 8b 84 24 b0 00 00 00 	movq	176(%rsp), %rax
  42db73:	48 89 04 24 	movq	%rax, (%rsp)
  42db77:	e8 04 47 ff ff 	callq	-47356 <runtime.printint>
  42db7c:	48 8d 05 ef c9 03 00 	leaq	248303(%rip), %rax
  42db83:	48 89 04 24 	movq	%rax, (%rsp)
  42db87:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  42db90:	e8 ab 48 ff ff 	callq	-46933 <runtime.printstring>
  42db95:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  42db9d:	48 89 04 24 	movq	%rax, (%rsp)
  42dba1:	e8 ca 45 ff ff 	callq	-47670 <runtime.printuint>
  42dba6:	e8 e5 41 ff ff 	callq	-48667 <runtime.printnl>
  42dbab:	e8 d0 3f ff ff 	callq	-49200 <runtime.printunlock>
  42dbb0:	0f b6 84 24 e0 00 00 00 	movzbl	224(%rsp), %eax
  42dbb8:	e9 57 f7 ff ff 	jmp	-2217 <runtime.schedtrace+0x224>
  42dbbd:	e8 ae 69 01 00 	callq	92590 <runtime.morestack_noctxt>
  42dbc2:	e9 29 f5 ff ff 	jmp	-2775 <runtime.schedtrace>
  42dbc7:	cc 	int3
  42dbc8:	cc 	int3
  42dbc9:	cc 	int3
  42dbca:	cc 	int3
  42dbcb:	cc 	int3
  42dbcc:	cc 	int3
  42dbcd:	cc 	int3
  42dbce:	cc 	int3
  42dbcf:	cc 	int3

runtime.mput:
  42dbd0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42dbd9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42dbdd:	76 43 	jbe	67 <runtime.mput+0x52>
  42dbdf:	48 83 ec 08 	subq	$8, %rsp
  42dbe3:	48 89 2c 24 	movq	%rbp, (%rsp)
  42dbe7:	48 8d 2c 24 	leaq	(%rsp), %rbp
  42dbeb:	48 8b 05 46 9d 07 00 	movq	499014(%rip), %rax
  42dbf2:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  42dbf7:	48 89 81 58 01 00 00 	movq	%rax, 344(%rcx)
  42dbfe:	48 8d 05 33 9d 07 00 	leaq	498995(%rip), %rax
  42dc05:	84 00 	testb	%al, (%rax)
  42dc07:	48 89 0d 2a 9d 07 00 	movq	%rcx, 498986(%rip)
  42dc0e:	ff 05 2c 9d 07 00 	incl	498988(%rip)
  42dc14:	e8 57 e8 ff ff 	callq	-6057 <runtime.checkdead>
  42dc19:	48 8b 2c 24 	movq	(%rsp), %rbp
  42dc1d:	48 83 c4 08 	addq	$8, %rsp
  42dc21:	c3 	retq
  42dc22:	e8 49 69 01 00 	callq	92489 <runtime.morestack_noctxt>
  42dc27:	eb a7 	jmp	-89 <runtime.mput>
  42dc29:	cc 	int3
  42dc2a:	cc 	int3
  42dc2b:	cc 	int3
  42dc2c:	cc 	int3
  42dc2d:	cc 	int3
  42dc2e:	cc 	int3
  42dc2f:	cc 	int3

runtime.globrunqget:
  42dc30:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42dc39:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42dc3d:	0f 86 1a 01 00 00 	jbe	282 <runtime.globrunqget+0x12d>
  42dc43:	48 83 ec 30 	subq	$48, %rsp
  42dc47:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  42dc4c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  42dc51:	8b 05 31 9d 07 00 	movl	498993(%rip), %eax
  42dc57:	85 c0 	testl	%eax, %eax
  42dc59:	0f 84 e4 00 00 00 	je	228 <runtime.globrunqget+0x113>
  42dc5f:	8b 0d 7b 5c 09 00 	movl	613499(%rip), %ecx
  42dc65:	85 c9 	testl	%ecx, %ecx
  42dc67:	0f 84 e9 00 00 00 	je	233 <runtime.globrunqget+0x126>
  42dc6d:	89 c2 	movl	%eax, %edx
  42dc6f:	89 d3 	movl	%edx, %ebx
  42dc71:	83 f9 ff 	cmpl	$-1, %ecx
  42dc74:	74 05 	je	5 <runtime.globrunqget+0x4b>
  42dc76:	99 	cltd
  42dc77:	f7 f9 	idivl	%ecx
  42dc79:	eb 05 	jmp	5 <runtime.globrunqget+0x50>
  42dc7b:	48 f7 d8 	negq	%rax
  42dc7e:	31 d2 	xorl	%edx, %edx
  42dc80:	8d 48 01 	leal	1(%rax), %ecx
  42dc83:	39 d9 	cmpl	%ebx, %ecx
  42dc85:	0f 8e af 00 00 00 	jle	175 <runtime.globrunqget+0x10a>
  42dc8b:	89 d8 	movl	%ebx, %eax
  42dc8d:	8b 4c 24 40 	movl	64(%rsp), %ecx
  42dc91:	85 c9 	testl	%ecx, %ecx
  42dc93:	0f 8e 9a 00 00 00 	jle	154 <runtime.globrunqget+0x103>
  42dc99:	39 cb 	cmpl	%ecx, %ebx
  42dc9b:	0f 8e 92 00 00 00 	jle	146 <runtime.globrunqget+0x103>
  42dca1:	81 f9 80 00 00 00 	cmpl	$128, %ecx
  42dca7:	7e 05 	jle	5 <runtime.globrunqget+0x7e>
  42dca9:	b9 80 00 00 00 	movl	$128, %ecx
  42dcae:	29 c8 	subl	%ecx, %eax
  42dcb0:	89 05 d2 9c 07 00 	movl	%eax, 498898(%rip)
  42dcb6:	85 c0 	testl	%eax, %eax
  42dcb8:	75 0b 	jne	11 <runtime.globrunqget+0x95>
  42dcba:	48 c7 05 bb 9c 07 00 00 00 00 00 	movq	$0, 498875(%rip)
  42dcc5:	48 8b 05 ac 9c 07 00 	movq	498860(%rip), %rax
  42dccc:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  42dcd1:	48 8b 90 b8 00 00 00 	movq	184(%rax), %rdx
  42dcd8:	48 89 15 99 9c 07 00 	movq	%rdx, 498841(%rip)
  42dcdf:	ff c9 	decl	%ecx
  42dce1:	eb 3d 	jmp	61 <runtime.globrunqget+0xf0>
  42dce3:	89 4c 24 1c 	movl	%ecx, 28(%rsp)
  42dce7:	48 8b 05 8a 9c 07 00 	movq	498826(%rip), %rax
  42dcee:	48 8b 88 b8 00 00 00 	movq	184(%rax), %rcx
  42dcf5:	48 89 0d 7c 9c 07 00 	movq	%rcx, 498812(%rip)
  42dcfc:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  42dd01:	48 89 0c 24 	movq	%rcx, (%rsp)
  42dd05:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  42dd0a:	c6 44 24 10 00 	movb	$0, 16(%rsp)
  42dd0f:	e8 3c 01 00 00 	callq	316 <runtime.runqput>
  42dd14:	8b 44 24 1c 	movl	28(%rsp), %eax
  42dd18:	8d 48 ff 	leal	-1(%rax), %ecx
  42dd1b:	48 8b 44 24 20 	movq	32(%rsp), %rax
  42dd20:	85 c9 	testl	%ecx, %ecx
  42dd22:	7f bf 	jg	-65 <runtime.globrunqget+0xb3>
  42dd24:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  42dd29:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  42dd2e:	48 83 c4 30 	addq	$48, %rsp
  42dd32:	c3 	retq
  42dd33:	89 d9 	movl	%ebx, %ecx
  42dd35:	e9 67 ff ff ff 	jmp	-153 <runtime.globrunqget+0x71>
  42dd3a:	89 d8 	movl	%ebx, %eax
  42dd3c:	89 cb 	movl	%ecx, %ebx
  42dd3e:	e9 4a ff ff ff 	jmp	-182 <runtime.globrunqget+0x5d>
  42dd43:	48 c7 44 24 48 00 00 00 00 	movq	$0, 72(%rsp)
  42dd4c:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  42dd51:	48 83 c4 30 	addq	$48, %rsp
  42dd55:	c3 	retq
  42dd56:	e8 c5 1d ff ff 	callq	-57915 <runtime.panicdivide>
  42dd5b:	0f 0b 	ud2
  42dd5d:	e8 0e 68 01 00 	callq	92174 <runtime.morestack_noctxt>
  42dd62:	e9 c9 fe ff ff 	jmp	-311 <runtime.globrunqget>
  42dd67:	cc 	int3
  42dd68:	cc 	int3
  42dd69:	cc 	int3
  42dd6a:	cc 	int3
  42dd6b:	cc 	int3
  42dd6c:	cc 	int3
  42dd6d:	cc 	int3
  42dd6e:	cc 	int3
  42dd6f:	cc 	int3

runtime.pidleput:
  42dd70:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42dd79:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42dd7d:	76 7a 	jbe	122 <runtime.pidleput+0x89>
  42dd7f:	48 83 ec 18 	subq	$24, %rsp
  42dd83:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  42dd88:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  42dd8d:	48 8b 44 24 20 	movq	32(%rsp), %rax
  42dd92:	48 89 04 24 	movq	%rax, (%rsp)
  42dd96:	e8 75 00 00 00 	callq	117 <runtime.runqempty>
  42dd9b:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  42dda0:	84 c0 	testb	%al, %al
  42dda2:	74 3a 	je	58 <runtime.pidleput+0x6e>
  42dda4:	48 8b 05 bd 9b 07 00 	movq	498621(%rip), %rax
  42ddab:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  42ddb0:	48 89 41 10 	movq	%rax, 16(%rcx)
  42ddb4:	48 8d 05 ad 9b 07 00 	leaq	498605(%rip), %rax
  42ddbb:	84 00 	testb	%al, (%rax)
  42ddbd:	48 89 0d a4 9b 07 00 	movq	%rcx, 498596(%rip)
  42ddc4:	b8 01 00 00 00 	movl	$1, %eax
  42ddc9:	48 8d 0d a0 9b 07 00 	leaq	498592(%rip), %rcx
  42ddd0:	f0 	lock
  42ddd1:	0f c1 01 	xaddl	%eax, (%rcx)
  42ddd4:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  42ddd9:	48 83 c4 18 	addq	$24, %rsp
  42dddd:	c3 	retq
  42ddde:	48 8d 05 b3 ef 03 00 	leaq	257971(%rip), %rax
  42dde5:	48 89 04 24 	movq	%rax, (%rsp)
  42dde9:	48 c7 44 24 08 23 00 00 00 	movq	$35, 8(%rsp)
  42ddf2:	e8 d9 33 ff ff 	callq	-52263 <runtime.throw>
  42ddf7:	0f 0b 	ud2
  42ddf9:	e8 72 67 01 00 	callq	92018 <runtime.morestack_noctxt>
  42ddfe:	e9 6d ff ff ff 	jmp	-147 <runtime.pidleput>
  42de03:	cc 	int3
  42de04:	cc 	int3
  42de05:	cc 	int3
  42de06:	cc 	int3
  42de07:	cc 	int3
  42de08:	cc 	int3
  42de09:	cc 	int3
  42de0a:	cc 	int3
  42de0b:	cc 	int3
  42de0c:	cc 	int3
  42de0d:	cc 	int3
  42de0e:	cc 	int3
  42de0f:	cc 	int3

runtime.runqempty:
  42de10:	48 8b 44 24 08 	movq	8(%rsp), %rax
  42de15:	8b 88 e0 05 00 00 	movl	1504(%rax), %ecx
  42de1b:	8b 90 e4 05 00 00 	movl	1508(%rax), %edx
  42de21:	48 8b 98 e8 0d 00 00 	movq	3560(%rax), %rbx
  42de28:	8b b0 e4 05 00 00 	movl	1508(%rax), %esi
  42de2e:	39 d6 	cmpl	%edx, %esi
  42de30:	75 e3 	jne	-29 <runtime.runqempty+0x5>
  42de32:	39 ca 	cmpl	%ecx, %edx
  42de34:	75 0b 	jne	11 <runtime.runqempty+0x31>
  42de36:	48 85 db 	testq	%rbx, %rbx
  42de39:	0f 94 c0 	sete	%al
  42de3c:	88 44 24 10 	movb	%al, 16(%rsp)
  42de40:	c3 	retq
  42de41:	31 c0 	xorl	%eax, %eax
  42de43:	eb f7 	jmp	-9 <runtime.runqempty+0x2c>
  42de45:	cc 	int3
  42de46:	cc 	int3
  42de47:	cc 	int3
  42de48:	cc 	int3
  42de49:	cc 	int3
  42de4a:	cc 	int3
  42de4b:	cc 	int3
  42de4c:	cc 	int3
  42de4d:	cc 	int3
  42de4e:	cc 	int3
  42de4f:	cc 	int3

runtime.runqput:
  42de50:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42de59:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42de5d:	0f 86 dd 00 00 00 	jbe	221 <runtime.runqput+0xf0>
  42de63:	48 83 ec 38 	subq	$56, %rsp
  42de67:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  42de6c:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  42de71:	0f b6 4c 24 50 	movzbl	80(%rsp), %ecx
  42de76:	84 c9 	testb	%cl, %cl
  42de78:	0f 84 b3 00 00 00 	je	179 <runtime.runqput+0xe1>
  42de7e:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  42de83:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  42de88:	eb 03 	jmp	3 <runtime.runqput+0x3d>
  42de8a:	48 89 da 	movq	%rbx, %rdx
  42de8d:	48 8b 81 e8 0d 00 00 	movq	3560(%rcx), %rax
  42de94:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  42de99:	48 89 d3 	movq	%rdx, %rbx
  42de9c:	f0 	lock
  42de9d:	48 0f b1 91 e8 0d 00 00 	cmpxchgq	%rdx, 3560(%rcx)
  42dea5:	0f 94 c2 	sete	%dl
  42dea8:	84 d2 	testb	%dl, %dl
  42deaa:	74 de 	je	-34 <runtime.runqput+0x3a>
  42deac:	48 8b 44 24 20 	movq	32(%rsp), %rax
  42deb1:	48 85 c0 	testq	%rax, %rax
  42deb4:	74 71 	je	113 <runtime.runqput+0xd7>
  42deb6:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  42debb:	eb 0a 	jmp	10 <runtime.runqput+0x77>
  42debd:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42dec2:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  42dec7:	8b 91 e0 05 00 00 	movl	1504(%rcx), %edx
  42decd:	8b 99 e4 05 00 00 	movl	1508(%rcx), %ebx
  42ded3:	89 de 	movl	%ebx, %esi
  42ded5:	29 d3 	subl	%edx, %ebx
  42ded7:	81 fb 00 01 00 00 	cmpl	$256, %ebx
  42dedd:	72 29 	jb	41 <runtime.runqput+0xb8>
  42dedf:	48 89 0c 24 	movq	%rcx, (%rsp)
  42dee3:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  42dee8:	89 54 24 10 	movl	%edx, 16(%rsp)
  42deec:	89 74 24 14 	movl	%esi, 20(%rsp)
  42def0:	e8 5b 00 00 00 	callq	91 <runtime.runqputslow>
  42def5:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  42defa:	84 c0 	testb	%al, %al
  42defc:	74 bf 	je	-65 <runtime.runqput+0x6d>
  42defe:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  42df03:	48 83 c4 38 	addq	$56, %rsp
  42df07:	c3 	retq
  42df08:	40 0f b6 d6 	movzbl	%sil, %edx
  42df0c:	48 89 84 d1 e8 05 00 00 	movq	%rax, 1512(%rcx,%rdx,8)
  42df14:	8d 46 01 	leal	1(%rsi), %eax
  42df17:	87 81 e4 05 00 00 	xchgl	%eax, 1508(%rcx)
  42df1d:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  42df22:	48 83 c4 38 	addq	$56, %rsp
  42df26:	c3 	retq
  42df27:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  42df2c:	48 83 c4 38 	addq	$56, %rsp
  42df30:	c3 	retq
  42df31:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  42df36:	48 8b 44 24 48 	movq	72(%rsp), %rax
  42df3b:	e9 76 ff ff ff 	jmp	-138 <runtime.runqput+0x66>
  42df40:	e8 2b 66 01 00 	callq	91691 <runtime.morestack_noctxt>
  42df45:	e9 06 ff ff ff 	jmp	-250 <runtime.runqput>
  42df4a:	cc 	int3
  42df4b:	cc 	int3
  42df4c:	cc 	int3
  42df4d:	cc 	int3
  42df4e:	cc 	int3
  42df4f:	cc 	int3

runtime.runqputslow:
  42df50:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42df59:	48 8d 84 24 58 fc ff ff 	leaq	-936(%rsp), %rax
  42df61:	48 3b 41 10 	cmpq	16(%rcx), %rax
  42df65:	0f 86 f8 01 00 00 	jbe	504 <runtime.runqputslow+0x213>
  42df6b:	48 81 ec 28 04 00 00 	subq	$1064, %rsp
  42df72:	48 89 ac 24 20 04 00 00 	movq	%rbp, 1056(%rsp)
  42df7a:	48 8d ac 24 20 04 00 00 	leaq	1056(%rsp), %rbp
  42df82:	48 c7 44 24 18 00 00 00 00 	movq	$0, 24(%rsp)
  42df8b:	48 8d 7c 24 20 	leaq	32(%rsp), %rdi
  42df90:	0f 57 c0 	xorps	%xmm0, %xmm0
  42df93:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  42df98:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  42df9d:	e8 fe 89 01 00 	callq	100862 <runtime.duffzero>
  42dfa2:	48 8b 6d 00 	movq	(%rbp), %rbp
  42dfa6:	8b 8c 24 44 04 00 00 	movl	1092(%rsp), %ecx
  42dfad:	8b 84 24 40 04 00 00 	movl	1088(%rsp), %eax
  42dfb4:	29 c1 	subl	%eax, %ecx
  42dfb6:	d1 e9 	shrl	%ecx
  42dfb8:	81 f9 80 00 00 00 	cmpl	$128, %ecx
  42dfbe:	0f 85 84 01 00 00 	jne	388 <runtime.runqputslow+0x1f8>
  42dfc4:	48 8b 94 24 30 04 00 00 	movq	1072(%rsp), %rdx
  42dfcc:	31 db 	xorl	%ebx, %ebx
  42dfce:	eb 0e 	jmp	14 <runtime.runqputslow+0x8e>
  42dfd0:	89 df 	movl	%ebx, %edi
  42dfd2:	48 c1 e3 03 	shlq	$3, %rbx
  42dfd6:	48 89 74 1c 18 	movq	%rsi, 24(%rsp,%rbx)
  42dfdb:	8d 5f 01 	leal	1(%rdi), %ebx
  42dfde:	39 cb 	cmpl	%ecx, %ebx
  42dfe0:	73 1f 	jae	31 <runtime.runqputslow+0xb1>
  42dfe2:	84 02 	testb	%al, (%rdx)
  42dfe4:	8d 34 03 	leal	(%rbx,%rax), %esi
  42dfe7:	40 0f b6 f6 	movzbl	%sil, %esi
  42dfeb:	48 8b b4 f2 e8 05 00 00 	movq	1512(%rdx,%rsi,8), %rsi
  42dff3:	48 81 fb 81 00 00 00 	cmpq	$129, %rbx
  42dffa:	72 d4 	jb	-44 <runtime.runqputslow+0x80>
  42dffc:	e9 40 01 00 00 	jmp	320 <runtime.runqputslow+0x1f1>
  42e001:	8d 1c 01 	leal	(%rcx,%rax), %ebx
  42e004:	f0 	lock
  42e005:	0f b1 9a e0 05 00 00 	cmpxchgl	%ebx, 1504(%rdx)
  42e00c:	0f 94 c2 	sete	%dl
  42e00f:	84 d2 	testb	%dl, %dl
  42e011:	0f 84 04 01 00 00 	je	260 <runtime.runqputslow+0x1cb>
  42e017:	48 81 f9 81 00 00 00 	cmpq	$129, %rcx
  42e01e:	0f 83 16 01 00 00 	jae	278 <runtime.runqputslow+0x1ea>
  42e024:	89 c8 	movl	%ecx, %eax
  42e026:	48 c1 e1 03 	shlq	$3, %rcx
  42e02a:	48 8b 94 24 38 04 00 00 	movq	1080(%rsp), %rdx
  42e032:	48 89 54 0c 18 	movq	%rdx, 24(%rsp,%rcx)
  42e037:	31 c9 	xorl	%ecx, %ecx
  42e039:	eb 15 	jmp	21 <runtime.runqputslow+0x100>
  42e03b:	48 8d 9a b8 00 00 00 	leaq	184(%rdx), %rbx
  42e042:	84 03 	testb	%al, (%rbx)
  42e044:	48 8b 5c cc 18 	movq	24(%rsp,%rcx,8), %rbx
  42e049:	48 89 9a b8 00 00 00 	movq	%rbx, 184(%rdx)
  42e050:	39 c1 	cmpl	%eax, %ecx
  42e052:	73 24 	jae	36 <runtime.runqputslow+0x128>
  42e054:	48 81 f9 81 00 00 00 	cmpq	$129, %rcx
  42e05b:	0f 83 d2 00 00 00 	jae	210 <runtime.runqputslow+0x1e3>
  42e061:	48 8b 54 cc 18 	movq	24(%rsp,%rcx,8), %rdx
  42e066:	84 02 	testb	%al, (%rdx)
  42e068:	ff c1 	incl	%ecx
  42e06a:	48 81 f9 81 00 00 00 	cmpq	$129, %rcx
  42e071:	72 c8 	jb	-56 <runtime.runqputslow+0xeb>
  42e073:	e9 bb 00 00 00 	jmp	187 <runtime.runqputslow+0x1e3>
  42e078:	89 44 24 14 	movl	%eax, 20(%rsp)
  42e07c:	48 8d 05 ad 98 07 00 	leaq	497837(%rip), %rax
  42e083:	48 89 04 24 	movq	%rax, (%rsp)
  42e087:	e8 94 b4 fd ff 	callq	-150380 <runtime.lock>
  42e08c:	8b 44 24 14 	movl	20(%rsp), %eax
  42e090:	48 8b 4c c4 18 	movq	24(%rsp,%rax,8), %rcx
  42e095:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  42e09a:	48 c7 81 b8 00 00 00 00 00 00 00 	movq	$0, 184(%rcx)
  42e0a5:	48 8b 1d d4 98 07 00 	movq	497876(%rip), %rbx
  42e0ac:	48 85 db 	testq	%rbx, %rbx
  42e0af:	74 58 	je	88 <runtime.runqputslow+0x1b9>
  42e0b1:	48 8d b3 b8 00 00 00 	leaq	184(%rbx), %rsi
  42e0b8:	84 06 	testb	%al, (%rsi)
  42e0ba:	48 89 93 b8 00 00 00 	movq	%rdx, 184(%rbx)
  42e0c1:	48 8d 15 b8 98 07 00 	leaq	497848(%rip), %rdx
  42e0c8:	84 02 	testb	%al, (%rdx)
  42e0ca:	48 89 0d af 98 07 00 	movq	%rcx, 497839(%rip)
  42e0d1:	8b 0d b1 98 07 00 	movl	497841(%rip), %ecx
  42e0d7:	01 c8 	addl	%ecx, %eax
  42e0d9:	ff c0 	incl	%eax
  42e0db:	89 05 a7 98 07 00 	movl	%eax, 497831(%rip)
  42e0e1:	48 8d 05 48 98 07 00 	leaq	497736(%rip), %rax
  42e0e8:	48 89 04 24 	movq	%rax, (%rsp)
  42e0ec:	e8 cf b5 fd ff 	callq	-150065 <runtime.unlock>
  42e0f1:	c6 84 24 48 04 00 00 01 	movb	$1, 1096(%rsp)
  42e0f9:	48 8b ac 24 20 04 00 00 	movq	1056(%rsp), %rbp
  42e101:	48 81 c4 28 04 00 00 	addq	$1064, %rsp
  42e108:	c3 	retq
  42e109:	48 8d 1d 68 98 07 00 	leaq	497768(%rip), %rbx
  42e110:	84 03 	testb	%al, (%rbx)
  42e112:	48 89 15 5f 98 07 00 	movq	%rdx, 497759(%rip)
  42e119:	eb a6 	jmp	-90 <runtime.runqputslow+0x171>
  42e11b:	c6 84 24 48 04 00 00 00 	movb	$0, 1096(%rsp)
  42e123:	48 8b ac 24 20 04 00 00 	movq	1056(%rsp), %rbp
  42e12b:	48 81 c4 28 04 00 00 	addq	$1064, %rsp
  42e132:	c3 	retq
  42e133:	e8 08 19 ff ff 	callq	-59128 <runtime.panicindex>
  42e138:	0f 0b 	ud2
  42e13a:	e8 01 19 ff ff 	callq	-59135 <runtime.panicindex>
  42e13f:	0f 0b 	ud2
  42e141:	e8 fa 18 ff ff 	callq	-59142 <runtime.panicindex>
  42e146:	0f 0b 	ud2
  42e148:	48 8d 05 2a e4 03 00 	leaq	255018(%rip), %rax
  42e14f:	48 89 04 24 	movq	%rax, (%rsp)
  42e153:	48 c7 44 24 08 1e 00 00 00 	movq	$30, 8(%rsp)
  42e15c:	e8 6f 30 ff ff 	callq	-53137 <runtime.throw>
  42e161:	0f 0b 	ud2
  42e163:	e8 08 64 01 00 	callq	91144 <runtime.morestack_noctxt>
  42e168:	e9 e3 fd ff ff 	jmp	-541 <runtime.runqputslow>
  42e16d:	cc 	int3
  42e16e:	cc 	int3
  42e16f:	cc 	int3

runtime.runqget:
  42e170:	48 83 ec 10 	subq	$16, %rsp
  42e174:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  42e179:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  42e17e:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  42e183:	48 8b 81 e8 0d 00 00 	movq	3560(%rcx), %rax
  42e18a:	48 85 c0 	testq	%rax, %rax
  42e18d:	74 2e 	je	46 <runtime.runqget+0x4d>
  42e18f:	48 89 04 24 	movq	%rax, (%rsp)
  42e193:	31 d2 	xorl	%edx, %edx
  42e195:	f0 	lock
  42e196:	48 0f b1 91 e8 0d 00 00 	cmpxchgq	%rdx, 3560(%rcx)
  42e19e:	0f 94 c3 	sete	%bl
  42e1a1:	84 db 	testb	%bl, %bl
  42e1a3:	74 de 	je	-34 <runtime.runqget+0x13>
  42e1a5:	48 8b 04 24 	movq	(%rsp), %rax
  42e1a9:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  42e1ae:	c6 44 24 28 01 	movb	$1, 40(%rsp)
  42e1b3:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  42e1b8:	48 83 c4 10 	addq	$16, %rsp
  42e1bc:	c3 	retq
  42e1bd:	8b 91 e0 05 00 00 	movl	1504(%rcx), %edx
  42e1c3:	8b 99 e4 05 00 00 	movl	1508(%rcx), %ebx
  42e1c9:	39 d3 	cmpl	%edx, %ebx
  42e1cb:	74 33 	je	51 <runtime.runqget+0x90>
  42e1cd:	0f b6 da 	movzbl	%dl, %ebx
  42e1d0:	48 8b 9c d9 e8 05 00 00 	movq	1512(%rcx,%rbx,8), %rbx
  42e1d8:	8d 72 01 	leal	1(%rdx), %esi
  42e1db:	89 d0 	movl	%edx, %eax
  42e1dd:	f0 	lock
  42e1de:	0f b1 b1 e0 05 00 00 	cmpxchgl	%esi, 1504(%rcx)
  42e1e5:	0f 94 c2 	sete	%dl
  42e1e8:	84 d2 	testb	%dl, %dl
  42e1ea:	74 d1 	je	-47 <runtime.runqget+0x4d>
  42e1ec:	48 89 5c 24 20 	movq	%rbx, 32(%rsp)
  42e1f1:	c6 44 24 28 00 	movb	$0, 40(%rsp)
  42e1f6:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  42e1fb:	48 83 c4 10 	addq	$16, %rsp
  42e1ff:	c3 	retq
  42e200:	48 c7 44 24 20 00 00 00 00 	movq	$0, 32(%rsp)
  42e209:	c6 44 24 28 00 	movb	$0, 40(%rsp)
  42e20e:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  42e213:	48 83 c4 10 	addq	$16, %rsp
  42e217:	c3 	retq
  42e218:	cc 	int3
  42e219:	cc 	int3
  42e21a:	cc 	int3
  42e21b:	cc 	int3
  42e21c:	cc 	int3
  42e21d:	cc 	int3
  42e21e:	cc 	int3
  42e21f:	cc 	int3

runtime.runqgrab:
  42e220:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42e229:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42e22d:	0f 86 32 01 00 00 	jbe	306 <runtime.runqgrab+0x145>
  42e233:	48 83 ec 18 	subq	$24, %rsp
  42e237:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  42e23c:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  42e241:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  42e246:	8b 91 e0 05 00 00 	movl	1504(%rcx), %edx
  42e24c:	8b 99 e4 05 00 00 	movl	1508(%rcx), %ebx
  42e252:	29 d3 	subl	%edx, %ebx
  42e254:	89 de 	movl	%ebx, %esi
  42e256:	d1 eb 	shrl	%ebx
  42e258:	29 de 	subl	%ebx, %esi
  42e25a:	85 f6 	testl	%esi, %esi
  42e25c:	0f 85 8e 00 00 00 	jne	142 <runtime.runqgrab+0xd0>
  42e262:	0f b6 54 24 34 	movzbl	52(%rsp), %edx
  42e267:	84 d2 	testb	%dl, %dl
  42e269:	74 73 	je	115 <runtime.runqgrab+0xbe>
  42e26b:	48 8b 81 e8 0d 00 00 	movq	3560(%rcx), %rax
  42e272:	48 85 c0 	testq	%rax, %rax
  42e275:	74 67 	je	103 <runtime.runqgrab+0xbe>
  42e277:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  42e27c:	8b 59 0c 	movl	12(%rcx), %ebx
  42e27f:	83 fb 01 	cmpl	$1, %ebx
  42e282:	74 3d 	je	61 <runtime.runqgrab+0xa1>
  42e284:	31 db 	xorl	%ebx, %ebx
  42e286:	f0 	lock
  42e287:	48 0f b1 99 e8 0d 00 00 	cmpxchgq	%rbx, 3560(%rcx)
  42e28f:	40 0f 94 c6 	sete	%sil
  42e293:	40 84 f6 	testb	%sil, %sil
  42e296:	74 a9 	je	-87 <runtime.runqgrab+0x21>
  42e298:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42e29d:	84 00 	testb	%al, (%rax)
  42e29f:	8b 4c 24 30 	movl	48(%rsp), %ecx
  42e2a3:	0f b6 c9 	movzbl	%cl, %ecx
  42e2a6:	48 8b 54 24 08 	movq	8(%rsp), %rdx
  42e2ab:	48 89 14 c8 	movq	%rdx, (%rax,%rcx,8)
  42e2af:	c7 44 24 38 01 00 00 00 	movl	$1, 56(%rsp)
  42e2b7:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  42e2bc:	48 83 c4 18 	addq	$24, %rsp
  42e2c0:	c3 	retq
  42e2c1:	c7 04 24 03 00 00 00 	movl	$3, (%rsp)
  42e2c8:	e8 e3 95 01 00 	callq	103907 <runtime.usleep>
  42e2cd:	48 8b 44 24 08 	movq	8(%rsp), %rax
  42e2d2:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  42e2d7:	0f b6 54 24 34 	movzbl	52(%rsp), %edx
  42e2dc:	eb a6 	jmp	-90 <runtime.runqgrab+0x64>
  42e2de:	c7 44 24 38 00 00 00 00 	movl	$0, 56(%rsp)
  42e2e6:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  42e2eb:	48 83 c4 18 	addq	$24, %rsp
  42e2ef:	c3 	retq
  42e2f0:	81 fe 80 00 00 00 	cmpl	$128, %esi
  42e2f6:	76 0c 	jbe	12 <runtime.runqgrab+0xe4>
  42e2f8:	0f b6 54 24 34 	movzbl	52(%rsp), %edx
  42e2fd:	31 db 	xorl	%ebx, %ebx
  42e2ff:	e9 3d ff ff ff 	jmp	-195 <runtime.runqgrab+0x21>
  42e304:	48 8b 5c 24 28 	movq	40(%rsp), %rbx
  42e309:	8b 7c 24 30 	movl	48(%rsp), %edi
  42e30d:	31 c0 	xorl	%eax, %eax
  42e30f:	eb 20 	jmp	32 <runtime.runqgrab+0x111>
  42e311:	84 03 	testb	%al, (%rbx)
  42e313:	44 8d 04 10 	leal	(%rax,%rdx), %r8d
  42e317:	45 0f b6 c0 	movzbl	%r8b, %r8d
  42e31b:	4e 8b 84 c1 e8 05 00 00 	movq	1512(%rcx,%r8,8), %r8
  42e323:	44 8d 0c 38 	leal	(%rax,%rdi), %r9d
  42e327:	45 0f b6 c9 	movzbl	%r9b, %r9d
  42e32b:	4e 89 04 cb 	movq	%r8, (%rbx,%r9,8)
  42e32f:	ff c0 	incl	%eax
  42e331:	39 f0 	cmpl	%esi, %eax
  42e333:	72 dc 	jb	-36 <runtime.runqgrab+0xf1>
  42e335:	44 8d 04 16 	leal	(%rsi,%rdx), %r8d
  42e339:	89 d0 	movl	%edx, %eax
  42e33b:	f0 	lock
  42e33c:	44 0f b1 81 e0 05 00 00 	cmpxchgl	%r8d, 1504(%rcx)
  42e344:	0f 94 c2 	sete	%dl
  42e347:	84 d2 	testb	%dl, %dl
  42e349:	75 0c 	jne	12 <runtime.runqgrab+0x137>
  42e34b:	0f b6 54 24 34 	movzbl	52(%rsp), %edx
  42e350:	31 db 	xorl	%ebx, %ebx
  42e352:	e9 ea fe ff ff 	jmp	-278 <runtime.runqgrab+0x21>
  42e357:	89 74 24 38 	movl	%esi, 56(%rsp)
  42e35b:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  42e360:	48 83 c4 18 	addq	$24, %rsp
  42e364:	c3 	retq
  42e365:	e8 06 62 01 00 	callq	90630 <runtime.morestack_noctxt>
  42e36a:	e9 b1 fe ff ff 	jmp	-335 <runtime.runqgrab>
  42e36f:	cc 	int3

runtime.runqsteal:
  42e370:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42e379:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42e37d:	0f 86 cf 00 00 00 	jbe	207 <runtime.runqsteal+0xe2>
  42e383:	48 83 ec 30 	subq	$48, %rsp
  42e387:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  42e38c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  42e391:	48 8b 44 24 38 	movq	56(%rsp), %rax
  42e396:	8b 88 e4 05 00 00 	movl	1508(%rax), %ecx
  42e39c:	89 4c 24 24 	movl	%ecx, 36(%rsp)
  42e3a0:	48 8d 90 e8 05 00 00 	leaq	1512(%rax), %rdx
  42e3a7:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  42e3ac:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  42e3b1:	48 89 14 24 	movq	%rdx, (%rsp)
  42e3b5:	89 4c 24 10 	movl	%ecx, 16(%rsp)
  42e3b9:	0f b6 54 24 48 	movzbl	72(%rsp), %edx
  42e3be:	88 54 24 14 	movb	%dl, 20(%rsp)
  42e3c2:	e8 59 fe ff ff 	callq	-423 <runtime.runqgrab>
  42e3c7:	8b 44 24 18 	movl	24(%rsp), %eax
  42e3cb:	85 c0 	testl	%eax, %eax
  42e3cd:	74 55 	je	85 <runtime.runqsteal+0xb4>
  42e3cf:	8b 4c 24 24 	movl	36(%rsp), %ecx
  42e3d3:	8d 14 08 	leal	(%rax,%rcx), %edx
  42e3d6:	ff ca 	decl	%edx
  42e3d8:	0f b6 da 	movzbl	%dl, %ebx
  42e3db:	48 8b 74 24 38 	movq	56(%rsp), %rsi
  42e3e0:	48 8b 9c de e8 05 00 00 	movq	1512(%rsi,%rbx,8), %rbx
  42e3e8:	83 f8 01 	cmpl	$1, %eax
  42e3eb:	74 28 	je	40 <runtime.runqsteal+0xa5>
  42e3ed:	8b be e0 05 00 00 	movl	1504(%rsi), %edi
  42e3f3:	29 f9 	subl	%edi, %ecx
  42e3f5:	01 c8 	addl	%ecx, %eax
  42e3f7:	ff c8 	decl	%eax
  42e3f9:	3d 00 01 00 00 	cmpl	$256, %eax
  42e3fe:	73 37 	jae	55 <runtime.runqsteal+0xc7>
  42e400:	87 96 e4 05 00 00 	xchgl	%edx, 1508(%rsi)
  42e406:	48 89 5c 24 50 	movq	%rbx, 80(%rsp)
  42e40b:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  42e410:	48 83 c4 30 	addq	$48, %rsp
  42e414:	c3 	retq
  42e415:	48 89 5c 24 50 	movq	%rbx, 80(%rsp)
  42e41a:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  42e41f:	48 83 c4 30 	addq	$48, %rsp
  42e423:	c3 	retq
  42e424:	48 c7 44 24 50 00 00 00 00 	movq	$0, 80(%rsp)
  42e42d:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  42e432:	48 83 c4 30 	addq	$48, %rsp
  42e436:	c3 	retq
  42e437:	48 8d 05 c8 d4 03 00 	leaq	251080(%rip), %rax
  42e43e:	48 89 04 24 	movq	%rax, (%rsp)
  42e442:	48 c7 44 24 08 18 00 00 00 	movq	$24, 8(%rsp)
  42e44b:	e8 80 2d ff ff 	callq	-53888 <runtime.throw>
  42e450:	0f 0b 	ud2
  42e452:	e8 19 61 01 00 	callq	90393 <runtime.morestack_noctxt>
  42e457:	e9 14 ff ff ff 	jmp	-236 <runtime.runqsteal>
  42e45c:	cc 	int3
  42e45d:	cc 	int3
  42e45e:	cc 	int3
  42e45f:	cc 	int3

runtime.(*randomOrder).reset:
  42e460:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42e469:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42e46d:	0f 86 03 01 00 00 	jbe	259 <runtime.(*randomOrder).reset+0x116>
  42e473:	48 83 ec 58 	subq	$88, %rsp
  42e477:	48 89 6c 24 50 	movq	%rbp, 80(%rsp)
  42e47c:	48 8d 6c 24 50 	leaq	80(%rsp), %rbp
  42e481:	8b 44 24 68 	movl	104(%rsp), %eax
  42e485:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  42e48a:	89 01 	movl	%eax, (%rcx)
  42e48c:	48 c7 41 10 00 00 00 00 	movq	$0, 16(%rcx)
  42e494:	ba 01 00 00 00 	movl	$1, %edx
  42e499:	eb 0c 	jmp	12 <runtime.(*randomOrder).reset+0x47>
  42e49b:	8d 53 01 	leal	1(%rbx), %edx
  42e49e:	8b 44 24 68 	movl	104(%rsp), %eax
  42e4a2:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  42e4a7:	39 c2 	cmpl	%eax, %edx
  42e4a9:	0f 87 bd 00 00 00 	ja	189 <runtime.(*randomOrder).reset+0x10c>
  42e4af:	89 54 24 44 	movl	%edx, 68(%rsp)
  42e4b3:	89 14 24 	movl	%edx, (%rsp)
  42e4b6:	89 44 24 04 	movl	%eax, 4(%rsp)
  42e4ba:	e8 c1 00 00 00 	callq	193 <runtime.gcd>
  42e4bf:	8b 44 24 08 	movl	8(%rsp), %eax
  42e4c3:	83 f8 01 	cmpl	$1, %eax
  42e4c6:	0f 85 92 00 00 00 	jne	146 <runtime.(*randomOrder).reset+0xfe>
  42e4cc:	48 8b 44 24 60 	movq	96(%rsp), %rax
  42e4d1:	48 8b 48 10 	movq	16(%rax), %rcx
  42e4d5:	48 8b 50 08 	movq	8(%rax), %rdx
  42e4d9:	48 8b 58 18 	movq	24(%rax), %rbx
  42e4dd:	48 8d 70 08 	leaq	8(%rax), %rsi
  42e4e1:	48 8d 79 01 	leaq	1(%rcx), %rdi
  42e4e5:	48 39 df 	cmpq	%rbx, %rdi
  42e4e8:	7f 11 	jg	17 <runtime.(*randomOrder).reset+0x9b>
  42e4ea:	48 8d 59 01 	leaq	1(%rcx), %rbx
  42e4ee:	48 89 58 10 	movq	%rbx, 16(%rax)
  42e4f2:	8b 5c 24 44 	movl	68(%rsp), %ebx
  42e4f6:	89 1c 8a 	movl	%ebx, (%rdx,%rcx,4)
  42e4f9:	eb a0 	jmp	-96 <runtime.(*randomOrder).reset+0x3b>
  42e4fb:	48 89 74 24 48 	movq	%rsi, 72(%rsp)
  42e500:	48 8d 05 59 8f 02 00 	leaq	167769(%rip), %rax
  42e507:	48 89 04 24 	movq	%rax, (%rsp)
  42e50b:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  42e510:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  42e515:	48 89 5c 24 18 	movq	%rbx, 24(%rsp)
  42e51a:	48 89 7c 24 20 	movq	%rdi, 32(%rsp)
  42e51f:	e8 3c 53 00 00 	callq	21308 <runtime.growslice>
  42e524:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42e529:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  42e52e:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  42e533:	48 8b 5c 24 60 	movq	96(%rsp), %rbx
  42e538:	48 89 53 18 	movq	%rdx, 24(%rbx)
  42e53c:	8b 15 ce 54 09 00 	movl	611534(%rip), %edx
  42e542:	85 d2 	testl	%edx, %edx
  42e544:	75 0c 	jne	12 <runtime.(*randomOrder).reset+0xf2>
  42e546:	48 89 43 08 	movq	%rax, 8(%rbx)
  42e54a:	48 89 c2 	movq	%rax, %rdx
  42e54d:	48 89 d8 	movq	%rbx, %rax
  42e550:	eb 98 	jmp	-104 <runtime.(*randomOrder).reset+0x8a>
  42e552:	48 8b 7c 24 48 	movq	72(%rsp), %rdi
  42e557:	e8 44 83 01 00 	callq	99140 <runtime.gcWriteBarrier>
  42e55c:	eb ec 	jmp	-20 <runtime.(*randomOrder).reset+0xea>
  42e55e:	48 8b 44 24 60 	movq	96(%rsp), %rax
  42e563:	8b 5c 24 44 	movl	68(%rsp), %ebx
  42e567:	e9 2f ff ff ff 	jmp	-209 <runtime.(*randomOrder).reset+0x3b>
  42e56c:	48 8b 6c 24 50 	movq	80(%rsp), %rbp
  42e571:	48 83 c4 58 	addq	$88, %rsp
  42e575:	c3 	retq
  42e576:	e8 f5 5f 01 00 	callq	90101 <runtime.morestack_noctxt>
  42e57b:	e9 e0 fe ff ff 	jmp	-288 <runtime.(*randomOrder).reset>

runtime.gcd:
  42e580:	8b 4c 24 08 	movl	8(%rsp), %ecx
  42e584:	8b 54 24 0c 	movl	12(%rsp), %edx
  42e588:	eb 0a 	jmp	10 <runtime.gcd+0x14>
  42e58a:	89 c8 	movl	%ecx, %eax
  42e58c:	89 d3 	movl	%edx, %ebx
  42e58e:	31 d2 	xorl	%edx, %edx
  42e590:	f7 f3 	divl	%ebx
  42e592:	89 d9 	movl	%ebx, %ecx
  42e594:	85 d2 	testl	%edx, %edx
  42e596:	75 f2 	jne	-14 <runtime.gcd+0xa>
  42e598:	89 4c 24 10 	movl	%ecx, 16(%rsp)
  42e59c:	c3 	retq
  42e59d:	cc 	int3
  42e59e:	cc 	int3
  42e59f:	cc 	int3

runtime.(*profBuf).takeOverflow:
  42e5a0:	48 83 ec 10 	subq	$16, %rsp
  42e5a4:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  42e5a9:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  42e5ae:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  42e5b3:	48 8b 51 10 	movq	16(%rcx), %rdx
  42e5b7:	48 8b 59 18 	movq	24(%rcx), %rbx
  42e5bb:	eb 0e 	jmp	14 <runtime.(*profBuf).takeOverflow+0x2b>
  42e5bd:	48 8b 71 10 	movq	16(%rcx), %rsi
  42e5c1:	48 8b 79 18 	movq	24(%rcx), %rdi
  42e5c5:	48 89 f2 	movq	%rsi, %rdx
  42e5c8:	48 89 fb 	movq	%rdi, %rbx
  42e5cb:	48 89 14 24 	movq	%rdx, (%rsp)
  42e5cf:	85 d2 	testl	%edx, %edx
  42e5d1:	74 32 	je	50 <runtime.(*profBuf).takeOverflow+0x65>
  42e5d3:	48 89 d0 	movq	%rdx, %rax
  42e5d6:	48 c1 ea 20 	shrq	$32, %rdx
  42e5da:	48 ff c2 	incq	%rdx
  42e5dd:	48 c1 e2 20 	shlq	$32, %rdx
  42e5e1:	f0 	lock
  42e5e2:	48 0f b1 51 10 	cmpxchgq	%rdx, 16(%rcx)
  42e5e7:	0f 94 c2 	sete	%dl
  42e5ea:	84 d2 	testb	%dl, %dl
  42e5ec:	74 cf 	je	-49 <runtime.(*profBuf).takeOverflow+0x1d>
  42e5ee:	48 8b 04 24 	movq	(%rsp), %rax
  42e5f2:	89 44 24 20 	movl	%eax, 32(%rsp)
  42e5f6:	48 89 5c 24 28 	movq	%rbx, 40(%rsp)
  42e5fb:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  42e600:	48 83 c4 10 	addq	$16, %rsp
  42e604:	c3 	retq
  42e605:	31 db 	xorl	%ebx, %ebx
  42e607:	eb e5 	jmp	-27 <runtime.(*profBuf).takeOverflow+0x4e>
  42e609:	cc 	int3
  42e60a:	cc 	int3
  42e60b:	cc 	int3
  42e60c:	cc 	int3
  42e60d:	cc 	int3
  42e60e:	cc 	int3
  42e60f:	cc 	int3

runtime.(*profBuf).incrementOverflow:
  42e610:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  42e615:	48 8b 51 10 	movq	16(%rcx), %rdx
  42e619:	85 d2 	testl	%edx, %edx
  42e61b:	74 1a 	je	26 <runtime.(*profBuf).incrementOverflow+0x27>
  42e61d:	83 fa ff 	cmpl	$-1, %edx
  42e620:	74 14 	je	20 <runtime.(*profBuf).incrementOverflow+0x26>
  42e622:	48 8d 5a 01 	leaq	1(%rdx), %rbx
  42e626:	48 89 d0 	movq	%rdx, %rax
  42e629:	f0 	lock
  42e62a:	48 0f b1 59 10 	cmpxchgq	%rbx, 16(%rcx)
  42e62f:	0f 94 c2 	sete	%dl
  42e632:	84 d2 	testb	%dl, %dl
  42e634:	74 df 	je	-33 <runtime.(*profBuf).incrementOverflow+0x5>
  42e636:	c3 	retq
  42e637:	48 8b 44 24 10 	movq	16(%rsp), %rax
  42e63c:	48 87 41 18 	xchgq	%rax, 24(%rcx)
  42e640:	48 c1 ea 20 	shrq	$32, %rdx
  42e644:	48 8d 42 01 	leaq	1(%rdx), %rax
  42e648:	48 c1 e0 20 	shlq	$32, %rax
  42e64c:	48 ff c0 	incq	%rax
  42e64f:	48 87 41 10 	xchgq	%rax, 16(%rcx)
  42e653:	eb e1 	jmp	-31 <runtime.(*profBuf).incrementOverflow+0x26>
  42e655:	cc 	int3
  42e656:	cc 	int3
  42e657:	cc 	int3
  42e658:	cc 	int3
  42e659:	cc 	int3
  42e65a:	cc 	int3
  42e65b:	cc 	int3
  42e65c:	cc 	int3
  42e65d:	cc 	int3
  42e65e:	cc 	int3
  42e65f:	cc 	int3

runtime.(*profBuf).canWriteRecord:
  42e660:	48 83 ec 08 	subq	$8, %rsp
  42e664:	48 89 2c 24 	movq	%rbp, (%rsp)
  42e668:	48 8d 2c 24 	leaq	(%rsp), %rbp
  42e66c:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  42e671:	48 8b 11 	movq	(%rcx), %rdx
  42e674:	48 8b 59 08 	movq	8(%rcx), %rbx
  42e678:	48 8b 71 50 	movq	80(%rcx), %rsi
  42e67c:	48 89 d7 	movq	%rdx, %rdi
  42e67f:	48 c1 ea 22 	shrq	$34, %rdx
  42e683:	48 89 d8 	movq	%rbx, %rax
  42e686:	48 c1 eb 22 	shrq	$34, %rbx
  42e68a:	29 da 	subl	%ebx, %edx
  42e68c:	c1 e2 02 	shll	$2, %edx
  42e68f:	c1 fa 02 	sarl	$2, %edx
  42e692:	48 63 d2 	movslq	%edx, %rdx
  42e695:	48 01 f2 	addq	%rsi, %rdx
  42e698:	48 83 fa 01 	cmpq	$1, %rdx
  42e69c:	7c 50 	jl	80 <runtime.(*profBuf).canWriteRecord+0x8e>
  42e69e:	48 8b 51 38 	movq	56(%rcx), %rdx
  42e6a2:	29 c7 	subl	%eax, %edi
  42e6a4:	c1 e7 02 	shll	$2, %edi
  42e6a7:	c1 ff 02 	sarl	$2, %edi
  42e6aa:	48 63 df 	movslq	%edi, %rbx
  42e6ad:	48 01 d3 	addq	%rdx, %rbx
  42e6b0:	48 8b 74 24 18 	movq	24(%rsp), %rsi
  42e6b5:	48 03 71 28 	addq	40(%rcx), %rsi
  42e6b9:	85 d2 	testl	%edx, %edx
  42e6bb:	74 3f 	je	63 <runtime.(*profBuf).canWriteRecord+0x9c>
  42e6bd:	48 89 d1 	movq	%rdx, %rcx
  42e6c0:	31 d2 	xorl	%edx, %edx
  42e6c2:	f7 f1 	divl	%ecx
  42e6c4:	89 d2 	movl	%edx, %edx
  42e6c6:	48 8d 7c 32 02 	leaq	2(%rdx,%rsi), %rdi
  42e6cb:	48 39 cf 	cmpq	%rcx, %rdi
  42e6ce:	7e 06 	jle	6 <runtime.(*profBuf).canWriteRecord+0x76>
  42e6d0:	48 29 d1 	subq	%rdx, %rcx
  42e6d3:	48 29 cb 	subq	%rcx, %rbx
  42e6d6:	48 8d 46 02 	leaq	2(%rsi), %rax
  42e6da:	48 39 c3 	cmpq	%rax, %rbx
  42e6dd:	48 8d 44 24 20 	leaq	32(%rsp), %rax
  42e6e2:	0f 9d 00 	setge	(%rax)
  42e6e5:	48 8b 2c 24 	movq	(%rsp), %rbp
  42e6e9:	48 83 c4 08 	addq	$8, %rsp
  42e6ed:	c3 	retq
  42e6ee:	c6 44 24 20 00 	movb	$0, 32(%rsp)
  42e6f3:	48 8b 2c 24 	movq	(%rsp), %rbp
  42e6f7:	48 83 c4 08 	addq	$8, %rsp
  42e6fb:	c3 	retq
  42e6fc:	e8 1f 14 ff ff 	callq	-60385 <runtime.panicdivide>
  42e701:	0f 0b 	ud2
  42e703:	cc 	int3
  42e704:	cc 	int3
  42e705:	cc 	int3
  42e706:	cc 	int3
  42e707:	cc 	int3
  42e708:	cc 	int3
  42e709:	cc 	int3
  42e70a:	cc 	int3
  42e70b:	cc 	int3
  42e70c:	cc 	int3
  42e70d:	cc 	int3
  42e70e:	cc 	int3
  42e70f:	cc 	int3

runtime.(*profBuf).canWriteTwoRecords:
  42e710:	48 83 ec 08 	subq	$8, %rsp
  42e714:	48 89 2c 24 	movq	%rbp, (%rsp)
  42e718:	48 8d 2c 24 	leaq	(%rsp), %rbp
  42e71c:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  42e721:	48 8b 11 	movq	(%rcx), %rdx
  42e724:	48 8b 59 08 	movq	8(%rcx), %rbx
  42e728:	48 8b 71 50 	movq	80(%rcx), %rsi
  42e72c:	48 89 d7 	movq	%rdx, %rdi
  42e72f:	48 c1 ea 22 	shrq	$34, %rdx
  42e733:	48 89 d8 	movq	%rbx, %rax
  42e736:	48 c1 eb 22 	shrq	$34, %rbx
  42e73a:	29 da 	subl	%ebx, %edx
  42e73c:	c1 e2 02 	shll	$2, %edx
  42e73f:	c1 fa 02 	sarl	$2, %edx
  42e742:	48 63 d2 	movslq	%edx, %rdx
  42e745:	48 01 f2 	addq	%rsi, %rdx
  42e748:	48 83 fa 02 	cmpq	$2, %rdx
  42e74c:	0f 8c 8a 00 00 00 	jl	138 <runtime.(*profBuf).canWriteTwoRecords+0xcc>
  42e752:	48 8b 51 38 	movq	56(%rcx), %rdx
  42e756:	29 c7 	subl	%eax, %edi
  42e758:	c1 e7 02 	shll	$2, %edi
  42e75b:	c1 ff 02 	sarl	$2, %edi
  42e75e:	48 63 df 	movslq	%edi, %rbx
  42e761:	48 01 d3 	addq	%rdx, %rbx
  42e764:	48 8b 49 28 	movq	40(%rcx), %rcx
  42e768:	48 8b 74 24 18 	movq	24(%rsp), %rsi
  42e76d:	48 8d 3c 31 	leaq	(%rcx,%rsi), %rdi
  42e771:	85 d2 	testl	%edx, %edx
  42e773:	74 75 	je	117 <runtime.(*profBuf).canWriteTwoRecords+0xda>
  42e775:	49 89 d0 	movq	%rdx, %r8
  42e778:	31 d2 	xorl	%edx, %edx
  42e77a:	41 f7 f0 	divl	%r8d
  42e77d:	89 d2 	movl	%edx, %edx
  42e77f:	4c 8d 4c 17 02 	leaq	2(%rdi,%rdx), %r9
  42e784:	4d 39 c1 	cmpq	%r8, %r9
  42e787:	7e 4e 	jle	78 <runtime.(*profBuf).canWriteTwoRecords+0xc7>
  42e789:	4c 89 c0 	movq	%r8, %rax
  42e78c:	49 29 d0 	subq	%rdx, %r8
  42e78f:	4c 29 c3 	subq	%r8, %rbx
  42e792:	31 d2 	xorl	%edx, %edx
  42e794:	48 8d 74 31 02 	leaq	2(%rcx,%rsi), %rsi
  42e799:	4c 8d 04 17 	leaq	(%rdi,%rdx), %r8
  42e79d:	48 29 f3 	subq	%rsi, %rbx
  42e7a0:	48 8b 74 24 20 	movq	32(%rsp), %rsi
  42e7a5:	4c 8d 0c 31 	leaq	(%rcx,%rsi), %r9
  42e7a9:	4f 8d 44 01 04 	leaq	4(%r9,%r8), %r8
  42e7ae:	49 39 c0 	cmpq	%rax, %r8
  42e7b1:	7e 0b 	jle	11 <runtime.(*profBuf).canWriteTwoRecords+0xae>
  42e7b3:	48 8d 54 17 02 	leaq	2(%rdi,%rdx), %rdx
  42e7b8:	48 29 d0 	subq	%rdx, %rax
  42e7bb:	48 29 c3 	subq	%rax, %rbx
  42e7be:	48 8d 44 31 02 	leaq	2(%rcx,%rsi), %rax
  42e7c3:	48 39 c3 	cmpq	%rax, %rbx
  42e7c6:	48 8d 44 24 28 	leaq	40(%rsp), %rax
  42e7cb:	0f 9d 00 	setge	(%rax)
  42e7ce:	48 8b 2c 24 	movq	(%rsp), %rbp
  42e7d2:	48 83 c4 08 	addq	$8, %rsp
  42e7d6:	c3 	retq
  42e7d7:	4c 89 c0 	movq	%r8, %rax
  42e7da:	eb b8 	jmp	-72 <runtime.(*profBuf).canWriteTwoRecords+0x84>
  42e7dc:	c6 44 24 28 00 	movb	$0, 40(%rsp)
  42e7e1:	48 8b 2c 24 	movq	(%rsp), %rbp
  42e7e5:	48 83 c4 08 	addq	$8, %rsp
  42e7e9:	c3 	retq
  42e7ea:	e8 31 13 ff ff 	callq	-60623 <runtime.panicdivide>
  42e7ef:	0f 0b 	ud2
  42e7f1:	cc 	int3
  42e7f2:	cc 	int3
  42e7f3:	cc 	int3
  42e7f4:	cc 	int3
  42e7f5:	cc 	int3
  42e7f6:	cc 	int3
  42e7f7:	cc 	int3
  42e7f8:	cc 	int3
  42e7f9:	cc 	int3
  42e7fa:	cc 	int3
  42e7fb:	cc 	int3
  42e7fc:	cc 	int3
  42e7fd:	cc 	int3
  42e7fe:	cc 	int3
  42e7ff:	cc 	int3

runtime.(*profBuf).write:
  42e800:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42e809:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42e80d:	0f 86 36 04 00 00 	jbe	1078 <runtime.(*profBuf).write+0x449>
  42e813:	48 81 ec 80 00 00 00 	subq	$128, %rsp
  42e81a:	48 89 6c 24 78 	movq	%rbp, 120(%rsp)
  42e81f:	48 8d 6c 24 78 	leaq	120(%rsp), %rbp
  42e824:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  42e82c:	48 85 c0 	testq	%rax, %rax
  42e82f:	0f 84 a6 03 00 00 	je	934 <runtime.(*profBuf).write+0x3db>
  42e835:	48 8b 48 28 	movq	40(%rax), %rcx
  42e839:	48 8b 94 24 a8 00 00 00 	movq	168(%rsp), %rdx
  42e841:	48 39 ca 	cmpq	%rcx, %rdx
  42e844:	0f 8f e4 03 00 00 	jg	996 <runtime.(*profBuf).write+0x42e>
  42e84a:	48 8b 48 10 	movq	16(%rax), %rcx
  42e84e:	85 c9 	testl	%ecx, %ecx
  42e850:	0f 87 bb 02 00 00 	ja	699 <runtime.(*profBuf).write+0x311>
  42e856:	0f 87 79 02 00 00 	ja	633 <runtime.(*profBuf).write+0x2d5>
  42e85c:	48 89 04 24 	movq	%rax, (%rsp)
  42e860:	48 8b 8c 24 c0 00 00 00 	movq	192(%rsp), %rcx
  42e868:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  42e86d:	e8 ee fd ff ff 	callq	-530 <runtime.(*profBuf).canWriteRecord>
  42e872:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  42e877:	84 c0 	testb	%al, %al
  42e879:	0f 84 56 02 00 00 	je	598 <runtime.(*profBuf).write+0x2d5>
  42e87f:	48 8b 8c 24 88 00 00 00 	movq	136(%rsp), %rcx
  42e887:	48 8b 11 	movq	(%rcx), %rdx
  42e88a:	48 8b 51 08 	movq	8(%rcx), %rdx
  42e88e:	48 8b 59 50 	movq	80(%rcx), %rbx
  42e892:	48 8b 71 48 	movq	72(%rcx), %rsi
  42e896:	85 db 	testl	%ebx, %ebx
  42e898:	0f 84 89 03 00 00 	je	905 <runtime.(*profBuf).write+0x427>
  42e89e:	48 89 d0 	movq	%rdx, %rax
  42e8a1:	48 c1 e8 22 	shrq	$34, %rax
  42e8a5:	48 89 d7 	movq	%rdx, %rdi
  42e8a8:	31 d2 	xorl	%edx, %edx
  42e8aa:	f7 f3 	divl	%ebx
  42e8ac:	4c 8b 84 24 90 00 00 00 	movq	144(%rsp), %r8
  42e8b4:	4d 85 c0 	testq	%r8, %r8
  42e8b7:	74 12 	je	18 <runtime.(*profBuf).write+0xcb>
  42e8b9:	89 d2 	movl	%edx, %edx
  42e8bb:	48 39 da 	cmpq	%rbx, %rdx
  42e8be:	0f 83 5c 03 00 00 	jae	860 <runtime.(*profBuf).write+0x420>
  42e8c4:	49 8b 18 	movq	(%r8), %rbx
  42e8c7:	48 89 1c d6 	movq	%rbx, (%rsi,%rdx,8)
  42e8cb:	48 8b 51 38 	movq	56(%rcx), %rdx
  42e8cf:	48 8b 59 30 	movq	48(%rcx), %rbx
  42e8d3:	85 d2 	testl	%edx, %edx
  42e8d5:	0f 84 3e 03 00 00 	je	830 <runtime.(*profBuf).write+0x419>
  42e8db:	48 89 f8 	movq	%rdi, %rax
  42e8de:	48 89 d6 	movq	%rdx, %rsi
  42e8e1:	31 d2 	xorl	%edx, %edx
  42e8e3:	f7 f6 	divl	%esi
  42e8e5:	89 d2 	movl	%edx, %edx
  42e8e7:	48 8b 79 28 	movq	40(%rcx), %rdi
  42e8eb:	48 01 d7 	addq	%rdx, %rdi
  42e8ee:	4c 8b 84 24 c0 00 00 00 	movq	192(%rsp), %r8
  42e8f6:	4a 8d 7c 07 02 	leaq	2(%rdi,%r8), %rdi
  42e8fb:	48 39 f7 	cmpq	%rsi, %rdi
  42e8fe:	0f 8e ca 01 00 00 	jle	458 <runtime.(*profBuf).write+0x2ce>
  42e904:	48 39 f2 	cmpq	%rsi, %rdx
  42e907:	0f 83 05 03 00 00 	jae	773 <runtime.(*profBuf).write+0x412>
  42e90d:	48 c7 04 d3 00 00 00 00 	movq	$0, (%rbx,%rdx,8)
  42e915:	48 8b 41 38 	movq	56(%rcx), %rax
  42e919:	48 29 d0 	subq	%rdx, %rax
  42e91c:	31 d2 	xorl	%edx, %edx
  42e91e:	48 8b 59 38 	movq	56(%rcx), %rbx
  42e922:	48 8b 71 40 	movq	64(%rcx), %rsi
  42e926:	48 8b 79 30 	movq	48(%rcx), %rdi
  42e92a:	48 39 da 	cmpq	%rbx, %rdx
  42e92d:	0f 87 d8 02 00 00 	ja	728 <runtime.(*profBuf).write+0x40b>
  42e933:	48 29 d3 	subq	%rdx, %rbx
  42e936:	48 29 d6 	subq	%rdx, %rsi
  42e939:	49 89 f1 	movq	%rsi, %r9
  42e93c:	48 f7 de 	negq	%rsi
  42e93f:	48 c1 fe 3f 	sarq	$63, %rsi
  42e943:	48 c1 e2 03 	shlq	$3, %rdx
  42e947:	48 21 d6 	andq	%rdx, %rsi
  42e94a:	48 8d 14 3e 	leaq	(%rsi,%rdi), %rdx
  42e94e:	4c 8b 51 28 	movq	40(%rcx), %r10
  42e952:	48 85 db 	testq	%rbx, %rbx
  42e955:	0f 86 a9 02 00 00 	jbe	681 <runtime.(*profBuf).write+0x404>
  42e95b:	4f 8d 54 10 02 	leaq	2(%r8,%r10), %r10
  42e960:	4c 89 14 37 	movq	%r10, (%rdi,%rsi)
  42e964:	48 83 fb 01 	cmpq	$1, %rbx
  42e968:	0f 86 8f 02 00 00 	jbe	655 <runtime.(*profBuf).write+0x3fd>
  42e96e:	4c 8b 94 24 98 00 00 00 	movq	152(%rsp), %r10
  42e976:	4c 89 54 37 08 	movq	%r10, 8(%rdi,%rsi)
  42e97b:	48 8b 71 28 	movq	40(%rcx), %rsi
  42e97f:	48 8d 7e 02 	leaq	2(%rsi), %rdi
  42e983:	48 83 ff 02 	cmpq	$2, %rdi
  42e987:	0f 82 69 02 00 00 	jb	617 <runtime.(*profBuf).write+0x3f6>
  42e98d:	4c 39 cf 	cmpq	%r9, %rdi
  42e990:	0f 87 60 02 00 00 	ja	608 <runtime.(*profBuf).write+0x3f6>
  42e996:	48 89 5c 24 58 	movq	%rbx, 88(%rsp)
  42e99b:	48 89 54 24 70 	movq	%rdx, 112(%rsp)
  42e9a0:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  42e9a5:	49 8d 79 fe 	leaq	-2(%r9), %rdi
  42e9a9:	48 f7 df 	negq	%rdi
  42e9ac:	48 c1 ff 3f 	sarq	$63, %rdi
  42e9b0:	48 83 e7 10 	andq	$16, %rdi
  42e9b4:	48 01 d7 	addq	%rdx, %rdi
  42e9b7:	4c 8b 8c 24 a8 00 00 00 	movq	168(%rsp), %r9
  42e9bf:	4c 39 ce 	cmpq	%r9, %rsi
  42e9c2:	0f 8e fe 00 00 00 	jle	254 <runtime.(*profBuf).write+0x2c6>
  42e9c8:	4c 89 4c 24 68 	movq	%r9, 104(%rsp)
  42e9cd:	48 89 3c 24 	movq	%rdi, (%rsp)
  42e9d1:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  42e9d9:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  42e9de:	49 c1 e1 03 	shlq	$3, %r9
  42e9e2:	4c 89 4c 24 10 	movq	%r9, 16(%rsp)
  42e9e7:	e8 14 87 01 00 	callq	100116 <runtime.memmove>
  42e9ec:	48 8b 44 24 70 	movq	112(%rsp), %rax
  42e9f1:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  42e9f6:	48 8b 94 24 88 00 00 00 	movq	136(%rsp), %rdx
  42e9fe:	48 8b 5c 24 68 	movq	104(%rsp), %rbx
  42ea03:	eb 0c 	jmp	12 <runtime.(*profBuf).write+0x211>
  42ea05:	48 c7 44 d8 10 00 00 00 00 	movq	$0, 16(%rax,%rbx,8)
  42ea0e:	48 ff c3 	incq	%rbx
  42ea11:	48 8b 72 28 	movq	40(%rdx), %rsi
  42ea15:	48 39 f3 	cmpq	%rsi, %rbx
  42ea18:	73 0e 	jae	14 <runtime.(*profBuf).write+0x228>
  42ea1a:	48 8d 73 02 	leaq	2(%rbx), %rsi
  42ea1e:	48 39 ce 	cmpq	%rcx, %rsi
  42ea21:	72 e2 	jb	-30 <runtime.(*profBuf).write+0x205>
  42ea23:	e9 c7 01 00 00 	jmp	455 <runtime.(*profBuf).write+0x3ef>
  42ea28:	48 8b 9c 24 c0 00 00 00 	movq	192(%rsp), %rbx
  42ea30:	48 8b b4 24 b8 00 00 00 	movq	184(%rsp), %rsi
  42ea38:	31 ff 	xorl	%edi, %edi
  42ea3a:	eb 07 	jmp	7 <runtime.(*profBuf).write+0x243>
  42ea3c:	4e 89 04 c8 	movq	%r8, (%rax,%r9,8)
  42ea40:	48 ff c7 	incq	%rdi
  42ea43:	48 39 df 	cmpq	%rbx, %rdi
  42ea46:	7d 17 	jge	23 <runtime.(*profBuf).write+0x25f>
  42ea48:	4c 8b 04 fe 	movq	(%rsi,%rdi,8), %r8
  42ea4c:	4c 8b 4a 28 	movq	40(%rdx), %r9
  42ea50:	4d 8d 4c 39 02 	leaq	2(%r9,%rdi), %r9
  42ea55:	49 39 c9 	cmpq	%rcx, %r9
  42ea58:	72 e2 	jb	-30 <runtime.(*profBuf).write+0x23c>
  42ea5a:	e9 89 01 00 00 	jmp	393 <runtime.(*profBuf).write+0x3e8>
  42ea5f:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  42ea64:	48 8b 72 08 	movq	8(%rdx), %rsi
  42ea68:	48 89 74 24 60 	movq	%rsi, 96(%rsp)
  42ea6d:	48 8d 3c 0b 	leaq	(%rbx,%rcx), %rdi
  42ea71:	48 03 7a 28 	addq	40(%rdx), %rdi
  42ea75:	48 83 c7 02 	addq	$2, %rdi
  42ea79:	48 89 f0 	movq	%rsi, %rax
  42ea7c:	48 c1 ee 22 	shrq	$34, %rsi
  42ea80:	48 ff c6 	incq	%rsi
  42ea83:	48 c1 e6 22 	shlq	$34, %rsi
  42ea87:	01 c7 	addl	%eax, %edi
  42ea89:	48 09 fe 	orq	%rdi, %rsi
  42ea8c:	f0 	lock
  42ea8d:	48 0f b1 72 08 	cmpxchgq	%rsi, 8(%rdx)
  42ea92:	40 0f 94 c6 	sete	%sil
  42ea96:	40 84 f6 	testb	%sil, %sil
  42ea99:	74 c9 	je	-55 <runtime.(*profBuf).write+0x264>
  42ea9b:	48 8b 44 24 60 	movq	96(%rsp), %rax
  42eaa0:	48 0f ba e0 20 	btq	$32, %rax
  42eaa5:	72 0d 	jb	13 <runtime.(*profBuf).write+0x2b4>
  42eaa7:	48 8b 6c 24 78 	movq	120(%rsp), %rbp
  42eaac:	48 81 c4 80 00 00 00 	addq	$128, %rsp
  42eab3:	c3 	retq
  42eab4:	48 8d 82 80 00 00 00 	leaq	128(%rdx), %rax
  42eabb:	48 89 04 24 	movq	%rax, (%rsp)
  42eabf:	e8 cc ac fd ff 	callq	-152372 <runtime.notewakeup>
  42eac4:	eb e1 	jmp	-31 <runtime.(*profBuf).write+0x2a7>
  42eac6:	49 89 f1 	movq	%rsi, %r9
  42eac9:	e9 fa fe ff ff 	jmp	-262 <runtime.(*profBuf).write+0x1c8>
  42eace:	31 c0 	xorl	%eax, %eax
  42ead0:	e9 49 fe ff ff 	jmp	-439 <runtime.(*profBuf).write+0x11e>
  42ead5:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  42eadd:	48 89 04 24 	movq	%rax, (%rsp)
  42eae1:	48 8b 8c 24 98 00 00 00 	movq	152(%rsp), %rcx
  42eae9:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  42eaee:	e8 1d fb ff ff 	callq	-1251 <runtime.(*profBuf).incrementOverflow>
  42eaf3:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  42eafb:	48 89 04 24 	movq	%rax, (%rsp)
  42eaff:	e8 5c 01 00 00 	callq	348 <runtime.(*profBuf).wakeupExtra>
  42eb04:	48 8b 6c 24 78 	movq	120(%rsp), %rbp
  42eb09:	48 81 c4 80 00 00 00 	addq	$128, %rsp
  42eb10:	c3 	retq
  42eb11:	48 89 4c 24 60 	movq	%rcx, 96(%rsp)
  42eb16:	48 89 04 24 	movq	%rax, (%rsp)
  42eb1a:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  42eb23:	48 8b 8c 24 c0 00 00 00 	movq	192(%rsp), %rcx
  42eb2b:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  42eb30:	e8 db fb ff ff 	callq	-1061 <runtime.(*profBuf).canWriteTwoRecords>
  42eb35:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  42eb3a:	84 c0 	testb	%al, %al
  42eb3c:	75 1c 	jne	28 <runtime.(*profBuf).write+0x35a>
  42eb3e:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  42eb43:	85 c9 	testl	%ecx, %ecx
  42eb45:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  42eb4d:	48 8b 94 24 a8 00 00 00 	movq	168(%rsp), %rdx
  42eb55:	e9 fc fc ff ff 	jmp	-772 <runtime.(*profBuf).write+0x56>
  42eb5a:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  42eb62:	48 89 04 24 	movq	%rax, (%rsp)
  42eb66:	e8 35 fa ff ff 	callq	-1483 <runtime.(*profBuf).takeOverflow>
  42eb6b:	8b 44 24 08 	movl	8(%rsp), %eax
  42eb6f:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  42eb74:	85 c0 	testl	%eax, %eax
  42eb76:	0f 86 03 fd ff ff 	jbe	-765 <runtime.(*profBuf).write+0x7f>
  42eb7c:	48 c7 44 24 48 00 00 00 00 	movq	$0, 72(%rsp)
  42eb85:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  42eb8a:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  42eb92:	48 89 04 24 	movq	%rax, (%rsp)
  42eb96:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  42eb9f:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  42eba4:	48 c7 44 24 18 00 00 00 00 	movq	$0, 24(%rsp)
  42ebad:	0f 57 c0 	xorps	%xmm0, %xmm0
  42ebb0:	0f 11 44 24 20 	movups	%xmm0, 32(%rsp)
  42ebb5:	48 8d 4c 24 48 	leaq	72(%rsp), %rcx
  42ebba:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  42ebbf:	48 c7 44 24 38 01 00 00 00 	movq	$1, 56(%rsp)
  42ebc8:	48 c7 44 24 40 01 00 00 00 	movq	$1, 64(%rsp)
  42ebd1:	e8 2a fc ff ff 	callq	-982 <runtime.(*profBuf).write>
  42ebd6:	e9 a4 fc ff ff 	jmp	-860 <runtime.(*profBuf).write+0x7f>
  42ebdb:	48 8b 6c 24 78 	movq	120(%rsp), %rbp
  42ebe0:	48 81 c4 80 00 00 00 	addq	$128, %rsp
  42ebe7:	c3 	retq
  42ebe8:	e8 53 0e ff ff 	callq	-61869 <runtime.panicindex>
  42ebed:	0f 0b 	ud2
  42ebef:	e8 4c 0e ff ff 	callq	-61876 <runtime.panicindex>
  42ebf4:	0f 0b 	ud2
  42ebf6:	e8 b5 0e ff ff 	callq	-61771 <runtime.panicslice>
  42ebfb:	0f 0b 	ud2
  42ebfd:	e8 3e 0e ff ff 	callq	-61890 <runtime.panicindex>
  42ec02:	0f 0b 	ud2
  42ec04:	e8 37 0e ff ff 	callq	-61897 <runtime.panicindex>
  42ec09:	0f 0b 	ud2
  42ec0b:	e8 a0 0e ff ff 	callq	-61792 <runtime.panicslice>
  42ec10:	0f 0b 	ud2
  42ec12:	e8 29 0e ff ff 	callq	-61911 <runtime.panicindex>
  42ec17:	0f 0b 	ud2
  42ec19:	e8 02 0f ff ff 	callq	-61694 <runtime.panicdivide>
  42ec1e:	0f 0b 	ud2
  42ec20:	e8 1b 0e ff ff 	callq	-61925 <runtime.panicindex>
  42ec25:	0f 0b 	ud2
  42ec27:	e8 f4 0e ff ff 	callq	-61708 <runtime.panicdivide>
  42ec2c:	0f 0b 	ud2
  42ec2e:	48 8d 05 a1 ca 03 00 	leaq	248481(%rip), %rax
  42ec35:	48 89 04 24 	movq	%rax, (%rsp)
  42ec39:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  42ec42:	e8 89 25 ff ff 	callq	-55927 <runtime.throw>
  42ec47:	0f 0b 	ud2
  42ec49:	e8 22 59 01 00 	callq	88354 <runtime.morestack_noctxt>
  42ec4e:	e9 ad fb ff ff 	jmp	-1107 <runtime.(*profBuf).write>
  42ec53:	cc 	int3
  42ec54:	cc 	int3
  42ec55:	cc 	int3
  42ec56:	cc 	int3
  42ec57:	cc 	int3
  42ec58:	cc 	int3
  42ec59:	cc 	int3
  42ec5a:	cc 	int3
  42ec5b:	cc 	int3
  42ec5c:	cc 	int3
  42ec5d:	cc 	int3
  42ec5e:	cc 	int3
  42ec5f:	cc 	int3

runtime.(*profBuf).wakeupExtra:
  42ec60:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42ec69:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42ec6d:	76 57 	jbe	87 <runtime.(*profBuf).wakeupExtra+0x66>
  42ec6f:	48 83 ec 10 	subq	$16, %rsp
  42ec73:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  42ec78:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  42ec7d:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  42ec82:	48 8b 51 08 	movq	8(%rcx), %rdx
  42ec86:	48 bb 00 00 00 00 02 00 00 00 	movabsq	$8589934592, %rbx
  42ec90:	48 09 d3 	orq	%rdx, %rbx
  42ec93:	48 89 d0 	movq	%rdx, %rax
  42ec96:	f0 	lock
  42ec97:	48 0f b1 59 08 	cmpxchgq	%rbx, 8(%rcx)
  42ec9c:	0f 94 c3 	sete	%bl
  42ec9f:	84 db 	testb	%bl, %bl
  42eca1:	74 df 	je	-33 <runtime.(*profBuf).wakeupExtra+0x22>
  42eca3:	48 0f ba e2 20 	btq	$32, %rdx
  42eca8:	72 0a 	jb	10 <runtime.(*profBuf).wakeupExtra+0x54>
  42ecaa:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  42ecaf:	48 83 c4 10 	addq	$16, %rsp
  42ecb3:	c3 	retq
  42ecb4:	48 8d 81 80 00 00 00 	leaq	128(%rcx), %rax
  42ecbb:	48 89 04 24 	movq	%rax, (%rsp)
  42ecbf:	e8 cc aa fd ff 	callq	-152884 <runtime.notewakeup>
  42ecc4:	eb e4 	jmp	-28 <runtime.(*profBuf).wakeupExtra+0x4a>
  42ecc6:	e8 a5 58 01 00 	callq	88229 <runtime.morestack_noctxt>
  42eccb:	eb 93 	jmp	-109 <runtime.(*profBuf).wakeupExtra>
  42eccd:	cc 	int3
  42ecce:	cc 	int3
  42eccf:	cc 	int3

runtime.args:
  42ecd0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42ecd9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42ecdd:	76 58 	jbe	88 <runtime.args+0x67>
  42ecdf:	48 83 ec 18 	subq	$24, %rsp
  42ece3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  42ece8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  42eced:	8b 4c 24 20 	movl	32(%rsp), %ecx
  42ecf1:	89 0d c9 4b 09 00 	movl	%ecx, 609225(%rip)
  42ecf7:	8b 15 13 4d 09 00 	movl	609555(%rip), %edx
  42ecfd:	85 d2 	testl	%edx, %edx
  42ecff:	75 23 	jne	35 <runtime.args+0x54>
  42ed01:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42ed06:	48 89 05 13 89 07 00 	movq	%rax, 493843(%rip)
  42ed0d:	89 0c 24 	movl	%ecx, (%rsp)
  42ed10:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  42ed15:	e8 66 03 ff ff 	callq	-64666 <runtime.sysargs>
  42ed1a:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  42ed1f:	48 83 c4 18 	addq	$24, %rsp
  42ed23:	c3 	retq
  42ed24:	48 8d 3d f5 88 07 00 	leaq	493813(%rip), %rdi
  42ed2b:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42ed30:	e8 6b 7b 01 00 	callq	97131 <runtime.gcWriteBarrier>
  42ed35:	eb d6 	jmp	-42 <runtime.args+0x3d>
  42ed37:	e8 34 58 01 00 	callq	88116 <runtime.morestack_noctxt>
  42ed3c:	eb 92 	jmp	-110 <runtime.args>
  42ed3e:	cc 	int3
  42ed3f:	cc 	int3

runtime.goargs:
  42ed40:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42ed49:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42ed4d:	0f 86 0d 01 00 00 	jbe	269 <runtime.goargs+0x120>
  42ed53:	48 83 ec 40 	subq	$64, %rsp
  42ed57:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  42ed5c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  42ed61:	48 8d 05 38 86 02 00 	leaq	165432(%rip), %rax
  42ed68:	48 89 04 24 	movq	%rax, (%rsp)
  42ed6c:	48 63 05 4d 4b 09 00 	movslq	609101(%rip), %rax
  42ed73:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  42ed78:	48 63 05 41 4b 09 00 	movslq	609089(%rip), %rax
  42ed7f:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  42ed84:	e8 d7 49 00 00 	callq	18903 <runtime.makeslice>
  42ed89:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42ed8e:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  42ed93:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  42ed98:	48 89 0d 39 89 07 00 	movq	%rcx, 493881(%rip)
  42ed9f:	48 89 05 3a 89 07 00 	movq	%rax, 493882(%rip)
  42eda6:	8b 05 64 4c 09 00 	movl	609380(%rip), %eax
  42edac:	85 c0 	testl	%eax, %eax
  42edae:	0f 85 91 00 00 00 	jne	145 <runtime.goargs+0x105>
  42edb4:	48 89 15 15 89 07 00 	movq	%rdx, 493845(%rip)
  42edbb:	31 c0 	xorl	%eax, %eax
  42edbd:	eb 03 	jmp	3 <runtime.goargs+0x82>
  42edbf:	8d 42 01 	leal	1(%rdx), %eax
  42edc2:	8b 0d f8 4a 09 00 	movl	609016(%rip), %ecx
  42edc8:	39 c8 	cmpl	%ecx, %eax
  42edca:	7d 6f 	jge	111 <runtime.goargs+0xfb>
  42edcc:	89 44 24 34 	movl	%eax, 52(%rsp)
  42edd0:	48 8b 0d 49 88 07 00 	movq	493641(%rip), %rcx
  42edd7:	48 63 d0 	movslq	%eax, %rdx
  42edda:	48 8d 1c d1 	leaq	(%rcx,%rdx,8), %rbx
  42edde:	84 03 	testb	%al, (%rbx)
  42ede0:	48 8b 0c d1 	movq	(%rcx,%rdx,8), %rcx
  42ede4:	48 89 0c 24 	movq	%rcx, (%rsp)
  42ede8:	e8 03 89 00 00 	callq	35075 <runtime.gostringnocopy>
  42eded:	48 8b 05 e4 88 07 00 	movq	493796(%rip), %rax
  42edf4:	48 8b 0d d5 88 07 00 	movq	493781(%rip), %rcx
  42edfb:	8b 54 24 34 	movl	52(%rsp), %edx
  42edff:	48 63 da 	movslq	%edx, %rbx
  42ee02:	48 8b 74 24 10 	movq	16(%rsp), %rsi
  42ee07:	48 8b 7c 24 08 	movq	8(%rsp), %rdi
  42ee0c:	48 39 c3 	cmpq	%rax, %rbx
  42ee0f:	73 48 	jae	72 <runtime.goargs+0x119>
  42ee11:	48 c1 e3 04 	shlq	$4, %rbx
  42ee15:	48 89 74 19 08 	movq	%rsi, 8(%rcx,%rbx)
  42ee1a:	8b 35 f0 4b 09 00 	movl	609264(%rip), %esi
  42ee20:	4c 8d 04 19 	leaq	(%rcx,%rbx), %r8
  42ee24:	85 f6 	testl	%esi, %esi
  42ee26:	75 06 	jne	6 <runtime.goargs+0xee>
  42ee28:	48 89 3c 19 	movq	%rdi, (%rcx,%rbx)
  42ee2c:	eb 91 	jmp	-111 <runtime.goargs+0x7f>
  42ee2e:	48 89 f8 	movq	%rdi, %rax
  42ee31:	4c 89 c7 	movq	%r8, %rdi
  42ee34:	e8 67 7a 01 00 	callq	96871 <runtime.gcWriteBarrier>
  42ee39:	eb 84 	jmp	-124 <runtime.goargs+0x7f>
  42ee3b:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  42ee40:	48 83 c4 40 	addq	$64, %rsp
  42ee44:	c3 	retq
  42ee45:	48 8d 3d 84 88 07 00 	leaq	493700(%rip), %rdi
  42ee4c:	48 89 d0 	movq	%rdx, %rax
  42ee4f:	e8 4c 7a 01 00 	callq	96844 <runtime.gcWriteBarrier>
  42ee54:	e9 62 ff ff ff 	jmp	-158 <runtime.goargs+0x7b>
  42ee59:	e8 e2 0b ff ff 	callq	-62494 <runtime.panicindex>
  42ee5e:	0f 0b 	ud2
  42ee60:	e8 0b 57 01 00 	callq	87819 <runtime.morestack_noctxt>
  42ee65:	e9 d6 fe ff ff 	jmp	-298 <runtime.goargs>
  42ee6a:	cc 	int3
  42ee6b:	cc 	int3
  42ee6c:	cc 	int3
  42ee6d:	cc 	int3
  42ee6e:	cc 	int3
  42ee6f:	cc 	int3

runtime.goenvs_unix:
  42ee70:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42ee79:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42ee7d:	0f 86 3a 01 00 00 	jbe	314 <runtime.goenvs_unix+0x14d>
  42ee83:	48 83 ec 40 	subq	$64, %rsp
  42ee87:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  42ee8c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  42ee91:	31 c0 	xorl	%eax, %eax
  42ee93:	eb 02 	jmp	2 <runtime.goenvs_unix+0x27>
  42ee95:	ff c0 	incl	%eax
  42ee97:	48 8b 0d 82 87 07 00 	movq	493442(%rip), %rcx
  42ee9e:	8b 15 1c 4a 09 00 	movl	608796(%rip), %edx
  42eea4:	01 c2 	addl	%eax, %edx
  42eea6:	ff c2 	incl	%edx
  42eea8:	48 63 d2 	movslq	%edx, %rdx
  42eeab:	48 8d 1c d1 	leaq	(%rcx,%rdx,8), %rbx
  42eeaf:	84 03 	testb	%al, (%rbx)
  42eeb1:	48 8b 0c d1 	movq	(%rcx,%rdx,8), %rcx
  42eeb5:	48 85 c9 	testq	%rcx, %rcx
  42eeb8:	75 db 	jne	-37 <runtime.goenvs_unix+0x25>
  42eeba:	89 44 24 30 	movl	%eax, 48(%rsp)
  42eebe:	48 8d 0d db 84 02 00 	leaq	165083(%rip), %rcx
  42eec5:	48 89 0c 24 	movq	%rcx, (%rsp)
  42eec9:	48 63 c8 	movslq	%eax, %rcx
  42eecc:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  42eed1:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  42eed6:	e8 85 48 00 00 	callq	18565 <runtime.makeslice>
  42eedb:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42eee0:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  42eee5:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  42eeea:	48 89 0d 07 88 07 00 	movq	%rcx, 493575(%rip)
  42eef1:	48 89 05 08 88 07 00 	movq	%rax, 493576(%rip)
  42eef8:	8b 05 12 4b 09 00 	movl	609042(%rip), %eax
  42eefe:	85 c0 	testl	%eax, %eax
  42ef00:	0f 85 9c 00 00 00 	jne	156 <runtime.goenvs_unix+0x132>
  42ef06:	48 89 15 e3 87 07 00 	movq	%rdx, 493539(%rip)
  42ef0d:	31 c0 	xorl	%eax, %eax
  42ef0f:	eb 03 	jmp	3 <runtime.goenvs_unix+0xa4>
  42ef11:	8d 42 01 	leal	1(%rdx), %eax
  42ef14:	8b 4c 24 30 	movl	48(%rsp), %ecx
  42ef18:	39 c8 	cmpl	%ecx, %eax
  42ef1a:	7d 7c 	jge	124 <runtime.goenvs_unix+0x128>
  42ef1c:	89 44 24 34 	movl	%eax, 52(%rsp)
  42ef20:	48 8b 0d f9 86 07 00 	movq	493305(%rip), %rcx
  42ef27:	8b 15 93 49 09 00 	movl	608659(%rip), %edx
  42ef2d:	01 c2 	addl	%eax, %edx
  42ef2f:	ff c2 	incl	%edx
  42ef31:	48 63 d2 	movslq	%edx, %rdx
  42ef34:	48 8d 1c d1 	leaq	(%rcx,%rdx,8), %rbx
  42ef38:	84 03 	testb	%al, (%rbx)
  42ef3a:	48 8b 0c d1 	movq	(%rcx,%rdx,8), %rcx
  42ef3e:	48 89 0c 24 	movq	%rcx, (%rsp)
  42ef42:	e8 79 83 00 00 	callq	33657 <runtime.gostring>
  42ef47:	48 8b 05 aa 87 07 00 	movq	493482(%rip), %rax
  42ef4e:	48 8b 0d 9b 87 07 00 	movq	493467(%rip), %rcx
  42ef55:	8b 54 24 34 	movl	52(%rsp), %edx
  42ef59:	48 63 da 	movslq	%edx, %rbx
  42ef5c:	48 8b 74 24 10 	movq	16(%rsp), %rsi
  42ef61:	48 8b 7c 24 08 	movq	8(%rsp), %rdi
  42ef66:	48 39 c3 	cmpq	%rax, %rbx
  42ef69:	73 4b 	jae	75 <runtime.goenvs_unix+0x146>
  42ef6b:	48 c1 e3 04 	shlq	$4, %rbx
  42ef6f:	48 89 74 19 08 	movq	%rsi, 8(%rcx,%rbx)
  42ef74:	8b 35 96 4a 09 00 	movl	608918(%rip), %esi
  42ef7a:	4c 8d 04 19 	leaq	(%rcx,%rbx), %r8
  42ef7e:	85 f6 	testl	%esi, %esi
  42ef80:	75 06 	jne	6 <runtime.goenvs_unix+0x118>
  42ef82:	48 89 3c 19 	movq	%rdi, (%rcx,%rbx)
  42ef86:	eb 89 	jmp	-119 <runtime.goenvs_unix+0xa1>
  42ef88:	48 89 f8 	movq	%rdi, %rax
  42ef8b:	4c 89 c7 	movq	%r8, %rdi
  42ef8e:	e8 0d 79 01 00 	callq	96525 <runtime.gcWriteBarrier>
  42ef93:	e9 79 ff ff ff 	jmp	-135 <runtime.goenvs_unix+0xa1>
  42ef98:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  42ef9d:	48 83 c4 40 	addq	$64, %rsp
  42efa1:	c3 	retq
  42efa2:	48 8d 3d 47 87 07 00 	leaq	493383(%rip), %rdi
  42efa9:	48 89 d0 	movq	%rdx, %rax
  42efac:	e8 ef 78 01 00 	callq	96495 <runtime.gcWriteBarrier>
  42efb1:	e9 57 ff ff ff 	jmp	-169 <runtime.goenvs_unix+0x9d>
  42efb6:	e8 85 0a ff ff 	callq	-62843 <runtime.panicindex>
  42efbb:	0f 0b 	ud2
  42efbd:	e8 ae 55 01 00 	callq	87470 <runtime.morestack_noctxt>
  42efc2:	e9 a9 fe ff ff 	jmp	-343 <runtime.goenvs_unix>
  42efc7:	cc 	int3
  42efc8:	cc 	int3
  42efc9:	cc 	int3
  42efca:	cc 	int3
  42efcb:	cc 	int3
  42efcc:	cc 	int3
  42efcd:	cc 	int3
  42efce:	cc 	int3
  42efcf:	cc 	int3

runtime.testAtomic64:
  42efd0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42efd9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42efdd:	0f 86 47 02 00 00 	jbe	583 <runtime.testAtomic64+0x25a>
  42efe3:	48 83 ec 18 	subq	$24, %rsp
  42efe7:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  42efec:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  42eff1:	48 c7 05 f4 49 09 00 2a 00 00 00 	movq	$42, 608756(%rip)
  42effc:	48 c7 05 e1 49 09 00 00 00 00 00 	movq	$0, 608737(%rip)
  42f007:	31 c0 	xorl	%eax, %eax
  42f009:	48 8d 0d e0 49 09 00 	leaq	608736(%rip), %rcx
  42f010:	ba 01 00 00 00 	movl	$1, %edx
  42f015:	f0 	lock
  42f016:	48 0f b1 11 	cmpxchgq	%rdx, (%rcx)
  42f01a:	0f 94 c3 	sete	%bl
  42f01d:	84 db 	testb	%bl, %bl
  42f01f:	0f 85 ea 01 00 00 	jne	490 <runtime.testAtomic64+0x23f>
  42f025:	48 8b 1d bc 49 09 00 	movq	608700(%rip), %rbx
  42f02c:	48 85 db 	testq	%rbx, %rbx
  42f02f:	0f 85 bf 01 00 00 	jne	447 <runtime.testAtomic64+0x224>
  42f035:	48 c7 05 a8 49 09 00 2a 00 00 00 	movq	$42, 608680(%rip)
  42f040:	b8 2a 00 00 00 	movl	$42, %eax
  42f045:	f0 	lock
  42f046:	48 0f b1 11 	cmpxchgq	%rdx, (%rcx)
  42f04a:	0f 94 c2 	sete	%dl
  42f04d:	84 d2 	testb	%dl, %dl
  42f04f:	0f 84 84 01 00 00 	je	388 <runtime.testAtomic64+0x209>
  42f055:	48 8b 05 8c 49 09 00 	movq	608652(%rip), %rax
  42f05c:	48 83 f8 2a 	cmpq	$42, %rax
  42f060:	0f 85 58 01 00 00 	jne	344 <runtime.testAtomic64+0x1ee>
  42f066:	48 8b 05 83 49 09 00 	movq	608643(%rip), %rax
  42f06d:	48 83 f8 01 	cmpq	$1, %rax
  42f071:	0f 85 47 01 00 00 	jne	327 <runtime.testAtomic64+0x1ee>
  42f077:	48 8b 05 72 49 09 00 	movq	608626(%rip), %rax
  42f07e:	48 83 f8 01 	cmpq	$1, %rax
  42f082:	0f 85 1b 01 00 00 	jne	283 <runtime.testAtomic64+0x1d3>
  42f088:	48 b8 01 00 00 00 00 01 00 00 	movabsq	$1099511627777, %rax
  42f092:	48 87 01 	xchgq	%rax, (%rcx)
  42f095:	48 8b 05 54 49 09 00 	movq	608596(%rip), %rax
  42f09c:	48 ba 01 00 00 00 00 01 00 00 	movabsq	$1099511627777, %rdx
  42f0a6:	48 39 c2 	cmpq	%rax, %rdx
  42f0a9:	0f 85 d9 00 00 00 	jne	217 <runtime.testAtomic64+0x1b8>
  42f0af:	48 b8 01 00 00 00 00 01 00 00 	movabsq	$1099511627777, %rax
  42f0b9:	f0 	lock
  42f0ba:	48 0f c1 01 	xaddq	%rax, (%rcx)
  42f0be:	48 ba 01 00 00 00 00 01 00 00 	movabsq	$1099511627777, %rdx
  42f0c8:	48 01 d0 	addq	%rdx, %rax
  42f0cb:	48 ba 02 00 00 00 00 02 00 00 	movabsq	$2199023255554, %rdx
  42f0d5:	48 39 c2 	cmpq	%rax, %rdx
  42f0d8:	0f 85 8f 00 00 00 	jne	143 <runtime.testAtomic64+0x19d>
  42f0de:	48 8b 05 0b 49 09 00 	movq	608523(%rip), %rax
  42f0e5:	48 39 d0 	cmpq	%rdx, %rax
  42f0e8:	75 68 	jne	104 <runtime.testAtomic64+0x182>
  42f0ea:	48 b8 03 00 00 00 00 03 00 00 	movabsq	$3298534883331, %rax
  42f0f4:	48 87 01 	xchgq	%rax, (%rcx)
  42f0f7:	48 39 d0 	cmpq	%rdx, %rax
  42f0fa:	75 3b 	jne	59 <runtime.testAtomic64+0x167>
  42f0fc:	48 8b 05 ed 48 09 00 	movq	608493(%rip), %rax
  42f103:	48 b9 03 00 00 00 00 03 00 00 	movabsq	$3298534883331, %rcx
  42f10d:	48 39 c1 	cmpq	%rax, %rcx
  42f110:	75 0a 	jne	10 <runtime.testAtomic64+0x14c>
  42f112:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  42f117:	48 83 c4 18 	addq	$24, %rsp
  42f11b:	c3 	retq
  42f11c:	48 8d 05 93 b6 03 00 	leaq	243347(%rip), %rax
  42f123:	48 89 04 24 	movq	%rax, (%rsp)
  42f127:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  42f130:	e8 9b 20 ff ff 	callq	-57189 <runtime.throw>
  42f135:	0f 0b 	ud2
  42f137:	48 8d 05 78 b6 03 00 	leaq	243320(%rip), %rax
  42f13e:	48 89 04 24 	movq	%rax, (%rsp)
  42f142:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  42f14b:	e8 80 20 ff ff 	callq	-57216 <runtime.throw>
  42f150:	0f 0b 	ud2
  42f152:	48 8d 05 50 b6 03 00 	leaq	243280(%rip), %rax
  42f159:	48 89 04 24 	movq	%rax, (%rsp)
  42f15d:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  42f166:	e8 65 20 ff ff 	callq	-57243 <runtime.throw>
  42f16b:	0f 0b 	ud2
  42f16d:	48 8d 05 35 b6 03 00 	leaq	243253(%rip), %rax
  42f174:	48 89 04 24 	movq	%rax, (%rsp)
  42f178:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  42f181:	e8 4a 20 ff ff 	callq	-57270 <runtime.throw>
  42f186:	0f 0b 	ud2
  42f188:	48 8d 05 75 b7 03 00 	leaq	243573(%rip), %rax
  42f18f:	48 89 04 24 	movq	%rax, (%rsp)
  42f193:	48 c7 44 24 08 0e 00 00 00 	movq	$14, 8(%rsp)
  42f19c:	e8 2f 20 ff ff 	callq	-57297 <runtime.throw>
  42f1a1:	0f 0b 	ud2
  42f1a3:	48 8d 05 b1 b5 03 00 	leaq	243121(%rip), %rax
  42f1aa:	48 89 04 24 	movq	%rax, (%rsp)
  42f1ae:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  42f1b7:	e8 14 20 ff ff 	callq	-57324 <runtime.throw>
  42f1bc:	0f 0b 	ud2
  42f1be:	48 8d 05 25 b4 03 00 	leaq	242725(%rip), %rax
  42f1c5:	48 89 04 24 	movq	%rax, (%rsp)
  42f1c9:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  42f1d2:	e8 f9 1f ff ff 	callq	-57351 <runtime.throw>
  42f1d7:	0f 0b 	ud2
  42f1d9:	48 8d 05 0a b4 03 00 	leaq	242698(%rip), %rax
  42f1e0:	48 89 04 24 	movq	%rax, (%rsp)
  42f1e4:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  42f1ed:	e8 de 1f ff ff 	callq	-57378 <runtime.throw>
  42f1f2:	0f 0b 	ud2
  42f1f4:	48 8d 05 ef b3 03 00 	leaq	242671(%rip), %rax
  42f1fb:	48 89 04 24 	movq	%rax, (%rsp)
  42f1ff:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  42f208:	e8 c3 1f ff ff 	callq	-57405 <runtime.throw>
  42f20d:	0f 0b 	ud2
  42f20f:	48 8d 05 d4 b3 03 00 	leaq	242644(%rip), %rax
  42f216:	48 89 04 24 	movq	%rax, (%rsp)
  42f21a:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  42f223:	e8 a8 1f ff ff 	callq	-57432 <runtime.throw>
  42f228:	0f 0b 	ud2
  42f22a:	e8 41 53 01 00 	callq	86849 <runtime.morestack_noctxt>
  42f22f:	e9 9c fd ff ff 	jmp	-612 <runtime.testAtomic64>
  42f234:	cc 	int3
  42f235:	cc 	int3
  42f236:	cc 	int3
  42f237:	cc 	int3
  42f238:	cc 	int3
  42f239:	cc 	int3
  42f23a:	cc 	int3
  42f23b:	cc 	int3
  42f23c:	cc 	int3
  42f23d:	cc 	int3
  42f23e:	cc 	int3
  42f23f:	cc 	int3

runtime.check:
  42f240:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42f249:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42f24d:	0f 86 6f 04 00 00 	jbe	1135 <runtime.check+0x482>
  42f253:	48 83 ec 50 	subq	$80, %rsp
  42f257:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  42f25c:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  42f261:	c7 44 24 2c 00 00 00 00 	movl	$0, 44(%rsp)
  42f269:	0f 57 c0 	xorps	%xmm0, %xmm0
  42f26c:	f3 0f 11 44 24 28 	movss	%xmm0, 40(%rsp)
  42f272:	0f 57 c0 	xorps	%xmm0, %xmm0
  42f275:	f2 0f 11 44 24 30 	movsd	%xmm0, 48(%rsp)
  42f27b:	48 c7 44 24 40 00 00 00 00 	movq	$0, 64(%rsp)
  42f284:	c7 44 24 24 00 00 00 00 	movl	$0, 36(%rsp)
  42f28c:	48 b8 31 ce 57 4b 3a 0b 00 00 	movabsq	$12345000054321, %rax
  42f296:	48 89 04 24 	movq	%rax, (%rsp)
  42f29a:	c7 44 24 08 00 ca 9a 3b 	movl	$1000000000, 8(%rsp)
  42f2a2:	48 8d 44 24 2c 	leaq	44(%rsp), %rax
  42f2a7:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  42f2ac:	e8 4f 09 00 00 	callq	2383 <runtime.timediv>
  42f2b1:	8b 44 24 18 	movl	24(%rsp), %eax
  42f2b5:	3d 39 30 00 00 	cmpl	$12345, %eax
  42f2ba:	0f 85 e7 03 00 00 	jne	999 <runtime.check+0x467>
  42f2c0:	8b 4c 24 2c 	movl	44(%rsp), %ecx
  42f2c4:	81 f9 31 d4 00 00 	cmpl	$54321, %ecx
  42f2ca:	0f 85 d7 03 00 00 	jne	983 <runtime.check+0x467>
  42f2d0:	c7 44 24 20 01 00 00 00 	movl	$1, 32(%rsp)
  42f2d8:	b8 01 00 00 00 	movl	$1, %eax
  42f2dd:	48 8d 4c 24 20 	leaq	32(%rsp), %rcx
  42f2e2:	ba 02 00 00 00 	movl	$2, %edx
  42f2e7:	f0 	lock
  42f2e8:	0f b1 11 	cmpxchgl	%edx, (%rcx)
  42f2eb:	0f 94 c2 	sete	%dl
  42f2ee:	84 d2 	testb	%dl, %dl
  42f2f0:	0f 84 96 03 00 00 	je	918 <runtime.check+0x44c>
  42f2f6:	8b 54 24 20 	movl	32(%rsp), %edx
  42f2fa:	83 fa 02 	cmpl	$2, %edx
  42f2fd:	0f 85 6e 03 00 00 	jne	878 <runtime.check+0x431>
  42f303:	c7 44 24 20 04 00 00 00 	movl	$4, 32(%rsp)
  42f30b:	b8 05 00 00 00 	movl	$5, %eax
  42f310:	ba 06 00 00 00 	movl	$6, %edx
  42f315:	f0 	lock
  42f316:	0f b1 11 	cmpxchgl	%edx, (%rcx)
  42f319:	0f 94 c2 	sete	%dl
  42f31c:	84 d2 	testb	%dl, %dl
  42f31e:	0f 85 32 03 00 00 	jne	818 <runtime.check+0x416>
  42f324:	8b 54 24 20 	movl	32(%rsp), %edx
  42f328:	83 fa 04 	cmpl	$4, %edx
  42f32b:	0f 85 0a 03 00 00 	jne	778 <runtime.check+0x3fb>
  42f331:	c7 44 24 20 ff ff ff ff 	movl	$4294967295, 32(%rsp)
  42f339:	b8 ff ff ff ff 	movl	$4294967295, %eax
  42f33e:	ba fe ff ff ff 	movl	$4294967294, %edx
  42f343:	f0 	lock
  42f344:	0f b1 11 	cmpxchgl	%edx, (%rcx)
  42f347:	0f 94 c1 	sete	%cl
  42f34a:	84 c9 	testb	%cl, %cl
  42f34c:	0f 84 ce 02 00 00 	je	718 <runtime.check+0x3e0>
  42f352:	8b 44 24 20 	movl	32(%rsp), %eax
  42f356:	83 f8 fe 	cmpl	$-2, %eax
  42f359:	0f 85 a6 02 00 00 	jne	678 <runtime.check+0x3c5>
  42f35f:	b8 23 b1 dc fe 	movl	$4275876131, %eax
  42f364:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  42f369:	48 c1 e0 0a 	shlq	$10, %rax
  42f36d:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  42f372:	48 8d 44 24 40 	leaq	64(%rsp), %rax
  42f377:	48 89 04 24 	movq	%rax, (%rsp)
  42f37b:	0f 57 c0 	xorps	%xmm0, %xmm0
  42f37e:	0f 11 44 24 08 	movups	%xmm0, 8(%rsp)
  42f383:	e8 98 2b fd ff 	callq	-185448 <runtime.casp>
  42f388:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  42f38d:	84 c0 	testb	%al, %al
  42f38f:	0f 85 55 02 00 00 	jne	597 <runtime.check+0x3aa>
  42f395:	48 8b 44 24 40 	movq	64(%rsp), %rax
  42f39a:	48 8d 4c 24 40 	leaq	64(%rsp), %rcx
  42f39f:	48 89 0c 24 	movq	%rcx, (%rsp)
  42f3a3:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  42f3a8:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  42f3ad:	48 ff c0 	incq	%rax
  42f3b0:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  42f3b5:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  42f3ba:	e8 61 2b fd ff 	callq	-185503 <runtime.casp>
  42f3bf:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  42f3c4:	84 c0 	testb	%al, %al
  42f3c6:	0f 84 03 02 00 00 	je	515 <runtime.check+0x38f>
  42f3cc:	48 8b 44 24 40 	movq	64(%rsp), %rax
  42f3d1:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  42f3d6:	48 39 c8 	cmpq	%rcx, %rax
  42f3d9:	0f 85 d5 01 00 00 	jne	469 <runtime.check+0x374>
  42f3df:	c7 44 24 24 00 00 00 00 	movl	$0, 36(%rsp)
  42f3e7:	c7 44 24 24 01 01 01 01 	movl	$16843009, 36(%rsp)
  42f3ef:	b8 f0 ff ff ff 	movl	$4294967280, %eax
  42f3f4:	48 8d 4c 24 25 	leaq	37(%rsp), %rcx
  42f3f9:	f0 	lock
  42f3fa:	08 01 	orb	%al, (%rcx)
  42f3fc:	0f b6 44 24 24 	movzbl	36(%rsp), %eax
  42f401:	3c 01 	cmpb	$1, %al
  42f403:	0f 85 90 01 00 00 	jne	400 <runtime.check+0x359>
  42f409:	0f b6 44 24 25 	movzbl	37(%rsp), %eax
  42f40e:	3c f1 	cmpb	$-15, %al
  42f410:	0f 85 83 01 00 00 	jne	387 <runtime.check+0x359>
  42f416:	0f b6 44 24 26 	movzbl	38(%rsp), %eax
  42f41b:	3c 01 	cmpb	$1, %al
  42f41d:	0f 85 76 01 00 00 	jne	374 <runtime.check+0x359>
  42f423:	0f b6 44 24 27 	movzbl	39(%rsp), %eax
  42f428:	3c 01 	cmpb	$1, %al
  42f42a:	0f 85 69 01 00 00 	jne	361 <runtime.check+0x359>
  42f430:	c7 44 24 24 00 00 00 00 	movl	$0, 36(%rsp)
  42f438:	c7 44 24 24 ff ff ff ff 	movl	$4294967295, 36(%rsp)
  42f440:	b8 01 00 00 00 	movl	$1, %eax
  42f445:	f0 	lock
  42f446:	20 01 	andb	%al, (%rcx)
  42f448:	0f b6 44 24 24 	movzbl	36(%rsp), %eax
  42f44d:	3c ff 	cmpb	$-1, %al
  42f44f:	0f 85 29 01 00 00 	jne	297 <runtime.check+0x33e>
  42f455:	0f b6 44 24 25 	movzbl	37(%rsp), %eax
  42f45a:	3c 01 	cmpb	$1, %al
  42f45c:	0f 85 1c 01 00 00 	jne	284 <runtime.check+0x33e>
  42f462:	0f b6 44 24 26 	movzbl	38(%rsp), %eax
  42f467:	3c ff 	cmpb	$-1, %al
  42f469:	0f 85 0f 01 00 00 	jne	271 <runtime.check+0x33e>
  42f46f:	0f b6 44 24 27 	movzbl	39(%rsp), %eax
  42f474:	3c ff 	cmpb	$-1, %al
  42f476:	0f 85 02 01 00 00 	jne	258 <runtime.check+0x33e>
  42f47c:	48 c7 44 24 30 ff ff ff ff 	movq	$-1, 48(%rsp)
  42f485:	f2 0f 10 44 24 30 	movsd	48(%rsp), %xmm0
  42f48b:	f2 0f 10 0d a5 56 04 00 	movsd	284325(%rip), %xmm1
  42f493:	66 0f 2e c1 	ucomisd	%xmm1, %xmm0
  42f497:	75 06 	jne	6 <runtime.check+0x25f>
  42f499:	0f 8b c4 00 00 00 	jnp	196 <runtime.check+0x323>
  42f49f:	75 06 	jne	6 <runtime.check+0x267>
  42f4a1:	0f 8b a1 00 00 00 	jnp	161 <runtime.check+0x308>
  42f4a7:	c7 44 24 28 ff ff ff ff 	movl	$4294967295, 40(%rsp)
  42f4af:	f3 0f 10 44 24 28 	movss	40(%rsp), %xmm0
  42f4b5:	f3 0f 10 0d db 55 04 00 	movss	284123(%rip), %xmm1
  42f4bd:	0f 2e c8 	ucomiss	%xmm0, %xmm1
  42f4c0:	75 02 	jne	2 <runtime.check+0x284>
  42f4c2:	7b 69 	jnp	105 <runtime.check+0x2ed>
  42f4c4:	e8 07 fb ff ff 	callq	-1273 <runtime.testAtomic64>
  42f4c9:	c7 04 24 00 08 00 00 	movl	$2048, (%rsp)
  42f4d0:	e8 ab 67 00 00 	callq	26539 <runtime.round2>
  42f4d5:	8b 44 24 08 	movl	8(%rsp), %eax
  42f4d9:	3d 00 08 00 00 	cmpl	$2048, %eax
  42f4de:	75 32 	jne	50 <runtime.check+0x2d2>
  42f4e0:	e8 3b 6e 01 00 	callq	93755 <runtime.checkASM>
  42f4e5:	0f b6 04 24 	movzbl	(%rsp), %eax
  42f4e9:	84 c0 	testb	%al, %al
  42f4eb:	74 0a 	je	10 <runtime.check+0x2b7>
  42f4ed:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  42f4f2:	48 83 c4 50 	addq	$80, %rsp
  42f4f6:	c3 	retq
  42f4f7:	48 8d 05 de be 03 00 	leaq	245470(%rip), %rax
  42f4fe:	48 89 04 24 	movq	%rax, (%rsp)
  42f502:	48 c7 44 24 08 16 00 00 00 	movq	$22, 8(%rsp)
  42f50b:	e8 c0 1c ff ff 	callq	-58176 <runtime.throw>
  42f510:	0f 0b 	ud2
  42f512:	48 8d 05 85 ca 03 00 	leaq	248453(%rip), %rax
  42f519:	48 89 04 24 	movq	%rax, (%rsp)
  42f51d:	48 c7 44 24 08 1c 00 00 00 	movq	$28, 8(%rsp)
  42f526:	e8 a5 1c ff ff 	callq	-58203 <runtime.throw>
  42f52b:	0f 0b 	ud2
  42f52d:	48 8d 05 56 af 03 00 	leaq	241494(%rip), %rax
  42f534:	48 89 04 24 	movq	%rax, (%rsp)
  42f538:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  42f541:	e8 8a 1c ff ff 	callq	-58230 <runtime.throw>
  42f546:	0f 0b 	ud2
  42f548:	48 8d 05 51 af 03 00 	leaq	241489(%rip), %rax
  42f54f:	48 89 04 24 	movq	%rax, (%rsp)
  42f553:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  42f55c:	e8 6f 1c ff ff 	callq	-58257 <runtime.throw>
  42f561:	0f 0b 	ud2
  42f563:	48 8d 05 2b af 03 00 	leaq	241451(%rip), %rax
  42f56a:	48 89 04 24 	movq	%rax, (%rsp)
  42f56e:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  42f577:	e8 54 1c ff ff 	callq	-58284 <runtime.throw>
  42f57c:	0f 0b 	ud2
  42f57e:	48 8d 05 af ad 03 00 	leaq	241071(%rip), %rax
  42f585:	48 89 04 24 	movq	%rax, (%rsp)
  42f589:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  42f592:	e8 39 1c ff ff 	callq	-58311 <runtime.throw>
  42f597:	0f 0b 	ud2
  42f599:	48 8d 05 5c ab 03 00 	leaq	240476(%rip), %rax
  42f5a0:	48 89 04 24 	movq	%rax, (%rsp)
  42f5a4:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  42f5ad:	e8 1e 1c ff ff 	callq	-58338 <runtime.throw>
  42f5b2:	0f 0b 	ud2
  42f5b4:	48 8d 05 f3 a7 03 00 	leaq	239603(%rip), %rax
  42f5bb:	48 89 04 24 	movq	%rax, (%rsp)
  42f5bf:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  42f5c8:	e8 03 1c ff ff 	callq	-58365 <runtime.throw>
  42f5cd:	0f 0b 	ud2
  42f5cf:	48 8d 05 d3 a7 03 00 	leaq	239571(%rip), %rax
  42f5d6:	48 89 04 24 	movq	%rax, (%rsp)
  42f5da:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  42f5e3:	e8 e8 1b ff ff 	callq	-58392 <runtime.throw>
  42f5e8:	0f 0b 	ud2
  42f5ea:	48 8d 05 b3 a7 03 00 	leaq	239539(%rip), %rax
  42f5f1:	48 89 04 24 	movq	%rax, (%rsp)
  42f5f5:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  42f5fe:	e8 cd 1b ff ff 	callq	-58419 <runtime.throw>
  42f603:	0f 0b 	ud2
  42f605:	48 8d 05 0e a7 03 00 	leaq	239374(%rip), %rax
  42f60c:	48 89 04 24 	movq	%rax, (%rsp)
  42f610:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  42f619:	e8 b2 1b ff ff 	callq	-58446 <runtime.throw>
  42f61e:	0f 0b 	ud2
  42f620:	48 8d 05 ef a6 03 00 	leaq	239343(%rip), %rax
  42f627:	48 89 04 24 	movq	%rax, (%rsp)
  42f62b:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  42f634:	e8 97 1b ff ff 	callq	-58473 <runtime.throw>
  42f639:	0f 0b 	ud2
  42f63b:	48 8d 05 d0 a6 03 00 	leaq	239312(%rip), %rax
  42f642:	48 89 04 24 	movq	%rax, (%rsp)
  42f646:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  42f64f:	e8 7c 1b ff ff 	callq	-58500 <runtime.throw>
  42f654:	0f 0b 	ud2
  42f656:	48 8d 05 b1 a6 03 00 	leaq	239281(%rip), %rax
  42f65d:	48 89 04 24 	movq	%rax, (%rsp)
  42f661:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  42f66a:	e8 61 1b ff ff 	callq	-58527 <runtime.throw>
  42f66f:	0f 0b 	ud2
  42f671:	48 8d 05 92 a6 03 00 	leaq	239250(%rip), %rax
  42f678:	48 89 04 24 	movq	%rax, (%rsp)
  42f67c:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  42f685:	e8 46 1b ff ff 	callq	-58554 <runtime.throw>
  42f68a:	0f 0b 	ud2
  42f68c:	48 8d 05 73 a6 03 00 	leaq	239219(%rip), %rax
  42f693:	48 89 04 24 	movq	%rax, (%rsp)
  42f697:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  42f6a0:	e8 2b 1b ff ff 	callq	-58581 <runtime.throw>
  42f6a5:	0f 0b 	ud2
  42f6a7:	48 8d 05 bb ad 03 00 	leaq	241083(%rip), %rax
  42f6ae:	48 89 04 24 	movq	%rax, (%rsp)
  42f6b2:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  42f6bb:	e8 10 1b ff ff 	callq	-58608 <runtime.throw>
  42f6c0:	0f 0b 	ud2
  42f6c2:	e8 a9 4e 01 00 	callq	85673 <runtime.morestack_noctxt>
  42f6c7:	e9 74 fb ff ff 	jmp	-1164 <runtime.check>
  42f6cc:	cc 	int3
  42f6cd:	cc 	int3
  42f6ce:	cc 	int3
  42f6cf:	cc 	int3

runtime.parsedebugvars:
  42f6d0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42f6d9:	48 8d 44 24 f8 	leaq	-8(%rsp), %rax
  42f6de:	48 3b 41 10 	cmpq	16(%rcx), %rax
  42f6e2:	0f 86 2e 03 00 00 	jbe	814 <runtime.parsedebugvars+0x346>
  42f6e8:	48 81 ec 88 00 00 00 	subq	$136, %rsp
  42f6ef:	48 89 ac 24 80 00 00 00 	movq	%rbp, 128(%rsp)
  42f6f7:	48 8d ac 24 80 00 00 00 	leaq	128(%rsp), %rbp
  42f6ff:	c7 05 bb 43 09 00 01 00 00 00 	movl	$1, 607163(%rip)
  42f709:	c7 05 d1 43 09 00 01 00 00 00 	movl	$1, 607185(%rip)
  42f713:	48 8d 05 86 a7 03 00 	leaq	239494(%rip), %rax
  42f71a:	48 89 04 24 	movq	%rax, (%rsp)
  42f71e:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  42f727:	e8 44 53 fd ff 	callq	-175292 <runtime.gogetenv>
  42f72c:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42f731:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  42f736:	eb 0a 	jmp	10 <runtime.parsedebugvars+0x72>
  42f738:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  42f73d:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42f742:	48 85 c0 	testq	%rax, %rax
  42f745:	0f 84 70 02 00 00 	je	624 <runtime.parsedebugvars+0x2eb>
  42f74b:	48 89 4c 24 68 	movq	%rcx, 104(%rsp)
  42f750:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  42f755:	48 89 0c 24 	movq	%rcx, (%rsp)
  42f759:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  42f75e:	48 8d 15 ef a4 03 00 	leaq	238831(%rip), %rdx
  42f765:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  42f76a:	48 c7 44 24 18 01 00 00 00 	movq	$1, 24(%rsp)
  42f773:	e8 18 7c 00 00 	callq	31768 <runtime.index>
  42f778:	48 8b 44 24 20 	movq	32(%rsp), %rax
  42f77d:	48 85 c0 	testq	%rax, %rax
  42f780:	0f 8d f7 01 00 00 	jge	503 <runtime.parsedebugvars+0x2ad>
  42f786:	31 c0 	xorl	%eax, %eax
  42f788:	31 c9 	xorl	%ecx, %ecx
  42f78a:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  42f78f:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  42f794:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  42f799:	48 89 54 24 38 	movq	%rdx, 56(%rsp)
  42f79e:	48 8b 5c 24 68 	movq	104(%rsp), %rbx
  42f7a3:	48 89 1c 24 	movq	%rbx, (%rsp)
  42f7a7:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  42f7ac:	48 8d 35 a7 a4 03 00 	leaq	238759(%rip), %rsi
  42f7b3:	48 89 74 24 10 	movq	%rsi, 16(%rsp)
  42f7b8:	48 c7 44 24 18 01 00 00 00 	movq	$1, 24(%rsp)
  42f7c1:	e8 ca 7b 00 00 	callq	31690 <runtime.index>
  42f7c6:	48 8b 44 24 20 	movq	32(%rsp), %rax
  42f7cb:	48 85 c0 	testq	%rax, %rax
  42f7ce:	0f 8c 64 ff ff ff 	jl	-156 <runtime.parsedebugvars+0x68>
  42f7d4:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  42f7d9:	48 39 c8 	cmpq	%rcx, %rax
  42f7dc:	0f 87 26 02 00 00 	ja	550 <runtime.parsedebugvars+0x338>
  42f7e2:	48 8d 50 01 	leaq	1(%rax), %rdx
  42f7e6:	48 39 ca 	cmpq	%rcx, %rdx
  42f7e9:	0f 87 19 02 00 00 	ja	537 <runtime.parsedebugvars+0x338>
  42f7ef:	48 29 d1 	subq	%rdx, %rcx
  42f7f2:	48 89 cb 	movq	%rcx, %rbx
  42f7f5:	48 f7 d9 	negq	%rcx
  42f7f8:	48 c1 f9 3f 	sarq	$63, %rcx
  42f7fc:	48 21 d1 	andq	%rdx, %rcx
  42f7ff:	48 8b 54 24 68 	movq	104(%rsp), %rdx
  42f804:	48 01 d1 	addq	%rdx, %rcx
  42f807:	48 83 f8 0e 	cmpq	$14, %rax
  42f80b:	0f 85 5d 01 00 00 	jne	349 <runtime.parsedebugvars+0x29e>
  42f811:	48 8b 32 	movq	(%rdx), %rsi
  42f814:	48 bf 6d 65 6d 70 72 6f 66 69 	movabsq	$7594880358910092653, %rdi
  42f81e:	48 39 fe 	cmpq	%rdi, %rsi
  42f821:	75 1a 	jne	26 <runtime.parsedebugvars+0x16d>
  42f823:	8b 72 08 	movl	8(%rdx), %esi
  42f826:	81 fe 6c 65 72 61 	cmpl	$1634887020, %esi
  42f82c:	75 0f 	jne	15 <runtime.parsedebugvars+0x16d>
  42f82e:	0f b7 72 0c 	movzwl	12(%rdx), %esi
  42f832:	66 81 fe 74 65 	cmpw	$25972, %si
  42f837:	0f 84 ff 00 00 00 	je	255 <runtime.parsedebugvars+0x26c>
  42f83d:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  42f842:	48 89 5c 24 50 	movq	%rbx, 80(%rsp)
  42f847:	48 89 4c 24 58 	movq	%rcx, 88(%rsp)
  42f84c:	48 8b 35 d5 62 07 00 	movq	484053(%rip), %rsi
  42f853:	48 89 74 24 48 	movq	%rsi, 72(%rsp)
  42f858:	4c 8b 05 c1 62 07 00 	movq	484033(%rip), %r8
  42f85f:	45 31 c9 	xorl	%r9d, %r9d
  42f862:	eb 07 	jmp	7 <runtime.parsedebugvars+0x19b>
  42f864:	49 83 c0 18 	addq	$24, %r8
  42f868:	49 ff c1 	incq	%r9
  42f86b:	49 39 f1 	cmpq	%rsi, %r9
  42f86e:	0f 8d c4 fe ff ff 	jge	-316 <runtime.parsedebugvars+0x68>
  42f874:	4d 8b 50 08 	movq	8(%r8), %r10
  42f878:	4d 8b 18 	movq	(%r8), %r11
  42f87b:	4d 8b 60 10 	movq	16(%r8), %r12
  42f87f:	49 39 c2 	cmpq	%rax, %r10
  42f882:	75 e0 	jne	-32 <runtime.parsedebugvars+0x194>
  42f884:	4c 89 4c 24 40 	movq	%r9, 64(%rsp)
  42f889:	4c 89 64 24 78 	movq	%r12, 120(%rsp)
  42f88e:	4c 89 44 24 70 	movq	%r8, 112(%rsp)
  42f893:	4c 89 1c 24 	movq	%r11, (%rsp)
  42f897:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  42f89c:	4c 89 54 24 10 	movq	%r10, 16(%rsp)
  42f8a1:	e8 9a 6a 01 00 	callq	92826 <runtime.memequal>
  42f8a6:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  42f8ab:	84 c0 	testb	%al, %al
  42f8ad:	75 2f 	jne	47 <runtime.parsedebugvars+0x20e>
  42f8af:	48 8b 44 24 30 	movq	48(%rsp), %rax
  42f8b4:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  42f8b9:	48 8b 54 24 68 	movq	104(%rsp), %rdx
  42f8be:	48 8b 5c 24 50 	movq	80(%rsp), %rbx
  42f8c3:	48 8b 74 24 48 	movq	72(%rsp), %rsi
  42f8c8:	48 bf 6d 65 6d 70 72 6f 66 69 	movabsq	$7594880358910092653, %rdi
  42f8d2:	4c 8b 44 24 70 	movq	112(%rsp), %r8
  42f8d7:	4c 8b 4c 24 40 	movq	64(%rsp), %r9
  42f8dc:	eb 86 	jmp	-122 <runtime.parsedebugvars+0x194>
  42f8de:	48 8b 44 24 58 	movq	88(%rsp), %rax
  42f8e3:	48 89 04 24 	movq	%rax, (%rsp)
  42f8e7:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  42f8ec:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  42f8f1:	e8 3a 7d 00 00 	callq	32058 <runtime.atoi32>
  42f8f6:	8b 44 24 10 	movl	16(%rsp), %eax
  42f8fa:	0f b6 4c 24 14 	movzbl	20(%rsp), %ecx
  42f8ff:	84 c9 	testb	%cl, %cl
  42f901:	74 07 	je	7 <runtime.parsedebugvars+0x23a>
  42f903:	48 8b 4c 24 78 	movq	120(%rsp), %rcx
  42f908:	89 01 	movl	%eax, (%rcx)
  42f90a:	48 8b 44 24 30 	movq	48(%rsp), %rax
  42f90f:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  42f914:	48 8b 54 24 68 	movq	104(%rsp), %rdx
  42f919:	48 8b 5c 24 50 	movq	80(%rsp), %rbx
  42f91e:	48 8b 74 24 48 	movq	72(%rsp), %rsi
  42f923:	48 bf 6d 65 6d 70 72 6f 66 69 	movabsq	$7594880358910092653, %rdi
  42f92d:	4c 8b 44 24 70 	movq	112(%rsp), %r8
  42f932:	4c 8b 4c 24 40 	movq	64(%rsp), %r9
  42f937:	e9 28 ff ff ff 	jmp	-216 <runtime.parsedebugvars+0x194>
  42f93c:	48 89 0c 24 	movq	%rcx, (%rsp)
  42f940:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  42f945:	e8 b6 7b 00 00 	callq	31670 <runtime.atoi>
  42f94a:	48 8b 44 24 10 	movq	16(%rsp), %rax
  42f94f:	0f b6 4c 24 18 	movzbl	24(%rsp), %ecx
  42f954:	84 c9 	testb	%cl, %cl
  42f956:	74 07 	je	7 <runtime.parsedebugvars+0x28f>
  42f958:	48 89 05 b9 56 07 00 	movq	%rax, 480953(%rip)
  42f95f:	48 bf 6d 65 6d 70 72 6f 66 69 	movabsq	$7594880358910092653, %rdi
  42f969:	e9 ca fd ff ff 	jmp	-566 <runtime.parsedebugvars+0x68>
  42f96e:	48 bf 6d 65 6d 70 72 6f 66 69 	movabsq	$7594880358910092653, %rdi
  42f978:	e9 c0 fe ff ff 	jmp	-320 <runtime.parsedebugvars+0x16d>
  42f97d:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  42f982:	48 39 c8 	cmpq	%rcx, %rax
  42f985:	0f 87 84 00 00 00 	ja	132 <runtime.parsedebugvars+0x33f>
  42f98b:	48 8d 50 01 	leaq	1(%rax), %rdx
  42f98f:	48 39 ca 	cmpq	%rcx, %rdx
  42f992:	77 7b 	ja	123 <runtime.parsedebugvars+0x33f>
  42f994:	48 29 d1 	subq	%rdx, %rcx
  42f997:	48 89 cb 	movq	%rcx, %rbx
  42f99a:	48 f7 d9 	negq	%rcx
  42f99d:	48 c1 f9 3f 	sarq	$63, %rcx
  42f9a1:	48 21 d1 	andq	%rdx, %rcx
  42f9a4:	48 8b 74 24 68 	movq	104(%rsp), %rsi
  42f9a9:	48 8d 3c 0e 	leaq	(%rsi,%rcx), %rdi
  42f9ad:	48 89 d9 	movq	%rbx, %rcx
  42f9b0:	48 89 c2 	movq	%rax, %rdx
  42f9b3:	48 89 f8 	movq	%rdi, %rax
  42f9b6:	e9 d4 fd ff ff 	jmp	-556 <runtime.parsedebugvars+0xbf>
  42f9bb:	48 8d 05 86 aa 03 00 	leaq	240262(%rip), %rax
  42f9c2:	48 89 04 24 	movq	%rax, (%rsp)
  42f9c6:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  42f9cf:	e8 9c 50 fd ff 	callq	-175972 <runtime.gogetenv>
  42f9d4:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42f9d9:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  42f9de:	48 89 0c 24 	movq	%rcx, (%rsp)
  42f9e2:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  42f9e7:	e8 34 00 00 00 	callq	52 <runtime/debug.SetTraceback>
  42f9ec:	8b 05 16 56 07 00 	movl	480790(%rip), %eax
  42f9f2:	89 05 0c 3f 09 00 	movl	%eax, 605964(%rip)
  42f9f8:	48 8b ac 24 80 00 00 00 	movq	128(%rsp), %rbp
  42fa00:	48 81 c4 88 00 00 00 	addq	$136, %rsp
  42fa07:	c3 	retq
  42fa08:	e8 a3 00 ff ff 	callq	-65373 <runtime.panicslice>
  42fa0d:	0f 0b 	ud2
  42fa0f:	e8 9c 00 ff ff 	callq	-65380 <runtime.panicslice>
  42fa14:	0f 0b 	ud2
  42fa16:	e8 55 4b 01 00 	callq	84821 <runtime.morestack_noctxt>
  42fa1b:	e9 b0 fc ff ff 	jmp	-848 <runtime.parsedebugvars>

runtime/debug.SetTraceback:
  42fa20:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42fa29:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42fa2d:	0f 86 b8 01 00 00 	jbe	440 <runtime/debug.SetTraceback+0x1cb>
  42fa33:	48 83 ec 30 	subq	$48, %rsp
  42fa37:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  42fa3c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  42fa41:	48 8b 44 24 40 	movq	64(%rsp), %rax
  42fa46:	48 83 f8 04 	cmpq	$4, %rax
  42fa4a:	0f 8d ca 00 00 00 	jge	202 <runtime/debug.SetTraceback+0xfa>
  42fa50:	48 85 c0 	testq	%rax, %rax
  42fa53:	75 39 	jne	57 <runtime/debug.SetTraceback+0x6e>
  42fa55:	b8 04 00 00 00 	movl	$4, %eax
  42fa5a:	0f b6 0d 4c 3e 09 00 	movzbl	605772(%rip), %ecx
  42fa61:	84 c9 	testb	%cl, %cl
  42fa63:	74 1c 	je	28 <runtime/debug.SetTraceback+0x61>
  42fa65:	83 c8 01 	orl	$1, %eax
  42fa68:	0b 05 96 3e 09 00 	orl	605846(%rip), %eax
  42fa6e:	48 8d 0d 93 55 07 00 	leaq	480659(%rip), %rcx
  42fa75:	87 01 	xchgl	%eax, (%rcx)
  42fa77:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  42fa7c:	48 83 c4 30 	addq	$48, %rsp
  42fa80:	c3 	retq
  42fa81:	0f b6 0d 23 3e 09 00 	movzbl	605731(%rip), %ecx
  42fa88:	84 c9 	testb	%cl, %cl
  42fa8a:	75 d9 	jne	-39 <runtime/debug.SetTraceback+0x45>
  42fa8c:	eb da 	jmp	-38 <runtime/debug.SetTraceback+0x48>
  42fa8e:	48 83 f8 03 	cmpq	$3, %rax
  42fa92:	75 7b 	jne	123 <runtime/debug.SetTraceback+0xef>
  42fa94:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  42fa99:	0f b7 11 	movzwl	(%rcx), %edx
  42fa9c:	66 81 fa 61 6c 	cmpw	$27745, %dx
  42faa1:	75 66 	jne	102 <runtime/debug.SetTraceback+0xe9>
  42faa3:	0f b6 51 02 	movzbl	2(%rcx), %edx
  42faa7:	80 fa 6c 	cmpb	$108, %dl
  42faaa:	75 07 	jne	7 <runtime/debug.SetTraceback+0x93>
  42faac:	b8 06 00 00 00 	movl	$6, %eax
  42fab1:	eb a7 	jmp	-89 <runtime/debug.SetTraceback+0x3a>
  42fab3:	48 83 f8 04 	cmpq	$4, %rax
  42fab7:	75 0e 	jne	14 <runtime/debug.SetTraceback+0xa7>
  42fab9:	8b 11 	movl	(%rcx), %edx
  42fabb:	81 fa 6e 6f 6e 65 	cmpl	$1701736302, %edx
  42fac1:	75 04 	jne	4 <runtime/debug.SetTraceback+0xa7>
  42fac3:	31 c0 	xorl	%eax, %eax
  42fac5:	eb 93 	jmp	-109 <runtime/debug.SetTraceback+0x3a>
  42fac7:	48 89 0c 24 	movq	%rcx, (%rsp)
  42facb:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  42fad0:	e8 2b 7a 00 00 	callq	31275 <runtime.atoi>
  42fad5:	48 8b 44 24 10 	movq	16(%rsp), %rax
  42fada:	0f b6 4c 24 18 	movzbl	24(%rsp), %ecx
  42fadf:	84 c9 	testb	%cl, %cl
  42fae1:	74 1c 	je	28 <runtime/debug.SetTraceback+0xdf>
  42fae3:	89 c1 	movl	%eax, %ecx
  42fae5:	48 39 c1 	cmpq	%rax, %rcx
  42fae8:	75 0b 	jne	11 <runtime/debug.SetTraceback+0xd5>
  42faea:	c1 e0 02 	shll	$2, %eax
  42faed:	83 c8 02 	orl	$2, %eax
  42faf0:	e9 65 ff ff ff 	jmp	-155 <runtime/debug.SetTraceback+0x3a>
  42faf5:	b8 02 00 00 00 	movl	$2, %eax
  42fafa:	e9 5b ff ff ff 	jmp	-165 <runtime/debug.SetTraceback+0x3a>
  42faff:	b8 02 00 00 00 	movl	$2, %eax
  42fb04:	e9 51 ff ff ff 	jmp	-175 <runtime/debug.SetTraceback+0x3a>
  42fb09:	48 83 f8 04 	cmpq	$4, %rax
  42fb0d:	eb a8 	jmp	-88 <runtime/debug.SetTraceback+0x97>
  42fb0f:	48 83 f8 04 	cmpq	$4, %rax
  42fb13:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  42fb18:	eb 9d 	jmp	-99 <runtime/debug.SetTraceback+0x97>
  42fb1a:	0f 84 85 00 00 00 	je	133 <runtime/debug.SetTraceback+0x185>
  42fb20:	48 83 f8 05 	cmpq	$5, %rax
  42fb24:	75 78 	jne	120 <runtime/debug.SetTraceback+0x17e>
  42fb26:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  42fb2b:	8b 11 	movl	(%rcx), %edx
  42fb2d:	81 fa 63 72 61 73 	cmpl	$1935766115, %edx
  42fb33:	75 13 	jne	19 <runtime/debug.SetTraceback+0x128>
  42fb35:	0f b6 51 04 	movzbl	4(%rcx), %edx
  42fb39:	80 fa 68 	cmpb	$104, %dl
  42fb3c:	75 0a 	jne	10 <runtime/debug.SetTraceback+0x128>
  42fb3e:	b8 0b 00 00 00 	movl	$11, %eax
  42fb43:	e9 12 ff ff ff 	jmp	-238 <runtime/debug.SetTraceback+0x3a>
  42fb48:	48 83 f8 06 	cmpq	$6, %rax
  42fb4c:	75 1d 	jne	29 <runtime/debug.SetTraceback+0x14b>
  42fb4e:	8b 11 	movl	(%rcx), %edx
  42fb50:	81 fa 73 69 6e 67 	cmpl	$1735289203, %edx
  42fb56:	75 40 	jne	64 <runtime/debug.SetTraceback+0x178>
  42fb58:	0f b7 51 04 	movzwl	4(%rcx), %edx
  42fb5c:	66 81 fa 6c 65 	cmpw	$25964, %dx
  42fb61:	0f 84 ee fe ff ff 	je	-274 <runtime/debug.SetTraceback+0x35>
  42fb67:	48 83 f8 06 	cmpq	$6, %rax
  42fb6b:	0f 85 56 ff ff ff 	jne	-170 <runtime/debug.SetTraceback+0xa7>
  42fb71:	8b 11 	movl	(%rcx), %edx
  42fb73:	81 fa 73 79 73 74 	cmpl	$1953724787, %edx
  42fb79:	0f 85 48 ff ff ff 	jne	-184 <runtime/debug.SetTraceback+0xa7>
  42fb7f:	0f b7 51 04 	movzwl	4(%rcx), %edx
  42fb83:	66 81 fa 65 6d 	cmpw	$28005, %dx
  42fb88:	0f 85 39 ff ff ff 	jne	-199 <runtime/debug.SetTraceback+0xa7>
  42fb8e:	b8 0a 00 00 00 	movl	$10, %eax
  42fb93:	e9 c2 fe ff ff 	jmp	-318 <runtime/debug.SetTraceback+0x3a>
  42fb98:	48 83 f8 06 	cmpq	$6, %rax
  42fb9c:	eb cd 	jmp	-51 <runtime/debug.SetTraceback+0x14b>
  42fb9e:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  42fba3:	eb a3 	jmp	-93 <runtime/debug.SetTraceback+0x128>
  42fba5:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  42fbaa:	48 89 0c 24 	movq	%rcx, (%rsp)
  42fbae:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  42fbb3:	48 8d 15 6c a1 03 00 	leaq	237932(%rip), %rdx
  42fbba:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  42fbbf:	48 c7 44 24 18 04 00 00 00 	movq	$4, 24(%rsp)
  42fbc8:	e8 13 69 01 00 	callq	92435 <runtime.cmpstring>
  42fbcd:	48 8b 44 24 20 	movq	32(%rsp), %rax
  42fbd2:	48 85 c0 	testq	%rax, %rax
  42fbd5:	7f 0a 	jg	10 <runtime/debug.SetTraceback+0x1c1>
  42fbd7:	48 8b 44 24 40 	movq	64(%rsp), %rax
  42fbdc:	e9 6f fe ff ff 	jmp	-401 <runtime/debug.SetTraceback+0x30>
  42fbe1:	48 8b 44 24 40 	movq	64(%rsp), %rax
  42fbe6:	e9 35 ff ff ff 	jmp	-203 <runtime/debug.SetTraceback+0x100>
  42fbeb:	e8 80 49 01 00 	callq	84352 <runtime.morestack_noctxt>
  42fbf0:	e9 2b fe ff ff 	jmp	-469 <runtime/debug.SetTraceback>
  42fbf5:	cc 	int3
  42fbf6:	cc 	int3
  42fbf7:	cc 	int3
  42fbf8:	cc 	int3
  42fbf9:	cc 	int3
  42fbfa:	cc 	int3
  42fbfb:	cc 	int3
  42fbfc:	cc 	int3
  42fbfd:	cc 	int3
  42fbfe:	cc 	int3
  42fbff:	cc 	int3

runtime.timediv:
  42fc00:	8b 44 24 10 	movl	16(%rsp), %eax
  42fc04:	48 8b 54 24 08 	movq	8(%rsp), %rdx
  42fc09:	b9 1e 00 00 00 	movl	$30, %ecx
  42fc0e:	31 db 	xorl	%ebx, %ebx
  42fc10:	eb 03 	jmp	3 <runtime.timediv+0x15>
  42fc12:	48 ff c9 	decq	%rcx
  42fc15:	48 85 c9 	testq	%rcx, %rcx
  42fc18:	7c 2b 	jl	43 <runtime.timediv+0x45>
  42fc1a:	48 63 f0 	movslq	%eax, %rsi
  42fc1d:	48 d3 e6 	shlq	%cl, %rsi
  42fc20:	48 83 f9 40 	cmpq	$64, %rcx
  42fc24:	48 19 ff 	sbbq	%rdi, %rdi
  42fc27:	48 21 fe 	andq	%rdi, %rsi
  42fc2a:	48 39 f2 	cmpq	%rsi, %rdx
  42fc2d:	7c e3 	jl	-29 <runtime.timediv+0x12>
  42fc2f:	48 29 f2 	subq	%rsi, %rdx
  42fc32:	be 01 00 00 00 	movl	$1, %esi
  42fc37:	d3 e6 	shll	%cl, %esi
  42fc39:	48 83 f9 20 	cmpq	$32, %rcx
  42fc3d:	19 ff 	sbbl	%edi, %edi
  42fc3f:	21 fe 	andl	%edi, %esi
  42fc41:	01 f3 	addl	%esi, %ebx
  42fc43:	eb cd 	jmp	-51 <runtime.timediv+0x12>
  42fc45:	48 63 c0 	movslq	%eax, %rax
  42fc48:	48 39 c2 	cmpq	%rax, %rdx
  42fc4b:	7c 19 	jl	25 <runtime.timediv+0x66>
  42fc4d:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42fc52:	48 85 c0 	testq	%rax, %rax
  42fc55:	74 06 	je	6 <runtime.timediv+0x5d>
  42fc57:	c7 00 00 00 00 00 	movl	$0, (%rax)
  42fc5d:	c7 44 24 20 ff ff ff 7f 	movl	$2147483647, 32(%rsp)
  42fc65:	c3 	retq
  42fc66:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42fc6b:	48 85 c0 	testq	%rax, %rax
  42fc6e:	74 02 	je	2 <runtime.timediv+0x72>
  42fc70:	89 10 	movl	%edx, (%rax)
  42fc72:	89 5c 24 20 	movl	%ebx, 32(%rsp)
  42fc76:	c3 	retq
  42fc77:	cc 	int3
  42fc78:	cc 	int3
  42fc79:	cc 	int3
  42fc7a:	cc 	int3
  42fc7b:	cc 	int3
  42fc7c:	cc 	int3
  42fc7d:	cc 	int3
  42fc7e:	cc 	int3
  42fc7f:	cc 	int3

runtime.extendRandom:
  42fc80:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42fc89:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42fc8d:	0f 86 d0 00 00 00 	jbe	208 <runtime.extendRandom+0xe3>
  42fc93:	48 83 ec 38 	subq	$56, %rsp
  42fc97:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  42fc9c:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  42fca1:	48 8b 44 24 58 	movq	88(%rsp), %rax
  42fca6:	48 85 c0 	testq	%rax, %rax
  42fca9:	7d 26 	jge	38 <runtime.extendRandom+0x51>
  42fcab:	31 c0 	xorl	%eax, %eax
  42fcad:	eb 22 	jmp	34 <runtime.extendRandom+0x51>
  42fcaf:	88 04 1a 	movb	%al, (%rdx,%rbx)
  42fcb2:	48 ff c6 	incq	%rsi
  42fcb5:	48 ff c3 	incq	%rbx
  42fcb8:	48 c1 e8 08 	shrq	$8, %rax
  42fcbc:	48 83 fe 08 	cmpq	$8, %rsi
  42fcc0:	7d 0c 	jge	12 <runtime.extendRandom+0x4e>
  42fcc2:	48 39 cb 	cmpq	%rcx, %rbx
  42fcc5:	7d 07 	jge	7 <runtime.extendRandom+0x4e>
  42fcc7:	72 e6 	jb	-26 <runtime.extendRandom+0x2f>
  42fcc9:	e9 87 00 00 00 	jmp	135 <runtime.extendRandom+0xd5>
  42fcce:	48 89 d8 	movq	%rbx, %rax
  42fcd1:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  42fcd6:	48 39 c8 	cmpq	%rcx, %rax
  42fcd9:	7d 70 	jge	112 <runtime.extendRandom+0xcb>
  42fcdb:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  42fce0:	48 83 f8 10 	cmpq	$16, %rax
  42fce4:	7e 60 	jle	96 <runtime.extendRandom+0xc6>
  42fce6:	ba 10 00 00 00 	movl	$16, %edx
  42fceb:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  42fcf0:	e8 3b 7d 01 00 	callq	97595 <runtime.nanotime>
  42fcf5:	48 8b 44 24 20 	movq	32(%rsp), %rax
  42fcfa:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  42fcff:	48 29 c8 	subq	%rcx, %rax
  42fd02:	48 8b 1c 24 	movq	(%rsp), %rbx
  42fd06:	48 8b 74 24 48 	movq	72(%rsp), %rsi
  42fd0b:	48 39 f0 	cmpq	%rsi, %rax
  42fd0e:	73 4c 	jae	76 <runtime.extendRandom+0xdc>
  42fd10:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  42fd15:	48 01 d0 	addq	%rdx, %rax
  42fd18:	48 89 04 24 	movq	%rax, (%rsp)
  42fd1c:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  42fd21:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  42fd26:	e8 e5 5d fd ff 	callq	-172571 <runtime.memhash>
  42fd2b:	48 8b 44 24 18 	movq	24(%rsp), %rax
  42fd30:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  42fd35:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  42fd3a:	48 8b 5c 24 20 	movq	32(%rsp), %rbx
  42fd3f:	31 f6 	xorl	%esi, %esi
  42fd41:	e9 76 ff ff ff 	jmp	-138 <runtime.extendRandom+0x3c>
  42fd46:	48 89 c2 	movq	%rax, %rdx
  42fd49:	eb a0 	jmp	-96 <runtime.extendRandom+0x6b>
  42fd4b:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  42fd50:	48 83 c4 38 	addq	$56, %rsp
  42fd54:	c3 	retq
  42fd55:	e8 e6 fc fe ff 	callq	-66330 <runtime.panicindex>
  42fd5a:	0f 0b 	ud2
  42fd5c:	e8 df fc fe ff 	callq	-66337 <runtime.panicindex>
  42fd61:	0f 0b 	ud2
  42fd63:	e8 08 48 01 00 	callq	83976 <runtime.morestack_noctxt>
  42fd68:	e9 13 ff ff ff 	jmp	-237 <runtime.extendRandom>
  42fd6d:	cc 	int3
  42fd6e:	cc 	int3
  42fd6f:	cc 	int3

runtime.(*rwmutex).rlock:
  42fd70:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42fd79:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42fd7d:	76 63 	jbe	99 <runtime.(*rwmutex).rlock+0x72>
  42fd7f:	48 83 ec 20 	subq	$32, %rsp
  42fd83:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  42fd88:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  42fd8d:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  42fd96:	48 8b 48 30 	movq	48(%rax), %rcx
  42fd9a:	ff 81 00 01 00 00 	incl	256(%rcx)
  42fda0:	84 00 	testb	%al, (%rax)
  42fda2:	b8 01 00 00 00 	movl	$1, %eax
  42fda7:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  42fdac:	f0 	lock
  42fdad:	0f c1 41 28 	xaddl	%eax, 40(%rcx)
  42fdb1:	ff c0 	incl	%eax
  42fdb3:	85 c0 	testl	%eax, %eax
  42fdb5:	7c 0a 	jl	10 <runtime.(*rwmutex).rlock+0x51>
  42fdb7:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  42fdbc:	48 83 c4 20 	addq	$32, %rsp
  42fdc0:	c3 	retq
  42fdc1:	48 8d 05 d8 3d 01 00 	leaq	81368(%rip), %rax
  42fdc8:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  42fdcd:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  42fdd2:	48 8d 44 24 08 	leaq	8(%rsp), %rax
  42fdd7:	48 89 04 24 	movq	%rax, (%rsp)
  42fddb:	e8 40 46 01 00 	callq	83520 <runtime.systemstack>
  42fde0:	eb d5 	jmp	-43 <runtime.(*rwmutex).rlock+0x47>
  42fde2:	e8 89 47 01 00 	callq	83849 <runtime.morestack_noctxt>
  42fde7:	eb 87 	jmp	-121 <runtime.(*rwmutex).rlock>
  42fde9:	cc 	int3
  42fdea:	cc 	int3
  42fdeb:	cc 	int3
  42fdec:	cc 	int3
  42fded:	cc 	int3
  42fdee:	cc 	int3
  42fdef:	cc 	int3

runtime.(*rwmutex).runlock:
  42fdf0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42fdf9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42fdfd:	0f 86 d9 00 00 00 	jbe	217 <runtime.(*rwmutex).runlock+0xec>
  42fe03:	48 83 ec 18 	subq	$24, %rsp
  42fe07:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  42fe0c:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  42fe11:	b8 ff ff ff ff 	movl	$4294967295, %eax
  42fe16:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  42fe1b:	f0 	lock
  42fe1c:	0f c1 41 28 	xaddl	%eax, 40(%rcx)
  42fe20:	ff c8 	decl	%eax
  42fe22:	85 c0 	testl	%eax, %eax
  42fe24:	7d 24 	jge	36 <runtime.(*rwmutex).runlock+0x5a>
  42fe26:	83 f8 ff 	cmpl	$-1, %eax
  42fe29:	0f 84 92 00 00 00 	je	146 <runtime.(*rwmutex).runlock+0xd1>
  42fe2f:	3d ff ff ff bf 	cmpl	$3221225471, %eax
  42fe34:	0f 84 87 00 00 00 	je	135 <runtime.(*rwmutex).runlock+0xd1>
  42fe3a:	b8 ff ff ff ff 	movl	$4294967295, %eax
  42fe3f:	f0 	lock
  42fe40:	0f c1 41 2c 	xaddl	%eax, 44(%rcx)
  42fe44:	ff c8 	decl	%eax
  42fe46:	85 c0 	testl	%eax, %eax
  42fe48:	74 3e 	je	62 <runtime.(*rwmutex).runlock+0x98>
  42fe4a:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  42fe53:	48 8b 48 30 	movq	48(%rax), %rcx
  42fe57:	8b 91 00 01 00 00 	movl	256(%rcx), %edx
  42fe5d:	8d 5a ff 	leal	-1(%rdx), %ebx
  42fe60:	89 99 00 01 00 00 	movl	%ebx, 256(%rcx)
  42fe66:	83 fa 01 	cmpl	$1, %edx
  42fe69:	75 13 	jne	19 <runtime.(*rwmutex).runlock+0x8e>
  42fe6b:	0f b6 88 c0 00 00 00 	movzbl	192(%rax), %ecx
  42fe72:	84 c9 	testb	%cl, %cl
  42fe74:	74 08 	je	8 <runtime.(*rwmutex).runlock+0x8e>
  42fe76:	48 c7 40 10 de fa ff ff 	movq	$-1314, 16(%rax)
  42fe7e:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  42fe83:	48 83 c4 18 	addq	$24, %rsp
  42fe87:	c3 	retq
  42fe88:	48 89 0c 24 	movq	%rcx, (%rsp)
  42fe8c:	e8 8f 96 fd ff 	callq	-158065 <runtime.lock>
  42fe91:	48 8b 44 24 20 	movq	32(%rsp), %rax
  42fe96:	48 8b 48 20 	movq	32(%rax), %rcx
  42fe9a:	48 85 c9 	testq	%rcx, %rcx
  42fe9d:	75 0b 	jne	11 <runtime.(*rwmutex).runlock+0xba>
  42fe9f:	48 89 04 24 	movq	%rax, (%rsp)
  42fea3:	e8 18 98 fd ff 	callq	-157672 <runtime.unlock>
  42fea8:	eb a0 	jmp	-96 <runtime.(*rwmutex).runlock+0x5a>
  42feaa:	48 8d 81 48 01 00 00 	leaq	328(%rcx), %rax
  42feb1:	48 89 04 24 	movq	%rax, (%rsp)
  42feb5:	e8 d6 98 fd ff 	callq	-157482 <runtime.notewakeup>
  42feba:	48 8b 44 24 20 	movq	32(%rsp), %rax
  42febf:	eb de 	jmp	-34 <runtime.(*rwmutex).runlock+0xaf>
  42fec1:	48 8d 05 76 bf 03 00 	leaq	245622(%rip), %rax
  42fec8:	48 89 04 24 	movq	%rax, (%rsp)
  42fecc:	48 c7 44 24 08 1b 00 00 00 	movq	$27, 8(%rsp)
  42fed5:	e8 f6 12 ff ff 	callq	-60682 <runtime.throw>
  42feda:	0f 0b 	ud2
  42fedc:	e8 8f 46 01 00 	callq	83599 <runtime.morestack_noctxt>
  42fee1:	e9 0a ff ff ff 	jmp	-246 <runtime.(*rwmutex).runlock>
  42fee6:	cc 	int3
  42fee7:	cc 	int3
  42fee8:	cc 	int3
  42fee9:	cc 	int3
  42feea:	cc 	int3
  42feeb:	cc 	int3
  42feec:	cc 	int3
  42feed:	cc 	int3
  42feee:	cc 	int3
  42feef:	cc 	int3

runtime.readyWithTime:
  42fef0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42fef9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42fefd:	76 53 	jbe	83 <runtime.readyWithTime+0x62>
  42feff:	48 83 ec 18 	subq	$24, %rsp
  42ff03:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  42ff08:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  42ff0d:	48 8b 44 24 20 	movq	32(%rsp), %rax
  42ff12:	48 8b 48 30 	movq	48(%rax), %rcx
  42ff16:	48 85 c9 	testq	%rcx, %rcx
  42ff19:	75 20 	jne	32 <runtime.readyWithTime+0x4b>
  42ff1b:	48 8b 00 	movq	(%rax), %rax
  42ff1e:	48 89 04 24 	movq	%rax, (%rsp)
  42ff22:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42ff27:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  42ff2c:	e8 9f 30 ff ff 	callq	-53089 <runtime.goready>
  42ff31:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  42ff36:	48 83 c4 18 	addq	$24, %rsp
  42ff3a:	c3 	retq
  42ff3b:	e8 b0 5d 01 00 	callq	89520 <runtime.cputicks>
  42ff40:	48 8b 04 24 	movq	(%rsp), %rax
  42ff44:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  42ff49:	48 89 41 30 	movq	%rax, 48(%rcx)
  42ff4d:	48 89 c8 	movq	%rcx, %rax
  42ff50:	eb c9 	jmp	-55 <runtime.readyWithTime+0x2b>
  42ff52:	e8 19 46 01 00 	callq	83481 <runtime.morestack_noctxt>
  42ff57:	eb 97 	jmp	-105 <runtime.readyWithTime>
  42ff59:	cc 	int3
  42ff5a:	cc 	int3
  42ff5b:	cc 	int3
  42ff5c:	cc 	int3
  42ff5d:	cc 	int3
  42ff5e:	cc 	int3
  42ff5f:	cc 	int3

runtime.semacquire:
  42ff60:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42ff69:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42ff6d:	76 34 	jbe	52 <runtime.semacquire+0x43>
  42ff6f:	48 83 ec 20 	subq	$32, %rsp
  42ff73:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  42ff78:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  42ff7d:	48 8b 44 24 28 	movq	40(%rsp), %rax
  42ff82:	48 89 04 24 	movq	%rax, (%rsp)
  42ff86:	c6 44 24 08 00 	movb	$0, 8(%rsp)
  42ff8b:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  42ff94:	e8 17 00 00 00 	callq	23 <runtime.semacquire1>
  42ff99:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  42ff9e:	48 83 c4 20 	addq	$32, %rsp
  42ffa2:	c3 	retq
  42ffa3:	e8 c8 45 01 00 	callq	83400 <runtime.morestack_noctxt>
  42ffa8:	eb b6 	jmp	-74 <runtime.semacquire>
  42ffaa:	cc 	int3
  42ffab:	cc 	int3
  42ffac:	cc 	int3
  42ffad:	cc 	int3
  42ffae:	cc 	int3
  42ffaf:	cc 	int3

runtime.semacquire1:
  42ffb0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  42ffb9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  42ffbd:	0f 86 be 02 00 00 	jbe	702 <runtime.semacquire1+0x2d1>
  42ffc3:	48 83 ec 68 	subq	$104, %rsp
  42ffc7:	48 89 6c 24 60 	movq	%rbp, 96(%rsp)
  42ffcc:	48 8d 6c 24 60 	leaq	96(%rsp), %rbp
  42ffd1:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  42ffda:	48 8b 48 30 	movq	48(%rax), %rcx
  42ffde:	48 8b 89 c0 00 00 00 	movq	192(%rcx), %rcx
  42ffe5:	48 39 c8 	cmpq	%rcx, %rax
  42ffe8:	0f 85 78 02 00 00 	jne	632 <runtime.semacquire1+0x2b6>
  42ffee:	48 8b 44 24 70 	movq	112(%rsp), %rax
  42fff3:	48 89 04 24 	movq	%rax, (%rsp)
  42fff7:	e8 b4 04 00 00 	callq	1204 <runtime.cansemacquire>
  42fffc:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  430001:	84 c0 	testb	%al, %al
  430003:	0f 85 53 02 00 00 	jne	595 <runtime.semacquire1+0x2ac>
  430009:	e8 22 30 ff ff 	callq	-53214 <runtime.acquireSudog>
  43000e:	48 8b 04 24 	movq	(%rsp), %rax
  430012:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  430017:	48 8b 4c 24 70 	movq	112(%rsp), %rcx
  43001c:	48 89 ca 	movq	%rcx, %rdx
  43001f:	48 c7 40 30 00 00 00 00 	movq	$0, 48(%rax)
  430027:	48 c7 40 28 00 00 00 00 	movq	$0, 40(%rax)
  43002f:	c7 40 38 00 00 00 00 	movl	$0, 56(%rax)
  430036:	48 c1 e9 03 	shrq	$3, %rcx
  43003a:	48 89 c3 	movq	%rax, %rbx
  43003d:	48 b8 47 41 40 73 7d 7f 19 05 	movabsq	$367465021388636487, %rax
  430047:	48 89 d6 	movq	%rdx, %rsi
  43004a:	48 f7 e1 	mulq	%rcx
  43004d:	48 01 ca 	addq	%rcx, %rdx
  430050:	48 d1 da 	rcrq	%rdx
  430053:	48 c1 ea 07 	shrq	$7, %rdx
  430057:	48 69 d2 fb 00 00 00 	imulq	$251, %rdx, %rdx
  43005e:	48 29 d1 	subq	%rdx, %rcx
  430061:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  430066:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  43006e:	0f ba e0 00 	btl	$0, %eax
  430072:	0f 83 dd 01 00 00 	jae	477 <runtime.semacquire1+0x2a5>
  430078:	48 8b 15 a9 38 09 00 	movq	604329(%rip), %rdx
  43007f:	48 85 d2 	testq	%rdx, %rdx
  430082:	0f 87 a0 01 00 00 	ja	416 <runtime.semacquire1+0x278>
  430088:	31 d2 	xorl	%edx, %edx
  43008a:	0f ba e0 01 	btl	$1, %eax
  43008e:	73 19 	jae	25 <runtime.semacquire1+0xf9>
  430090:	48 8b 05 f9 38 09 00 	movq	604409(%rip), %rax
  430097:	48 85 c0 	testq	%rax, %rax
  43009a:	76 0d 	jbe	13 <runtime.semacquire1+0xf9>
  43009c:	48 85 d2 	testq	%rdx, %rdx
  43009f:	0f 84 66 01 00 00 	je	358 <runtime.semacquire1+0x25b>
  4300a5:	48 89 53 28 	movq	%rdx, 40(%rbx)
  4300a9:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  4300ae:	48 c1 e1 06 	shlq	$6, %rcx
  4300b2:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  4300b7:	48 8d 05 42 f8 07 00 	leaq	522306(%rip), %rax
  4300be:	48 8d 3c 08 	leaq	(%rax,%rcx), %rdi
  4300c2:	48 89 7c 24 48 	movq	%rdi, 72(%rsp)
  4300c7:	eb 11 	jmp	17 <runtime.semacquire1+0x12a>
  4300c9:	48 8d 05 30 f8 07 00 	leaq	522288(%rip), %rax
  4300d0:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4300d5:	48 8b 7c 24 48 	movq	72(%rsp), %rdi
  4300da:	84 07 	testb	%al, (%rdi)
  4300dc:	48 8d 14 08 	leaq	(%rax,%rcx), %rdx
  4300e0:	48 89 54 24 58 	movq	%rdx, 88(%rsp)
  4300e5:	48 89 14 24 	movq	%rdx, (%rsp)
  4300e9:	e8 32 94 fd ff 	callq	-158670 <runtime.lock>
  4300ee:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4300f3:	48 8d 0d 06 f8 07 00 	leaq	522246(%rip), %rcx
  4300fa:	48 8d 54 01 10 	leaq	16(%rcx,%rax), %rdx
  4300ff:	48 89 54 24 50 	movq	%rdx, 80(%rsp)
  430104:	bb 01 00 00 00 	movl	$1, %ebx
  430109:	f0 	lock
  43010a:	0f c1 1a 	xaddl	%ebx, (%rdx)
  43010d:	48 8b 5c 24 70 	movq	112(%rsp), %rbx
  430112:	48 89 1c 24 	movq	%rbx, (%rsp)
  430116:	e8 95 03 00 00 	callq	917 <runtime.cansemacquire>
  43011b:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  430120:	84 c0 	testb	%al, %al
  430122:	0f 85 c5 00 00 00 	jne	197 <runtime.semacquire1+0x23d>
  430128:	48 8b 44 24 48 	movq	72(%rsp), %rax
  43012d:	48 89 04 24 	movq	%rax, (%rsp)
  430131:	48 8b 4c 24 70 	movq	112(%rsp), %rcx
  430136:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  43013b:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  430140:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  430145:	0f b6 5c 24 78 	movzbl	120(%rsp), %ebx
  43014a:	88 5c 24 18 	movb	%bl, 24(%rsp)
  43014e:	e8 8d 03 00 00 	callq	909 <runtime.(*semaRoot).queue>
  430153:	48 8b 44 24 58 	movq	88(%rsp), %rax
  430158:	48 89 04 24 	movq	%rax, (%rsp)
  43015c:	48 8d 05 0d a2 03 00 	leaq	238093(%rip), %rax
  430163:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  430168:	48 c7 44 24 10 0a 00 00 00 	movq	$10, 16(%rsp)
  430171:	c6 44 24 18 19 	movb	$25, 24(%rsp)
  430176:	48 c7 44 24 20 04 00 00 00 	movq	$4, 32(%rsp)
  43017f:	e8 dc 2d ff ff 	callq	-53796 <runtime.goparkunlock>
  430184:	48 8b 44 24 40 	movq	64(%rsp), %rax
  430189:	8b 48 38 	movl	56(%rax), %ecx
  43018c:	85 c9 	testl	%ecx, %ecx
  43018e:	75 1b 	jne	27 <runtime.semacquire1+0x1fb>
  430190:	48 8b 44 24 70 	movq	112(%rsp), %rax
  430195:	48 89 04 24 	movq	%rax, (%rsp)
  430199:	e8 12 03 00 00 	callq	786 <runtime.cansemacquire>
  43019e:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  4301a3:	84 c0 	testb	%al, %al
  4301a5:	0f 84 1e ff ff ff 	je	-226 <runtime.semacquire1+0x119>
  4301ab:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4301b0:	48 8b 48 30 	movq	48(%rax), %rcx
  4301b4:	48 85 c9 	testq	%rcx, %rcx
  4301b7:	7f 13 	jg	19 <runtime.semacquire1+0x21c>
  4301b9:	48 89 04 24 	movq	%rax, (%rsp)
  4301bd:	e8 fe 31 ff ff 	callq	-52738 <runtime.releaseSudog>
  4301c2:	48 8b 6c 24 60 	movq	96(%rsp), %rbp
  4301c7:	48 83 c4 68 	addq	$104, %rsp
  4301cb:	c3 	retq
  4301cc:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4301d1:	48 29 c1 	subq	%rax, %rcx
  4301d4:	48 89 0c 24 	movq	%rcx, (%rsp)
  4301d8:	48 c7 44 24 08 03 00 00 00 	movq	$3, 8(%rsp)
  4301e1:	e8 0a d6 fe ff 	callq	-76278 <runtime.blockevent>
  4301e6:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4301eb:	eb cc 	jmp	-52 <runtime.semacquire1+0x209>
  4301ed:	b8 ff ff ff ff 	movl	$4294967295, %eax
  4301f2:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  4301f7:	f0 	lock
  4301f8:	0f c1 01 	xaddl	%eax, (%rcx)
  4301fb:	48 8b 44 24 58 	movq	88(%rsp), %rax
  430200:	48 89 04 24 	movq	%rax, (%rsp)
  430204:	e8 b7 94 fd ff 	callq	-158537 <runtime.unlock>
  430209:	eb a0 	jmp	-96 <runtime.semacquire1+0x1fb>
  43020b:	e8 e0 5a 01 00 	callq	88800 <runtime.cputicks>
  430210:	48 8b 14 24 	movq	(%rsp), %rdx
  430214:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  430219:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  43021e:	48 8b 74 24 70 	movq	112(%rsp), %rsi
  430223:	e9 7d fe ff ff 	jmp	-387 <runtime.semacquire1+0xf5>
  430228:	e8 c3 5a 01 00 	callq	88771 <runtime.cputicks>
  43022d:	48 8b 14 24 	movq	(%rsp), %rdx
  430231:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  430236:	48 c7 43 30 ff ff ff ff 	movq	$-1, 48(%rbx)
  43023e:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  430246:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  43024b:	48 8b 74 24 70 	movq	112(%rsp), %rsi
  430250:	e9 35 fe ff ff 	jmp	-459 <runtime.semacquire1+0xda>
  430255:	31 d2 	xorl	%edx, %edx
  430257:	e9 2e fe ff ff 	jmp	-466 <runtime.semacquire1+0xda>
  43025c:	48 8b 6c 24 60 	movq	96(%rsp), %rbp
  430261:	48 83 c4 68 	addq	$104, %rsp
  430265:	c3 	retq
  430266:	48 8d 05 2f c1 03 00 	leaq	246063(%rip), %rax
  43026d:	48 89 04 24 	movq	%rax, (%rsp)
  430271:	48 c7 44 24 08 1d 00 00 00 	movq	$29, 8(%rsp)
  43027a:	e8 51 0f ff ff 	callq	-61615 <runtime.throw>
  43027f:	0f 0b 	ud2
  430281:	e8 ea 42 01 00 	callq	82666 <runtime.morestack_noctxt>
  430286:	e9 25 fd ff ff 	jmp	-731 <runtime.semacquire1>
  43028b:	cc 	int3
  43028c:	cc 	int3
  43028d:	cc 	int3
  43028e:	cc 	int3
  43028f:	cc 	int3

runtime.semrelease:
  430290:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  430299:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43029d:	76 2b 	jbe	43 <runtime.semrelease+0x3a>
  43029f:	48 83 ec 18 	subq	$24, %rsp
  4302a3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  4302a8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  4302ad:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4302b2:	48 89 04 24 	movq	%rax, (%rsp)
  4302b6:	c6 44 24 08 00 	movb	$0, 8(%rsp)
  4302bb:	e8 20 00 00 00 	callq	32 <runtime.semrelease1>
  4302c0:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  4302c5:	48 83 c4 18 	addq	$24, %rsp
  4302c9:	c3 	retq
  4302ca:	e8 a1 42 01 00 	callq	82593 <runtime.morestack_noctxt>
  4302cf:	eb bf 	jmp	-65 <runtime.semrelease>
  4302d1:	cc 	int3
  4302d2:	cc 	int3
  4302d3:	cc 	int3
  4302d4:	cc 	int3
  4302d5:	cc 	int3
  4302d6:	cc 	int3
  4302d7:	cc 	int3
  4302d8:	cc 	int3
  4302d9:	cc 	int3
  4302da:	cc 	int3
  4302db:	cc 	int3
  4302dc:	cc 	int3
  4302dd:	cc 	int3
  4302de:	cc 	int3
  4302df:	cc 	int3

runtime.semrelease1:
  4302e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4302e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4302ed:	0f 86 ae 01 00 00 	jbe	430 <runtime.semrelease1+0x1c1>
  4302f3:	48 83 ec 50 	subq	$80, %rsp
  4302f7:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  4302fc:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  430301:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  430306:	48 89 ca 	movq	%rcx, %rdx
  430309:	bb 01 00 00 00 	movl	$1, %ebx
  43030e:	f0 	lock
  43030f:	0f c1 1a 	xaddl	%ebx, (%rdx)
  430312:	48 c1 e9 03 	shrq	$3, %rcx
  430316:	48 b8 47 41 40 73 7d 7f 19 05 	movabsq	$367465021388636487, %rax
  430320:	48 f7 e1 	mulq	%rcx
  430323:	48 01 ca 	addq	%rcx, %rdx
  430326:	48 d1 da 	rcrq	%rdx
  430329:	48 c1 ea 07 	shrq	$7, %rdx
  43032d:	48 69 d2 fb 00 00 00 	imulq	$251, %rdx, %rdx
  430334:	48 29 d1 	subq	%rdx, %rcx
  430337:	48 c1 e1 06 	shlq	$6, %rcx
  43033b:	48 8d 15 be f5 07 00 	leaq	521662(%rip), %rdx
  430342:	48 8d 34 0a 	leaq	(%rdx,%rcx), %rsi
  430346:	84 06 	testb	%al, (%rsi)
  430348:	48 8d 3c 0a 	leaq	(%rdx,%rcx), %rdi
  43034c:	8b 7f 10 	movl	16(%rdi), %edi
  43034f:	4c 8d 44 0a 10 	leaq	16(%rdx,%rcx), %r8
  430354:	85 ff 	testl	%edi, %edi
  430356:	0f 84 20 01 00 00 	je	288 <runtime.semrelease1+0x19c>
  43035c:	48 89 74 24 30 	movq	%rsi, 48(%rsp)
  430361:	4c 89 44 24 40 	movq	%r8, 64(%rsp)
  430366:	48 8d 04 0a 	leaq	(%rdx,%rcx), %rax
  43036a:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  43036f:	48 89 04 24 	movq	%rax, (%rsp)
  430373:	e8 a8 91 fd ff 	callq	-159320 <runtime.lock>
  430378:	48 8b 44 24 40 	movq	64(%rsp), %rax
  43037d:	8b 08 	movl	(%rax), %ecx
  43037f:	85 c9 	testl	%ecx, %ecx
  430381:	0f 84 dd 00 00 00 	je	221 <runtime.semrelease1+0x184>
  430387:	48 8b 44 24 30 	movq	48(%rsp), %rax
  43038c:	48 89 04 24 	movq	%rax, (%rsp)
  430390:	48 8b 44 24 58 	movq	88(%rsp), %rax
  430395:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43039a:	e8 d1 05 00 00 	callq	1489 <runtime.(*semaRoot).dequeue>
  43039f:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4303a4:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  4303a9:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  4303ae:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  4303b3:	48 85 c0 	testq	%rax, %rax
  4303b6:	74 0e 	je	14 <runtime.semrelease1+0xe6>
  4303b8:	ba ff ff ff ff 	movl	$4294967295, %edx
  4303bd:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  4303c2:	f0 	lock
  4303c3:	0f c1 13 	xaddl	%edx, (%rbx)
  4303c6:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4303cb:	48 89 04 24 	movq	%rax, (%rsp)
  4303cf:	e8 ec 92 fd ff 	callq	-158996 <runtime.unlock>
  4303d4:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4303d9:	48 85 c0 	testq	%rax, %rax
  4303dc:	74 2f 	je	47 <runtime.semrelease1+0x12d>
  4303de:	48 8b 48 28 	movq	40(%rax), %rcx
  4303e2:	48 85 c9 	testq	%rcx, %rcx
  4303e5:	75 5c 	jne	92 <runtime.semrelease1+0x163>
  4303e7:	8b 48 38 	movl	56(%rax), %ecx
  4303ea:	85 c9 	testl	%ecx, %ecx
  4303ec:	0f 85 94 00 00 00 	jne	148 <runtime.semrelease1+0x1a6>
  4303f2:	0f b6 4c 24 60 	movzbl	96(%rsp), %ecx
  4303f7:	84 c9 	testb	%cl, %cl
  4303f9:	75 1c 	jne	28 <runtime.semrelease1+0x137>
  4303fb:	48 89 04 24 	movq	%rax, (%rsp)
  4303ff:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  430408:	e8 e3 fa ff ff 	callq	-1309 <runtime.readyWithTime>
  43040d:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  430412:	48 83 c4 50 	addq	$80, %rsp
  430416:	c3 	retq
  430417:	48 8b 44 24 58 	movq	88(%rsp), %rax
  43041c:	48 89 04 24 	movq	%rax, (%rsp)
  430420:	e8 8b 00 00 00 	callq	139 <runtime.cansemacquire>
  430425:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  43042a:	84 c0 	testb	%al, %al
  43042c:	74 0e 	je	14 <runtime.semrelease1+0x15c>
  43042e:	48 8b 44 24 28 	movq	40(%rsp), %rax
  430433:	c7 40 38 01 00 00 00 	movl	$1, 56(%rax)
  43043a:	eb bf 	jmp	-65 <runtime.semrelease1+0x11b>
  43043c:	48 8b 44 24 28 	movq	40(%rsp), %rax
  430441:	eb b8 	jmp	-72 <runtime.semrelease1+0x11b>
  430443:	48 8b 44 24 20 	movq	32(%rsp), %rax
  430448:	48 29 c8 	subq	%rcx, %rax
  43044b:	48 89 04 24 	movq	%rax, (%rsp)
  43044f:	48 c7 44 24 08 03 00 00 00 	movq	$3, 8(%rsp)
  430458:	e8 53 d6 fe ff 	callq	-76205 <sync.event>
  43045d:	48 8b 44 24 28 	movq	40(%rsp), %rax
  430462:	eb 83 	jmp	-125 <runtime.semrelease1+0x107>
  430464:	48 8b 44 24 38 	movq	56(%rsp), %rax
  430469:	48 89 04 24 	movq	%rax, (%rsp)
  43046d:	e8 4e 92 fd ff 	callq	-159154 <runtime.unlock>
  430472:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  430477:	48 83 c4 50 	addq	$80, %rsp
  43047b:	c3 	retq
  43047c:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  430481:	48 83 c4 50 	addq	$80, %rsp
  430485:	c3 	retq
  430486:	48 8d 05 19 b7 03 00 	leaq	243481(%rip), %rax
  43048d:	48 89 04 24 	movq	%rax, (%rsp)
  430491:	48 c7 44 24 08 1a 00 00 00 	movq	$26, 8(%rsp)
  43049a:	e8 31 0d ff ff 	callq	-62159 <runtime.throw>
  43049f:	0f 0b 	ud2
  4304a1:	e8 ca 40 01 00 	callq	82122 <runtime.morestack_noctxt>
  4304a6:	e9 35 fe ff ff 	jmp	-459 <runtime.semrelease1>
  4304ab:	cc 	int3
  4304ac:	cc 	int3
  4304ad:	cc 	int3
  4304ae:	cc 	int3
  4304af:	cc 	int3

runtime.cansemacquire:
  4304b0:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  4304b5:	8b 11 	movl	(%rcx), %edx
  4304b7:	85 d2 	testl	%edx, %edx
  4304b9:	74 16 	je	22 <runtime.cansemacquire+0x21>
  4304bb:	8d 5a ff 	leal	-1(%rdx), %ebx
  4304be:	89 d0 	movl	%edx, %eax
  4304c0:	f0 	lock
  4304c1:	0f b1 19 	cmpxchgl	%ebx, (%rcx)
  4304c4:	0f 94 c2 	sete	%dl
  4304c7:	84 d2 	testb	%dl, %dl
  4304c9:	74 ea 	je	-22 <runtime.cansemacquire+0x5>
  4304cb:	c6 44 24 10 01 	movb	$1, 16(%rsp)
  4304d0:	c3 	retq
  4304d1:	c6 44 24 10 00 	movb	$0, 16(%rsp)
  4304d6:	c3 	retq
  4304d7:	cc 	int3
  4304d8:	cc 	int3
  4304d9:	cc 	int3
  4304da:	cc 	int3
  4304db:	cc 	int3
  4304dc:	cc 	int3
  4304dd:	cc 	int3
  4304de:	cc 	int3
  4304df:	cc 	int3

runtime.(*semaRoot).queue:
  4304e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4304e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4304ed:	0f 86 6b 04 00 00 	jbe	1131 <runtime.(*semaRoot).queue+0x47e>
  4304f3:	48 83 ec 18 	subq	$24, %rsp
  4304f7:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  4304fc:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  430501:	48 8b 44 24 30 	movq	48(%rsp), %rax
  430506:	84 00 	testb	%al, (%rax)
  430508:	8b 0d 02 35 09 00 	movl	603394(%rip), %ecx
  43050e:	64 48 8b 14 25 f8 ff ff ff 	movq	%fs:-8, %rdx
  430517:	48 8d 58 20 	leaq	32(%rax), %rbx
  43051b:	48 8d 78 10 	leaq	16(%rax), %rdi
  43051f:	48 8d 70 18 	leaq	24(%rax), %rsi
  430523:	85 c9 	testl	%ecx, %ecx
  430525:	0f 85 d1 03 00 00 	jne	977 <runtime.(*semaRoot).queue+0x41c>
  43052b:	48 89 10 	movq	%rdx, (%rax)
  43052e:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  430533:	48 89 48 20 	movq	%rcx, 32(%rax)
  430537:	0f 57 c0 	xorps	%xmm0, %xmm0
  43053a:	0f 11 40 10 	movups	%xmm0, 16(%rax)
  43053e:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  430543:	48 8d 5a 08 	leaq	8(%rdx), %rbx
  430547:	84 03 	testb	%al, (%rbx)
  430549:	4c 8b 42 08 	movq	8(%rdx), %r8
  43054d:	45 31 c9 	xorl	%r9d, %r9d
  430550:	eb 12 	jmp	18 <runtime.(*semaRoot).queue+0x84>
  430552:	4c 8b 11 	movq	(%rcx), %r10
  430555:	4d 89 c1 	movq	%r8, %r9
  430558:	4d 89 d0 	movq	%r10, %r8
  43055b:	49 89 cb 	movq	%rcx, %r11
  43055e:	48 89 d9 	movq	%rbx, %rcx
  430561:	4c 89 db 	movq	%r11, %rbx
  430564:	4d 85 c0 	testq	%r8, %r8
  430567:	0f 84 a1 02 00 00 	je	673 <runtime.(*semaRoot).queue+0x32e>
  43056d:	4d 8b 48 20 	movq	32(%r8), %r9
  430571:	4c 39 c9 	cmpq	%r9, %rcx
  430574:	74 14 	je	20 <runtime.(*semaRoot).queue+0xaa>
  430576:	48 89 cb 	movq	%rcx, %rbx
  430579:	4c 39 c9 	cmpq	%r9, %rcx
  43057c:	73 06 	jae	6 <runtime.(*semaRoot).queue+0xa4>
  43057e:	49 8d 48 18 	leaq	24(%r8), %rcx
  430582:	eb ce 	jmp	-50 <runtime.(*semaRoot).queue+0x72>
  430584:	49 8d 48 10 	leaq	16(%r8), %rcx
  430588:	eb c8 	jmp	-56 <runtime.(*semaRoot).queue+0x72>
  43058a:	0f b6 4c 24 38 	movzbl	56(%rsp), %ecx
  43058f:	84 c9 	testb	%cl, %cl
  430591:	0f 84 f1 01 00 00 	je	497 <runtime.(*semaRoot).queue+0x2a8>
  430597:	84 03 	testb	%al, (%rbx)
  430599:	8b 0d 71 34 09 00 	movl	603249(%rip), %ecx
  43059f:	85 c9 	testl	%ecx, %ecx
  4305a1:	0f 85 ce 01 00 00 	jne	462 <runtime.(*semaRoot).queue+0x295>
  4305a7:	48 89 03 	movq	%rax, (%rbx)
  4305aa:	41 8b 48 38 	movl	56(%r8), %ecx
  4305ae:	89 48 38 	movl	%ecx, 56(%rax)
  4305b1:	49 8b 48 28 	movq	40(%r8), %rcx
  4305b5:	48 89 48 28 	movq	%rcx, 40(%rax)
  4305b9:	8b 0d 51 34 09 00 	movl	603217(%rip), %ecx
  4305bf:	48 8d 50 40 	leaq	64(%rax), %rdx
  4305c3:	49 8b 58 40 	movq	64(%r8), %rbx
  4305c7:	4d 8d 48 40 	leaq	64(%r8), %r9
  4305cb:	85 c9 	testl	%ecx, %ecx
  4305cd:	0f 85 86 01 00 00 	jne	390 <runtime.(*semaRoot).queue+0x279>
  4305d3:	48 89 58 40 	movq	%rbx, 64(%rax)
  4305d7:	8b 0d 33 34 09 00 	movl	603187(%rip), %ecx
  4305dd:	49 8b 50 18 	movq	24(%r8), %rdx
  4305e1:	49 8d 58 18 	leaq	24(%r8), %rbx
  4305e5:	85 c9 	testl	%ecx, %ecx
  4305e7:	0f 85 50 01 00 00 	jne	336 <runtime.(*semaRoot).queue+0x25d>
  4305ed:	48 89 50 18 	movq	%rdx, 24(%rax)
  4305f1:	8b 0d 19 34 09 00 	movl	603161(%rip), %ecx
  4305f7:	49 8b 50 10 	movq	16(%r8), %rdx
  4305fb:	49 8d 70 10 	leaq	16(%r8), %rsi
  4305ff:	85 c9 	testl	%ecx, %ecx
  430601:	0f 85 23 01 00 00 	jne	291 <runtime.(*semaRoot).queue+0x24a>
  430607:	48 89 50 10 	movq	%rdx, 16(%rax)
  43060b:	48 8b 48 18 	movq	24(%rax), %rcx
  43060f:	48 85 c9 	testq	%rcx, %rcx
  430612:	74 16 	je	22 <runtime.(*semaRoot).queue+0x14a>
  430614:	8b 15 f6 33 09 00 	movl	603126(%rip), %edx
  43061a:	48 8d 79 40 	leaq	64(%rcx), %rdi
  43061e:	85 d2 	testl	%edx, %edx
  430620:	0f 85 fa 00 00 00 	jne	250 <runtime.(*semaRoot).queue+0x240>
  430626:	48 89 41 40 	movq	%rax, 64(%rcx)
  43062a:	48 8b 48 10 	movq	16(%rax), %rcx
  43062e:	48 85 c9 	testq	%rcx, %rcx
  430631:	74 16 	je	22 <runtime.(*semaRoot).queue+0x169>
  430633:	8b 15 d7 33 09 00 	movl	603095(%rip), %edx
  430639:	48 8d 79 40 	leaq	64(%rcx), %rdi
  43063d:	85 d2 	testl	%edx, %edx
  43063f:	0f 85 d1 00 00 00 	jne	209 <runtime.(*semaRoot).queue+0x236>
  430645:	48 89 41 40 	movq	%rax, 64(%rcx)
  430649:	8b 0d c1 33 09 00 	movl	603073(%rip), %ecx
  43064f:	48 8d 78 48 	leaq	72(%rax), %rdi
  430653:	85 c9 	testl	%ecx, %ecx
  430655:	0f 85 a8 00 00 00 	jne	168 <runtime.(*semaRoot).queue+0x223>
  43065b:	4c 89 40 48 	movq	%r8, 72(%rax)
  43065f:	8b 0d ab 33 09 00 	movl	603051(%rip), %ecx
  430665:	48 8d 78 50 	leaq	80(%rax), %rdi
  430669:	49 8b 50 50 	movq	80(%r8), %rdx
  43066d:	4d 8d 50 50 	leaq	80(%r8), %r10
  430671:	85 c9 	testl	%ecx, %ecx
  430673:	75 7b 	jne	123 <runtime.(*semaRoot).queue+0x210>
  430675:	48 89 50 50 	movq	%rdx, 80(%rax)
  430679:	48 85 d2 	testq	%rdx, %rdx
  43067c:	74 58 	je	88 <runtime.(*semaRoot).queue+0x1f6>
  43067e:	8b 0d 8c 33 09 00 	movl	603020(%rip), %ecx
  430684:	85 c9 	testl	%ecx, %ecx
  430686:	75 2a 	jne	42 <runtime.(*semaRoot).queue+0x1d2>
  430688:	49 c7 40 40 00 00 00 00 	movq	$0, 64(%r8)
  430690:	49 c7 40 18 00 00 00 00 	movq	$0, 24(%r8)
  430698:	49 c7 40 10 00 00 00 00 	movq	$0, 16(%r8)
  4306a0:	49 c7 40 50 00 00 00 00 	movq	$0, 80(%r8)
  4306a8:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  4306ad:	48 83 c4 18 	addq	$24, %rsp
  4306b1:	c3 	retq
  4306b2:	4c 89 cf 	movq	%r9, %rdi
  4306b5:	31 c0 	xorl	%eax, %eax
  4306b7:	e8 e4 61 01 00 	callq	90596 <runtime.gcWriteBarrier>
  4306bc:	48 89 df 	movq	%rbx, %rdi
  4306bf:	e8 dc 61 01 00 	callq	90588 <runtime.gcWriteBarrier>
  4306c4:	48 89 f7 	movq	%rsi, %rdi
  4306c7:	e8 d4 61 01 00 	callq	90580 <runtime.gcWriteBarrier>
  4306cc:	4c 89 d7 	movq	%r10, %rdi
  4306cf:	e8 cc 61 01 00 	callq	90572 <runtime.gcWriteBarrier>
  4306d4:	eb d2 	jmp	-46 <runtime.(*semaRoot).queue+0x1c8>
  4306d6:	8b 0d 34 33 09 00 	movl	602932(%rip), %ecx
  4306dc:	85 c9 	testl	%ecx, %ecx
  4306de:	75 06 	jne	6 <runtime.(*semaRoot).queue+0x206>
  4306e0:	4c 89 40 50 	movq	%r8, 80(%rax)
  4306e4:	eb 98 	jmp	-104 <runtime.(*semaRoot).queue+0x19e>
  4306e6:	4c 89 c0 	movq	%r8, %rax
  4306e9:	e8 b2 61 01 00 	callq	90546 <runtime.gcWriteBarrier>
  4306ee:	eb 8e 	jmp	-114 <runtime.(*semaRoot).queue+0x19e>
  4306f0:	48 89 c1 	movq	%rax, %rcx
  4306f3:	48 89 d0 	movq	%rdx, %rax
  4306f6:	e8 a5 61 01 00 	callq	90533 <runtime.gcWriteBarrier>
  4306fb:	48 89 c8 	movq	%rcx, %rax
  4306fe:	e9 76 ff ff ff 	jmp	-138 <runtime.(*semaRoot).queue+0x199>
  430703:	48 89 c1 	movq	%rax, %rcx
  430706:	4c 89 c0 	movq	%r8, %rax
  430709:	e8 92 61 01 00 	callq	90514 <runtime.gcWriteBarrier>
  43070e:	48 89 c8 	movq	%rcx, %rax
  430711:	e9 49 ff ff ff 	jmp	-183 <runtime.(*semaRoot).queue+0x17f>
  430716:	e8 85 61 01 00 	callq	90501 <runtime.gcWriteBarrier>
  43071b:	e9 29 ff ff ff 	jmp	-215 <runtime.(*semaRoot).queue+0x169>
  430720:	e8 7b 61 01 00 	callq	90491 <runtime.gcWriteBarrier>
  430725:	e9 00 ff ff ff 	jmp	-256 <runtime.(*semaRoot).queue+0x14a>
  43072a:	48 89 c1 	movq	%rax, %rcx
  43072d:	48 89 d0 	movq	%rdx, %rax
  430730:	e8 6b 61 01 00 	callq	90475 <runtime.gcWriteBarrier>
  430735:	48 89 c8 	movq	%rcx, %rax
  430738:	e9 ce fe ff ff 	jmp	-306 <runtime.(*semaRoot).queue+0x12b>
  43073d:	48 89 f9 	movq	%rdi, %rcx
  430740:	48 89 f7 	movq	%rsi, %rdi
  430743:	49 89 c2 	movq	%rax, %r10
  430746:	48 89 d0 	movq	%rdx, %rax
  430749:	e8 52 61 01 00 	callq	90450 <runtime.gcWriteBarrier>
  43074e:	4c 89 d0 	movq	%r10, %rax
  430751:	48 89 cf 	movq	%rcx, %rdi
  430754:	e9 98 fe ff ff 	jmp	-360 <runtime.(*semaRoot).queue+0x111>
  430759:	48 89 f9 	movq	%rdi, %rcx
  43075c:	48 89 d7 	movq	%rdx, %rdi
  43075f:	49 89 c2 	movq	%rax, %r10
  430762:	48 89 d8 	movq	%rbx, %rax
  430765:	e8 36 61 01 00 	callq	90422 <runtime.gcWriteBarrier>
  43076a:	4c 89 d0 	movq	%r10, %rax
  43076d:	48 89 cf 	movq	%rcx, %rdi
  430770:	e9 62 fe ff ff 	jmp	-414 <runtime.(*semaRoot).queue+0xf7>
  430775:	48 89 f9 	movq	%rdi, %rcx
  430778:	48 89 df 	movq	%rbx, %rdi
  43077b:	e8 20 61 01 00 	callq	90400 <runtime.gcWriteBarrier>
  430780:	48 89 cf 	movq	%rcx, %rdi
  430783:	e9 22 fe ff ff 	jmp	-478 <runtime.(*semaRoot).queue+0xca>
  430788:	49 8b 48 50 	movq	80(%r8), %rcx
  43078c:	49 8d 78 50 	leaq	80(%r8), %rdi
  430790:	48 85 c9 	testq	%rcx, %rcx
  430793:	74 55 	je	85 <runtime.(*semaRoot).queue+0x30a>
  430795:	8b 15 75 32 09 00 	movl	602741(%rip), %edx
  43079b:	48 8d 59 48 	leaq	72(%rcx), %rbx
  43079f:	85 d2 	testl	%edx, %edx
  4307a1:	75 37 	jne	55 <runtime.(*semaRoot).queue+0x2fa>
  4307a3:	48 89 41 48 	movq	%rax, 72(%rcx)
  4307a7:	8b 0d 63 32 09 00 	movl	602723(%rip), %ecx
  4307ad:	48 8d 50 48 	leaq	72(%rax), %rdx
  4307b1:	85 c9 	testl	%ecx, %ecx
  4307b3:	75 11 	jne	17 <runtime.(*semaRoot).queue+0x2e6>
  4307b5:	49 89 40 50 	movq	%rax, 80(%r8)
  4307b9:	48 c7 40 48 00 00 00 00 	movq	$0, 72(%rax)
  4307c1:	e9 e2 fe ff ff 	jmp	-286 <runtime.(*semaRoot).queue+0x1c8>
  4307c6:	e8 d5 60 01 00 	callq	90325 <runtime.gcWriteBarrier>
  4307cb:	48 89 d7 	movq	%rdx, %rdi
  4307ce:	31 c0 	xorl	%eax, %eax
  4307d0:	e8 cb 60 01 00 	callq	90315 <runtime.gcWriteBarrier>
  4307d5:	e9 ce fe ff ff 	jmp	-306 <runtime.(*semaRoot).queue+0x1c8>
  4307da:	48 89 f9 	movq	%rdi, %rcx
  4307dd:	48 89 df 	movq	%rbx, %rdi
  4307e0:	e8 bb 60 01 00 	callq	90299 <runtime.gcWriteBarrier>
  4307e5:	48 89 cf 	movq	%rcx, %rdi
  4307e8:	eb bd 	jmp	-67 <runtime.(*semaRoot).queue+0x2c7>
  4307ea:	8b 0d 20 32 09 00 	movl	602656(%rip), %ecx
  4307f0:	49 8d 50 48 	leaq	72(%r8), %rdx
  4307f4:	85 c9 	testl	%ecx, %ecx
  4307f6:	75 06 	jne	6 <runtime.(*semaRoot).queue+0x31e>
  4307f8:	49 89 40 48 	movq	%rax, 72(%r8)
  4307fc:	eb a9 	jmp	-87 <runtime.(*semaRoot).queue+0x2c7>
  4307fe:	48 89 f9 	movq	%rdi, %rcx
  430801:	48 89 d7 	movq	%rdx, %rdi
  430804:	e8 97 60 01 00 	callq	90263 <runtime.gcWriteBarrier>
  430809:	48 89 cf 	movq	%rcx, %rdi
  43080c:	eb 99 	jmp	-103 <runtime.(*semaRoot).queue+0x2c7>
  43080e:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  430817:	48 8b 49 30 	movq	48(%rcx), %rcx
  43081b:	8b b1 20 01 00 00 	movl	288(%rcx), %esi
  430821:	44 8b 81 24 01 00 00 	movl	292(%rcx), %r8d
  430828:	44 89 81 20 01 00 00 	movl	%r8d, 288(%rcx)
  43082f:	41 89 f2 	movl	%esi, %r10d
  430832:	c1 e6 11 	shll	$17, %esi
  430835:	44 31 d6 	xorl	%r10d, %esi
  430838:	45 89 c2 	movl	%r8d, %r10d
  43083b:	41 31 f0 	xorl	%esi, %r8d
  43083e:	c1 ee 07 	shrl	$7, %esi
  430841:	44 31 c6 	xorl	%r8d, %esi
  430844:	45 89 d0 	movl	%r10d, %r8d
  430847:	41 c1 ea 10 	shrl	$16, %r10d
  43084b:	41 31 f2 	xorl	%esi, %r10d
  43084e:	44 89 91 24 01 00 00 	movl	%r10d, 292(%rcx)
  430855:	43 8d 0c 10 	leal	(%r8,%r10), %ecx
  430859:	83 c9 01 	orl	$1, %ecx
  43085c:	89 48 38 	movl	%ecx, 56(%rax)
  43085f:	8b 0d ab 31 09 00 	movl	602539(%rip), %ecx
  430865:	48 8d 78 40 	leaq	64(%rax), %rdi
  430869:	85 c9 	testl	%ecx, %ecx
  43086b:	75 7c 	jne	124 <runtime.(*semaRoot).queue+0x409>
  43086d:	4c 89 48 40 	movq	%r9, 64(%rax)
  430871:	84 03 	testb	%al, (%rbx)
  430873:	8b 0d 97 31 09 00 	movl	602519(%rip), %ecx
  430879:	85 c9 	testl	%ecx, %ecx
  43087b:	75 62 	jne	98 <runtime.(*semaRoot).queue+0x3ff>
  43087d:	48 89 03 	movq	%rax, (%rbx)
  430880:	eb 0a 	jmp	10 <runtime.(*semaRoot).queue+0x3ac>
  430882:	48 8b 44 24 30 	movq	48(%rsp), %rax
  430887:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  43088c:	48 8b 48 40 	movq	64(%rax), %rcx
  430890:	48 85 c9 	testq	%rcx, %rcx
  430893:	74 40 	je	64 <runtime.(*semaRoot).queue+0x3f5>
  430895:	8b 59 38 	movl	56(%rcx), %ebx
  430898:	8b 70 38 	movl	56(%rax), %esi
  43089b:	39 f3 	cmpl	%esi, %ebx
  43089d:	76 36 	jbe	54 <runtime.(*semaRoot).queue+0x3f5>
  43089f:	48 8b 59 18 	movq	24(%rcx), %rbx
  4308a3:	48 39 d8 	cmpq	%rbx, %rax
  4308a6:	74 1d 	je	29 <runtime.(*semaRoot).queue+0x3e5>
  4308a8:	48 8b 59 10 	movq	16(%rcx), %rbx
  4308ac:	48 39 c3 	cmpq	%rax, %rbx
  4308af:	0f 85 8b 00 00 00 	jne	139 <runtime.(*semaRoot).queue+0x460>
  4308b5:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4308ba:	48 89 14 24 	movq	%rdx, (%rsp)
  4308be:	e8 5d 04 00 00 	callq	1117 <runtime.(*semaRoot).rotateLeft>
  4308c3:	eb bd 	jmp	-67 <runtime.(*semaRoot).queue+0x3a2>
  4308c5:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4308ca:	48 89 14 24 	movq	%rdx, (%rsp)
  4308ce:	e8 8d 06 00 00 	callq	1677 <runtime.(*semaRoot).rotateRight>
  4308d3:	eb ad 	jmp	-83 <runtime.(*semaRoot).queue+0x3a2>
  4308d5:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  4308da:	48 83 c4 18 	addq	$24, %rsp
  4308de:	c3 	retq
  4308df:	48 89 df 	movq	%rbx, %rdi
  4308e2:	e8 b9 5f 01 00 	callq	90041 <runtime.gcWriteBarrier>
  4308e7:	eb a3 	jmp	-93 <runtime.(*semaRoot).queue+0x3ac>
  4308e9:	48 89 c1 	movq	%rax, %rcx
  4308ec:	4c 89 c8 	movq	%r9, %rax
  4308ef:	e8 ac 5f 01 00 	callq	90028 <runtime.gcWriteBarrier>
  4308f4:	48 89 c8 	movq	%rcx, %rax
  4308f7:	e9 75 ff ff ff 	jmp	-139 <runtime.(*semaRoot).queue+0x391>
  4308fc:	48 89 f9 	movq	%rdi, %rcx
  4308ff:	48 89 c7 	movq	%rax, %rdi
  430902:	48 89 d0 	movq	%rdx, %rax
  430905:	e8 96 5f 01 00 	callq	90006 <runtime.gcWriteBarrier>
  43090a:	48 89 f8 	movq	%rdi, %rax
  43090d:	48 89 df 	movq	%rbx, %rdi
  430910:	48 89 c2 	movq	%rax, %rdx
  430913:	48 8b 44 24 28 	movq	40(%rsp), %rax
  430918:	e8 83 5f 01 00 	callq	89987 <runtime.gcWriteBarrier>
  43091d:	48 89 cf 	movq	%rcx, %rdi
  430920:	48 89 c3 	movq	%rax, %rbx
  430923:	31 c0 	xorl	%eax, %eax
  430925:	e8 76 5f 01 00 	callq	89974 <runtime.gcWriteBarrier>
  43092a:	48 89 f7 	movq	%rsi, %rdi
  43092d:	e8 6e 5f 01 00 	callq	89966 <runtime.gcWriteBarrier>
  430932:	48 89 d0 	movq	%rdx, %rax
  430935:	48 89 cf 	movq	%rcx, %rdi
  430938:	48 89 d9 	movq	%rbx, %rcx
  43093b:	e9 fe fb ff ff 	jmp	-1026 <runtime.(*semaRoot).queue+0x5e>
  430940:	48 8d 05 59 6a 02 00 	leaq	158297(%rip), %rax
  430947:	48 89 04 24 	movq	%rax, (%rsp)
  43094b:	48 8d 05 4e 44 04 00 	leaq	279630(%rip), %rax
  430952:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  430957:	e8 d4 00 ff ff 	callq	-65324 <runtime.gopanic>
  43095c:	0f 0b 	ud2
  43095e:	e8 0d 3c 01 00 	callq	80909 <runtime.morestack_noctxt>
  430963:	e9 78 fb ff ff 	jmp	-1160 <runtime.(*semaRoot).queue>
  430968:	cc 	int3
  430969:	cc 	int3
  43096a:	cc 	int3
  43096b:	cc 	int3
  43096c:	cc 	int3
  43096d:	cc 	int3
  43096e:	cc 	int3
  43096f:	cc 	int3

runtime.(*semaRoot).dequeue:
  430970:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  430979:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43097d:	0f 86 91 03 00 00 	jbe	913 <runtime.(*semaRoot).dequeue+0x3a4>
  430983:	48 83 ec 40 	subq	$64, %rsp
  430987:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  43098c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  430991:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  430996:	48 8d 79 08 	leaq	8(%rcx), %rdi
  43099a:	84 07 	testb	%al, (%rdi)
  43099c:	48 8b 51 08 	movq	8(%rcx), %rdx
  4309a0:	48 8b 5c 24 50 	movq	80(%rsp), %rbx
  4309a5:	48 89 f8 	movq	%rdi, %rax
  4309a8:	eb 0c 	jmp	12 <runtime.(*semaRoot).dequeue+0x46>
  4309aa:	48 8b 32 	movq	(%rdx), %rsi
  4309ad:	4c 89 c3 	movq	%r8, %rbx
  4309b0:	48 89 d7 	movq	%rdx, %rdi
  4309b3:	48 89 f2 	movq	%rsi, %rdx
  4309b6:	48 85 d2 	testq	%rdx, %rdx
  4309b9:	0f 84 39 03 00 00 	je	825 <runtime.(*semaRoot).dequeue+0x388>
  4309bf:	48 8b 72 20 	movq	32(%rdx), %rsi
  4309c3:	4c 8d 42 20 	leaq	32(%rdx), %r8
  4309c7:	48 39 f3 	cmpq	%rsi, %rbx
  4309ca:	74 14 	je	20 <runtime.(*semaRoot).dequeue+0x70>
  4309cc:	49 89 d8 	movq	%rbx, %r8
  4309cf:	48 39 f3 	cmpq	%rsi, %rbx
  4309d2:	73 06 	jae	6 <runtime.(*semaRoot).dequeue+0x6a>
  4309d4:	48 83 c2 18 	addq	$24, %rdx
  4309d8:	eb d0 	jmp	-48 <runtime.(*semaRoot).dequeue+0x3a>
  4309da:	48 83 c2 10 	addq	$16, %rdx
  4309de:	eb ca 	jmp	-54 <runtime.(*semaRoot).dequeue+0x3a>
  4309e0:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  4309e5:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  4309ea:	4c 89 44 24 28 	movq	%r8, 40(%rsp)
  4309ef:	48 8b 5a 28 	movq	40(%rdx), %rbx
  4309f3:	48 85 db 	testq	%rbx, %rbx
  4309f6:	0f 85 d0 02 00 00 	jne	720 <runtime.(*semaRoot).dequeue+0x35c>
  4309fc:	31 db 	xorl	%ebx, %ebx
  4309fe:	48 8b 72 48 	movq	72(%rdx), %rsi
  430a02:	4c 8d 4a 48 	leaq	72(%rdx), %r9
  430a06:	48 85 f6 	testq	%rsi, %rsi
  430a09:	0f 85 5f 01 00 00 	jne	351 <runtime.(*semaRoot).dequeue+0x1fe>
  430a0f:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  430a14:	eb 19 	jmp	25 <runtime.(*semaRoot).dequeue+0xbf>
  430a16:	48 8b 44 24 30 	movq	48(%rsp), %rax
  430a1b:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  430a20:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  430a25:	48 8b 5c 24 10 	movq	16(%rsp), %rbx
  430a2a:	4c 8b 44 24 28 	movq	40(%rsp), %r8
  430a2f:	48 8b 72 10 	movq	16(%rdx), %rsi
  430a33:	48 85 f6 	testq	%rsi, %rsi
  430a36:	74 35 	je	53 <runtime.(*semaRoot).dequeue+0xfd>
  430a38:	74 13 	je	19 <runtime.(*semaRoot).dequeue+0xdd>
  430a3a:	48 8b 7a 18 	movq	24(%rdx), %rdi
  430a3e:	48 85 ff 	testq	%rdi, %rdi
  430a41:	74 1a 	je	26 <runtime.(*semaRoot).dequeue+0xed>
  430a43:	8b 7f 38 	movl	56(%rdi), %edi
  430a46:	8b 76 38 	movl	56(%rsi), %esi
  430a49:	39 f7 	cmpl	%esi, %edi
  430a4b:	73 10 	jae	16 <runtime.(*semaRoot).dequeue+0xed>
  430a4d:	48 89 0c 24 	movq	%rcx, (%rsp)
  430a51:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  430a56:	e8 05 05 00 00 	callq	1285 <runtime.(*semaRoot).rotateRight>
  430a5b:	eb b9 	jmp	-71 <runtime.(*semaRoot).dequeue+0xa6>
  430a5d:	48 89 0c 24 	movq	%rcx, (%rsp)
  430a61:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  430a66:	e8 b5 02 00 00 	callq	693 <runtime.(*semaRoot).rotateLeft>
  430a6b:	eb a9 	jmp	-87 <runtime.(*semaRoot).dequeue+0xa6>
  430a6d:	4c 8b 4a 18 	movq	24(%rdx), %r9
  430a71:	4d 85 c9 	testq	%r9, %r9
  430a74:	74 05 	je	5 <runtime.(*semaRoot).dequeue+0x10b>
  430a76:	48 85 f6 	testq	%rsi, %rsi
  430a79:	eb bd 	jmp	-67 <runtime.(*semaRoot).dequeue+0xc8>
  430a7b:	48 8b 72 40 	movq	64(%rdx), %rsi
  430a7f:	48 85 f6 	testq	%rsi, %rsi
  430a82:	0f 84 c0 00 00 00 	je	192 <runtime.(*semaRoot).dequeue+0x1d8>
  430a88:	48 8b 4e 18 	movq	24(%rsi), %rcx
  430a8c:	48 8d 7e 18 	leaq	24(%rsi), %rdi
  430a90:	48 39 ca 	cmpq	%rcx, %rdx
  430a93:	0f 85 88 00 00 00 	jne	136 <runtime.(*semaRoot).dequeue+0x1b1>
  430a99:	8b 0d 71 2f 09 00 	movl	601969(%rip), %ecx
  430a9f:	85 c9 	testl	%ecx, %ecx
  430aa1:	75 75 	jne	117 <runtime.(*semaRoot).dequeue+0x1a8>
  430aa3:	48 c7 46 18 00 00 00 00 	movq	$0, 24(%rsi)
  430aab:	8b 0d 5f 2f 09 00 	movl	601951(%rip), %ecx
  430ab1:	48 8d 7a 40 	leaq	64(%rdx), %rdi
  430ab5:	48 8d 72 10 	leaq	16(%rdx), %rsi
  430ab9:	4c 8d 4a 18 	leaq	24(%rdx), %r9
  430abd:	85 c9 	testl	%ecx, %ecx
  430abf:	75 32 	jne	50 <runtime.(*semaRoot).dequeue+0x183>
  430ac1:	48 c7 42 40 00 00 00 00 	movq	$0, 64(%rdx)
  430ac9:	48 c7 42 20 00 00 00 00 	movq	$0, 32(%rdx)
  430ad1:	0f 57 c0 	xorps	%xmm0, %xmm0
  430ad4:	0f 11 42 10 	movups	%xmm0, 16(%rdx)
  430ad8:	c7 42 38 00 00 00 00 	movl	$0, 56(%rdx)
  430adf:	48 89 54 24 58 	movq	%rdx, 88(%rsp)
  430ae4:	48 89 5c 24 60 	movq	%rbx, 96(%rsp)
  430ae9:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  430aee:	48 83 c4 40 	addq	$64, %rsp
  430af2:	c3 	retq
  430af3:	31 c0 	xorl	%eax, %eax
  430af5:	e8 a6 5d 01 00 	callq	89510 <runtime.gcWriteBarrier>
  430afa:	4c 89 c7 	movq	%r8, %rdi
  430afd:	31 c0 	xorl	%eax, %eax
  430aff:	e8 9c 5d 01 00 	callq	89500 <runtime.gcWriteBarrier>
  430b04:	48 89 f7 	movq	%rsi, %rdi
  430b07:	31 c0 	xorl	%eax, %eax
  430b09:	e8 92 5d 01 00 	callq	89490 <runtime.gcWriteBarrier>
  430b0e:	4c 89 cf 	movq	%r9, %rdi
  430b11:	e8 8a 5d 01 00 	callq	89482 <runtime.gcWriteBarrier>
  430b16:	eb c0 	jmp	-64 <runtime.(*semaRoot).dequeue+0x168>
  430b18:	31 c0 	xorl	%eax, %eax
  430b1a:	e8 81 5d 01 00 	callq	89473 <runtime.gcWriteBarrier>
  430b1f:	eb 8a 	jmp	-118 <runtime.(*semaRoot).dequeue+0x13b>
  430b21:	8b 0d e9 2e 09 00 	movl	601833(%rip), %ecx
  430b27:	48 8d 7e 10 	leaq	16(%rsi), %rdi
  430b2b:	85 c9 	testl	%ecx, %ecx
  430b2d:	75 0d 	jne	13 <runtime.(*semaRoot).dequeue+0x1cc>
  430b2f:	48 c7 46 10 00 00 00 00 	movq	$0, 16(%rsi)
  430b37:	e9 6f ff ff ff 	jmp	-145 <runtime.(*semaRoot).dequeue+0x13b>
  430b3c:	31 c0 	xorl	%eax, %eax
  430b3e:	e8 5d 5d 01 00 	callq	89437 <runtime.gcWriteBarrier>
  430b43:	e9 63 ff ff ff 	jmp	-157 <runtime.(*semaRoot).dequeue+0x13b>
  430b48:	8b 35 c2 2e 09 00 	movl	601794(%rip), %esi
  430b4e:	85 f6 	testl	%esi, %esi
  430b50:	75 0d 	jne	13 <runtime.(*semaRoot).dequeue+0x1ef>
  430b52:	48 c7 41 08 00 00 00 00 	movq	$0, 8(%rcx)
  430b5a:	e9 4c ff ff ff 	jmp	-180 <runtime.(*semaRoot).dequeue+0x13b>
  430b5f:	48 89 c7 	movq	%rax, %rdi
  430b62:	31 c0 	xorl	%eax, %eax
  430b64:	e8 37 5d 01 00 	callq	89399 <runtime.gcWriteBarrier>
  430b69:	e9 3d ff ff ff 	jmp	-195 <runtime.(*semaRoot).dequeue+0x13b>
  430b6e:	84 07 	testb	%al, (%rdi)
  430b70:	8b 0d 9a 2e 09 00 	movl	601754(%rip), %ecx
  430b76:	85 c9 	testl	%ecx, %ecx
  430b78:	0f 85 41 01 00 00 	jne	321 <runtime.(*semaRoot).dequeue+0x34f>
  430b7e:	48 89 37 	movq	%rsi, (%rdi)
  430b81:	8b 4a 38 	movl	56(%rdx), %ecx
  430b84:	89 4e 38 	movl	%ecx, 56(%rsi)
  430b87:	8b 0d 83 2e 09 00 	movl	601731(%rip), %ecx
  430b8d:	48 8d 7e 40 	leaq	64(%rsi), %rdi
  430b91:	48 8b 42 40 	movq	64(%rdx), %rax
  430b95:	85 c9 	testl	%ecx, %ecx
  430b97:	0f 85 18 01 00 00 	jne	280 <runtime.(*semaRoot).dequeue+0x345>
  430b9d:	48 89 46 40 	movq	%rax, 64(%rsi)
  430ba1:	8b 0d 69 2e 09 00 	movl	601705(%rip), %ecx
  430ba7:	48 8d 7e 18 	leaq	24(%rsi), %rdi
  430bab:	48 8b 42 18 	movq	24(%rdx), %rax
  430baf:	85 c9 	testl	%ecx, %ecx
  430bb1:	0f 85 f4 00 00 00 	jne	244 <runtime.(*semaRoot).dequeue+0x33b>
  430bb7:	48 89 46 18 	movq	%rax, 24(%rsi)
  430bbb:	48 85 c0 	testq	%rax, %rax
  430bbe:	74 16 	je	22 <runtime.(*semaRoot).dequeue+0x266>
  430bc0:	8b 0d 4a 2e 09 00 	movl	601674(%rip), %ecx
  430bc6:	48 8d 78 40 	leaq	64(%rax), %rdi
  430bca:	85 c9 	testl	%ecx, %ecx
  430bcc:	0f 85 cc 00 00 00 	jne	204 <runtime.(*semaRoot).dequeue+0x32e>
  430bd2:	48 89 70 40 	movq	%rsi, 64(%rax)
  430bd6:	8b 0d 34 2e 09 00 	movl	601652(%rip), %ecx
  430bdc:	48 8d 7e 10 	leaq	16(%rsi), %rdi
  430be0:	48 8b 42 10 	movq	16(%rdx), %rax
  430be4:	85 c9 	testl	%ecx, %ecx
  430be6:	0f 85 a8 00 00 00 	jne	168 <runtime.(*semaRoot).dequeue+0x324>
  430bec:	48 89 46 10 	movq	%rax, 16(%rsi)
  430bf0:	48 85 c0 	testq	%rax, %rax
  430bf3:	74 16 	je	22 <runtime.(*semaRoot).dequeue+0x29b>
  430bf5:	8b 0d 15 2e 09 00 	movl	601621(%rip), %ecx
  430bfb:	48 8d 78 40 	leaq	64(%rax), %rdi
  430bff:	85 c9 	testl	%ecx, %ecx
  430c01:	0f 85 80 00 00 00 	jne	128 <runtime.(*semaRoot).dequeue+0x317>
  430c07:	48 89 70 40 	movq	%rsi, 64(%rax)
  430c0b:	48 8b 4e 48 	movq	72(%rsi), %rcx
  430c0f:	48 85 c9 	testq	%rcx, %rcx
  430c12:	74 52 	je	82 <runtime.(*semaRoot).dequeue+0x2f6>
  430c14:	8b 0d f6 2d 09 00 	movl	601590(%rip), %ecx
  430c1a:	48 8d 7e 50 	leaq	80(%rsi), %rdi
  430c1e:	48 8b 42 50 	movq	80(%rdx), %rax
  430c22:	85 c9 	testl	%ecx, %ecx
  430c24:	75 39 	jne	57 <runtime.(*semaRoot).dequeue+0x2ef>
  430c26:	48 89 46 50 	movq	%rax, 80(%rsi)
  430c2a:	48 89 5e 28 	movq	%rbx, 40(%rsi)
  430c2e:	8b 0d dc 2d 09 00 	movl	601564(%rip), %ecx
  430c34:	48 8d 72 50 	leaq	80(%rdx), %rsi
  430c38:	85 c9 	testl	%ecx, %ecx
  430c3a:	75 0c 	jne	12 <runtime.(*semaRoot).dequeue+0x2d8>
  430c3c:	0f 57 c0 	xorps	%xmm0, %xmm0
  430c3f:	0f 11 42 48 	movups	%xmm0, 72(%rdx)
  430c43:	e9 63 fe ff ff 	jmp	-413 <runtime.(*semaRoot).dequeue+0x13b>
  430c48:	4c 89 cf 	movq	%r9, %rdi
  430c4b:	31 c0 	xorl	%eax, %eax
  430c4d:	e8 4e 5c 01 00 	callq	89166 <runtime.gcWriteBarrier>
  430c52:	48 89 f7 	movq	%rsi, %rdi
  430c55:	e8 46 5c 01 00 	callq	89158 <runtime.gcWriteBarrier>
  430c5a:	e9 4c fe ff ff 	jmp	-436 <runtime.(*semaRoot).dequeue+0x13b>
  430c5f:	e8 3c 5c 01 00 	callq	89148 <runtime.gcWriteBarrier>
  430c64:	eb c4 	jmp	-60 <runtime.(*semaRoot).dequeue+0x2ba>
  430c66:	8b 0d a4 2d 09 00 	movl	601508(%rip), %ecx
  430c6c:	48 8d 7e 50 	leaq	80(%rsi), %rdi
  430c70:	85 c9 	testl	%ecx, %ecx
  430c72:	75 0a 	jne	10 <runtime.(*semaRoot).dequeue+0x30e>
  430c74:	48 c7 46 50 00 00 00 00 	movq	$0, 80(%rsi)
  430c7c:	eb ac 	jmp	-84 <runtime.(*semaRoot).dequeue+0x2ba>
  430c7e:	31 c0 	xorl	%eax, %eax
  430c80:	e8 1b 5c 01 00 	callq	89115 <runtime.gcWriteBarrier>
  430c85:	eb a3 	jmp	-93 <runtime.(*semaRoot).dequeue+0x2ba>
  430c87:	48 89 f0 	movq	%rsi, %rax
  430c8a:	e8 11 5c 01 00 	callq	89105 <runtime.gcWriteBarrier>
  430c8f:	e9 77 ff ff ff 	jmp	-137 <runtime.(*semaRoot).dequeue+0x29b>
  430c94:	e8 07 5c 01 00 	callq	89095 <runtime.gcWriteBarrier>
  430c99:	e9 52 ff ff ff 	jmp	-174 <runtime.(*semaRoot).dequeue+0x280>
  430c9e:	48 89 f0 	movq	%rsi, %rax
  430ca1:	e8 fa 5b 01 00 	callq	89082 <runtime.gcWriteBarrier>
  430ca6:	e9 2b ff ff ff 	jmp	-213 <runtime.(*semaRoot).dequeue+0x266>
  430cab:	e8 f0 5b 01 00 	callq	89072 <runtime.gcWriteBarrier>
  430cb0:	e9 06 ff ff ff 	jmp	-250 <runtime.(*semaRoot).dequeue+0x24b>
  430cb5:	e8 e6 5b 01 00 	callq	89062 <runtime.gcWriteBarrier>
  430cba:	e9 e2 fe ff ff 	jmp	-286 <runtime.(*semaRoot).dequeue+0x231>
  430cbf:	48 89 f0 	movq	%rsi, %rax
  430cc2:	e8 d9 5b 01 00 	callq	89049 <runtime.gcWriteBarrier>
  430cc7:	e9 b5 fe ff ff 	jmp	-331 <runtime.(*semaRoot).dequeue+0x211>
  430ccc:	48 89 7c 24 20 	movq	%rdi, 32(%rsp)
  430cd1:	e8 1a 50 01 00 	callq	86042 <runtime.cputicks>
  430cd6:	48 8b 1c 24 	movq	(%rsp), %rbx
  430cda:	48 8b 44 24 30 	movq	48(%rsp), %rax
  430cdf:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  430ce4:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  430ce9:	48 8b 7c 24 20 	movq	32(%rsp), %rdi
  430cee:	4c 8b 44 24 28 	movq	40(%rsp), %r8
  430cf3:	e9 06 fd ff ff 	jmp	-762 <runtime.(*semaRoot).dequeue+0x8e>
  430cf8:	48 c7 44 24 58 00 00 00 00 	movq	$0, 88(%rsp)
  430d01:	48 c7 44 24 60 00 00 00 00 	movq	$0, 96(%rsp)
  430d0a:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  430d0f:	48 83 c4 40 	addq	$64, %rsp
  430d13:	c3 	retq
  430d14:	e8 57 38 01 00 	callq	79959 <runtime.morestack_noctxt>
  430d19:	e9 52 fc ff ff 	jmp	-942 <runtime.(*semaRoot).dequeue>
  430d1e:	cc 	int3
  430d1f:	cc 	int3

runtime.(*semaRoot).rotateLeft:
  430d20:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  430d29:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  430d2d:	0f 86 1c 02 00 00 	jbe	540 <runtime.(*semaRoot).rotateLeft+0x22f>
  430d33:	48 83 ec 18 	subq	$24, %rsp
  430d37:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  430d3c:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  430d41:	48 8b 44 24 28 	movq	40(%rsp), %rax
  430d46:	48 8b 48 10 	movq	16(%rax), %rcx
  430d4a:	48 8b 50 40 	movq	64(%rax), %rdx
  430d4e:	48 8d 58 40 	leaq	64(%rax), %rbx
  430d52:	48 8b 70 18 	movq	24(%rax), %rsi
  430d56:	48 8d 78 18 	leaq	24(%rax), %rdi
  430d5a:	4c 8d 40 10 	leaq	16(%rax), %r8
  430d5e:	4c 8b 49 18 	movq	24(%rcx), %r9
  430d62:	4c 8d 51 18 	leaq	24(%rcx), %r10
  430d66:	4c 8b 59 10 	movq	16(%rcx), %r11
  430d6a:	4c 8d 61 10 	leaq	16(%rcx), %r12
  430d6e:	44 8b 2d 9b 2c 09 00 	movl	601243(%rip), %r13d
  430d75:	45 85 ed 	testl	%r13d, %r13d
  430d78:	0f 85 87 01 00 00 	jne	391 <runtime.(*semaRoot).rotateLeft+0x1e5>
  430d7e:	48 89 41 18 	movq	%rax, 24(%rcx)
  430d82:	48 89 48 40 	movq	%rcx, 64(%rax)
  430d86:	4c 89 59 10 	movq	%r11, 16(%rcx)
  430d8a:	4d 85 db 	testq	%r11, %r11
  430d8d:	74 16 	je	22 <runtime.(*semaRoot).rotateLeft+0x85>
  430d8f:	8b 1d 7b 2c 09 00 	movl	601211(%rip), %ebx
  430d95:	4d 8d 53 40 	leaq	64(%r11), %r10
  430d99:	85 db 	testl	%ebx, %ebx
  430d9b:	0f 85 48 01 00 00 	jne	328 <runtime.(*semaRoot).rotateLeft+0x1c9>
  430da1:	49 89 4b 40 	movq	%rcx, 64(%r11)
  430da5:	8b 1d 65 2c 09 00 	movl	601189(%rip), %ebx
  430dab:	85 db 	testl	%ebx, %ebx
  430dad:	0f 85 23 01 00 00 	jne	291 <runtime.(*semaRoot).rotateLeft+0x1b6>
  430db3:	48 89 70 18 	movq	%rsi, 24(%rax)
  430db7:	48 85 f6 	testq	%rsi, %rsi
  430dba:	74 16 	je	22 <runtime.(*semaRoot).rotateLeft+0xb2>
  430dbc:	8b 1d 4e 2c 09 00 	movl	601166(%rip), %ebx
  430dc2:	48 8d 7e 40 	leaq	64(%rsi), %rdi
  430dc6:	85 db 	testl	%ebx, %ebx
  430dc8:	0f 85 fe 00 00 00 	jne	254 <runtime.(*semaRoot).rotateLeft+0x1ac>
  430dce:	48 89 46 40 	movq	%rax, 64(%rsi)
  430dd2:	8b 1d 38 2c 09 00 	movl	601144(%rip), %ebx
  430dd8:	85 db 	testl	%ebx, %ebx
  430dda:	0f 85 d6 00 00 00 	jne	214 <runtime.(*semaRoot).rotateLeft+0x196>
  430de0:	4c 89 48 10 	movq	%r9, 16(%rax)
  430de4:	4d 85 c9 	testq	%r9, %r9
  430de7:	74 16 	je	22 <runtime.(*semaRoot).rotateLeft+0xdf>
  430de9:	8b 1d 21 2c 09 00 	movl	601121(%rip), %ebx
  430def:	49 8d 79 40 	leaq	64(%r9), %rdi
  430df3:	85 db 	testl	%ebx, %ebx
  430df5:	0f 85 b1 00 00 00 	jne	177 <runtime.(*semaRoot).rotateLeft+0x18c>
  430dfb:	49 89 41 40 	movq	%rax, 64(%r9)
  430dff:	8b 1d 0b 2c 09 00 	movl	601099(%rip), %ebx
  430e05:	48 8d 79 40 	leaq	64(%rcx), %rdi
  430e09:	85 db 	testl	%ebx, %ebx
  430e0b:	0f 85 88 00 00 00 	jne	136 <runtime.(*semaRoot).rotateLeft+0x179>
  430e11:	48 89 51 40 	movq	%rdx, 64(%rcx)
  430e15:	48 85 d2 	testq	%rdx, %rdx
  430e18:	74 5a 	je	90 <runtime.(*semaRoot).rotateLeft+0x154>
  430e1a:	48 8b 5a 18 	movq	24(%rdx), %rbx
  430e1e:	48 8d 7a 18 	leaq	24(%rdx), %rdi
  430e22:	48 39 c3 	cmpq	%rax, %rbx
  430e25:	75 22 	jne	34 <runtime.(*semaRoot).rotateLeft+0x129>
  430e27:	8b 1d e3 2b 09 00 	movl	601059(%rip), %ebx
  430e2d:	85 db 	testl	%ebx, %ebx
  430e2f:	75 0e 	jne	14 <runtime.(*semaRoot).rotateLeft+0x11f>
  430e31:	48 89 4a 18 	movq	%rcx, 24(%rdx)
  430e35:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  430e3a:	48 83 c4 18 	addq	$24, %rsp
  430e3e:	c3 	retq
  430e3f:	48 89 c8 	movq	%rcx, %rax
  430e42:	e8 59 5a 01 00 	callq	88665 <runtime.gcWriteBarrier>
  430e47:	eb ec 	jmp	-20 <runtime.(*semaRoot).rotateLeft+0x115>
  430e49:	48 8b 5a 10 	movq	16(%rdx), %rbx
  430e4d:	48 8d 7a 10 	leaq	16(%rdx), %rdi
  430e51:	48 39 c3 	cmpq	%rax, %rbx
  430e54:	0f 85 da 00 00 00 	jne	218 <runtime.(*semaRoot).rotateLeft+0x214>
  430e5a:	8b 1d b0 2b 09 00 	movl	601008(%rip), %ebx
  430e60:	85 db 	testl	%ebx, %ebx
  430e62:	75 06 	jne	6 <runtime.(*semaRoot).rotateLeft+0x14a>
  430e64:	48 89 4a 10 	movq	%rcx, 16(%rdx)
  430e68:	eb cb 	jmp	-53 <runtime.(*semaRoot).rotateLeft+0x115>
  430e6a:	48 89 c8 	movq	%rcx, %rax
  430e6d:	e8 2e 5a 01 00 	callq	88622 <runtime.gcWriteBarrier>
  430e72:	eb c1 	jmp	-63 <runtime.(*semaRoot).rotateLeft+0x115>
  430e74:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  430e79:	84 02 	testb	%al, (%rdx)
  430e7b:	8b 1d 8f 2b 09 00 	movl	600975(%rip), %ebx
  430e81:	48 8d 7a 08 	leaq	8(%rdx), %rdi
  430e85:	85 db 	testl	%ebx, %ebx
  430e87:	75 06 	jne	6 <runtime.(*semaRoot).rotateLeft+0x16f>
  430e89:	48 89 4a 08 	movq	%rcx, 8(%rdx)
  430e8d:	eb a6 	jmp	-90 <runtime.(*semaRoot).rotateLeft+0x115>
  430e8f:	48 89 c8 	movq	%rcx, %rax
  430e92:	e8 09 5a 01 00 	callq	88585 <runtime.gcWriteBarrier>
  430e97:	eb 9c 	jmp	-100 <runtime.(*semaRoot).rotateLeft+0x115>
  430e99:	48 89 c3 	movq	%rax, %rbx
  430e9c:	48 89 d0 	movq	%rdx, %rax
  430e9f:	e8 fc 59 01 00 	callq	88572 <runtime.gcWriteBarrier>
  430ea4:	48 89 d8 	movq	%rbx, %rax
  430ea7:	e9 69 ff ff ff 	jmp	-151 <runtime.(*semaRoot).rotateLeft+0xf5>
  430eac:	e8 ef 59 01 00 	callq	88559 <runtime.gcWriteBarrier>
  430eb1:	e9 49 ff ff ff 	jmp	-183 <runtime.(*semaRoot).rotateLeft+0xdf>
  430eb6:	4c 89 c7 	movq	%r8, %rdi
  430eb9:	48 89 c3 	movq	%rax, %rbx
  430ebc:	4c 89 c8 	movq	%r9, %rax
  430ebf:	e8 dc 59 01 00 	callq	88540 <runtime.gcWriteBarrier>
  430ec4:	48 89 d8 	movq	%rbx, %rax
  430ec7:	e9 18 ff ff ff 	jmp	-232 <runtime.(*semaRoot).rotateLeft+0xc4>
  430ecc:	e8 cf 59 01 00 	callq	88527 <runtime.gcWriteBarrier>
  430ed1:	e9 fc fe ff ff 	jmp	-260 <runtime.(*semaRoot).rotateLeft+0xb2>
  430ed6:	48 89 c3 	movq	%rax, %rbx
  430ed9:	48 89 f0 	movq	%rsi, %rax
  430edc:	e8 bf 59 01 00 	callq	88511 <runtime.gcWriteBarrier>
  430ee1:	48 89 d8 	movq	%rbx, %rax
  430ee4:	e9 ce fe ff ff 	jmp	-306 <runtime.(*semaRoot).rotateLeft+0x97>
  430ee9:	48 89 fb 	movq	%rdi, %rbx
  430eec:	4c 89 d7 	movq	%r10, %rdi
  430eef:	49 89 c3 	movq	%rax, %r11
  430ef2:	48 89 c8 	movq	%rcx, %rax
  430ef5:	e8 a6 59 01 00 	callq	88486 <runtime.gcWriteBarrier>
  430efa:	4c 89 d8 	movq	%r11, %rax
  430efd:	48 89 df 	movq	%rbx, %rdi
  430f00:	e9 a0 fe ff ff 	jmp	-352 <runtime.(*semaRoot).rotateLeft+0x85>
  430f05:	49 89 fd 	movq	%rdi, %r13
  430f08:	4c 89 d7 	movq	%r10, %rdi
  430f0b:	e8 90 59 01 00 	callq	88464 <runtime.gcWriteBarrier>
  430f10:	48 89 df 	movq	%rbx, %rdi
  430f13:	49 89 c2 	movq	%rax, %r10
  430f16:	48 89 c8 	movq	%rcx, %rax
  430f19:	e8 82 59 01 00 	callq	88450 <runtime.gcWriteBarrier>
  430f1e:	4c 89 e7 	movq	%r12, %rdi
  430f21:	4c 89 d8 	movq	%r11, %rax
  430f24:	e8 77 59 01 00 	callq	88439 <runtime.gcWriteBarrier>
  430f29:	4c 89 d0 	movq	%r10, %rax
  430f2c:	4c 89 ef 	movq	%r13, %rdi
  430f2f:	e9 56 fe ff ff 	jmp	-426 <runtime.(*semaRoot).rotateLeft+0x6a>
  430f34:	48 8d 05 55 a0 03 00 	leaq	237653(%rip), %rax
  430f3b:	48 89 04 24 	movq	%rax, (%rsp)
  430f3f:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  430f48:	e8 83 02 ff ff 	callq	-64893 <runtime.throw>
  430f4d:	0f 0b 	ud2
  430f4f:	e8 1c 36 01 00 	callq	79388 <runtime.morestack_noctxt>
  430f54:	e9 c7 fd ff ff 	jmp	-569 <runtime.(*semaRoot).rotateLeft>
  430f59:	cc 	int3
  430f5a:	cc 	int3
  430f5b:	cc 	int3
  430f5c:	cc 	int3
  430f5d:	cc 	int3
  430f5e:	cc 	int3
  430f5f:	cc 	int3

runtime.(*semaRoot).rotateRight:
  430f60:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  430f69:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  430f6d:	0f 86 fb 01 00 00 	jbe	507 <runtime.(*semaRoot).rotateRight+0x20e>
  430f73:	48 83 ec 18 	subq	$24, %rsp
  430f77:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  430f7c:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  430f81:	48 8b 44 24 28 	movq	40(%rsp), %rax
  430f86:	48 8b 48 18 	movq	24(%rax), %rcx
  430f8a:	48 8b 50 40 	movq	64(%rax), %rdx
  430f8e:	48 8d 58 40 	leaq	64(%rax), %rbx
  430f92:	48 8d 70 18 	leaq	24(%rax), %rsi
  430f96:	4c 8b 40 10 	movq	16(%rax), %r8
  430f9a:	48 8d 78 10 	leaq	16(%rax), %rdi
  430f9e:	4c 8b 49 18 	movq	24(%rcx), %r9
  430fa2:	4c 8b 51 10 	movq	16(%rcx), %r10
  430fa6:	4c 8d 59 10 	leaq	16(%rcx), %r11
  430faa:	4d 85 c9 	testq	%r9, %r9
  430fad:	74 18 	je	24 <runtime.(*semaRoot).rotateRight+0x67>
  430faf:	44 8b 25 5a 2a 09 00 	movl	600666(%rip), %r12d
  430fb6:	4d 8d 69 40 	leaq	64(%r9), %r13
  430fba:	45 85 e4 	testl	%r12d, %r12d
  430fbd:	0f 85 74 01 00 00 	jne	372 <runtime.(*semaRoot).rotateRight+0x1d7>
  430fc3:	49 89 49 40 	movq	%rcx, 64(%r9)
  430fc7:	44 8b 0d 42 2a 09 00 	movl	600642(%rip), %r9d
  430fce:	45 85 c9 	testl	%r9d, %r9d
  430fd1:	0f 85 31 01 00 00 	jne	305 <runtime.(*semaRoot).rotateRight+0x1a8>
  430fd7:	48 89 41 10 	movq	%rax, 16(%rcx)
  430fdb:	48 89 48 40 	movq	%rcx, 64(%rax)
  430fdf:	4c 89 50 18 	movq	%r10, 24(%rax)
  430fe3:	4d 85 d2 	testq	%r10, %r10
  430fe6:	74 16 	je	22 <runtime.(*semaRoot).rotateRight+0x9e>
  430fe8:	8b 1d 22 2a 09 00 	movl	600610(%rip), %ebx
  430fee:	49 8d 72 40 	leaq	64(%r10), %rsi
  430ff2:	85 db 	testl	%ebx, %ebx
  430ff4:	0f 85 fb 00 00 00 	jne	251 <runtime.(*semaRoot).rotateRight+0x195>
  430ffa:	49 89 42 40 	movq	%rax, 64(%r10)
  430ffe:	8b 1d 0c 2a 09 00 	movl	600588(%rip), %ebx
  431004:	85 db 	testl	%ebx, %ebx
  431006:	0f 85 d6 00 00 00 	jne	214 <runtime.(*semaRoot).rotateRight+0x182>
  43100c:	4c 89 40 10 	movq	%r8, 16(%rax)
  431010:	4d 85 c0 	testq	%r8, %r8
  431013:	74 16 	je	22 <runtime.(*semaRoot).rotateRight+0xcb>
  431015:	8b 1d f5 29 09 00 	movl	600565(%rip), %ebx
  43101b:	49 8d 78 40 	leaq	64(%r8), %rdi
  43101f:	85 db 	testl	%ebx, %ebx
  431021:	0f 85 b1 00 00 00 	jne	177 <runtime.(*semaRoot).rotateRight+0x178>
  431027:	49 89 40 40 	movq	%rax, 64(%r8)
  43102b:	8b 1d df 29 09 00 	movl	600543(%rip), %ebx
  431031:	48 8d 79 40 	leaq	64(%rcx), %rdi
  431035:	85 db 	testl	%ebx, %ebx
  431037:	0f 85 88 00 00 00 	jne	136 <runtime.(*semaRoot).rotateRight+0x165>
  43103d:	48 89 51 40 	movq	%rdx, 64(%rcx)
  431041:	48 85 d2 	testq	%rdx, %rdx
  431044:	74 5a 	je	90 <runtime.(*semaRoot).rotateRight+0x140>
  431046:	48 8b 5a 18 	movq	24(%rdx), %rbx
  43104a:	48 8d 7a 18 	leaq	24(%rdx), %rdi
  43104e:	48 39 c3 	cmpq	%rax, %rbx
  431051:	75 22 	jne	34 <runtime.(*semaRoot).rotateRight+0x115>
  431053:	8b 1d b7 29 09 00 	movl	600503(%rip), %ebx
  431059:	85 db 	testl	%ebx, %ebx
  43105b:	75 0e 	jne	14 <runtime.(*semaRoot).rotateRight+0x10b>
  43105d:	48 89 4a 18 	movq	%rcx, 24(%rdx)
  431061:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  431066:	48 83 c4 18 	addq	$24, %rsp
  43106a:	c3 	retq
  43106b:	48 89 c8 	movq	%rcx, %rax
  43106e:	e8 2d 58 01 00 	callq	88109 <runtime.gcWriteBarrier>
  431073:	eb ec 	jmp	-20 <runtime.(*semaRoot).rotateRight+0x101>
  431075:	48 8b 5a 10 	movq	16(%rdx), %rbx
  431079:	48 8d 7a 10 	leaq	16(%rdx), %rdi
  43107d:	48 39 c3 	cmpq	%rax, %rbx
  431080:	0f 85 cd 00 00 00 	jne	205 <runtime.(*semaRoot).rotateRight+0x1f3>
  431086:	8b 1d 84 29 09 00 	movl	600452(%rip), %ebx
  43108c:	85 db 	testl	%ebx, %ebx
  43108e:	75 06 	jne	6 <runtime.(*semaRoot).rotateRight+0x136>
  431090:	48 89 4a 10 	movq	%rcx, 16(%rdx)
  431094:	eb cb 	jmp	-53 <runtime.(*semaRoot).rotateRight+0x101>
  431096:	48 89 c8 	movq	%rcx, %rax
  431099:	e8 02 58 01 00 	callq	88066 <runtime.gcWriteBarrier>
  43109e:	eb c1 	jmp	-63 <runtime.(*semaRoot).rotateRight+0x101>
  4310a0:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  4310a5:	84 02 	testb	%al, (%rdx)
  4310a7:	8b 1d 63 29 09 00 	movl	600419(%rip), %ebx
  4310ad:	48 8d 7a 08 	leaq	8(%rdx), %rdi
  4310b1:	85 db 	testl	%ebx, %ebx
  4310b3:	75 06 	jne	6 <runtime.(*semaRoot).rotateRight+0x15b>
  4310b5:	48 89 4a 08 	movq	%rcx, 8(%rdx)
  4310b9:	eb a6 	jmp	-90 <runtime.(*semaRoot).rotateRight+0x101>
  4310bb:	48 89 c8 	movq	%rcx, %rax
  4310be:	e8 dd 57 01 00 	callq	88029 <runtime.gcWriteBarrier>
  4310c3:	eb 9c 	jmp	-100 <runtime.(*semaRoot).rotateRight+0x101>
  4310c5:	48 89 c3 	movq	%rax, %rbx
  4310c8:	48 89 d0 	movq	%rdx, %rax
  4310cb:	e8 d0 57 01 00 	callq	88016 <runtime.gcWriteBarrier>
  4310d0:	48 89 d8 	movq	%rbx, %rax
  4310d3:	e9 69 ff ff ff 	jmp	-151 <runtime.(*semaRoot).rotateRight+0xe1>
  4310d8:	e8 c3 57 01 00 	callq	88003 <runtime.gcWriteBarrier>
  4310dd:	e9 49 ff ff ff 	jmp	-183 <runtime.(*semaRoot).rotateRight+0xcb>
  4310e2:	48 89 c3 	movq	%rax, %rbx
  4310e5:	4c 89 c0 	movq	%r8, %rax
  4310e8:	e8 b3 57 01 00 	callq	87987 <runtime.gcWriteBarrier>
  4310ed:	48 89 d8 	movq	%rbx, %rax
  4310f0:	e9 1b ff ff ff 	jmp	-229 <runtime.(*semaRoot).rotateRight+0xb0>
  4310f5:	48 89 fb 	movq	%rdi, %rbx
  4310f8:	48 89 f7 	movq	%rsi, %rdi
  4310fb:	e8 a0 57 01 00 	callq	87968 <runtime.gcWriteBarrier>
  431100:	48 89 df 	movq	%rbx, %rdi
  431103:	e9 f6 fe ff ff 	jmp	-266 <runtime.(*semaRoot).rotateRight+0x9e>
  431108:	49 89 f9 	movq	%rdi, %r9
  43110b:	4c 89 df 	movq	%r11, %rdi
  43110e:	e8 8d 57 01 00 	callq	87949 <runtime.gcWriteBarrier>
  431113:	48 89 df 	movq	%rbx, %rdi
  431116:	49 89 c3 	movq	%rax, %r11
  431119:	48 89 c8 	movq	%rcx, %rax
  43111c:	e8 7f 57 01 00 	callq	87935 <runtime.gcWriteBarrier>
  431121:	48 89 f7 	movq	%rsi, %rdi
  431124:	4c 89 d0 	movq	%r10, %rax
  431127:	e8 74 57 01 00 	callq	87924 <runtime.gcWriteBarrier>
  43112c:	4c 89 d8 	movq	%r11, %rax
  43112f:	4c 89 cf 	movq	%r9, %rdi
  431132:	e9 ac fe ff ff 	jmp	-340 <runtime.(*semaRoot).rotateRight+0x83>
  431137:	49 89 f9 	movq	%rdi, %r9
  43113a:	4c 89 ef 	movq	%r13, %rdi
  43113d:	49 89 c4 	movq	%rax, %r12
  431140:	48 89 c8 	movq	%rcx, %rax
  431143:	e8 58 57 01 00 	callq	87896 <runtime.gcWriteBarrier>
  431148:	4c 89 e0 	movq	%r12, %rax
  43114b:	4c 89 cf 	movq	%r9, %rdi
  43114e:	e9 74 fe ff ff 	jmp	-396 <runtime.(*semaRoot).rotateRight+0x67>
  431153:	48 8d 05 8b a0 03 00 	leaq	237707(%rip), %rax
  43115a:	48 89 04 24 	movq	%rax, (%rsp)
  43115e:	48 c7 44 24 08 14 00 00 00 	movq	$20, 8(%rsp)
  431167:	e8 64 00 ff ff 	callq	-65436 <runtime.throw>
  43116c:	0f 0b 	ud2
  43116e:	e8 fd 33 01 00 	callq	78845 <runtime.morestack_noctxt>
  431173:	e9 e8 fd ff ff 	jmp	-536 <runtime.(*semaRoot).rotateRight>
  431178:	cc 	int3
  431179:	cc 	int3
  43117a:	cc 	int3
  43117b:	cc 	int3
  43117c:	cc 	int3
  43117d:	cc 	int3
  43117e:	cc 	int3
  43117f:	cc 	int3

runtime.dumpregs:
  431180:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  431189:	48 8d 44 24 d0 	leaq	-48(%rsp), %rax
  43118e:	48 3b 41 10 	cmpq	16(%rcx), %rax
  431192:	0f 86 16 07 00 00 	jbe	1814 <runtime.dumpregs+0x72e>
  431198:	48 81 ec b0 00 00 00 	subq	$176, %rsp
  43119f:	48 89 ac 24 a8 00 00 00 	movq	%rbp, 168(%rsp)
  4311a7:	48 8d ac 24 a8 00 00 00 	leaq	168(%rsp), %rbp
  4311af:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  4311b7:	48 8b 48 08 	movq	8(%rax), %rcx
  4311bb:	48 8d 51 28 	leaq	40(%rcx), %rdx
  4311bf:	84 02 	testb	%al, (%rdx)
  4311c1:	84 00 	testb	%al, (%rax)
  4311c3:	48 8b 89 90 00 00 00 	movq	144(%rcx), %rcx
  4311ca:	48 89 4c 24 60 	movq	%rcx, 96(%rsp)
  4311cf:	e8 2c 09 ff ff 	callq	-63188 <runtime.printlock>
  4311d4:	48 8d 05 43 8d 03 00 	leaq	232771(%rip), %rax
  4311db:	48 89 04 24 	movq	%rax, (%rsp)
  4311df:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  4311e8:	e8 53 12 ff ff 	callq	-60845 <runtime.printstring>
  4311ed:	48 8b 44 24 60 	movq	96(%rsp), %rax
  4311f2:	48 89 04 24 	movq	%rax, (%rsp)
  4311f6:	e8 f5 10 ff ff 	callq	-61195 <runtime.printhex>
  4311fb:	e8 90 0b ff ff 	callq	-62576 <runtime.printnl>
  431200:	e8 7b 09 ff ff 	callq	-63109 <runtime.printunlock>
  431205:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  43120d:	48 8b 48 08 	movq	8(%rax), %rcx
  431211:	48 8d 51 28 	leaq	40(%rcx), %rdx
  431215:	84 02 	testb	%al, (%rdx)
  431217:	48 8b 89 80 00 00 00 	movq	128(%rcx), %rcx
  43121e:	48 89 4c 24 78 	movq	%rcx, 120(%rsp)
  431223:	e8 d8 08 ff ff 	callq	-63272 <runtime.printlock>
  431228:	48 8d 05 fd 8c 03 00 	leaq	232701(%rip), %rax
  43122f:	48 89 04 24 	movq	%rax, (%rsp)
  431233:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  43123c:	e8 ff 11 ff ff 	callq	-60929 <runtime.printstring>
  431241:	48 8b 44 24 78 	movq	120(%rsp), %rax
  431246:	48 89 04 24 	movq	%rax, (%rsp)
  43124a:	e8 a1 10 ff ff 	callq	-61279 <runtime.printhex>
  43124f:	e8 3c 0b ff ff 	callq	-62660 <runtime.printnl>
  431254:	e8 27 09 ff ff 	callq	-63193 <runtime.printunlock>
  431259:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  431261:	48 8b 48 08 	movq	8(%rax), %rcx
  431265:	48 8d 51 28 	leaq	40(%rcx), %rdx
  431269:	84 02 	testb	%al, (%rdx)
  43126b:	48 8b 89 98 00 00 00 	movq	152(%rcx), %rcx
  431272:	48 89 4c 24 58 	movq	%rcx, 88(%rsp)
  431277:	e8 84 08 ff ff 	callq	-63356 <runtime.printlock>
  43127c:	48 8d 05 b0 8c 03 00 	leaq	232624(%rip), %rax
  431283:	48 89 04 24 	movq	%rax, (%rsp)
  431287:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  431290:	e8 ab 11 ff ff 	callq	-61013 <runtime.printstring>
  431295:	48 8b 44 24 58 	movq	88(%rsp), %rax
  43129a:	48 89 04 24 	movq	%rax, (%rsp)
  43129e:	e8 4d 10 ff ff 	callq	-61363 <runtime.printhex>
  4312a3:	e8 e8 0a ff ff 	callq	-62744 <runtime.printnl>
  4312a8:	e8 d3 08 ff ff 	callq	-63277 <runtime.printunlock>
  4312ad:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  4312b5:	48 8b 48 08 	movq	8(%rax), %rcx
  4312b9:	48 8d 51 28 	leaq	40(%rcx), %rdx
  4312bd:	84 02 	testb	%al, (%rdx)
  4312bf:	48 8b 89 88 00 00 00 	movq	136(%rcx), %rcx
  4312c6:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  4312cb:	e8 30 08 ff ff 	callq	-63440 <runtime.printlock>
  4312d0:	48 8d 05 6a 8c 03 00 	leaq	232554(%rip), %rax
  4312d7:	48 89 04 24 	movq	%rax, (%rsp)
  4312db:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  4312e4:	e8 57 11 ff ff 	callq	-61097 <runtime.printstring>
  4312e9:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4312ee:	48 89 04 24 	movq	%rax, (%rsp)
  4312f2:	e8 f9 0f ff ff 	callq	-61447 <runtime.printhex>
  4312f7:	e8 94 0a ff ff 	callq	-62828 <runtime.printnl>
  4312fc:	e8 7f 08 ff ff 	callq	-63361 <runtime.printunlock>
  431301:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  431309:	48 8b 48 08 	movq	8(%rax), %rcx
  43130d:	48 8d 51 28 	leaq	40(%rcx), %rdx
  431311:	84 02 	testb	%al, (%rdx)
  431313:	48 8b 49 68 	movq	104(%rcx), %rcx
  431317:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  43131c:	e8 df 07 ff ff 	callq	-63521 <runtime.printlock>
  431321:	48 8d 05 12 8c 03 00 	leaq	232466(%rip), %rax
  431328:	48 89 04 24 	movq	%rax, (%rsp)
  43132c:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  431335:	e8 06 11 ff ff 	callq	-61178 <runtime.printstring>
  43133a:	48 8b 44 24 40 	movq	64(%rsp), %rax
  43133f:	48 89 04 24 	movq	%rax, (%rsp)
  431343:	e8 a8 0f ff ff 	callq	-61528 <runtime.printhex>
  431348:	e8 43 0a ff ff 	callq	-62909 <runtime.printnl>
  43134d:	e8 2e 08 ff ff 	callq	-63442 <runtime.printunlock>
  431352:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  43135a:	48 8b 48 08 	movq	8(%rax), %rcx
  43135e:	48 8d 51 28 	leaq	40(%rcx), %rdx
  431362:	84 02 	testb	%al, (%rdx)
  431364:	48 8b 49 70 	movq	112(%rcx), %rcx
  431368:	48 89 4c 24 68 	movq	%rcx, 104(%rsp)
  43136d:	e8 8e 07 ff ff 	callq	-63602 <runtime.printlock>
  431372:	48 8d 05 dd 8b 03 00 	leaq	232413(%rip), %rax
  431379:	48 89 04 24 	movq	%rax, (%rsp)
  43137d:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  431386:	e8 b5 10 ff ff 	callq	-61259 <runtime.printstring>
  43138b:	48 8b 44 24 68 	movq	104(%rsp), %rax
  431390:	48 89 04 24 	movq	%rax, (%rsp)
  431394:	e8 57 0f ff ff 	callq	-61609 <runtime.printhex>
  431399:	e8 f2 09 ff ff 	callq	-62990 <runtime.printnl>
  43139e:	e8 dd 07 ff ff 	callq	-63523 <runtime.printunlock>
  4313a3:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  4313ab:	48 8b 48 08 	movq	8(%rax), %rcx
  4313af:	48 8d 51 28 	leaq	40(%rcx), %rdx
  4313b3:	84 02 	testb	%al, (%rdx)
  4313b5:	48 8b 49 78 	movq	120(%rcx), %rcx
  4313b9:	48 89 8c 24 90 00 00 00 	movq	%rcx, 144(%rsp)
  4313c1:	e8 3a 07 ff ff 	callq	-63686 <runtime.printlock>
  4313c6:	48 8d 05 58 8b 03 00 	leaq	232280(%rip), %rax
  4313cd:	48 89 04 24 	movq	%rax, (%rsp)
  4313d1:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  4313da:	e8 61 10 ff ff 	callq	-61343 <runtime.printstring>
  4313df:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  4313e7:	48 89 04 24 	movq	%rax, (%rsp)
  4313eb:	e8 00 0f ff ff 	callq	-61696 <runtime.printhex>
  4313f0:	e8 9b 09 ff ff 	callq	-63077 <runtime.printnl>
  4313f5:	e8 86 07 ff ff 	callq	-63610 <runtime.printunlock>
  4313fa:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  431402:	48 8b 48 08 	movq	8(%rax), %rcx
  431406:	48 8d 51 28 	leaq	40(%rcx), %rdx
  43140a:	84 02 	testb	%al, (%rdx)
  43140c:	48 8b 89 a0 00 00 00 	movq	160(%rcx), %rcx
  431413:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  431418:	e8 e3 06 ff ff 	callq	-63773 <runtime.printlock>
  43141d:	48 8d 05 39 8b 03 00 	leaq	232249(%rip), %rax
  431424:	48 89 04 24 	movq	%rax, (%rsp)
  431428:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  431431:	e8 0a 10 ff ff 	callq	-61430 <runtime.printstring>
  431436:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43143b:	48 89 04 24 	movq	%rax, (%rsp)
  43143f:	e8 ac 0e ff ff 	callq	-61780 <runtime.printhex>
  431444:	e8 47 09 ff ff 	callq	-63161 <runtime.printnl>
  431449:	e8 32 07 ff ff 	callq	-63694 <runtime.printunlock>
  43144e:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  431456:	48 8b 48 08 	movq	8(%rax), %rcx
  43145a:	48 8d 51 28 	leaq	40(%rcx), %rdx
  43145e:	84 02 	testb	%al, (%rdx)
  431460:	48 8b 49 28 	movq	40(%rcx), %rcx
  431464:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  431469:	e8 92 06 ff ff 	callq	-63854 <runtime.printlock>
  43146e:	48 8d 05 9b 8a 03 00 	leaq	232091(%rip), %rax
  431475:	48 89 04 24 	movq	%rax, (%rsp)
  431479:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  431482:	e8 b9 0f ff ff 	callq	-61511 <runtime.printstring>
  431487:	48 8b 44 24 10 	movq	16(%rsp), %rax
  43148c:	48 89 04 24 	movq	%rax, (%rsp)
  431490:	e8 5b 0e ff ff 	callq	-61861 <runtime.printhex>
  431495:	e8 f6 08 ff ff 	callq	-63242 <runtime.printnl>
  43149a:	e8 e1 06 ff ff 	callq	-63775 <runtime.printunlock>
  43149f:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  4314a7:	48 8b 48 08 	movq	8(%rax), %rcx
  4314ab:	48 8d 51 28 	leaq	40(%rcx), %rdx
  4314af:	84 02 	testb	%al, (%rdx)
  4314b1:	48 8b 49 30 	movq	48(%rcx), %rcx
  4314b5:	48 89 8c 24 88 00 00 00 	movq	%rcx, 136(%rsp)
  4314bd:	e8 3e 06 ff ff 	callq	-63938 <runtime.printlock>
  4314c2:	48 8d 05 4e 8a 03 00 	leaq	232014(%rip), %rax
  4314c9:	48 89 04 24 	movq	%rax, (%rsp)
  4314cd:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  4314d6:	e8 65 0f ff ff 	callq	-61595 <runtime.printstring>
  4314db:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  4314e3:	48 89 04 24 	movq	%rax, (%rsp)
  4314e7:	e8 04 0e ff ff 	callq	-61948 <runtime.printhex>
  4314ec:	e8 9f 08 ff ff 	callq	-63329 <runtime.printnl>
  4314f1:	e8 8a 06 ff ff 	callq	-63862 <runtime.printunlock>
  4314f6:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  4314fe:	48 8b 48 08 	movq	8(%rax), %rcx
  431502:	48 8d 51 28 	leaq	40(%rcx), %rdx
  431506:	84 02 	testb	%al, (%rdx)
  431508:	48 8b 49 38 	movq	56(%rcx), %rcx
  43150c:	48 89 8c 24 80 00 00 00 	movq	%rcx, 128(%rsp)
  431514:	e8 e7 05 ff ff 	callq	-64025 <runtime.printlock>
  431519:	48 8d 05 c6 89 03 00 	leaq	231878(%rip), %rax
  431520:	48 89 04 24 	movq	%rax, (%rsp)
  431524:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  43152d:	e8 0e 0f ff ff 	callq	-61682 <runtime.printstring>
  431532:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  43153a:	48 89 04 24 	movq	%rax, (%rsp)
  43153e:	e8 ad 0d ff ff 	callq	-62035 <runtime.printhex>
  431543:	e8 48 08 ff ff 	callq	-63416 <runtime.printnl>
  431548:	e8 33 06 ff ff 	callq	-63949 <runtime.printunlock>
  43154d:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  431555:	48 8b 48 08 	movq	8(%rax), %rcx
  431559:	48 8d 51 28 	leaq	40(%rcx), %rdx
  43155d:	84 02 	testb	%al, (%rdx)
  43155f:	48 8b 49 40 	movq	64(%rcx), %rcx
  431563:	48 89 4c 24 70 	movq	%rcx, 112(%rsp)
  431568:	e8 93 05 ff ff 	callq	-64109 <runtime.printlock>
  43156d:	48 8d 05 79 89 03 00 	leaq	231801(%rip), %rax
  431574:	48 89 04 24 	movq	%rax, (%rsp)
  431578:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  431581:	e8 ba 0e ff ff 	callq	-61766 <runtime.printstring>
  431586:	48 8b 44 24 70 	movq	112(%rsp), %rax
  43158b:	48 89 04 24 	movq	%rax, (%rsp)
  43158f:	e8 5c 0d ff ff 	callq	-62116 <runtime.printhex>
  431594:	e8 f7 07 ff ff 	callq	-63497 <runtime.printnl>
  431599:	e8 e2 05 ff ff 	callq	-64030 <runtime.printunlock>
  43159e:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  4315a6:	48 8b 48 08 	movq	8(%rax), %rcx
  4315aa:	48 8d 51 28 	leaq	40(%rcx), %rdx
  4315ae:	84 02 	testb	%al, (%rdx)
  4315b0:	48 8b 49 48 	movq	72(%rcx), %rcx
  4315b4:	48 89 8c 24 98 00 00 00 	movq	%rcx, 152(%rsp)
  4315bc:	e8 3f 05 ff ff 	callq	-64193 <runtime.printlock>
  4315c1:	48 8d 05 2c 89 03 00 	leaq	231724(%rip), %rax
  4315c8:	48 89 04 24 	movq	%rax, (%rsp)
  4315cc:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  4315d5:	e8 66 0e ff ff 	callq	-61850 <runtime.printstring>
  4315da:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  4315e2:	48 89 04 24 	movq	%rax, (%rsp)
  4315e6:	e8 05 0d ff ff 	callq	-62203 <runtime.printhex>
  4315eb:	e8 a0 07 ff ff 	callq	-63584 <runtime.printnl>
  4315f0:	e8 8b 05 ff ff 	callq	-64117 <runtime.printunlock>
  4315f5:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  4315fd:	48 8b 48 08 	movq	8(%rax), %rcx
  431601:	48 8d 51 28 	leaq	40(%rcx), %rdx
  431605:	84 02 	testb	%al, (%rdx)
  431607:	48 8b 49 50 	movq	80(%rcx), %rcx
  43160b:	48 89 4c 24 50 	movq	%rcx, 80(%rsp)
  431610:	e8 eb 04 ff ff 	callq	-64277 <runtime.printlock>
  431615:	48 8d 05 df 88 03 00 	leaq	231647(%rip), %rax
  43161c:	48 89 04 24 	movq	%rax, (%rsp)
  431620:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  431629:	e8 12 0e ff ff 	callq	-61934 <runtime.printstring>
  43162e:	48 8b 44 24 50 	movq	80(%rsp), %rax
  431633:	48 89 04 24 	movq	%rax, (%rsp)
  431637:	e8 b4 0c ff ff 	callq	-62284 <runtime.printhex>
  43163c:	e8 4f 07 ff ff 	callq	-63665 <runtime.printnl>
  431641:	e8 3a 05 ff ff 	callq	-64198 <runtime.printunlock>
  431646:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  43164e:	48 8b 48 08 	movq	8(%rax), %rcx
  431652:	48 8d 51 28 	leaq	40(%rcx), %rdx
  431656:	84 02 	testb	%al, (%rdx)
  431658:	48 8b 49 58 	movq	88(%rcx), %rcx
  43165c:	48 89 4c 24 48 	movq	%rcx, 72(%rsp)
  431661:	e8 9a 04 ff ff 	callq	-64358 <runtime.printlock>
  431666:	48 8d 05 95 88 03 00 	leaq	231573(%rip), %rax
  43166d:	48 89 04 24 	movq	%rax, (%rsp)
  431671:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  43167a:	e8 c1 0d ff ff 	callq	-62015 <runtime.printstring>
  43167f:	48 8b 44 24 48 	movq	72(%rsp), %rax
  431684:	48 89 04 24 	movq	%rax, (%rsp)
  431688:	e8 63 0c ff ff 	callq	-62365 <runtime.printhex>
  43168d:	e8 fe 06 ff ff 	callq	-63746 <runtime.printnl>
  431692:	e8 e9 04 ff ff 	callq	-64279 <runtime.printunlock>
  431697:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  43169f:	48 8b 48 08 	movq	8(%rax), %rcx
  4316a3:	48 8d 51 28 	leaq	40(%rcx), %rdx
  4316a7:	84 02 	testb	%al, (%rdx)
  4316a9:	48 8b 49 60 	movq	96(%rcx), %rcx
  4316ad:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  4316b2:	e8 49 04 ff ff 	callq	-64439 <runtime.printlock>
  4316b7:	48 8d 05 4b 88 03 00 	leaq	231499(%rip), %rax
  4316be:	48 89 04 24 	movq	%rax, (%rsp)
  4316c2:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  4316cb:	e8 70 0d ff ff 	callq	-62096 <runtime.printstring>
  4316d0:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4316d5:	48 89 04 24 	movq	%rax, (%rsp)
  4316d9:	e8 12 0c ff ff 	callq	-62446 <runtime.printhex>
  4316de:	e8 ad 06 ff ff 	callq	-63827 <runtime.printnl>
  4316e3:	e8 98 04 ff ff 	callq	-64360 <runtime.printunlock>
  4316e8:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  4316f0:	48 8b 48 08 	movq	8(%rax), %rcx
  4316f4:	48 8d 51 28 	leaq	40(%rcx), %rdx
  4316f8:	84 02 	testb	%al, (%rdx)
  4316fa:	48 8b 89 a8 00 00 00 	movq	168(%rcx), %rcx
  431701:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  431706:	e8 f5 03 ff ff 	callq	-64523 <runtime.printlock>
  43170b:	48 8d 05 3d 88 03 00 	leaq	231485(%rip), %rax
  431712:	48 89 04 24 	movq	%rax, (%rsp)
  431716:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  43171f:	e8 1c 0d ff ff 	callq	-62180 <runtime.printstring>
  431724:	48 8b 44 24 28 	movq	40(%rsp), %rax
  431729:	48 89 04 24 	movq	%rax, (%rsp)
  43172d:	e8 be 0b ff ff 	callq	-62530 <runtime.printhex>
  431732:	e8 59 06 ff ff 	callq	-63911 <runtime.printnl>
  431737:	e8 44 04 ff ff 	callq	-64444 <runtime.printunlock>
  43173c:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  431744:	48 8b 48 08 	movq	8(%rax), %rcx
  431748:	48 8d 51 28 	leaq	40(%rcx), %rdx
  43174c:	84 02 	testb	%al, (%rdx)
  43174e:	48 8b 89 b0 00 00 00 	movq	176(%rcx), %rcx
  431755:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  43175a:	e8 a1 03 ff ff 	callq	-64607 <runtime.printlock>
  43175f:	48 8d 05 e2 87 03 00 	leaq	231394(%rip), %rax
  431766:	48 89 04 24 	movq	%rax, (%rsp)
  43176a:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  431773:	e8 c8 0c ff ff 	callq	-62264 <runtime.printstring>
  431778:	48 8b 44 24 30 	movq	48(%rsp), %rax
  43177d:	48 89 04 24 	movq	%rax, (%rsp)
  431781:	e8 6a 0b ff ff 	callq	-62614 <runtime.printhex>
  431786:	e8 05 06 ff ff 	callq	-63995 <runtime.printnl>
  43178b:	e8 f0 03 ff ff 	callq	-64528 <runtime.printunlock>
  431790:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  431798:	48 8b 48 08 	movq	8(%rax), %rcx
  43179c:	48 8d 51 28 	leaq	40(%rcx), %rdx
  4317a0:	84 02 	testb	%al, (%rdx)
  4317a2:	0f b7 89 b8 00 00 00 	movzwl	184(%rcx), %ecx
  4317a9:	48 89 8c 24 a0 00 00 00 	movq	%rcx, 160(%rsp)
  4317b1:	e8 4a 03 ff ff 	callq	-64694 <runtime.printlock>
  4317b6:	48 8d 05 06 87 03 00 	leaq	231174(%rip), %rax
  4317bd:	48 89 04 24 	movq	%rax, (%rsp)
  4317c1:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  4317ca:	e8 71 0c ff ff 	callq	-62351 <runtime.printstring>
  4317cf:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  4317d7:	48 89 04 24 	movq	%rax, (%rsp)
  4317db:	e8 10 0b ff ff 	callq	-62704 <runtime.printhex>
  4317e0:	e8 ab 05 ff ff 	callq	-64085 <runtime.printnl>
  4317e5:	e8 96 03 ff ff 	callq	-64618 <runtime.printunlock>
  4317ea:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  4317f2:	48 8b 48 08 	movq	8(%rax), %rcx
  4317f6:	48 8d 51 28 	leaq	40(%rcx), %rdx
  4317fa:	84 02 	testb	%al, (%rdx)
  4317fc:	0f b7 89 bc 00 00 00 	movzwl	188(%rcx), %ecx
  431803:	48 89 8c 24 a0 00 00 00 	movq	%rcx, 160(%rsp)
  43180b:	e8 f0 02 ff ff 	callq	-64784 <runtime.printlock>
  431810:	48 8d 05 b3 86 03 00 	leaq	231091(%rip), %rax
  431817:	48 89 04 24 	movq	%rax, (%rsp)
  43181b:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  431824:	e8 17 0c ff ff 	callq	-62441 <runtime.printstring>
  431829:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  431831:	48 89 04 24 	movq	%rax, (%rsp)
  431835:	e8 b6 0a ff ff 	callq	-62794 <runtime.printhex>
  43183a:	e8 51 05 ff ff 	callq	-64175 <runtime.printnl>
  43183f:	e8 3c 03 ff ff 	callq	-64708 <runtime.printunlock>
  431844:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  43184c:	48 8b 40 08 	movq	8(%rax), %rax
  431850:	48 8d 48 28 	leaq	40(%rax), %rcx
  431854:	84 01 	testb	%al, (%rcx)
  431856:	0f b7 80 ba 00 00 00 	movzwl	186(%rax), %eax
  43185d:	48 89 84 24 a0 00 00 00 	movq	%rax, 160(%rsp)
  431865:	e8 96 02 ff ff 	callq	-64874 <runtime.printlock>
  43186a:	48 8d 05 67 86 03 00 	leaq	231015(%rip), %rax
  431871:	48 89 04 24 	movq	%rax, (%rsp)
  431875:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  43187e:	e8 bd 0b ff ff 	callq	-62531 <runtime.printstring>
  431883:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  43188b:	48 89 04 24 	movq	%rax, (%rsp)
  43188f:	e8 5c 0a ff ff 	callq	-62884 <runtime.printhex>
  431894:	e8 f7 04 ff ff 	callq	-64265 <runtime.printnl>
  431899:	e8 e2 02 ff ff 	callq	-64798 <runtime.printunlock>
  43189e:	48 8b ac 24 a8 00 00 00 	movq	168(%rsp), %rbp
  4318a6:	48 81 c4 b0 00 00 00 	addq	$176, %rsp
  4318ad:	c3 	retq
  4318ae:	e8 bd 2c 01 00 	callq	76989 <runtime.morestack_noctxt>
  4318b3:	e9 c8 f8 ff ff 	jmp	-1848 <runtime.dumpregs>
  4318b8:	cc 	int3
  4318b9:	cc 	int3
  4318ba:	cc 	int3
  4318bb:	cc 	int3
  4318bc:	cc 	int3
  4318bd:	cc 	int3
  4318be:	cc 	int3
  4318bf:	cc 	int3

runtime.(*sigctxt).preparePanic:
  4318c0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4318c9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4318cd:	0f 86 0e 01 00 00 	jbe	270 <runtime.(*sigctxt).preparePanic+0x121>
  4318d3:	48 83 ec 40 	subq	$64, %rsp
  4318d7:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  4318dc:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  4318e1:	48 8b 44 24 48 	movq	72(%rsp), %rax
  4318e6:	48 8b 48 08 	movq	8(%rax), %rcx
  4318ea:	48 8d 51 28 	leaq	40(%rcx), %rdx
  4318ee:	84 02 	testb	%al, (%rdx)
  4318f0:	84 00 	testb	%al, (%rax)
  4318f2:	48 8b 91 a8 00 00 00 	movq	168(%rcx), %rdx
  4318f9:	48 8b 89 a0 00 00 00 	movq	160(%rcx), %rcx
  431900:	48 85 d2 	testq	%rdx, %rdx
  431903:	75 6b 	jne	107 <runtime.(*sigctxt).preparePanic+0xb0>
  431905:	48 85 d2 	testq	%rdx, %rdx
  431908:	74 1b 	je	27 <runtime.(*sigctxt).preparePanic+0x65>
  43190a:	48 83 c1 f8 	addq	$-8, %rcx
  43190e:	48 89 cb 	movq	%rcx, %rbx
  431911:	48 89 11 	movq	%rdx, (%rcx)
  431914:	48 8b 48 08 	movq	8(%rax), %rcx
  431918:	48 8d 51 28 	leaq	40(%rcx), %rdx
  43191c:	84 02 	testb	%al, (%rdx)
  43191e:	48 89 99 a0 00 00 00 	movq	%rbx, 160(%rcx)
  431925:	48 8d 0d b4 4d 02 00 	leaq	150964(%rip), %rcx
  43192c:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  431931:	48 8d 0d a8 c8 03 00 	leaq	247976(%rip), %rcx
  431938:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  43193d:	b9 08 00 00 00 	movl	$8, %ecx
  431942:	48 8d 54 24 28 	leaq	40(%rsp), %rdx
  431947:	48 8b 0c 0a 	movq	(%rdx,%rcx), %rcx
  43194b:	48 8d 54 24 30 	leaq	48(%rsp), %rdx
  431950:	84 02 	testb	%al, (%rdx)
  431952:	48 8b 40 08 	movq	8(%rax), %rax
  431956:	48 8d 50 28 	leaq	40(%rax), %rdx
  43195a:	84 02 	testb	%al, (%rdx)
  43195c:	48 8b 09 	movq	(%rcx), %rcx
  43195f:	48 89 88 a8 00 00 00 	movq	%rcx, 168(%rax)
  431966:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  43196b:	48 83 c4 40 	addq	$64, %rsp
  43196f:	c3 	retq
  431970:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  431975:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  43197a:	48 89 14 24 	movq	%rdx, (%rsp)
  43197e:	e8 4d 68 00 00 	callq	26701 <runtime.findfunc>
  431983:	48 8b 44 24 08 	movq	8(%rsp), %rax
  431988:	48 85 c0 	testq	%rax, %rax
  43198b:	74 14 	je	20 <runtime.(*sigctxt).preparePanic+0xe1>
  43198d:	48 8b 44 24 48 	movq	72(%rsp), %rax
  431992:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  431997:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  43199c:	e9 64 ff ff ff 	jmp	-156 <runtime.(*sigctxt).preparePanic+0x45>
  4319a1:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4319a6:	48 8b 00 	movq	(%rax), %rax
  4319a9:	48 89 04 24 	movq	%rax, (%rsp)
  4319ad:	e8 1e 68 00 00 	callq	26654 <runtime.findfunc>
  4319b2:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4319b7:	48 85 c0 	testq	%rax, %rax
  4319ba:	74 11 	je	17 <runtime.(*sigctxt).preparePanic+0x10d>
  4319bc:	48 8b 44 24 48 	movq	72(%rsp), %rax
  4319c1:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  4319c6:	31 d2 	xorl	%edx, %edx
  4319c8:	e9 38 ff ff ff 	jmp	-200 <runtime.(*sigctxt).preparePanic+0x45>
  4319cd:	48 8b 44 24 48 	movq	72(%rsp), %rax
  4319d2:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  4319d7:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  4319dc:	e9 24 ff ff ff 	jmp	-220 <runtime.(*sigctxt).preparePanic+0x45>
  4319e1:	e8 8a 2b 01 00 	callq	76682 <runtime.morestack_noctxt>
  4319e6:	e9 d5 fe ff ff 	jmp	-299 <runtime.(*sigctxt).preparePanic>
  4319eb:	cc 	int3
  4319ec:	cc 	int3
  4319ed:	cc 	int3
  4319ee:	cc 	int3
  4319ef:	cc 	int3

runtime.sighandler:
  4319f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4319f9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4319fd:	0f 86 84 06 00 00 	jbe	1668 <runtime.sighandler+0x697>
  431a03:	48 83 ec 78 	subq	$120, %rsp
  431a07:	48 89 6c 24 70 	movq	%rbp, 112(%rsp)
  431a0c:	48 8d 6c 24 70 	leaq	112(%rsp), %rbp
  431a11:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  431a1a:	48 8b 8c 24 88 00 00 00 	movq	136(%rsp), %rcx
  431a22:	48 89 4c 24 60 	movq	%rcx, 96(%rsp)
  431a27:	48 8b 8c 24 90 00 00 00 	movq	144(%rsp), %rcx
  431a2f:	48 89 4c 24 68 	movq	%rcx, 104(%rsp)
  431a34:	8b 94 24 80 00 00 00 	movl	128(%rsp), %edx
  431a3b:	83 fa 1b 	cmpl	$27, %edx
  431a3e:	0f 84 e3 05 00 00 	je	1507 <runtime.sighandler+0x637>
  431a44:	83 fa 41 	cmpl	$65, %edx
  431a47:	0f 83 c9 05 00 00 	jae	1481 <runtime.sighandler+0x626>
  431a4d:	48 83 fa 41 	cmpq	$65, %rdx
  431a51:	0f 83 29 06 00 00 	jae	1577 <runtime.sighandler+0x690>
  431a57:	48 8d 0c 52 	leaq	(%rdx,%rdx,2), %rcx
  431a5b:	48 8d 1d 1e 45 07 00 	leaq	476446(%rip), %rbx
  431a62:	8b 0c cb 	movl	(%rbx,%rcx,8), %ecx
  431a65:	0f ba e1 03 	btl	$3, %ecx
  431a69:	0f 83 9a 05 00 00 	jae	1434 <runtime.sighandler+0x619>
  431a6f:	48 8b b4 24 98 00 00 00 	movq	152(%rsp), %rsi
  431a77:	0f b6 be c5 00 00 00 	movzbl	197(%rsi), %edi
  431a7e:	40 84 ff 	testb	%dil, %dil
  431a81:	74 06 	je	6 <runtime.sighandler+0x99>
  431a83:	83 e1 f7 	andl	$-9, %ecx
  431a86:	83 c9 04 	orl	$4, %ecx
  431a89:	48 8b 7c 24 60 	movq	96(%rsp), %rdi
  431a8e:	48 63 7f 08 	movslq	8(%rdi), %rdi
  431a92:	48 85 ff 	testq	%rdi, %rdi
  431a95:	74 0d 	je	13 <runtime.sighandler+0xb4>
  431a97:	0f ba e1 03 	btl	$3, %ecx
  431a9b:	0f 82 08 05 00 00 	jb	1288 <runtime.sighandler+0x5b9>
  431aa1:	48 85 ff 	testq	%rdi, %rdi
  431aa4:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  431aa9:	89 4c 24 2c 	movl	%ecx, 44(%rsp)
  431aad:	0f 85 e7 04 00 00 	jne	1255 <runtime.sighandler+0x5aa>
  431ab3:	89 14 24 	movl	%edx, (%rsp)
  431ab6:	e8 05 1b 00 00 	callq	6917 <runtime.sigsend>
  431abb:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  431ac0:	84 c0 	testb	%al, %al
  431ac2:	0f 85 c8 04 00 00 	jne	1224 <runtime.sighandler+0x5a0>
  431ac8:	48 8b 44 24 60 	movq	96(%rsp), %rax
  431acd:	48 63 40 08 	movslq	8(%rax), %rax
  431ad1:	48 85 c0 	testq	%rax, %rax
  431ad4:	0f 85 aa 04 00 00 	jne	1194 <runtime.sighandler+0x594>
  431ada:	8b 84 24 80 00 00 00 	movl	128(%rsp), %eax
  431ae1:	89 c1 	movl	%eax, %ecx
  431ae3:	c1 e8 05 	shrl	$5, %eax
  431ae6:	48 83 f8 03 	cmpq	$3, %rax
  431aea:	0f 83 89 05 00 00 	jae	1417 <runtime.sighandler+0x689>
  431af0:	48 8d 15 49 20 09 00 	leaq	598089(%rip), %rdx
  431af7:	48 8d 44 82 20 	leaq	32(%rdx,%rax,4), %rax
  431afc:	8b 00 	movl	(%rax), %eax
  431afe:	0f a3 c8 	btl	%ecx, %eax
  431b01:	0f 82 73 04 00 00 	jb	1139 <runtime.sighandler+0x58a>
  431b07:	8b 44 24 2c 	movl	44(%rsp), %eax
  431b0b:	0f ba e0 01 	btl	$1, %eax
  431b0f:	0f 82 4d 04 00 00 	jb	1101 <runtime.sighandler+0x572>
  431b15:	0f ba e0 02 	btl	$2, %eax
  431b19:	0f 83 39 04 00 00 	jae	1081 <runtime.sighandler+0x568>
  431b1f:	48 8b 44 24 50 	movq	80(%rsp), %rax
  431b24:	48 8b 50 30 	movq	48(%rax), %rdx
  431b28:	c7 82 ec 00 00 00 01 00 00 00 	movl	$1, 236(%rdx)
  431b32:	48 8b 50 30 	movq	48(%rax), %rdx
  431b36:	48 8d 9a c8 00 00 00 	leaq	200(%rdx), %rbx
  431b3d:	84 03 	testb	%al, (%rbx)
  431b3f:	48 8b 9c 24 98 00 00 00 	movq	152(%rsp), %rbx
  431b47:	48 89 de 	movq	%rbx, %rsi
  431b4a:	48 89 9a c8 00 00 00 	movq	%rbx, 200(%rdx)
  431b51:	8b 15 6d 1d 09 00 	movl	597357(%rip), %edx
  431b57:	85 d2 	testl	%edx, %edx
  431b59:	0f 84 d8 03 00 00 	je	984 <runtime.sighandler+0x547>
  431b5f:	83 f9 41 	cmpl	$65, %ecx
  431b62:	0f 83 92 03 00 00 	jae	914 <runtime.sighandler+0x50a>
  431b68:	48 83 f9 41 	cmpq	$65, %rcx
  431b6c:	0f 83 00 05 00 00 	jae	1280 <runtime.sighandler+0x682>
  431b72:	48 8d 04 49 	leaq	(%rcx,%rcx,2), %rax
  431b76:	48 8d 0d 03 44 07 00 	leaq	476163(%rip), %rcx
  431b7d:	48 8b 54 c1 10 	movq	16(%rcx,%rax,8), %rdx
  431b82:	48 89 54 24 48 	movq	%rdx, 72(%rsp)
  431b87:	48 8b 44 c1 08 	movq	8(%rcx,%rax,8), %rax
  431b8c:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  431b91:	e8 6a ff fe ff 	callq	-65686 <runtime.printlock>
  431b96:	48 8b 44 24 58 	movq	88(%rsp), %rax
  431b9b:	48 89 04 24 	movq	%rax, (%rsp)
  431b9f:	48 8b 44 24 48 	movq	72(%rsp), %rax
  431ba4:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  431ba9:	e8 92 08 ff ff 	callq	-63342 <runtime.printstring>
  431bae:	e8 dd 01 ff ff 	callq	-65059 <runtime.printnl>
  431bb3:	e8 c8 ff fe ff 	callq	-65592 <runtime.printunlock>
  431bb8:	48 8b 44 24 50 	movq	80(%rsp), %rax
  431bbd:	48 8b 48 30 	movq	48(%rax), %rcx
  431bc1:	48 8b 54 24 68 	movq	104(%rsp), %rdx
  431bc6:	48 8d 5a 28 	leaq	40(%rdx), %rbx
  431bca:	84 03 	testb	%al, (%rbx)
  431bcc:	48 8b 5c 24 60 	movq	96(%rsp), %rbx
  431bd1:	48 8b 89 e0 00 00 00 	movq	224(%rcx), %rcx
  431bd8:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  431bdd:	48 8b 92 a8 00 00 00 	movq	168(%rdx), %rdx
  431be4:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  431be9:	48 63 5b 08 	movslq	8(%rbx), %rbx
  431bed:	48 89 5c 24 38 	movq	%rbx, 56(%rsp)
  431bf2:	e8 09 ff fe ff 	callq	-65783 <runtime.printlock>
  431bf7:	48 8d 05 a4 80 03 00 	leaq	229540(%rip), %rax
  431bfe:	48 89 04 24 	movq	%rax, (%rsp)
  431c02:	48 c7 44 24 08 03 00 00 00 	movq	$3, 8(%rsp)
  431c0b:	e8 30 08 ff ff 	callq	-63440 <runtime.printstring>
  431c10:	48 8b 44 24 30 	movq	48(%rsp), %rax
  431c15:	48 89 04 24 	movq	%rax, (%rsp)
  431c19:	e8 d2 06 ff ff 	callq	-63790 <runtime.printhex>
  431c1e:	48 8d 05 71 80 03 00 	leaq	229489(%rip), %rax
  431c25:	48 89 04 24 	movq	%rax, (%rsp)
  431c29:	48 c7 44 24 08 03 00 00 00 	movq	$3, 8(%rsp)
  431c32:	e8 09 08 ff ff 	callq	-63479 <runtime.printstring>
  431c37:	48 8b 44 24 40 	movq	64(%rsp), %rax
  431c3c:	48 89 04 24 	movq	%rax, (%rsp)
  431c40:	e8 3b 06 ff ff 	callq	-63941 <runtime.printint>
  431c45:	48 8d 05 5f 84 03 00 	leaq	230495(%rip), %rax
  431c4c:	48 89 04 24 	movq	%rax, (%rsp)
  431c50:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  431c59:	e8 e2 07 ff ff 	callq	-63518 <runtime.printstring>
  431c5e:	48 8b 44 24 38 	movq	56(%rsp), %rax
  431c63:	48 89 04 24 	movq	%rax, (%rsp)
  431c67:	e8 04 05 ff ff 	callq	-64252 <runtime.printuint>
  431c6c:	e8 1f 01 ff ff 	callq	-65249 <runtime.printnl>
  431c71:	e8 0a ff fe ff 	callq	-65782 <runtime.printunlock>
  431c76:	48 8b 44 24 50 	movq	80(%rsp), %rax
  431c7b:	48 8b 48 30 	movq	48(%rax), %rcx
  431c7f:	48 8b 91 68 01 00 00 	movq	360(%rcx), %rdx
  431c86:	48 85 d2 	testq	%rdx, %rdx
  431c89:	0f 84 5e 02 00 00 	je	606 <runtime.sighandler+0x4fd>
  431c8f:	8b 91 38 01 00 00 	movl	312(%rcx), %edx
  431c95:	85 d2 	testl	%edx, %edx
  431c97:	0f 8e 43 02 00 00 	jle	579 <runtime.sighandler+0x4f0>
  431c9d:	48 8b 09 	movq	(%rcx), %rcx
  431ca0:	48 8b 94 24 98 00 00 00 	movq	152(%rsp), %rdx
  431ca8:	48 39 ca 	cmpq	%rcx, %rdx
  431cab:	0f 84 f7 01 00 00 	je	503 <runtime.sighandler+0x4b8>
  431cb1:	48 89 94 24 98 00 00 00 	movq	%rdx, 152(%rsp)
  431cb9:	e8 42 fe fe ff 	callq	-65982 <runtime.printlock>
  431cbe:	e8 cd 00 ff ff 	callq	-65331 <runtime.printnl>
  431cc3:	e8 b8 fe fe ff 	callq	-65864 <runtime.printunlock>
  431cc8:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  431cd1:	8b 0d 31 33 07 00 	movl	471857(%rip), %ecx
  431cd7:	48 8b 40 30 	movq	48(%rax), %rax
  431cdb:	0f b6 80 29 01 00 00 	movzbl	297(%rax), %eax
  431ce2:	84 c0 	testb	%al, %al
  431ce4:	0f 84 b4 01 00 00 	je	436 <runtime.sighandler+0x4ae>
  431cea:	0f b6 c0 	movzbl	%al, %eax
  431ced:	85 c0 	testl	%eax, %eax
  431cef:	0f 8f 84 00 00 00 	jg	132 <runtime.sighandler+0x389>
  431cf5:	0f ba e1 00 	btl	$0, %ecx
  431cf9:	73 2b 	jae	43 <runtime.sighandler+0x336>
  431cfb:	8b 05 c3 1b 09 00 	movl	596931(%rip), %eax
  431d01:	ff c0 	incl	%eax
  431d03:	89 05 bb 1b 09 00 	movl	%eax, 596923(%rip)
  431d09:	48 8b 0d 38 5c 07 00 	movq	482360(%rip), %rcx
  431d10:	48 2b 0d 41 5c 07 00 	subq	482369(%rip), %rcx
  431d17:	2b 0d ab 1b 09 00 	subl	596907(%rip), %ecx
  431d1d:	39 c8 	cmpl	%ecx, %eax
  431d1f:	7c 1b 	jl	27 <runtime.sighandler+0x34c>
  431d21:	e8 7a 0f 00 00 	callq	3962 <runtime.crash>
  431d26:	c7 04 24 02 00 00 00 	movl	$2, (%rsp)
  431d2d:	e8 9e 5a 01 00 	callq	88734 <runtime.exit>
  431d32:	48 8b 6c 24 70 	movq	112(%rsp), %rbp
  431d37:	48 83 c4 78 	addq	$120, %rsp
  431d3b:	c3 	retq
  431d3c:	e8 bf fd fe ff 	callq	-66113 <runtime.printlock>
  431d41:	48 8d 05 b7 82 03 00 	leaq	230071(%rip), %rax
  431d48:	48 89 04 24 	movq	%rax, (%rsp)
  431d4c:	48 c7 44 24 08 08 00 00 00 	movq	$8, 8(%rsp)
  431d55:	e8 e6 06 ff ff 	callq	-63770 <runtime.printstring>
  431d5a:	e8 21 fe fe ff 	callq	-66015 <runtime.printunlock>
  431d5f:	c7 04 24 03 00 00 00 	movl	$3, (%rsp)
  431d66:	e8 d5 5b 01 00 	callq	89045 <runtime.raiseproc>
  431d6b:	c7 04 24 40 4b 4c 00 	movl	$5000000, (%rsp)
  431d72:	e8 39 5b 01 00 	callq	88889 <runtime.usleep>
  431d77:	eb a8 	jmp	-88 <runtime.sighandler+0x331>
  431d79:	89 4c 24 28 	movl	%ecx, 40(%rsp)
  431d7d:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  431d85:	48 89 04 24 	movq	%rax, (%rsp)
  431d89:	e8 92 bf 00 00 	callq	49042 <runtime.goroutineheader>
  431d8e:	48 8b 44 24 68 	movq	104(%rsp), %rax
  431d93:	48 8d 48 28 	leaq	40(%rax), %rcx
  431d97:	84 01 	testb	%al, (%rcx)
  431d99:	48 8b 88 a8 00 00 00 	movq	168(%rax), %rcx
  431da0:	48 8b 80 a0 00 00 00 	movq	160(%rax), %rax
  431da7:	48 89 0c 24 	movq	%rcx, (%rsp)
  431dab:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  431db0:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  431db9:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  431dc1:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  431dc6:	e8 65 b8 00 00 	callq	47205 <runtime.tracebacktrap>
  431dcb:	8b 05 f3 1a 09 00 	movl	596723(%rip), %eax
  431dd1:	85 c0 	testl	%eax, %eax
  431dd3:	0f 8e b8 00 00 00 	jle	184 <runtime.sighandler+0x4a1>
  431dd9:	48 8b 44 24 50 	movq	80(%rsp), %rax
  431dde:	48 8b 48 30 	movq	48(%rax), %rcx
  431de2:	48 8b 89 c0 00 00 00 	movq	192(%rcx), %rcx
  431de9:	48 8b 94 24 98 00 00 00 	movq	152(%rsp), %rdx
  431df1:	48 39 ca 	cmpq	%rcx, %rdx
  431df4:	74 16 	je	22 <runtime.sighandler+0x41c>
  431df6:	48 85 c9 	testq	%rcx, %rcx
  431df9:	74 11 	je	17 <runtime.sighandler+0x41c>
  431dfb:	8b 89 90 00 00 00 	movl	144(%rcx), %ecx
  431e01:	81 e1 ff ef ff ff 	andl	$4294963199, %ecx
  431e07:	83 f9 02 	cmpl	$2, %ecx
  431e0a:	74 3b 	je	59 <runtime.sighandler+0x457>
  431e0c:	8b 05 b2 1a 09 00 	movl	596658(%rip), %eax
  431e12:	85 c0 	testl	%eax, %eax
  431e14:	74 17 	je	23 <runtime.sighandler+0x43d>
  431e16:	48 8d 44 24 60 	leaq	96(%rsp), %rax
  431e1b:	48 89 04 24 	movq	%rax, (%rsp)
  431e1f:	e8 5c f3 ff ff 	callq	-3236 <runtime.dumpregs>
  431e24:	8b 4c 24 28 	movl	40(%rsp), %ecx
  431e28:	e9 c8 fe ff ff 	jmp	-312 <runtime.sighandler+0x305>
  431e2d:	48 89 14 24 	movq	%rdx, (%rsp)
  431e31:	e8 8a c1 00 00 	callq	49546 <runtime.tracebackothers>
  431e36:	e8 c5 fc fe ff 	callq	-66363 <runtime.printlock>
  431e3b:	e8 50 ff fe ff 	callq	-65712 <runtime.printnl>
  431e40:	e8 3b fd fe ff 	callq	-66245 <runtime.printunlock>
  431e45:	eb cf 	jmp	-49 <runtime.sighandler+0x426>
  431e47:	48 8b 48 30 	movq	48(%rax), %rcx
  431e4b:	48 8b 89 c0 00 00 00 	movq	192(%rcx), %rcx
  431e52:	48 89 0c 24 	movq	%rcx, (%rsp)
  431e56:	e8 c5 be 00 00 	callq	48837 <runtime.goroutineheader>
  431e5b:	48 8b 44 24 50 	movq	80(%rsp), %rax
  431e60:	48 8b 40 30 	movq	48(%rax), %rax
  431e64:	48 8b 80 c0 00 00 00 	movq	192(%rax), %rax
  431e6b:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  431e70:	48 c7 04 24 ff ff ff ff 	movq	$-1, (%rsp)
  431e78:	48 c7 44 24 08 ff ff ff ff 	movq	$-1, 8(%rsp)
  431e81:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  431e8a:	e8 31 b7 00 00 	callq	46897 <runtime.traceback>
  431e8f:	eb 85 	jmp	-123 <runtime.sighandler+0x426>
  431e91:	48 8b 94 24 98 00 00 00 	movq	152(%rsp), %rdx
  431e99:	e9 6e ff ff ff 	jmp	-146 <runtime.sighandler+0x41c>
  431e9e:	89 c8 	movl	%ecx, %eax
  431ea0:	c1 e8 02 	shrl	$2, %eax
  431ea3:	e9 45 fe ff ff 	jmp	-443 <runtime.sighandler+0x2fd>
  431ea8:	e8 53 fc fe ff 	callq	-66477 <runtime.printlock>
  431ead:	48 8d 05 4a b0 03 00 	leaq	241738(%rip), %rax
  431eb4:	48 89 04 24 	movq	%rax, (%rsp)
  431eb8:	48 c7 44 24 08 24 00 00 00 	movq	$36, 8(%rsp)
  431ec1:	e8 7a 05 ff ff 	callq	-64134 <runtime.printstring>
  431ec6:	e8 b5 fc fe ff 	callq	-66379 <runtime.printunlock>
  431ecb:	48 8b 44 24 50 	movq	80(%rsp), %rax
  431ed0:	48 8b 48 30 	movq	48(%rax), %rcx
  431ed4:	48 8b 91 68 01 00 00 	movq	360(%rcx), %rdx
  431edb:	e9 d1 fd ff ff 	jmp	-559 <runtime.sighandler+0x2c1>
  431ee0:	48 8b 94 24 98 00 00 00 	movq	152(%rsp), %rdx
  431ee8:	e9 c4 fd ff ff 	jmp	-572 <runtime.sighandler+0x2c1>
  431eed:	48 8b 94 24 98 00 00 00 	movq	152(%rsp), %rdx
  431ef5:	e9 b7 fd ff ff 	jmp	-585 <runtime.sighandler+0x2c1>
  431efa:	e8 01 fc fe ff 	callq	-66559 <runtime.printlock>
  431eff:	48 8d 05 a1 7f 03 00 	leaq	229281(%rip), %rax
  431f06:	48 89 04 24 	movq	%rax, (%rsp)
  431f0a:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  431f13:	e8 28 05 ff ff 	callq	-64216 <runtime.printstring>
  431f18:	8b 84 24 80 00 00 00 	movl	128(%rsp), %eax
  431f1f:	48 89 04 24 	movq	%rax, (%rsp)
  431f23:	e8 48 02 ff ff 	callq	-64952 <runtime.printuint>
  431f28:	e8 63 fe fe ff 	callq	-65949 <runtime.printnl>
  431f2d:	e8 4e fc fe ff 	callq	-66482 <runtime.printunlock>
  431f32:	e9 81 fc ff ff 	jmp	-895 <runtime.sighandler+0x1c8>
  431f37:	e8 04 f2 fe ff 	callq	-69116 <runtime.startpanic>
  431f3c:	8b 8c 24 80 00 00 00 	movl	128(%rsp), %ecx
  431f43:	83 f9 41 	cmpl	$65, %ecx
  431f46:	48 8b 44 24 50 	movq	80(%rsp), %rax
  431f4b:	48 8b b4 24 98 00 00 00 	movq	152(%rsp), %rsi
  431f53:	e9 0a fc ff ff 	jmp	-1014 <runtime.sighandler+0x172>
  431f58:	48 8b 6c 24 70 	movq	112(%rsp), %rbp
  431f5d:	48 83 c4 78 	addq	$120, %rsp
  431f61:	c3 	retq
  431f62:	89 0c 24 	movl	%ecx, (%rsp)
  431f65:	e8 56 0b 00 00 	callq	2902 <runtime.dieFromSignal>
  431f6a:	8b 44 24 2c 	movl	44(%rsp), %eax
  431f6e:	8b 8c 24 80 00 00 00 	movl	128(%rsp), %ecx
  431f75:	e9 9b fb ff ff 	jmp	-1125 <runtime.sighandler+0x125>
  431f7a:	48 8b 6c 24 70 	movq	112(%rsp), %rbp
  431f7f:	48 83 c4 78 	addq	$120, %rsp
  431f83:	c3 	retq
  431f84:	8b 8c 24 80 00 00 00 	movl	128(%rsp), %ecx
  431f8b:	e9 77 fb ff ff 	jmp	-1161 <runtime.sighandler+0x117>
  431f90:	48 8b 6c 24 70 	movq	112(%rsp), %rbp
  431f95:	48 83 c4 78 	addq	$120, %rsp
  431f99:	c3 	retq
  431f9a:	0f ba e1 00 	btl	$0, %ecx
  431f9e:	0f 82 0f fb ff ff 	jb	-1265 <runtime.sighandler+0xc3>
  431fa4:	e9 1f fb ff ff 	jmp	-1249 <runtime.sighandler+0xd8>
  431fa9:	89 96 e8 00 00 00 	movl	%edx, 232(%rsi)
  431faf:	48 8b 44 24 60 	movq	96(%rsp), %rax
  431fb4:	48 63 40 08 	movslq	8(%rax), %rax
  431fb8:	48 89 86 08 01 00 00 	movq	%rax, 264(%rsi)
  431fbf:	48 8b 44 24 60 	movq	96(%rsp), %rax
  431fc4:	48 8b 40 10 	movq	16(%rax), %rax
  431fc8:	48 89 86 10 01 00 00 	movq	%rax, 272(%rsi)
  431fcf:	48 8b 44 24 68 	movq	104(%rsp), %rax
  431fd4:	48 8d 48 28 	leaq	40(%rax), %rcx
  431fd8:	84 01 	testb	%al, (%rcx)
  431fda:	48 8b 80 a8 00 00 00 	movq	168(%rax), %rax
  431fe1:	48 89 86 18 01 00 00 	movq	%rax, 280(%rsi)
  431fe8:	48 8d 44 24 60 	leaq	96(%rsp), %rax
  431fed:	48 89 04 24 	movq	%rax, (%rsp)
  431ff1:	89 54 24 08 	movl	%edx, 8(%rsp)
  431ff5:	48 89 74 24 10 	movq	%rsi, 16(%rsp)
  431ffa:	e8 c1 f8 ff ff 	callq	-1855 <runtime.(*sigctxt).preparePanic>
  431fff:	48 8b 6c 24 70 	movq	112(%rsp), %rbp
  432004:	48 83 c4 78 	addq	$120, %rsp
  432008:	c3 	retq
  432009:	48 8b b4 24 98 00 00 00 	movq	152(%rsp), %rsi
  432011:	e9 73 fa ff ff 	jmp	-1421 <runtime.sighandler+0x99>
  432016:	48 8d 1d 63 3f 07 00 	leaq	474979(%rip), %rbx
  43201d:	b9 04 00 00 00 	movl	$4, %ecx
  432022:	e9 3e fa ff ff 	jmp	-1474 <runtime.sighandler+0x75>
  432027:	48 8d 51 28 	leaq	40(%rcx), %rdx
  43202b:	84 02 	testb	%al, (%rdx)
  43202d:	48 8b 40 30 	movq	48(%rax), %rax
  432031:	48 8b 91 a8 00 00 00 	movq	168(%rcx), %rdx
  432038:	48 8b 89 a0 00 00 00 	movq	160(%rcx), %rcx
  43203f:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  432044:	48 89 14 24 	movq	%rdx, (%rsp)
  432048:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  43204d:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  432056:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  43205e:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  432063:	e8 c8 8e ff ff 	callq	-28984 <runtime.sigprof>
  432068:	48 8b 6c 24 70 	movq	112(%rsp), %rbp
  43206d:	48 83 c4 78 	addq	$120, %rsp
  432071:	c3 	retq
  432072:	e8 c9 d9 fe ff 	callq	-75319 <runtime.panicindex>
  432077:	0f 0b 	ud2
  432079:	e8 c2 d9 fe ff 	callq	-75326 <runtime.panicindex>
  43207e:	0f 0b 	ud2
  432080:	e8 bb d9 fe ff 	callq	-75333 <runtime.panicindex>
  432085:	0f 0b 	ud2
  432087:	e8 e4 24 01 00 	callq	74980 <runtime.morestack_noctxt>
  43208c:	e9 5f f9 ff ff 	jmp	-1697 <runtime.sighandler>
  432091:	cc 	int3
  432092:	cc 	int3
  432093:	cc 	int3
  432094:	cc 	int3
  432095:	cc 	int3
  432096:	cc 	int3
  432097:	cc 	int3
  432098:	cc 	int3
  432099:	cc 	int3
  43209a:	cc 	int3
  43209b:	cc 	int3
  43209c:	cc 	int3
  43209d:	cc 	int3
  43209e:	cc 	int3
  43209f:	cc 	int3

runtime.init.5:
  4320a0:	c3 	retq
  4320a1:	cc 	int3
  4320a2:	cc 	int3
  4320a3:	cc 	int3
  4320a4:	cc 	int3
  4320a5:	cc 	int3
  4320a6:	cc 	int3
  4320a7:	cc 	int3
  4320a8:	cc 	int3
  4320a9:	cc 	int3
  4320aa:	cc 	int3
  4320ab:	cc 	int3
  4320ac:	cc 	int3
  4320ad:	cc 	int3
  4320ae:	cc 	int3
  4320af:	cc 	int3

runtime.initsig:
  4320b0:	48 83 ec 38 	subq	$56, %rsp
  4320b4:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  4320b9:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  4320be:	0f 57 c0 	xorps	%xmm0, %xmm0
  4320c1:	0f 11 44 24 20 	movups	%xmm0, 32(%rsp)
  4320c6:	0f b6 44 24 40 	movzbl	64(%rsp), %eax
  4320cb:	84 c0 	testb	%al, %al
  4320cd:	0f 84 9a 01 00 00 	je	410 <runtime.initsig+0x1bd>
  4320d3:	0f b6 0d d1 17 09 00 	movzbl	595921(%rip), %ecx
  4320da:	84 c9 	testb	%cl, %cl
  4320dc:	0f 84 75 01 00 00 	je	373 <runtime.initsig+0x1a7>
  4320e2:	84 c0 	testb	%al, %al
  4320e4:	0f 84 63 01 00 00 	je	355 <runtime.initsig+0x19d>
  4320ea:	31 c0 	xorl	%eax, %eax
  4320ec:	eb 02 	jmp	2 <runtime.initsig+0x40>
  4320ee:	ff c0 	incl	%eax
  4320f0:	83 f8 41 	cmpl	$65, %eax
  4320f3:	0f 83 4a 01 00 00 	jae	330 <runtime.initsig+0x193>
  4320f9:	48 83 f8 41 	cmpq	$65, %rax
  4320fd:	0f 83 76 01 00 00 	jae	374 <runtime.initsig+0x1c9>
  432103:	48 8d 0c 40 	leaq	(%rax,%rax,2), %rcx
  432107:	48 8d 15 72 3e 07 00 	leaq	474738(%rip), %rdx
  43210e:	8b 1c ca 	movl	(%rdx,%rcx,8), %ebx
  432111:	85 db 	testl	%ebx, %ebx
  432113:	74 d9 	je	-39 <runtime.initsig+0x3e>
  432115:	0f ba e3 04 	btl	$4, %ebx
  432119:	72 d3 	jb	-45 <runtime.initsig+0x3e>
  43211b:	89 44 24 14 	movl	%eax, 20(%rsp)
  43211f:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  432124:	89 04 24 	movl	%eax, (%rsp)
  432127:	e8 e4 d7 fe ff 	callq	-75804 <runtime.getsig>
  43212c:	48 8b 44 24 08 	movq	8(%rsp), %rax
  432131:	8b 4c 24 14 	movl	20(%rsp), %ecx
  432135:	48 8d 15 a4 1f 09 00 	leaq	597924(%rip), %rdx
  43213c:	48 89 04 ca 	movq	%rax, (%rdx,%rcx,8)
  432140:	48 8d 04 ca 	leaq	(%rdx,%rcx,8), %rax
  432144:	8d 59 ff 	leal	-1(%rcx), %ebx
  432147:	83 fb 01 	cmpl	$1, %ebx
  43214a:	0f 87 a1 00 00 00 	ja	161 <runtime.initsig+0x141>
  432150:	48 8b 00 	movq	(%rax), %rax
  432153:	48 83 f8 01 	cmpq	$1, %rax
  432157:	0f 85 94 00 00 00 	jne	148 <runtime.initsig+0x141>
  43215d:	31 c0 	xorl	%eax, %eax
  43215f:	84 c0 	testb	%al, %al
  432161:	75 32 	jne	50 <runtime.initsig+0xe5>
  432163:	48 8b 04 ca 	movq	(%rdx,%rcx,8), %rax
  432167:	48 85 c0 	testq	%rax, %rax
  43216a:	74 06 	je	6 <runtime.initsig+0xc2>
  43216c:	48 83 f8 01 	cmpq	$1, %rax
  432170:	75 0e 	jne	14 <runtime.initsig+0xd0>
  432172:	89 c8 	movl	%ecx, %eax
  432174:	48 8d 15 05 3e 07 00 	leaq	474629(%rip), %rdx
  43217b:	e9 6e ff ff ff 	jmp	-146 <runtime.initsig+0x3e>
  432180:	89 0c 24 	movl	%ecx, (%rsp)
  432183:	e8 e8 d6 fe ff 	callq	-76056 <runtime.setsigstack>
  432188:	8b 4c 24 14 	movl	20(%rsp), %ecx
  43218c:	48 8d 15 4d 1f 09 00 	leaq	597837(%rip), %rdx
  432193:	eb dd 	jmp	-35 <runtime.initsig+0xc2>
  432195:	48 8d 05 24 1c 09 00 	leaq	597028(%rip), %rax
  43219c:	c7 04 88 01 00 00 00 	movl	$1, (%rax,%rcx,4)
  4321a3:	48 8d 15 76 87 02 00 	leaq	165750(%rip), %rdx
  4321aa:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  4321af:	48 8d 1d 22 c0 03 00 	leaq	245794(%rip), %rbx
  4321b6:	48 89 5c 24 28 	movq	%rbx, 40(%rsp)
  4321bb:	be 08 00 00 00 	movl	$8, %esi
  4321c0:	48 8d 7c 24 20 	leaq	32(%rsp), %rdi
  4321c5:	48 8b 3c 37 	movq	(%rdi,%rsi), %rdi
  4321c9:	4c 8d 44 24 28 	leaq	40(%rsp), %r8
  4321ce:	41 84 00 	testb	%al, (%r8)
  4321d1:	48 8b 3f 	movq	(%rdi), %rdi
  4321d4:	89 0c 24 	movl	%ecx, (%rsp)
  4321d7:	48 89 7c 24 08 	movq	%rdi, 8(%rsp)
  4321dc:	e8 1f d5 fe ff 	callq	-76513 <runtime.setsig>
  4321e1:	8b 44 24 14 	movl	20(%rsp), %eax
  4321e5:	48 8d 15 94 3d 07 00 	leaq	474516(%rip), %rdx
  4321ec:	e9 fd fe ff ff 	jmp	-259 <runtime.initsig+0x3e>
  4321f1:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4321f6:	48 8d 1d 83 3d 07 00 	leaq	474499(%rip), %rbx
  4321fd:	8b 04 c3 	movl	(%rbx,%rax,8), %eax
  432200:	0f ba e0 06 	btl	$6, %eax
  432204:	73 07 	jae	7 <runtime.initsig+0x15d>
  432206:	31 c0 	xorl	%eax, %eax
  432208:	e9 52 ff ff ff 	jmp	-174 <runtime.initsig+0xaf>
  43220d:	0f b6 35 97 16 09 00 	movzbl	595607(%rip), %esi
  432214:	40 84 f6 	testb	%sil, %sil
  432217:	74 1c 	je	28 <runtime.initsig+0x185>
  432219:	0f ba e0 03 	btl	$3, %eax
  43221d:	72 0c 	jb	12 <runtime.initsig+0x17b>
  43221f:	83 f9 0d 	cmpl	$13, %ecx
  432222:	74 07 	je	7 <runtime.initsig+0x17b>
  432224:	31 c0 	xorl	%eax, %eax
  432226:	e9 34 ff ff ff 	jmp	-204 <runtime.initsig+0xaf>
  43222b:	b8 01 00 00 00 	movl	$1, %eax
  432230:	e9 2a ff ff ff 	jmp	-214 <runtime.initsig+0xaf>
  432235:	0f b6 35 71 16 09 00 	movzbl	595569(%rip), %esi
  43223c:	40 84 f6 	testb	%sil, %sil
  43223f:	75 d8 	jne	-40 <runtime.initsig+0x169>
  432241:	eb e8 	jmp	-24 <runtime.initsig+0x17b>
  432243:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  432248:	48 83 c4 38 	addq	$56, %rsp
  43224c:	c3 	retq
  43224d:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  432252:	48 83 c4 38 	addq	$56, %rsp
  432256:	c3 	retq
  432257:	0f b6 0d 4f 16 09 00 	movzbl	595535(%rip), %ecx
  43225e:	84 c9 	testb	%cl, %cl
  432260:	0f 84 84 fe ff ff 	je	-380 <runtime.initsig+0x3a>
  432266:	84 c0 	testb	%al, %al
  432268:	e9 77 fe ff ff 	jmp	-393 <runtime.initsig+0x34>
  43226d:	c6 05 3c 16 09 00 01 	movb	$1, 595516(%rip)
  432274:	e9 5a fe ff ff 	jmp	-422 <runtime.initsig+0x23>
  432279:	e8 c2 d7 fe ff 	callq	-75838 <runtime.panicindex>
  43227e:	0f 0b 	ud2

runtime.setThreadCPUProfiler:
  432280:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  432289:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43228d:	0f 86 bf 00 00 00 	jbe	191 <runtime.setThreadCPUProfiler+0xd2>
  432293:	48 83 ec 40 	subq	$64, %rsp
  432297:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  43229c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  4322a1:	0f 57 c0 	xorps	%xmm0, %xmm0
  4322a4:	0f 11 44 24 18 	movups	%xmm0, 24(%rsp)
  4322a9:	0f 11 44 24 28 	movups	%xmm0, 40(%rsp)
  4322ae:	8b 4c 24 48 	movl	72(%rsp), %ecx
  4322b2:	85 c9 	testl	%ecx, %ecx
  4322b4:	75 40 	jne	64 <runtime.setThreadCPUProfiler+0x76>
  4322b6:	c7 04 24 02 00 00 00 	movl	$2, (%rsp)
  4322bd:	48 8d 44 24 18 	leaq	24(%rsp), %rax
  4322c2:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4322c7:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  4322d0:	e8 8b 56 01 00 	callq	87691 <runtime.setitimer>
  4322d5:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4322de:	48 8b 40 30 	movq	48(%rax), %rax
  4322e2:	8b 4c 24 48 	movl	72(%rsp), %ecx
  4322e6:	89 88 0c 01 00 00 	movl	%ecx, 268(%rax)
  4322ec:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  4322f1:	48 83 c4 40 	addq	$64, %rsp
  4322f5:	c3 	retq
  4322f6:	48 c7 44 24 18 00 00 00 00 	movq	$0, 24(%rsp)
  4322ff:	48 8d 54 24 18 	leaq	24(%rsp), %rdx
  432304:	84 02 	testb	%al, (%rdx)
  432306:	b8 40 42 0f 00 	movl	$1000000, %eax
  43230b:	83 f9 ff 	cmpl	$-1, %ecx
  43230e:	74 05 	je	5 <runtime.setThreadCPUProfiler+0x95>
  432310:	99 	cltd
  432311:	f7 f9 	idivl	%ecx
  432313:	eb 05 	jmp	5 <runtime.setThreadCPUProfiler+0x9a>
  432315:	48 f7 d8 	negq	%rax
  432318:	31 d2 	xorl	%edx, %edx
  43231a:	48 63 d0 	movslq	%eax, %rdx
  43231d:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  432322:	48 8b 5c 24 18 	movq	24(%rsp), %rbx
  432327:	48 89 5c 24 28 	movq	%rbx, 40(%rsp)
  43232c:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  432331:	c7 04 24 02 00 00 00 	movl	$2, (%rsp)
  432338:	48 8d 54 24 18 	leaq	24(%rsp), %rdx
  43233d:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  432342:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  43234b:	e8 10 56 01 00 	callq	87568 <runtime.setitimer>
  432350:	eb 83 	jmp	-125 <runtime.setThreadCPUProfiler+0x55>
  432352:	e8 19 22 01 00 	callq	74265 <runtime.morestack_noctxt>
  432357:	e9 24 ff ff ff 	jmp	-220 <runtime.setThreadCPUProfiler>
  43235c:	cc 	int3
  43235d:	cc 	int3
  43235e:	cc 	int3
  43235f:	cc 	int3

runtime.sigtrampgo:
  432360:	48 81 ec a8 00 00 00 	subq	$168, %rsp
  432367:	48 89 ac 24 a0 00 00 00 	movq	%rbp, 160(%rsp)
  43236f:	48 8d ac 24 a0 00 00 00 	leaq	160(%rsp), %rbp
  432377:	0f 57 c0 	xorps	%xmm0, %xmm0
  43237a:	0f 11 44 24 70 	movups	%xmm0, 112(%rsp)
  43237f:	0f 11 84 24 80 00 00 00 	movups	%xmm0, 128(%rsp)
  432387:	0f 11 84 24 90 00 00 00 	movups	%xmm0, 144(%rsp)
  43238f:	8b 84 24 b0 00 00 00 	movl	176(%rsp), %eax
  432396:	89 04 24 	movl	%eax, (%rsp)
  432399:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  4323a1:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4323a6:	48 8b 8c 24 c0 00 00 00 	movq	192(%rsp), %rcx
  4323ae:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  4323b3:	e8 38 0b 00 00 	callq	2872 <runtime.sigfwdgo>
  4323b8:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  4323bd:	84 c0 	testb	%al, %al
  4323bf:	0f 85 43 04 00 00 	jne	1091 <runtime.sigtrampgo+0x4a8>
  4323c5:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4323ce:	48 85 c0 	testq	%rax, %rax
  4323d1:	0f 84 c2 03 00 00 	je	962 <runtime.sigtrampgo+0x439>
  4323d7:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  4323dc:	48 c7 44 24 30 00 00 00 00 	movq	$0, 48(%rsp)
  4323e5:	0f 57 c0 	xorps	%xmm0, %xmm0
  4323e8:	0f 11 44 24 38 	movups	%xmm0, 56(%rsp)
  4323ed:	0f 11 44 24 48 	movups	%xmm0, 72(%rsp)
  4323f2:	48 8b 48 30 	movq	48(%rax), %rcx
  4323f6:	48 8b 51 50 	movq	80(%rcx), %rdx
  4323fa:	48 8d 9c 24 b0 00 00 00 	leaq	176(%rsp), %rbx
  432402:	48 8b 32 	movq	(%rdx), %rsi
  432405:	48 39 f3 	cmpq	%rsi, %rbx
  432408:	0f 83 77 03 00 00 	jae	887 <runtime.sigtrampgo+0x425>
  43240e:	48 89 5c 24 28 	movq	%rbx, 40(%rsp)
  432413:	48 8b 09 	movq	(%rcx), %rcx
  432416:	48 8b 11 	movq	(%rcx), %rdx
  432419:	48 39 d3 	cmpq	%rdx, %rbx
  43241c:	0f 82 da 01 00 00 	jb	474 <runtime.sigtrampgo+0x29c>
  432422:	48 8b 49 08 	movq	8(%rcx), %rcx
  432426:	48 39 cb 	cmpq	%rcx, %rbx
  432429:	0f 83 cd 01 00 00 	jae	461 <runtime.sigtrampgo+0x29c>
  43242f:	48 c7 44 24 70 00 00 00 00 	movq	$0, 112(%rsp)
  432438:	0f 11 44 24 78 	movups	%xmm0, 120(%rsp)
  43243d:	48 8b 48 30 	movq	48(%rax), %rcx
  432441:	48 8b 09 	movq	(%rcx), %rcx
  432444:	48 8b 51 08 	movq	8(%rcx), %rdx
  432448:	48 2b 11 	subq	(%rcx), %rdx
  43244b:	48 89 94 24 80 00 00 00 	movq	%rdx, 128(%rsp)
  432453:	48 8b 48 30 	movq	48(%rax), %rcx
  432457:	48 8b 09 	movq	(%rcx), %rcx
  43245a:	48 8d 54 24 70 	leaq	112(%rsp), %rdx
  43245f:	84 02 	testb	%al, (%rdx)
  432461:	48 8b 09 	movq	(%rcx), %rcx
  432464:	48 89 4c 24 70 	movq	%rcx, 112(%rsp)
  432469:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  432472:	48 8b 51 30 	movq	48(%rcx), %rdx
  432476:	48 8b 52 50 	movq	80(%rdx), %rdx
  43247a:	48 8b 1a 	movq	(%rdx), %rbx
  43247d:	48 8b 52 08 	movq	8(%rdx), %rdx
  432481:	48 89 5c 24 30 	movq	%rbx, 48(%rsp)
  432486:	48 89 54 24 38 	movq	%rdx, 56(%rsp)
  43248b:	48 8b 51 30 	movq	48(%rcx), %rdx
  43248f:	48 8b 52 50 	movq	80(%rdx), %rdx
  432493:	48 8b 52 10 	movq	16(%rdx), %rdx
  432497:	48 89 54 24 40 	movq	%rdx, 64(%rsp)
  43249c:	48 8b 51 30 	movq	48(%rcx), %rdx
  4324a0:	48 8b 52 50 	movq	80(%rdx), %rdx
  4324a4:	48 8b 52 18 	movq	24(%rdx), %rdx
  4324a8:	48 89 54 24 48 	movq	%rdx, 72(%rsp)
  4324ad:	48 8b 51 30 	movq	48(%rcx), %rdx
  4324b1:	48 8b 52 50 	movq	80(%rdx), %rdx
  4324b5:	48 8b 92 80 00 00 00 	movq	128(%rdx), %rdx
  4324bc:	48 89 54 24 50 	movq	%rdx, 80(%rsp)
  4324c1:	48 8b 51 30 	movq	48(%rcx), %rdx
  4324c5:	48 8b 52 50 	movq	80(%rdx), %rdx
  4324c9:	48 8b 5c 24 70 	movq	112(%rsp), %rbx
  4324ce:	48 89 1a 	movq	%rbx, (%rdx)
  4324d1:	48 8b 51 30 	movq	48(%rcx), %rdx
  4324d5:	48 8b 52 50 	movq	80(%rdx), %rdx
  4324d9:	48 8b b4 24 80 00 00 00 	movq	128(%rsp), %rsi
  4324e1:	48 01 de 	addq	%rbx, %rsi
  4324e4:	48 89 72 08 	movq	%rsi, 8(%rdx)
  4324e8:	48 8b 51 30 	movq	48(%rcx), %rdx
  4324ec:	48 8b 52 50 	movq	80(%rdx), %rdx
  4324f0:	48 81 c3 70 03 00 00 	addq	$880, %rbx
  4324f7:	48 89 5a 10 	movq	%rbx, 16(%rdx)
  4324fb:	48 8b 49 30 	movq	48(%rcx), %rcx
  4324ff:	48 8b 49 50 	movq	80(%rcx), %rcx
  432503:	48 89 59 18 	movq	%rbx, 24(%rcx)
  432507:	48 8b 48 30 	movq	48(%rax), %rcx
  43250b:	48 8b 49 50 	movq	80(%rcx), %rcx
  43250f:	48 8d 94 24 b0 00 00 00 	leaq	176(%rsp), %rdx
  432517:	48 89 91 80 00 00 00 	movq	%rdx, 128(%rcx)
  43251e:	b9 01 00 00 00 	movl	$1, %ecx
  432523:	88 4c 24 27 	movb	%cl, 39(%rsp)
  432527:	48 8b 50 30 	movq	48(%rax), %rdx
  43252b:	48 8b 52 50 	movq	80(%rdx), %rdx
  43252f:	48 89 14 24 	movq	%rdx, (%rsp)
  432533:	e8 78 37 01 00 	callq	79736 <runtime.setg>
  432538:	48 8b 44 24 58 	movq	88(%rsp), %rax
  43253d:	48 8b 48 10 	movq	16(%rax), %rcx
  432541:	48 81 f9 2e fb ff ff 	cmpq	$-1234, %rcx
  432548:	0f 84 95 00 00 00 	je	149 <runtime.sigtrampgo+0x283>
  43254e:	8b 8c 24 b0 00 00 00 	movl	176(%rsp), %ecx
  432555:	89 0c 24 	movl	%ecx, (%rsp)
  432558:	48 8b 8c 24 b8 00 00 00 	movq	184(%rsp), %rcx
  432560:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  432565:	48 8b 8c 24 c0 00 00 00 	movq	192(%rsp), %rcx
  43256d:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  432572:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  432577:	e8 74 f4 ff ff 	callq	-2956 <runtime.sighandler>
  43257c:	48 8b 44 24 58 	movq	88(%rsp), %rax
  432581:	48 89 04 24 	movq	%rax, (%rsp)
  432585:	e8 26 37 01 00 	callq	79654 <runtime.setg>
  43258a:	0f b6 44 24 27 	movzbl	39(%rsp), %eax
  43258f:	84 c0 	testb	%al, %al
  432591:	74 40 	je	64 <runtime.sigtrampgo+0x273>
  432593:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  43259c:	48 8b 40 30 	movq	48(%rax), %rax
  4325a0:	48 8b 40 50 	movq	80(%rax), %rax
  4325a4:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  4325a9:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  4325ae:	48 89 10 	movq	%rdx, (%rax)
  4325b1:	48 89 48 08 	movq	%rcx, 8(%rax)
  4325b5:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  4325ba:	48 89 48 10 	movq	%rcx, 16(%rax)
  4325be:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  4325c3:	48 89 48 18 	movq	%rcx, 24(%rax)
  4325c7:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  4325cc:	48 89 88 80 00 00 00 	movq	%rcx, 128(%rax)
  4325d3:	48 8b ac 24 a0 00 00 00 	movq	160(%rsp), %rbp
  4325db:	48 81 c4 a8 00 00 00 	addq	$168, %rsp
  4325e2:	c3 	retq
  4325e3:	8b 84 24 b0 00 00 00 	movl	176(%rsp), %eax
  4325ea:	89 04 24 	movl	%eax, (%rsp)
  4325ed:	e8 0e 08 00 00 	callq	2062 <runtime.signalDuringFork>
  4325f2:	48 8b 44 24 58 	movq	88(%rsp), %rax
  4325f7:	e9 52 ff ff ff 	jmp	-174 <runtime.sigtrampgo+0x1ee>
  4325fc:	48 c7 84 24 88 00 00 00 00 00 00 00 	movq	$0, 136(%rsp)
  432608:	0f 11 84 24 90 00 00 00 	movups	%xmm0, 144(%rsp)
  432610:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  432618:	48 8d 84 24 88 00 00 00 	leaq	136(%rsp), %rax
  432620:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  432625:	e8 a6 58 01 00 	callq	88230 <runtime.sigaltstack>
  43262a:	8b 84 24 90 00 00 00 	movl	144(%rsp), %eax
  432631:	0f ba e0 01 	btl	$1, %eax
  432635:	0f 82 1b 01 00 00 	jb	283 <runtime.sigtrampgo+0x3f6>
  43263b:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  432643:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  432648:	48 39 c1 	cmpq	%rax, %rcx
  43264b:	0f 83 ec 00 00 00 	jae	236 <runtime.sigtrampgo+0x3dd>
  432651:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  432659:	e8 52 36 01 00 	callq	79442 <runtime.setg>
  43265e:	c6 04 24 00 	movb	$0, (%rsp)
  432662:	e8 69 3c ff ff 	callq	-50071 <runtime.needm>
  432667:	8b 84 24 b0 00 00 00 	movl	176(%rsp), %eax
  43266e:	89 04 24 	movl	%eax, (%rsp)
  432671:	e8 fa 06 00 00 	callq	1786 <runtime.sigNotOnStack>
  432676:	e8 15 40 ff ff 	callq	-49131 <runtime.dropm>
  43267b:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  432684:	48 8b 51 30 	movq	48(%rcx), %rdx
  432688:	48 8b 52 50 	movq	80(%rdx), %rdx
  43268c:	48 8b 5a 08 	movq	8(%rdx), %rbx
  432690:	48 8b 12 	movq	(%rdx), %rdx
  432693:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  432698:	48 89 5c 24 38 	movq	%rbx, 56(%rsp)
  43269d:	48 8b 51 30 	movq	48(%rcx), %rdx
  4326a1:	48 8b 52 50 	movq	80(%rdx), %rdx
  4326a5:	48 8b 52 10 	movq	16(%rdx), %rdx
  4326a9:	48 89 54 24 40 	movq	%rdx, 64(%rsp)
  4326ae:	48 8b 51 30 	movq	48(%rcx), %rdx
  4326b2:	48 8b 52 50 	movq	80(%rdx), %rdx
  4326b6:	48 8b 52 18 	movq	24(%rdx), %rdx
  4326ba:	48 89 54 24 48 	movq	%rdx, 72(%rsp)
  4326bf:	48 8b 51 30 	movq	48(%rcx), %rdx
  4326c3:	48 8b 52 50 	movq	80(%rdx), %rdx
  4326c7:	48 8b 92 80 00 00 00 	movq	128(%rdx), %rdx
  4326ce:	48 89 54 24 50 	movq	%rdx, 80(%rsp)
  4326d3:	48 8b 51 30 	movq	48(%rcx), %rdx
  4326d7:	48 8b 52 50 	movq	80(%rdx), %rdx
  4326db:	48 8b 9c 24 88 00 00 00 	movq	136(%rsp), %rbx
  4326e3:	48 89 1a 	movq	%rbx, (%rdx)
  4326e6:	48 8b 51 30 	movq	48(%rcx), %rdx
  4326ea:	48 8b 52 50 	movq	80(%rdx), %rdx
  4326ee:	48 8b b4 24 98 00 00 00 	movq	152(%rsp), %rsi
  4326f6:	48 01 de 	addq	%rbx, %rsi
  4326f9:	48 89 72 08 	movq	%rsi, 8(%rdx)
  4326fd:	48 8b 51 30 	movq	48(%rcx), %rdx
  432701:	48 8b 52 50 	movq	80(%rdx), %rdx
  432705:	48 81 c3 70 03 00 00 	addq	$880, %rbx
  43270c:	48 89 5a 10 	movq	%rbx, 16(%rdx)
  432710:	48 8b 49 30 	movq	48(%rcx), %rcx
  432714:	48 8b 49 50 	movq	80(%rcx), %rcx
  432718:	48 89 59 18 	movq	%rbx, 24(%rcx)
  43271c:	48 8b 44 24 58 	movq	88(%rsp), %rax
  432721:	48 8b 48 30 	movq	48(%rax), %rcx
  432725:	48 8b 49 50 	movq	80(%rcx), %rcx
  432729:	48 8d 94 24 b0 00 00 00 	leaq	176(%rsp), %rdx
  432731:	48 89 91 80 00 00 00 	movq	%rdx, 128(%rcx)
  432738:	e9 e1 fd ff ff 	jmp	-543 <runtime.sigtrampgo+0x1be>
  43273d:	48 8b 94 24 98 00 00 00 	movq	152(%rsp), %rdx
  432745:	48 01 d0 	addq	%rdx, %rax
  432748:	48 39 c1 	cmpq	%rax, %rcx
  43274b:	0f 83 00 ff ff ff 	jae	-256 <runtime.sigtrampgo+0x2f1>
  432751:	e9 25 ff ff ff 	jmp	-219 <runtime.sigtrampgo+0x31b>
  432756:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  43275e:	e8 4d 35 01 00 	callq	79181 <runtime.setg>
  432763:	c6 04 24 00 	movb	$0, (%rsp)
  432767:	e8 64 3b ff ff 	callq	-50332 <runtime.needm>
  43276c:	8b 84 24 b0 00 00 00 	movl	176(%rsp), %eax
  432773:	89 04 24 	movl	%eax, (%rsp)
  432776:	e8 65 05 00 00 	callq	1381 <runtime.noSignalStack>
  43277b:	e8 10 3f ff ff 	callq	-49392 <runtime.dropm>
  432780:	e9 b6 fe ff ff 	jmp	-330 <runtime.sigtrampgo+0x2db>
  432785:	48 8b 52 08 	movq	8(%rdx), %rdx
  432789:	48 39 d3 	cmpq	%rdx, %rbx
  43278c:	0f 83 7c fc ff ff 	jae	-900 <runtime.sigtrampgo+0xae>
  432792:	31 c9 	xorl	%ecx, %ecx
  432794:	e9 8a fd ff ff 	jmp	-630 <runtime.sigtrampgo+0x1c3>
  432799:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  4327a1:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  4327a6:	48 8b 84 24 c0 00 00 00 	movq	192(%rsp), %rax
  4327ae:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  4327b3:	8b 8c 24 b0 00 00 00 	movl	176(%rsp), %ecx
  4327ba:	83 f9 1b 	cmpl	$27, %ecx
  4327bd:	75 26 	jne	38 <runtime.sigtrampgo+0x485>
  4327bf:	48 8d 48 28 	leaq	40(%rax), %rcx
  4327c3:	84 01 	testb	%al, (%rcx)
  4327c5:	48 8b 80 a8 00 00 00 	movq	168(%rax), %rax
  4327cc:	48 89 04 24 	movq	%rax, (%rsp)
  4327d0:	e8 8b 8c ff ff 	callq	-29557 <runtime.sigprofNonGoPC>
  4327d5:	48 8b ac 24 a0 00 00 00 	movq	160(%rsp), %rbp
  4327dd:	48 81 c4 a8 00 00 00 	addq	$168, %rsp
  4327e4:	c3 	retq
  4327e5:	48 89 0c 24 	movq	%rcx, (%rsp)
  4327e9:	48 8d 44 24 60 	leaq	96(%rsp), %rax
  4327ee:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4327f3:	e8 98 06 00 00 	callq	1688 <runtime.badsignal>
  4327f8:	48 8b ac 24 a0 00 00 00 	movq	160(%rsp), %rbp
  432800:	48 81 c4 a8 00 00 00 	addq	$168, %rsp
  432807:	c3 	retq
  432808:	48 8b ac 24 a0 00 00 00 	movq	160(%rsp), %rbp
  432810:	48 81 c4 a8 00 00 00 	addq	$168, %rsp
  432817:	c3 	retq
  432818:	cc 	int3
  432819:	cc 	int3
  43281a:	cc 	int3
  43281b:	cc 	int3
  43281c:	cc 	int3
  43281d:	cc 	int3
  43281e:	cc 	int3
  43281f:	cc 	int3

runtime.sigpanic:
  432820:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  432829:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43282d:	0f 86 7d 02 00 00 	jbe	637 <runtime.sigpanic+0x290>
  432833:	48 83 ec 48 	subq	$72, %rsp
  432837:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  43283c:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  432841:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  43284a:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  43284f:	48 89 04 24 	movq	%rax, (%rsp)
  432853:	e8 f8 f0 fe ff 	callq	-69384 <runtime.canpanic>
  432858:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  43285d:	84 c0 	testb	%al, %al
  43285f:	0f 84 30 02 00 00 	je	560 <runtime.sigpanic+0x275>
  432865:	48 8b 44 24 28 	movq	40(%rsp), %rax
  43286a:	8b 88 e8 00 00 00 	movl	232(%rax), %ecx
  432870:	83 f9 07 	cmpl	$7, %ecx
  432873:	75 42 	jne	66 <runtime.sigpanic+0x97>
  432875:	48 8b 88 08 01 00 00 	movq	264(%rax), %rcx
  43287c:	48 83 f9 02 	cmpq	$2, %rcx
  432880:	75 10 	jne	16 <runtime.sigpanic+0x72>
  432882:	48 8b 88 10 01 00 00 	movq	272(%rax), %rcx
  432889:	48 81 f9 00 10 00 00 	cmpq	$4096, %rcx
  432890:	72 19 	jb	25 <runtime.sigpanic+0x8b>
  432892:	0f b6 88 c1 00 00 00 	movzbl	193(%rax), %ecx
  432899:	84 c9 	testb	%cl, %cl
  43289b:	0f 84 92 01 00 00 	je	402 <runtime.sigpanic+0x213>
  4328a1:	e8 ca d3 fe ff 	callq	-76854 <runtime.panicmem>
  4328a6:	e9 88 01 00 00 	jmp	392 <runtime.sigpanic+0x213>
  4328ab:	e8 c0 d3 fe ff 	callq	-76864 <runtime.panicmem>
  4328b0:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4328b5:	eb db 	jmp	-37 <runtime.sigpanic+0x72>
  4328b7:	83 f9 08 	cmpl	$8, %ecx
  4328ba:	0f 85 9e 00 00 00 	jne	158 <runtime.sigpanic+0x13e>
  4328c0:	48 8b 88 08 01 00 00 	movq	264(%rax), %rcx
  4328c7:	48 83 f9 01 	cmpq	$1, %rcx
  4328cb:	0f 84 83 00 00 00 	je	131 <runtime.sigpanic+0x134>
  4328d1:	48 83 f9 02 	cmpq	$2, %rcx
  4328d5:	74 76 	je	118 <runtime.sigpanic+0x12d>
  4328d7:	e8 24 d3 fe ff 	callq	-77020 <runtime.panicfloat>
  4328dc:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4328e1:	8b 80 e8 00 00 00 	movl	232(%rax), %eax
  4328e7:	83 f8 41 	cmpl	$65, %eax
  4328ea:	0f 83 c6 00 00 00 	jae	198 <runtime.sigpanic+0x196>
  4328f0:	48 83 f8 41 	cmpq	$65, %rax
  4328f4:	0f 83 b5 00 00 00 	jae	181 <runtime.sigpanic+0x18f>
  4328fa:	48 8d 04 40 	leaq	(%rax,%rax,2), %rax
  4328fe:	48 8d 0d 7b 36 07 00 	leaq	472699(%rip), %rcx
  432905:	48 8b 54 c1 08 	movq	8(%rcx,%rax,8), %rdx
  43290a:	48 8b 44 c1 10 	movq	16(%rcx,%rax,8), %rax
  43290f:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  432914:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  432919:	48 8d 05 a0 85 02 00 	leaq	165280(%rip), %rax
  432920:	48 89 04 24 	movq	%rax, (%rsp)
  432924:	48 8d 44 24 30 	leaq	48(%rsp), %rax
  432929:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43292e:	e8 6d 68 fd ff 	callq	-169875 <runtime.convT2Estring>
  432933:	48 8b 44 24 10 	movq	16(%rsp), %rax
  432938:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  43293d:	48 89 04 24 	movq	%rax, (%rsp)
  432941:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  432946:	e8 e5 e0 fe ff 	callq	-73499 <runtime.gopanic>
  43294b:	0f 0b 	ud2
  43294d:	e8 3e d2 fe ff 	callq	-77250 <runtime.panicoverflow>
  432952:	eb 83 	jmp	-125 <runtime.sigpanic+0xb7>
  432954:	e8 c7 d1 fe ff 	callq	-77369 <runtime.panicdivide>
  432959:	e9 79 ff ff ff 	jmp	-135 <runtime.sigpanic+0xb7>
  43295e:	83 f9 0b 	cmpl	$11, %ecx
  432961:	0f 85 75 ff ff ff 	jne	-139 <runtime.sigpanic+0xbc>
  432967:	48 8b 88 08 01 00 00 	movq	264(%rax), %rcx
  43296e:	48 85 c9 	testq	%rcx, %rcx
  432971:	75 2e 	jne	46 <runtime.sigpanic+0x181>
  432973:	48 8b 88 10 01 00 00 	movq	272(%rax), %rcx
  43297a:	48 81 f9 00 10 00 00 	cmpq	$4096, %rcx
  432981:	72 12 	jb	18 <runtime.sigpanic+0x175>
  432983:	0f b6 88 c1 00 00 00 	movzbl	193(%rax), %ecx
  43298a:	84 c9 	testb	%cl, %cl
  43298c:	74 43 	je	67 <runtime.sigpanic+0x1b1>
  43298e:	e8 dd d2 fe ff 	callq	-77091 <runtime.panicmem>
  432993:	eb 3c 	jmp	60 <runtime.sigpanic+0x1b1>
  432995:	e8 d6 d2 fe ff 	callq	-77098 <runtime.panicmem>
  43299a:	48 8b 44 24 28 	movq	40(%rsp), %rax
  43299f:	eb e2 	jmp	-30 <runtime.sigpanic+0x163>
  4329a1:	48 83 f9 01 	cmpq	$1, %rcx
  4329a5:	74 cc 	je	-52 <runtime.sigpanic+0x153>
  4329a7:	48 83 f9 02 	cmpq	$2, %rcx
  4329ab:	74 c6 	je	-58 <runtime.sigpanic+0x153>
  4329ad:	eb d4 	jmp	-44 <runtime.sigpanic+0x163>
  4329af:	e8 8c d0 fe ff 	callq	-77684 <runtime.panicindex>
  4329b4:	0f 0b 	ud2
  4329b6:	48 8d 05 44 8e 03 00 	leaq	233028(%rip), %rax
  4329bd:	48 89 04 24 	movq	%rax, (%rsp)
  4329c1:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  4329ca:	e8 01 e8 fe ff 	callq	-71679 <runtime.throw>
  4329cf:	0f 0b 	ud2
  4329d1:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4329d6:	48 8b 80 10 01 00 00 	movq	272(%rax), %rax
  4329dd:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  4329e2:	e8 19 f1 fe ff 	callq	-69351 <runtime.printlock>
  4329e7:	48 8d 05 85 91 03 00 	leaq	233861(%rip), %rax
  4329ee:	48 89 04 24 	movq	%rax, (%rsp)
  4329f2:	48 c7 44 24 08 19 00 00 00 	movq	$25, 8(%rsp)
  4329fb:	e8 40 fa fe ff 	callq	-67008 <runtime.printstring>
  432a00:	48 8b 44 24 20 	movq	32(%rsp), %rax
  432a05:	48 89 04 24 	movq	%rax, (%rsp)
  432a09:	e8 e2 f8 fe ff 	callq	-67358 <runtime.printhex>
  432a0e:	e8 7d f3 fe ff 	callq	-68739 <runtime.printnl>
  432a13:	e8 68 f1 fe ff 	callq	-69272 <runtime.printunlock>
  432a18:	48 8d 05 ad 73 03 00 	leaq	226221(%rip), %rax
  432a1f:	48 89 04 24 	movq	%rax, (%rsp)
  432a23:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  432a2c:	e8 9f e7 fe ff 	callq	-71777 <runtime.throw>
  432a31:	0f 0b 	ud2
  432a33:	48 8b 44 24 28 	movq	40(%rsp), %rax
  432a38:	48 8b 80 10 01 00 00 	movq	272(%rax), %rax
  432a3f:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  432a44:	e8 b7 f0 fe ff 	callq	-69449 <runtime.printlock>
  432a49:	48 8d 05 23 91 03 00 	leaq	233763(%rip), %rax
  432a50:	48 89 04 24 	movq	%rax, (%rsp)
  432a54:	48 c7 44 24 08 19 00 00 00 	movq	$25, 8(%rsp)
  432a5d:	e8 de f9 fe ff 	callq	-67106 <runtime.printstring>
  432a62:	48 8b 44 24 20 	movq	32(%rsp), %rax
  432a67:	48 89 04 24 	movq	%rax, (%rsp)
  432a6b:	e8 80 f8 fe ff 	callq	-67456 <runtime.printhex>
  432a70:	e8 1b f3 fe ff 	callq	-68837 <runtime.printnl>
  432a75:	e8 06 f1 fe ff 	callq	-69370 <runtime.printunlock>
  432a7a:	48 8d 05 4b 73 03 00 	leaq	226123(%rip), %rax
  432a81:	48 89 04 24 	movq	%rax, (%rsp)
  432a85:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  432a8e:	e8 3d e7 fe ff 	callq	-71875 <runtime.throw>
  432a93:	0f 0b 	ud2
  432a95:	48 8d 05 59 aa 03 00 	leaq	240217(%rip), %rax
  432a9c:	48 89 04 24 	movq	%rax, (%rsp)
  432aa0:	48 c7 44 24 08 2a 00 00 00 	movq	$42, 8(%rsp)
  432aa9:	e8 22 e7 fe ff 	callq	-71902 <runtime.throw>
  432aae:	0f 0b 	ud2
  432ab0:	e8 bb 1a 01 00 	callq	72379 <runtime.morestack_noctxt>
  432ab5:	e9 66 fd ff ff 	jmp	-666 <runtime.sigpanic>
  432aba:	cc 	int3
  432abb:	cc 	int3
  432abc:	cc 	int3
  432abd:	cc 	int3
  432abe:	cc 	int3
  432abf:	cc 	int3

runtime.dieFromSignal:
  432ac0:	48 83 ec 18 	subq	$24, %rsp
  432ac4:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  432ac9:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  432ace:	8b 44 24 20 	movl	32(%rsp), %eax
  432ad2:	89 04 24 	movl	%eax, (%rsp)
  432ad5:	e8 a6 06 00 00 	callq	1702 <runtime.unblocksig>
  432ada:	8b 44 24 20 	movl	32(%rsp), %eax
  432ade:	48 83 f8 41 	cmpq	$65, %rax
  432ae2:	73 6c 	jae	108 <runtime.dieFromSignal+0x90>
  432ae4:	48 8d 0d d5 12 09 00 	leaq	594645(%rip), %rcx
  432aeb:	48 8d 0c 81 	leaq	(%rcx,%rax,4), %rcx
  432aef:	31 d2 	xorl	%edx, %edx
  432af1:	87 11 	xchgl	%edx, (%rcx)
  432af3:	89 04 24 	movl	%eax, (%rsp)
  432af6:	e8 25 4e 01 00 	callq	85541 <runtime.raise>
  432afb:	e8 50 54 01 00 	callq	87120 <runtime.osyield>
  432b00:	e8 4b 54 01 00 	callq	87115 <runtime.osyield>
  432b05:	e8 46 54 01 00 	callq	87110 <runtime.osyield>
  432b0a:	8b 44 24 20 	movl	32(%rsp), %eax
  432b0e:	89 04 24 	movl	%eax, (%rsp)
  432b11:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  432b1a:	e8 e1 cb fe ff 	callq	-78879 <runtime.setsig>
  432b1f:	8b 44 24 20 	movl	32(%rsp), %eax
  432b23:	89 04 24 	movl	%eax, (%rsp)
  432b26:	e8 f5 4d 01 00 	callq	85493 <runtime.raise>
  432b2b:	e8 20 54 01 00 	callq	87072 <runtime.osyield>
  432b30:	e8 1b 54 01 00 	callq	87067 <runtime.osyield>
  432b35:	e8 16 54 01 00 	callq	87062 <runtime.osyield>
  432b3a:	c7 04 24 02 00 00 00 	movl	$2, (%rsp)
  432b41:	e8 8a 4c 01 00 	callq	85130 <runtime.exit>
  432b46:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  432b4b:	48 83 c4 18 	addq	$24, %rsp
  432b4f:	c3 	retq
  432b50:	e8 eb ce fe ff 	callq	-78101 <runtime.panicindex>
  432b55:	0f 0b 	ud2
  432b57:	cc 	int3
  432b58:	cc 	int3
  432b59:	cc 	int3
  432b5a:	cc 	int3
  432b5b:	cc 	int3
  432b5c:	cc 	int3
  432b5d:	cc 	int3
  432b5e:	cc 	int3
  432b5f:	cc 	int3

runtime.raisebadsignal:
  432b60:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  432b69:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  432b6d:	0f 86 16 01 00 00 	jbe	278 <runtime.raisebadsignal+0x129>
  432b73:	48 83 ec 30 	subq	$48, %rsp
  432b77:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  432b7c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  432b81:	8b 44 24 38 	movl	56(%rsp), %eax
  432b85:	83 f8 1b 	cmpl	$27, %eax
  432b88:	0f 84 ea 00 00 00 	je	234 <runtime.raisebadsignal+0x118>
  432b8e:	83 f8 41 	cmpl	$65, %eax
  432b91:	0f 82 c5 00 00 00 	jb	197 <runtime.raisebadsignal+0xfc>
  432b97:	31 c9 	xorl	%ecx, %ecx
  432b99:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  432b9e:	89 04 24 	movl	%eax, (%rsp)
  432ba1:	e8 da 05 00 00 	callq	1498 <runtime.unblocksig>
  432ba6:	8b 44 24 38 	movl	56(%rsp), %eax
  432baa:	89 04 24 	movl	%eax, (%rsp)
  432bad:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  432bb2:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  432bb7:	e8 44 cb fe ff 	callq	-79036 <runtime.setsig>
  432bbc:	0f b6 05 e8 0c 09 00 	movzbl	593128(%rip), %eax
  432bc3:	84 c0 	testb	%al, %al
  432bc5:	0f 84 80 00 00 00 	je	128 <runtime.raisebadsignal+0xeb>
  432bcb:	48 8b 44 24 10 	movq	16(%rsp), %rax
  432bd0:	48 85 c0 	testq	%rax, %rax
  432bd3:	75 11 	jne	17 <runtime.raisebadsignal+0x86>
  432bd5:	48 8b 44 24 40 	movq	64(%rsp), %rax
  432bda:	48 8b 00 	movq	(%rax), %rax
  432bdd:	48 63 40 08 	movslq	8(%rax), %rax
  432be1:	48 85 c0 	testq	%rax, %rax
  432be4:	75 5b 	jne	91 <runtime.raisebadsignal+0xe1>
  432be6:	8b 44 24 38 	movl	56(%rsp), %eax
  432bea:	89 04 24 	movl	%eax, (%rsp)
  432bed:	e8 2e 4d 01 00 	callq	85294 <runtime.raise>
  432bf2:	c7 04 24 e8 03 00 00 	movl	$1000, (%rsp)
  432bf9:	e8 b2 4c 01 00 	callq	85170 <runtime.usleep>
  432bfe:	48 8d 05 1b 7d 02 00 	leaq	163099(%rip), %rax
  432c05:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  432c0a:	48 8d 05 c7 b5 03 00 	leaq	243143(%rip), %rax
  432c11:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  432c16:	84 00 	testb	%al, (%rax)
  432c18:	48 8d 44 24 20 	leaq	32(%rsp), %rax
  432c1d:	84 00 	testb	%al, (%rax)
  432c1f:	48 8b 05 b2 b5 03 00 	movq	243122(%rip), %rax
  432c26:	8b 4c 24 38 	movl	56(%rsp), %ecx
  432c2a:	89 0c 24 	movl	%ecx, (%rsp)
  432c2d:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  432c32:	e8 c9 ca fe ff 	callq	-79159 <runtime.setsig>
  432c37:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  432c3c:	48 83 c4 30 	addq	$48, %rsp
  432c40:	c3 	retq
  432c41:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  432c46:	48 83 c4 30 	addq	$48, %rsp
  432c4a:	c3 	retq
  432c4b:	0f b6 05 5b 0c 09 00 	movzbl	592987(%rip), %eax
  432c52:	84 c0 	testb	%al, %al
  432c54:	0f 85 71 ff ff ff 	jne	-143 <runtime.raisebadsignal+0x6b>
  432c5a:	eb 8a 	jmp	-118 <runtime.raisebadsignal+0x86>
  432c5c:	48 83 f8 41 	cmpq	$65, %rax
  432c60:	73 20 	jae	32 <runtime.raisebadsignal+0x122>
  432c62:	48 8d 15 77 14 09 00 	leaq	595063(%rip), %rdx
  432c69:	48 8d 14 c2 	leaq	(%rdx,%rax,8), %rdx
  432c6d:	48 8b 12 	movq	(%rdx), %rdx
  432c70:	48 89 d1 	movq	%rdx, %rcx
  432c73:	e9 21 ff ff ff 	jmp	-223 <runtime.raisebadsignal+0x39>
  432c78:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  432c7d:	48 83 c4 30 	addq	$48, %rsp
  432c81:	c3 	retq
  432c82:	e8 b9 cd fe ff 	callq	-78407 <runtime.panicindex>
  432c87:	0f 0b 	ud2
  432c89:	e8 e2 18 01 00 	callq	71906 <runtime.morestack_noctxt>
  432c8e:	e9 cd fe ff ff 	jmp	-307 <runtime.raisebadsignal>
  432c93:	cc 	int3
  432c94:	cc 	int3
  432c95:	cc 	int3
  432c96:	cc 	int3
  432c97:	cc 	int3
  432c98:	cc 	int3
  432c99:	cc 	int3
  432c9a:	cc 	int3
  432c9b:	cc 	int3
  432c9c:	cc 	int3
  432c9d:	cc 	int3
  432c9e:	cc 	int3
  432c9f:	cc 	int3

runtime.crash:
  432ca0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  432ca9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  432cad:	76 24 	jbe	36 <runtime.crash+0x33>
  432caf:	48 83 ec 10 	subq	$16, %rsp
  432cb3:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  432cb8:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  432cbd:	c7 04 24 06 00 00 00 	movl	$6, (%rsp)
  432cc4:	e8 f7 fd ff ff 	callq	-521 <runtime.dieFromSignal>
  432cc9:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  432cce:	48 83 c4 10 	addq	$16, %rsp
  432cd2:	c3 	retq
  432cd3:	e8 98 18 01 00 	callq	71832 <runtime.morestack_noctxt>
  432cd8:	eb c6 	jmp	-58 <runtime.crash>
  432cda:	cc 	int3
  432cdb:	cc 	int3
  432cdc:	cc 	int3
  432cdd:	cc 	int3
  432cde:	cc 	int3
  432cdf:	cc 	int3

runtime.noSignalStack:
  432ce0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  432ce9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  432ced:	76 72 	jbe	114 <runtime.noSignalStack+0x81>
  432cef:	48 83 ec 18 	subq	$24, %rsp
  432cf3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  432cf8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  432cfd:	e8 fe ed fe ff 	callq	-70146 <runtime.printlock>
  432d02:	48 8d 05 62 72 03 00 	leaq	225890(%rip), %rax
  432d09:	48 89 04 24 	movq	%rax, (%rsp)
  432d0d:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  432d16:	e8 25 f7 fe ff 	callq	-67803 <runtime.printstring>
  432d1b:	8b 44 24 20 	movl	32(%rsp), %eax
  432d1f:	48 89 04 24 	movq	%rax, (%rsp)
  432d23:	e8 48 f4 fe ff 	callq	-68536 <runtime.printuint>
  432d28:	48 8d 05 ff a5 03 00 	leaq	239103(%rip), %rax
  432d2f:	48 89 04 24 	movq	%rax, (%rsp)
  432d33:	48 c7 44 24 08 29 00 00 00 	movq	$41, 8(%rsp)
  432d3c:	e8 ff f6 fe ff 	callq	-67841 <runtime.printstring>
  432d41:	e8 3a ee fe ff 	callq	-70086 <runtime.printunlock>
  432d46:	48 8d 05 b6 9a 03 00 	leaq	236214(%rip), %rax
  432d4d:	48 89 04 24 	movq	%rax, (%rsp)
  432d51:	48 c7 44 24 08 20 00 00 00 	movq	$32, 8(%rsp)
  432d5a:	e8 71 e4 fe ff 	callq	-72591 <runtime.throw>
  432d5f:	0f 0b 	ud2
  432d61:	e8 0a 18 01 00 	callq	71690 <runtime.morestack_noctxt>
  432d66:	e9 75 ff ff ff 	jmp	-139 <runtime.noSignalStack>
  432d6b:	cc 	int3
  432d6c:	cc 	int3
  432d6d:	cc 	int3
  432d6e:	cc 	int3
  432d6f:	cc 	int3

runtime.sigNotOnStack:
  432d70:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  432d79:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  432d7d:	76 72 	jbe	114 <runtime.sigNotOnStack+0x81>
  432d7f:	48 83 ec 18 	subq	$24, %rsp
  432d83:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  432d88:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  432d8d:	e8 6e ed fe ff 	callq	-70290 <runtime.printlock>
  432d92:	48 8d 05 d2 71 03 00 	leaq	225746(%rip), %rax
  432d99:	48 89 04 24 	movq	%rax, (%rsp)
  432d9d:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  432da6:	e8 95 f6 fe ff 	callq	-67947 <runtime.printstring>
  432dab:	8b 44 24 20 	movl	32(%rsp), %eax
  432daf:	48 89 04 24 	movq	%rax, (%rsp)
  432db3:	e8 b8 f3 fe ff 	callq	-68680 <runtime.printuint>
  432db8:	48 8d 05 8e a6 03 00 	leaq	239246(%rip), %rax
  432dbf:	48 89 04 24 	movq	%rax, (%rsp)
  432dc3:	48 c7 44 24 08 2a 00 00 00 	movq	$42, 8(%rsp)
  432dcc:	e8 6f f6 fe ff 	callq	-67985 <runtime.printstring>
  432dd1:	e8 aa ed fe ff 	callq	-70230 <runtime.printunlock>
  432dd6:	48 8d 05 33 af 03 00 	leaq	241459(%rip), %rax
  432ddd:	48 89 04 24 	movq	%rax, (%rsp)
  432de1:	48 c7 44 24 08 39 00 00 00 	movq	$57, 8(%rsp)
  432dea:	e8 e1 e3 fe ff 	callq	-72735 <runtime.throw>
  432def:	0f 0b 	ud2
  432df1:	e8 7a 17 01 00 	callq	71546 <runtime.morestack_noctxt>
  432df6:	e9 75 ff ff ff 	jmp	-139 <runtime.sigNotOnStack>
  432dfb:	cc 	int3
  432dfc:	cc 	int3
  432dfd:	cc 	int3
  432dfe:	cc 	int3
  432dff:	cc 	int3

runtime.signalDuringFork:
  432e00:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  432e09:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  432e0d:	76 72 	jbe	114 <runtime.signalDuringFork+0x81>
  432e0f:	48 83 ec 18 	subq	$24, %rsp
  432e13:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  432e18:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  432e1d:	e8 de ec fe ff 	callq	-70434 <runtime.printlock>
  432e22:	48 8d 05 42 71 03 00 	leaq	225602(%rip), %rax
  432e29:	48 89 04 24 	movq	%rax, (%rsp)
  432e2d:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  432e36:	e8 05 f6 fe ff 	callq	-68091 <runtime.printstring>
  432e3b:	8b 44 24 20 	movl	32(%rsp), %eax
  432e3f:	48 89 04 24 	movq	%rax, (%rsp)
  432e43:	e8 28 f3 fe ff 	callq	-68824 <runtime.printuint>
  432e48:	48 8d 05 4b 85 03 00 	leaq	230731(%rip), %rax
  432e4f:	48 89 04 24 	movq	%rax, (%rsp)
  432e53:	48 c7 44 24 08 16 00 00 00 	movq	$22, 8(%rsp)
  432e5c:	e8 df f5 fe ff 	callq	-68129 <runtime.printstring>
  432e61:	e8 1a ed fe ff 	callq	-70374 <runtime.printunlock>
  432e66:	48 8d 05 73 90 03 00 	leaq	233587(%rip), %rax
  432e6d:	48 89 04 24 	movq	%rax, (%rsp)
  432e71:	48 c7 44 24 08 1b 00 00 00 	movq	$27, 8(%rsp)
  432e7a:	e8 51 e3 fe ff 	callq	-72879 <runtime.throw>
  432e7f:	0f 0b 	ud2
  432e81:	e8 ea 16 01 00 	callq	71402 <runtime.morestack_noctxt>
  432e86:	e9 75 ff ff ff 	jmp	-139 <runtime.signalDuringFork>
  432e8b:	cc 	int3
  432e8c:	cc 	int3
  432e8d:	cc 	int3
  432e8e:	cc 	int3
  432e8f:	cc 	int3

runtime.badsignal:
  432e90:	48 83 ec 18 	subq	$24, %rsp
  432e94:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  432e99:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  432e9e:	c6 04 24 00 	movb	$0, (%rsp)
  432ea2:	e8 29 34 ff ff 	callq	-52183 <runtime.needm>
  432ea7:	48 8b 44 24 20 	movq	32(%rsp), %rax
  432eac:	89 04 24 	movl	%eax, (%rsp)
  432eaf:	e8 0c 07 00 00 	callq	1804 <runtime.sigsend>
  432eb4:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  432eb9:	84 c0 	testb	%al, %al
  432ebb:	74 0f 	je	15 <runtime.badsignal+0x3c>
  432ebd:	e8 ce 37 ff ff 	callq	-51250 <runtime.dropm>
  432ec2:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  432ec7:	48 83 c4 18 	addq	$24, %rsp
  432ecb:	c3 	retq
  432ecc:	48 8b 44 24 20 	movq	32(%rsp), %rax
  432ed1:	89 04 24 	movl	%eax, (%rsp)
  432ed4:	48 8b 44 24 28 	movq	40(%rsp), %rax
  432ed9:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  432ede:	e8 7d fc ff ff 	callq	-899 <runtime.raisebadsignal>
  432ee3:	eb d8 	jmp	-40 <runtime.badsignal+0x2d>
  432ee5:	cc 	int3
  432ee6:	cc 	int3
  432ee7:	cc 	int3
  432ee8:	cc 	int3
  432ee9:	cc 	int3
  432eea:	cc 	int3
  432eeb:	cc 	int3
  432eec:	cc 	int3
  432eed:	cc 	int3
  432eee:	cc 	int3
  432eef:	cc 	int3

runtime.sigfwdgo:
  432ef0:	48 83 ec 38 	subq	$56, %rsp
  432ef4:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  432ef9:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  432efe:	8b 44 24 40 	movl	64(%rsp), %eax
  432f02:	83 f8 41 	cmpl	$65, %eax
  432f05:	0f 83 93 01 00 00 	jae	403 <runtime.sigfwdgo+0x1ae>
  432f0b:	48 83 f8 41 	cmpq	$65, %rax
  432f0f:	0f 83 98 01 00 00 	jae	408 <runtime.sigfwdgo+0x1bd>
  432f15:	48 8d 0d c4 11 09 00 	leaq	594372(%rip), %rcx
  432f1c:	48 8d 0c c1 	leaq	(%rcx,%rax,8), %rcx
  432f20:	48 8b 09 	movq	(%rcx), %rcx
  432f23:	48 8d 14 40 	leaq	(%rax,%rax,2), %rdx
  432f27:	48 8d 1d 52 30 07 00 	leaq	471122(%rip), %rbx
  432f2e:	8b 14 d3 	movl	(%rbx,%rdx,8), %edx
  432f31:	48 8d 1d 88 0e 09 00 	leaq	593544(%rip), %rbx
  432f38:	48 8d 1c 83 	leaq	(%rbx,%rax,4), %rbx
  432f3c:	8b 1b 	movl	(%rbx), %ebx
  432f3e:	85 db 	testl	%ebx, %ebx
  432f40:	0f 85 81 00 00 00 	jne	129 <runtime.sigfwdgo+0xd7>
  432f46:	48 83 f9 01 	cmpq	$1, %rcx
  432f4a:	75 0f 	jne	15 <runtime.sigfwdgo+0x6b>
  432f4c:	c6 44 24 58 01 	movb	$1, 88(%rsp)
  432f51:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  432f56:	48 83 c4 38 	addq	$56, %rsp
  432f5a:	c3 	retq
  432f5b:	48 85 c9 	testq	%rcx, %rcx
  432f5e:	75 09 	jne	9 <runtime.sigfwdgo+0x79>
  432f60:	0f ba e2 08 	btl	$8, %edx
  432f64:	72 e6 	jb	-26 <runtime.sigfwdgo+0x5c>
  432f66:	48 85 c9 	testq	%rcx, %rcx
  432f69:	75 2c 	jne	44 <runtime.sigfwdgo+0xa7>
  432f6b:	89 04 24 	movl	%eax, (%rsp)
  432f6e:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  432f77:	e8 84 c7 fe ff 	callq	-79996 <runtime.setsig>
  432f7c:	8b 44 24 40 	movl	64(%rsp), %eax
  432f80:	89 04 24 	movl	%eax, (%rsp)
  432f83:	e8 38 fb ff ff 	callq	-1224 <runtime.dieFromSignal>
  432f88:	c6 44 24 58 00 	movb	$0, 88(%rsp)
  432f8d:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  432f92:	48 83 c4 38 	addq	$56, %rsp
  432f96:	c3 	retq
  432f97:	48 89 0c 24 	movq	%rcx, (%rsp)
  432f9b:	89 44 24 08 	movl	%eax, 8(%rsp)
  432f9f:	48 8b 44 24 48 	movq	72(%rsp), %rax
  432fa4:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  432fa9:	48 8b 44 24 50 	movq	80(%rsp), %rax
  432fae:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  432fb3:	e8 a8 4b 01 00 	callq	84904 <runtime.sigfwd>
  432fb8:	c6 44 24 58 01 	movb	$1, 88(%rsp)
  432fbd:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  432fc2:	48 83 c4 38 	addq	$56, %rsp
  432fc6:	c3 	retq
  432fc7:	0f b6 1d e2 08 09 00 	movzbl	592098(%rip), %ebx
  432fce:	84 db 	testb	%bl, %bl
  432fd0:	0f 84 70 ff ff ff 	je	-144 <runtime.sigfwdgo+0x56>
  432fd6:	48 85 c9 	testq	%rcx, %rcx
  432fd9:	0f 84 b0 00 00 00 	je	176 <runtime.sigfwdgo+0x19f>
  432fdf:	48 8b 5c 24 48 	movq	72(%rsp), %rbx
  432fe4:	48 89 5c 24 20 	movq	%rbx, 32(%rsp)
  432fe9:	48 8b 74 24 50 	movq	80(%rsp), %rsi
  432fee:	48 89 74 24 28 	movq	%rsi, 40(%rsp)
  432ff3:	48 8b 7c 24 20 	movq	32(%rsp), %rdi
  432ff8:	48 63 7f 08 	movslq	8(%rdi), %rdi
  432ffc:	48 85 ff 	testq	%rdi, %rdi
  432fff:	75 7f 	jne	127 <runtime.sigfwdgo+0x190>
  433001:	83 f8 0d 	cmpl	$13, %eax
  433004:	75 6b 	jne	107 <runtime.sigfwdgo+0x181>
  433006:	64 48 8b 14 25 f8 ff ff ff 	movq	%fs:-8, %rdx
  43300f:	48 85 d2 	testq	%rdx, %rdx
  433012:	74 20 	je	32 <runtime.sigfwdgo+0x144>
  433014:	48 8b 52 30 	movq	48(%rdx), %rdx
  433018:	48 85 d2 	testq	%rdx, %rdx
  43301b:	74 17 	je	23 <runtime.sigfwdgo+0x144>
  43301d:	48 8b ba c0 00 00 00 	movq	192(%rdx), %rdi
  433024:	48 85 ff 	testq	%rdi, %rdi
  433027:	74 0b 	je	11 <runtime.sigfwdgo+0x144>
  433029:	0f b6 92 19 01 00 00 	movzbl	281(%rdx), %edx
  433030:	84 d2 	testb	%dl, %dl
  433032:	74 2e 	je	46 <runtime.sigfwdgo+0x172>
  433034:	48 83 f9 01 	cmpq	$1, %rcx
  433038:	75 0f 	jne	15 <runtime.sigfwdgo+0x159>
  43303a:	c6 44 24 58 01 	movb	$1, 88(%rsp)
  43303f:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  433044:	48 83 c4 38 	addq	$56, %rsp
  433048:	c3 	retq
  433049:	48 89 0c 24 	movq	%rcx, (%rsp)
  43304d:	89 44 24 08 	movl	%eax, 8(%rsp)
  433051:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  433056:	48 89 74 24 18 	movq	%rsi, 24(%rsp)
  43305b:	e8 00 4b 01 00 	callq	84736 <runtime.sigfwd>
  433060:	eb d8 	jmp	-40 <runtime.sigfwdgo+0x14a>
  433062:	c6 44 24 58 00 	movb	$0, 88(%rsp)
  433067:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  43306c:	48 83 c4 38 	addq	$56, %rsp
  433070:	c3 	retq
  433071:	c6 44 24 58 00 	movb	$0, 88(%rsp)
  433076:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  43307b:	48 83 c4 38 	addq	$56, %rsp
  43307f:	c3 	retq
  433080:	0f ba e2 03 	btl	$3, %edx
  433084:	0f 83 77 ff ff ff 	jae	-137 <runtime.sigfwdgo+0x111>
  43308a:	e9 77 ff ff ff 	jmp	-137 <runtime.sigfwdgo+0x116>
  43308f:	c6 44 24 58 00 	movb	$0, 88(%rsp)
  433094:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  433099:	48 83 c4 38 	addq	$56, %rsp
  43309d:	c3 	retq
  43309e:	c6 44 24 58 00 	movb	$0, 88(%rsp)
  4330a3:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  4330a8:	48 83 c4 38 	addq	$56, %rsp
  4330ac:	c3 	retq
  4330ad:	e8 8e c9 fe ff 	callq	-79474 <runtime.panicindex>
  4330b2:	0f 0b 	ud2
  4330b4:	cc 	int3
  4330b5:	cc 	int3
  4330b6:	cc 	int3
  4330b7:	cc 	int3
  4330b8:	cc 	int3
  4330b9:	cc 	int3
  4330ba:	cc 	int3
  4330bb:	cc 	int3
  4330bc:	cc 	int3
  4330bd:	cc 	int3
  4330be:	cc 	int3
  4330bf:	cc 	int3

runtime.msigsave:
  4330c0:	48 83 ec 20 	subq	$32, %rsp
  4330c4:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  4330c9:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  4330ce:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4330d3:	84 00 	testb	%al, (%rax)
  4330d5:	48 05 80 00 00 00 	addq	$128, %rax
  4330db:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  4330e0:	c7 04 24 02 00 00 00 	movl	$2, (%rsp)
  4330e7:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  4330f0:	e8 cb c5 fe ff 	callq	-80437 <runtime.sigprocmask>
  4330f5:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  4330fa:	48 83 c4 20 	addq	$32, %rsp
  4330fe:	c3 	retq
  4330ff:	cc 	int3

runtime.msigrestore:
  433100:	48 83 ec 20 	subq	$32, %rsp
  433104:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  433109:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  43310e:	c7 04 24 02 00 00 00 	movl	$2, (%rsp)
  433115:	48 8d 44 24 28 	leaq	40(%rsp), %rax
  43311a:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43311f:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  433128:	e8 93 c5 fe ff 	callq	-80493 <runtime.sigprocmask>
  43312d:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  433132:	48 83 c4 20 	addq	$32, %rsp
  433136:	c3 	retq
  433137:	cc 	int3
  433138:	cc 	int3
  433139:	cc 	int3
  43313a:	cc 	int3
  43313b:	cc 	int3
  43313c:	cc 	int3
  43313d:	cc 	int3
  43313e:	cc 	int3
  43313f:	cc 	int3

runtime.sigblock:
  433140:	48 83 ec 20 	subq	$32, %rsp
  433144:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  433149:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  43314e:	c7 04 24 02 00 00 00 	movl	$2, (%rsp)
  433155:	48 8d 05 f4 1e 07 00 	leaq	466676(%rip), %rax
  43315c:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  433161:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  43316a:	e8 51 c5 fe ff 	callq	-80559 <runtime.sigprocmask>
  43316f:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  433174:	48 83 c4 20 	addq	$32, %rsp
  433178:	c3 	retq
  433179:	cc 	int3
  43317a:	cc 	int3
  43317b:	cc 	int3
  43317c:	cc 	int3
  43317d:	cc 	int3
  43317e:	cc 	int3
  43317f:	cc 	int3

runtime.unblocksig:
  433180:	48 83 ec 28 	subq	$40, %rsp
  433184:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  433189:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  43318e:	48 c7 44 24 18 00 00 00 00 	movq	$0, 24(%rsp)
  433197:	8b 44 24 30 	movl	48(%rsp), %eax
  43319b:	48 8d 50 ff 	leaq	-1(%rax), %rdx
  43319f:	48 c1 fa 3f 	sarq	$63, %rdx
  4331a3:	48 c1 ea 3b 	shrq	$59, %rdx
  4331a7:	48 8d 54 02 ff 	leaq	-1(%rdx,%rax), %rdx
  4331ac:	48 c1 fa 05 	sarq	$5, %rdx
  4331b0:	48 83 fa 02 	cmpq	$2, %rdx
  4331b4:	73 3c 	jae	60 <runtime.unblocksig+0x72>
  4331b6:	8b 5c 94 18 	movl	24(%rsp,%rdx,4), %ebx
  4331ba:	8d 48 ff 	leal	-1(%rax), %ecx
  4331bd:	b8 01 00 00 00 	movl	$1, %eax
  4331c2:	d3 e0 	shll	%cl, %eax
  4331c4:	09 c3 	orl	%eax, %ebx
  4331c6:	48 8d 44 24 18 	leaq	24(%rsp), %rax
  4331cb:	89 1c 90 	movl	%ebx, (%rax,%rdx,4)
  4331ce:	c7 04 24 01 00 00 00 	movl	$1, (%rsp)
  4331d5:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4331da:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  4331e3:	e8 d8 c4 fe ff 	callq	-80680 <runtime.sigprocmask>
  4331e8:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4331ed:	48 83 c4 28 	addq	$40, %rsp
  4331f1:	c3 	retq
  4331f2:	e8 49 c8 fe ff 	callq	-79799 <runtime.panicindex>
  4331f7:	0f 0b 	ud2
  4331f9:	cc 	int3
  4331fa:	cc 	int3
  4331fb:	cc 	int3
  4331fc:	cc 	int3
  4331fd:	cc 	int3
  4331fe:	cc 	int3
  4331ff:	cc 	int3

runtime.minitSignals:
  433200:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  433209:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43320d:	76 1f 	jbe	31 <runtime.minitSignals+0x2e>
  43320f:	48 83 ec 08 	subq	$8, %rsp
  433213:	48 89 2c 24 	movq	%rbp, (%rsp)
  433217:	48 8d 2c 24 	leaq	(%rsp), %rbp
  43321b:	e8 20 00 00 00 	callq	32 <runtime.minitSignalStack>
  433220:	e8 7b 01 00 00 	callq	379 <runtime.minitSignalMask>
  433225:	48 8b 2c 24 	movq	(%rsp), %rbp
  433229:	48 83 c4 08 	addq	$8, %rsp
  43322d:	c3 	retq
  43322e:	e8 3d 13 01 00 	callq	70461 <runtime.morestack_noctxt>
  433233:	eb cb 	jmp	-53 <runtime.minitSignals>
  433235:	cc 	int3
  433236:	cc 	int3
  433237:	cc 	int3
  433238:	cc 	int3
  433239:	cc 	int3
  43323a:	cc 	int3
  43323b:	cc 	int3
  43323c:	cc 	int3
  43323d:	cc 	int3
  43323e:	cc 	int3
  43323f:	cc 	int3

runtime.minitSignalStack:
  433240:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  433249:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43324d:	0f 86 41 01 00 00 	jbe	321 <runtime.minitSignalStack+0x154>
  433253:	48 83 ec 38 	subq	$56, %rsp
  433257:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  43325c:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  433261:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  43326a:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43326f:	48 c7 44 24 18 00 00 00 00 	movq	$0, 24(%rsp)
  433278:	0f 57 c0 	xorps	%xmm0, %xmm0
  43327b:	0f 11 44 24 20 	movups	%xmm0, 32(%rsp)
  433280:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  433288:	48 8d 4c 24 18 	leaq	24(%rsp), %rcx
  43328d:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  433292:	e8 39 4c 01 00 	callq	85049 <runtime.sigaltstack>
  433297:	8b 44 24 20 	movl	32(%rsp), %eax
  43329b:	0f ba e0 01 	btl	$1, %eax
  43329f:	0f 82 c1 00 00 00 	jb	193 <runtime.minitSignalStack+0x126>
  4332a5:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4332aa:	48 8b 48 30 	movq	48(%rax), %rcx
  4332ae:	84 01 	testb	%al, (%rcx)
  4332b0:	84 00 	testb	%al, (%rax)
  4332b2:	48 8d 51 58 	leaq	88(%rcx), %rdx
  4332b6:	64 48 8b 1c 25 f8 ff ff ff 	movq	%fs:-8, %rbx
  4332bf:	48 85 d2 	testq	%rdx, %rdx
  4332c2:	74 4a 	je	74 <runtime.minitSignalStack+0xce>
  4332c4:	48 8b 53 30 	movq	48(%rbx), %rdx
  4332c8:	48 8b 52 50 	movq	80(%rdx), %rdx
  4332cc:	48 8b 32 	movq	(%rdx), %rsi
  4332cf:	48 8b 52 08 	movq	8(%rdx), %rdx
  4332d3:	48 89 71 58 	movq	%rsi, 88(%rcx)
  4332d7:	48 89 51 60 	movq	%rdx, 96(%rcx)
  4332db:	48 8b 53 30 	movq	48(%rbx), %rdx
  4332df:	48 8b 52 50 	movq	80(%rdx), %rdx
  4332e3:	48 8b 52 10 	movq	16(%rdx), %rdx
  4332e7:	48 89 51 68 	movq	%rdx, 104(%rcx)
  4332eb:	48 8b 53 30 	movq	48(%rbx), %rdx
  4332ef:	48 8b 52 50 	movq	80(%rdx), %rdx
  4332f3:	48 8b 52 18 	movq	24(%rdx), %rdx
  4332f7:	48 89 51 70 	movq	%rdx, 112(%rcx)
  4332fb:	48 8b 53 30 	movq	48(%rbx), %rdx
  4332ff:	48 8b 52 50 	movq	80(%rdx), %rdx
  433303:	48 8b 92 80 00 00 00 	movq	128(%rdx), %rdx
  43330a:	48 89 51 78 	movq	%rdx, 120(%rcx)
  43330e:	48 8b 4b 30 	movq	48(%rbx), %rcx
  433312:	48 8b 49 50 	movq	80(%rcx), %rcx
  433316:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  43331b:	48 89 11 	movq	%rdx, (%rcx)
  43331e:	48 8b 4b 30 	movq	48(%rbx), %rcx
  433322:	48 8b 49 50 	movq	80(%rcx), %rcx
  433326:	48 8b 74 24 28 	movq	40(%rsp), %rsi
  43332b:	48 01 d6 	addq	%rdx, %rsi
  43332e:	48 89 71 08 	movq	%rsi, 8(%rcx)
  433332:	48 8b 4b 30 	movq	48(%rbx), %rcx
  433336:	48 8b 49 50 	movq	80(%rcx), %rcx
  43333a:	48 81 c2 70 03 00 00 	addq	$880, %rdx
  433341:	48 89 51 10 	movq	%rdx, 16(%rcx)
  433345:	48 8b 4b 30 	movq	48(%rbx), %rcx
  433349:	48 8b 49 50 	movq	80(%rcx), %rcx
  43334d:	48 89 51 18 	movq	%rdx, 24(%rcx)
  433351:	48 8b 40 30 	movq	48(%rax), %rax
  433355:	c6 80 17 01 00 00 00 	movb	$0, 279(%rax)
  43335c:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  433361:	48 83 c4 38 	addq	$56, %rsp
  433365:	c3 	retq
  433366:	48 8b 44 24 10 	movq	16(%rsp), %rax
  43336b:	48 8b 48 30 	movq	48(%rax), %rcx
  43336f:	48 8b 51 50 	movq	80(%rcx), %rdx
  433373:	84 02 	testb	%al, (%rdx)
  433375:	84 00 	testb	%al, (%rax)
  433377:	84 01 	testb	%al, (%rcx)
  433379:	48 89 14 24 	movq	%rdx, (%rsp)
  43337d:	e8 de 01 00 00 	callq	478 <runtime.signalstack>
  433382:	48 8b 44 24 10 	movq	16(%rsp), %rax
  433387:	48 8b 40 30 	movq	48(%rax), %rax
  43338b:	c6 80 17 01 00 00 01 	movb	$1, 279(%rax)
  433392:	eb c8 	jmp	-56 <runtime.minitSignalStack+0x11c>
  433394:	e8 d7 11 01 00 	callq	70103 <runtime.morestack_noctxt>
  433399:	e9 a2 fe ff ff 	jmp	-350 <runtime.minitSignalStack>
  43339e:	cc 	int3
  43339f:	cc 	int3

runtime.minitSignalMask:
  4333a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4333a9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4333ad:	0f 86 f7 00 00 00 	jbe	247 <runtime.minitSignalMask+0x10a>
  4333b3:	48 83 ec 28 	subq	$40, %rsp
  4333b7:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  4333bc:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  4333c1:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4333ca:	48 8b 40 30 	movq	48(%rax), %rax
  4333ce:	48 8b 80 80 00 00 00 	movq	128(%rax), %rax
  4333d5:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4333da:	31 c0 	xorl	%eax, %eax
  4333dc:	eb 03 	jmp	3 <runtime.minitSignalMask+0x41>
  4333de:	48 ff c0 	incq	%rax
  4333e1:	48 83 f8 41 	cmpq	$65, %rax
  4333e5:	0f 8d 88 00 00 00 	jge	136 <runtime.minitSignalMask+0xd3>
  4333eb:	89 c2 	movl	%eax, %edx
  4333ed:	48 83 fa 41 	cmpq	$65, %rdx
  4333f1:	0f 83 ac 00 00 00 	jae	172 <runtime.minitSignalMask+0x103>
  4333f7:	48 8d 14 52 	leaq	(%rdx,%rdx,2), %rdx
  4333fb:	48 8d 1d 7e 2b 07 00 	leaq	469886(%rip), %rbx
  433402:	8b 14 d3 	movl	(%rbx,%rdx,8), %edx
  433405:	0f ba e2 07 	btl	$7, %edx
  433409:	73 37 	jae	55 <runtime.minitSignalMask+0xa2>
  43340b:	48 8d 50 ff 	leaq	-1(%rax), %rdx
  43340f:	48 c1 fa 3f 	sarq	$63, %rdx
  433413:	48 c1 ea 3b 	shrq	$59, %rdx
  433417:	48 8d 54 02 ff 	leaq	-1(%rdx,%rax), %rdx
  43341c:	48 c1 fa 05 	sarq	$5, %rdx
  433420:	48 83 fa 02 	cmpq	$2, %rdx
  433424:	73 76 	jae	118 <runtime.minitSignalMask+0xfc>
  433426:	8b 74 94 18 	movl	24(%rsp,%rdx,4), %esi
  43342a:	8d 48 ff 	leal	-1(%rax), %ecx
  43342d:	bf 01 00 00 00 	movl	$1, %edi
  433432:	d3 e7 	shll	%cl, %edi
  433434:	f7 d7 	notl	%edi
  433436:	21 f7 	andl	%esi, %edi
  433438:	48 8d 74 24 18 	leaq	24(%rsp), %rsi
  43343d:	89 3c 96 	movl	%edi, (%rsi,%rdx,4)
  433440:	eb 9c 	jmp	-100 <runtime.minitSignalMask+0x3e>
  433442:	0f b6 35 62 04 09 00 	movzbl	590946(%rip), %esi
  433449:	40 84 f6 	testb	%sil, %sil
  43344c:	74 07 	je	7 <runtime.minitSignalMask+0xb5>
  43344e:	48 8d 74 24 18 	leaq	24(%rsp), %rsi
  433453:	eb 89 	jmp	-119 <runtime.minitSignalMask+0x3e>
  433455:	0f b6 35 51 04 09 00 	movzbl	590929(%rip), %esi
  43345c:	40 84 f6 	testb	%sil, %sil
  43345f:	75 ed 	jne	-19 <runtime.minitSignalMask+0xae>
  433461:	f7 c2 06 00 00 00 	testl	$6, %edx
  433467:	75 a2 	jne	-94 <runtime.minitSignalMask+0x6b>
  433469:	48 8d 74 24 18 	leaq	24(%rsp), %rsi
  43346e:	e9 6b ff ff ff 	jmp	-149 <runtime.minitSignalMask+0x3e>
  433473:	c7 04 24 02 00 00 00 	movl	$2, (%rsp)
  43347a:	48 8d 44 24 18 	leaq	24(%rsp), %rax
  43347f:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  433484:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  43348d:	e8 2e c2 fe ff 	callq	-81362 <runtime.sigprocmask>
  433492:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  433497:	48 83 c4 28 	addq	$40, %rsp
  43349b:	c3 	retq
  43349c:	e8 9f c5 fe ff 	callq	-80481 <runtime.panicindex>
  4334a1:	0f 0b 	ud2
  4334a3:	e8 98 c5 fe ff 	callq	-80488 <runtime.panicindex>
  4334a8:	0f 0b 	ud2
  4334aa:	e8 c1 10 01 00 	callq	69825 <runtime.morestack_noctxt>
  4334af:	e9 ec fe ff ff 	jmp	-276 <runtime.minitSignalMask>
  4334b4:	cc 	int3
  4334b5:	cc 	int3
  4334b6:	cc 	int3
  4334b7:	cc 	int3
  4334b8:	cc 	int3
  4334b9:	cc 	int3
  4334ba:	cc 	int3
  4334bb:	cc 	int3
  4334bc:	cc 	int3
  4334bd:	cc 	int3
  4334be:	cc 	int3
  4334bf:	cc 	int3

runtime.unminitSignals:
  4334c0:	48 83 ec 30 	subq	$48, %rsp
  4334c4:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  4334c9:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  4334ce:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4334d7:	48 8b 40 30 	movq	48(%rax), %rax
  4334db:	0f b6 88 17 01 00 00 	movzbl	279(%rax), %ecx
  4334e2:	84 c9 	testb	%cl, %cl
  4334e4:	75 3e 	jne	62 <runtime.unminitSignals+0x64>
  4334e6:	48 8b 48 50 	movq	80(%rax), %rcx
  4334ea:	48 8d 50 58 	leaq	88(%rax), %rdx
  4334ee:	84 02 	testb	%al, (%rdx)
  4334f0:	48 8b 50 60 	movq	96(%rax), %rdx
  4334f4:	48 8b 58 58 	movq	88(%rax), %rbx
  4334f8:	48 89 19 	movq	%rbx, (%rcx)
  4334fb:	48 89 51 08 	movq	%rdx, 8(%rcx)
  4334ff:	48 8b 50 68 	movq	104(%rax), %rdx
  433503:	48 89 51 10 	movq	%rdx, 16(%rcx)
  433507:	48 8b 50 70 	movq	112(%rax), %rdx
  43350b:	48 89 51 18 	movq	%rdx, 24(%rcx)
  43350f:	48 8b 40 78 	movq	120(%rax), %rax
  433513:	48 89 81 80 00 00 00 	movq	%rax, 128(%rcx)
  43351a:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  43351f:	48 83 c4 30 	addq	$48, %rsp
  433523:	c3 	retq
  433524:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  43352d:	0f 57 c0 	xorps	%xmm0, %xmm0
  433530:	0f 11 44 24 18 	movups	%xmm0, 24(%rsp)
  433535:	c7 44 24 18 02 00 00 00 	movl	$2, 24(%rsp)
  43353d:	48 8d 44 24 10 	leaq	16(%rsp), %rax
  433542:	48 89 04 24 	movq	%rax, (%rsp)
  433546:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  43354f:	e8 7c 49 01 00 	callq	84348 <runtime.sigaltstack>
  433554:	eb c4 	jmp	-60 <runtime.unminitSignals+0x5a>
  433556:	cc 	int3
  433557:	cc 	int3
  433558:	cc 	int3
  433559:	cc 	int3
  43355a:	cc 	int3
  43355b:	cc 	int3
  43355c:	cc 	int3
  43355d:	cc 	int3
  43355e:	cc 	int3
  43355f:	cc 	int3

runtime.signalstack:
  433560:	48 83 ec 30 	subq	$48, %rsp
  433564:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  433569:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  43356e:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  433577:	0f 57 c0 	xorps	%xmm0, %xmm0
  43357a:	0f 11 44 24 18 	movups	%xmm0, 24(%rsp)
  43357f:	48 8b 44 24 38 	movq	56(%rsp), %rax
  433584:	48 8b 48 08 	movq	8(%rax), %rcx
  433588:	48 2b 08 	subq	(%rax), %rcx
  43358b:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  433590:	48 8d 4c 24 10 	leaq	16(%rsp), %rcx
  433595:	84 01 	testb	%al, (%rcx)
  433597:	48 8b 00 	movq	(%rax), %rax
  43359a:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43359f:	48 8d 44 24 10 	leaq	16(%rsp), %rax
  4335a4:	48 89 04 24 	movq	%rax, (%rsp)
  4335a8:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  4335b1:	e8 1a 49 01 00 	callq	84250 <runtime.sigaltstack>
  4335b6:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  4335bb:	48 83 c4 30 	addq	$48, %rsp
  4335bf:	c3 	retq

runtime.sigsend:
  4335c0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4335c9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4335cd:	0f 86 7f 01 00 00 	jbe	383 <runtime.sigsend+0x192>
  4335d3:	48 83 ec 18 	subq	$24, %rsp
  4335d7:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  4335dc:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  4335e1:	0f b6 15 98 05 09 00 	movzbl	591256(%rip), %edx
  4335e8:	84 d2 	testb	%dl, %dl
  4335ea:	0f 84 31 01 00 00 	je	305 <runtime.sigsend+0x161>
  4335f0:	8b 4c 24 20 	movl	32(%rsp), %ecx
  4335f4:	83 f9 60 	cmpl	$96, %ecx
  4335f7:	0f 83 24 01 00 00 	jae	292 <runtime.sigsend+0x161>
  4335fd:	ba 01 00 00 00 	movl	$1, %edx
  433602:	48 8d 1d 73 05 09 00 	leaq	591219(%rip), %rbx
  433609:	f0 	lock
  43360a:	0f c1 13 	xaddl	%edx, (%rbx)
  43360d:	89 ca 	movl	%ecx, %edx
  43360f:	c1 e9 05 	shrl	$5, %ecx
  433612:	48 83 f9 03 	cmpq	$3, %rcx
  433616:	0f 83 2f 01 00 00 	jae	303 <runtime.sigsend+0x18b>
  43361c:	48 8d 35 1d 05 09 00 	leaq	591133(%rip), %rsi
  433623:	48 8d 7c 8e 14 	leaq	20(%rsi,%rcx,4), %rdi
  433628:	8b 3f 	movl	(%rdi), %edi
  43362a:	89 c8 	movl	%ecx, %eax
  43362c:	89 d1 	movl	%edx, %ecx
  43362e:	41 b8 01 00 00 00 	movl	$1, %r8d
  433634:	41 d3 e0 	shll	%cl, %r8d
  433637:	0f a3 cf 	btl	%ecx, %edi
  43363a:	0f 83 c9 00 00 00 	jae	201 <runtime.sigsend+0x149>
  433640:	eb 03 	jmp	3 <runtime.sigsend+0x85>
  433642:	44 89 d8 	movl	%r11d, %eax
  433645:	8b 7c 86 08 	movl	8(%rsi,%rax,4), %edi
  433649:	4c 8d 4c 86 08 	leaq	8(%rsi,%rax,4), %r9
  43364e:	0f a3 cf 	btl	%ecx, %edi
  433651:	0f 82 9a 00 00 00 	jb	154 <runtime.sigsend+0x131>
  433657:	41 89 fa 	movl	%edi, %r10d
  43365a:	44 09 c7 	orl	%r8d, %edi
  43365d:	41 89 c3 	movl	%eax, %r11d
  433660:	44 89 d0 	movl	%r10d, %eax
  433663:	f0 	lock
  433664:	41 0f b1 39 	cmpxchgl	%edi, (%r9)
  433668:	40 0f 94 c7 	sete	%dil
  43366c:	40 84 ff 	testb	%dil, %dil
  43366f:	74 d1 	je	-47 <runtime.sigsend+0x82>
  433671:	8b 0d 01 05 09 00 	movl	591105(%rip), %ecx
  433677:	85 c9 	testl	%ecx, %ecx
  433679:	75 31 	jne	49 <runtime.sigsend+0xec>
  43367b:	31 c0 	xorl	%eax, %eax
  43367d:	48 8d 0d f4 04 09 00 	leaq	591092(%rip), %rcx
  433684:	ba 02 00 00 00 	movl	$2, %edx
  433689:	f0 	lock
  43368a:	0f b1 11 	cmpxchgl	%edx, (%rcx)
  43368d:	0f 94 c1 	sete	%cl
  433690:	84 c9 	testb	%cl, %cl
  433692:	74 dd 	je	-35 <runtime.sigsend+0xb1>
  433694:	b8 ff ff ff ff 	movl	$4294967295, %eax
  433699:	f0 	lock
  43369a:	0f c1 03 	xaddl	%eax, (%rbx)
  43369d:	c6 44 24 28 01 	movb	$1, 40(%rsp)
  4336a2:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  4336a7:	48 83 c4 18 	addq	$24, %rsp
  4336ab:	c3 	retq
  4336ac:	83 f9 01 	cmpl	$1, %ecx
  4336af:	75 39 	jne	57 <runtime.sigsend+0x12a>
  4336b1:	b8 01 00 00 00 	movl	$1, %eax
  4336b6:	48 8d 0d bb 04 09 00 	leaq	591035(%rip), %rcx
  4336bd:	31 d2 	xorl	%edx, %edx
  4336bf:	f0 	lock
  4336c0:	0f b1 11 	cmpxchgl	%edx, (%rcx)
  4336c3:	0f 94 c1 	sete	%cl
  4336c6:	84 c9 	testb	%cl, %cl
  4336c8:	75 07 	jne	7 <runtime.sigsend+0x111>
  4336ca:	ba 02 00 00 00 	movl	$2, %edx
  4336cf:	eb a0 	jmp	-96 <runtime.sigsend+0xb1>
  4336d1:	48 8d 05 68 04 09 00 	leaq	590952(%rip), %rax
  4336d8:	48 89 04 24 	movq	%rax, (%rsp)
  4336dc:	e8 af 60 fd ff 	callq	-171857 <runtime.notewakeup>
  4336e1:	48 8d 1d 94 04 09 00 	leaq	590996(%rip), %rbx
  4336e8:	eb aa 	jmp	-86 <runtime.sigsend+0xd4>
  4336ea:	83 f9 02 	cmpl	$2, %ecx
  4336ed:	74 a5 	je	-91 <runtime.sigsend+0xd4>
  4336ef:	eb 3f 	jmp	63 <runtime.sigsend+0x170>
  4336f1:	b8 ff ff ff ff 	movl	$4294967295, %eax
  4336f6:	f0 	lock
  4336f7:	0f c1 03 	xaddl	%eax, (%rbx)
  4336fa:	c6 44 24 28 01 	movb	$1, 40(%rsp)
  4336ff:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  433704:	48 83 c4 18 	addq	$24, %rsp
  433708:	c3 	retq
  433709:	b8 ff ff ff ff 	movl	$4294967295, %eax
  43370e:	f0 	lock
  43370f:	0f c1 03 	xaddl	%eax, (%rbx)
  433712:	c6 44 24 28 00 	movb	$0, 40(%rsp)
  433717:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  43371c:	48 83 c4 18 	addq	$24, %rsp
  433720:	c3 	retq
  433721:	c6 44 24 28 00 	movb	$0, 40(%rsp)
  433726:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  43372b:	48 83 c4 18 	addq	$24, %rsp
  43372f:	c3 	retq
  433730:	48 8d 05 c4 87 03 00 	leaq	231364(%rip), %rax
  433737:	48 89 04 24 	movq	%rax, (%rsp)
  43373b:	48 c7 44 24 08 1b 00 00 00 	movq	$27, 8(%rsp)
  433744:	e8 87 da fe ff 	callq	-75129 <runtime.throw>
  433749:	0f 0b 	ud2
  43374b:	e8 f0 c2 fe ff 	callq	-81168 <runtime.panicindex>
  433750:	0f 0b 	ud2
  433752:	e8 19 0e 01 00 	callq	69145 <runtime.morestack_noctxt>
  433757:	e9 64 fe ff ff 	jmp	-412 <runtime.sigsend>
  43375c:	cc 	int3
  43375d:	cc 	int3
  43375e:	cc 	int3
  43375f:	cc 	int3

runtime.makeslice:
  433760:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  433769:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43376d:	0f 86 df 00 00 00 	jbe	223 <runtime.makeslice+0xf2>
  433773:	48 83 ec 28 	subq	$40, %rsp
  433777:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  43377c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  433781:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  433786:	48 8b 11 	movq	(%rcx), %rdx
  433789:	48 83 fa 21 	cmpq	$33, %rdx
  43378d:	73 70 	jae	112 <runtime.makeslice+0x9f>
  43378f:	48 8d 05 ea 1d 07 00 	leaq	466410(%rip), %rax
  433796:	48 8b 04 d0 	movq	(%rax,%rdx,8), %rax
  43379a:	48 8b 5c 24 38 	movq	56(%rsp), %rbx
  43379f:	48 85 db 	testq	%rbx, %rbx
  4337a2:	0f 8c 8c 00 00 00 	jl	140 <runtime.makeslice+0xd4>
  4337a8:	48 39 c3 	cmpq	%rax, %rbx
  4337ab:	0f 87 83 00 00 00 	ja	131 <runtime.makeslice+0xd4>
  4337b1:	48 8b 74 24 40 	movq	64(%rsp), %rsi
  4337b6:	48 39 de 	cmpq	%rbx, %rsi
  4337b9:	7c 5b 	jl	91 <runtime.makeslice+0xb6>
  4337bb:	48 39 c6 	cmpq	%rax, %rsi
  4337be:	77 56 	ja	86 <runtime.makeslice+0xb6>
  4337c0:	48 0f af d6 	imulq	%rsi, %rdx
  4337c4:	48 89 14 24 	movq	%rdx, (%rsp)
  4337c8:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4337cd:	c6 44 24 10 01 	movb	$1, 16(%rsp)
  4337d2:	e8 39 6e fd ff 	callq	-168391 <runtime.mallocgc>
  4337d7:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4337dc:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  4337e1:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4337e6:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  4337eb:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4337f0:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  4337f5:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4337fa:	48 83 c4 28 	addq	$40, %rsp
  4337fe:	c3 	retq
  4337ff:	48 b8 ff ff ff ff 7f 00 00 00 	movabsq	$549755813887, %rax
  433809:	48 89 d3 	movq	%rdx, %rbx
  43380c:	31 d2 	xorl	%edx, %edx
  43380e:	48 f7 f3 	divq	%rbx
  433811:	48 89 da 	movq	%rbx, %rdx
  433814:	eb 84 	jmp	-124 <runtime.makeslice+0x3a>
  433816:	48 8d 05 a3 76 02 00 	leaq	161443(%rip), %rax
  43381d:	48 89 04 24 	movq	%rax, (%rsp)
  433821:	48 8d 05 98 15 04 00 	leaq	267672(%rip), %rax
  433828:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43382d:	e8 fe d1 fe ff 	callq	-77314 <runtime.gopanic>
  433832:	0f 0b 	ud2
  433834:	48 8d 05 85 76 02 00 	leaq	161413(%rip), %rax
  43383b:	48 89 04 24 	movq	%rax, (%rsp)
  43383f:	48 8d 05 6a 15 04 00 	leaq	267626(%rip), %rax
  433846:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43384b:	e8 e0 d1 fe ff 	callq	-77344 <runtime.gopanic>
  433850:	0f 0b 	ud2
  433852:	e8 19 0d 01 00 	callq	68889 <runtime.morestack_noctxt>
  433857:	e9 04 ff ff ff 	jmp	-252 <runtime.makeslice>
  43385c:	cc 	int3
  43385d:	cc 	int3
  43385e:	cc 	int3
  43385f:	cc 	int3

runtime.growslice:
  433860:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  433869:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43386d:	0f 86 c0 05 00 00 	jbe	1472 <runtime.growslice+0x5d3>
  433873:	48 83 ec 60 	subq	$96, %rsp
  433877:	48 89 6c 24 58 	movq	%rbp, 88(%rsp)
  43387c:	48 8d 6c 24 58 	leaq	88(%rsp), %rbp
  433881:	48 8b 4c 24 68 	movq	104(%rsp), %rcx
  433886:	48 8b 11 	movq	(%rcx), %rdx
  433889:	48 85 d2 	testq	%rdx, %rdx
  43388c:	0f 84 f8 04 00 00 	je	1272 <runtime.growslice+0x52a>
  433892:	48 8b 9c 24 80 00 00 00 	movq	128(%rsp), %rbx
  43389a:	48 8d 34 1b 	leaq	(%rbx,%rbx), %rsi
  43389e:	48 8b bc 24 88 00 00 00 	movq	136(%rsp), %rdi
  4338a6:	48 39 f7 	cmpq	%rsi, %rdi
  4338a9:	0f 8f cb 04 00 00 	jg	1227 <runtime.growslice+0x51a>
  4338af:	4c 8b 44 24 78 	movq	120(%rsp), %r8
  4338b4:	49 81 f8 00 04 00 00 	cmpq	$1024, %r8
  4338bb:	0f 8c ab 04 00 00 	jl	1195 <runtime.growslice+0x50c>
  4338c1:	48 89 d8 	movq	%rbx, %rax
  4338c4:	eb 17 	jmp	23 <runtime.growslice+0x7d>
  4338c6:	48 89 de 	movq	%rbx, %rsi
  4338c9:	48 c1 fb 3f 	sarq	$63, %rbx
  4338cd:	48 c1 eb 3e 	shrq	$62, %rbx
  4338d1:	4c 8d 0c 33 	leaq	(%rbx,%rsi), %r9
  4338d5:	49 c1 f9 02 	sarq	$2, %r9
  4338d9:	49 8d 1c 31 	leaq	(%r9,%rsi), %rbx
  4338dd:	48 85 db 	testq	%rbx, %rbx
  4338e0:	7e 08 	jle	8 <runtime.growslice+0x8a>
  4338e2:	48 39 fb 	cmpq	%rdi, %rbx
  4338e5:	7c df 	jl	-33 <runtime.growslice+0x66>
  4338e7:	48 85 db 	testq	%rbx, %rbx
  4338ea:	0f 8f 6c 04 00 00 	jg	1132 <runtime.growslice+0x4fc>
  4338f0:	48 89 fb 	movq	%rdi, %rbx
  4338f3:	48 83 fa 01 	cmpq	$1, %rdx
  4338f7:	0f 85 39 02 00 00 	jne	569 <runtime.growslice+0x2d6>
  4338fd:	48 81 ff 00 80 00 00 	cmpq	$32768, %rdi
  433904:	0f 83 05 02 00 00 	jae	517 <runtime.growslice+0x2af>
  43390a:	48 81 ff f8 03 00 00 	cmpq	$1016, %rdi
  433911:	0f 87 bb 01 00 00 	ja	443 <runtime.growslice+0x272>
  433917:	48 8d 57 07 	leaq	7(%rdi), %rdx
  43391b:	48 c1 ea 03 	shrq	$3, %rdx
  43391f:	48 81 fa 81 00 00 00 	cmpq	$129, %rdx
  433926:	0f 83 e2 04 00 00 	jae	1250 <runtime.growslice+0x5ae>
  43392c:	48 8d 35 ed 17 07 00 	leaq	464877(%rip), %rsi
  433933:	0f b6 14 32 	movzbl	(%rdx,%rsi), %edx
  433937:	48 83 fa 43 	cmpq	$67, %rdx
  43393b:	0f 83 cd 04 00 00 	jae	1229 <runtime.growslice+0x5ae>
  433941:	48 8d 35 78 18 07 00 	leaq	465016(%rip), %rsi
  433948:	0f b7 14 56 	movzwl	(%rsi,%rdx,2), %edx
  43394c:	48 be ff ff ff ff 7f 00 00 00 	movabsq	$549755813887, %rsi
  433956:	48 39 f7 	cmpq	%rsi, %rdi
  433959:	40 0f 97 c7 	seta	%dil
  43395d:	49 89 d9 	movq	%rbx, %r9
  433960:	4d 89 c2 	movq	%r8, %r10
  433963:	49 89 d3 	movq	%rdx, %r11
  433966:	49 39 c1 	cmpq	%rax, %r9
  433969:	0f 8c 5e 04 00 00 	jl	1118 <runtime.growslice+0x56d>
  43396f:	40 84 ff 	testb	%dil, %dil
  433972:	0f 85 55 04 00 00 	jne	1109 <runtime.growslice+0x56d>
  433978:	48 39 f2 	cmpq	%rsi, %rdx
  43397b:	0f 87 4c 04 00 00 	ja	1100 <runtime.growslice+0x56d>
  433981:	4c 89 44 24 38 	movq	%r8, 56(%rsp)
  433986:	4c 89 5c 24 30 	movq	%r11, 48(%rsp)
  43398b:	0f b6 41 17 	movzbl	23(%rcx), %eax
  43398f:	a8 80 	testb	$-128, %al
  433991:	0f 85 c5 00 00 00 	jne	197 <runtime.growslice+0x1fc>
  433997:	48 89 14 24 	movq	%rdx, (%rsp)
  43399b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4339a0:	c6 44 24 10 01 	movb	$1, 16(%rsp)
  4339a5:	e8 66 6c fd ff 	callq	-168858 <runtime.mallocgc>
  4339aa:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4339af:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  4339b4:	0f b6 0d 55 00 09 00 	movzbl	589909(%rip), %ecx
  4339bb:	84 c9 	testb	%cl, %cl
  4339bd:	74 79 	je	121 <runtime.growslice+0x1d8>
  4339bf:	31 c9 	xorl	%ecx, %ecx
  4339c1:	eb 3f 	jmp	63 <runtime.growslice+0x1a2>
  4339c3:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  4339c8:	48 8b 54 24 68 	movq	104(%rsp), %rdx
  4339cd:	48 89 14 24 	movq	%rdx, (%rsp)
  4339d1:	48 8d 1c 01 	leaq	(%rcx,%rax), %rbx
  4339d5:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  4339da:	48 8b 5c 24 70 	movq	112(%rsp), %rbx
  4339df:	48 8d 34 19 	leaq	(%rcx,%rbx), %rsi
  4339e3:	48 89 74 24 10 	movq	%rsi, 16(%rsp)
  4339e8:	e8 a3 80 fd ff 	callq	-163677 <runtime.typedmemmove>
  4339ed:	48 8b 44 24 68 	movq	104(%rsp), %rax
  4339f2:	48 8b 08 	movq	(%rax), %rcx
  4339f5:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  4339fa:	48 01 d1 	addq	%rdx, %rcx
  4339fd:	48 8b 44 24 48 	movq	72(%rsp), %rax
  433a02:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  433a07:	48 39 d1 	cmpq	%rdx, %rcx
  433a0a:	72 b7 	jb	-73 <runtime.growslice+0x163>
  433a0c:	48 89 84 24 90 00 00 00 	movq	%rax, 144(%rsp)
  433a14:	48 8b 44 24 78 	movq	120(%rsp), %rax
  433a19:	48 89 84 24 98 00 00 00 	movq	%rax, 152(%rsp)
  433a21:	48 8b 44 24 30 	movq	48(%rsp), %rax
  433a26:	48 89 84 24 a0 00 00 00 	movq	%rax, 160(%rsp)
  433a2e:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  433a33:	48 83 c4 60 	addq	$96, %rsp
  433a37:	c3 	retq
  433a38:	48 89 04 24 	movq	%rax, (%rsp)
  433a3c:	48 8b 4c 24 70 	movq	112(%rsp), %rcx
  433a41:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  433a46:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  433a4b:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  433a50:	e8 ab 36 01 00 	callq	79531 <runtime.memmove>
  433a55:	48 8b 44 24 48 	movq	72(%rsp), %rax
  433a5a:	eb b0 	jmp	-80 <runtime.growslice+0x1ac>
  433a5c:	48 89 5c 24 28 	movq	%rbx, 40(%rsp)
  433a61:	48 89 54 24 40 	movq	%rdx, 64(%rsp)
  433a66:	48 89 14 24 	movq	%rdx, (%rsp)
  433a6a:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  433a73:	c6 44 24 10 00 	movb	$0, 16(%rsp)
  433a78:	e8 93 6b fd ff 	callq	-169069 <runtime.mallocgc>
  433a7d:	48 8b 44 24 18 	movq	24(%rsp), %rax
  433a82:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  433a87:	48 89 04 24 	movq	%rax, (%rsp)
  433a8b:	48 8b 4c 24 70 	movq	112(%rsp), %rcx
  433a90:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  433a95:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  433a9a:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  433a9f:	e8 5c 36 01 00 	callq	79452 <runtime.memmove>
  433aa4:	48 8b 44 24 50 	movq	80(%rsp), %rax
  433aa9:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  433aae:	48 8d 14 01 	leaq	(%rcx,%rax), %rdx
  433ab2:	48 89 14 24 	movq	%rdx, (%rsp)
  433ab6:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  433abb:	48 29 ca 	subq	%rcx, %rdx
  433abe:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  433ac3:	e8 a8 33 01 00 	callq	78760 <runtime.memclrNoHeapPointers>
  433ac8:	48 8b 44 24 50 	movq	80(%rsp), %rax
  433acd:	e9 3a ff ff ff 	jmp	-198 <runtime.growslice+0x1ac>
  433ad2:	48 8d 97 7f fc ff ff 	leaq	-897(%rdi), %rdx
  433ad9:	48 c1 ea 07 	shrq	$7, %rdx
  433add:	48 81 fa f9 00 00 00 	cmpq	$249, %rdx
  433ae4:	0f 83 1d 03 00 00 	jae	797 <runtime.growslice+0x5a7>
  433aea:	48 8d 35 6f 17 07 00 	leaq	464751(%rip), %rsi
  433af1:	0f b6 14 32 	movzbl	(%rdx,%rsi), %edx
  433af5:	48 83 fa 43 	cmpq	$67, %rdx
  433af9:	0f 83 08 03 00 00 	jae	776 <runtime.growslice+0x5a7>
  433aff:	48 8d 35 ba 16 07 00 	leaq	464570(%rip), %rsi
  433b06:	0f b7 14 56 	movzwl	(%rsi,%rdx,2), %edx
  433b0a:	e9 3d fe ff ff 	jmp	-451 <runtime.growslice+0xec>
  433b0f:	48 8d 97 00 20 00 00 	leaq	8192(%rdi), %rdx
  433b16:	48 39 fa 	cmpq	%rdi, %rdx
  433b19:	73 08 	jae	8 <runtime.growslice+0x2c3>
  433b1b:	48 89 fa 	movq	%rdi, %rdx
  433b1e:	e9 29 fe ff ff 	jmp	-471 <runtime.growslice+0xec>
  433b23:	48 8d 97 ff 1f 00 00 	leaq	8191(%rdi), %rdx
  433b2a:	48 81 e2 00 e0 ff ff 	andq	$-8192, %rdx
  433b31:	e9 16 fe ff ff 	jmp	-490 <runtime.growslice+0xec>
  433b36:	48 83 fa 08 	cmpq	$8, %rdx
  433b3a:	0f 85 eb 00 00 00 	jne	235 <runtime.growslice+0x3cb>
  433b40:	48 89 fa 	movq	%rdi, %rdx
  433b43:	48 c1 e7 03 	shlq	$3, %rdi
  433b47:	48 81 ff 00 80 00 00 	cmpq	$32768, %rdi
  433b4e:	0f 83 b0 00 00 00 	jae	176 <runtime.growslice+0x3a4>
  433b54:	48 81 ff f8 03 00 00 	cmpq	$1016, %rdi
  433b5b:	77 6d 	ja	109 <runtime.growslice+0x36a>
  433b5d:	48 8d 77 07 	leaq	7(%rdi), %rsi
  433b61:	48 c1 ee 03 	shrq	$3, %rsi
  433b65:	48 81 fe 81 00 00 00 	cmpq	$129, %rsi
  433b6c:	0f 83 8e 02 00 00 	jae	654 <runtime.growslice+0x5a0>
  433b72:	48 8d 3d a7 15 07 00 	leaq	464295(%rip), %rdi
  433b79:	0f b6 34 3e 	movzbl	(%rsi,%rdi), %esi
  433b7d:	48 83 fe 43 	cmpq	$67, %rsi
  433b81:	0f 83 79 02 00 00 	jae	633 <runtime.growslice+0x5a0>
  433b87:	48 8d 3d 32 16 07 00 	leaq	464434(%rip), %rdi
  433b8e:	0f b7 34 77 	movzwl	(%rdi,%rsi,2), %esi
  433b92:	4d 89 c2 	movq	%r8, %r10
  433b95:	49 c1 e0 03 	shlq	$3, %r8
  433b99:	49 89 d9 	movq	%rbx, %r9
  433b9c:	48 c1 e3 03 	shlq	$3, %rbx
  433ba0:	49 bc ff ff ff ff 0f 00 00 00 	movabsq	$68719476735, %r12
  433baa:	4c 39 e2 	cmpq	%r12, %rdx
  433bad:	40 0f 97 c7 	seta	%dil
  433bb1:	49 89 f3 	movq	%rsi, %r11
  433bb4:	49 c1 eb 03 	shrq	$3, %r11
  433bb8:	48 89 f2 	movq	%rsi, %rdx
  433bbb:	48 be ff ff ff ff 7f 00 00 00 	movabsq	$549755813887, %rsi
  433bc5:	e9 9c fd ff ff 	jmp	-612 <runtime.growslice+0x106>
  433bca:	48 8d b7 7f fc ff ff 	leaq	-897(%rdi), %rsi
  433bd1:	48 c1 ee 07 	shrq	$7, %rsi
  433bd5:	48 81 fe f9 00 00 00 	cmpq	$249, %rsi
  433bdc:	0f 83 17 02 00 00 	jae	535 <runtime.growslice+0x599>
  433be2:	48 8d 3d 77 16 07 00 	leaq	464503(%rip), %rdi
  433be9:	0f b6 34 3e 	movzbl	(%rsi,%rdi), %esi
  433bed:	48 83 fe 43 	cmpq	$67, %rsi
  433bf1:	0f 83 02 02 00 00 	jae	514 <runtime.growslice+0x599>
  433bf7:	48 8d 3d c2 15 07 00 	leaq	464322(%rip), %rdi
  433bfe:	0f b7 34 77 	movzwl	(%rdi,%rsi,2), %esi
  433c02:	eb 8e 	jmp	-114 <runtime.growslice+0x332>
  433c04:	48 8d b7 00 20 00 00 	leaq	8192(%rdi), %rsi
  433c0b:	48 39 fe 	cmpq	%rdi, %rsi
  433c0e:	73 08 	jae	8 <runtime.growslice+0x3b8>
  433c10:	48 89 fe 	movq	%rdi, %rsi
  433c13:	e9 7a ff ff ff 	jmp	-134 <runtime.growslice+0x332>
  433c18:	48 8d b7 ff 1f 00 00 	leaq	8191(%rdi), %rsi
  433c1f:	48 81 e6 00 e0 ff ff 	andq	$-8192, %rsi
  433c26:	e9 67 ff ff ff 	jmp	-153 <runtime.growslice+0x332>
  433c2b:	4c 89 c6 	movq	%r8, %rsi
  433c2e:	4c 0f af c2 	imulq	%rdx, %r8
  433c32:	49 89 d9 	movq	%rbx, %r9
  433c35:	48 0f af da 	imulq	%rdx, %rbx
  433c39:	49 89 fa 	movq	%rdi, %r10
  433c3c:	48 0f af fa 	imulq	%rdx, %rdi
  433c40:	48 81 ff 00 80 00 00 	cmpq	$32768, %rdi
  433c47:	0f 83 ec 00 00 00 	jae	236 <runtime.growslice+0x4d9>
  433c4d:	48 81 ff f8 03 00 00 	cmpq	$1016, %rdi
  433c54:	0f 87 a0 00 00 00 	ja	160 <runtime.growslice+0x49a>
  433c5a:	48 83 c7 07 	addq	$7, %rdi
  433c5e:	48 c1 ef 03 	shrq	$3, %rdi
  433c62:	48 81 ff 81 00 00 00 	cmpq	$129, %rdi
  433c69:	0f 83 83 01 00 00 	jae	387 <runtime.growslice+0x592>
  433c6f:	4c 8d 1d aa 14 07 00 	leaq	464042(%rip), %r11
  433c76:	42 0f b6 3c 1f 	movzbl	(%rdi,%r11), %edi
  433c7b:	48 83 ff 43 	cmpq	$67, %rdi
  433c7f:	0f 83 6d 01 00 00 	jae	365 <runtime.growslice+0x592>
  433c85:	4c 8d 1d 34 15 07 00 	leaq	464180(%rip), %r11
  433c8c:	41 0f b7 3c 7b 	movzwl	(%r11,%rdi,2), %edi
  433c91:	48 83 fa 21 	cmpq	$33, %rdx
  433c95:	73 40 	jae	64 <runtime.growslice+0x477>
  433c97:	4c 8d 1d e2 18 07 00 	leaq	465122(%rip), %r11
  433c9e:	4d 8b 1c d3 	movq	(%r11,%rdx,8), %r11
  433ca2:	49 89 c4 	movq	%rax, %r12
  433ca5:	48 89 f8 	movq	%rdi, %rax
  433ca8:	49 89 d5 	movq	%rdx, %r13
  433cab:	31 d2 	xorl	%edx, %edx
  433cad:	49 f7 f5 	divq	%r13
  433cb0:	4d 39 da 	cmpq	%r11, %r10
  433cb3:	41 0f 97 c5 	seta	%r13b
  433cb7:	48 be ff ff ff ff 7f 00 00 00 	movabsq	$549755813887, %rsi
  433cc1:	4c 8b 54 24 78 	movq	120(%rsp), %r10
  433cc6:	48 89 fa 	movq	%rdi, %rdx
  433cc9:	49 89 c3 	movq	%rax, %r11
  433ccc:	4c 89 e0 	movq	%r12, %rax
  433ccf:	44 89 ef 	movl	%r13d, %edi
  433cd2:	e9 8f fc ff ff 	jmp	-881 <runtime.growslice+0x106>
  433cd7:	49 89 c3 	movq	%rax, %r11
  433cda:	48 b8 ff ff ff ff 7f 00 00 00 	movabsq	$549755813887, %rax
  433ce4:	49 89 d4 	movq	%rdx, %r12
  433ce7:	31 d2 	xorl	%edx, %edx
  433ce9:	49 f7 f4 	divq	%r12
  433cec:	4c 89 e2 	movq	%r12, %rdx
  433cef:	49 89 c5 	movq	%rax, %r13
  433cf2:	4c 89 d8 	movq	%r11, %rax
  433cf5:	4d 89 eb 	movq	%r13, %r11
  433cf8:	eb a8 	jmp	-88 <runtime.growslice+0x442>
  433cfa:	48 81 c7 7f fc ff ff 	addq	$-897, %rdi
  433d01:	48 c1 ef 07 	shrq	$7, %rdi
  433d05:	48 81 ff f9 00 00 00 	cmpq	$249, %rdi
  433d0c:	0f 83 d9 00 00 00 	jae	217 <runtime.growslice+0x58b>
  433d12:	4c 8d 1d 47 15 07 00 	leaq	464199(%rip), %r11
  433d19:	42 0f b6 3c 1f 	movzbl	(%rdi,%r11), %edi
  433d1e:	48 83 ff 43 	cmpq	$67, %rdi
  433d22:	0f 83 c3 00 00 00 	jae	195 <runtime.growslice+0x58b>
  433d28:	4c 8d 1d 91 14 07 00 	leaq	464017(%rip), %r11
  433d2f:	41 0f b7 3c 7b 	movzwl	(%r11,%rdi,2), %edi
  433d34:	e9 58 ff ff ff 	jmp	-168 <runtime.growslice+0x431>
  433d39:	4c 8d 9f 00 20 00 00 	leaq	8192(%rdi), %r11
  433d40:	49 39 fb 	cmpq	%rdi, %r11
  433d43:	0f 82 48 ff ff ff 	jb	-184 <runtime.growslice+0x431>
  433d49:	48 81 c7 ff 1f 00 00 	addq	$8191, %rdi
  433d50:	48 81 e7 00 e0 ff ff 	andq	$-8192, %rdi
  433d57:	e9 35 ff ff ff 	jmp	-203 <runtime.growslice+0x431>
  433d5c:	48 89 df 	movq	%rbx, %rdi
  433d5f:	48 8b 9c 24 88 00 00 00 	movq	136(%rsp), %rbx
  433d67:	e9 87 fb ff ff 	jmp	-1145 <runtime.growslice+0x93>
  433d6c:	48 89 d8 	movq	%rbx, %rax
  433d6f:	48 89 fb 	movq	%rdi, %rbx
  433d72:	48 89 f7 	movq	%rsi, %rdi
  433d75:	e9 79 fb ff ff 	jmp	-1159 <runtime.growslice+0x93>
  433d7a:	48 89 d8 	movq	%rbx, %rax
  433d7d:	48 89 fb 	movq	%rdi, %rbx
  433d80:	4c 8b 44 24 78 	movq	120(%rsp), %r8
  433d85:	e9 69 fb ff ff 	jmp	-1175 <runtime.growslice+0x93>
  433d8a:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  433d92:	48 8b 8c 24 80 00 00 00 	movq	128(%rsp), %rcx
  433d9a:	48 39 c8 	cmpq	%rcx, %rax
  433d9d:	7c 76 	jl	118 <runtime.growslice+0x5b5>
  433d9f:	48 8d 0d 5a fc 08 00 	leaq	588890(%rip), %rcx
  433da6:	48 89 8c 24 90 00 00 00 	movq	%rcx, 144(%rsp)
  433dae:	48 8b 4c 24 78 	movq	120(%rsp), %rcx
  433db3:	48 89 8c 24 98 00 00 00 	movq	%rcx, 152(%rsp)
  433dbb:	48 89 84 24 a0 00 00 00 	movq	%rax, 160(%rsp)
  433dc3:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  433dc8:	48 83 c4 60 	addq	$96, %rsp
  433dcc:	c3 	retq
  433dcd:	48 8d 05 ec 70 02 00 	leaq	159980(%rip), %rax
  433dd4:	48 89 04 24 	movq	%rax, (%rsp)
  433dd8:	48 8d 05 11 10 04 00 	leaq	266257(%rip), %rax
  433ddf:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  433de4:	e8 47 cc fe ff 	callq	-78777 <runtime.gopanic>
  433de9:	0f 0b 	ud2
  433deb:	e8 50 bc fe ff 	callq	-82864 <runtime.panicindex>
  433df0:	0f 0b 	ud2
  433df2:	e8 49 bc fe ff 	callq	-82871 <runtime.panicindex>
  433df7:	0f 0b 	ud2
  433df9:	e8 42 bc fe ff 	callq	-82878 <runtime.panicindex>
  433dfe:	0f 0b 	ud2
  433e00:	e8 3b bc fe ff 	callq	-82885 <runtime.panicindex>
  433e05:	0f 0b 	ud2
  433e07:	e8 34 bc fe ff 	callq	-82892 <runtime.panicindex>
  433e0c:	0f 0b 	ud2
  433e0e:	e8 2d bc fe ff 	callq	-82899 <runtime.panicindex>
  433e13:	0f 0b 	ud2
  433e15:	48 8d 05 a4 70 02 00 	leaq	159908(%rip), %rax
  433e1c:	48 89 04 24 	movq	%rax, (%rsp)
  433e20:	48 8d 05 b9 0f 04 00 	leaq	266169(%rip), %rax
  433e27:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  433e2c:	e8 ff cb fe ff 	callq	-78849 <runtime.gopanic>
  433e31:	0f 0b 	ud2
  433e33:	e8 38 07 01 00 	callq	67384 <runtime.morestack_noctxt>
  433e38:	e9 23 fa ff ff 	jmp	-1501 <runtime.growslice>
  433e3d:	cc 	int3
  433e3e:	cc 	int3
  433e3f:	cc 	int3

runtime.stackinit:
  433e40:	31 c0 	xorl	%eax, %eax
  433e42:	eb 23 	jmp	35 <runtime.stackinit+0x27>
  433e44:	48 89 c1 	movq	%rax, %rcx
  433e47:	48 c1 e0 04 	shlq	$4, %rax
  433e4b:	48 8d 15 ee 39 07 00 	leaq	473582(%rip), %rdx
  433e52:	48 c7 04 02 00 00 00 00 	movq	$0, (%rdx,%rax)
  433e5a:	48 c7 44 02 08 00 00 00 00 	movq	$0, 8(%rdx,%rax)
  433e63:	48 8d 41 01 	leaq	1(%rcx), %rax
  433e67:	48 83 f8 04 	cmpq	$4, %rax
  433e6b:	7c d7 	jl	-41 <runtime.stackinit+0x4>
  433e6d:	31 c0 	xorl	%eax, %eax
  433e6f:	eb 24 	jmp	36 <runtime.stackinit+0x55>
  433e71:	48 89 c1 	movq	%rax, %rcx
  433e74:	48 c1 e0 04 	shlq	$4, %rax
  433e78:	48 8d 15 61 3d 07 00 	leaq	474465(%rip), %rdx
  433e7f:	48 c7 44 02 08 00 00 00 00 	movq	$0, 8(%rdx,%rax)
  433e88:	48 c7 44 02 10 00 00 00 00 	movq	$0, 16(%rdx,%rax)
  433e91:	48 8d 41 01 	leaq	1(%rcx), %rax
  433e95:	48 83 f8 1a 	cmpq	$26, %rax
  433e99:	7c d6 	jl	-42 <runtime.stackinit+0x31>
  433e9b:	c3 	retq
  433e9c:	cc 	int3
  433e9d:	cc 	int3
  433e9e:	cc 	int3
  433e9f:	cc 	int3

runtime.stacklog2:
  433ea0:	48 8b 44 24 08 	movq	8(%rsp), %rax
  433ea5:	31 c9 	xorl	%ecx, %ecx
  433ea7:	eb 06 	jmp	6 <runtime.stacklog2+0xf>
  433ea9:	48 d1 e8 	shrq	%rax
  433eac:	48 ff c1 	incq	%rcx
  433eaf:	48 83 f8 01 	cmpq	$1, %rax
  433eb3:	77 f4 	ja	-12 <runtime.stacklog2+0x9>
  433eb5:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  433eba:	c3 	retq
  433ebb:	cc 	int3
  433ebc:	cc 	int3
  433ebd:	cc 	int3
  433ebe:	cc 	int3
  433ebf:	cc 	int3

runtime.stackpoolalloc:
  433ec0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  433ec9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  433ecd:	0f 86 ba 01 00 00 	jbe	442 <runtime.stackpoolalloc+0x1cd>
  433ed3:	48 83 ec 40 	subq	$64, %rsp
  433ed7:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  433edc:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  433ee1:	0f b6 44 24 48 	movzbl	72(%rsp), %eax
  433ee6:	0f b6 c8 	movzbl	%al, %ecx
  433ee9:	48 83 f9 04 	cmpq	$4, %rcx
  433eed:	0f 83 93 01 00 00 	jae	403 <runtime.stackpoolalloc+0x1c6>
  433ef3:	48 c1 e1 04 	shlq	$4, %rcx
  433ef7:	48 8d 15 42 39 07 00 	leaq	473410(%rip), %rdx
  433efe:	48 8d 1c 0a 	leaq	(%rdx,%rcx), %rbx
  433f02:	48 89 5c 24 30 	movq	%rbx, 48(%rsp)
  433f07:	48 8b 0c 0a 	movq	(%rdx,%rcx), %rcx
  433f0b:	48 85 c9 	testq	%rcx, %rcx
  433f0e:	0f 85 01 01 00 00 	jne	257 <runtime.stackpoolalloc+0x155>
  433f14:	48 8d 05 85 83 07 00 	leaq	492421(%rip), %rax
  433f1b:	48 89 04 24 	movq	%rax, (%rsp)
  433f1f:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  433f28:	48 8d 05 31 08 09 00 	leaq	591921(%rip), %rax
  433f2f:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  433f34:	e8 c7 6d fe ff 	callq	-102969 <runtime.(*mheap).allocManual>
  433f39:	48 8b 44 24 18 	movq	24(%rsp), %rax
  433f3e:	48 85 c0 	testq	%rax, %rax
  433f41:	0f 84 24 01 00 00 	je	292 <runtime.stackpoolalloc+0x1ab>
  433f47:	0f b7 50 60 	movzwl	96(%rax), %edx
  433f4b:	66 85 d2 	testw	%dx, %dx
  433f4e:	0f 85 fc 00 00 00 	jne	252 <runtime.stackpoolalloc+0x190>
  433f54:	48 8b 50 28 	movq	40(%rax), %rdx
  433f58:	48 85 d2 	testq	%rdx, %rdx
  433f5b:	0f 85 d4 00 00 00 	jne	212 <runtime.stackpoolalloc+0x175>
  433f61:	0f b6 4c 24 48 	movzbl	72(%rsp), %ecx
  433f66:	ba 00 08 00 00 	movl	$2048, %edx
  433f6b:	48 d3 e2 	shlq	%cl, %rdx
  433f6e:	80 f9 40 	cmpb	$64, %cl
  433f71:	48 19 db 	sbbq	%rbx, %rbx
  433f74:	48 21 da 	andq	%rbx, %rdx
  433f77:	48 89 50 68 	movq	%rdx, 104(%rax)
  433f7b:	31 c9 	xorl	%ecx, %ecx
  433f7d:	eb 1c 	jmp	28 <runtime.stackpoolalloc+0xdb>
  433f7f:	48 8b 50 18 	movq	24(%rax), %rdx
  433f83:	48 01 ca 	addq	%rcx, %rdx
  433f86:	48 89 d3 	movq	%rdx, %rbx
  433f89:	48 8b 70 28 	movq	40(%rax), %rsi
  433f8d:	48 89 32 	movq	%rsi, (%rdx)
  433f90:	48 89 58 28 	movq	%rbx, 40(%rax)
  433f94:	48 8b 50 68 	movq	104(%rax), %rdx
  433f98:	48 01 d1 	addq	%rdx, %rcx
  433f9b:	48 81 f9 00 80 00 00 	cmpq	$32768, %rcx
  433fa2:	72 db 	jb	-37 <runtime.stackpoolalloc+0xbf>
  433fa4:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  433fa9:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  433fae:	48 89 0c 24 	movq	%rcx, (%rsp)
  433fb2:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  433fb7:	e8 94 82 fe ff 	callq	-97644 <runtime.(*mSpanList).insert>
  433fbc:	48 8b 44 24 28 	movq	40(%rsp), %rax
  433fc1:	48 8b 48 28 	movq	40(%rax), %rcx
  433fc5:	48 89 ca 	movq	%rcx, %rdx
  433fc8:	48 85 c9 	testq	%rcx, %rcx
  433fcb:	74 4d 	je	77 <runtime.stackpoolalloc+0x15a>
  433fcd:	48 8b 09 	movq	(%rcx), %rcx
  433fd0:	48 89 48 28 	movq	%rcx, 40(%rax)
  433fd4:	0f b7 48 60 	movzwl	96(%rax), %ecx
  433fd8:	ff c1 	incl	%ecx
  433fda:	66 89 48 60 	movw	%cx, 96(%rax)
  433fde:	48 8b 48 28 	movq	40(%rax), %rcx
  433fe2:	48 85 c9 	testq	%rcx, %rcx
  433fe5:	74 0f 	je	15 <runtime.stackpoolalloc+0x136>
  433fe7:	48 89 54 24 50 	movq	%rdx, 80(%rsp)
  433fec:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  433ff1:	48 83 c4 40 	addq	$64, %rsp
  433ff5:	c3 	retq
  433ff6:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  433ffb:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  434000:	48 89 0c 24 	movq	%rcx, (%rsp)
  434004:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  434009:	e8 a2 80 fe ff 	callq	-98142 <runtime.(*mSpanList).remove>
  43400e:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  434013:	eb d2 	jmp	-46 <runtime.stackpoolalloc+0x127>
  434015:	48 89 c8 	movq	%rcx, %rax
  434018:	eb a7 	jmp	-89 <runtime.stackpoolalloc+0x101>
  43401a:	48 8d 05 b2 77 03 00 	leaq	227250(%rip), %rax
  434021:	48 89 04 24 	movq	%rax, (%rsp)
  434025:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  43402e:	e8 9d d1 fe ff 	callq	-77411 <runtime.throw>
  434033:	0f 0b 	ud2
  434035:	48 8d 05 45 6d 03 00 	leaq	224581(%rip), %rax
  43403c:	48 89 04 24 	movq	%rax, (%rsp)
  434040:	48 c7 44 24 08 12 00 00 00 	movq	$18, 8(%rsp)
  434049:	e8 82 d1 fe ff 	callq	-77438 <runtime.throw>
  43404e:	0f 0b 	ud2
  434050:	48 8d 05 13 68 03 00 	leaq	223251(%rip), %rax
  434057:	48 89 04 24 	movq	%rax, (%rsp)
  43405b:	48 c7 44 24 08 0e 00 00 00 	movq	$14, 8(%rsp)
  434064:	e8 67 d1 fe ff 	callq	-77465 <runtime.throw>
  434069:	0f 0b 	ud2
  43406b:	48 8d 05 03 67 03 00 	leaq	222979(%rip), %rax
  434072:	48 89 04 24 	movq	%rax, (%rsp)
  434076:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  43407f:	e8 4c d1 fe ff 	callq	-77492 <runtime.throw>
  434084:	0f 0b 	ud2
  434086:	e8 b5 b9 fe ff 	callq	-83531 <runtime.panicindex>
  43408b:	0f 0b 	ud2
  43408d:	e8 de 04 01 00 	callq	66782 <runtime.morestack_noctxt>
  434092:	e9 29 fe ff ff 	jmp	-471 <runtime.stackpoolalloc>
  434097:	cc 	int3
  434098:	cc 	int3
  434099:	cc 	int3
  43409a:	cc 	int3
  43409b:	cc 	int3
  43409c:	cc 	int3
  43409d:	cc 	int3
  43409e:	cc 	int3
  43409f:	cc 	int3

runtime.stackpoolfree:
  4340a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4340a9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4340ad:	0f 86 57 01 00 00 	jbe	343 <runtime.stackpoolfree+0x16a>
  4340b3:	48 83 ec 28 	subq	$40, %rsp
  4340b7:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  4340bc:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  4340c1:	48 8b 05 00 95 07 00 	movq	496896(%rip), %rax
  4340c8:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4340cd:	48 89 ca 	movq	%rcx, %rdx
  4340d0:	48 29 c1 	subq	%rax, %rcx
  4340d3:	48 8b 05 16 92 07 00 	movq	496150(%rip), %rax
  4340da:	48 8b 1d 07 92 07 00 	movq	496135(%rip), %rbx
  4340e1:	48 c1 e9 0d 	shrq	$13, %rcx
  4340e5:	48 39 c1 	cmpq	%rax, %rcx
  4340e8:	0f 83 15 01 00 00 	jae	277 <runtime.stackpoolfree+0x163>
  4340ee:	48 8b 04 cb 	movq	(%rbx,%rcx,8), %rax
  4340f2:	0f b6 48 64 	movzbl	100(%rax), %ecx
  4340f6:	80 f9 02 	cmpb	$2, %cl
  4340f9:	0f 85 e9 00 00 00 	jne	233 <runtime.stackpoolfree+0x148>
  4340ff:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  434104:	48 8b 48 28 	movq	40(%rax), %rcx
  434108:	48 85 c9 	testq	%rcx, %rcx
  43410b:	0f 84 8f 00 00 00 	je	143 <runtime.stackpoolfree+0x100>
  434111:	48 89 d1 	movq	%rdx, %rcx
  434114:	48 8b 58 28 	movq	40(%rax), %rbx
  434118:	48 89 1a 	movq	%rbx, (%rdx)
  43411b:	48 89 48 28 	movq	%rcx, 40(%rax)
  43411f:	0f b7 48 60 	movzwl	96(%rax), %ecx
  434123:	8d 51 ff 	leal	-1(%rcx), %edx
  434126:	66 89 50 60 	movw	%dx, 96(%rax)
  43412a:	8b 15 ac f7 08 00 	movl	587692(%rip), %edx
  434130:	85 d2 	testl	%edx, %edx
  434132:	75 62 	jne	98 <runtime.stackpoolfree+0xf6>
  434134:	66 83 f9 01 	cmpw	$1, %cx
  434138:	75 5c 	jne	92 <runtime.stackpoolfree+0xf6>
  43413a:	0f b6 4c 24 38 	movzbl	56(%rsp), %ecx
  43413f:	0f b6 c9 	movzbl	%cl, %ecx
  434142:	48 83 f9 04 	cmpq	$4, %rcx
  434146:	0f 83 8e 00 00 00 	jae	142 <runtime.stackpoolfree+0x13a>
  43414c:	48 c1 e1 04 	shlq	$4, %rcx
  434150:	48 8d 15 e9 36 07 00 	leaq	472809(%rip), %rdx
  434157:	48 01 d1 	addq	%rdx, %rcx
  43415a:	48 89 0c 24 	movq	%rcx, (%rsp)
  43415e:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  434163:	e8 48 7f fe ff 	callq	-98488 <runtime.(*mSpanList).remove>
  434168:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43416d:	48 c7 40 28 00 00 00 00 	movq	$0, 40(%rax)
  434175:	48 8d 0d 24 81 07 00 	leaq	491812(%rip), %rcx
  43417c:	48 89 0c 24 	movq	%rcx, (%rsp)
  434180:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  434185:	48 8d 05 d4 05 09 00 	leaq	591316(%rip), %rax
  43418c:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  434191:	e8 6a 73 fe ff 	callq	-101526 <runtime.(*mheap).freeManual>
  434196:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  43419b:	48 83 c4 28 	addq	$40, %rsp
  43419f:	c3 	retq
  4341a0:	0f b6 4c 24 38 	movzbl	56(%rsp), %ecx
  4341a5:	0f b6 d9 	movzbl	%cl, %ebx
  4341a8:	48 83 fb 04 	cmpq	$4, %rbx
  4341ac:	73 33 	jae	51 <runtime.stackpoolfree+0x141>
  4341ae:	48 c1 e3 04 	shlq	$4, %rbx
  4341b2:	48 8d 0d 87 36 07 00 	leaq	472711(%rip), %rcx
  4341b9:	48 8d 14 19 	leaq	(%rcx,%rbx), %rdx
  4341bd:	48 89 14 24 	movq	%rdx, (%rsp)
  4341c1:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4341c6:	e8 85 80 fe ff 	callq	-98171 <runtime.(*mSpanList).insert>
  4341cb:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4341d0:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  4341d5:	e9 37 ff ff ff 	jmp	-201 <runtime.stackpoolfree+0x71>
  4341da:	e8 61 b8 fe ff 	callq	-83871 <runtime.panicindex>
  4341df:	0f 0b 	ud2
  4341e1:	e8 5a b8 fe ff 	callq	-83878 <runtime.panicindex>
  4341e6:	0f 0b 	ud2
  4341e8:	48 8d 05 19 88 03 00 	leaq	231449(%rip), %rax
  4341ef:	48 89 04 24 	movq	%rax, (%rsp)
  4341f3:	48 c7 44 24 08 21 00 00 00 	movq	$33, 8(%rsp)
  4341fc:	e8 cf cf fe ff 	callq	-77873 <runtime.throw>
  434201:	0f 0b 	ud2
  434203:	e8 38 b8 fe ff 	callq	-83912 <runtime.panicindex>
  434208:	0f 0b 	ud2
  43420a:	e8 61 03 01 00 	callq	66401 <runtime.morestack_noctxt>
  43420f:	e9 8c fe ff ff 	jmp	-372 <runtime.stackpoolfree>
  434214:	cc 	int3
  434215:	cc 	int3
  434216:	cc 	int3
  434217:	cc 	int3
  434218:	cc 	int3
  434219:	cc 	int3
  43421a:	cc 	int3
  43421b:	cc 	int3
  43421c:	cc 	int3
  43421d:	cc 	int3
  43421e:	cc 	int3
  43421f:	cc 	int3

runtime.stackcacherefill:
  434220:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  434229:	48 3b 61 18 	cmpq	24(%rcx), %rsp
  43422d:	0f 86 ce 00 00 00 	jbe	206 <runtime.stackcacherefill+0xe1>
  434233:	48 83 ec 28 	subq	$40, %rsp
  434237:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  43423c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  434241:	48 8d 05 88 f7 08 00 	leaq	587656(%rip), %rax
  434248:	48 89 04 24 	movq	%rax, (%rsp)
  43424c:	e8 cf 52 fd ff 	callq	-175409 <runtime.lock>
  434251:	31 c0 	xorl	%eax, %eax
  434253:	31 c9 	xorl	%ecx, %ecx
  434255:	eb 44 	jmp	68 <runtime.stackcacherefill+0x7b>
  434257:	0f b6 44 24 38 	movzbl	56(%rsp), %eax
  43425c:	88 04 24 	movb	%al, (%rsp)
  43425f:	e8 5c fc ff ff 	callq	-932 <runtime.stackpoolalloc>
  434264:	48 8b 44 24 08 	movq	8(%rsp), %rax
  434269:	48 89 c1 	movq	%rax, %rcx
  43426c:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  434271:	48 89 10 	movq	%rdx, (%rax)
  434274:	48 89 c8 	movq	%rcx, %rax
  434277:	0f b6 4c 24 38 	movzbl	56(%rsp), %ecx
  43427c:	ba 00 08 00 00 	movl	$2048, %edx
  434281:	48 d3 e2 	shlq	%cl, %rdx
  434284:	80 f9 40 	cmpb	$64, %cl
  434287:	48 19 db 	sbbq	%rbx, %rbx
  43428a:	48 21 da 	andq	%rbx, %rdx
  43428d:	48 8b 5c 24 10 	movq	16(%rsp), %rbx
  434292:	48 01 da 	addq	%rbx, %rdx
  434295:	48 89 c1 	movq	%rax, %rcx
  434298:	48 89 d0 	movq	%rdx, %rax
  43429b:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  4342a0:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  4342a5:	48 3d 00 40 00 00 	cmpq	$16384, %rax
  4342ab:	72 aa 	jb	-86 <runtime.stackcacherefill+0x37>
  4342ad:	48 8d 05 1c f7 08 00 	leaq	587548(%rip), %rax
  4342b4:	48 89 04 24 	movq	%rax, (%rsp)
  4342b8:	e8 03 54 fd ff 	callq	-175101 <runtime.unlock>
  4342bd:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4342c2:	84 00 	testb	%al, (%rax)
  4342c4:	0f b6 4c 24 38 	movzbl	56(%rsp), %ecx
  4342c9:	0f b6 c9 	movzbl	%cl, %ecx
  4342cc:	48 83 f9 04 	cmpq	$4, %rcx
  4342d0:	73 28 	jae	40 <runtime.stackcacherefill+0xda>
  4342d2:	48 c1 e1 04 	shlq	$4, %rcx
  4342d6:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  4342db:	48 89 94 08 58 04 00 00 	movq	%rdx, 1112(%rax,%rcx)
  4342e3:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  4342e8:	48 89 94 08 60 04 00 00 	movq	%rdx, 1120(%rax,%rcx)
  4342f0:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4342f5:	48 83 c4 28 	addq	$40, %rsp
  4342f9:	c3 	retq
  4342fa:	e8 41 b7 fe ff 	callq	-84159 <runtime.panicindex>
  4342ff:	0f 0b 	ud2
  434301:	e8 fa 29 00 00 	callq	10746 <runtime.morestackc>
  434306:	e9 15 ff ff ff 	jmp	-235 <runtime.stackcacherefill>
  43430b:	cc 	int3
  43430c:	cc 	int3
  43430d:	cc 	int3
  43430e:	cc 	int3
  43430f:	cc 	int3

runtime.stackcacherelease:
  434310:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  434319:	48 3b 61 18 	cmpq	24(%rcx), %rsp
  43431d:	0f 86 00 01 00 00 	jbe	256 <runtime.stackcacherelease+0x113>
  434323:	48 83 ec 48 	subq	$72, %rsp
  434327:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  43432c:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  434331:	48 8b 44 24 50 	movq	80(%rsp), %rax
  434336:	84 00 	testb	%al, (%rax)
  434338:	0f b6 4c 24 58 	movzbl	88(%rsp), %ecx
  43433d:	0f b6 d1 	movzbl	%cl, %edx
  434340:	48 83 fa 04 	cmpq	$4, %rdx
  434344:	0f 83 d2 00 00 00 	jae	210 <runtime.stackcacherelease+0x10c>
  43434a:	48 c1 e2 04 	shlq	$4, %rdx
  43434e:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  434353:	48 8b 8c 10 58 04 00 00 	movq	1112(%rax,%rdx), %rcx
  43435b:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  434360:	48 8b 9c 10 60 04 00 00 	movq	1120(%rax,%rdx), %rbx
  434368:	48 89 5c 24 30 	movq	%rbx, 48(%rsp)
  43436d:	48 8d 35 5c f6 08 00 	leaq	587356(%rip), %rsi
  434374:	48 89 34 24 	movq	%rsi, (%rsp)
  434378:	e8 a3 51 fd ff 	callq	-175709 <runtime.lock>
  43437d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  434382:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  434387:	eb 43 	jmp	67 <runtime.stackcacherelease+0xbc>
  434389:	48 89 c8 	movq	%rcx, %rax
  43438c:	48 8b 09 	movq	(%rcx), %rcx
  43438f:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  434394:	48 89 04 24 	movq	%rax, (%rsp)
  434398:	0f b6 44 24 58 	movzbl	88(%rsp), %eax
  43439d:	88 44 24 08 	movb	%al, 8(%rsp)
  4343a1:	e8 fa fc ff ff 	callq	-774 <runtime.stackpoolfree>
  4343a6:	0f b6 4c 24 58 	movzbl	88(%rsp), %ecx
  4343ab:	b8 00 08 00 00 	movl	$2048, %eax
  4343b0:	48 d3 e0 	shlq	%cl, %rax
  4343b3:	80 f9 40 	cmpb	$64, %cl
  4343b6:	48 19 d2 	sbbq	%rdx, %rdx
  4343b9:	48 21 d0 	andq	%rdx, %rax
  4343bc:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  4343c1:	48 29 c2 	subq	%rax, %rdx
  4343c4:	48 89 d0 	movq	%rdx, %rax
  4343c7:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  4343cc:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4343d1:	48 3d 00 40 00 00 	cmpq	$16384, %rax
  4343d7:	77 b0 	ja	-80 <runtime.stackcacherelease+0x79>
  4343d9:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  4343de:	48 8d 05 eb f5 08 00 	leaq	587243(%rip), %rax
  4343e5:	48 89 04 24 	movq	%rax, (%rsp)
  4343e9:	e8 d2 52 fd ff 	callq	-175406 <runtime.unlock>
  4343ee:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4343f3:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  4343f8:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  4343fd:	48 89 8c 02 58 04 00 00 	movq	%rcx, 1112(%rdx,%rax)
  434405:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  43440a:	48 89 8c 02 60 04 00 00 	movq	%rcx, 1120(%rdx,%rax)
  434412:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  434417:	48 83 c4 48 	addq	$72, %rsp
  43441b:	c3 	retq
  43441c:	e8 1f b6 fe ff 	callq	-84449 <runtime.panicindex>
  434421:	0f 0b 	ud2
  434423:	e8 d8 28 00 00 	callq	10456 <runtime.morestackc>
  434428:	e9 e3 fe ff ff 	jmp	-285 <runtime.stackcacherelease>
  43442d:	cc 	int3
  43442e:	cc 	int3
  43442f:	cc 	int3

runtime.stackcache_clear:
  434430:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  434439:	48 3b 61 18 	cmpq	24(%rcx), %rsp
  43443d:	0f 86 b9 00 00 00 	jbe	185 <runtime.stackcache_clear+0xcc>
  434443:	48 83 ec 30 	subq	$48, %rsp
  434447:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  43444c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  434451:	48 8d 05 78 f5 08 00 	leaq	587128(%rip), %rax
  434458:	48 89 04 24 	movq	%rax, (%rsp)
  43445c:	e8 bf 50 fd ff 	callq	-175937 <runtime.lock>
  434461:	31 c0 	xorl	%eax, %eax
  434463:	eb 4b 	jmp	75 <runtime.stackcache_clear+0x80>
  434465:	48 8b 0b 	movq	(%rbx), %rcx
  434468:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  43446d:	48 89 34 24 	movq	%rsi, (%rsp)
  434471:	88 44 24 08 	movb	%al, 8(%rsp)
  434475:	e8 26 fc ff ff 	callq	-986 <runtime.stackpoolfree>
  43447a:	0f b6 44 24 17 	movzbl	23(%rsp), %eax
  43447f:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  434484:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  434489:	48 8b 5c 24 18 	movq	24(%rsp), %rbx
  43448e:	48 89 de 	movq	%rbx, %rsi
  434491:	48 85 db 	testq	%rbx, %rbx
  434494:	75 cf 	jne	-49 <runtime.stackcache_clear+0x35>
  434496:	48 c7 84 11 58 04 00 00 00 00 00 00 	movq	$0, 1112(%rcx,%rdx)
  4344a2:	48 c7 84 11 60 04 00 00 00 00 00 00 	movq	$0, 1120(%rcx,%rdx)
  4344ae:	ff c0 	incl	%eax
  4344b0:	3c 04 	cmpb	$4, %al
  4344b2:	73 27 	jae	39 <runtime.stackcache_clear+0xab>
  4344b4:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  4344b9:	84 01 	testb	%al, (%rcx)
  4344bb:	0f b6 d0 	movzbl	%al, %edx
  4344be:	48 83 fa 04 	cmpq	$4, %rdx
  4344c2:	73 31 	jae	49 <runtime.stackcache_clear+0xc5>
  4344c4:	88 44 24 17 	movb	%al, 23(%rsp)
  4344c8:	48 c1 e2 04 	shlq	$4, %rdx
  4344cc:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  4344d1:	48 8b 9c 11 58 04 00 00 	movq	1112(%rcx,%rdx), %rbx
  4344d9:	eb b3 	jmp	-77 <runtime.stackcache_clear+0x5e>
  4344db:	48 8d 05 ee f4 08 00 	leaq	586990(%rip), %rax
  4344e2:	48 89 04 24 	movq	%rax, (%rsp)
  4344e6:	e8 d5 51 fd ff 	callq	-175659 <runtime.unlock>
  4344eb:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  4344f0:	48 83 c4 30 	addq	$48, %rsp
  4344f4:	c3 	retq
  4344f5:	e8 46 b5 fe ff 	callq	-84666 <runtime.panicindex>
  4344fa:	0f 0b 	ud2
  4344fc:	e8 ff 27 00 00 	callq	10239 <runtime.morestackc>
  434501:	e9 2a ff ff ff 	jmp	-214 <runtime.stackcache_clear>
  434506:	cc 	int3
  434507:	cc 	int3
  434508:	cc 	int3
  434509:	cc 	int3
  43450a:	cc 	int3
  43450b:	cc 	int3
  43450c:	cc 	int3
  43450d:	cc 	int3
  43450e:	cc 	int3
  43450f:	cc 	int3

runtime.stackalloc:
  434510:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  434519:	48 3b 61 18 	cmpq	24(%rcx), %rsp
  43451d:	0f 86 fd 02 00 00 	jbe	765 <runtime.stackalloc+0x310>
  434523:	48 83 ec 68 	subq	$104, %rsp
  434527:	48 89 6c 24 60 	movq	%rbp, 96(%rsp)
  43452c:	48 8d 6c 24 60 	leaq	96(%rsp), %rbp
  434531:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  43453a:	48 8b 48 30 	movq	48(%rax), %rcx
  43453e:	48 8b 11 	movq	(%rcx), %rdx
  434541:	48 39 d0 	cmpq	%rdx, %rax
  434544:	0f 85 bb 02 00 00 	jne	699 <runtime.stackalloc+0x2f5>
  43454a:	8b 44 24 70 	movl	112(%rsp), %eax
  43454e:	8d 50 ff 	leal	-1(%rax), %edx
  434551:	85 d0 	testl	%edx, %eax
  434553:	0f 85 91 02 00 00 	jne	657 <runtime.stackalloc+0x2da>
  434559:	8b 15 69 f5 08 00 	movl	587113(%rip), %edx
  43455f:	85 d2 	testl	%edx, %edx
  434561:	0f 85 e5 01 00 00 	jne	485 <runtime.stackalloc+0x23c>
  434567:	3d 00 80 00 00 	cmpl	$32768, %eax
  43456c:	0f 83 07 01 00 00 	jae	263 <runtime.stackalloc+0x169>
  434572:	89 c2 	movl	%eax, %edx
  434574:	31 db 	xorl	%ebx, %ebx
  434576:	eb 04 	jmp	4 <runtime.stackalloc+0x6c>
  434578:	ff c3 	incl	%ebx
  43457a:	d1 e8 	shrl	%eax
  43457c:	3d 00 08 00 00 	cmpl	$2048, %eax
  434581:	77 f5 	ja	-11 <runtime.stackalloc+0x68>
  434583:	88 5c 24 27 	movb	%bl, 39(%rsp)
  434587:	48 8b 81 60 01 00 00 	movq	352(%rcx), %rax
  43458e:	48 85 c0 	testq	%rax, %rax
  434591:	74 0c 	je	12 <runtime.stackalloc+0x8f>
  434593:	48 8b b1 f8 00 00 00 	movq	248(%rcx), %rsi
  43459a:	48 85 f6 	testq	%rsi, %rsi
  43459d:	74 5a 	je	90 <runtime.stackalloc+0xe9>
  43459f:	48 8d 05 2a f4 08 00 	leaq	586794(%rip), %rax
  4345a6:	48 89 04 24 	movq	%rax, (%rsp)
  4345aa:	e8 71 4f fd ff 	callq	-176271 <runtime.lock>
  4345af:	0f b6 44 24 27 	movzbl	39(%rsp), %eax
  4345b4:	88 04 24 	movb	%al, (%rsp)
  4345b7:	e8 04 f9 ff ff 	callq	-1788 <runtime.stackpoolalloc>
  4345bc:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4345c1:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  4345c6:	48 8d 0d 03 f4 08 00 	leaq	586755(%rip), %rcx
  4345cd:	48 89 0c 24 	movq	%rcx, (%rsp)
  4345d1:	e8 ea 50 fd ff 	callq	-175894 <runtime.unlock>
  4345d6:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4345db:	48 89 44 24 78 	movq	%rax, 120(%rsp)
  4345e0:	8b 4c 24 70 	movl	112(%rsp), %ecx
  4345e4:	48 01 c8 	addq	%rcx, %rax
  4345e7:	48 89 84 24 80 00 00 00 	movq	%rax, 128(%rsp)
  4345ef:	48 8b 6c 24 60 	movq	96(%rsp), %rbp
  4345f4:	48 83 c4 68 	addq	$104, %rsp
  4345f8:	c3 	retq
  4345f9:	8b 89 10 01 00 00 	movl	272(%rcx), %ecx
  4345ff:	85 c9 	testl	%ecx, %ecx
  434601:	75 9c 	jne	-100 <runtime.stackalloc+0x8f>
  434603:	0f b6 cb 	movzbl	%bl, %ecx
  434606:	48 83 f9 04 	cmpq	$4, %rcx
  43460a:	0f 83 b8 01 00 00 	jae	440 <runtime.stackalloc+0x2b8>
  434610:	48 c1 e1 04 	shlq	$4, %rcx
  434614:	48 8b b4 08 58 04 00 00 	movq	1112(%rax,%rcx), %rsi
  43461c:	48 89 f7 	movq	%rsi, %rdi
  43461f:	48 85 f6 	testq	%rsi, %rsi
  434622:	74 26 	je	38 <runtime.stackalloc+0x13a>
  434624:	48 89 fb 	movq	%rdi, %rbx
  434627:	48 8b 37 	movq	(%rdi), %rsi
  43462a:	48 89 b4 08 58 04 00 00 	movq	%rsi, 1112(%rax,%rcx)
  434632:	48 8b b4 08 60 04 00 00 	movq	1120(%rax,%rcx), %rsi
  43463a:	48 29 d6 	subq	%rdx, %rsi
  43463d:	48 89 b4 08 60 04 00 00 	movq	%rsi, 1120(%rax,%rcx)
  434645:	48 89 d8 	movq	%rbx, %rax
  434648:	eb 91 	jmp	-111 <runtime.stackalloc+0xcb>
  43464a:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  43464f:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  434654:	48 89 04 24 	movq	%rax, (%rsp)
  434658:	88 5c 24 08 	movb	%bl, 8(%rsp)
  43465c:	e8 bf fb ff ff 	callq	-1089 <runtime.stackcacherefill>
  434661:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  434666:	48 8b 44 24 50 	movq	80(%rsp), %rax
  43466b:	48 8b bc 08 58 04 00 00 	movq	1112(%rax,%rcx), %rdi
  434673:	8b 54 24 70 	movl	112(%rsp), %edx
  434677:	eb ab 	jmp	-85 <runtime.stackalloc+0x114>
  434679:	48 c1 e8 0d 	shrq	$13, %rax
  43467d:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  434682:	48 89 04 24 	movq	%rax, (%rsp)
  434686:	e8 15 f8 ff ff 	callq	-2027 <runtime.stacklog2>
  43468b:	48 8b 44 24 08 	movq	8(%rsp), %rax
  434690:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  434695:	48 8d 0d 44 35 07 00 	leaq	472388(%rip), %rcx
  43469c:	48 89 0c 24 	movq	%rcx, (%rsp)
  4346a0:	e8 7b 4e fd ff 	callq	-176517 <runtime.lock>
  4346a5:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4346aa:	48 83 f8 1a 	cmpq	$26, %rax
  4346ae:	0f 83 0d 01 00 00 	jae	269 <runtime.stackalloc+0x2b1>
  4346b4:	48 c1 e0 04 	shlq	$4, %rax
  4346b8:	48 8d 0d 21 35 07 00 	leaq	472353(%rip), %rcx
  4346bf:	48 8d 54 01 08 	leaq	8(%rcx,%rax), %rdx
  4346c4:	48 8b 44 01 08 	movq	8(%rcx,%rax), %rax
  4346c9:	48 85 c0 	testq	%rax, %rax
  4346cc:	75 64 	jne	100 <runtime.stackalloc+0x222>
  4346ce:	31 c0 	xorl	%eax, %eax
  4346d0:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  4346d5:	48 8d 0d 04 35 07 00 	leaq	472324(%rip), %rcx
  4346dc:	48 89 0c 24 	movq	%rcx, (%rsp)
  4346e0:	e8 db 4f fd ff 	callq	-176165 <runtime.unlock>
  4346e5:	48 8b 44 24 48 	movq	72(%rsp), %rax
  4346ea:	48 85 c0 	testq	%rax, %rax
  4346ed:	74 09 	je	9 <runtime.stackalloc+0x1e8>
  4346ef:	48 8b 40 18 	movq	24(%rax), %rax
  4346f3:	e9 e3 fe ff ff 	jmp	-285 <runtime.stackalloc+0xcb>
  4346f8:	48 8d 05 a1 7b 07 00 	leaq	490401(%rip), %rax
  4346ff:	48 89 04 24 	movq	%rax, (%rsp)
  434703:	48 8b 44 24 38 	movq	56(%rsp), %rax
  434708:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43470d:	48 8d 05 4c 00 09 00 	leaq	589900(%rip), %rax
  434714:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  434719:	e8 e2 65 fe ff 	callq	-104990 <runtime.(*mheap).allocManual>
  43471e:	48 8b 44 24 18 	movq	24(%rsp), %rax
  434723:	48 85 c0 	testq	%rax, %rax
  434726:	74 7e 	je	126 <runtime.stackalloc+0x296>
  434728:	8b 4c 24 70 	movl	112(%rsp), %ecx
  43472c:	48 89 48 68 	movq	%rcx, 104(%rax)
  434730:	eb bd 	jmp	-67 <runtime.stackalloc+0x1df>
  434732:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  434737:	48 89 14 24 	movq	%rdx, (%rsp)
  43473b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  434740:	e8 6b 79 fe ff 	callq	-99989 <runtime.(*mSpanList).remove>
  434745:	48 8b 44 24 58 	movq	88(%rsp), %rax
  43474a:	eb 84 	jmp	-124 <runtime.stackalloc+0x1c0>
  43474c:	48 8b 0d 4d f2 08 00 	movq	586317(%rip), %rcx
  434753:	48 8d 44 01 ff 	leaq	-1(%rcx,%rax), %rax
  434758:	48 ff c9 	decq	%rcx
  43475b:	48 f7 d1 	notq	%rcx
  43475e:	48 21 c8 	andq	%rcx, %rax
  434761:	89 c0 	movl	%eax, %eax
  434763:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  434768:	48 89 04 24 	movq	%rax, (%rsp)
  43476c:	48 8d 0d f5 ff 08 00 	leaq	589813(%rip), %rcx
  434773:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  434778:	e8 a3 a8 fd ff 	callq	-153437 <runtime.sysAlloc>
  43477d:	48 8b 44 24 10 	movq	16(%rsp), %rax
  434782:	48 85 c0 	testq	%rax, %rax
  434785:	74 48 	je	72 <runtime.stackalloc+0x2bf>
  434787:	48 89 44 24 78 	movq	%rax, 120(%rsp)
  43478c:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  434791:	48 01 c8 	addq	%rcx, %rax
  434794:	48 89 84 24 80 00 00 00 	movq	%rax, 128(%rsp)
  43479c:	48 8b 6c 24 60 	movq	96(%rsp), %rbp
  4347a1:	48 83 c4 68 	addq	$104, %rsp
  4347a5:	c3 	retq
  4347a6:	48 8d 05 c8 5f 03 00 	leaq	221128(%rip), %rax
  4347ad:	48 89 04 24 	movq	%rax, (%rsp)
  4347b1:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  4347ba:	e8 11 ca fe ff 	callq	-79343 <runtime.throw>
  4347bf:	0f 0b 	ud2
  4347c1:	e8 7a b2 fe ff 	callq	-85382 <runtime.panicindex>
  4347c6:	0f 0b 	ud2
  4347c8:	e8 73 b2 fe ff 	callq	-85389 <runtime.panicindex>
  4347cd:	0f 0b 	ud2
  4347cf:	48 8d 05 86 74 03 00 	leaq	226438(%rip), %rax
  4347d6:	48 89 04 24 	movq	%rax, (%rsp)
  4347da:	48 c7 44 24 08 1a 00 00 00 	movq	$26, 8(%rsp)
  4347e3:	e8 e8 c9 fe ff 	callq	-79384 <runtime.throw>
  4347e8:	0f 0b 	ud2
  4347ea:	48 8d 05 25 77 03 00 	leaq	227109(%rip), %rax
  4347f1:	48 89 04 24 	movq	%rax, (%rsp)
  4347f5:	48 c7 44 24 08 1b 00 00 00 	movq	$27, 8(%rsp)
  4347fe:	e8 cd c9 fe ff 	callq	-79411 <runtime.throw>
  434803:	0f 0b 	ud2
  434805:	48 8d 05 04 83 03 00 	leaq	230148(%rip), %rax
  43480c:	48 89 04 24 	movq	%rax, (%rsp)
  434810:	48 c7 44 24 08 21 00 00 00 	movq	$33, 8(%rsp)
  434819:	e8 b2 c9 fe ff 	callq	-79438 <runtime.throw>
  43481e:	0f 0b 	ud2
  434820:	e8 db 24 00 00 	callq	9435 <runtime.morestackc>
  434825:	e9 e6 fc ff ff 	jmp	-794 <runtime.stackalloc>
  43482a:	cc 	int3
  43482b:	cc 	int3
  43482c:	cc 	int3
  43482d:	cc 	int3
  43482e:	cc 	int3
  43482f:	cc 	int3

runtime.stackfree:
  434830:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  434839:	48 3b 61 18 	cmpq	24(%rcx), %rsp
  43483d:	0f 86 f2 02 00 00 	jbe	754 <runtime.stackfree+0x305>
  434843:	48 83 ec 60 	subq	$96, %rsp
  434847:	48 89 6c 24 58 	movq	%rbp, 88(%rsp)
  43484c:	48 8d 6c 24 58 	leaq	88(%rsp), %rbp
  434851:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  43485a:	48 8b 4c 24 68 	movq	104(%rsp), %rcx
  43485f:	48 89 ca 	movq	%rcx, %rdx
  434862:	48 8b 5c 24 70 	movq	112(%rsp), %rbx
  434867:	48 89 de 	movq	%rbx, %rsi
  43486a:	48 29 d3 	subq	%rdx, %rbx
  43486d:	48 8d 7b ff 	leaq	-1(%rbx), %rdi
  434871:	48 85 fb 	testq	%rdi, %rbx
  434874:	0f 85 a0 02 00 00 	jne	672 <runtime.stackfree+0x2ea>
  43487a:	48 8d 3c 1a 	leaq	(%rdx,%rbx), %rdi
  43487e:	48 39 f7 	cmpq	%rsi, %rdi
  434881:	0f 82 78 02 00 00 	jb	632 <runtime.stackfree+0x2cf>
  434887:	8b 35 3b f2 08 00 	movl	586299(%rip), %esi
  43488d:	85 f6 	testl	%esi, %esi
  43488f:	0f 85 e4 01 00 00 	jne	484 <runtime.stackfree+0x249>
  434895:	48 81 fb 00 80 00 00 	cmpq	$32768, %rbx
  43489c:	0f 83 02 01 00 00 	jae	258 <runtime.stackfree+0x174>
  4348a2:	48 89 d9 	movq	%rbx, %rcx
  4348a5:	31 f6 	xorl	%esi, %esi
  4348a7:	eb 05 	jmp	5 <runtime.stackfree+0x7e>
  4348a9:	ff c6 	incl	%esi
  4348ab:	48 d1 eb 	shrq	%rbx
  4348ae:	48 81 fb 00 08 00 00 	cmpq	$2048, %rbx
  4348b5:	77 f2 	ja	-14 <runtime.stackfree+0x79>
  4348b7:	40 88 74 24 1f 	movb	%sil, 31(%rsp)
  4348bc:	48 8b 40 30 	movq	48(%rax), %rax
  4348c0:	48 8b 98 60 01 00 00 	movq	352(%rax), %rbx
  4348c7:	48 85 db 	testq	%rbx, %rbx
  4348ca:	74 0c 	je	12 <runtime.stackfree+0xa8>
  4348cc:	48 8b b8 f8 00 00 00 	movq	248(%rax), %rdi
  4348d3:	48 85 ff 	testq	%rdi, %rdi
  4348d6:	74 41 	je	65 <runtime.stackfree+0xe9>
  4348d8:	48 8d 05 f1 f0 08 00 	leaq	585969(%rip), %rax
  4348df:	48 89 04 24 	movq	%rax, (%rsp)
  4348e3:	e8 38 4c fd ff 	callq	-177096 <runtime.lock>
  4348e8:	48 8b 44 24 68 	movq	104(%rsp), %rax
  4348ed:	48 89 04 24 	movq	%rax, (%rsp)
  4348f1:	0f b6 44 24 1f 	movzbl	31(%rsp), %eax
  4348f6:	88 44 24 08 	movb	%al, 8(%rsp)
  4348fa:	e8 a1 f7 ff ff 	callq	-2143 <runtime.stackpoolfree>
  4348ff:	48 8d 05 ca f0 08 00 	leaq	585930(%rip), %rax
  434906:	48 89 04 24 	movq	%rax, (%rsp)
  43490a:	e8 b1 4d fd ff 	callq	-176719 <runtime.unlock>
  43490f:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  434914:	48 83 c4 60 	addq	$96, %rsp
  434918:	c3 	retq
  434919:	8b 80 10 01 00 00 	movl	272(%rax), %eax
  43491f:	85 c0 	testl	%eax, %eax
  434921:	75 b5 	jne	-75 <runtime.stackfree+0xa8>
  434923:	40 0f b6 c6 	movzbl	%sil, %eax
  434927:	48 83 f8 04 	cmpq	$4, %rax
  43492b:	0f 83 c7 01 00 00 	jae	455 <runtime.stackfree+0x2c8>
  434931:	48 c1 e0 04 	shlq	$4, %rax
  434935:	48 8b bc 03 60 04 00 00 	movq	1120(%rbx,%rax), %rdi
  43493d:	48 81 ff 00 80 00 00 	cmpq	$32768, %rdi
  434944:	73 2b 	jae	43 <runtime.stackfree+0x141>
  434946:	48 89 d6 	movq	%rdx, %rsi
  434949:	48 8b bc 03 58 04 00 00 	movq	1112(%rbx,%rax), %rdi
  434951:	48 89 3a 	movq	%rdi, (%rdx)
  434954:	48 89 b4 03 58 04 00 00 	movq	%rsi, 1112(%rbx,%rax)
  43495c:	48 8b 94 03 60 04 00 00 	movq	1120(%rbx,%rax), %rdx
  434964:	48 01 d1 	addq	%rdx, %rcx
  434967:	48 89 8c 03 60 04 00 00 	movq	%rcx, 1120(%rbx,%rax)
  43496f:	eb 9e 	jmp	-98 <runtime.stackfree+0xdf>
  434971:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  434976:	48 89 5c 24 50 	movq	%rbx, 80(%rsp)
  43497b:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  434980:	48 89 1c 24 	movq	%rbx, (%rsp)
  434984:	40 88 74 24 08 	movb	%sil, 8(%rsp)
  434989:	e8 82 f9 ff ff 	callq	-1662 <runtime.stackcacherelease>
  43498e:	48 8b 44 24 30 	movq	48(%rsp), %rax
  434993:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  434998:	48 8b 54 24 68 	movq	104(%rsp), %rdx
  43499d:	48 8b 5c 24 50 	movq	80(%rsp), %rbx
  4349a2:	eb a2 	jmp	-94 <runtime.stackfree+0x116>
  4349a4:	48 8b 05 1d 8c 07 00 	movq	494621(%rip), %rax
  4349ab:	48 29 c2 	subq	%rax, %rdx
  4349ae:	48 8b 05 3b 89 07 00 	movq	493883(%rip), %rax
  4349b5:	48 8b 1d 2c 89 07 00 	movq	493868(%rip), %rbx
  4349bc:	48 c1 ea 0d 	shrq	$13, %rdx
  4349c0:	48 39 c2 	cmpq	%rax, %rdx
  4349c3:	0f 83 28 01 00 00 	jae	296 <runtime.stackfree+0x2c1>
  4349c9:	48 8b 04 d3 	movq	(%rbx,%rdx,8), %rax
  4349cd:	0f b6 50 64 	movzbl	100(%rax), %edx
  4349d1:	80 fa 02 	cmpb	$2, %dl
  4349d4:	0f 85 be 00 00 00 	jne	190 <runtime.stackfree+0x268>
  4349da:	8b 0d fc ee 08 00 	movl	585468(%rip), %ecx
  4349e0:	85 c9 	testl	%ecx, %ecx
  4349e2:	75 26 	jne	38 <runtime.stackfree+0x1da>
  4349e4:	48 8d 0d b5 78 07 00 	leaq	489653(%rip), %rcx
  4349eb:	48 89 0c 24 	movq	%rcx, (%rsp)
  4349ef:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4349f4:	48 8d 05 65 fd 08 00 	leaq	589157(%rip), %rax
  4349fb:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  434a00:	e8 fb 6a fe ff 	callq	-103685 <runtime.(*mheap).freeManual>
  434a05:	e9 05 ff ff ff 	jmp	-251 <runtime.stackfree+0xdf>
  434a0a:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  434a0f:	48 8b 48 20 	movq	32(%rax), %rcx
  434a13:	48 89 0c 24 	movq	%rcx, (%rsp)
  434a17:	e8 84 f4 ff ff 	callq	-2940 <runtime.stacklog2>
  434a1c:	48 8b 44 24 08 	movq	8(%rsp), %rax
  434a21:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  434a26:	48 8d 0d b3 31 07 00 	leaq	471475(%rip), %rcx
  434a2d:	48 89 0c 24 	movq	%rcx, (%rsp)
  434a31:	e8 ea 4a fd ff 	callq	-177430 <runtime.lock>
  434a36:	48 8b 44 24 28 	movq	40(%rsp), %rax
  434a3b:	48 83 f8 1a 	cmpq	$26, %rax
  434a3f:	73 50 	jae	80 <runtime.stackfree+0x261>
  434a41:	48 c1 e0 04 	shlq	$4, %rax
  434a45:	48 8d 0d 94 31 07 00 	leaq	471444(%rip), %rcx
  434a4c:	48 8d 44 01 08 	leaq	8(%rcx,%rax), %rax
  434a51:	48 89 04 24 	movq	%rax, (%rsp)
  434a55:	48 8b 44 24 48 	movq	72(%rsp), %rax
  434a5a:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  434a5f:	e8 ec 77 fe ff 	callq	-100372 <runtime.(*mSpanList).insert>
  434a64:	48 8d 05 75 31 07 00 	leaq	471413(%rip), %rax
  434a6b:	48 89 04 24 	movq	%rax, (%rsp)
  434a6f:	e8 4c 4c fd ff 	callq	-177076 <runtime.unlock>
  434a74:	e9 96 fe ff ff 	jmp	-362 <runtime.stackfree+0xdf>
  434a79:	48 89 0c 24 	movq	%rcx, (%rsp)
  434a7d:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  434a82:	e8 09 a9 fd ff 	callq	-153335 <runtime.sysFault>
  434a87:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  434a8c:	48 83 c4 60 	addq	$96, %rsp
  434a90:	c3 	retq
  434a91:	e8 aa af fe ff 	callq	-86102 <runtime.panicindex>
  434a96:	0f 0b 	ud2
  434a98:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  434a9d:	48 8b 40 18 	movq	24(%rax), %rax
  434aa1:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  434aa6:	e8 55 d0 fe ff 	callq	-77739 <runtime.printlock>
  434aab:	48 8b 44 24 20 	movq	32(%rsp), %rax
  434ab0:	48 89 04 24 	movq	%rax, (%rsp)
  434ab4:	e8 37 d8 fe ff 	callq	-75721 <runtime.printhex>
  434ab9:	e8 82 d2 fe ff 	callq	-77182 <runtime.printsp>
  434abe:	48 8b 44 24 40 	movq	64(%rsp), %rax
  434ac3:	48 89 04 24 	movq	%rax, (%rsp)
  434ac7:	e8 34 d9 fe ff 	callq	-75468 <runtime.printpointer>
  434acc:	e8 bf d2 fe ff 	callq	-77121 <runtime.printnl>
  434ad1:	e8 aa d0 fe ff 	callq	-77654 <runtime.printunlock>
  434ad6:	48 8d 05 9b 5d 03 00 	leaq	220571(%rip), %rax
  434add:	48 89 04 24 	movq	%rax, (%rsp)
  434ae1:	48 c7 44 24 08 0e 00 00 00 	movq	$14, 8(%rsp)
  434aea:	e8 e1 c6 fe ff 	callq	-80159 <runtime.throw>
  434aef:	0f 0b 	ud2
  434af1:	e8 4a af fe ff 	callq	-86198 <runtime.panicindex>
  434af6:	0f 0b 	ud2
  434af8:	e8 43 af fe ff 	callq	-86205 <runtime.panicindex>
  434afd:	0f 0b 	ud2
  434aff:	48 8d 05 80 5d 03 00 	leaq	220544(%rip), %rax
  434b06:	48 89 04 24 	movq	%rax, (%rsp)
  434b0a:	48 c7 44 24 08 0e 00 00 00 	movq	$14, 8(%rsp)
  434b13:	e8 b8 c6 fe ff 	callq	-80200 <runtime.throw>
  434b18:	0f 0b 	ud2
  434b1a:	48 8d 05 47 6a 03 00 	leaq	223815(%rip), %rax
  434b21:	48 89 04 24 	movq	%rax, (%rsp)
  434b25:	48 c7 44 24 08 16 00 00 00 	movq	$22, 8(%rsp)
  434b2e:	e8 9d c6 fe ff 	callq	-80227 <runtime.throw>
  434b33:	0f 0b 	ud2
  434b35:	e8 c6 21 00 00 	callq	8646 <runtime.morestackc>
  434b3a:	e9 f1 fc ff ff 	jmp	-783 <runtime.stackfree>
  434b3f:	cc 	int3

runtime.adjustpointers:
  434b40:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  434b49:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  434b4d:	0f 86 37 02 00 00 	jbe	567 <runtime.adjustpointers+0x24a>
  434b53:	48 83 ec 68 	subq	$104, %rsp
  434b57:	48 89 6c 24 60 	movq	%rbp, 96(%rsp)
  434b5c:	48 8d 6c 24 60 	leaq	96(%rsp), %rbp
  434b61:	48 8b 54 24 78 	movq	120(%rsp), %rdx
  434b66:	48 8b 5a 08 	movq	8(%rdx), %rbx
  434b6a:	84 03 	testb	%al, (%rbx)
  434b6c:	8b 12 	movl	(%rdx), %edx
  434b6e:	8d 72 07 	leal	7(%rdx), %esi
  434b71:	c1 fe 1f 	sarl	$31, %esi
  434b74:	c1 ee 1d 	shrl	$29, %esi
  434b77:	01 d6 	addl	%edx, %esi
  434b79:	83 c6 07 	addl	$7, %esi
  434b7c:	c1 fe 03 	sarl	$3, %esi
  434b7f:	48 63 f6 	movslq	%esi, %rsi
  434b82:	48 81 fe 00 00 00 40 	cmpq	$1073741824, %rsi
  434b89:	0f 87 f4 01 00 00 	ja	500 <runtime.adjustpointers+0x243>
  434b8f:	48 63 d2 	movslq	%edx, %rdx
  434b92:	48 89 54 24 40 	movq	%rdx, 64(%rsp)
  434b97:	48 89 5c 24 48 	movq	%rbx, 72(%rsp)
  434b9c:	48 89 74 24 50 	movq	%rsi, 80(%rsp)
  434ba1:	48 c7 44 24 58 00 00 00 40 	movq	$1073741824, 88(%rsp)
  434baa:	48 8b 94 24 80 00 00 00 	movq	128(%rsp), %rdx
  434bb2:	48 8b 1a 	movq	(%rdx), %rbx
  434bb5:	48 8b 72 08 	movq	8(%rdx), %rsi
  434bb9:	48 8b 7a 10 	movq	16(%rdx), %rdi
  434bbd:	4c 8b 44 24 40 	movq	64(%rsp), %r8
  434bc2:	4c 8b 4c 24 70 	movq	112(%rsp), %r9
  434bc7:	4d 89 ca 	movq	%r9, %r10
  434bca:	48 8b 92 18 01 00 00 	movq	280(%rdx), %rdx
  434bd1:	49 39 d1 	cmpq	%rdx, %r9
  434bd4:	4c 8b 9c 24 88 00 00 00 	movq	136(%rsp), %r11
  434bdc:	31 c0 	xorl	%eax, %eax
  434bde:	eb 04 	jmp	4 <runtime.adjustpointers+0xa4>
  434be0:	49 8d 45 01 	leaq	1(%r13), %rax
  434be4:	4c 39 c0 	cmpq	%r8, %rax
  434be7:	0f 83 94 00 00 00 	jae	148 <runtime.adjustpointers+0x141>
  434bed:	4c 8b 64 24 48 	movq	72(%rsp), %r12
  434bf2:	4c 8b 6c 24 50 	movq	80(%rsp), %r13
  434bf7:	48 89 c1 	movq	%rax, %rcx
  434bfa:	48 c1 e8 03 	shrq	$3, %rax
  434bfe:	4c 39 e8 	cmpq	%r13, %rax
  434c01:	0f 83 75 01 00 00 	jae	373 <runtime.adjustpointers+0x23c>
  434c07:	45 0f b6 24 04 	movzbl	(%r12,%rax), %r12d
  434c0c:	49 89 cd 	movq	%rcx, %r13
  434c0f:	48 83 e1 07 	andq	$7, %rcx
  434c13:	41 d2 ec 	shrb	%cl, %r12b
  434c16:	41 83 e4 01 	andl	$1, %r12d
  434c1a:	41 80 fc 01 	cmpb	$1, %r12b
  434c1e:	75 c0 	jne	-64 <runtime.adjustpointers+0xa0>
  434c20:	4f 8d 24 ea 	leaq	(%r10,%r13,8), %r12
  434c24:	41 84 04 24 	testb	%al, (%r12)
  434c28:	4b 8b 04 ea 	movq	(%r10,%r13,8), %rax
  434c2c:	4d 85 db 	testq	%r11, %r11
  434c2f:	74 19 	je	25 <runtime.adjustpointers+0x10a>
  434c31:	48 85 c0 	testq	%rax, %rax
  434c34:	76 14 	jbe	20 <runtime.adjustpointers+0x10a>
  434c36:	48 3d 00 10 00 00 	cmpq	$4096, %rax
  434c3c:	73 0c 	jae	12 <runtime.adjustpointers+0x10a>
  434c3e:	44 8b 35 9f ee 08 00 	movl	585375(%rip), %r14d
  434c45:	45 85 f6 	testl	%r14d, %r14d
  434c48:	75 41 	jne	65 <runtime.adjustpointers+0x14b>
  434c4a:	48 39 c3 	cmpq	%rax, %rbx
  434c4d:	77 91 	ja	-111 <runtime.adjustpointers+0xa0>
  434c4f:	48 39 f0 	cmpq	%rsi, %rax
  434c52:	73 8c 	jae	-116 <runtime.adjustpointers+0xa0>
  434c54:	49 39 d1 	cmpq	%rdx, %r9
  434c57:	73 1b 	jae	27 <runtime.adjustpointers+0x134>
  434c59:	49 89 c6 	movq	%rax, %r14
  434c5c:	49 01 fe 	addq	%rdi, %r14
  434c5f:	f0 	lock
  434c60:	4d 0f b1 34 24 	cmpxchgq	%r14, (%r12)
  434c65:	41 0f 94 c6 	sete	%r14b
  434c69:	45 84 f6 	testb	%r14b, %r14b
  434c6c:	0f 85 6e ff ff ff 	jne	-146 <runtime.adjustpointers+0xa0>
  434c72:	eb b0 	jmp	-80 <runtime.adjustpointers+0xe4>
  434c74:	4c 8d 24 38 	leaq	(%rax,%rdi), %r12
  434c78:	4f 89 24 ea 	movq	%r12, (%r10,%r13,8)
  434c7c:	e9 5f ff ff ff 	jmp	-161 <runtime.adjustpointers+0xa0>
  434c81:	48 8b 6c 24 60 	movq	96(%rsp), %rbp
  434c86:	48 83 c4 68 	addq	$104, %rsp
  434c8a:	c3 	retq
  434c8b:	4c 89 64 24 38 	movq	%r12, 56(%rsp)
  434c90:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  434c95:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  434c9e:	48 8b 40 30 	movq	48(%rax), %rax
  434ca2:	c6 80 29 01 00 00 02 	movb	$2, 297(%rax)
  434ca9:	4c 89 1c 24 	movq	%r11, (%rsp)
  434cad:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  434cb5:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  434cba:	e8 41 3c 00 00 	callq	15425 <runtime.funcname>
  434cbf:	48 8b 44 24 10 	movq	16(%rsp), %rax
  434cc4:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  434cc9:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  434cce:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  434cd3:	e8 28 ce fe ff 	callq	-78296 <runtime.printlock>
  434cd8:	48 8d 05 b8 78 03 00 	leaq	227512(%rip), %rax
  434cdf:	48 89 04 24 	movq	%rax, (%rsp)
  434ce3:	48 c7 44 24 08 1e 00 00 00 	movq	$30, 8(%rsp)
  434cec:	e8 4f d7 fe ff 	callq	-75953 <runtime.printstring>
  434cf1:	48 8b 44 24 30 	movq	48(%rsp), %rax
  434cf6:	48 89 04 24 	movq	%rax, (%rsp)
  434cfa:	48 8b 44 24 28 	movq	40(%rsp), %rax
  434cff:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  434d04:	e8 37 d7 fe ff 	callq	-75977 <runtime.printstring>
  434d09:	48 8d 05 ae 4f 03 00 	leaq	217006(%rip), %rax
  434d10:	48 89 04 24 	movq	%rax, (%rsp)
  434d14:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  434d1d:	e8 1e d7 fe ff 	callq	-76002 <runtime.printstring>
  434d22:	48 8b 44 24 38 	movq	56(%rsp), %rax
  434d27:	48 89 04 24 	movq	%rax, (%rsp)
  434d2b:	e8 d0 d6 fe ff 	callq	-76080 <runtime.printpointer>
  434d30:	48 8d 05 39 4f 03 00 	leaq	216889(%rip), %rax
  434d37:	48 89 04 24 	movq	%rax, (%rsp)
  434d3b:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  434d44:	e8 f7 d6 fe ff 	callq	-76041 <runtime.printstring>
  434d49:	48 8b 44 24 20 	movq	32(%rsp), %rax
  434d4e:	48 89 04 24 	movq	%rax, (%rsp)
  434d52:	e8 99 d5 fe ff 	callq	-76391 <runtime.printhex>
  434d57:	e8 34 d0 fe ff 	callq	-77772 <runtime.printnl>
  434d5c:	e8 1f ce fe ff 	callq	-78305 <runtime.printunlock>
  434d61:	48 8d 05 f3 77 03 00 	leaq	227315(%rip), %rax
  434d68:	48 89 04 24 	movq	%rax, (%rsp)
  434d6c:	48 c7 44 24 08 1e 00 00 00 	movq	$30, 8(%rsp)
  434d75:	e8 56 c4 fe ff 	callq	-80810 <runtime.throw>
  434d7a:	0f 0b 	ud2
  434d7c:	e8 bf ac fe ff 	callq	-86849 <runtime.panicindex>
  434d81:	0f 0b 	ud2
  434d83:	e8 28 ad fe ff 	callq	-86744 <runtime.panicslice>
  434d88:	0f 0b 	ud2
  434d8a:	e8 e1 f7 00 00 	callq	63457 <runtime.morestack_noctxt>
  434d8f:	e9 ac fd ff ff 	jmp	-596 <runtime.adjustpointers>
  434d94:	cc 	int3
  434d95:	cc 	int3
  434d96:	cc 	int3
  434d97:	cc 	int3
  434d98:	cc 	int3
  434d99:	cc 	int3
  434d9a:	cc 	int3
  434d9b:	cc 	int3
  434d9c:	cc 	int3
  434d9d:	cc 	int3
  434d9e:	cc 	int3
  434d9f:	cc 	int3

runtime.adjustframe:
  434da0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  434da9:	48 8d 44 24 d0 	leaq	-48(%rsp), %rax
  434dae:	48 3b 41 10 	cmpq	16(%rcx), %rax
  434db2:	0f 86 26 08 00 00 	jbe	2086 <runtime.adjustframe+0x83e>
  434db8:	48 81 ec b0 00 00 00 	subq	$176, %rsp
  434dbf:	48 89 ac 24 a8 00 00 00 	movq	%rbp, 168(%rsp)
  434dc7:	48 8d ac 24 a8 00 00 00 	leaq	168(%rsp), %rbp
  434dcf:	0f 57 c0 	xorps	%xmm0, %xmm0
  434dd2:	0f 11 84 24 88 00 00 00 	movups	%xmm0, 136(%rsp)
  434dda:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  434de2:	48 8b 48 18 	movq	24(%rax), %rcx
  434de6:	48 85 c9 	testq	%rcx, %rcx
  434de9:	0f 84 fb 02 00 00 	je	763 <runtime.adjustframe+0x34a>
  434def:	48 8b 10 	movq	(%rax), %rdx
  434df2:	48 8b 58 08 	movq	8(%rax), %rbx
  434df6:	8b 72 10 	movl	16(%rdx), %esi
  434df9:	83 fe 0e 	cmpl	$14, %esi
  434dfc:	0f 84 d0 02 00 00 	je	720 <runtime.adjustframe+0x332>
  434e02:	48 8b 32 	movq	(%rdx), %rsi
  434e05:	48 39 f1 	cmpq	%rsi, %rcx
  434e08:	74 03 	je	3 <runtime.adjustframe+0x6d>
  434e0a:	48 ff c9 	decq	%rcx
  434e0d:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  434e12:	48 89 9c 24 80 00 00 00 	movq	%rbx, 128(%rsp)
  434e1a:	48 89 54 24 78 	movq	%rdx, 120(%rsp)
  434e1f:	48 8b 84 24 c0 00 00 00 	movq	192(%rsp), %rax
  434e27:	84 00 	testb	%al, (%rax)
  434e29:	48 8d 70 18 	leaq	24(%rax), %rsi
  434e2d:	48 89 74 24 20 	movq	%rsi, 32(%rsp)
  434e32:	48 89 14 24 	movq	%rdx, (%rsp)
  434e36:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  434e3b:	c7 44 24 10 00 00 00 00 	movl	$0, 16(%rsp)
  434e43:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  434e48:	e8 f3 3f 00 00 	callq	16371 <runtime.pcdatavalue>
  434e4d:	8b 44 24 28 	movl	40(%rsp), %eax
  434e51:	83 f8 ff 	cmpl	$-1, %eax
  434e54:	75 02 	jne	2 <runtime.adjustframe+0xb8>
  434e56:	31 c0 	xorl	%eax, %eax
  434e58:	89 44 24 34 	movl	%eax, 52(%rsp)
  434e5c:	48 8b 8c 24 b8 00 00 00 	movq	184(%rsp), %rcx
  434e64:	48 8b 51 38 	movq	56(%rcx), %rdx
  434e68:	48 2b 51 28 	subq	40(%rcx), %rdx
  434e6c:	48 85 d2 	testq	%rdx, %rdx
  434e6f:	0f 87 62 01 00 00 	ja	354 <runtime.adjustframe+0x237>
  434e75:	48 8b 51 40 	movq	64(%rcx), %rdx
  434e79:	48 8b 59 38 	movq	56(%rcx), %rbx
  434e7d:	48 29 da 	subq	%rbx, %rdx
  434e80:	48 83 fa 10 	cmpq	$16, %rdx
  434e84:	0f 85 40 01 00 00 	jne	320 <runtime.adjustframe+0x22a>
  434e8a:	0f b6 15 06 fc 03 00 	movzbl	261126(%rip), %edx
  434e91:	84 d2 	testb	%dl, %dl
  434e93:	0f 84 7d 04 00 00 	je	1149 <runtime.adjustframe+0x576>
  434e99:	48 8b 13 	movq	(%rbx), %rdx
  434e9c:	48 8b b4 24 c0 00 00 00 	movq	192(%rsp), %rsi
  434ea4:	48 8b 3e 	movq	(%rsi), %rdi
  434ea7:	48 39 d7 	cmpq	%rdx, %rdi
  434eaa:	77 13 	ja	19 <runtime.adjustframe+0x11f>
  434eac:	48 8b 7e 08 	movq	8(%rsi), %rdi
  434eb0:	48 39 fa 	cmpq	%rdi, %rdx
  434eb3:	73 0a 	jae	10 <runtime.adjustframe+0x11f>
  434eb5:	48 8b 7e 10 	movq	16(%rsi), %rdi
  434eb9:	48 01 fa 	addq	%rdi, %rdx
  434ebc:	48 89 13 	movq	%rdx, (%rbx)
  434ebf:	48 8b 51 48 	movq	72(%rcx), %rdx
  434ec3:	48 85 d2 	testq	%rdx, %rdx
  434ec6:	76 5c 	jbe	92 <runtime.adjustframe+0x184>
  434ec8:	c7 84 24 98 00 00 00 00 00 00 00 	movl	$0, 152(%rsp)
  434ed3:	48 c7 84 24 a0 00 00 00 00 00 00 00 	movq	$0, 160(%rsp)
  434edf:	48 8b 51 50 	movq	80(%rcx), %rdx
  434ee3:	48 85 d2 	testq	%rdx, %rdx
  434ee6:	74 54 	je	84 <runtime.adjustframe+0x19c>
  434ee8:	48 8b 42 08 	movq	8(%rdx), %rax
  434eec:	8b 12 	movl	(%rdx), %edx
  434eee:	89 94 24 98 00 00 00 	movl	%edx, 152(%rsp)
  434ef5:	48 89 84 24 a0 00 00 00 	movq	%rax, 160(%rsp)
  434efd:	48 8b 41 40 	movq	64(%rcx), %rax
  434f01:	48 89 04 24 	movq	%rax, (%rsp)
  434f05:	48 8d 84 24 98 00 00 00 	leaq	152(%rsp), %rax
  434f0d:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  434f12:	48 89 74 24 10 	movq	%rsi, 16(%rsp)
  434f17:	0f 57 c0 	xorps	%xmm0, %xmm0
  434f1a:	0f 11 44 24 18 	movups	%xmm0, 24(%rsp)
  434f1f:	e8 1c fc ff ff 	callq	-996 <runtime.adjustpointers>
  434f24:	c6 84 24 c8 00 00 00 01 	movb	$1, 200(%rsp)
  434f2c:	48 8b ac 24 a8 00 00 00 	movq	168(%rsp), %rbp
  434f34:	48 81 c4 b0 00 00 00 	addq	$176, %rsp
  434f3b:	c3 	retq
  434f3c:	48 8b 44 24 78 	movq	120(%rsp), %rax
  434f41:	48 89 04 24 	movq	%rax, (%rsp)
  434f45:	48 8b 8c 24 80 00 00 00 	movq	128(%rsp), %rcx
  434f4d:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  434f52:	c7 44 24 10 00 00 00 00 	movl	$0, 16(%rsp)
  434f5a:	e8 91 3f 00 00 	callq	16273 <runtime.funcdata>
  434f5f:	48 8b 44 24 18 	movq	24(%rsp), %rax
  434f64:	48 85 c0 	testq	%rax, %rax
  434f67:	0f 84 b7 02 00 00 	je	695 <runtime.adjustframe+0x484>
  434f6d:	8b 08 	movl	(%rax), %ecx
  434f6f:	85 c9 	testl	%ecx, %ecx
  434f71:	0f 8e ad 02 00 00 	jle	685 <runtime.adjustframe+0x484>
  434f77:	48 89 44 24 70 	movq	%rax, 112(%rsp)
  434f7c:	8b 54 24 34 	movl	52(%rsp), %edx
  434f80:	85 d2 	testl	%edx, %edx
  434f82:	0f 8c 7a 01 00 00 	jl	378 <runtime.adjustframe+0x362>
  434f88:	39 ca 	cmpl	%ecx, %edx
  434f8a:	0f 8d 72 01 00 00 	jge	370 <runtime.adjustframe+0x362>
  434f90:	48 89 04 24 	movq	%rax, (%rsp)
  434f94:	89 54 24 08 	movl	%edx, 8(%rsp)
  434f98:	e8 53 42 00 00 	callq	16979 <runtime.stackmapdata>
  434f9d:	48 8b 44 24 18 	movq	24(%rsp), %rax
  434fa2:	8b 4c 24 10 	movl	16(%rsp), %ecx
  434fa6:	89 8c 24 98 00 00 00 	movl	%ecx, 152(%rsp)
  434fad:	48 89 84 24 a0 00 00 00 	movq	%rax, 160(%rsp)
  434fb5:	48 8b 8c 24 b8 00 00 00 	movq	184(%rsp), %rcx
  434fbd:	48 8b b4 24 c0 00 00 00 	movq	192(%rsp), %rsi
  434fc5:	e9 33 ff ff ff 	jmp	-205 <runtime.adjustframe+0x15d>
  434fca:	48 8b b4 24 c0 00 00 00 	movq	192(%rsp), %rsi
  434fd2:	e9 e8 fe ff ff 	jmp	-280 <runtime.adjustframe+0x11f>
  434fd7:	48 89 54 24 40 	movq	%rdx, 64(%rsp)
  434fdc:	c7 84 24 88 00 00 00 00 00 00 00 	movl	$0, 136(%rsp)
  434fe7:	48 c7 84 24 90 00 00 00 00 00 00 00 	movq	$0, 144(%rsp)
  434ff3:	48 8b 44 24 78 	movq	120(%rsp), %rax
  434ff8:	48 89 04 24 	movq	%rax, (%rsp)
  434ffc:	48 8b 8c 24 80 00 00 00 	movq	128(%rsp), %rcx
  435004:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  435009:	c7 44 24 10 01 00 00 00 	movl	$1, 16(%rsp)
  435011:	e8 da 3e 00 00 	callq	16090 <runtime.funcdata>
  435016:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43501b:	48 85 c0 	testq	%rax, %rax
  43501e:	0f 84 c9 04 00 00 	je	1225 <runtime.adjustframe+0x74d>
  435024:	8b 08 	movl	(%rax), %ecx
  435026:	85 c9 	testl	%ecx, %ecx
  435028:	0f 8e bf 04 00 00 	jle	1215 <runtime.adjustframe+0x74d>
  43502e:	48 89 44 24 70 	movq	%rax, 112(%rsp)
  435033:	8b 54 24 34 	movl	52(%rsp), %edx
  435037:	85 d2 	testl	%edx, %edx
  435039:	0f 8c 8c 03 00 00 	jl	908 <runtime.adjustframe+0x62b>
  43503f:	39 ca 	cmpl	%ecx, %edx
  435041:	0f 8d 84 03 00 00 	jge	900 <runtime.adjustframe+0x62b>
  435047:	48 89 04 24 	movq	%rax, (%rsp)
  43504b:	89 54 24 08 	movl	%edx, 8(%rsp)
  43504f:	e8 9c 41 00 00 	callq	16796 <runtime.stackmapdata>
  435054:	48 8b 44 24 18 	movq	24(%rsp), %rax
  435059:	8b 4c 24 10 	movl	16(%rsp), %ecx
  43505d:	89 8c 24 88 00 00 00 	movl	%ecx, 136(%rsp)
  435064:	48 89 84 24 90 00 00 00 	movq	%rax, 144(%rsp)
  43506c:	48 63 84 24 88 00 00 00 	movslq	136(%rsp), %rax
  435074:	48 c1 e0 03 	shlq	$3, %rax
  435078:	48 8b 8c 24 b8 00 00 00 	movq	184(%rsp), %rcx
  435080:	48 8b 51 38 	movq	56(%rcx), %rdx
  435084:	48 29 c2 	subq	%rax, %rdx
  435087:	48 89 14 24 	movq	%rdx, (%rsp)
  43508b:	48 8d 84 24 88 00 00 00 	leaq	136(%rsp), %rax
  435093:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  435098:	48 8b 84 24 c0 00 00 00 	movq	192(%rsp), %rax
  4350a0:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  4350a5:	48 8b 54 24 78 	movq	120(%rsp), %rdx
  4350aa:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  4350af:	48 8b 9c 24 80 00 00 00 	movq	128(%rsp), %rbx
  4350b7:	48 89 5c 24 20 	movq	%rbx, 32(%rsp)
  4350bc:	e8 7f fa ff ff 	callq	-1409 <runtime.adjustpointers>
  4350c1:	8b 44 24 34 	movl	52(%rsp), %eax
  4350c5:	48 8b 8c 24 b8 00 00 00 	movq	184(%rsp), %rcx
  4350cd:	e9 a3 fd ff ff 	jmp	-605 <runtime.adjustframe+0xd5>
  4350d2:	c6 84 24 c8 00 00 00 01 	movb	$1, 200(%rsp)
  4350da:	48 8b ac 24 a8 00 00 00 	movq	168(%rsp), %rbp
  4350e2:	48 81 c4 b0 00 00 00 	addq	$176, %rsp
  4350e9:	c3 	retq
  4350ea:	c6 84 24 c8 00 00 00 01 	movb	$1, 200(%rsp)
  4350f2:	48 8b ac 24 a8 00 00 00 	movq	168(%rsp), %rbp
  4350fa:	48 81 c4 b0 00 00 00 	addq	$176, %rsp
  435101:	c3 	retq
  435102:	48 8b 44 24 78 	movq	120(%rsp), %rax
  435107:	48 89 04 24 	movq	%rax, (%rsp)
  43510b:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  435113:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  435118:	e8 e3 37 00 00 	callq	14307 <runtime.funcname>
  43511d:	48 8b 44 24 70 	movq	112(%rsp), %rax
  435122:	48 63 00 	movslq	(%rax), %rax
  435125:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  43512a:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  43512f:	48 89 4c 24 68 	movq	%rcx, 104(%rsp)
  435134:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  435139:	48 89 54 24 58 	movq	%rdx, 88(%rsp)
  43513e:	e8 bd c9 fe ff 	callq	-79427 <runtime.printlock>
  435143:	48 8d 05 20 5e 03 00 	leaq	220704(%rip), %rax
  43514a:	48 89 04 24 	movq	%rax, (%rsp)
  43514e:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  435157:	e8 e4 d2 fe ff 	callq	-77084 <runtime.printstring>
  43515c:	8b 44 24 34 	movl	52(%rsp), %eax
  435160:	48 63 c0 	movslq	%eax, %rax
  435163:	48 89 04 24 	movq	%rax, (%rsp)
  435167:	e8 14 d1 fe ff 	callq	-77548 <runtime.printint>
  43516c:	48 8d 05 e1 4b 03 00 	leaq	216033(%rip), %rax
  435173:	48 89 04 24 	movq	%rax, (%rsp)
  435177:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  435180:	e8 bb d2 fe ff 	callq	-77125 <runtime.printstring>
  435185:	48 8b 44 24 60 	movq	96(%rsp), %rax
  43518a:	48 89 04 24 	movq	%rax, (%rsp)
  43518e:	e8 ed d0 fe ff 	callq	-77587 <runtime.printint>
  435193:	48 8d 05 e8 6d 03 00 	leaq	224744(%rip), %rax
  43519a:	48 89 04 24 	movq	%rax, (%rsp)
  43519e:	48 c7 44 24 08 1c 00 00 00 	movq	$28, 8(%rsp)
  4351a7:	e8 94 d2 fe ff 	callq	-77164 <runtime.printstring>
  4351ac:	48 8b 44 24 68 	movq	104(%rsp), %rax
  4351b1:	48 89 04 24 	movq	%rax, (%rsp)
  4351b5:	48 8b 44 24 58 	movq	88(%rsp), %rax
  4351ba:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4351bf:	e8 7c d2 fe ff 	callq	-77188 <runtime.printstring>
  4351c4:	48 8d 05 d8 51 03 00 	leaq	217560(%rip), %rax
  4351cb:	48 89 04 24 	movq	%rax, (%rsp)
  4351cf:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  4351d8:	e8 63 d2 fe ff 	callq	-77213 <runtime.printstring>
  4351dd:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4351e2:	48 89 04 24 	movq	%rax, (%rsp)
  4351e6:	e8 85 cf fe ff 	callq	-77947 <runtime.printuint>
  4351eb:	48 8d 05 78 4a 03 00 	leaq	215672(%rip), %rax
  4351f2:	48 89 04 24 	movq	%rax, (%rsp)
  4351f6:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  4351ff:	e8 3c d2 fe ff 	callq	-77252 <runtime.printstring>
  435204:	e8 77 c9 fe ff 	callq	-79497 <runtime.printunlock>
  435209:	48 8d 05 a2 58 03 00 	leaq	219298(%rip), %rax
  435210:	48 89 04 24 	movq	%rax, (%rsp)
  435214:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  43521d:	e8 ae bf fe ff 	callq	-82002 <runtime.throw>
  435222:	0f 0b 	ud2
  435224:	48 8b 44 24 78 	movq	120(%rsp), %rax
  435229:	48 89 04 24 	movq	%rax, (%rsp)
  43522d:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  435235:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43523a:	e8 c1 36 00 00 	callq	14017 <runtime.funcname>
  43523f:	48 8b 44 24 18 	movq	24(%rsp), %rax
  435244:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  435249:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  43524e:	48 89 4c 24 68 	movq	%rcx, 104(%rsp)
  435253:	48 8b 94 24 b8 00 00 00 	movq	184(%rsp), %rdx
  43525b:	48 8b 5a 40 	movq	64(%rdx), %rbx
  43525f:	48 89 5c 24 50 	movq	%rbx, 80(%rsp)
  435264:	48 8b 52 48 	movq	72(%rdx), %rdx
  435268:	48 89 54 24 48 	movq	%rdx, 72(%rsp)
  43526d:	e8 8e c8 fe ff 	callq	-79730 <runtime.printlock>
  435272:	48 8d 05 3d 57 03 00 	leaq	218941(%rip), %rax
  435279:	48 89 04 24 	movq	%rax, (%rsp)
  43527d:	48 c7 44 24 08 0f 00 00 00 	movq	$15, 8(%rsp)
  435286:	e8 b5 d1 fe ff 	callq	-77387 <runtime.printstring>
  43528b:	48 8b 44 24 68 	movq	104(%rsp), %rax
  435290:	48 89 04 24 	movq	%rax, (%rsp)
  435294:	48 8b 44 24 58 	movq	88(%rsp), %rax
  435299:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43529e:	e8 9d d1 fe ff 	callq	-77411 <runtime.printstring>
  4352a3:	48 8d 05 5e 55 03 00 	leaq	218462(%rip), %rax
  4352aa:	48 89 04 24 	movq	%rax, (%rsp)
  4352ae:	48 c7 44 24 08 0e 00 00 00 	movq	$14, 8(%rsp)
  4352b7:	e8 84 d1 fe ff 	callq	-77436 <runtime.printstring>
  4352bc:	48 8b 44 24 50 	movq	80(%rsp), %rax
  4352c1:	48 89 04 24 	movq	%rax, (%rsp)
  4352c5:	e8 a6 ce fe ff 	callq	-78170 <runtime.printuint>
  4352ca:	48 8d 05 82 49 03 00 	leaq	215426(%rip), %rax
  4352d1:	48 89 04 24 	movq	%rax, (%rsp)
  4352d5:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  4352de:	e8 5d d1 fe ff 	callq	-77475 <runtime.printstring>
  4352e3:	48 8b 44 24 48 	movq	72(%rsp), %rax
  4352e8:	48 89 04 24 	movq	%rax, (%rsp)
  4352ec:	e8 7f ce fe ff 	callq	-78209 <runtime.printuint>
  4352f1:	e8 9a ca fe ff 	callq	-79206 <runtime.printnl>
  4352f6:	e8 85 c8 fe ff 	callq	-79739 <runtime.printunlock>
  4352fb:	48 8d 05 10 58 03 00 	leaq	219152(%rip), %rax
  435302:	48 89 04 24 	movq	%rax, (%rsp)
  435306:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  43530f:	e8 bc be fe ff 	callq	-82244 <runtime.throw>
  435314:	0f 0b 	ud2
  435316:	e8 e5 c7 fe ff 	callq	-79899 <runtime.printlock>
  43531b:	48 8d 05 98 8b 03 00 	leaq	232344(%rip), %rax
  435322:	48 89 04 24 	movq	%rax, (%rsp)
  435326:	48 c7 44 24 08 4c 00 00 00 	movq	$76, 8(%rsp)
  43532f:	e8 0c d1 fe ff 	callq	-77556 <runtime.printstring>
  435334:	e8 47 c8 fe ff 	callq	-79801 <runtime.printunlock>
  435339:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  435341:	48 8b 48 40 	movq	64(%rax), %rcx
  435345:	48 89 4c 24 50 	movq	%rcx, 80(%rsp)
  43534a:	48 8b 40 38 	movq	56(%rax), %rax
  43534e:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  435353:	e8 a8 c7 fe ff 	callq	-79960 <runtime.printlock>
  435358:	48 8d 05 40 4a 03 00 	leaq	215616(%rip), %rax
  43535f:	48 89 04 24 	movq	%rax, (%rsp)
  435363:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  43536c:	e8 cf d0 fe ff 	callq	-77617 <runtime.printstring>
  435371:	48 8b 44 24 50 	movq	80(%rsp), %rax
  435376:	48 89 04 24 	movq	%rax, (%rsp)
  43537a:	e8 71 cf fe ff 	callq	-77967 <runtime.printhex>
  43537f:	48 8d 05 a3 4a 03 00 	leaq	215715(%rip), %rax
  435386:	48 89 04 24 	movq	%rax, (%rsp)
  43538a:	48 c7 44 24 08 06 00 00 00 	movq	$6, 8(%rsp)
  435393:	e8 a8 d0 fe ff 	callq	-77656 <runtime.printstring>
  435398:	48 8b 44 24 48 	movq	72(%rsp), %rax
  43539d:	48 89 04 24 	movq	%rax, (%rsp)
  4353a1:	e8 4a cf fe ff 	callq	-78006 <runtime.printhex>
  4353a6:	e8 e5 c9 fe ff 	callq	-79387 <runtime.printnl>
  4353ab:	e8 d0 c7 fe ff 	callq	-79920 <runtime.printunlock>
  4353b0:	48 8d 05 db 56 03 00 	leaq	218843(%rip), %rax
  4353b7:	48 89 04 24 	movq	%rax, (%rsp)
  4353bb:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  4353c4:	e8 07 be fe ff 	callq	-82425 <runtime.throw>
  4353c9:	0f 0b 	ud2
  4353cb:	48 8b 44 24 78 	movq	120(%rsp), %rax
  4353d0:	48 89 04 24 	movq	%rax, (%rsp)
  4353d4:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  4353dc:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4353e1:	e8 1a 35 00 00 	callq	13594 <runtime.funcname>
  4353e6:	48 8b 44 24 70 	movq	112(%rsp), %rax
  4353eb:	48 63 00 	movslq	(%rax), %rax
  4353ee:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  4353f3:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  4353f8:	48 89 4c 24 58 	movq	%rcx, 88(%rsp)
  4353fd:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  435402:	48 89 54 24 68 	movq	%rdx, 104(%rsp)
  435407:	e8 f4 c6 fe ff 	callq	-80140 <runtime.printlock>
  43540c:	48 8d 05 57 5b 03 00 	leaq	219991(%rip), %rax
  435413:	48 89 04 24 	movq	%rax, (%rsp)
  435417:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  435420:	e8 1b d0 fe ff 	callq	-77797 <runtime.printstring>
  435425:	8b 44 24 34 	movl	52(%rsp), %eax
  435429:	48 63 c0 	movslq	%eax, %rax
  43542c:	48 89 04 24 	movq	%rax, (%rsp)
  435430:	e8 4b ce fe ff 	callq	-78261 <runtime.printint>
  435435:	48 8d 05 18 49 03 00 	leaq	215320(%rip), %rax
  43543c:	48 89 04 24 	movq	%rax, (%rsp)
  435440:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  435449:	e8 f2 cf fe ff 	callq	-77838 <runtime.printstring>
  43544e:	48 8b 44 24 60 	movq	96(%rsp), %rax
  435453:	48 89 04 24 	movq	%rax, (%rsp)
  435457:	e8 24 ce fe ff 	callq	-78300 <runtime.printint>
  43545c:	48 8d 05 90 6f 03 00 	leaq	225168(%rip), %rax
  435463:	48 89 04 24 	movq	%rax, (%rsp)
  435467:	48 c7 44 24 08 1e 00 00 00 	movq	$30, 8(%rsp)
  435470:	e8 cb cf fe ff 	callq	-77877 <runtime.printstring>
  435475:	48 8b 44 24 68 	movq	104(%rsp), %rax
  43547a:	48 89 04 24 	movq	%rax, (%rsp)
  43547e:	48 8b 44 24 58 	movq	88(%rsp), %rax
  435483:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  435488:	e8 b3 cf fe ff 	callq	-77901 <runtime.printstring>
  43548d:	48 8d 05 0f 4f 03 00 	leaq	216847(%rip), %rax
  435494:	48 89 04 24 	movq	%rax, (%rsp)
  435498:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  4354a1:	e8 9a cf fe ff 	callq	-77926 <runtime.printstring>
  4354a6:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4354ab:	48 89 04 24 	movq	%rax, (%rsp)
  4354af:	e8 bc cc fe ff 	callq	-78660 <runtime.printuint>
  4354b4:	48 8d 05 af 47 03 00 	leaq	214959(%rip), %rax
  4354bb:	48 89 04 24 	movq	%rax, (%rsp)
  4354bf:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  4354c8:	e8 73 cf fe ff 	callq	-77965 <runtime.printstring>
  4354cd:	e8 ae c6 fe ff 	callq	-80210 <runtime.printunlock>
  4354d2:	48 8d 05 d9 55 03 00 	leaq	218585(%rip), %rax
  4354d9:	48 89 04 24 	movq	%rax, (%rsp)
  4354dd:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  4354e6:	e8 e5 bc fe ff 	callq	-82715 <runtime.throw>
  4354eb:	0f 0b 	ud2
  4354ed:	48 8b 44 24 78 	movq	120(%rsp), %rax
  4354f2:	48 89 04 24 	movq	%rax, (%rsp)
  4354f6:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  4354fe:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  435503:	e8 f8 33 00 00 	callq	13304 <runtime.funcname>
  435508:	48 8b 44 24 10 	movq	16(%rsp), %rax
  43550d:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  435512:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  435517:	48 89 4c 24 58 	movq	%rcx, 88(%rsp)
  43551c:	48 8b 94 24 b8 00 00 00 	movq	184(%rsp), %rdx
  435524:	48 8b 52 38 	movq	56(%rdx), %rdx
  435528:	48 89 54 24 50 	movq	%rdx, 80(%rsp)
  43552d:	e8 ce c5 fe ff 	callq	-80434 <runtime.printlock>
  435532:	48 8d 05 7d 54 03 00 	leaq	218237(%rip), %rax
  435539:	48 89 04 24 	movq	%rax, (%rsp)
  43553d:	48 c7 44 24 08 0f 00 00 00 	movq	$15, 8(%rsp)
  435546:	e8 f5 ce fe ff 	callq	-78091 <runtime.printstring>
  43554b:	48 8b 44 24 68 	movq	104(%rsp), %rax
  435550:	48 89 04 24 	movq	%rax, (%rsp)
  435554:	48 8b 44 24 58 	movq	88(%rsp), %rax
  435559:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43555e:	e8 dd ce fe ff 	callq	-78115 <runtime.printstring>
  435563:	48 8d 05 b8 54 03 00 	leaq	218296(%rip), %rax
  43556a:	48 89 04 24 	movq	%rax, (%rsp)
  43556e:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  435577:	e8 c4 ce fe ff 	callq	-78140 <runtime.printstring>
  43557c:	48 8b 44 24 50 	movq	80(%rsp), %rax
  435581:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  435586:	48 29 c8 	subq	%rcx, %rax
  435589:	48 89 04 24 	movq	%rax, (%rsp)
  43558d:	e8 5e cd fe ff 	callq	-78498 <runtime.printhex>
  435592:	48 8d 05 ba 46 03 00 	leaq	214714(%rip), %rax
  435599:	48 89 04 24 	movq	%rax, (%rsp)
  43559d:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  4355a6:	e8 95 ce fe ff 	callq	-78187 <runtime.printstring>
  4355ab:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4355b0:	48 89 04 24 	movq	%rax, (%rsp)
  4355b4:	e8 37 cd fe ff 	callq	-78537 <runtime.printhex>
  4355b9:	e8 d2 c7 fe ff 	callq	-79918 <runtime.printnl>
  4355be:	e8 bd c5 fe ff 	callq	-80451 <runtime.printunlock>
  4355c3:	48 8d 05 48 55 03 00 	leaq	218440(%rip), %rax
  4355ca:	48 89 04 24 	movq	%rax, (%rsp)
  4355ce:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  4355d7:	e8 f4 bb fe ff 	callq	-82956 <runtime.throw>
  4355dc:	0f 0b 	ud2
  4355de:	e8 8d ef 00 00 	callq	61325 <runtime.morestack_noctxt>
  4355e3:	e9 b8 f7 ff ff 	jmp	-2120 <runtime.adjustframe>
  4355e8:	cc 	int3
  4355e9:	cc 	int3
  4355ea:	cc 	int3
  4355eb:	cc 	int3
  4355ec:	cc 	int3
  4355ed:	cc 	int3
  4355ee:	cc 	int3
  4355ef:	cc 	int3

runtime.adjustctxt:
  4355f0:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4355f5:	48 8d 48 50 	leaq	80(%rax), %rcx
  4355f9:	84 01 	testb	%al, (%rcx)
  4355fb:	48 8b 48 50 	movq	80(%rax), %rcx
  4355ff:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  435604:	48 8b 1a 	movq	(%rdx), %rbx
  435607:	48 39 cb 	cmpq	%rcx, %rbx
  43560a:	77 14 	ja	20 <runtime.adjustctxt+0x30>
  43560c:	48 8b 5a 08 	movq	8(%rdx), %rbx
  435610:	48 39 d9 	cmpq	%rbx, %rcx
  435613:	73 0b 	jae	11 <runtime.adjustctxt+0x30>
  435615:	48 8b 5a 10 	movq	16(%rdx), %rbx
  435619:	48 01 d9 	addq	%rbx, %rcx
  43561c:	48 89 48 50 	movq	%rcx, 80(%rax)
  435620:	0f b6 0d 70 f4 03 00 	movzbl	259184(%rip), %ecx
  435627:	84 c9 	testb	%cl, %cl
  435629:	74 27 	je	39 <runtime.adjustctxt+0x62>
  43562b:	48 8d 48 68 	leaq	104(%rax), %rcx
  43562f:	84 01 	testb	%al, (%rcx)
  435631:	48 8b 48 68 	movq	104(%rax), %rcx
  435635:	48 8b 1a 	movq	(%rdx), %rbx
  435638:	48 39 cb 	cmpq	%rcx, %rbx
  43563b:	77 14 	ja	20 <runtime.adjustctxt+0x61>
  43563d:	48 8b 5a 08 	movq	8(%rdx), %rbx
  435641:	48 39 d9 	cmpq	%rbx, %rcx
  435644:	73 0b 	jae	11 <runtime.adjustctxt+0x61>
  435646:	48 8b 52 10 	movq	16(%rdx), %rdx
  43564a:	48 01 d1 	addq	%rdx, %rcx
  43564d:	48 89 48 68 	movq	%rcx, 104(%rax)
  435651:	c3 	retq
  435652:	c3 	retq
  435653:	cc 	int3
  435654:	cc 	int3
  435655:	cc 	int3
  435656:	cc 	int3
  435657:	cc 	int3
  435658:	cc 	int3
  435659:	cc 	int3
  43565a:	cc 	int3
  43565b:	cc 	int3
  43565c:	cc 	int3
  43565d:	cc 	int3
  43565e:	cc 	int3
  43565f:	cc 	int3

runtime.adjustdefers:
  435660:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  435669:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43566d:	0f 86 c9 00 00 00 	jbe	201 <runtime.adjustdefers+0xdc>
  435673:	48 83 ec 20 	subq	$32, %rsp
  435677:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  43567c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  435681:	48 8b 44 24 28 	movq	40(%rsp), %rax
  435686:	48 89 04 24 	movq	%rax, (%rsp)
  43568a:	48 8d 0d ef 88 03 00 	leaq	231663(%rip), %rcx
  435691:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  435696:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  43569b:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  4356a0:	e8 8b 5a 00 00 	callq	23179 <runtime.tracebackdefers>
  4356a5:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4356aa:	48 8b 40 28 	movq	40(%rax), %rax
  4356ae:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4356b3:	eb 04 	jmp	4 <runtime.adjustdefers+0x59>
  4356b5:	48 8b 40 28 	movq	40(%rax), %rax
  4356b9:	48 85 c0 	testq	%rax, %rax
  4356bc:	74 74 	je	116 <runtime.adjustdefers+0xd2>
  4356be:	48 8d 50 18 	leaq	24(%rax), %rdx
  4356c2:	84 02 	testb	%al, (%rdx)
  4356c4:	48 8b 50 18 	movq	24(%rax), %rdx
  4356c8:	48 8b 19 	movq	(%rcx), %rbx
  4356cb:	48 39 d3 	cmpq	%rdx, %rbx
  4356ce:	77 14 	ja	20 <runtime.adjustdefers+0x84>
  4356d0:	48 8b 59 08 	movq	8(%rcx), %rbx
  4356d4:	48 39 da 	cmpq	%rbx, %rdx
  4356d7:	73 0b 	jae	11 <runtime.adjustdefers+0x84>
  4356d9:	48 8b 59 10 	movq	16(%rcx), %rbx
  4356dd:	48 01 da 	addq	%rbx, %rdx
  4356e0:	48 89 50 18 	movq	%rdx, 24(%rax)
  4356e4:	48 8d 50 08 	leaq	8(%rax), %rdx
  4356e8:	84 02 	testb	%al, (%rdx)
  4356ea:	48 8b 50 08 	movq	8(%rax), %rdx
  4356ee:	48 8b 19 	movq	(%rcx), %rbx
  4356f1:	48 39 d3 	cmpq	%rdx, %rbx
  4356f4:	77 14 	ja	20 <runtime.adjustdefers+0xaa>
  4356f6:	48 8b 59 08 	movq	8(%rcx), %rbx
  4356fa:	48 39 da 	cmpq	%rbx, %rdx
  4356fd:	73 0b 	jae	11 <runtime.adjustdefers+0xaa>
  4356ff:	48 8b 59 10 	movq	16(%rcx), %rbx
  435703:	48 01 da 	addq	%rbx, %rdx
  435706:	48 89 50 08 	movq	%rdx, 8(%rax)
  43570a:	48 8d 50 20 	leaq	32(%rax), %rdx
  43570e:	84 02 	testb	%al, (%rdx)
  435710:	48 8b 50 20 	movq	32(%rax), %rdx
  435714:	48 8b 19 	movq	(%rcx), %rbx
  435717:	48 39 d3 	cmpq	%rdx, %rbx
  43571a:	77 99 	ja	-103 <runtime.adjustdefers+0x55>
  43571c:	48 8b 59 08 	movq	8(%rcx), %rbx
  435720:	48 39 da 	cmpq	%rbx, %rdx
  435723:	73 90 	jae	-112 <runtime.adjustdefers+0x55>
  435725:	48 8b 59 10 	movq	16(%rcx), %rbx
  435729:	48 01 da 	addq	%rbx, %rdx
  43572c:	48 89 50 20 	movq	%rdx, 32(%rax)
  435730:	eb 83 	jmp	-125 <runtime.adjustdefers+0x55>
  435732:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  435737:	48 83 c4 20 	addq	$32, %rsp
  43573b:	c3 	retq
  43573c:	e8 2f ee 00 00 	callq	60975 <runtime.morestack_noctxt>
  435741:	e9 1a ff ff ff 	jmp	-230 <runtime.adjustdefers>
  435746:	cc 	int3
  435747:	cc 	int3
  435748:	cc 	int3
  435749:	cc 	int3
  43574a:	cc 	int3
  43574b:	cc 	int3
  43574c:	cc 	int3
  43574d:	cc 	int3
  43574e:	cc 	int3
  43574f:	cc 	int3

runtime.adjustsudogs:
  435750:	48 8b 44 24 08 	movq	8(%rsp), %rax
  435755:	48 8b 80 38 01 00 00 	movq	312(%rax), %rax
  43575c:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  435761:	eb 04 	jmp	4 <runtime.adjustsudogs+0x17>
  435763:	48 8b 40 48 	movq	72(%rax), %rax
  435767:	48 85 c0 	testq	%rax, %rax
  43576a:	74 28 	je	40 <runtime.adjustsudogs+0x44>
  43576c:	48 8d 50 20 	leaq	32(%rax), %rdx
  435770:	84 02 	testb	%al, (%rdx)
  435772:	48 8b 50 20 	movq	32(%rax), %rdx
  435776:	48 8b 19 	movq	(%rcx), %rbx
  435779:	48 39 d3 	cmpq	%rdx, %rbx
  43577c:	77 e5 	ja	-27 <runtime.adjustsudogs+0x13>
  43577e:	48 8b 59 08 	movq	8(%rcx), %rbx
  435782:	48 39 da 	cmpq	%rbx, %rdx
  435785:	73 dc 	jae	-36 <runtime.adjustsudogs+0x13>
  435787:	48 8b 59 10 	movq	16(%rcx), %rbx
  43578b:	48 01 da 	addq	%rbx, %rdx
  43578e:	48 89 50 20 	movq	%rdx, 32(%rax)
  435792:	eb cf 	jmp	-49 <runtime.adjustsudogs+0x13>
  435794:	c3 	retq
  435795:	cc 	int3
  435796:	cc 	int3
  435797:	cc 	int3
  435798:	cc 	int3
  435799:	cc 	int3
  43579a:	cc 	int3
  43579b:	cc 	int3
  43579c:	cc 	int3
  43579d:	cc 	int3
  43579e:	cc 	int3
  43579f:	cc 	int3

runtime.findsghi:
  4357a0:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4357a5:	48 8b 80 38 01 00 00 	movq	312(%rax), %rax
  4357ac:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  4357b1:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  4357b6:	31 db 	xorl	%ebx, %ebx
  4357b8:	eb 07 	jmp	7 <runtime.findsghi+0x21>
  4357ba:	48 8b 40 48 	movq	72(%rax), %rax
  4357be:	48 89 f3 	movq	%rsi, %rbx
  4357c1:	48 85 c0 	testq	%rax, %rax
  4357c4:	74 23 	je	35 <runtime.findsghi+0x49>
  4357c6:	48 8b 70 58 	movq	88(%rax), %rsi
  4357ca:	48 8b 78 20 	movq	32(%rax), %rdi
  4357ce:	0f b7 76 18 	movzwl	24(%rsi), %esi
  4357d2:	48 01 fe 	addq	%rdi, %rsi
  4357d5:	48 39 f2 	cmpq	%rsi, %rdx
  4357d8:	77 0a 	ja	10 <runtime.findsghi+0x44>
  4357da:	48 39 ce 	cmpq	%rcx, %rsi
  4357dd:	73 05 	jae	5 <runtime.findsghi+0x44>
  4357df:	48 39 de 	cmpq	%rbx, %rsi
  4357e2:	77 d6 	ja	-42 <runtime.findsghi+0x1a>
  4357e4:	48 89 de 	movq	%rbx, %rsi
  4357e7:	eb d1 	jmp	-47 <runtime.findsghi+0x1a>
  4357e9:	48 89 5c 24 20 	movq	%rbx, 32(%rsp)
  4357ee:	c3 	retq
  4357ef:	cc 	int3

runtime.syncadjustsudogs:
  4357f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4357f9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4357fd:	0f 86 31 01 00 00 	jbe	305 <runtime.syncadjustsudogs+0x144>
  435803:	48 83 ec 38 	subq	$56, %rsp
  435807:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  43580c:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  435811:	48 8b 44 24 40 	movq	64(%rsp), %rax
  435816:	48 8b 88 38 01 00 00 	movq	312(%rax), %rcx
  43581d:	48 85 c9 	testq	%rcx, %rcx
  435820:	0f 84 fb 00 00 00 	je	251 <runtime.syncadjustsudogs+0x131>
  435826:	31 d2 	xorl	%edx, %edx
  435828:	eb 0b 	jmp	11 <runtime.syncadjustsudogs+0x45>
  43582a:	48 8b 59 48 	movq	72(%rcx), %rbx
  43582e:	48 8b 51 58 	movq	88(%rcx), %rdx
  435832:	48 89 d9 	movq	%rbx, %rcx
  435835:	48 85 c9 	testq	%rcx, %rcx
  435838:	74 29 	je	41 <runtime.syncadjustsudogs+0x73>
  43583a:	48 8b 59 58 	movq	88(%rcx), %rbx
  43583e:	48 39 da 	cmpq	%rbx, %rdx
  435841:	74 e7 	je	-25 <runtime.syncadjustsudogs+0x3a>
  435843:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  435848:	84 03 	testb	%al, (%rbx)
  43584a:	48 8d 43 58 	leaq	88(%rbx), %rax
  43584e:	48 89 04 24 	movq	%rax, (%rsp)
  435852:	e8 c9 3c fd ff 	callq	-181047 <runtime.lock>
  435857:	48 8b 44 24 40 	movq	64(%rsp), %rax
  43585c:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  435861:	eb c7 	jmp	-57 <runtime.syncadjustsudogs+0x3a>
  435863:	48 89 04 24 	movq	%rax, (%rsp)
  435867:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  43586c:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  435871:	e8 da fe ff ff 	callq	-294 <runtime.adjustsudogs>
  435876:	48 8b 44 24 50 	movq	80(%rsp), %rax
  43587b:	48 8b 88 18 01 00 00 	movq	280(%rax), %rcx
  435882:	48 85 c9 	testq	%rcx, %rcx
  435885:	75 5f 	jne	95 <runtime.syncadjustsudogs+0xf6>
  435887:	31 c0 	xorl	%eax, %eax
  435889:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  43588e:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  435893:	48 8b 89 38 01 00 00 	movq	312(%rcx), %rcx
  43589a:	31 d2 	xorl	%edx, %edx
  43589c:	eb 0b 	jmp	11 <runtime.syncadjustsudogs+0xb9>
  43589e:	48 8b 59 48 	movq	72(%rcx), %rbx
  4358a2:	48 8b 51 58 	movq	88(%rcx), %rdx
  4358a6:	48 89 d9 	movq	%rbx, %rcx
  4358a9:	48 85 c9 	testq	%rcx, %rcx
  4358ac:	74 29 	je	41 <runtime.syncadjustsudogs+0xe7>
  4358ae:	48 8b 59 58 	movq	88(%rcx), %rbx
  4358b2:	48 39 da 	cmpq	%rbx, %rdx
  4358b5:	74 e7 	je	-25 <runtime.syncadjustsudogs+0xae>
  4358b7:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  4358bc:	84 03 	testb	%al, (%rbx)
  4358be:	48 8d 43 58 	leaq	88(%rbx), %rax
  4358c2:	48 89 04 24 	movq	%rax, (%rsp)
  4358c6:	e8 f5 3d fd ff 	callq	-180747 <runtime.unlock>
  4358cb:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4358d0:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  4358d5:	eb c7 	jmp	-57 <runtime.syncadjustsudogs+0xae>
  4358d7:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  4358dc:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  4358e1:	48 83 c4 38 	addq	$56, %rsp
  4358e5:	c3 	retq
  4358e6:	48 8b 50 08 	movq	8(%rax), %rdx
  4358ea:	48 8b 5c 24 48 	movq	72(%rsp), %rbx
  4358ef:	48 29 da 	subq	%rbx, %rdx
  4358f2:	48 8b 40 10 	movq	16(%rax), %rax
  4358f6:	48 01 d0 	addq	%rdx, %rax
  4358f9:	48 89 04 24 	movq	%rax, (%rsp)
  4358fd:	48 89 d0 	movq	%rdx, %rax
  435900:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  435905:	48 29 c1 	subq	%rax, %rcx
  435908:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  43590d:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  435912:	e8 e9 17 01 00 	callq	71657 <runtime.memmove>
  435917:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43591c:	e9 68 ff ff ff 	jmp	-152 <runtime.syncadjustsudogs+0x99>
  435921:	48 c7 44 24 58 00 00 00 00 	movq	$0, 88(%rsp)
  43592a:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  43592f:	48 83 c4 38 	addq	$56, %rsp
  435933:	c3 	retq
  435934:	e8 37 ec 00 00 	callq	60471 <runtime.morestack_noctxt>
  435939:	e9 b2 fe ff ff 	jmp	-334 <runtime.syncadjustsudogs>
  43593e:	cc 	int3
  43593f:	cc 	int3

runtime.copystack:
  435940:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  435949:	48 8d 84 24 d0 fe ff ff 	leaq	-304(%rsp), %rax
  435951:	48 3b 41 10 	cmpq	16(%rcx), %rax
  435955:	0f 86 1b 03 00 00 	jbe	795 <runtime.copystack+0x336>
  43595b:	48 81 ec b0 01 00 00 	subq	$432, %rsp
  435962:	48 89 ac 24 a8 01 00 00 	movq	%rbp, 424(%rsp)
  43596a:	48 8d ac 24 a8 01 00 00 	leaq	424(%rsp), %rbp
  435972:	48 8b 84 24 b8 01 00 00 	movq	440(%rsp), %rax
  43597a:	48 8b 48 70 	movq	112(%rax), %rcx
  43597e:	48 85 c9 	testq	%rcx, %rcx
  435981:	0f 85 d4 02 00 00 	jne	724 <runtime.copystack+0x31b>
  435987:	48 8b 48 08 	movq	8(%rax), %rcx
  43598b:	48 8b 10 	movq	(%rax), %rdx
  43598e:	48 85 d2 	testq	%rdx, %rdx
  435991:	0f 84 a9 02 00 00 	je	681 <runtime.copystack+0x300>
  435997:	48 89 8c 24 80 00 00 00 	movq	%rcx, 128(%rsp)
  43599f:	48 89 54 24 78 	movq	%rdx, 120(%rsp)
  4359a4:	48 8b 48 38 	movq	56(%rax), %rcx
  4359a8:	48 89 4c 24 70 	movq	%rcx, 112(%rsp)
  4359ad:	48 8b 94 24 c0 01 00 00 	movq	448(%rsp), %rdx
  4359b5:	89 14 24 	movl	%edx, (%rsp)
  4359b8:	e8 53 eb ff ff 	callq	-5293 <runtime.stackalloc>
  4359bd:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4359c2:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  4359c7:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  4359cc:	48 89 4c 24 60 	movq	%rcx, 96(%rsp)
  4359d1:	48 8d bc 24 88 00 00 00 	leaq	136(%rsp), %rdi
  4359d9:	0f 57 c0 	xorps	%xmm0, %xmm0
  4359dc:	48 8d 7f e0 	leaq	-32(%rdi), %rdi
  4359e0:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  4359e5:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  4359ea:	e8 89 10 01 00 	callq	69769 <runtime.duffzero+0xd8>
  4359ef:	48 8b 6d 00 	movq	(%rbp), %rbp
  4359f3:	48 8b 54 24 78 	movq	120(%rsp), %rdx
  4359f8:	48 89 94 24 88 00 00 00 	movq	%rdx, 136(%rsp)
  435a00:	48 8b 9c 24 80 00 00 00 	movq	128(%rsp), %rbx
  435a08:	48 89 9c 24 90 00 00 00 	movq	%rbx, 144(%rsp)
  435a10:	48 29 d8 	subq	%rbx, %rax
  435a13:	48 89 84 24 98 00 00 00 	movq	%rax, 152(%rsp)
  435a1b:	48 8b 44 24 70 	movq	112(%rsp), %rax
  435a20:	48 89 df 	movq	%rbx, %rdi
  435a23:	48 29 c3 	subq	%rax, %rbx
  435a26:	48 89 5c 24 58 	movq	%rbx, 88(%rsp)
  435a2b:	0f b6 84 24 c8 01 00 00 	movzbl	456(%rsp), %eax
  435a33:	84 c0 	testb	%al, %al
  435a35:	0f 84 a0 01 00 00 	je	416 <runtime.copystack+0x29b>
  435a3b:	48 8b 84 24 b8 01 00 00 	movq	440(%rsp), %rax
  435a43:	48 89 04 24 	movq	%rax, (%rsp)
  435a47:	48 8d 8c 24 88 00 00 00 	leaq	136(%rsp), %rcx
  435a4f:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  435a54:	e8 f7 fc ff ff 	callq	-777 <runtime.adjustsudogs>
  435a59:	48 8b 44 24 58 	movq	88(%rsp), %rax
  435a5e:	48 8b 4c 24 68 	movq	104(%rsp), %rcx
  435a63:	48 29 c1 	subq	%rax, %rcx
  435a66:	48 89 0c 24 	movq	%rcx, (%rsp)
  435a6a:	48 8b 8c 24 80 00 00 00 	movq	128(%rsp), %rcx
  435a72:	48 29 c1 	subq	%rax, %rcx
  435a75:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  435a7a:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  435a7f:	e8 7c 16 01 00 	callq	71292 <runtime.memmove>
  435a84:	48 8b 84 24 b8 01 00 00 	movq	440(%rsp), %rax
  435a8c:	48 89 04 24 	movq	%rax, (%rsp)
  435a90:	48 8d 8c 24 88 00 00 00 	leaq	136(%rsp), %rcx
  435a98:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  435a9d:	e8 4e fb ff ff 	callq	-1202 <runtime.adjustctxt>
  435aa2:	48 8b 84 24 b8 01 00 00 	movq	440(%rsp), %rax
  435aaa:	48 89 04 24 	movq	%rax, (%rsp)
  435aae:	48 8d 8c 24 88 00 00 00 	leaq	136(%rsp), %rcx
  435ab6:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  435abb:	e8 a0 fb ff ff 	callq	-1120 <runtime.adjustdefers>
  435ac0:	48 8b 84 24 b8 01 00 00 	movq	440(%rsp), %rax
  435ac8:	48 8d 48 20 	leaq	32(%rax), %rcx
  435acc:	84 01 	testb	%al, (%rcx)
  435ace:	48 8b 48 20 	movq	32(%rax), %rcx
  435ad2:	48 8b 94 24 88 00 00 00 	movq	136(%rsp), %rdx
  435ada:	48 39 ca 	cmpq	%rcx, %rdx
  435add:	77 1c 	ja	28 <runtime.copystack+0x1bb>
  435adf:	48 8b 94 24 90 00 00 00 	movq	144(%rsp), %rdx
  435ae7:	48 39 d1 	cmpq	%rdx, %rcx
  435aea:	73 0f 	jae	15 <runtime.copystack+0x1bb>
  435aec:	48 8b 94 24 98 00 00 00 	movq	152(%rsp), %rdx
  435af4:	48 01 d1 	addq	%rdx, %rcx
  435af7:	48 89 48 20 	movq	%rcx, 32(%rax)
  435afb:	48 8b 8c 24 a0 01 00 00 	movq	416(%rsp), %rcx
  435b03:	48 85 c9 	testq	%rcx, %rcx
  435b06:	74 13 	je	19 <runtime.copystack+0x1db>
  435b08:	48 8b 94 24 98 00 00 00 	movq	152(%rsp), %rdx
  435b10:	48 01 d1 	addq	%rdx, %rcx
  435b13:	48 89 8c 24 a0 01 00 00 	movq	%rcx, 416(%rsp)
  435b1b:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  435b20:	48 89 08 	movq	%rcx, (%rax)
  435b23:	48 8b 54 24 68 	movq	104(%rsp), %rdx
  435b28:	48 89 50 08 	movq	%rdx, 8(%rax)
  435b2c:	48 81 c1 70 03 00 00 	addq	$880, %rcx
  435b33:	48 89 48 10 	movq	%rcx, 16(%rax)
  435b37:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  435b3c:	48 29 ca 	subq	%rcx, %rdx
  435b3f:	48 89 50 38 	movq	%rdx, 56(%rax)
  435b43:	48 8b 8c 24 98 00 00 00 	movq	152(%rsp), %rcx
  435b4b:	48 03 88 80 00 00 00 	addq	128(%rax), %rcx
  435b52:	48 89 88 80 00 00 00 	movq	%rcx, 128(%rax)
  435b59:	48 c7 04 24 ff ff ff ff 	movq	$-1, (%rsp)
  435b61:	48 c7 44 24 08 ff ff ff ff 	movq	$-1, 8(%rsp)
  435b6a:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  435b73:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  435b78:	0f 57 c0 	xorps	%xmm0, %xmm0
  435b7b:	0f 11 44 24 20 	movups	%xmm0, 32(%rsp)
  435b80:	48 c7 44 24 30 ff ff ff 7f 	movq	$2147483647, 48(%rsp)
  435b89:	48 8d 05 f0 83 03 00 	leaq	230384(%rip), %rax
  435b90:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  435b95:	48 8d 84 24 88 00 00 00 	leaq	136(%rsp), %rax
  435b9d:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  435ba2:	48 c7 44 24 48 00 00 00 00 	movq	$0, 72(%rsp)
  435bab:	e8 80 57 00 00 	callq	22400 <runtime.gentraceback>
  435bb0:	48 8b 44 24 78 	movq	120(%rsp), %rax
  435bb5:	48 89 04 24 	movq	%rax, (%rsp)
  435bb9:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  435bc1:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  435bc6:	e8 65 ec ff ff 	callq	-5019 <runtime.stackfree>
  435bcb:	48 8b ac 24 a8 01 00 00 	movq	424(%rsp), %rbp
  435bd3:	48 81 c4 b0 01 00 00 	addq	$432, %rsp
  435bda:	c3 	retq
  435bdb:	48 8b 84 24 b8 01 00 00 	movq	440(%rsp), %rax
  435be3:	48 89 04 24 	movq	%rax, (%rsp)
  435be7:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  435bec:	48 89 7c 24 10 	movq	%rdi, 16(%rsp)
  435bf1:	e8 aa fb ff ff 	callq	-1110 <runtime.findsghi>
  435bf6:	48 8b 44 24 18 	movq	24(%rsp), %rax
  435bfb:	48 89 84 24 a0 01 00 00 	movq	%rax, 416(%rsp)
  435c03:	48 8b 84 24 b8 01 00 00 	movq	440(%rsp), %rax
  435c0b:	48 89 04 24 	movq	%rax, (%rsp)
  435c0f:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  435c14:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  435c19:	48 8d 94 24 88 00 00 00 	leaq	136(%rsp), %rdx
  435c21:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  435c26:	e8 c5 fb ff ff 	callq	-1083 <runtime.syncadjustsudogs>
  435c2b:	48 8b 44 24 18 	movq	24(%rsp), %rax
  435c30:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  435c35:	48 29 c1 	subq	%rax, %rcx
  435c38:	48 89 c8 	movq	%rcx, %rax
  435c3b:	e9 1e fe ff ff 	jmp	-482 <runtime.copystack+0x11e>
  435c40:	48 8d 05 21 4b 03 00 	leaq	215841(%rip), %rax
  435c47:	48 89 04 24 	movq	%rax, (%rsp)
  435c4b:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  435c54:	e8 77 b5 fe ff 	callq	-84617 <runtime.throw>
  435c59:	0f 0b 	ud2
  435c5b:	48 8d 05 b5 75 03 00 	leaq	226741(%rip), %rax
  435c62:	48 89 04 24 	movq	%rax, (%rsp)
  435c66:	48 c7 44 24 08 27 00 00 00 	movq	$39, 8(%rsp)
  435c6f:	e8 5c b5 fe ff 	callq	-84644 <runtime.throw>
  435c74:	0f 0b 	ud2
  435c76:	e8 f5 e8 00 00 	callq	59637 <runtime.morestack_noctxt>
  435c7b:	e9 c0 fc ff ff 	jmp	-832 <runtime.copystack>

runtime.round2:
  435c80:	8b 44 24 08 	movl	8(%rsp), %eax
  435c84:	31 c9 	xorl	%ecx, %ecx
  435c86:	eb 03 	jmp	3 <runtime.round2+0xb>
  435c88:	48 ff c1 	incq	%rcx
  435c8b:	ba 01 00 00 00 	movl	$1, %edx
  435c90:	d3 e2 	shll	%cl, %edx
  435c92:	48 83 f9 20 	cmpq	$32, %rcx
  435c96:	19 db 	sbbl	%ebx, %ebx
  435c98:	21 da 	andl	%ebx, %edx
  435c9a:	39 c2 	cmpl	%eax, %edx
  435c9c:	7c ea 	jl	-22 <runtime.round2+0x8>
  435c9e:	89 54 24 10 	movl	%edx, 16(%rsp)
  435ca2:	c3 	retq
  435ca3:	cc 	int3
  435ca4:	cc 	int3
  435ca5:	cc 	int3
  435ca6:	cc 	int3
  435ca7:	cc 	int3
  435ca8:	cc 	int3
  435ca9:	cc 	int3
  435caa:	cc 	int3
  435cab:	cc 	int3
  435cac:	cc 	int3
  435cad:	cc 	int3
  435cae:	cc 	int3
  435caf:	cc 	int3

runtime.newstack:
  435cb0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  435cb9:	48 8d 84 24 f8 fe ff ff 	leaq	-264(%rsp), %rax
  435cc1:	48 3b 41 10 	cmpq	16(%rcx), %rax
  435cc5:	0f 86 f1 0c 00 00 	jbe	3313 <runtime.newstack+0xd0c>
  435ccb:	48 81 ec 88 01 00 00 	subq	$392, %rsp
  435cd2:	48 89 ac 24 80 01 00 00 	movq	%rbp, 384(%rsp)
  435cda:	48 8d ac 24 80 01 00 00 	leaq	384(%rsp), %rbp
  435ce2:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  435ceb:	48 8b 48 30 	movq	48(%rax), %rcx
  435cef:	48 8b 51 18 	movq	24(%rcx), %rdx
  435cf3:	48 89 d3 	movq	%rdx, %rbx
  435cf6:	4c 8b 42 10 	movq	16(%rdx), %r8
  435cfa:	49 81 f8 2e fb ff ff 	cmpq	$-1234, %r8
  435d01:	0f 84 9a 0c 00 00 	je	3226 <runtime.newstack+0xcf1>
  435d07:	48 89 84 24 90 00 00 00 	movq	%rax, 144(%rsp)
  435d0f:	4c 8b 81 c0 00 00 00 	movq	192(%rcx), %r8
  435d16:	4c 89 84 24 d0 00 00 00 	movq	%r8, 208(%rsp)
  435d1e:	4c 39 c2 	cmpq	%r8, %rdx
  435d21:	0f 85 ec 0a 00 00 	jne	2796 <runtime.newstack+0xb63>
  435d27:	41 0f b6 90 c5 00 00 00 	movzbl	197(%r8), %edx
  435d2f:	84 d2 	testb	%dl, %dl
  435d31:	0f 85 7d 05 00 00 	jne	1405 <runtime.newstack+0x604>
  435d37:	48 8b 51 08 	movq	8(%rcx), %rdx
  435d3b:	48 89 94 24 d8 00 00 00 	movq	%rdx, 216(%rsp)
  435d43:	48 8d 71 10 	leaq	16(%rcx), %rsi
  435d47:	48 8d bc 24 e0 00 00 00 	leaq	224(%rsp), %rdi
  435d4f:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  435d54:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  435d59:	e8 d8 10 01 00 	callq	69848 <runtime.duffcopy+0x356>
  435d5e:	48 8b 6d 00 	movq	(%rbp), %rbp
  435d62:	48 8b 48 30 	movq	48(%rax), %rcx
  435d66:	48 c7 41 10 00 00 00 00 	movq	$0, 16(%rcx)
  435d6e:	48 8b 48 30 	movq	48(%rax), %rcx
  435d72:	48 c7 41 30 00 00 00 00 	movq	$0, 48(%rcx)
  435d7a:	48 8b 48 30 	movq	48(%rax), %rcx
  435d7e:	48 c7 41 08 00 00 00 00 	movq	$0, 8(%rcx)
  435d86:	48 8b 48 30 	movq	48(%rax), %rcx
  435d8a:	48 c7 41 18 00 00 00 00 	movq	$0, 24(%rcx)
  435d92:	49 8b 48 10 	movq	16(%r8), %rcx
  435d96:	48 89 8c 24 88 00 00 00 	movq	%rcx, 136(%rsp)
  435d9e:	48 81 f9 de fa ff ff 	cmpq	$-1314, %rcx
  435da5:	75 2c 	jne	44 <runtime.newstack+0x123>
  435da7:	48 8b 50 30 	movq	48(%rax), %rdx
  435dab:	8b 9a 00 01 00 00 	movl	256(%rdx), %ebx
  435db1:	85 db 	testl	%ebx, %ebx
  435db3:	0f 84 c5 04 00 00 	je	1221 <runtime.newstack+0x5ce>
  435db9:	49 8b 00 	movq	(%r8), %rax
  435dbc:	48 05 70 03 00 00 	addq	$880, %rax
  435dc2:	49 89 40 10 	movq	%rax, 16(%r8)
  435dc6:	49 8d 40 38 	leaq	56(%r8), %rax
  435dca:	48 89 04 24 	movq	%rax, (%rsp)
  435dce:	e8 6d e5 00 00 	callq	58733 <runtime.gogo>
  435dd3:	48 8b 84 24 d0 00 00 00 	movq	208(%rsp), %rax
  435ddb:	48 8b 08 	movq	(%rax), %rcx
  435dde:	48 85 c9 	testq	%rcx, %rcx
  435de1:	0f 84 2d 07 00 00 	je	1837 <runtime.newstack+0x864>
  435de7:	48 8b 50 38 	movq	56(%rax), %rdx
  435deb:	48 8d 5a f8 	leaq	-8(%rdx), %rbx
  435def:	48 89 5c 24 28 	movq	%rbx, 40(%rsp)
  435df4:	48 39 cb 	cmpq	%rcx, %rbx
  435df7:	0f 82 65 02 00 00 	jb	613 <runtime.newstack+0x3b2>
  435dfd:	48 8b 08 	movq	(%rax), %rcx
  435e00:	48 39 cb 	cmpq	%rcx, %rbx
  435e03:	0f 82 fe 05 00 00 	jb	1534 <runtime.newstack+0x757>
  435e09:	48 8b 8c 24 88 00 00 00 	movq	136(%rsp), %rcx
  435e11:	48 81 f9 de fa ff ff 	cmpq	$-1314, %rcx
  435e18:	0f 85 3c 01 00 00 	jne	316 <runtime.newstack+0x2aa>
  435e1e:	48 8b 8c 24 90 00 00 00 	movq	144(%rsp), %rcx
  435e26:	48 8b 49 30 	movq	48(%rcx), %rcx
  435e2a:	48 8b 11 	movq	(%rcx), %rdx
  435e2d:	48 39 d0 	cmpq	%rdx, %rax
  435e30:	0f 84 b6 05 00 00 	je	1462 <runtime.newstack+0x73c>
  435e36:	48 8b 91 d0 00 00 00 	movq	208(%rcx), %rdx
  435e3d:	48 85 d2 	testq	%rdx, %rdx
  435e40:	75 0e 	jne	14 <runtime.newstack+0x1a0>
  435e42:	8b 89 00 01 00 00 	movl	256(%rcx), %ecx
  435e48:	85 c9 	testl	%ecx, %ecx
  435e4a:	0f 84 81 05 00 00 	je	1409 <runtime.newstack+0x721>
  435e50:	48 89 04 24 	movq	%rax, (%rsp)
  435e54:	48 b9 02 00 00 00 04 00 00 00 	movabsq	$17179869186, %rcx
  435e5e:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  435e63:	e8 18 ec fe ff 	callq	-70632 <runtime.casgstatus>
  435e68:	48 8b 84 24 d0 00 00 00 	movq	208(%rsp), %rax
  435e70:	0f b6 88 c2 00 00 00 	movzbl	194(%rax), %ecx
  435e77:	84 c9 	testb	%cl, %cl
  435e79:	75 0d 	jne	13 <runtime.newstack+0x1d8>
  435e7b:	e9 a9 00 00 00 	jmp	169 <runtime.newstack+0x279>
  435e80:	48 8b 84 24 d0 00 00 00 	movq	208(%rsp), %rax
  435e88:	48 89 04 24 	movq	%rax, (%rsp)
  435e8c:	48 b9 04 00 00 00 04 10 00 00 	movabsq	$17609365913604, %rcx
  435e96:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  435e9b:	e8 00 eb fe ff 	callq	-70912 <runtime.castogscanstatus>
  435ea0:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  435ea5:	84 c0 	testb	%al, %al
  435ea7:	74 d7 	je	-41 <runtime.newstack+0x1d0>
  435ea9:	48 8b 84 24 d0 00 00 00 	movq	208(%rsp), %rax
  435eb1:	0f b6 88 c3 00 00 00 	movzbl	195(%rax), %ecx
  435eb8:	84 c9 	testb	%cl, %cl
  435eba:	0f 84 44 01 00 00 	je	324 <runtime.newstack+0x354>
  435ec0:	c6 80 c2 00 00 00 00 	movb	$0, 194(%rax)
  435ec7:	c6 80 c0 00 00 00 00 	movb	$0, 192(%rax)
  435ece:	48 89 04 24 	movq	%rax, (%rsp)
  435ed2:	48 b9 04 10 00 00 04 00 00 00 	movabsq	$17179873284, %rcx
  435edc:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  435ee1:	e8 6a e6 fe ff 	callq	-72086 <runtime.casfrom_Gscanstatus>
  435ee6:	48 8b 84 24 d0 00 00 00 	movq	208(%rsp), %rax
  435eee:	48 89 04 24 	movq	%rax, (%rsp)
  435ef2:	48 b9 04 00 00 00 02 00 00 00 	movabsq	$8589934596, %rcx
  435efc:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  435f01:	e8 7a eb fe ff 	callq	-70790 <runtime.casgstatus>
  435f06:	48 8b 84 24 d0 00 00 00 	movq	208(%rsp), %rax
  435f0e:	48 8b 08 	movq	(%rax), %rcx
  435f11:	48 81 c1 70 03 00 00 	addq	$880, %rcx
  435f18:	48 89 48 10 	movq	%rcx, 16(%rax)
  435f1c:	48 8d 48 38 	leaq	56(%rax), %rcx
  435f20:	48 89 0c 24 	movq	%rcx, (%rsp)
  435f24:	e8 17 e4 00 00 	callq	58391 <runtime.gogo>
  435f29:	48 8b 84 24 d0 00 00 00 	movq	208(%rsp), %rax
  435f31:	48 89 04 24 	movq	%rax, (%rsp)
  435f35:	48 b9 04 00 00 00 02 00 00 00 	movabsq	$8589934596, %rcx
  435f3f:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  435f44:	e8 37 eb fe ff 	callq	-70857 <runtime.casgstatus>
  435f49:	48 8b 84 24 d0 00 00 00 	movq	208(%rsp), %rax
  435f51:	48 89 04 24 	movq	%rax, (%rsp)
  435f55:	e8 16 32 ff ff 	callq	-52714 <runtime.gopreempt_m>
  435f5a:	48 8b 84 24 d0 00 00 00 	movq	208(%rsp), %rax
  435f62:	48 8b 48 08 	movq	8(%rax), %rcx
  435f66:	48 2b 08 	subq	(%rax), %rcx
  435f69:	48 d1 e1 	shlq	%rcx
  435f6c:	48 8b 15 d5 f0 06 00 	movq	454869(%rip), %rdx
  435f73:	48 39 d1 	cmpq	%rdx, %rcx
  435f76:	0f 87 ee 03 00 00 	ja	1006 <runtime.newstack+0x6ba>
  435f7c:	48 89 8c 24 80 00 00 00 	movq	%rcx, 128(%rsp)
  435f84:	48 89 04 24 	movq	%rax, (%rsp)
  435f88:	48 b9 02 00 00 00 08 00 00 00 	movabsq	$34359738370, %rcx
  435f92:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  435f97:	e8 e4 ea fe ff 	callq	-70940 <runtime.casgstatus>
  435f9c:	48 8b 84 24 d0 00 00 00 	movq	208(%rsp), %rax
  435fa4:	48 89 04 24 	movq	%rax, (%rsp)
  435fa8:	48 8b 8c 24 80 00 00 00 	movq	128(%rsp), %rcx
  435fb0:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  435fb5:	c6 44 24 10 01 	movb	$1, 16(%rsp)
  435fba:	e8 81 f9 ff ff 	callq	-1663 <runtime.copystack>
  435fbf:	48 8b 84 24 d0 00 00 00 	movq	208(%rsp), %rax
  435fc7:	48 89 04 24 	movq	%rax, (%rsp)
  435fcb:	48 b9 08 00 00 00 02 00 00 00 	movabsq	$8589934600, %rcx
  435fd5:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  435fda:	e8 a1 ea fe ff 	callq	-71007 <runtime.casgstatus>
  435fdf:	48 8b 84 24 d0 00 00 00 	movq	208(%rsp), %rax
  435fe7:	48 83 c0 38 	addq	$56, %rax
  435feb:	48 89 04 24 	movq	%rax, (%rsp)
  435fef:	e8 4c e3 00 00 	callq	58188 <runtime.gogo>
  435ff4:	48 8b ac 24 80 01 00 00 	movq	384(%rsp), %rbp
  435ffc:	48 81 c4 88 01 00 00 	addq	$392, %rsp
  436003:	c3 	retq
  436004:	48 8b 48 30 	movq	48(%rax), %rcx
  436008:	48 8b 91 d0 00 00 00 	movq	208(%rcx), %rdx
  43600f:	84 02 	testb	%al, (%rdx)
  436011:	84 01 	testb	%al, (%rcx)
  436013:	48 89 04 24 	movq	%rax, (%rsp)
  436017:	48 8d 8a 70 12 00 00 	leaq	4720(%rdx), %rcx
  43601e:	48 89 8c 24 a0 00 00 00 	movq	%rcx, 160(%rsp)
  436026:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  43602b:	e8 70 f3 fd ff 	callq	-134288 <runtime.scanstack>
  436030:	0f b6 05 70 d8 08 00 	movzbl	579696(%rip), %eax
  436037:	84 c0 	testb	%al, %al
  436039:	75 14 	jne	20 <runtime.newstack+0x39f>
  43603b:	48 8b 84 24 d0 00 00 00 	movq	208(%rsp), %rax
  436043:	c6 80 c3 00 00 00 01 	movb	$1, 195(%rax)
  43604a:	e9 71 fe ff ff 	jmp	-399 <runtime.newstack+0x210>
  43604f:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  436057:	48 89 04 24 	movq	%rax, (%rsp)
  43605b:	e8 20 32 fe ff 	callq	-118240 <runtime.(*gcWork).dispose>
  436060:	eb d9 	jmp	-39 <runtime.newstack+0x38b>
  436062:	48 89 8c 24 80 00 00 00 	movq	%rcx, 128(%rsp)
  43606a:	48 89 54 24 78 	movq	%rdx, 120(%rsp)
  43606f:	48 8b 48 08 	movq	8(%rax), %rcx
  436073:	48 89 4c 24 70 	movq	%rcx, 112(%rsp)
  436078:	48 8b 94 24 e0 00 00 00 	movq	224(%rsp), %rdx
  436080:	48 89 54 24 68 	movq	%rdx, 104(%rsp)
  436085:	48 8b 9c 24 d8 00 00 00 	movq	216(%rsp), %rbx
  43608d:	48 89 5c 24 60 	movq	%rbx, 96(%rsp)
  436092:	48 8b b4 24 00 01 00 00 	movq	256(%rsp), %rsi
  43609a:	48 89 74 24 58 	movq	%rsi, 88(%rsp)
  43609f:	48 8b 78 40 	movq	64(%rax), %rdi
  4360a3:	48 89 7c 24 50 	movq	%rdi, 80(%rsp)
  4360a8:	4c 8b 40 60 	movq	96(%rax), %r8
  4360ac:	4c 89 44 24 48 	movq	%r8, 72(%rsp)
  4360b1:	4c 8b 48 50 	movq	80(%rax), %r9
  4360b5:	4c 89 8c 24 c8 00 00 00 	movq	%r9, 200(%rsp)
  4360bd:	e8 3e ba fe ff 	callq	-83394 <runtime.printlock>
  4360c2:	48 8d 05 68 52 03 00 	leaq	217704(%rip), %rax
  4360c9:	48 89 04 24 	movq	%rax, (%rsp)
  4360cd:	48 c7 44 24 08 15 00 00 00 	movq	$21, 8(%rsp)
  4360d6:	e8 65 c3 fe ff 	callq	-81051 <runtime.printstring>
  4360db:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4360e0:	48 89 04 24 	movq	%rax, (%rsp)
  4360e4:	e8 07 c2 fe ff 	callq	-81401 <runtime.printhex>
  4360e9:	48 8d 05 ef 3e 03 00 	leaq	212719(%rip), %rax
  4360f0:	48 89 04 24 	movq	%rax, (%rsp)
  4360f4:	48 c7 44 24 08 08 00 00 00 	movq	$8, 8(%rsp)
  4360fd:	e8 3e c3 fe ff 	callq	-81090 <runtime.printstring>
  436102:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  43610a:	48 89 04 24 	movq	%rax, (%rsp)
  43610e:	e8 dd c1 fe ff 	callq	-81443 <runtime.printhex>
  436113:	48 8d 05 52 3b 03 00 	leaq	211794(%rip), %rax
  43611a:	48 89 04 24 	movq	%rax, (%rsp)
  43611e:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  436127:	e8 14 c3 fe ff 	callq	-81132 <runtime.printstring>
  43612c:	48 8b 44 24 70 	movq	112(%rsp), %rax
  436131:	48 89 04 24 	movq	%rax, (%rsp)
  436135:	e8 b6 c1 fe ff 	callq	-81482 <runtime.printhex>
  43613a:	48 8d 05 fd 47 03 00 	leaq	215037(%rip), %rax
  436141:	48 89 04 24 	movq	%rax, (%rsp)
  436145:	48 c7 44 24 08 0f 00 00 00 	movq	$15, 8(%rsp)
  43614e:	e8 ed c2 fe ff 	callq	-81171 <runtime.printstring>
  436153:	48 8b 44 24 68 	movq	104(%rsp), %rax
  436158:	48 89 04 24 	movq	%rax, (%rsp)
  43615c:	e8 8f c1 fe ff 	callq	-81521 <runtime.printhex>
  436161:	48 8d 05 6e 3b 03 00 	leaq	211822(%rip), %rax
  436168:	48 89 04 24 	movq	%rax, (%rsp)
  43616c:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  436175:	e8 c6 c2 fe ff 	callq	-81210 <runtime.printstring>
  43617a:	48 8b 44 24 60 	movq	96(%rsp), %rax
  43617f:	48 89 04 24 	movq	%rax, (%rsp)
  436183:	e8 68 c1 fe ff 	callq	-81560 <runtime.printhex>
  436188:	48 8d 05 3b 3b 03 00 	leaq	211771(%rip), %rax
  43618f:	48 89 04 24 	movq	%rax, (%rsp)
  436193:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  43619c:	e8 9f c2 fe ff 	callq	-81249 <runtime.printstring>
  4361a1:	48 8b 44 24 58 	movq	88(%rsp), %rax
  4361a6:	48 89 04 24 	movq	%rax, (%rsp)
  4361aa:	e8 41 c1 fe ff 	callq	-81599 <runtime.printhex>
  4361af:	48 8d 05 0d 46 03 00 	leaq	214541(%rip), %rax
  4361b6:	48 89 04 24 	movq	%rax, (%rsp)
  4361ba:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  4361c3:	e8 78 c2 fe ff 	callq	-81288 <runtime.printstring>
  4361c8:	48 8b 44 24 50 	movq	80(%rsp), %rax
  4361cd:	48 89 04 24 	movq	%rax, (%rsp)
  4361d1:	e8 1a c1 fe ff 	callq	-81638 <runtime.printhex>
  4361d6:	48 8d 05 f9 3a 03 00 	leaq	211705(%rip), %rax
  4361dd:	48 89 04 24 	movq	%rax, (%rsp)
  4361e1:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  4361ea:	e8 51 c2 fe ff 	callq	-81327 <runtime.printstring>
  4361ef:	48 8b 44 24 78 	movq	120(%rsp), %rax
  4361f4:	48 89 04 24 	movq	%rax, (%rsp)
  4361f8:	e8 f3 c0 fe ff 	callq	-81677 <runtime.printhex>
  4361fd:	48 8d 05 c6 3a 03 00 	leaq	211654(%rip), %rax
  436204:	48 89 04 24 	movq	%rax, (%rsp)
  436208:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  436211:	e8 2a c2 fe ff 	callq	-81366 <runtime.printstring>
  436216:	48 8b 44 24 48 	movq	72(%rsp), %rax
  43621b:	48 89 04 24 	movq	%rax, (%rsp)
  43621f:	e8 cc c0 fe ff 	callq	-81716 <runtime.printhex>
  436224:	48 8d 05 ce 3b 03 00 	leaq	211918(%rip), %rax
  43622b:	48 89 04 24 	movq	%rax, (%rsp)
  43622f:	48 c7 44 24 08 06 00 00 00 	movq	$6, 8(%rsp)
  436238:	e8 03 c2 fe ff 	callq	-81405 <runtime.printstring>
  43623d:	48 8b 84 24 c8 00 00 00 	movq	200(%rsp), %rax
  436245:	48 89 04 24 	movq	%rax, (%rsp)
  436249:	e8 b2 c1 fe ff 	callq	-81486 <runtime.printpointer>
  43624e:	48 8d 05 27 3a 03 00 	leaq	211495(%rip), %rax
  436255:	48 89 04 24 	movq	%rax, (%rsp)
  436259:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  436262:	e8 d9 c1 fe ff 	callq	-81447 <runtime.printstring>
  436267:	e8 14 b9 fe ff 	callq	-83692 <runtime.printunlock>
  43626c:	48 8b 84 24 d0 00 00 00 	movq	208(%rsp), %rax
  436274:	48 8b 5c 24 28 	movq	40(%rsp), %rbx
  436279:	e9 7f fb ff ff 	jmp	-1153 <runtime.newstack+0x14d>
  43627e:	8b 9a e8 00 00 00 	movl	232(%rdx), %ebx
  436284:	85 db 	testl	%ebx, %ebx
  436286:	0f 85 2d fb ff ff 	jne	-1235 <runtime.newstack+0x109>
  43628c:	48 8b 9a f8 00 00 00 	movq	248(%rdx), %rbx
  436293:	48 85 db 	testq	%rbx, %rbx
  436296:	0f 85 1d fb ff ff 	jne	-1251 <runtime.newstack+0x109>
  43629c:	48 8b 92 d0 00 00 00 	movq	208(%rdx), %rdx
  4362a3:	8b 52 0c 	movl	12(%rdx), %edx
  4362a6:	83 fa 01 	cmpl	$1, %edx
  4362a9:	0f 85 0a fb ff ff 	jne	-1270 <runtime.newstack+0x109>
  4362af:	e9 1f fb ff ff 	jmp	-1249 <runtime.newstack+0x123>
  4362b4:	48 8b 41 08 	movq	8(%rcx), %rax
  4362b8:	48 89 84 24 10 01 00 00 	movq	%rax, 272(%rsp)
  4362c0:	48 8d 71 10 	leaq	16(%rcx), %rsi
  4362c4:	48 8d bc 24 18 01 00 00 	leaq	280(%rsp), %rdi
  4362cc:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  4362d1:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  4362d6:	e8 5b 0b 01 00 	callq	68443 <runtime.duffcopy+0x356>
  4362db:	48 8b 6d 00 	movq	(%rbp), %rbp
  4362df:	48 8b 84 24 10 01 00 00 	movq	272(%rsp), %rax
  4362e7:	49 89 40 70 	movq	%rax, 112(%r8)
  4362eb:	48 8b 84 24 18 01 00 00 	movq	280(%rsp), %rax
  4362f3:	49 89 40 78 	movq	%rax, 120(%r8)
  4362f7:	49 8b 40 40 	movq	64(%r8), %rax
  4362fb:	48 89 04 24 	movq	%rax, (%rsp)
  4362ff:	e8 cc 1e 00 00 	callq	7884 <runtime.findfunc>
  436304:	48 8b 44 24 10 	movq	16(%rsp), %rax
  436309:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  43630e:	48 85 c9 	testq	%rcx, %rcx
  436311:	75 1b 	jne	27 <runtime.newstack+0x67e>
  436313:	48 8b 94 24 d0 00 00 00 	movq	208(%rsp), %rdx
  43631b:	b8 09 00 00 00 	movl	$9, %eax
  436320:	48 8d 0d 9f 3d 03 00 	leaq	212383(%rip), %rcx
  436327:	31 db 	xorl	%ebx, %ebx
  436329:	e9 01 02 00 00 	jmp	513 <runtime.newstack+0x87f>
  43632e:	48 89 8c 24 c0 00 00 00 	movq	%rcx, 192(%rsp)
  436336:	48 89 0c 24 	movq	%rcx, (%rsp)
  43633a:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43633f:	e8 bc 25 00 00 	callq	9660 <runtime.funcname>
  436344:	48 8b 44 24 18 	movq	24(%rsp), %rax
  436349:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  43634e:	48 8b 94 24 d0 00 00 00 	movq	208(%rsp), %rdx
  436356:	48 8b 5a 40 	movq	64(%rdx), %rbx
  43635a:	48 8b b4 24 c0 00 00 00 	movq	192(%rsp), %rsi
  436362:	48 2b 1e 	subq	(%rsi), %rbx
  436365:	e9 c5 01 00 00 	jmp	453 <runtime.newstack+0x87f>
  43636a:	e8 91 b7 fe ff 	callq	-84079 <runtime.printlock>
  43636f:	48 8d 05 16 67 03 00 	leaq	222998(%rip), %rax
  436376:	48 89 04 24 	movq	%rax, (%rsp)
  43637a:	48 c7 44 24 08 21 00 00 00 	movq	$33, 8(%rsp)
  436383:	e8 b8 c0 fe ff 	callq	-81736 <runtime.printstring>
  436388:	48 8b 05 b9 ec 06 00 	movq	453817(%rip), %rax
  43638f:	48 89 04 24 	movq	%rax, (%rsp)
  436393:	e8 d8 bd fe ff 	callq	-82472 <runtime.printuint>
  436398:	48 8d 05 03 42 03 00 	leaq	213507(%rip), %rax
  43639f:	48 89 04 24 	movq	%rax, (%rsp)
  4363a3:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  4363ac:	e8 8f c0 fe ff 	callq	-81777 <runtime.printstring>
  4363b1:	e8 ca b7 fe ff 	callq	-84022 <runtime.printunlock>
  4363b6:	48 8d 05 2b 45 03 00 	leaq	214315(%rip), %rax
  4363bd:	48 89 04 24 	movq	%rax, (%rsp)
  4363c1:	48 c7 44 24 08 0e 00 00 00 	movq	$14, 8(%rsp)
  4363ca:	e8 01 ae fe ff 	callq	-86527 <runtime.throw>
  4363cf:	0f 0b 	ud2
  4363d1:	48 8d 05 66 68 03 00 	leaq	223334(%rip), %rax
  4363d8:	48 89 04 24 	movq	%rax, (%rsp)
  4363dc:	48 c7 44 24 08 22 00 00 00 	movq	$34, 8(%rsp)
  4363e5:	e8 e6 ad fe ff 	callq	-86554 <runtime.throw>
  4363ea:	0f 0b 	ud2
  4363ec:	48 8d 05 8a 4b 03 00 	leaq	215946(%rip), %rax
  4363f3:	48 89 04 24 	movq	%rax, (%rsp)
  4363f7:	48 c7 44 24 08 13 00 00 00 	movq	$19, 8(%rsp)
  436400:	e8 cb ad fe ff 	callq	-86581 <runtime.throw>
  436405:	0f 0b 	ud2
  436407:	8b 88 90 00 00 00 	movl	144(%rax), %ecx
  43640d:	89 4c 24 24 	movl	%ecx, 36(%rsp)
  436411:	e8 ea b6 fe ff 	callq	-84246 <runtime.printlock>
  436416:	48 8d 05 21 42 03 00 	leaq	213537(%rip), %rax
  43641d:	48 89 04 24 	movq	%rax, (%rsp)
  436421:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  43642a:	e8 11 c0 fe ff 	callq	-81903 <runtime.printstring>
  43642f:	48 8b 84 24 d0 00 00 00 	movq	208(%rsp), %rax
  436437:	48 89 04 24 	movq	%rax, (%rsp)
  43643b:	e8 c0 bf fe ff 	callq	-81984 <runtime.printpointer>
  436440:	48 8d 05 ac 42 03 00 	leaq	213676(%rip), %rax
  436447:	48 89 04 24 	movq	%rax, (%rsp)
  43644b:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  436454:	e8 e7 bf fe ff 	callq	-81945 <runtime.printstring>
  436459:	8b 44 24 24 	movl	36(%rsp), %eax
  43645d:	89 c0 	movl	%eax, %eax
  43645f:	48 89 04 24 	movq	%rax, (%rsp)
  436463:	e8 88 be fe ff 	callq	-82296 <runtime.printhex>
  436468:	48 8d 05 05 38 03 00 	leaq	210949(%rip), %rax
  43646f:	48 89 04 24 	movq	%rax, (%rsp)
  436473:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  43647c:	e8 bf bf fe ff 	callq	-81985 <runtime.printstring>
  436481:	e8 fa b6 fe ff 	callq	-84230 <runtime.printunlock>
  436486:	48 8b 84 24 d0 00 00 00 	movq	208(%rsp), %rax
  43648e:	48 8b 00 	movq	(%rax), %rax
  436491:	48 89 84 24 80 00 00 00 	movq	%rax, 128(%rsp)
  436499:	e8 62 b6 fe ff 	callq	-84382 <runtime.printlock>
  43649e:	48 8d 05 df 62 03 00 	leaq	221919(%rip), %rax
  4364a5:	48 89 04 24 	movq	%rax, (%rsp)
  4364a9:	48 c7 44 24 08 1f 00 00 00 	movq	$31, 8(%rsp)
  4364b2:	e8 89 bf fe ff 	callq	-82039 <runtime.printstring>
  4364b7:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4364bc:	48 89 04 24 	movq	%rax, (%rsp)
  4364c0:	e8 2b be fe ff 	callq	-82389 <runtime.printhex>
  4364c5:	48 8d 05 c1 37 03 00 	leaq	210881(%rip), %rax
  4364cc:	48 89 04 24 	movq	%rax, (%rsp)
  4364d0:	48 c7 44 24 08 03 00 00 00 	movq	$3, 8(%rsp)
  4364d9:	e8 62 bf fe ff 	callq	-82078 <runtime.printstring>
  4364de:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  4364e6:	48 89 04 24 	movq	%rax, (%rsp)
  4364ea:	e8 01 be fe ff 	callq	-82431 <runtime.printhex>
  4364ef:	e8 9c b8 fe ff 	callq	-83812 <runtime.printnl>
  4364f4:	e8 87 b6 fe ff 	callq	-84345 <runtime.printunlock>
  4364f9:	48 8d 05 28 5e 03 00 	leaq	220712(%rip), %rax
  436500:	48 89 04 24 	movq	%rax, (%rsp)
  436504:	48 c7 44 24 08 1d 00 00 00 	movq	$29, 8(%rsp)
  43650d:	e8 be ac fe ff 	callq	-86850 <runtime.throw>
  436512:	0f 0b 	ud2
  436514:	48 8d 05 2c 55 03 00 	leaq	218412(%rip), %rax
  43651b:	48 89 04 24 	movq	%rax, (%rsp)
  43651f:	48 c7 44 24 08 19 00 00 00 	movq	$25, 8(%rsp)
  436528:	e8 a3 ac fe ff 	callq	-86877 <runtime.throw>
  43652d:	0f 0b 	ud2
  43652f:	48 89 5c 24 30 	movq	%rbx, 48(%rsp)
  436534:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  436539:	48 89 8c 24 98 00 00 00 	movq	%rcx, 152(%rsp)
  436541:	48 8b 32 	movq	(%rdx), %rsi
  436544:	48 89 b4 24 80 00 00 00 	movq	%rsi, 128(%rsp)
  43654c:	48 8b 7a 08 	movq	8(%rdx), %rdi
  436550:	48 89 7c 24 78 	movq	%rdi, 120(%rsp)
  436555:	4c 8b 84 24 18 01 00 00 	movq	280(%rsp), %r8
  43655d:	4c 89 44 24 70 	movq	%r8, 112(%rsp)
  436562:	4c 8b 8c 24 10 01 00 00 	movq	272(%rsp), %r9
  43656a:	4c 89 4c 24 68 	movq	%r9, 104(%rsp)
  43656f:	4c 8b 94 24 38 01 00 00 	movq	312(%rsp), %r10
  436577:	4c 89 54 24 60 	movq	%r10, 96(%rsp)
  43657c:	4c 8b 5a 40 	movq	64(%rdx), %r11
  436580:	4c 89 5c 24 58 	movq	%r11, 88(%rsp)
  436585:	4c 8b 62 38 	movq	56(%rdx), %r12
  436589:	4c 89 64 24 50 	movq	%r12, 80(%rsp)
  43658e:	4c 8b 6a 60 	movq	96(%rdx), %r13
  436592:	4c 89 6c 24 48 	movq	%r13, 72(%rsp)
  436597:	4c 8b 72 50 	movq	80(%rdx), %r14
  43659b:	4c 89 b4 24 c8 00 00 00 	movq	%r14, 200(%rsp)
  4365a3:	e8 58 b5 fe ff 	callq	-84648 <runtime.printlock>
  4365a8:	48 8d 05 6d 4d 03 00 	leaq	216429(%rip), %rax
  4365af:	48 89 04 24 	movq	%rax, (%rsp)
  4365b3:	48 c7 44 24 08 15 00 00 00 	movq	$21, 8(%rsp)
  4365bc:	e8 7f be fe ff 	callq	-82305 <runtime.printstring>
  4365c1:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  4365c9:	48 89 04 24 	movq	%rax, (%rsp)
  4365cd:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4365d2:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4365d7:	e8 64 be fe ff 	callq	-82332 <runtime.printstring>
  4365dc:	48 8d 05 70 36 03 00 	leaq	210544(%rip), %rax
  4365e3:	48 89 04 24 	movq	%rax, (%rsp)
  4365e7:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  4365f0:	e8 4b be fe ff 	callq	-82357 <runtime.printstring>
  4365f5:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4365fa:	48 89 04 24 	movq	%rax, (%rsp)
  4365fe:	e8 ed bc fe ff 	callq	-82707 <runtime.printhex>
  436603:	48 8d 05 d0 36 03 00 	leaq	210640(%rip), %rax
  43660a:	48 89 04 24 	movq	%rax, (%rsp)
  43660e:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  436617:	e8 24 be fe ff 	callq	-82396 <runtime.printstring>
  43661c:	48 8b 44 24 50 	movq	80(%rsp), %rax
  436621:	48 89 04 24 	movq	%rax, (%rsp)
  436625:	e8 c6 bc fe ff 	callq	-82746 <runtime.printhex>
  43662a:	48 8d 05 ae 39 03 00 	leaq	211374(%rip), %rax
  436631:	48 89 04 24 	movq	%rax, (%rsp)
  436635:	48 c7 44 24 08 08 00 00 00 	movq	$8, 8(%rsp)
  43663e:	e8 fd bd fe ff 	callq	-82435 <runtime.printstring>
  436643:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  43664b:	48 89 04 24 	movq	%rax, (%rsp)
  43664f:	e8 9c bc fe ff 	callq	-82788 <runtime.printhex>
  436654:	48 8d 05 11 36 03 00 	leaq	210449(%rip), %rax
  43665b:	48 89 04 24 	movq	%rax, (%rsp)
  43665f:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  436668:	e8 d3 bd fe ff 	callq	-82477 <runtime.printstring>
  43666d:	48 8b 44 24 78 	movq	120(%rsp), %rax
  436672:	48 89 04 24 	movq	%rax, (%rsp)
  436676:	e8 75 bc fe ff 	callq	-82827 <runtime.printhex>
  43667b:	48 8d 05 bc 42 03 00 	leaq	213692(%rip), %rax
  436682:	48 89 04 24 	movq	%rax, (%rsp)
  436686:	48 c7 44 24 08 0f 00 00 00 	movq	$15, 8(%rsp)
  43668f:	e8 ac bd fe ff 	callq	-82516 <runtime.printstring>
  436694:	48 8b 44 24 70 	movq	112(%rsp), %rax
  436699:	48 89 04 24 	movq	%rax, (%rsp)
  43669d:	e8 4e bc fe ff 	callq	-82866 <runtime.printhex>
  4366a2:	48 8d 05 2d 36 03 00 	leaq	210477(%rip), %rax
  4366a9:	48 89 04 24 	movq	%rax, (%rsp)
  4366ad:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  4366b6:	e8 85 bd fe ff 	callq	-82555 <runtime.printstring>
  4366bb:	48 8b 44 24 68 	movq	104(%rsp), %rax
  4366c0:	48 89 04 24 	movq	%rax, (%rsp)
  4366c4:	e8 27 bc fe ff 	callq	-82905 <runtime.printhex>
  4366c9:	48 8d 05 fa 35 03 00 	leaq	210426(%rip), %rax
  4366d0:	48 89 04 24 	movq	%rax, (%rsp)
  4366d4:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  4366dd:	e8 5e bd fe ff 	callq	-82594 <runtime.printstring>
  4366e2:	48 8b 44 24 60 	movq	96(%rsp), %rax
  4366e7:	48 89 04 24 	movq	%rax, (%rsp)
  4366eb:	e8 00 bc fe ff 	callq	-82944 <runtime.printhex>
  4366f0:	48 8d 05 cc 40 03 00 	leaq	213196(%rip), %rax
  4366f7:	48 89 04 24 	movq	%rax, (%rsp)
  4366fb:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  436704:	e8 37 bd fe ff 	callq	-82633 <runtime.printstring>
  436709:	48 8b 44 24 58 	movq	88(%rsp), %rax
  43670e:	48 89 04 24 	movq	%rax, (%rsp)
  436712:	e8 d9 bb fe ff 	callq	-82983 <runtime.printhex>
  436717:	48 8d 05 b8 35 03 00 	leaq	210360(%rip), %rax
  43671e:	48 89 04 24 	movq	%rax, (%rsp)
  436722:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  43672b:	e8 10 bd fe ff 	callq	-82672 <runtime.printstring>
  436730:	48 8b 44 24 50 	movq	80(%rsp), %rax
  436735:	48 89 04 24 	movq	%rax, (%rsp)
  436739:	e8 b2 bb fe ff 	callq	-83022 <runtime.printhex>
  43673e:	48 8d 05 85 35 03 00 	leaq	210309(%rip), %rax
  436745:	48 89 04 24 	movq	%rax, (%rsp)
  436749:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  436752:	e8 e9 bc fe ff 	callq	-82711 <runtime.printstring>
  436757:	48 8b 44 24 48 	movq	72(%rsp), %rax
  43675c:	48 89 04 24 	movq	%rax, (%rsp)
  436760:	e8 8b bb fe ff 	callq	-83061 <runtime.printhex>
  436765:	48 8d 05 8d 36 03 00 	leaq	210573(%rip), %rax
  43676c:	48 89 04 24 	movq	%rax, (%rsp)
  436770:	48 c7 44 24 08 06 00 00 00 	movq	$6, 8(%rsp)
  436779:	e8 c2 bc fe ff 	callq	-82750 <runtime.printstring>
  43677e:	48 8b 84 24 c8 00 00 00 	movq	200(%rsp), %rax
  436786:	48 89 04 24 	movq	%rax, (%rsp)
  43678a:	e8 71 bc fe ff 	callq	-82831 <runtime.printpointer>
  43678f:	48 8d 05 e6 34 03 00 	leaq	210150(%rip), %rax
  436796:	48 89 04 24 	movq	%rax, (%rsp)
  43679a:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  4367a3:	e8 98 bc fe ff 	callq	-82792 <runtime.printstring>
  4367a8:	e8 d3 b3 fe ff 	callq	-85037 <runtime.printunlock>
  4367ad:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  4367b5:	48 8b 40 30 	movq	48(%rax), %rax
  4367b9:	c6 80 29 01 00 00 02 	movb	$2, 297(%rax)
  4367c0:	48 8b 84 24 18 01 00 00 	movq	280(%rsp), %rax
  4367c8:	48 89 04 24 	movq	%rax, (%rsp)
  4367cc:	48 8b 84 24 10 01 00 00 	movq	272(%rsp), %rax
  4367d4:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4367d9:	48 8b 84 24 38 01 00 00 	movq	312(%rsp), %rax
  4367e1:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  4367e6:	48 8b 84 24 d0 00 00 00 	movq	208(%rsp), %rax
  4367ee:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4367f3:	e8 c8 6d 00 00 	callq	28104 <runtime.traceback>
  4367f8:	48 8d 05 84 60 03 00 	leaq	221316(%rip), %rax
  4367ff:	48 89 04 24 	movq	%rax, (%rsp)
  436803:	48 c7 44 24 08 20 00 00 00 	movq	$32, 8(%rsp)
  43680c:	e8 bf a9 fe ff 	callq	-87617 <runtime.throw>
  436811:	0f 0b 	ud2
  436813:	48 89 8c 24 b8 00 00 00 	movq	%rcx, 184(%rsp)
  43681b:	48 89 5c 24 40 	movq	%rbx, 64(%rsp)
  436820:	48 8b 01 	movq	(%rcx), %rax
  436823:	48 89 84 24 b0 00 00 00 	movq	%rax, 176(%rsp)
  43682b:	48 8b 51 50 	movq	80(%rcx), %rdx
  43682f:	48 89 94 24 a8 00 00 00 	movq	%rdx, 168(%rsp)
  436837:	e8 c4 b2 fe ff 	callq	-85308 <runtime.printlock>
  43683c:	48 8d 05 20 60 03 00 	leaq	221216(%rip), %rax
  436843:	48 89 04 24 	movq	%rax, (%rsp)
  436847:	48 c7 44 24 08 20 00 00 00 	movq	$32, 8(%rsp)
  436850:	e8 eb bb fe ff 	callq	-82965 <runtime.printstring>
  436855:	48 8b 44 24 40 	movq	64(%rsp), %rax
  43685a:	48 89 04 24 	movq	%rax, (%rsp)
  43685e:	e8 8d ba fe ff 	callq	-83315 <runtime.printhex>
  436863:	48 8d 05 90 34 03 00 	leaq	210064(%rip), %rax
  43686a:	48 89 04 24 	movq	%rax, (%rsp)
  43686e:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  436877:	e8 c4 bb fe ff 	callq	-83004 <runtime.printstring>
  43687c:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  436884:	48 89 04 24 	movq	%rax, (%rsp)
  436888:	e8 73 bb fe ff 	callq	-83085 <runtime.printpointer>
  43688d:	48 8d 05 ea 37 03 00 	leaq	210922(%rip), %rax
  436894:	48 89 04 24 	movq	%rax, (%rsp)
  436898:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  4368a1:	e8 9a bb fe ff 	callq	-83046 <runtime.printstring>
  4368a6:	48 8b 84 24 d0 00 00 00 	movq	208(%rsp), %rax
  4368ae:	48 89 04 24 	movq	%rax, (%rsp)
  4368b2:	e8 49 bb fe ff 	callq	-83127 <runtime.printpointer>
  4368b7:	48 8d 05 b8 35 03 00 	leaq	210360(%rip), %rax
  4368be:	48 89 04 24 	movq	%rax, (%rsp)
  4368c2:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  4368cb:	e8 70 bb fe ff 	callq	-83088 <runtime.printstring>
  4368d0:	48 8b 84 24 b0 00 00 00 	movq	176(%rsp), %rax
  4368d8:	48 89 04 24 	movq	%rax, (%rsp)
  4368dc:	e8 1f bb fe ff 	callq	-83169 <runtime.printpointer>
  4368e1:	48 8d 05 2a 3c 03 00 	leaq	212010(%rip), %rax
  4368e8:	48 89 04 24 	movq	%rax, (%rsp)
  4368ec:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  4368f5:	e8 46 bb fe ff 	callq	-83130 <runtime.printstring>
  4368fa:	48 8b 84 24 a8 00 00 00 	movq	168(%rsp), %rax
  436902:	48 89 04 24 	movq	%rax, (%rsp)
  436906:	e8 f5 ba fe ff 	callq	-83211 <runtime.printpointer>
  43690b:	e8 80 b4 fe ff 	callq	-84864 <runtime.printnl>
  436910:	e8 6b b2 fe ff 	callq	-85397 <runtime.printunlock>
  436915:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  43691d:	48 8b 48 30 	movq	48(%rax), %rcx
  436921:	84 00 	testb	%al, (%rax)
  436923:	48 8b 41 08 	movq	8(%rcx), %rax
  436927:	48 89 84 24 48 01 00 00 	movq	%rax, 328(%rsp)
  43692f:	48 8d 71 10 	leaq	16(%rcx), %rsi
  436933:	48 8d bc 24 50 01 00 00 	leaq	336(%rsp), %rdi
  43693b:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  436940:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  436945:	e8 ec 04 01 00 	callq	66796 <runtime.duffcopy+0x356>
  43694a:	48 8b 6d 00 	movq	(%rbp), %rbp
  43694e:	48 8b 84 24 50 01 00 00 	movq	336(%rsp), %rax
  436956:	48 8b 8c 24 58 01 00 00 	movq	344(%rsp), %rcx
  43695e:	48 89 04 24 	movq	%rax, (%rsp)
  436962:	48 8b 84 24 48 01 00 00 	movq	328(%rsp), %rax
  43696a:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43696f:	48 8b 84 24 70 01 00 00 	movq	368(%rsp), %rax
  436977:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43697c:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  436981:	e8 3a 6c 00 00 	callq	27706 <runtime.traceback>
  436986:	48 8d 05 4d 65 03 00 	leaq	222541(%rip), %rax
  43698d:	48 89 04 24 	movq	%rax, (%rsp)
  436991:	48 c7 44 24 08 24 00 00 00 	movq	$36, 8(%rsp)
  43699a:	e8 31 a8 fe ff 	callq	-88015 <runtime.throw>
  43699f:	0f 0b 	ud2
  4369a1:	48 8d 05 42 4e 03 00 	leaq	216642(%rip), %rax
  4369a8:	48 89 04 24 	movq	%rax, (%rsp)
  4369ac:	48 c7 44 24 08 17 00 00 00 	movq	$23, 8(%rsp)
  4369b5:	e8 16 a8 fe ff 	callq	-88042 <runtime.throw>
  4369ba:	0f 0b 	ud2
  4369bc:	e8 af db 00 00 	callq	56239 <runtime.morestack_noctxt>
  4369c1:	e9 ea f2 ff ff 	jmp	-3350 <runtime.newstack>
  4369c6:	cc 	int3
  4369c7:	cc 	int3
  4369c8:	cc 	int3
  4369c9:	cc 	int3
  4369ca:	cc 	int3
  4369cb:	cc 	int3
  4369cc:	cc 	int3
  4369cd:	cc 	int3
  4369ce:	cc 	int3
  4369cf:	cc 	int3

runtime.shrinkstack:
  4369d0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4369d9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4369dd:	0f 86 63 01 00 00 	jbe	355 <runtime.shrinkstack+0x176>
  4369e3:	48 83 ec 20 	subq	$32, %rsp
  4369e7:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  4369ec:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  4369f1:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4369f6:	8b 88 90 00 00 00 	movl	144(%rax), %ecx
  4369fc:	89 ca 	movl	%ecx, %edx
  4369fe:	81 e1 ff ef ff ff 	andl	$4294963199, %ecx
  436a04:	83 f9 06 	cmpl	$6, %ecx
  436a07:	75 31 	jne	49 <runtime.shrinkstack+0x6a>
  436a09:	48 8b 08 	movq	(%rax), %rcx
  436a0c:	48 85 c9 	testq	%rcx, %rcx
  436a0f:	75 0a 	jne	10 <runtime.shrinkstack+0x4b>
  436a11:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  436a16:	48 83 c4 20 	addq	$32, %rsp
  436a1a:	c3 	retq
  436a1b:	48 8b 50 08 	movq	8(%rax), %rdx
  436a1f:	48 89 0c 24 	movq	%rcx, (%rsp)
  436a23:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  436a28:	e8 03 de ff ff 	callq	-8701 <runtime.stackfree>
  436a2d:	0f 57 c0 	xorps	%xmm0, %xmm0
  436a30:	48 8b 44 24 28 	movq	40(%rsp), %rax
  436a35:	0f 11 00 	movups	%xmm0, (%rax)
  436a38:	eb d7 	jmp	-41 <runtime.shrinkstack+0x41>
  436a3a:	48 8b 08 	movq	(%rax), %rcx
  436a3d:	48 85 c9 	testq	%rcx, %rcx
  436a40:	0f 84 e5 00 00 00 	je	229 <runtime.shrinkstack+0x15b>
  436a46:	0f ba e2 0c 	btl	$12, %edx
  436a4a:	0f 83 c0 00 00 00 	jae	192 <runtime.shrinkstack+0x140>
  436a50:	8b 0d 7e d0 08 00 	movl	577662(%rip), %ecx
  436a56:	85 c9 	testl	%ecx, %ecx
  436a58:	0f 8f a8 00 00 00 	jg	168 <runtime.shrinkstack+0x136>
  436a5e:	48 8b 88 28 01 00 00 	movq	296(%rax), %rcx
  436a65:	48 89 0c 24 	movq	%rcx, (%rsp)
  436a69:	e8 62 17 00 00 	callq	5986 <runtime.findfunc>
  436a6e:	48 8b 44 24 08 	movq	8(%rsp), %rax
  436a73:	48 85 c0 	testq	%rax, %rax
  436a76:	74 08 	je	8 <runtime.shrinkstack+0xb0>
  436a78:	8b 40 10 	movl	16(%rax), %eax
  436a7b:	83 f8 0d 	cmpl	$13, %eax
  436a7e:	74 7c 	je	124 <runtime.shrinkstack+0x12c>
  436a80:	48 8b 44 24 28 	movq	40(%rsp), %rax
  436a85:	48 8b 48 08 	movq	8(%rax), %rcx
  436a89:	48 8b 10 	movq	(%rax), %rdx
  436a8c:	48 89 cb 	movq	%rcx, %rbx
  436a8f:	48 29 d1 	subq	%rdx, %rcx
  436a92:	48 89 ca 	movq	%rcx, %rdx
  436a95:	48 d1 e9 	shrq	%rcx
  436a98:	48 81 f9 00 08 00 00 	cmpq	$2048, %rcx
  436a9f:	72 51 	jb	81 <runtime.shrinkstack+0x122>
  436aa1:	48 8b 70 38 	movq	56(%rax), %rsi
  436aa5:	48 29 f3 	subq	%rsi, %rbx
  436aa8:	48 81 c3 f0 02 00 00 	addq	$752, %rbx
  436aaf:	48 c1 ea 02 	shrq	$2, %rdx
  436ab3:	48 39 d3 	cmpq	%rdx, %rbx
  436ab6:	73 30 	jae	48 <runtime.shrinkstack+0x118>
  436ab8:	48 8b 50 70 	movq	112(%rax), %rdx
  436abc:	48 85 d2 	testq	%rdx, %rdx
  436abf:	74 0a 	je	10 <runtime.shrinkstack+0xfb>
  436ac1:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  436ac6:	48 83 c4 20 	addq	$32, %rsp
  436aca:	c3 	retq
  436acb:	48 89 04 24 	movq	%rax, (%rsp)
  436acf:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  436ad4:	c6 44 24 10 00 	movb	$0, 16(%rsp)
  436ad9:	e8 62 ee ff ff 	callq	-4510 <runtime.copystack>
  436ade:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  436ae3:	48 83 c4 20 	addq	$32, %rsp
  436ae7:	c3 	retq
  436ae8:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  436aed:	48 83 c4 20 	addq	$32, %rsp
  436af1:	c3 	retq
  436af2:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  436af7:	48 83 c4 20 	addq	$32, %rsp
  436afb:	c3 	retq
  436afc:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  436b01:	48 83 c4 20 	addq	$32, %rsp
  436b05:	c3 	retq
  436b06:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  436b0b:	48 83 c4 20 	addq	$32, %rsp
  436b0f:	c3 	retq
  436b10:	48 8d 05 b3 4e 03 00 	leaq	216755(%rip), %rax
  436b17:	48 89 04 24 	movq	%rax, (%rsp)
  436b1b:	48 c7 44 24 08 19 00 00 00 	movq	$25, 8(%rsp)
  436b24:	e8 a7 a6 fe ff 	callq	-88409 <runtime.throw>
  436b29:	0f 0b 	ud2
  436b2b:	48 8d 05 10 56 03 00 	leaq	218640(%rip), %rax
  436b32:	48 89 04 24 	movq	%rax, (%rsp)
  436b36:	48 c7 44 24 08 1c 00 00 00 	movq	$28, 8(%rsp)
  436b3f:	e8 8c a6 fe ff 	callq	-88436 <runtime.throw>
  436b44:	0f 0b 	ud2
  436b46:	e8 25 da 00 00 	callq	55845 <runtime.morestack_noctxt>
  436b4b:	e9 80 fe ff ff 	jmp	-384 <runtime.shrinkstack>

runtime.freeStackSpans:
  436b50:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  436b59:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  436b5d:	0f 86 8b 01 00 00 	jbe	395 <runtime.freeStackSpans+0x19e>
  436b63:	48 83 ec 60 	subq	$96, %rsp
  436b67:	48 89 6c 24 58 	movq	%rbp, 88(%rsp)
  436b6c:	48 8d 6c 24 58 	leaq	88(%rsp), %rbp
  436b71:	48 8d 05 58 ce 08 00 	leaq	577112(%rip), %rax
  436b78:	48 89 04 24 	movq	%rax, (%rsp)
  436b7c:	e8 9f 29 fd ff 	callq	-185953 <runtime.lock>
  436b81:	31 c0 	xorl	%eax, %eax
  436b83:	eb 76 	jmp	118 <runtime.freeStackSpans+0xab>
  436b85:	48 89 f0 	movq	%rsi, %rax
  436b88:	48 85 c0 	testq	%rax, %rax
  436b8b:	74 6a 	je	106 <runtime.freeStackSpans+0xa7>
  436b8d:	48 8b 30 	movq	(%rax), %rsi
  436b90:	0f b7 78 60 	movzwl	96(%rax), %edi
  436b94:	66 85 ff 	testw	%di, %di
  436b97:	75 ec 	jne	-20 <runtime.freeStackSpans+0x35>
  436b99:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  436b9e:	48 89 74 24 38 	movq	%rsi, 56(%rsp)
  436ba3:	48 89 1c 24 	movq	%rbx, (%rsp)
  436ba7:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  436bac:	e8 ff 54 fe ff 	callq	-109313 <runtime.(*mSpanList).remove>
  436bb1:	48 8b 44 24 30 	movq	48(%rsp), %rax
  436bb6:	48 c7 40 28 00 00 00 00 	movq	$0, 40(%rax)
  436bbe:	48 8d 0d db 56 07 00 	leaq	480987(%rip), %rcx
  436bc5:	48 89 0c 24 	movq	%rcx, (%rsp)
  436bc9:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  436bce:	48 8d 05 8b db 08 00 	leaq	580491(%rip), %rax
  436bd5:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  436bda:	e8 21 49 fe ff 	callq	-112351 <runtime.(*mheap).freeManual>
  436bdf:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  436be4:	48 8d 15 55 0c 07 00 	leaq	461909(%rip), %rdx
  436beb:	48 8b 5c 24 48 	movq	72(%rsp), %rbx
  436bf0:	48 8b 74 24 38 	movq	56(%rsp), %rsi
  436bf5:	eb 8e 	jmp	-114 <runtime.freeStackSpans+0x35>
  436bf7:	48 8d 41 01 	leaq	1(%rcx), %rax
  436bfb:	48 83 f8 04 	cmpq	$4, %rax
  436bff:	7d 25 	jge	37 <runtime.freeStackSpans+0xd6>
  436c01:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  436c06:	48 89 c1 	movq	%rax, %rcx
  436c09:	48 c1 e0 04 	shlq	$4, %rax
  436c0d:	48 8d 15 2c 0c 07 00 	leaq	461868(%rip), %rdx
  436c14:	48 8d 1c 02 	leaq	(%rdx,%rax), %rbx
  436c18:	48 89 5c 24 48 	movq	%rbx, 72(%rsp)
  436c1d:	48 8b 04 02 	movq	(%rdx,%rax), %rax
  436c21:	e9 62 ff ff ff 	jmp	-158 <runtime.freeStackSpans+0x38>
  436c26:	48 8d 05 a3 cd 08 00 	leaq	576931(%rip), %rax
  436c2d:	48 89 04 24 	movq	%rax, (%rsp)
  436c31:	e8 8a 2a fd ff 	callq	-185718 <runtime.unlock>
  436c36:	48 8d 05 a3 0f 07 00 	leaq	462755(%rip), %rax
  436c3d:	48 89 04 24 	movq	%rax, (%rsp)
  436c41:	e8 da 28 fd ff 	callq	-186150 <runtime.lock>
  436c46:	31 c0 	xorl	%eax, %eax
  436c48:	eb 60 	jmp	96 <runtime.freeStackSpans+0x15a>
  436c4a:	48 89 5c 24 28 	movq	%rbx, 40(%rsp)
  436c4f:	48 8b 0b 	movq	(%rbx), %rcx
  436c52:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  436c57:	48 89 04 24 	movq	%rax, (%rsp)
  436c5b:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  436c60:	e8 4b 54 fe ff 	callq	-109493 <runtime.(*mSpanList).remove>
  436c65:	48 8d 05 34 56 07 00 	leaq	480820(%rip), %rax
  436c6c:	48 89 04 24 	movq	%rax, (%rsp)
  436c70:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  436c75:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  436c7a:	48 8d 0d df da 08 00 	leaq	580319(%rip), %rcx
  436c81:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  436c86:	e8 75 48 fe ff 	callq	-112523 <runtime.(*mheap).freeManual>
  436c8b:	48 8b 44 24 50 	movq	80(%rsp), %rax
  436c90:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  436c95:	48 8d 15 44 0f 07 00 	leaq	462660(%rip), %rdx
  436c9c:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  436ca1:	48 85 db 	testq	%rbx, %rbx
  436ca4:	75 a4 	jne	-92 <runtime.freeStackSpans+0xfa>
  436ca6:	48 8d 41 01 	leaq	1(%rcx), %rax
  436caa:	48 83 f8 1a 	cmpq	$26, %rax
  436cae:	7d 24 	jge	36 <runtime.freeStackSpans+0x184>
  436cb0:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  436cb5:	48 89 c1 	movq	%rax, %rcx
  436cb8:	48 c1 e0 04 	shlq	$4, %rax
  436cbc:	48 8d 15 1d 0f 07 00 	leaq	462621(%rip), %rdx
  436cc3:	48 8b 5c 02 08 	movq	8(%rdx,%rax), %rbx
  436cc8:	48 8d 44 02 08 	leaq	8(%rdx,%rax), %rax
  436ccd:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  436cd2:	eb cd 	jmp	-51 <runtime.freeStackSpans+0x151>
  436cd4:	48 8d 05 05 0f 07 00 	leaq	462597(%rip), %rax
  436cdb:	48 89 04 24 	movq	%rax, (%rsp)
  436cdf:	e8 dc 29 fd ff 	callq	-185892 <runtime.unlock>
  436ce4:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  436ce9:	48 83 c4 60 	addq	$96, %rsp
  436ced:	c3 	retq
  436cee:	e8 7d d8 00 00 	callq	55421 <runtime.morestack_noctxt>
  436cf3:	e9 58 fe ff ff 	jmp	-424 <runtime.freeStackSpans>
  436cf8:	cc 	int3
  436cf9:	cc 	int3
  436cfa:	cc 	int3
  436cfb:	cc 	int3
  436cfc:	cc 	int3
  436cfd:	cc 	int3
  436cfe:	cc 	int3
  436cff:	cc 	int3

runtime.morestackc:
  436d00:	48 83 ec 10 	subq	$16, %rsp
  436d04:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  436d09:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  436d0e:	48 8d 05 53 74 03 00 	leaq	226387(%rip), %rax
  436d15:	48 89 04 24 	movq	%rax, (%rsp)
  436d19:	e8 02 d7 00 00 	callq	55042 <runtime.systemstack>
  436d1e:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  436d23:	48 83 c4 10 	addq	$16, %rsp
  436d27:	c3 	retq
  436d28:	cc 	int3
  436d29:	cc 	int3
  436d2a:	cc 	int3
  436d2b:	cc 	int3
  436d2c:	cc 	int3
  436d2d:	cc 	int3
  436d2e:	cc 	int3
  436d2f:	cc 	int3

runtime.concatstrings:
  436d30:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  436d39:	48 8d 44 24 f0 	leaq	-16(%rsp), %rax
  436d3e:	48 3b 41 10 	cmpq	16(%rcx), %rax
  436d42:	0f 86 81 02 00 00 	jbe	641 <runtime.concatstrings+0x299>
  436d48:	48 81 ec 90 00 00 00 	subq	$144, %rsp
  436d4f:	48 89 ac 24 88 00 00 00 	movq	%rbp, 136(%rsp)
  436d57:	48 8d ac 24 88 00 00 00 	leaq	136(%rsp), %rbp
  436d5f:	0f 57 c0 	xorps	%xmm0, %xmm0
  436d62:	0f 11 44 24 78 	movups	%xmm0, 120(%rsp)
  436d67:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  436d6f:	48 8b 8c 24 a8 00 00 00 	movq	168(%rsp), %rcx
  436d77:	48 89 c2 	movq	%rax, %rdx
  436d7a:	31 db 	xorl	%ebx, %ebx
  436d7c:	48 89 de 	movq	%rbx, %rsi
  436d7f:	48 89 f7 	movq	%rsi, %rdi
  436d82:	49 89 f8 	movq	%rdi, %r8
  436d85:	eb 07 	jmp	7 <runtime.concatstrings+0x5e>
  436d87:	48 83 c0 10 	addq	$16, %rax
  436d8b:	48 ff c3 	incq	%rbx
  436d8e:	48 39 cb 	cmpq	%rcx, %rbx
  436d91:	7d 21 	jge	33 <runtime.concatstrings+0x84>
  436d93:	4c 8b 48 08 	movq	8(%rax), %r9
  436d97:	4d 85 c9 	testq	%r9, %r9
  436d9a:	74 eb 	je	-21 <runtime.concatstrings+0x57>
  436d9c:	4b 8d 3c 08 	leaq	(%r8,%r9), %rdi
  436da0:	4c 39 c7 	cmpq	%r8, %rdi
  436da3:	0f 8c 05 02 00 00 	jl	517 <runtime.concatstrings+0x27e>
  436da9:	48 ff c6 	incq	%rsi
  436dac:	49 89 f8 	movq	%rdi, %r8
  436daf:	48 89 df 	movq	%rbx, %rdi
  436db2:	eb d3 	jmp	-45 <runtime.concatstrings+0x57>
  436db4:	48 85 f6 	testq	%rsi, %rsi
  436db7:	0f 84 c1 01 00 00 	je	449 <runtime.concatstrings+0x24e>
  436dbd:	48 83 fe 01 	cmpq	$1, %rsi
  436dc1:	0f 85 aa 01 00 00 	jne	426 <runtime.concatstrings+0x241>
  436dc7:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  436dcf:	48 85 c0 	testq	%rax, %rax
  436dd2:	0f 85 94 01 00 00 	jne	404 <runtime.concatstrings+0x23c>
  436dd8:	48 39 cf 	cmpq	%rcx, %rdi
  436ddb:	0f 83 c6 01 00 00 	jae	454 <runtime.concatstrings+0x277>
  436de1:	48 89 fb 	movq	%rdi, %rbx
  436de4:	48 c1 e7 04 	shlq	$4, %rdi
  436de8:	48 8b 74 3a 08 	movq	8(%rdx,%rdi), %rsi
  436ded:	48 8b 3c 3a 	movq	(%rdx,%rdi), %rdi
  436df1:	48 89 7c 24 78 	movq	%rdi, 120(%rsp)
  436df6:	48 89 b4 24 80 00 00 00 	movq	%rsi, 128(%rsp)
  436dfe:	48 8b 74 24 78 	movq	120(%rsp), %rsi
  436e03:	64 48 8b 3c 25 f8 ff ff ff 	movq	%fs:-8, %rdi
  436e0c:	4c 8b 4f 08 	movq	8(%rdi), %r9
  436e10:	48 8b 3f 	movq	(%rdi), %rdi
  436e13:	48 39 f7 	cmpq	%rsi, %rdi
  436e16:	0f 87 49 01 00 00 	ja	329 <runtime.concatstrings+0x235>
  436e1c:	4c 39 ce 	cmpq	%r9, %rsi
  436e1f:	40 0f 92 c6 	setb	%sil
  436e23:	40 84 f6 	testb	%sil, %sil
  436e26:	0f 84 07 01 00 00 	je	263 <runtime.concatstrings+0x203>
  436e2c:	48 89 04 24 	movq	%rax, (%rsp)
  436e30:	4c 89 44 24 08 	movq	%r8, 8(%rsp)
  436e35:	e8 46 03 00 00 	callq	838 <runtime.rawstringtmp>
  436e3a:	48 8b 44 24 28 	movq	40(%rsp), %rax
  436e3f:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  436e44:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  436e49:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  436e4e:	48 8b 5c 24 20 	movq	32(%rsp), %rbx
  436e53:	48 8b 74 24 10 	movq	16(%rsp), %rsi
  436e58:	48 89 74 24 60 	movq	%rsi, 96(%rsp)
  436e5d:	31 ff 	xorl	%edi, %edi
  436e5f:	4c 8b 84 24 a0 00 00 00 	movq	160(%rsp), %r8
  436e67:	eb 43 	jmp	67 <runtime.concatstrings+0x17c>
  436e69:	4c 8b 4c 24 70 	movq	112(%rsp), %r9
  436e6e:	4d 8d 41 10 	leaq	16(%r9), %r8
  436e72:	4c 8b 4c 24 58 	movq	88(%rsp), %r9
  436e77:	49 8d 79 01 	leaq	1(%r9), %rdi
  436e7b:	48 29 c1 	subq	%rax, %rcx
  436e7e:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  436e83:	48 29 c2 	subq	%rax, %rdx
  436e86:	49 89 d1 	movq	%rdx, %r9
  436e89:	48 f7 da 	negq	%rdx
  436e8c:	48 c1 fa 3f 	sarq	$63, %rdx
  436e90:	48 21 d0 	andq	%rdx, %rax
  436e93:	4c 8b 54 24 68 	movq	104(%rsp), %r10
  436e98:	49 8d 1c 02 	leaq	(%r10,%rax), %rbx
  436e9c:	48 8b 74 24 60 	movq	96(%rsp), %rsi
  436ea1:	48 89 c8 	movq	%rcx, %rax
  436ea4:	4c 89 ca 	movq	%r9, %rdx
  436ea7:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  436eac:	4c 8b 8c 24 a8 00 00 00 	movq	168(%rsp), %r9
  436eb4:	4c 39 cf 	cmpq	%r9, %rdi
  436eb7:	7d 5a 	jge	90 <runtime.concatstrings+0x1e3>
  436eb9:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  436ebe:	48 89 7c 24 58 	movq	%rdi, 88(%rsp)
  436ec3:	48 89 54 24 50 	movq	%rdx, 80(%rsp)
  436ec8:	4c 89 44 24 70 	movq	%r8, 112(%rsp)
  436ecd:	4d 8b 10 	movq	(%r8), %r10
  436ed0:	4d 8b 58 08 	movq	8(%r8), %r11
  436ed4:	4c 89 5c 24 38 	movq	%r11, 56(%rsp)
  436ed9:	4c 39 d8 	cmpq	%r11, %rax
  436edc:	7e 30 	jle	48 <runtime.concatstrings+0x1de>
  436ede:	48 89 5c 24 68 	movq	%rbx, 104(%rsp)
  436ee3:	48 89 1c 24 	movq	%rbx, (%rsp)
  436ee7:	4c 89 54 24 08 	movq	%r10, 8(%rsp)
  436eec:	4c 89 5c 24 10 	movq	%r11, 16(%rsp)
  436ef1:	e8 0a 02 01 00 	callq	66058 <runtime.memmove>
  436ef6:	48 8b 44 24 38 	movq	56(%rsp), %rax
  436efb:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  436f00:	48 39 c8 	cmpq	%rcx, %rax
  436f03:	0f 86 60 ff ff ff 	jbe	-160 <runtime.concatstrings+0x139>
  436f09:	e9 8b 00 00 00 	jmp	139 <runtime.concatstrings+0x269>
  436f0e:	49 89 c3 	movq	%rax, %r11
  436f11:	eb cb 	jmp	-53 <runtime.concatstrings+0x1ae>
  436f13:	48 89 b4 24 b8 00 00 00 	movq	%rsi, 184(%rsp)
  436f1b:	48 89 8c 24 c0 00 00 00 	movq	%rcx, 192(%rsp)
  436f23:	48 8b ac 24 88 00 00 00 	movq	136(%rsp), %rbp
  436f2b:	48 81 c4 90 00 00 00 	addq	$144, %rsp
  436f32:	c3 	retq
  436f33:	48 39 cb 	cmpq	%rcx, %rbx
  436f36:	73 68 	jae	104 <runtime.concatstrings+0x270>
  436f38:	48 c1 e3 04 	shlq	$4, %rbx
  436f3c:	48 8b 44 1a 08 	movq	8(%rdx,%rbx), %rax
  436f41:	48 8b 0c 1a 	movq	(%rdx,%rbx), %rcx
  436f45:	48 89 8c 24 b8 00 00 00 	movq	%rcx, 184(%rsp)
  436f4d:	48 89 84 24 c0 00 00 00 	movq	%rax, 192(%rsp)
  436f55:	48 8b ac 24 88 00 00 00 	movq	136(%rsp), %rbp
  436f5d:	48 81 c4 90 00 00 00 	addq	$144, %rsp
  436f64:	c3 	retq
  436f65:	31 f6 	xorl	%esi, %esi
  436f67:	e9 b7 fe ff ff 	jmp	-329 <runtime.concatstrings+0xf3>
  436f6c:	48 89 fb 	movq	%rdi, %rbx
  436f6f:	eb c2 	jmp	-62 <runtime.concatstrings+0x203>
  436f71:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  436f79:	e9 ae fe ff ff 	jmp	-338 <runtime.concatstrings+0xfc>
  436f7e:	0f 57 c0 	xorps	%xmm0, %xmm0
  436f81:	0f 11 84 24 b8 00 00 00 	movups	%xmm0, 184(%rsp)
  436f89:	48 8b ac 24 88 00 00 00 	movq	136(%rsp), %rbp
  436f91:	48 81 c4 90 00 00 00 	addq	$144, %rsp
  436f98:	c3 	retq
  436f99:	e8 12 8b fe ff 	callq	-95470 <runtime.panicslice>
  436f9e:	0f 0b 	ud2
  436fa0:	e8 9b 8a fe ff 	callq	-95589 <runtime.panicindex>
  436fa5:	0f 0b 	ud2
  436fa7:	e8 94 8a fe ff 	callq	-95596 <runtime.panicindex>
  436fac:	0f 0b 	ud2
  436fae:	48 8d 05 04 54 03 00 	leaq	218116(%rip), %rax
  436fb5:	48 89 04 24 	movq	%rax, (%rsp)
  436fb9:	48 c7 44 24 08 1d 00 00 00 	movq	$29, 8(%rsp)
  436fc2:	e8 09 a2 fe ff 	callq	-89591 <runtime.throw>
  436fc7:	0f 0b 	ud2
  436fc9:	e8 a2 d5 00 00 	callq	54690 <runtime.morestack_noctxt>
  436fce:	e9 5d fd ff ff 	jmp	-675 <runtime.concatstrings>
  436fd3:	cc 	int3
  436fd4:	cc 	int3
  436fd5:	cc 	int3
  436fd6:	cc 	int3
  436fd7:	cc 	int3
  436fd8:	cc 	int3
  436fd9:	cc 	int3
  436fda:	cc 	int3
  436fdb:	cc 	int3
  436fdc:	cc 	int3
  436fdd:	cc 	int3
  436fde:	cc 	int3
  436fdf:	cc 	int3

runtime.concatstring2:
  436fe0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  436fe9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  436fed:	76 56 	jbe	86 <runtime.concatstring2+0x65>
  436fef:	48 83 ec 38 	subq	$56, %rsp
  436ff3:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  436ff8:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  436ffd:	48 8b 44 24 40 	movq	64(%rsp), %rax
  437002:	48 89 04 24 	movq	%rax, (%rsp)
  437006:	48 8d 44 24 48 	leaq	72(%rsp), %rax
  43700b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  437010:	48 c7 44 24 10 02 00 00 00 	movq	$2, 16(%rsp)
  437019:	48 c7 44 24 18 02 00 00 00 	movq	$2, 24(%rsp)
  437022:	e8 09 fd ff ff 	callq	-759 <runtime.concatstrings>
  437027:	48 8b 44 24 20 	movq	32(%rsp), %rax
  43702c:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  437031:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  437036:	48 89 4c 24 70 	movq	%rcx, 112(%rsp)
  43703b:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  437040:	48 83 c4 38 	addq	$56, %rsp
  437044:	c3 	retq
  437045:	e8 26 d5 00 00 	callq	54566 <runtime.morestack_noctxt>
  43704a:	eb 94 	jmp	-108 <runtime.concatstring2>
  43704c:	cc 	int3
  43704d:	cc 	int3
  43704e:	cc 	int3
  43704f:	cc 	int3

runtime.concatstring4:
  437050:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  437059:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43705d:	76 5c 	jbe	92 <runtime.concatstring4+0x6b>
  43705f:	48 83 ec 38 	subq	$56, %rsp
  437063:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  437068:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  43706d:	48 8b 44 24 40 	movq	64(%rsp), %rax
  437072:	48 89 04 24 	movq	%rax, (%rsp)
  437076:	48 8d 44 24 48 	leaq	72(%rsp), %rax
  43707b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  437080:	48 c7 44 24 10 04 00 00 00 	movq	$4, 16(%rsp)
  437089:	48 c7 44 24 18 04 00 00 00 	movq	$4, 24(%rsp)
  437092:	e8 99 fc ff ff 	callq	-871 <runtime.concatstrings>
  437097:	48 8b 44 24 20 	movq	32(%rsp), %rax
  43709c:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  4370a1:	48 89 84 24 88 00 00 00 	movq	%rax, 136(%rsp)
  4370a9:	48 89 8c 24 90 00 00 00 	movq	%rcx, 144(%rsp)
  4370b1:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  4370b6:	48 83 c4 38 	addq	$56, %rsp
  4370ba:	c3 	retq
  4370bb:	e8 b0 d4 00 00 	callq	54448 <runtime.morestack_noctxt>
  4370c0:	eb 8e 	jmp	-114 <runtime.concatstring4>
  4370c2:	cc 	int3
  4370c3:	cc 	int3
  4370c4:	cc 	int3
  4370c5:	cc 	int3
  4370c6:	cc 	int3
  4370c7:	cc 	int3
  4370c8:	cc 	int3
  4370c9:	cc 	int3
  4370ca:	cc 	int3
  4370cb:	cc 	int3
  4370cc:	cc 	int3
  4370cd:	cc 	int3
  4370ce:	cc 	int3
  4370cf:	cc 	int3

runtime.slicebytetostring:
  4370d0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4370d9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4370dd:	0f 86 93 00 00 00 	jbe	147 <runtime.slicebytetostring+0xa6>
  4370e3:	48 83 ec 28 	subq	$40, %rsp
  4370e7:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  4370ec:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  4370f1:	0f 57 c0 	xorps	%xmm0, %xmm0
  4370f4:	0f 11 44 24 50 	movups	%xmm0, 80(%rsp)
  4370f9:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4370fe:	48 85 c0 	testq	%rax, %rax
  437101:	74 64 	je	100 <runtime.slicebytetostring+0x97>
  437103:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  437108:	48 85 c9 	testq	%rcx, %rcx
  43710b:	74 3c 	je	60 <runtime.slicebytetostring+0x79>
  43710d:	48 83 f8 20 	cmpq	$32, %rax
  437111:	7f 36 	jg	54 <runtime.slicebytetostring+0x79>
  437113:	48 89 4c 24 50 	movq	%rcx, 80(%rsp)
  437118:	48 8b 44 24 40 	movq	64(%rsp), %rax
  43711d:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  437122:	48 8b 44 24 38 	movq	56(%rsp), %rax
  437127:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  43712c:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  437131:	48 89 0c 24 	movq	%rcx, (%rsp)
  437135:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  43713a:	e8 c1 ff 00 00 	callq	65473 <runtime.memmove>
  43713f:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  437144:	48 83 c4 28 	addq	$40, %rsp
  437148:	c3 	retq
  437149:	48 89 04 24 	movq	%rax, (%rsp)
  43714d:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  437156:	c6 44 24 10 00 	movb	$0, 16(%rsp)
  43715b:	e8 b0 34 fd ff 	callq	-183120 <runtime.mallocgc>
  437160:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  437165:	eb ac 	jmp	-84 <runtime.slicebytetostring+0x43>
  437167:	0f 11 44 24 50 	movups	%xmm0, 80(%rsp)
  43716c:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  437171:	48 83 c4 28 	addq	$40, %rsp
  437175:	c3 	retq
  437176:	e8 f5 d3 00 00 	callq	54261 <runtime.morestack_noctxt>
  43717b:	e9 50 ff ff ff 	jmp	-176 <runtime.slicebytetostring>

runtime.rawstringtmp:
  437180:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  437189:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43718d:	0f 86 85 00 00 00 	jbe	133 <runtime.rawstringtmp+0x98>
  437193:	48 83 ec 38 	subq	$56, %rsp
  437197:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  43719c:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  4371a1:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4371a6:	48 85 c0 	testq	%rax, %rax
  4371a9:	74 5f 	je	95 <runtime.rawstringtmp+0x8a>
  4371ab:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  4371b0:	48 83 f9 20 	cmpq	$32, %rcx
  4371b4:	7f 30 	jg	48 <runtime.rawstringtmp+0x66>
  4371b6:	77 59 	ja	89 <runtime.rawstringtmp+0x91>
  4371b8:	48 89 ca 	movq	%rcx, %rdx
  4371bb:	48 89 c3 	movq	%rax, %rbx
  4371be:	be 20 00 00 00 	movl	$32, %esi
  4371c3:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  4371c8:	48 89 54 24 58 	movq	%rdx, 88(%rsp)
  4371cd:	48 89 5c 24 60 	movq	%rbx, 96(%rsp)
  4371d2:	48 89 4c 24 68 	movq	%rcx, 104(%rsp)
  4371d7:	48 89 74 24 70 	movq	%rsi, 112(%rsp)
  4371dc:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  4371e1:	48 83 c4 38 	addq	$56, %rsp
  4371e5:	c3 	retq
  4371e6:	48 89 0c 24 	movq	%rcx, (%rsp)
  4371ea:	e8 41 00 00 00 	callq	65 <runtime.rawstring>
  4371ef:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4371f4:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  4371f9:	48 8b 5c 24 18 	movq	24(%rsp), %rbx
  4371fe:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  437203:	48 8b 74 24 28 	movq	40(%rsp), %rsi
  437208:	eb b9 	jmp	-71 <runtime.rawstringtmp+0x43>
  43720a:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  43720f:	eb d5 	jmp	-43 <runtime.rawstringtmp+0x66>
  437211:	e8 9a 88 fe ff 	callq	-96102 <runtime.panicslice>
  437216:	0f 0b 	ud2
  437218:	e8 53 d3 00 00 	callq	54099 <runtime.morestack_noctxt>
  43721d:	e9 5e ff ff ff 	jmp	-162 <runtime.rawstringtmp>
  437222:	cc 	int3
  437223:	cc 	int3
  437224:	cc 	int3
  437225:	cc 	int3
  437226:	cc 	int3
  437227:	cc 	int3
  437228:	cc 	int3
  437229:	cc 	int3
  43722a:	cc 	int3
  43722b:	cc 	int3
  43722c:	cc 	int3
  43722d:	cc 	int3
  43722e:	cc 	int3
  43722f:	cc 	int3

runtime.rawstring:
  437230:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  437239:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43723d:	76 6d 	jbe	109 <runtime.rawstring+0x7c>
  43723f:	48 83 ec 28 	subq	$40, %rsp
  437243:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  437248:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  43724d:	0f 57 c0 	xorps	%xmm0, %xmm0
  437250:	0f 11 44 24 38 	movups	%xmm0, 56(%rsp)
  437255:	48 c7 44 24 48 00 00 00 00 	movq	$0, 72(%rsp)
  43725e:	0f 11 44 24 50 	movups	%xmm0, 80(%rsp)
  437263:	48 8b 44 24 30 	movq	48(%rsp), %rax
  437268:	48 89 04 24 	movq	%rax, (%rsp)
  43726c:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  437275:	c6 44 24 10 00 	movb	$0, 16(%rsp)
  43727a:	e8 91 33 fd ff 	callq	-183407 <runtime.mallocgc>
  43727f:	48 8b 44 24 18 	movq	24(%rsp), %rax
  437284:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  437289:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  43728e:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  437293:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  437298:	48 89 4c 24 50 	movq	%rcx, 80(%rsp)
  43729d:	48 89 4c 24 58 	movq	%rcx, 88(%rsp)
  4372a2:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4372a7:	48 83 c4 28 	addq	$40, %rsp
  4372ab:	c3 	retq
  4372ac:	e8 bf d2 00 00 	callq	53951 <runtime.morestack_noctxt>
  4372b1:	e9 7a ff ff ff 	jmp	-134 <runtime.rawstring>
  4372b6:	cc 	int3
  4372b7:	cc 	int3
  4372b8:	cc 	int3
  4372b9:	cc 	int3
  4372ba:	cc 	int3
  4372bb:	cc 	int3
  4372bc:	cc 	int3
  4372bd:	cc 	int3
  4372be:	cc 	int3
  4372bf:	cc 	int3

runtime.gostring:
  4372c0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4372c9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4372cd:	0f 86 ab 00 00 00 	jbe	171 <runtime.gostring+0xbe>
  4372d3:	48 83 ec 50 	subq	$80, %rsp
  4372d7:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  4372dc:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  4372e1:	48 8b 44 24 58 	movq	88(%rsp), %rax
  4372e6:	48 89 04 24 	movq	%rax, (%rsp)
  4372ea:	e8 c1 03 00 00 	callq	961 <runtime.findnull>
  4372ef:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4372f4:	48 85 c0 	testq	%rax, %rax
  4372f7:	74 6c 	je	108 <runtime.gostring+0xa5>
  4372f9:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  4372fe:	48 89 04 24 	movq	%rax, (%rsp)
  437302:	e8 29 ff ff ff 	callq	-215 <runtime.rawstring>
  437307:	48 8b 44 24 10 	movq	16(%rsp), %rax
  43730c:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  437311:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  437316:	48 8b 5c 24 08 	movq	8(%rsp), %rbx
  43731b:	48 85 c9 	testq	%rcx, %rcx
  43731e:	76 57 	jbe	87 <runtime.gostring+0xb7>
  437320:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  437325:	48 89 5c 24 40 	movq	%rbx, 64(%rsp)
  43732a:	48 89 14 24 	movq	%rdx, (%rsp)
  43732e:	48 8b 44 24 58 	movq	88(%rsp), %rax
  437333:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  437338:	48 8b 44 24 38 	movq	56(%rsp), %rax
  43733d:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  437342:	e8 b9 fd 00 00 	callq	64953 <runtime.memmove>
  437347:	48 8b 44 24 40 	movq	64(%rsp), %rax
  43734c:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  437351:	48 8b 44 24 30 	movq	48(%rsp), %rax
  437356:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  43735b:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  437360:	48 83 c4 50 	addq	$80, %rsp
  437364:	c3 	retq
  437365:	0f 57 c0 	xorps	%xmm0, %xmm0
  437368:	0f 11 44 24 60 	movups	%xmm0, 96(%rsp)
  43736d:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  437372:	48 83 c4 50 	addq	$80, %rsp
  437376:	c3 	retq
  437377:	e8 c4 86 fe ff 	callq	-96572 <runtime.panicindex>
  43737c:	0f 0b 	ud2
  43737e:	e8 ed d1 00 00 	callq	53741 <runtime.morestack_noctxt>
  437383:	e9 38 ff ff ff 	jmp	-200 <runtime.gostring>
  437388:	cc 	int3
  437389:	cc 	int3
  43738a:	cc 	int3
  43738b:	cc 	int3
  43738c:	cc 	int3
  43738d:	cc 	int3
  43738e:	cc 	int3
  43738f:	cc 	int3

runtime.index:
  437390:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  437399:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43739d:	0f 86 de 00 00 00 	jbe	222 <runtime.index+0xf1>
  4373a3:	48 83 ec 30 	subq	$48, %rsp
  4373a7:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  4373ac:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  4373b1:	48 8b 44 24 50 	movq	80(%rsp), %rax
  4373b6:	48 85 c0 	testq	%rax, %rax
  4373b9:	0f 84 af 00 00 00 	je	175 <runtime.index+0xde>
  4373bf:	31 c9 	xorl	%ecx, %ecx
  4373c1:	eb 03 	jmp	3 <runtime.index+0x36>
  4373c3:	48 ff c1 	incq	%rcx
  4373c6:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  4373cb:	48 39 d1 	cmpq	%rdx, %rcx
  4373ce:	0f 8d 87 00 00 00 	jge	135 <runtime.index+0xcb>
  4373d4:	48 8b 5c 24 38 	movq	56(%rsp), %rbx
  4373d9:	0f b6 34 0b 	movzbl	(%rbx,%rcx), %esi
  4373dd:	48 8b 7c 24 48 	movq	72(%rsp), %rdi
  4373e2:	44 0f b6 07 	movzbl	(%rdi), %r8d
  4373e6:	44 38 c6 	cmpb	%r8b, %sil
  4373e9:	75 68 	jne	104 <runtime.index+0xc3>
  4373eb:	48 89 d6 	movq	%rdx, %rsi
  4373ee:	48 29 ca 	subq	%rcx, %rdx
  4373f1:	49 89 d0 	movq	%rdx, %r8
  4373f4:	48 f7 da 	negq	%rdx
  4373f7:	48 c1 fa 3f 	sarq	$63, %rdx
  4373fb:	48 21 ca 	andq	%rcx, %rdx
  4373fe:	48 01 da 	addq	%rbx, %rdx
  437401:	49 39 c0 	cmpq	%rax, %r8
  437404:	7d 15 	jge	21 <runtime.index+0x8b>
  437406:	31 d2 	xorl	%edx, %edx
  437408:	84 d2 	testb	%dl, %dl
  43740a:	74 b7 	je	-73 <runtime.index+0x33>
  43740c:	48 89 4c 24 58 	movq	%rcx, 88(%rsp)
  437411:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  437416:	48 83 c4 30 	addq	$48, %rsp
  43741a:	c3 	retq
  43741b:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  437420:	48 89 14 24 	movq	%rdx, (%rsp)
  437424:	48 89 7c 24 08 	movq	%rdi, 8(%rsp)
  437429:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43742e:	e8 0d ef 00 00 	callq	61197 <runtime.memequal>
  437433:	0f b6 54 24 18 	movzbl	24(%rsp), %edx
  437438:	48 8b 44 24 50 	movq	80(%rsp), %rax
  43743d:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  437442:	48 8b 5c 24 38 	movq	56(%rsp), %rbx
  437447:	48 8b 74 24 40 	movq	64(%rsp), %rsi
  43744c:	48 8b 7c 24 48 	movq	72(%rsp), %rdi
  437451:	eb b5 	jmp	-75 <runtime.index+0x78>
  437453:	48 89 d6 	movq	%rdx, %rsi
  437456:	e9 68 ff ff ff 	jmp	-152 <runtime.index+0x33>
  43745b:	48 c7 44 24 58 ff ff ff ff 	movq	$-1, 88(%rsp)
  437464:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  437469:	48 83 c4 30 	addq	$48, %rsp
  43746d:	c3 	retq
  43746e:	48 c7 44 24 58 00 00 00 00 	movq	$0, 88(%rsp)
  437477:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  43747c:	48 83 c4 30 	addq	$48, %rsp
  437480:	c3 	retq
  437481:	e8 ea d0 00 00 	callq	53482 <runtime.morestack_noctxt>
  437486:	e9 05 ff ff ff 	jmp	-251 <runtime.index>
  43748b:	cc 	int3
  43748c:	cc 	int3
  43748d:	cc 	int3
  43748e:	cc 	int3
  43748f:	cc 	int3

runtime.contains:
  437490:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  437499:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43749d:	76 54 	jbe	84 <runtime.contains+0x63>
  43749f:	48 83 ec 30 	subq	$48, %rsp
  4374a3:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  4374a8:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  4374ad:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4374b2:	48 89 04 24 	movq	%rax, (%rsp)
  4374b6:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4374bb:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4374c0:	48 8b 44 24 48 	movq	72(%rsp), %rax
  4374c5:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  4374ca:	48 8b 44 24 50 	movq	80(%rsp), %rax
  4374cf:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4374d4:	e8 b7 fe ff ff 	callq	-329 <runtime.index>
  4374d9:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4374de:	48 85 c0 	testq	%rax, %rax
  4374e1:	48 8d 44 24 58 	leaq	88(%rsp), %rax
  4374e6:	0f 9d 00 	setge	(%rax)
  4374e9:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  4374ee:	48 83 c4 30 	addq	$48, %rsp
  4374f2:	c3 	retq
  4374f3:	e8 78 d0 00 00 	callq	53368 <runtime.morestack_noctxt>
  4374f8:	eb 96 	jmp	-106 <runtime.contains>
  4374fa:	cc 	int3
  4374fb:	cc 	int3
  4374fc:	cc 	int3
  4374fd:	cc 	int3
  4374fe:	cc 	int3
  4374ff:	cc 	int3

runtime.atoi:
  437500:	48 8b 44 24 10 	movq	16(%rsp), %rax
  437505:	48 85 c0 	testq	%rax, %rax
  437508:	0f 84 04 01 00 00 	je	260 <runtime.atoi+0x112>
  43750e:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  437513:	0f b6 11 	movzbl	(%rcx), %edx
  437516:	80 fa 2d 	cmpb	$45, %dl
  437519:	0f 85 e4 00 00 00 	jne	228 <runtime.atoi+0x103>
  43751f:	48 ff c8 	decq	%rax
  437522:	48 89 c2 	movq	%rax, %rdx
  437525:	48 f7 d8 	negq	%rax
  437528:	48 c1 f8 3f 	sarq	$63, %rax
  43752c:	48 83 e0 01 	andq	$1, %rax
  437530:	48 01 c8 	addq	%rcx, %rax
  437533:	b9 01 00 00 00 	movl	$1, %ecx
  437538:	31 db 	xorl	%ebx, %ebx
  43753a:	31 f6 	xorl	%esi, %esi
  43753c:	eb 06 	jmp	6 <runtime.atoi+0x44>
  43753e:	48 ff c3 	incq	%rbx
  437541:	48 89 fe 	movq	%rdi, %rsi
  437544:	48 39 d3 	cmpq	%rdx, %rbx
  437547:	7d 62 	jge	98 <runtime.atoi+0xab>
  437549:	0f b6 3c 18 	movzbl	(%rax,%rbx), %edi
  43754d:	44 8d 47 d0 	leal	-48(%rdi), %r8d
  437551:	41 80 f8 09 	cmpb	$9, %r8b
  437555:	77 45 	ja	69 <runtime.atoi+0x9c>
  437557:	49 b8 99 99 99 99 99 99 99 19 	movabsq	$1844674407370955161, %r8
  437561:	4c 39 c6 	cmpq	%r8, %rsi
  437564:	77 27 	ja	39 <runtime.atoi+0x8d>
  437566:	48 8d 34 b6 	leaq	(%rsi,%rsi,4), %rsi
  43756a:	49 89 f1 	movq	%rsi, %r9
  43756d:	48 d1 e6 	shlq	%rsi
  437570:	40 0f b6 ff 	movzbl	%dil, %edi
  437574:	4a 8d 7c 4f d0 	leaq	-48(%rdi,%r9,2), %rdi
  437579:	48 39 f7 	cmpq	%rsi, %rdi
  43757c:	73 c0 	jae	-64 <runtime.atoi+0x3e>
  43757e:	48 c7 44 24 18 00 00 00 00 	movq	$0, 24(%rsp)
  437587:	c6 44 24 20 00 	movb	$0, 32(%rsp)
  43758c:	c3 	retq
  43758d:	48 c7 44 24 18 00 00 00 00 	movq	$0, 24(%rsp)
  437596:	c6 44 24 20 00 	movb	$0, 32(%rsp)
  43759b:	c3 	retq
  43759c:	48 c7 44 24 18 00 00 00 00 	movq	$0, 24(%rsp)
  4375a5:	c6 44 24 20 00 	movb	$0, 32(%rsp)
  4375aa:	c3 	retq
  4375ab:	84 c9 	testb	%cl, %cl
  4375ad:	74 32 	je	50 <runtime.atoi+0xe1>
  4375af:	74 11 	je	17 <runtime.atoi+0xc2>
  4375b1:	48 b8 00 00 00 00 00 00 00 80 	movabsq	$-9223372036854775808, %rax
  4375bb:	48 39 c6 	cmpq	%rax, %rsi
  4375be:	77 12 	ja	18 <runtime.atoi+0xd2>
  4375c0:	84 c9 	testb	%cl, %cl
  4375c2:	74 03 	je	3 <runtime.atoi+0xc7>
  4375c4:	48 f7 de 	negq	%rsi
  4375c7:	48 89 74 24 18 	movq	%rsi, 24(%rsp)
  4375cc:	c6 44 24 20 01 	movb	$1, 32(%rsp)
  4375d1:	c3 	retq
  4375d2:	48 c7 44 24 18 00 00 00 00 	movq	$0, 24(%rsp)
  4375db:	c6 44 24 20 00 	movb	$0, 32(%rsp)
  4375e0:	c3 	retq
  4375e1:	48 b8 ff ff ff ff ff ff ff 7f 	movabsq	$9223372036854775807, %rax
  4375eb:	48 39 c6 	cmpq	%rax, %rsi
  4375ee:	77 04 	ja	4 <runtime.atoi+0xf4>
  4375f0:	84 c9 	testb	%cl, %cl
  4375f2:	eb bb 	jmp	-69 <runtime.atoi+0xaf>
  4375f4:	48 c7 44 24 18 00 00 00 00 	movq	$0, 24(%rsp)
  4375fd:	c6 44 24 20 00 	movb	$0, 32(%rsp)
  437602:	c3 	retq
  437603:	48 89 c8 	movq	%rcx, %rax
  437606:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  43760b:	31 c9 	xorl	%ecx, %ecx
  43760d:	e9 26 ff ff ff 	jmp	-218 <runtime.atoi+0x38>
  437612:	48 c7 44 24 18 00 00 00 00 	movq	$0, 24(%rsp)
  43761b:	c6 44 24 20 00 	movb	$0, 32(%rsp)
  437620:	c3 	retq
  437621:	cc 	int3
  437622:	cc 	int3
  437623:	cc 	int3
  437624:	cc 	int3
  437625:	cc 	int3
  437626:	cc 	int3
  437627:	cc 	int3
  437628:	cc 	int3
  437629:	cc 	int3
  43762a:	cc 	int3
  43762b:	cc 	int3
  43762c:	cc 	int3
  43762d:	cc 	int3
  43762e:	cc 	int3
  43762f:	cc 	int3

runtime.atoi32:
  437630:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  437639:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43763d:	76 61 	jbe	97 <runtime.atoi32+0x70>
  43763f:	48 83 ec 28 	subq	$40, %rsp
  437643:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  437648:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  43764d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  437652:	48 89 04 24 	movq	%rax, (%rsp)
  437656:	48 8b 44 24 38 	movq	56(%rsp), %rax
  43765b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  437660:	e8 9b fe ff ff 	callq	-357 <runtime.atoi>
  437665:	48 8b 44 24 10 	movq	16(%rsp), %rax
  43766a:	0f b6 4c 24 18 	movzbl	24(%rsp), %ecx
  43766f:	48 63 d0 	movslq	%eax, %rdx
  437672:	48 39 d0 	cmpq	%rdx, %rax
  437675:	75 12 	jne	18 <runtime.atoi32+0x59>
  437677:	89 44 24 40 	movl	%eax, 64(%rsp)
  43767b:	88 4c 24 44 	movb	%cl, 68(%rsp)
  43767f:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  437684:	48 83 c4 28 	addq	$40, %rsp
  437688:	c3 	retq
  437689:	c7 44 24 40 00 00 00 00 	movl	$0, 64(%rsp)
  437691:	c6 44 24 44 00 	movb	$0, 68(%rsp)
  437696:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  43769b:	48 83 c4 28 	addq	$40, %rsp
  43769f:	c3 	retq
  4376a0:	e8 cb ce 00 00 	callq	52939 <runtime.morestack_noctxt>
  4376a5:	eb 89 	jmp	-119 <runtime.atoi32>
  4376a7:	cc 	int3
  4376a8:	cc 	int3
  4376a9:	cc 	int3
  4376aa:	cc 	int3
  4376ab:	cc 	int3
  4376ac:	cc 	int3
  4376ad:	cc 	int3
  4376ae:	cc 	int3
  4376af:	cc 	int3

runtime.findnull:
  4376b0:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4376b5:	48 85 c0 	testq	%rax, %rax
  4376b8:	74 24 	je	36 <runtime.findnull+0x2e>
  4376ba:	31 c9 	xorl	%ecx, %ecx
  4376bc:	eb 03 	jmp	3 <runtime.findnull+0x11>
  4376be:	48 ff c1 	incq	%rcx
  4376c1:	48 ba fe ff ff ff 3f 00 00 00 	movabsq	$274877906942, %rdx
  4376cb:	48 39 d1 	cmpq	%rdx, %rcx
  4376ce:	73 18 	jae	24 <runtime.findnull+0x38>
  4376d0:	0f b6 1c 08 	movzbl	(%rax,%rcx), %ebx
  4376d4:	84 db 	testb	%bl, %bl
  4376d6:	75 e6 	jne	-26 <runtime.findnull+0xe>
  4376d8:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  4376dd:	c3 	retq
  4376de:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  4376e7:	c3 	retq
  4376e8:	e8 53 83 fe ff 	callq	-97453 <runtime.panicindex>
  4376ed:	0f 0b 	ud2
  4376ef:	cc 	int3

runtime.gostringnocopy:
  4376f0:	48 83 ec 28 	subq	$40, %rsp
  4376f4:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  4376f9:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  4376fe:	48 8b 44 24 30 	movq	48(%rsp), %rax
  437703:	48 89 04 24 	movq	%rax, (%rsp)
  437707:	e8 a4 ff ff ff 	callq	-92 <runtime.findnull>
  43770c:	48 8b 44 24 08 	movq	8(%rsp), %rax
  437711:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  437716:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  43771b:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  437720:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  437725:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  43772a:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  43772f:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  437734:	48 83 c4 28 	addq	$40, %rsp
  437738:	c3 	retq
  437739:	cc 	int3
  43773a:	cc 	int3
  43773b:	cc 	int3
  43773c:	cc 	int3
  43773d:	cc 	int3
  43773e:	cc 	int3
  43773f:	cc 	int3

runtime.badsystemstack:
  437740:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  437749:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43774d:	76 29 	jbe	41 <runtime.badsystemstack+0x38>
  43774f:	48 83 ec 18 	subq	$24, %rsp
  437753:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  437758:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  43775d:	48 8d 05 15 5f 03 00 	leaq	220949(%rip), %rax
  437764:	48 89 04 24 	movq	%rax, (%rsp)
  437768:	48 c7 44 24 08 2c 00 00 00 	movq	$44, 8(%rsp)
  437771:	e8 5a 9a fe ff 	callq	-91558 <runtime.throw>
  437776:	0f 0b 	ud2
  437778:	e8 f3 cd 00 00 	callq	52723 <runtime.morestack_noctxt>
  43777d:	eb c1 	jmp	-63 <runtime.badsystemstack>
  43777f:	cc 	int3

runtime.fastrand:
  437780:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  437789:	48 8b 40 30 	movq	48(%rax), %rax
  43778d:	8b 88 20 01 00 00 	movl	288(%rax), %ecx
  437793:	8b 90 24 01 00 00 	movl	292(%rax), %edx
  437799:	89 90 20 01 00 00 	movl	%edx, 288(%rax)
  43779f:	89 cb 	movl	%ecx, %ebx
  4377a1:	c1 e1 11 	shll	$17, %ecx
  4377a4:	31 d9 	xorl	%ebx, %ecx
  4377a6:	89 d3 	movl	%edx, %ebx
  4377a8:	31 ca 	xorl	%ecx, %edx
  4377aa:	c1 e9 07 	shrl	$7, %ecx
  4377ad:	31 d1 	xorl	%edx, %ecx
  4377af:	89 da 	movl	%ebx, %edx
  4377b1:	c1 eb 10 	shrl	$16, %ebx
  4377b4:	31 cb 	xorl	%ecx, %ebx
  4377b6:	89 98 24 01 00 00 	movl	%ebx, 292(%rax)
  4377bc:	8d 04 1a 	leal	(%rdx,%rbx), %eax
  4377bf:	89 44 24 08 	movl	%eax, 8(%rsp)
  4377c3:	c3 	retq
  4377c4:	cc 	int3
  4377c5:	cc 	int3
  4377c6:	cc 	int3
  4377c7:	cc 	int3
  4377c8:	cc 	int3
  4377c9:	cc 	int3
  4377ca:	cc 	int3
  4377cb:	cc 	int3
  4377cc:	cc 	int3
  4377cd:	cc 	int3
  4377ce:	cc 	int3
  4377cf:	cc 	int3

runtime.modulesinit:
  4377d0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4377d9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4377dd:	0f 86 84 02 00 00 	jbe	644 <runtime.modulesinit+0x297>
  4377e3:	48 83 ec 60 	subq	$96, %rsp
  4377e7:	48 89 6c 24 58 	movq	%rbp, 88(%rsp)
  4377ec:	48 8d 6c 24 58 	leaq	88(%rsp), %rbp
  4377f1:	48 8d 05 a8 e2 01 00 	leaq	123560(%rip), %rax
  4377f8:	48 89 04 24 	movq	%rax, (%rsp)
  4377fc:	e8 1f 39 fd ff 	callq	-181985 <runtime.newobject>
  437801:	48 8b 44 24 08 	movq	8(%rsp), %rax
  437806:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  43780b:	48 8d 0d 2e e0 06 00 	leaq	450606(%rip), %rcx
  437812:	eb 07 	jmp	7 <runtime.modulesinit+0x4b>
  437814:	48 8b 89 c0 01 00 00 	movq	448(%rcx), %rcx
  43781b:	48 85 c9 	testq	%rcx, %rcx
  43781e:	0f 84 98 01 00 00 	je	408 <runtime.modulesinit+0x1ec>
  437824:	0f b6 91 b8 01 00 00 	movzbl	440(%rcx), %edx
  43782b:	84 d2 	testb	%dl, %dl
  43782d:	75 e5 	jne	-27 <runtime.modulesinit+0x44>
  43782f:	48 89 4c 24 48 	movq	%rcx, 72(%rsp)
  437834:	48 8b 50 10 	movq	16(%rax), %rdx
  437838:	48 8b 58 08 	movq	8(%rax), %rbx
  43783c:	48 8b 30 	movq	(%rax), %rsi
  43783f:	4c 8d 43 01 	leaq	1(%rbx), %r8
  437843:	49 39 d0 	cmpq	%rdx, %r8
  437846:	0f 8f 0d 01 00 00 	jg	269 <runtime.modulesinit+0x189>
  43784c:	48 8d 53 01 	leaq	1(%rbx), %rdx
  437850:	48 89 50 08 	movq	%rdx, 8(%rax)
  437854:	48 8d 3c de 	leaq	(%rsi,%rbx,8), %rdi
  437858:	8b 15 b2 c1 08 00 	movl	573874(%rip), %edx
  43785e:	85 d2 	testl	%edx, %edx
  437860:	0f 85 e0 00 00 00 	jne	224 <runtime.modulesinit+0x176>
  437866:	48 89 0c de 	movq	%rcx, (%rsi,%rbx,8)
  43786a:	8b 91 90 01 00 00 	movl	400(%rcx), %edx
  437870:	85 d2 	testl	%edx, %edx
  437872:	75 a0 	jne	-96 <runtime.modulesinit+0x44>
  437874:	48 8b 91 98 01 00 00 	movq	408(%rcx), %rdx
  43787b:	48 8d 99 98 01 00 00 	leaq	408(%rcx), %rbx
  437882:	48 85 d2 	testq	%rdx, %rdx
  437885:	75 8d 	jne	-115 <runtime.modulesinit+0x44>
  437887:	48 89 5c 24 50 	movq	%rbx, 80(%rsp)
  43788c:	48 8b 81 b8 00 00 00 	movq	184(%rcx), %rax
  437893:	48 8b 91 88 00 00 00 	movq	136(%rcx), %rdx
  43789a:	48 2b 91 80 00 00 00 	subq	128(%rcx), %rdx
  4378a1:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  4378a6:	48 89 04 24 	movq	%rax, (%rsp)
  4378aa:	e8 c1 62 fd ff 	callq	-171327 <runtime.progToPointerMask>
  4378af:	8b 44 24 10 	movl	16(%rsp), %eax
  4378b3:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  4378b8:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  4378bd:	89 82 90 01 00 00 	movl	%eax, 400(%rdx)
  4378c3:	8b 05 47 c1 08 00 	movl	573767(%rip), %eax
  4378c9:	85 c0 	testl	%eax, %eax
  4378cb:	75 6a 	jne	106 <runtime.modulesinit+0x167>
  4378cd:	48 89 8a 98 01 00 00 	movq	%rcx, 408(%rdx)
  4378d4:	48 8b 82 c0 00 00 00 	movq	192(%rdx), %rax
  4378db:	48 8b 8a 98 00 00 00 	movq	152(%rdx), %rcx
  4378e2:	48 2b 8a 90 00 00 00 	subq	144(%rdx), %rcx
  4378e9:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4378ee:	48 89 04 24 	movq	%rax, (%rsp)
  4378f2:	e8 79 62 fd ff 	callq	-171399 <runtime.progToPointerMask>
  4378f7:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4378fc:	8b 4c 24 10 	movl	16(%rsp), %ecx
  437900:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  437905:	89 8a a0 01 00 00 	movl	%ecx, 416(%rdx)
  43790b:	8b 0d ff c0 08 00 	movl	573695(%rip), %ecx
  437911:	48 8d ba a8 01 00 00 	leaq	424(%rdx), %rdi
  437918:	85 c9 	testl	%ecx, %ecx
  43791a:	75 14 	jne	20 <runtime.modulesinit+0x160>
  43791c:	48 89 82 a8 01 00 00 	movq	%rax, 424(%rdx)
  437923:	48 8b 44 24 40 	movq	64(%rsp), %rax
  437928:	48 89 d1 	movq	%rdx, %rcx
  43792b:	e9 e4 fe ff ff 	jmp	-284 <runtime.modulesinit+0x44>
  437930:	e8 6b ef 00 00 	callq	61291 <runtime.gcWriteBarrier>
  437935:	eb ec 	jmp	-20 <runtime.modulesinit+0x153>
  437937:	48 8b 7c 24 50 	movq	80(%rsp), %rdi
  43793c:	48 89 c8 	movq	%rcx, %rax
  43793f:	e8 5c ef 00 00 	callq	61276 <runtime.gcWriteBarrier>
  437944:	eb 8e 	jmp	-114 <runtime.modulesinit+0x104>
  437946:	48 89 c2 	movq	%rax, %rdx
  437949:	48 89 c8 	movq	%rcx, %rax
  43794c:	e8 4f ef 00 00 	callq	61263 <runtime.gcWriteBarrier>
  437951:	48 89 d0 	movq	%rdx, %rax
  437954:	e9 11 ff ff ff 	jmp	-239 <runtime.modulesinit+0x9a>
  437959:	48 8d 05 60 ce 01 00 	leaq	118368(%rip), %rax
  437960:	48 89 04 24 	movq	%rax, (%rsp)
  437964:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  437969:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  43796e:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  437973:	4c 89 44 24 20 	movq	%r8, 32(%rsp)
  437978:	e8 e3 be ff ff 	callq	-16669 <runtime.growslice>
  43797d:	48 8b 44 24 28 	movq	40(%rsp), %rax
  437982:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  437987:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  43798c:	48 8b 7c 24 40 	movq	64(%rsp), %rdi
  437991:	48 89 57 10 	movq	%rdx, 16(%rdi)
  437995:	8b 15 75 c0 08 00 	movl	573557(%rip), %edx
  43799b:	85 d2 	testl	%edx, %edx
  43799d:	75 16 	jne	22 <runtime.modulesinit+0x1e5>
  43799f:	48 89 07 	movq	%rax, (%rdi)
  4379a2:	48 89 cb 	movq	%rcx, %rbx
  4379a5:	48 89 c6 	movq	%rax, %rsi
  4379a8:	48 89 f8 	movq	%rdi, %rax
  4379ab:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  4379b0:	e9 97 fe ff ff 	jmp	-361 <runtime.modulesinit+0x7c>
  4379b5:	e8 e6 ee 00 00 	callq	61158 <runtime.gcWriteBarrier>
  4379ba:	eb e6 	jmp	-26 <runtime.modulesinit+0x1d2>
  4379bc:	48 8b 48 08 	movq	8(%rax), %rcx
  4379c0:	48 8b 38 	movq	(%rax), %rdi
  4379c3:	31 d2 	xorl	%edx, %edx
  4379c5:	eb 03 	jmp	3 <runtime.modulesinit+0x1fa>
  4379c7:	48 ff c2 	incq	%rdx
  4379ca:	48 39 ca 	cmpq	%rcx, %rdx
  4379cd:	7d 47 	jge	71 <runtime.modulesinit+0x246>
  4379cf:	48 8b 1c d7 	movq	(%rdi,%rdx,8), %rbx
  4379d3:	0f b6 b3 88 01 00 00 	movzbl	392(%rbx), %esi
  4379da:	40 84 f6 	testb	%sil, %sil
  4379dd:	74 e8 	je	-24 <runtime.modulesinit+0x1f7>
  4379df:	48 85 c9 	testq	%rcx, %rcx
  4379e2:	76 7c 	jbe	124 <runtime.modulesinit+0x290>
  4379e4:	8b 0d 26 c0 08 00 	movl	573478(%rip), %ecx
  4379ea:	85 c9 	testl	%ecx, %ecx
  4379ec:	75 5b 	jne	91 <runtime.modulesinit+0x279>
  4379ee:	48 89 1f 	movq	%rbx, (%rdi)
  4379f1:	48 8b 08 	movq	(%rax), %rcx
  4379f4:	48 8b 58 08 	movq	8(%rax), %rbx
  4379f8:	48 39 da 	cmpq	%rbx, %rdx
  4379fb:	73 5c 	jae	92 <runtime.modulesinit+0x289>
  4379fd:	8b 1d 0d c0 08 00 	movl	573453(%rip), %ebx
  437a03:	48 8d 3c d1 	leaq	(%rcx,%rdx,8), %rdi
  437a07:	85 db 	testl	%ebx, %ebx
  437a09:	75 2a 	jne	42 <runtime.modulesinit+0x265>
  437a0b:	48 8d 1d 2e de 06 00 	leaq	450094(%rip), %rbx
  437a12:	48 89 1c d1 	movq	%rbx, (%rcx,%rdx,8)
  437a16:	48 8d 0d 5b fc 06 00 	leaq	457819(%rip), %rcx
  437a1d:	48 89 0c 24 	movq	%rcx, (%rsp)
  437a21:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  437a26:	e8 b5 a4 fc ff 	callq	-219979 <runtime.atomicstorep>
  437a2b:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  437a30:	48 83 c4 60 	addq	$96, %rsp
  437a34:	c3 	retq
  437a35:	48 89 c1 	movq	%rax, %rcx
  437a38:	48 8d 05 01 de 06 00 	leaq	450049(%rip), %rax
  437a3f:	e8 5c ee 00 00 	callq	61020 <runtime.gcWriteBarrier>
  437a44:	48 89 c8 	movq	%rcx, %rax
  437a47:	eb cd 	jmp	-51 <runtime.modulesinit+0x246>
  437a49:	48 89 c1 	movq	%rax, %rcx
  437a4c:	48 89 d8 	movq	%rbx, %rax
  437a4f:	e8 4c ee 00 00 	callq	61004 <runtime.gcWriteBarrier>
  437a54:	48 89 c8 	movq	%rcx, %rax
  437a57:	eb 98 	jmp	-104 <runtime.modulesinit+0x221>
  437a59:	e8 e2 7f fe ff 	callq	-98334 <runtime.panicindex>
  437a5e:	0f 0b 	ud2
  437a60:	e8 db 7f fe ff 	callq	-98341 <runtime.panicindex>
  437a65:	0f 0b 	ud2
  437a67:	e8 04 cb 00 00 	callq	51972 <runtime.morestack_noctxt>
  437a6c:	e9 5f fd ff ff 	jmp	-673 <runtime.modulesinit>
  437a71:	cc 	int3
  437a72:	cc 	int3
  437a73:	cc 	int3
  437a74:	cc 	int3
  437a75:	cc 	int3
  437a76:	cc 	int3
  437a77:	cc 	int3
  437a78:	cc 	int3
  437a79:	cc 	int3
  437a7a:	cc 	int3
  437a7b:	cc 	int3
  437a7c:	cc 	int3
  437a7d:	cc 	int3
  437a7e:	cc 	int3
  437a7f:	cc 	int3

runtime.moduledataverify:
  437a80:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  437a89:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  437a8d:	76 40 	jbe	64 <runtime.moduledataverify+0x4f>
  437a8f:	48 83 ec 18 	subq	$24, %rsp
  437a93:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  437a98:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  437a9d:	48 8d 05 9c dd 06 00 	leaq	449948(%rip), %rax
  437aa4:	eb 1a 	jmp	26 <runtime.moduledataverify+0x40>
  437aa6:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  437aab:	48 89 04 24 	movq	%rax, (%rsp)
  437aaf:	e8 2c 00 00 00 	callq	44 <runtime.moduledataverify1>
  437ab4:	48 8b 44 24 08 	movq	8(%rsp), %rax
  437ab9:	48 8b 80 c0 01 00 00 	movq	448(%rax), %rax
  437ac0:	48 85 c0 	testq	%rax, %rax
  437ac3:	75 e1 	jne	-31 <runtime.moduledataverify+0x26>
  437ac5:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  437aca:	48 83 c4 18 	addq	$24, %rsp
  437ace:	c3 	retq
  437acf:	e8 9c ca 00 00 	callq	51868 <runtime.morestack_noctxt>
  437ad4:	eb aa 	jmp	-86 <runtime.moduledataverify>
  437ad6:	cc 	int3
  437ad7:	cc 	int3
  437ad8:	cc 	int3
  437ad9:	cc 	int3
  437ada:	cc 	int3
  437adb:	cc 	int3
  437adc:	cc 	int3
  437add:	cc 	int3
  437ade:	cc 	int3
  437adf:	cc 	int3

runtime.moduledataverify1:
  437ae0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  437ae9:	48 8d 44 24 80 	leaq	-128(%rsp), %rax
  437aee:	48 3b 41 10 	cmpq	16(%rcx), %rax
  437af2:	0f 86 84 06 00 00 	jbe	1668 <runtime.moduledataverify1+0x69c>
  437af8:	48 81 ec 00 01 00 00 	subq	$256, %rsp
  437aff:	48 89 ac 24 f8 00 00 00 	movq	%rbp, 248(%rsp)
  437b07:	48 8d ac 24 f8 00 00 00 	leaq	248(%rsp), %rbp
  437b0f:	48 8b 84 24 08 01 00 00 	movq	264(%rsp), %rax
  437b17:	48 8b 08 	movq	(%rax), %rcx
  437b1a:	48 8b 10 	movq	(%rax), %rdx
  437b1d:	8b 09 	movl	(%rcx), %ecx
  437b1f:	89 4c 24 24 	movl	%ecx, 36(%rsp)
  437b23:	83 f9 fb 	cmpl	$-5, %ecx
  437b26:	0f 85 90 05 00 00 	jne	1424 <runtime.moduledataverify1+0x5dc>
  437b2c:	0f b6 5a 04 	movzbl	4(%rdx), %ebx
  437b30:	84 db 	testb	%bl, %bl
  437b32:	0f 85 84 05 00 00 	jne	1412 <runtime.moduledataverify1+0x5dc>
  437b38:	0f b6 5a 05 	movzbl	5(%rdx), %ebx
  437b3c:	84 db 	testb	%bl, %bl
  437b3e:	0f 85 78 05 00 00 	jne	1400 <runtime.moduledataverify1+0x5dc>
  437b44:	0f b6 5a 06 	movzbl	6(%rdx), %ebx
  437b48:	80 fb 01 	cmpb	$1, %bl
  437b4b:	0f 85 6b 05 00 00 	jne	1387 <runtime.moduledataverify1+0x5dc>
  437b51:	0f b6 5a 07 	movzbl	7(%rdx), %ebx
  437b55:	80 fb 08 	cmpb	$8, %bl
  437b58:	0f 85 5e 05 00 00 	jne	1374 <runtime.moduledataverify1+0x5dc>
  437b5e:	48 8b 48 20 	movq	32(%rax), %rcx
  437b62:	48 8b 50 18 	movq	24(%rax), %rdx
  437b66:	48 8d 59 ff 	leaq	-1(%rcx), %rbx
  437b6a:	31 f6 	xorl	%esi, %esi
  437b6c:	eb 03 	jmp	3 <runtime.moduledataverify1+0x91>
  437b6e:	4c 89 de 	movq	%r11, %rsi
  437b71:	48 39 de 	cmpq	%rbx, %rsi
  437b74:	0f 8d d0 02 00 00 	jge	720 <runtime.moduledataverify1+0x36a>
  437b7a:	49 89 f0 	movq	%rsi, %r8
  437b7d:	48 c1 e6 04 	shlq	$4, %rsi
  437b81:	4c 8b 0c 16 	movq	(%rsi,%rdx), %r9
  437b85:	4d 8d 50 01 	leaq	1(%r8), %r10
  437b89:	49 39 ca 	cmpq	%rcx, %r10
  437b8c:	0f 83 23 05 00 00 	jae	1315 <runtime.moduledataverify1+0x5d5>
  437b92:	4d 89 d3 	movq	%r10, %r11
  437b95:	49 c1 e2 04 	shlq	$4, %r10
  437b99:	4e 8b 24 12 	movq	(%rdx,%r10), %r12
  437b9d:	4d 39 e1 	cmpq	%r12, %r9
  437ba0:	76 cc 	jbe	-52 <runtime.moduledataverify1+0x8e>
  437ba2:	48 8b 48 08 	movq	8(%rax), %rcx
  437ba6:	48 8b 38 	movq	(%rax), %rdi
  437ba9:	4c 8b 4c 16 08 	movq	8(%rsi,%rdx), %r9
  437bae:	49 39 c9 	cmpq	%rcx, %r9
  437bb1:	0f 83 f7 04 00 00 	jae	1271 <runtime.moduledataverify1+0x5ce>
  437bb7:	49 01 f9 	addq	%rdi, %r9
  437bba:	4a 8b 54 12 08 	movq	8(%rdx,%r10), %rdx
  437bbf:	48 39 ca 	cmpq	%rcx, %rdx
  437bc2:	0f 83 df 04 00 00 	jae	1247 <runtime.moduledataverify1+0x5c7>
  437bc8:	4c 89 54 24 78 	movq	%r10, 120(%rsp)
  437bcd:	4c 89 44 24 70 	movq	%r8, 112(%rsp)
  437bd2:	4c 89 5c 24 68 	movq	%r11, 104(%rsp)
  437bd7:	48 89 74 24 60 	movq	%rsi, 96(%rsp)
  437bdc:	48 8d 0c 3a 	leaq	(%rdx,%rdi), %rcx
  437be0:	49 39 db 	cmpq	%rbx, %r11
  437be3:	0f 8c 2c 02 00 00 	jl	556 <runtime.moduledataverify1+0x335>
  437be9:	b9 03 00 00 00 	movl	$3, %ecx
  437bee:	48 8d 15 b3 20 03 00 	leaq	204979(%rip), %rdx
  437bf5:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  437bfa:	48 89 94 24 80 00 00 00 	movq	%rdx, 128(%rsp)
  437c02:	4c 89 0c 24 	movq	%r9, (%rsp)
  437c06:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  437c0b:	e8 f0 0c 00 00 	callq	3312 <runtime.funcname>
  437c10:	48 8b 84 24 08 01 00 00 	movq	264(%rsp), %rax
  437c18:	48 8b 48 18 	movq	24(%rax), %rcx
  437c1c:	48 8b 50 20 	movq	32(%rax), %rdx
  437c20:	48 8b 5c 24 10 	movq	16(%rsp), %rbx
  437c25:	48 8b 74 24 18 	movq	24(%rsp), %rsi
  437c2a:	48 8b 7c 24 70 	movq	112(%rsp), %rdi
  437c2f:	48 39 d7 	cmpq	%rdx, %rdi
  437c32:	0f 83 68 04 00 00 	jae	1128 <runtime.moduledataverify1+0x5c0>
  437c38:	4c 8b 44 24 60 	movq	96(%rsp), %r8
  437c3d:	4d 8b 04 08 	movq	(%r8,%rcx), %r8
  437c41:	4c 8b 4c 24 68 	movq	104(%rsp), %r9
  437c46:	49 39 d1 	cmpq	%rdx, %r9
  437c49:	0f 83 51 04 00 00 	jae	1105 <runtime.moduledataverify1+0x5c0>
  437c4f:	48 89 9c 24 a0 00 00 00 	movq	%rbx, 160(%rsp)
  437c57:	48 89 74 24 68 	movq	%rsi, 104(%rsp)
  437c5c:	4c 89 44 24 58 	movq	%r8, 88(%rsp)
  437c61:	48 8b 44 24 78 	movq	120(%rsp), %rax
  437c66:	48 8b 04 01 	movq	(%rcx,%rax), %rax
  437c6a:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  437c6f:	e8 8c 9e fe ff 	callq	-90484 <runtime.printlock>
  437c74:	48 8d 05 a8 5e 03 00 	leaq	220840(%rip), %rax
  437c7b:	48 89 04 24 	movq	%rax, (%rsp)
  437c7f:	48 c7 44 24 08 35 00 00 00 	movq	$53, 8(%rsp)
  437c88:	e8 b3 a7 fe ff 	callq	-88141 <runtime.printstring>
  437c8d:	48 8b 44 24 58 	movq	88(%rsp), %rax
  437c92:	48 89 04 24 	movq	%rax, (%rsp)
  437c96:	e8 55 a6 fe ff 	callq	-88491 <runtime.printhex>
  437c9b:	e8 a0 a0 fe ff 	callq	-89952 <runtime.printsp>
  437ca0:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  437ca8:	48 89 04 24 	movq	%rax, (%rsp)
  437cac:	48 8b 44 24 68 	movq	104(%rsp), %rax
  437cb1:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  437cb6:	e8 85 a7 fe ff 	callq	-88187 <runtime.printstring>
  437cbb:	48 8d 05 ce 1f 03 00 	leaq	204750(%rip), %rax
  437cc2:	48 89 04 24 	movq	%rax, (%rsp)
  437cc6:	48 c7 44 24 08 03 00 00 00 	movq	$3, 8(%rsp)
  437ccf:	e8 6c a7 fe ff 	callq	-88212 <runtime.printstring>
  437cd4:	48 8b 44 24 50 	movq	80(%rsp), %rax
  437cd9:	48 89 04 24 	movq	%rax, (%rsp)
  437cdd:	e8 0e a6 fe ff 	callq	-88562 <runtime.printhex>
  437ce2:	e8 59 a0 fe ff 	callq	-90023 <runtime.printsp>
  437ce7:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  437cef:	48 89 04 24 	movq	%rax, (%rsp)
  437cf3:	48 8b 44 24 28 	movq	40(%rsp), %rax
  437cf8:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  437cfd:	e8 3e a7 fe ff 	callq	-88258 <runtime.printstring>
  437d02:	e8 89 a0 fe ff 	callq	-89975 <runtime.printnl>
  437d07:	e8 74 9e fe ff 	callq	-90508 <runtime.printunlock>
  437d0c:	31 c0 	xorl	%eax, %eax
  437d0e:	eb 79 	jmp	121 <runtime.moduledataverify1+0x2a9>
  437d10:	48 89 9c 24 a0 00 00 00 	movq	%rbx, 160(%rsp)
  437d18:	48 89 74 24 60 	movq	%rsi, 96(%rsp)
  437d1d:	48 8b 44 24 78 	movq	120(%rsp), %rax
  437d22:	48 8b 04 01 	movq	(%rcx,%rax), %rax
  437d26:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  437d2b:	e8 d0 9d fe ff 	callq	-90672 <runtime.printlock>
  437d30:	48 8d 05 27 1f 03 00 	leaq	204583(%rip), %rax
  437d37:	48 89 04 24 	movq	%rax, (%rsp)
  437d3b:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  437d44:	e8 f7 a6 fe ff 	callq	-88329 <runtime.printstring>
  437d49:	48 8b 44 24 58 	movq	88(%rsp), %rax
  437d4e:	48 89 04 24 	movq	%rax, (%rsp)
  437d52:	e8 99 a5 fe ff 	callq	-88679 <runtime.printhex>
  437d57:	e8 e4 9f fe ff 	callq	-90140 <runtime.printsp>
  437d5c:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  437d64:	48 89 04 24 	movq	%rax, (%rsp)
  437d68:	48 8b 44 24 60 	movq	96(%rsp), %rax
  437d6d:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  437d72:	e8 c9 a6 fe ff 	callq	-88375 <runtime.printstring>
  437d77:	e8 14 a0 fe ff 	callq	-90092 <runtime.printnl>
  437d7c:	e8 ff 9d fe ff 	callq	-90625 <runtime.printunlock>
  437d81:	48 8b 44 24 68 	movq	104(%rsp), %rax
  437d86:	48 ff c0 	incq	%rax
  437d89:	48 8b 4c 24 70 	movq	112(%rsp), %rcx
  437d8e:	48 39 c8 	cmpq	%rcx, %rax
  437d91:	0f 8f ee 02 00 00 	jg	750 <runtime.moduledataverify1+0x5a5>
  437d97:	48 8b 94 24 08 01 00 00 	movq	264(%rsp), %rdx
  437d9f:	48 8b 1a 	movq	(%rdx), %rbx
  437da2:	48 8b 72 08 	movq	8(%rdx), %rsi
  437da6:	48 8b 7a 18 	movq	24(%rdx), %rdi
  437daa:	4c 8b 42 20 	movq	32(%rdx), %r8
  437dae:	4c 39 c0 	cmpq	%r8, %rax
  437db1:	0f 83 c7 02 00 00 	jae	711 <runtime.moduledataverify1+0x59e>
  437db7:	49 89 c0 	movq	%rax, %r8
  437dba:	48 c1 e0 04 	shlq	$4, %rax
  437dbe:	48 8b 7c 38 08 	movq	8(%rax,%rdi), %rdi
  437dc3:	48 39 f7 	cmpq	%rsi, %rdi
  437dc6:	0f 83 b2 02 00 00 	jae	690 <runtime.moduledataverify1+0x59e>
  437dcc:	48 89 44 24 78 	movq	%rax, 120(%rsp)
  437dd1:	4c 89 44 24 68 	movq	%r8, 104(%rsp)
  437dd6:	48 8d 04 3b 	leaq	(%rbx,%rdi), %rax
  437dda:	48 89 04 24 	movq	%rax, (%rsp)
  437dde:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  437de3:	e8 18 0b 00 00 	callq	2840 <runtime.funcname>
  437de8:	48 8b 84 24 08 01 00 00 	movq	264(%rsp), %rax
  437df0:	48 8b 48 18 	movq	24(%rax), %rcx
  437df4:	48 8b 50 20 	movq	32(%rax), %rdx
  437df8:	48 8b 5c 24 10 	movq	16(%rsp), %rbx
  437dfd:	48 8b 74 24 18 	movq	24(%rsp), %rsi
  437e02:	48 8b 7c 24 68 	movq	104(%rsp), %rdi
  437e07:	48 39 d7 	cmpq	%rdx, %rdi
  437e0a:	0f 82 00 ff ff ff 	jb	-256 <runtime.moduledataverify1+0x230>
  437e10:	e9 69 02 00 00 	jmp	617 <runtime.moduledataverify1+0x59e>
  437e15:	4c 89 8c 24 98 00 00 00 	movq	%r9, 152(%rsp)
  437e1d:	48 89 0c 24 	movq	%rcx, (%rsp)
  437e21:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  437e26:	e8 d5 0a 00 00 	callq	2773 <runtime.funcname>
  437e2b:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  437e30:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  437e35:	48 8b 84 24 08 01 00 00 	movq	264(%rsp), %rax
  437e3d:	4c 8b 8c 24 98 00 00 00 	movq	152(%rsp), %r9
  437e45:	e9 ab fd ff ff 	jmp	-597 <runtime.moduledataverify1+0x115>
  437e4a:	4c 8b 40 50 	movq	80(%rax), %r8
  437e4e:	48 85 c9 	testq	%rcx, %rcx
  437e51:	0f 86 05 02 00 00 	jbe	517 <runtime.moduledataverify1+0x57c>
  437e57:	4c 8b 0a 	movq	(%rdx), %r9
  437e5a:	4d 39 c8 	cmpq	%r9, %r8
  437e5d:	0f 85 00 02 00 00 	jne	512 <runtime.moduledataverify1+0x583>
  437e63:	4c 8b 40 58 	movq	88(%rax), %r8
  437e67:	48 39 cb 	cmpq	%rcx, %rbx
  437e6a:	0f 83 e5 01 00 00 	jae	485 <runtime.moduledataverify1+0x575>
  437e70:	48 c1 e3 04 	shlq	$4, %rbx
  437e74:	48 8b 0c 13 	movq	(%rbx,%rdx), %rcx
  437e78:	49 39 c8 	cmpq	%rcx, %r8
  437e7b:	0f 85 e2 01 00 00 	jne	482 <runtime.moduledataverify1+0x583>
  437e81:	48 8b 88 70 01 00 00 	movq	368(%rax), %rcx
  437e88:	48 8b 90 78 01 00 00 	movq	376(%rax), %rdx
  437e8f:	48 89 54 24 78 	movq	%rdx, 120(%rsp)
  437e94:	31 db 	xorl	%ebx, %ebx
  437e96:	eb 22 	jmp	34 <runtime.moduledataverify1+0x3da>
  437e98:	4c 8b 84 24 90 00 00 00 	movq	144(%rsp), %r8
  437ea0:	49 8d 48 28 	leaq	40(%r8), %rcx
  437ea4:	4c 8b 44 24 70 	movq	112(%rsp), %r8
  437ea9:	49 8d 58 01 	leaq	1(%r8), %rbx
  437ead:	48 8b 84 24 08 01 00 00 	movq	264(%rsp), %rax
  437eb5:	48 8b 54 24 78 	movq	120(%rsp), %rdx
  437eba:	48 39 d3 	cmpq	%rdx, %rbx
  437ebd:	0f 8d b8 00 00 00 	jge	184 <runtime.moduledataverify1+0x49b>
  437ec3:	4c 8b 01 	movq	(%rcx), %r8
  437ec6:	4c 89 84 24 d0 00 00 00 	movq	%r8, 208(%rsp)
  437ece:	48 8d 71 08 	leaq	8(%rcx), %rsi
  437ed2:	48 8d bc 24 d8 00 00 00 	leaq	216(%rsp), %rdi
  437eda:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  437edf:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  437ee4:	e8 5b ef 00 00 	callq	61275 <runtime.duffcopy+0x364>
  437ee9:	48 8b 6d 00 	movq	(%rbp), %rbp
  437eed:	4c 8b 84 24 d0 00 00 00 	movq	208(%rsp), %r8
  437ef5:	4c 89 84 24 a8 00 00 00 	movq	%r8, 168(%rsp)
  437efd:	48 8d bc 24 b0 00 00 00 	leaq	176(%rsp), %rdi
  437f05:	48 8d b4 24 d8 00 00 00 	leaq	216(%rsp), %rsi
  437f0d:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  437f12:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  437f17:	e8 28 ef 00 00 	callq	61224 <runtime.duffcopy+0x364>
  437f1c:	48 8b 6d 00 	movq	(%rbp), %rbp
  437f20:	4c 8b 84 24 c8 00 00 00 	movq	200(%rsp), %r8
  437f28:	4c 8b 8c 24 b8 00 00 00 	movq	184(%rsp), %r9
  437f30:	4c 8b 94 24 c0 00 00 00 	movq	192(%rsp), %r10
  437f38:	4d 8b 58 08 	movq	8(%r8), %r11
  437f3c:	4d 8b 00 	movq	(%r8), %r8
  437f3f:	4d 39 da 	cmpq	%r11, %r10
  437f42:	75 47 	jne	71 <runtime.moduledataverify1+0x4ab>
  437f44:	48 89 5c 24 70 	movq	%rbx, 112(%rsp)
  437f49:	48 89 8c 24 90 00 00 00 	movq	%rcx, 144(%rsp)
  437f51:	4c 89 0c 24 	movq	%r9, (%rsp)
  437f55:	4c 89 44 24 08 	movq	%r8, 8(%rsp)
  437f5a:	4c 89 54 24 10 	movq	%r10, 16(%rsp)
  437f5f:	e8 dc e3 00 00 	callq	58332 <runtime.memequal>
  437f64:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  437f69:	84 c0 	testb	%al, %al
  437f6b:	0f 85 27 ff ff ff 	jne	-217 <runtime.moduledataverify1+0x3b8>
  437f71:	48 8b 84 24 08 01 00 00 	movq	264(%rsp), %rax
  437f79:	eb 10 	jmp	16 <runtime.moduledataverify1+0x4ab>
  437f7b:	48 8b ac 24 f8 00 00 00 	movq	248(%rsp), %rbp
  437f83:	48 81 c4 00 01 00 00 	addq	$256, %rsp
  437f8a:	c3 	retq
  437f8b:	48 8b 88 60 01 00 00 	movq	352(%rax), %rcx
  437f92:	48 89 8c 24 a0 00 00 00 	movq	%rcx, 160(%rsp)
  437f9a:	48 8b 80 68 01 00 00 	movq	360(%rax), %rax
  437fa1:	48 89 44 24 78 	movq	%rax, 120(%rsp)
  437fa6:	48 8b 94 24 b0 00 00 00 	movq	176(%rsp), %rdx
  437fae:	48 89 54 24 70 	movq	%rdx, 112(%rsp)
  437fb3:	48 8b 9c 24 a8 00 00 00 	movq	168(%rsp), %rbx
  437fbb:	48 89 9c 24 88 00 00 00 	movq	%rbx, 136(%rsp)
  437fc3:	e8 38 9b fe ff 	callq	-91336 <runtime.printlock>
  437fc8:	48 8d 05 d8 44 03 00 	leaq	214232(%rip), %rax
  437fcf:	48 89 04 24 	movq	%rax, (%rsp)
  437fd3:	48 c7 44 24 08 1e 00 00 00 	movq	$30, 8(%rsp)
  437fdc:	e8 5f a4 fe ff 	callq	-88993 <runtime.printstring>
  437fe1:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  437fe9:	48 89 04 24 	movq	%rax, (%rsp)
  437fed:	48 8b 44 24 78 	movq	120(%rsp), %rax
  437ff2:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  437ff7:	e8 44 a4 fe ff 	callq	-89020 <runtime.printstring>
  437ffc:	48 8d 05 51 1d 03 00 	leaq	204113(%rip), %rax
  438003:	48 89 04 24 	movq	%rax, (%rsp)
  438007:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  438010:	e8 2b a4 fe ff 	callq	-89045 <runtime.printstring>
  438015:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  43801d:	48 89 04 24 	movq	%rax, (%rsp)
  438021:	48 8b 44 24 70 	movq	112(%rsp), %rax
  438026:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43802b:	e8 10 a4 fe ff 	callq	-89072 <runtime.printstring>
  438030:	e8 5b 9d fe ff 	callq	-90789 <runtime.printnl>
  438035:	e8 46 9b fe ff 	callq	-91322 <runtime.printunlock>
  43803a:	48 8d 05 79 25 03 00 	leaq	206201(%rip), %rax
  438041:	48 89 04 24 	movq	%rax, (%rsp)
  438045:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  43804e:	e8 7d 91 fe ff 	callq	-93827 <runtime.throw>
  438053:	0f 0b 	ud2
  438055:	e8 e6 79 fe ff 	callq	-99866 <runtime.panicindex>
  43805a:	0f 0b 	ud2
  43805c:	e8 df 79 fe ff 	callq	-99873 <runtime.panicindex>
  438061:	0f 0b 	ud2
  438063:	48 8d 05 f6 33 03 00 	leaq	209910(%rip), %rax
  43806a:	48 89 04 24 	movq	%rax, (%rsp)
  43806e:	48 c7 44 24 08 16 00 00 00 	movq	$22, 8(%rsp)
  438077:	e8 54 91 fe ff 	callq	-93868 <runtime.throw>
  43807c:	0f 0b 	ud2
  43807e:	e8 bd 79 fe ff 	callq	-99907 <runtime.panicindex>
  438083:	0f 0b 	ud2
  438085:	48 8d 05 7e 40 03 00 	leaq	213118(%rip), %rax
  43808c:	48 89 04 24 	movq	%rax, (%rsp)
  438090:	48 c7 44 24 08 1c 00 00 00 	movq	$28, 8(%rsp)
  438099:	e8 32 91 fe ff 	callq	-93902 <runtime.throw>
  43809e:	0f 0b 	ud2
  4380a0:	e8 9b 79 fe ff 	callq	-99941 <runtime.panicindex>
  4380a5:	0f 0b 	ud2
  4380a7:	e8 94 79 fe ff 	callq	-99948 <runtime.panicindex>
  4380ac:	0f 0b 	ud2
  4380ae:	e8 8d 79 fe ff 	callq	-99955 <runtime.panicindex>
  4380b3:	0f 0b 	ud2
  4380b5:	e8 86 79 fe ff 	callq	-99962 <runtime.panicindex>
  4380ba:	0f 0b 	ud2
  4380bc:	0f b6 42 04 	movzbl	4(%rdx), %eax
  4380c0:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  4380c5:	0f b6 4a 05 	movzbl	5(%rdx), %ecx
  4380c9:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  4380ce:	0f b6 5a 06 	movzbl	6(%rdx), %ebx
  4380d2:	48 89 5c 24 38 	movq	%rbx, 56(%rsp)
  4380d7:	0f b6 52 07 	movzbl	7(%rdx), %edx
  4380db:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  4380e0:	e8 1b 9a fe ff 	callq	-91621 <runtime.printlock>
  4380e5:	48 8d 05 dd 50 03 00 	leaq	217309(%rip), %rax
  4380ec:	48 89 04 24 	movq	%rax, (%rsp)
  4380f0:	48 c7 44 24 08 27 00 00 00 	movq	$39, 8(%rsp)
  4380f9:	e8 42 a3 fe ff 	callq	-89278 <runtime.printstring>
  4380fe:	8b 44 24 24 	movl	36(%rsp), %eax
  438102:	48 89 04 24 	movq	%rax, (%rsp)
  438106:	e8 e5 a1 fe ff 	callq	-89627 <runtime.printhex>
  43810b:	e8 30 9c fe ff 	callq	-91088 <runtime.printsp>
  438110:	48 8b 44 24 48 	movq	72(%rsp), %rax
  438115:	48 89 04 24 	movq	%rax, (%rsp)
  438119:	e8 d2 a1 fe ff 	callq	-89646 <runtime.printhex>
  43811e:	e8 1d 9c fe ff 	callq	-91107 <runtime.printsp>
  438123:	48 8b 44 24 40 	movq	64(%rsp), %rax
  438128:	48 89 04 24 	movq	%rax, (%rsp)
  43812c:	e8 bf a1 fe ff 	callq	-89665 <runtime.printhex>
  438131:	e8 0a 9c fe ff 	callq	-91126 <runtime.printsp>
  438136:	48 8b 44 24 38 	movq	56(%rsp), %rax
  43813b:	48 89 04 24 	movq	%rax, (%rsp)
  43813f:	e8 ac a1 fe ff 	callq	-89684 <runtime.printhex>
  438144:	e8 f7 9b fe ff 	callq	-91145 <runtime.printsp>
  438149:	48 8b 44 24 30 	movq	48(%rsp), %rax
  43814e:	48 89 04 24 	movq	%rax, (%rsp)
  438152:	e8 99 a1 fe ff 	callq	-89703 <runtime.printhex>
  438157:	e8 34 9c fe ff 	callq	-91084 <runtime.printnl>
  43815c:	e8 1f 9a fe ff 	callq	-91617 <runtime.printunlock>
  438161:	48 8d 05 d5 43 03 00 	leaq	213973(%rip), %rax
  438168:	48 89 04 24 	movq	%rax, (%rsp)
  43816c:	48 c7 44 24 08 1e 00 00 00 	movq	$30, 8(%rsp)
  438175:	e8 56 90 fe ff 	callq	-94122 <runtime.throw>
  43817a:	0f 0b 	ud2
  43817c:	e8 ef c3 00 00 	callq	50159 <runtime.morestack_noctxt>
  438181:	e9 5a f9 ff ff 	jmp	-1702 <runtime.moduledataverify1>
  438186:	cc 	int3
  438187:	cc 	int3
  438188:	cc 	int3
  438189:	cc 	int3
  43818a:	cc 	int3
  43818b:	cc 	int3
  43818c:	cc 	int3
  43818d:	cc 	int3
  43818e:	cc 	int3
  43818f:	cc 	int3

runtime.findmoduledatap:
  438190:	48 8b 44 24 08 	movq	8(%rsp), %rax
  438195:	48 8d 0d a4 d6 06 00 	leaq	448164(%rip), %rcx
  43819c:	eb 07 	jmp	7 <runtime.findmoduledatap+0x15>
  43819e:	48 8b 89 c0 01 00 00 	movq	448(%rcx), %rcx
  4381a5:	48 85 c9 	testq	%rcx, %rcx
  4381a8:	74 18 	je	24 <runtime.findmoduledatap+0x32>
  4381aa:	48 8b 51 50 	movq	80(%rcx), %rdx
  4381ae:	48 39 c2 	cmpq	%rax, %rdx
  4381b1:	77 eb 	ja	-21 <runtime.findmoduledatap+0xe>
  4381b3:	48 8b 51 58 	movq	88(%rcx), %rdx
  4381b7:	48 39 d0 	cmpq	%rdx, %rax
  4381ba:	73 e2 	jae	-30 <runtime.findmoduledatap+0xe>
  4381bc:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  4381c1:	c3 	retq
  4381c2:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  4381cb:	c3 	retq
  4381cc:	cc 	int3
  4381cd:	cc 	int3
  4381ce:	cc 	int3
  4381cf:	cc 	int3

runtime.findfunc:
  4381d0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4381d9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4381dd:	0f 86 56 01 00 00 	jbe	342 <runtime.findfunc+0x169>
  4381e3:	48 83 ec 18 	subq	$24, %rsp
  4381e7:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  4381ec:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  4381f1:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4381f6:	48 89 04 24 	movq	%rax, (%rsp)
  4381fa:	e8 91 ff ff ff 	callq	-111 <runtime.findmoduledatap>
  4381ff:	48 8b 44 24 08 	movq	8(%rsp), %rax
  438204:	48 85 c0 	testq	%rax, %rax
  438207:	0f 84 dc 00 00 00 	je	220 <runtime.findfunc+0x119>
  43820d:	48 8b 48 50 	movq	80(%rax), %rcx
  438211:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  438216:	48 89 d3 	movq	%rdx, %rbx
  438219:	48 29 ca 	subq	%rcx, %rdx
  43821c:	48 89 d1 	movq	%rdx, %rcx
  43821f:	48 c1 ea 0c 	shrq	$12, %rdx
  438223:	48 8d 14 92 	leaq	(%rdx,%rdx,4), %rdx
  438227:	48 c1 e2 02 	shlq	$2, %rdx
  43822b:	48 03 50 48 	addq	72(%rax), %rdx
  43822f:	48 81 e1 ff 0f 00 00 	andq	$4095, %rcx
  438236:	48 c1 e9 08 	shrq	$8, %rcx
  43823a:	8b 32 	movl	(%rdx), %esi
  43823c:	48 83 f9 10 	cmpq	$16, %rcx
  438240:	0f 83 ec 00 00 00 	jae	236 <runtime.findfunc+0x162>
  438246:	0f b6 4c 0a 04 	movzbl	4(%rdx,%rcx), %ecx
  43824b:	01 f1 	addl	%esi, %ecx
  43824d:	48 8b 50 18 	movq	24(%rax), %rdx
  438251:	48 8b 70 20 	movq	32(%rax), %rsi
  438255:	39 f1 	cmpl	%esi, %ecx
  438257:	72 04 	jb	4 <runtime.findfunc+0x8d>
  438259:	48 8d 4e ff 	leaq	-1(%rsi), %rcx
  43825d:	89 cf 	movl	%ecx, %edi
  43825f:	48 39 f7 	cmpq	%rsi, %rdi
  438262:	0f 83 c3 00 00 00 	jae	195 <runtime.findfunc+0x15b>
  438268:	48 c1 e7 04 	shlq	$4, %rdi
  43826c:	48 8b 3c 3a 	movq	(%rdx,%rdi), %rdi
  438270:	48 39 fb 	cmpq	%rdi, %rbx
  438273:	72 04 	jb	4 <runtime.findfunc+0xa9>
  438275:	eb 58 	jmp	88 <runtime.findfunc+0xff>
  438277:	ff c9 	decl	%ecx
  438279:	89 cf 	movl	%ecx, %edi
  43827b:	48 39 f7 	cmpq	%rsi, %rdi
  43827e:	0f 83 a0 00 00 00 	jae	160 <runtime.findfunc+0x154>
  438284:	48 c1 e7 04 	shlq	$4, %rdi
  438288:	48 8b 3c 17 	movq	(%rdi,%rdx), %rdi
  43828c:	48 39 df 	cmpq	%rbx, %rdi
  43828f:	76 04 	jbe	4 <runtime.findfunc+0xc5>
  438291:	85 c9 	testl	%ecx, %ecx
  438293:	77 e2 	ja	-30 <runtime.findfunc+0xa7>
  438295:	85 c9 	testl	%ecx, %ecx
  438297:	74 70 	je	112 <runtime.findfunc+0x139>
  438299:	48 8b 18 	movq	(%rax), %rbx
  43829c:	48 8b 78 08 	movq	8(%rax), %rdi
  4382a0:	89 c9 	movl	%ecx, %ecx
  4382a2:	48 39 f1 	cmpq	%rsi, %rcx
  4382a5:	73 54 	jae	84 <runtime.findfunc+0x12b>
  4382a7:	48 c1 e1 04 	shlq	$4, %rcx
  4382ab:	48 8b 4c 0a 08 	movq	8(%rdx,%rcx), %rcx
  4382b0:	48 39 f9 	cmpq	%rdi, %rcx
  4382b3:	73 46 	jae	70 <runtime.findfunc+0x12b>
  4382b5:	48 01 d9 	addq	%rbx, %rcx
  4382b8:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  4382bd:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  4382c2:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  4382c7:	48 83 c4 18 	addq	$24, %rsp
  4382cb:	c3 	retq
  4382cc:	44 89 c1 	movl	%r8d, %ecx
  4382cf:	8d 79 01 	leal	1(%rcx), %edi
  4382d2:	48 39 f7 	cmpq	%rsi, %rdi
  4382d5:	73 2b 	jae	43 <runtime.findfunc+0x132>
  4382d7:	41 89 f8 	movl	%edi, %r8d
  4382da:	48 c1 e7 04 	shlq	$4, %rdi
  4382de:	48 8b 3c 3a 	movq	(%rdx,%rdi), %rdi
  4382e2:	48 39 df 	cmpq	%rbx, %rdi
  4382e5:	76 e5 	jbe	-27 <runtime.findfunc+0xfc>
  4382e7:	eb b0 	jmp	-80 <runtime.findfunc+0xc9>
  4382e9:	0f 57 c0 	xorps	%xmm0, %xmm0
  4382ec:	0f 11 44 24 28 	movups	%xmm0, 40(%rsp)
  4382f1:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  4382f6:	48 83 c4 18 	addq	$24, %rsp
  4382fa:	c3 	retq
  4382fb:	e8 40 77 fe ff 	callq	-100544 <runtime.panicindex>
  438300:	0f 0b 	ud2
  438302:	e8 39 77 fe ff 	callq	-100551 <runtime.panicindex>
  438307:	0f 0b 	ud2
  438309:	48 8d 05 d9 49 03 00 	leaq	215513(%rip), %rax
  438310:	48 89 04 24 	movq	%rax, (%rsp)
  438314:	48 c7 44 24 08 23 00 00 00 	movq	$35, 8(%rsp)
  43831d:	e8 ae 8e fe ff 	callq	-94546 <runtime.throw>
  438322:	0f 0b 	ud2
  438324:	e8 17 77 fe ff 	callq	-100585 <runtime.panicindex>
  438329:	0f 0b 	ud2
  43832b:	e8 10 77 fe ff 	callq	-100592 <runtime.panicindex>
  438330:	0f 0b 	ud2
  438332:	e8 09 77 fe ff 	callq	-100599 <runtime.panicindex>
  438337:	0f 0b 	ud2
  438339:	e8 32 c2 00 00 	callq	49714 <runtime.morestack_noctxt>
  43833e:	e9 8d fe ff ff 	jmp	-371 <runtime.findfunc>
  438343:	cc 	int3
  438344:	cc 	int3
  438345:	cc 	int3
  438346:	cc 	int3
  438347:	cc 	int3
  438348:	cc 	int3
  438349:	cc 	int3
  43834a:	cc 	int3
  43834b:	cc 	int3
  43834c:	cc 	int3
  43834d:	cc 	int3
  43834e:	cc 	int3
  43834f:	cc 	int3

runtime.pcvalue:
  438350:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  438359:	48 8d 44 24 d8 	leaq	-40(%rsp), %rax
  43835e:	48 3b 41 10 	cmpq	16(%rcx), %rax
  438362:	0f 86 81 05 00 00 	jbe	1409 <runtime.pcvalue+0x599>
  438368:	48 81 ec a8 00 00 00 	subq	$168, %rsp
  43836f:	48 89 ac 24 a0 00 00 00 	movq	%rbp, 160(%rsp)
  438377:	48 8d ac 24 a0 00 00 00 	leaq	160(%rsp), %rbp
  43837f:	8b 84 24 c0 00 00 00 	movl	192(%rsp), %eax
  438386:	85 c0 	testl	%eax, %eax
  438388:	0f 84 b7 04 00 00 	je	1207 <runtime.pcvalue+0x4f5>
  43838e:	48 8b 8c 24 d0 00 00 00 	movq	208(%rsp), %rcx
  438396:	48 85 c9 	testq	%rcx, %rcx
  438399:	0f 84 99 04 00 00 	je	1177 <runtime.pcvalue+0x4e8>
  43839f:	48 8b 94 24 c8 00 00 00 	movq	200(%rsp), %rdx
  4383a7:	31 db 	xorl	%ebx, %ebx
  4383a9:	eb 04 	jmp	4 <runtime.pcvalue+0x5f>
  4383ab:	48 8d 5e 01 	leaq	1(%rsi), %rbx
  4383af:	48 83 fb 10 	cmpq	$16, %rbx
  4383b3:	7d 33 	jge	51 <runtime.pcvalue+0x98>
  4383b5:	48 89 de 	movq	%rbx, %rsi
  4383b8:	48 c1 e3 04 	shlq	$4, %rbx
  4383bc:	8b 7c 19 08 	movl	8(%rcx,%rbx), %edi
  4383c0:	39 f8 	cmpl	%edi, %eax
  4383c2:	75 e7 	jne	-25 <runtime.pcvalue+0x5b>
  4383c4:	48 8b 3c 19 	movq	(%rcx,%rbx), %rdi
  4383c8:	48 39 fa 	cmpq	%rdi, %rdx
  4383cb:	75 de 	jne	-34 <runtime.pcvalue+0x5b>
  4383cd:	8b 44 19 0c 	movl	12(%rcx,%rbx), %eax
  4383d1:	89 84 24 e0 00 00 00 	movl	%eax, 224(%rsp)
  4383d8:	48 8b ac 24 a0 00 00 00 	movq	160(%rsp), %rbp
  4383e0:	48 81 c4 a8 00 00 00 	addq	$168, %rsp
  4383e7:	c3 	retq
  4383e8:	48 8b 9c 24 b0 00 00 00 	movq	176(%rsp), %rbx
  4383f0:	48 85 db 	testq	%rbx, %rbx
  4383f3:	0f 84 0e 04 00 00 	je	1038 <runtime.pcvalue+0x4b7>
  4383f9:	48 8b b4 24 b8 00 00 00 	movq	184(%rsp), %rsi
  438401:	48 8b 7e 10 	movq	16(%rsi), %rdi
  438405:	4c 8b 46 08 	movq	8(%rsi), %r8
  438409:	4c 8b 0e 	movq	(%rsi), %r9
  43840c:	4c 63 d0 	movslq	%eax, %r10
  43840f:	4d 39 c2 	cmpq	%r8, %r10
  438412:	0f 87 71 04 00 00 	ja	1137 <runtime.pcvalue+0x539>
  438418:	4c 89 94 24 80 00 00 00 	movq	%r10, 128(%rsp)
  438420:	4c 8b 1b 	movq	(%rbx), %r11
  438423:	4c 89 5c 24 58 	movq	%r11, 88(%rsp)
  438428:	c7 44 24 54 ff ff ff ff 	movl	$4294967295, 84(%rsp)
  438430:	4c 8d 5c 24 28 	leaq	40(%rsp), %r11
  438435:	4c 89 9c 24 98 00 00 00 	movq	%r11, 152(%rsp)
  43843d:	4d 29 d0 	subq	%r10, %r8
  438440:	4c 29 d7 	subq	%r10, %rdi
  438443:	49 89 fc 	movq	%rdi, %r12
  438446:	48 f7 df 	negq	%rdi
  438449:	48 c1 ff 3f 	sarq	$63, %rdi
  43844d:	4c 21 d7 	andq	%r10, %rdi
  438450:	4c 01 cf 	addq	%r9, %rdi
  438453:	eb 19 	jmp	25 <runtime.pcvalue+0x11e>
  438455:	4c 8b 9c 24 98 00 00 00 	movq	152(%rsp), %r11
  43845d:	49 89 cc 	movq	%rcx, %r12
  438460:	49 89 d0 	movq	%rdx, %r8
  438463:	48 89 df 	movq	%rbx, %rdi
  438466:	48 8b 9c 24 b0 00 00 00 	movq	176(%rsp), %rbx
  43846e:	48 8b 44 24 58 	movq	88(%rsp), %rax
  438473:	48 8b 0b 	movq	(%rbx), %rcx
  438476:	48 39 c1 	cmpq	%rax, %rcx
  438479:	41 0f 94 03 	sete	(%r11)
  43847d:	48 89 3c 24 	movq	%rdi, (%rsp)
  438481:	4c 89 44 24 08 	movq	%r8, 8(%rsp)
  438486:	4c 89 64 24 10 	movq	%r12, 16(%rsp)
  43848b:	48 8d 44 24 58 	leaq	88(%rsp), %rax
  438490:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  438495:	48 8d 4c 24 54 	leaq	84(%rsp), %rcx
  43849a:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  43849f:	e8 2c 0b 00 00 	callq	2860 <runtime.step>
  4384a4:	0f b6 44 24 48 	movzbl	72(%rsp), %eax
  4384a9:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  4384ae:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  4384b3:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  4384b8:	84 c0 	testb	%al, %al
  4384ba:	0f 84 a6 00 00 00 	je	166 <runtime.pcvalue+0x216>
  4384c0:	48 8b 44 24 58 	movq	88(%rsp), %rax
  4384c5:	48 8b b4 24 c8 00 00 00 	movq	200(%rsp), %rsi
  4384cd:	48 39 c6 	cmpq	%rax, %rsi
  4384d0:	73 83 	jae	-125 <runtime.pcvalue+0x105>
  4384d2:	48 8b 84 24 d0 00 00 00 	movq	208(%rsp), %rax
  4384da:	48 85 c0 	testq	%rax, %rax
  4384dd:	74 6c 	je	108 <runtime.pcvalue+0x1fb>
  4384df:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4384e8:	48 8b 49 30 	movq	48(%rcx), %rcx
  4384ec:	8b 91 20 01 00 00 	movl	288(%rcx), %edx
  4384f2:	8b 99 24 01 00 00 	movl	292(%rcx), %ebx
  4384f8:	89 99 20 01 00 00 	movl	%ebx, 288(%rcx)
  4384fe:	89 d7 	movl	%edx, %edi
  438500:	c1 e2 11 	shll	$17, %edx
  438503:	31 fa 	xorl	%edi, %edx
  438505:	89 df 	movl	%ebx, %edi
  438507:	31 d3 	xorl	%edx, %ebx
  438509:	c1 ea 07 	shrl	$7, %edx
  43850c:	31 da 	xorl	%ebx, %edx
  43850e:	89 fb 	movl	%edi, %ebx
  438510:	c1 ef 10 	shrl	$16, %edi
  438513:	31 d7 	xorl	%edx, %edi
  438515:	89 b9 24 01 00 00 	movl	%edi, 292(%rcx)
  43851b:	8b 4c 24 54 	movl	84(%rsp), %ecx
  43851f:	8d 14 3b 	leal	(%rbx,%rdi), %edx
  438522:	48 c1 e2 04 	shlq	$4, %rdx
  438526:	48 c1 ea 20 	shrq	$32, %rdx
  43852a:	48 83 fa 10 	cmpq	$16, %rdx
  43852e:	0f 83 4e 03 00 00 	jae	846 <runtime.pcvalue+0x532>
  438534:	48 c1 e2 04 	shlq	$4, %rdx
  438538:	48 89 34 10 	movq	%rsi, (%rax,%rdx)
  43853c:	8b 9c 24 c0 00 00 00 	movl	192(%rsp), %ebx
  438543:	89 5c 10 08 	movl	%ebx, 8(%rax,%rdx)
  438547:	89 4c 10 0c 	movl	%ecx, 12(%rax,%rdx)
  43854b:	8b 44 24 54 	movl	84(%rsp), %eax
  43854f:	89 84 24 e0 00 00 00 	movl	%eax, 224(%rsp)
  438556:	48 8b ac 24 a0 00 00 00 	movq	160(%rsp), %rbp
  43855e:	48 81 c4 a8 00 00 00 	addq	$168, %rsp
  438565:	c3 	retq
  438566:	8b 05 88 b3 08 00 	movl	570248(%rip), %eax
  43856c:	85 c0 	testl	%eax, %eax
  43856e:	0f 85 78 02 00 00 	jne	632 <runtime.pcvalue+0x49c>
  438574:	0f b6 84 24 d8 00 00 00 	movzbl	216(%rsp), %eax
  43857c:	84 c0 	testb	%al, %al
  43857e:	0f 84 68 02 00 00 	je	616 <runtime.pcvalue+0x49c>
  438584:	48 89 4c 24 68 	movq	%rcx, 104(%rsp)
  438589:	48 89 54 24 60 	movq	%rdx, 96(%rsp)
  43858e:	48 89 9c 24 88 00 00 00 	movq	%rbx, 136(%rsp)
  438596:	48 8b 84 24 b0 00 00 00 	movq	176(%rsp), %rax
  43859e:	48 89 04 24 	movq	%rax, (%rsp)
  4385a2:	48 8b 8c 24 b8 00 00 00 	movq	184(%rsp), %rcx
  4385aa:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4385af:	e8 4c 03 00 00 	callq	844 <runtime.funcname>
  4385b4:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4385b9:	48 89 44 24 78 	movq	%rax, 120(%rsp)
  4385be:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  4385c3:	48 89 8c 24 90 00 00 00 	movq	%rcx, 144(%rsp)
  4385cb:	48 8b 54 24 58 	movq	88(%rsp), %rdx
  4385d0:	48 89 54 24 70 	movq	%rdx, 112(%rsp)
  4385d5:	e8 26 95 fe ff 	callq	-92890 <runtime.printlock>
  4385da:	48 8d 05 69 48 03 00 	leaq	215145(%rip), %rax
  4385e1:	48 89 04 24 	movq	%rax, (%rsp)
  4385e5:	48 c7 44 24 08 24 00 00 00 	movq	$36, 8(%rsp)
  4385ee:	e8 4d 9e fe ff 	callq	-90547 <runtime.printstring>
  4385f3:	48 8b 84 24 90 00 00 00 	movq	144(%rsp), %rax
  4385fb:	48 89 04 24 	movq	%rax, (%rsp)
  4385ff:	48 8b 44 24 78 	movq	120(%rsp), %rax
  438604:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  438609:	e8 32 9e fe ff 	callq	-90574 <runtime.printstring>
  43860e:	48 8d 05 bd 16 03 00 	leaq	202429(%rip), %rax
  438615:	48 89 04 24 	movq	%rax, (%rsp)
  438619:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  438622:	e8 19 9e fe ff 	callq	-90599 <runtime.printstring>
  438627:	48 8b 44 24 70 	movq	112(%rsp), %rax
  43862c:	48 89 04 24 	movq	%rax, (%rsp)
  438630:	e8 bb 9c fe ff 	callq	-90949 <runtime.printhex>
  438635:	48 8d 05 b2 1c 03 00 	leaq	203954(%rip), %rax
  43863c:	48 89 04 24 	movq	%rax, (%rsp)
  438640:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  438649:	e8 f2 9d fe ff 	callq	-90638 <runtime.printstring>
  43864e:	48 8b 84 24 c8 00 00 00 	movq	200(%rsp), %rax
  438656:	48 89 04 24 	movq	%rax, (%rsp)
  43865a:	e8 91 9c fe ff 	callq	-90991 <runtime.printhex>
  43865f:	48 8d 05 1b 17 03 00 	leaq	202523(%rip), %rax
  438666:	48 89 04 24 	movq	%rax, (%rsp)
  43866a:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  438673:	e8 c8 9d fe ff 	callq	-90680 <runtime.printstring>
  438678:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  438680:	48 89 04 24 	movq	%rax, (%rsp)
  438684:	48 8b 44 24 60 	movq	96(%rsp), %rax
  438689:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43868e:	48 8b 44 24 68 	movq	104(%rsp), %rax
  438693:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  438698:	e8 43 9e fe ff 	callq	-90557 <runtime.printslice>
  43869d:	e8 ee 96 fe ff 	callq	-92434 <runtime.printnl>
  4386a2:	e8 d9 94 fe ff 	callq	-92967 <runtime.printunlock>
  4386a7:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  4386af:	48 8b 48 10 	movq	16(%rax), %rcx
  4386b3:	48 8b 50 08 	movq	8(%rax), %rdx
  4386b7:	48 8b 00 	movq	(%rax), %rax
  4386ba:	48 8b 9c 24 80 00 00 00 	movq	128(%rsp), %rbx
  4386c2:	48 39 d3 	cmpq	%rdx, %rbx
  4386c5:	0f 87 b0 01 00 00 	ja	432 <runtime.pcvalue+0x52b>
  4386cb:	48 8b b4 24 b0 00 00 00 	movq	176(%rsp), %rsi
  4386d3:	48 8b 3e 	movq	(%rsi), %rdi
  4386d6:	48 89 7c 24 58 	movq	%rdi, 88(%rsp)
  4386db:	c7 44 24 54 ff ff ff ff 	movl	$4294967295, 84(%rsp)
  4386e3:	48 29 da 	subq	%rbx, %rdx
  4386e6:	48 29 d9 	subq	%rbx, %rcx
  4386e9:	48 89 cf 	movq	%rcx, %rdi
  4386ec:	48 f7 d9 	negq	%rcx
  4386ef:	48 c1 f9 3f 	sarq	$63, %rcx
  4386f3:	48 21 d9 	andq	%rbx, %rcx
  4386f6:	48 01 c8 	addq	%rcx, %rax
  4386f9:	e9 93 00 00 00 	jmp	147 <runtime.pcvalue+0x441>
  4386fe:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  438703:	48 89 4c 24 60 	movq	%rcx, 96(%rsp)
  438708:	48 89 94 24 88 00 00 00 	movq	%rdx, 136(%rsp)
  438710:	48 8b 44 24 58 	movq	88(%rsp), %rax
  438715:	48 89 44 24 70 	movq	%rax, 112(%rsp)
  43871a:	e8 e1 93 fe ff 	callq	-93215 <runtime.printlock>
  43871f:	48 8d 05 96 17 03 00 	leaq	202646(%rip), %rax
  438726:	48 89 04 24 	movq	%rax, (%rsp)
  43872a:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  438733:	e8 08 9d fe ff 	callq	-90872 <runtime.printstring>
  438738:	48 63 44 24 54 	movslq	84(%rsp), %rax
  43873d:	48 89 04 24 	movq	%rax, (%rsp)
  438741:	e8 3a 9b fe ff 	callq	-91334 <runtime.printint>
  438746:	48 8d 05 b5 1b 03 00 	leaq	203701(%rip), %rax
  43874d:	48 89 04 24 	movq	%rax, (%rsp)
  438751:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  43875a:	e8 e1 9c fe ff 	callq	-90911 <runtime.printstring>
  43875f:	48 8b 44 24 70 	movq	112(%rsp), %rax
  438764:	48 89 04 24 	movq	%rax, (%rsp)
  438768:	e8 83 9b fe ff 	callq	-91261 <runtime.printhex>
  43876d:	e8 1e 96 fe ff 	callq	-92642 <runtime.printnl>
  438772:	e8 09 94 fe ff 	callq	-93175 <runtime.printunlock>
  438777:	48 8b b4 24 b0 00 00 00 	movq	176(%rsp), %rsi
  43877f:	48 8b 7c 24 68 	movq	104(%rsp), %rdi
  438784:	48 8b 54 24 60 	movq	96(%rsp), %rdx
  438789:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  438791:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  438796:	48 8b 1e 	movq	(%rsi), %rbx
  438799:	48 39 cb 	cmpq	%rcx, %rbx
  43879c:	48 8b 8c 24 98 00 00 00 	movq	152(%rsp), %rcx
  4387a4:	0f 94 01 	sete	(%rcx)
  4387a7:	48 89 04 24 	movq	%rax, (%rsp)
  4387ab:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  4387b0:	48 89 7c 24 10 	movq	%rdi, 16(%rsp)
  4387b5:	48 8d 44 24 58 	leaq	88(%rsp), %rax
  4387ba:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4387bf:	48 8d 54 24 54 	leaq	84(%rsp), %rdx
  4387c4:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  4387c9:	e8 02 08 00 00 	callq	2050 <runtime.step>
  4387ce:	48 8b 44 24 40 	movq	64(%rsp), %rax
  4387d3:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  4387d8:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  4387dd:	0f b6 5c 24 48 	movzbl	72(%rsp), %ebx
  4387e2:	84 db 	testb	%bl, %bl
  4387e4:	0f 85 14 ff ff ff 	jne	-236 <runtime.pcvalue+0x3ae>
  4387ea:	eb 74 	jmp	116 <runtime.pcvalue+0x510>
  4387ec:	c7 84 24 e0 00 00 00 ff ff ff ff 	movl	$4294967295, 224(%rsp)
  4387f7:	48 8b ac 24 a0 00 00 00 	movq	160(%rsp), %rbp
  4387ff:	48 81 c4 a8 00 00 00 	addq	$168, %rsp
  438806:	c3 	retq
  438807:	0f b6 84 24 d8 00 00 00 	movzbl	216(%rsp), %eax
  43880f:	84 c0 	testb	%al, %al
  438811:	74 0a 	je	10 <runtime.pcvalue+0x4cd>
  438813:	8b 05 db b0 08 00 	movl	569563(%rip), %eax
  438819:	85 c0 	testl	%eax, %eax
  43881b:	74 73 	je	115 <runtime.pcvalue+0x540>
  43881d:	c7 84 24 e0 00 00 00 ff ff ff ff 	movl	$4294967295, 224(%rsp)
  438828:	48 8b ac 24 a0 00 00 00 	movq	160(%rsp), %rbp
  438830:	48 81 c4 a8 00 00 00 	addq	$168, %rsp
  438837:	c3 	retq
  438838:	48 8b 94 24 c8 00 00 00 	movq	200(%rsp), %rdx
  438840:	e9 a3 fb ff ff 	jmp	-1117 <runtime.pcvalue+0x98>
  438845:	c7 84 24 e0 00 00 00 ff ff ff ff 	movl	$4294967295, 224(%rsp)
  438850:	48 8b ac 24 a0 00 00 00 	movq	160(%rsp), %rbp
  438858:	48 81 c4 a8 00 00 00 	addq	$168, %rsp
  43885f:	c3 	retq
  438860:	48 8d 05 a3 38 03 00 	leaq	211107(%rip), %rax
  438867:	48 89 04 24 	movq	%rax, (%rsp)
  43886b:	48 c7 44 24 08 1c 00 00 00 	movq	$28, 8(%rsp)
  438874:	e8 57 89 fe ff 	callq	-95913 <runtime.throw>
  438879:	0f 0b 	ud2
  43887b:	e8 30 72 fe ff 	callq	-101840 <runtime.panicslice>
  438880:	0f 0b 	ud2
  438882:	e8 b9 71 fe ff 	callq	-101959 <runtime.panicindex>
  438887:	0f 0b 	ud2
  438889:	e8 22 72 fe ff 	callq	-101854 <runtime.panicslice>
  43888e:	0f 0b 	ud2
  438890:	48 8b 03 	movq	(%rbx), %rax
  438893:	48 89 44 24 70 	movq	%rax, 112(%rsp)
  438898:	e8 63 92 fe ff 	callq	-93597 <runtime.printlock>
  43889d:	48 8d 05 2a 39 03 00 	leaq	211242(%rip), %rax
  4388a4:	48 89 04 24 	movq	%rax, (%rsp)
  4388a8:	48 c7 44 24 08 1c 00 00 00 	movq	$28, 8(%rsp)
  4388b1:	e8 8a 9b fe ff 	callq	-91254 <runtime.printstring>
  4388b6:	48 8b 44 24 70 	movq	112(%rsp), %rax
  4388bb:	48 89 04 24 	movq	%rax, (%rsp)
  4388bf:	e8 2c 9a fe ff 	callq	-91604 <runtime.printhex>
  4388c4:	e8 c7 94 fe ff 	callq	-92985 <runtime.printnl>
  4388c9:	e8 b2 92 fe ff 	callq	-93518 <runtime.printunlock>
  4388ce:	48 8d 05 db 1f 03 00 	leaq	204763(%rip), %rax
  4388d5:	48 89 04 24 	movq	%rax, (%rsp)
  4388d9:	48 c7 44 24 08 0e 00 00 00 	movq	$14, 8(%rsp)
  4388e2:	e8 e9 88 fe ff 	callq	-96023 <runtime.throw>
  4388e7:	0f 0b 	ud2
  4388e9:	e8 82 bc 00 00 	callq	48258 <runtime.morestack_noctxt>
  4388ee:	e9 5d fa ff ff 	jmp	-1443 <runtime.pcvalue>
  4388f3:	cc 	int3
  4388f4:	cc 	int3
  4388f5:	cc 	int3
  4388f6:	cc 	int3
  4388f7:	cc 	int3
  4388f8:	cc 	int3
  4388f9:	cc 	int3
  4388fa:	cc 	int3
  4388fb:	cc 	int3
  4388fc:	cc 	int3
  4388fd:	cc 	int3
  4388fe:	cc 	int3
  4388ff:	cc 	int3

runtime.funcname:
  438900:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  438909:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43890d:	76 68 	jbe	104 <runtime.funcname+0x77>
  43890f:	48 83 ec 20 	subq	$32, %rsp
  438913:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  438918:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  43891d:	48 8b 44 24 28 	movq	40(%rsp), %rax
  438922:	48 85 c0 	testq	%rax, %rax
  438925:	74 07 	je	7 <runtime.funcname+0x2e>
  438927:	8b 40 08 	movl	8(%rax), %eax
  43892a:	85 c0 	testl	%eax, %eax
  43892c:	75 29 	jne	41 <runtime.funcname+0x57>
  43892e:	31 c0 	xorl	%eax, %eax
  438930:	48 89 04 24 	movq	%rax, (%rsp)
  438934:	e8 b7 ed ff ff 	callq	-4681 <runtime.gostringnocopy>
  438939:	48 8b 44 24 10 	movq	16(%rsp), %rax
  43893e:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  438943:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  438948:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  43894d:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  438952:	48 83 c4 20 	addq	$32, %rsp
  438956:	c3 	retq
  438957:	48 63 c0 	movslq	%eax, %rax
  43895a:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  43895f:	48 8b 51 08 	movq	8(%rcx), %rdx
  438963:	48 8b 09 	movq	(%rcx), %rcx
  438966:	48 39 d0 	cmpq	%rdx, %rax
  438969:	73 05 	jae	5 <runtime.funcname+0x70>
  43896b:	48 01 c8 	addq	%rcx, %rax
  43896e:	eb c0 	jmp	-64 <runtime.funcname+0x30>
  438970:	e8 cb 70 fe ff 	callq	-102197 <runtime.panicindex>
  438975:	0f 0b 	ud2
  438977:	e8 f4 bb 00 00 	callq	48116 <runtime.morestack_noctxt>
  43897c:	eb 82 	jmp	-126 <runtime.funcname>
  43897e:	cc 	int3
  43897f:	cc 	int3

runtime.funcnameFromNameoff:
  438980:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  438989:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43898d:	76 73 	jbe	115 <runtime.funcnameFromNameoff+0x82>
  43898f:	48 83 ec 20 	subq	$32, %rsp
  438993:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  438998:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  43899d:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4389a2:	48 85 c0 	testq	%rax, %rax
  4389a5:	74 42 	je	66 <runtime.funcnameFromNameoff+0x69>
  4389a7:	8b 44 24 38 	movl	56(%rsp), %eax
  4389ab:	48 63 c0 	movslq	%eax, %rax
  4389ae:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4389b3:	48 8b 11 	movq	(%rcx), %rdx
  4389b6:	48 8b 49 08 	movq	8(%rcx), %rcx
  4389ba:	48 39 c8 	cmpq	%rcx, %rax
  4389bd:	73 3c 	jae	60 <runtime.funcnameFromNameoff+0x7b>
  4389bf:	48 01 d0 	addq	%rdx, %rax
  4389c2:	48 89 04 24 	movq	%rax, (%rsp)
  4389c6:	e8 25 ed ff ff 	callq	-4827 <runtime.gostringnocopy>
  4389cb:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4389d0:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  4389d5:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  4389da:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  4389df:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  4389e4:	48 83 c4 20 	addq	$32, %rsp
  4389e8:	c3 	retq
  4389e9:	0f 57 c0 	xorps	%xmm0, %xmm0
  4389ec:	0f 11 44 24 40 	movups	%xmm0, 64(%rsp)
  4389f1:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  4389f6:	48 83 c4 20 	addq	$32, %rsp
  4389fa:	c3 	retq
  4389fb:	e8 40 70 fe ff 	callq	-102336 <runtime.panicindex>
  438a00:	0f 0b 	ud2
  438a02:	e8 69 bb 00 00 	callq	47977 <runtime.morestack_noctxt>
  438a07:	e9 74 ff ff ff 	jmp	-140 <runtime.funcnameFromNameoff>
  438a0c:	cc 	int3
  438a0d:	cc 	int3
  438a0e:	cc 	int3
  438a0f:	cc 	int3

runtime.funcfile:
  438a10:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  438a19:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  438a1d:	0f 86 90 00 00 00 	jbe	144 <runtime.funcfile+0xa3>
  438a23:	48 83 ec 20 	subq	$32, %rsp
  438a27:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  438a2c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  438a31:	48 8b 44 24 28 	movq	40(%rsp), %rax
  438a36:	48 85 c0 	testq	%rax, %rax
  438a39:	74 52 	je	82 <runtime.funcfile+0x7d>
  438a3b:	48 8b 44 24 30 	movq	48(%rsp), %rax
  438a40:	48 8b 48 08 	movq	8(%rax), %rcx
  438a44:	48 8b 10 	movq	(%rax), %rdx
  438a47:	48 8b 58 38 	movq	56(%rax), %rbx
  438a4b:	48 8b 40 30 	movq	48(%rax), %rax
  438a4f:	8b 74 24 38 	movl	56(%rsp), %esi
  438a53:	48 63 f6 	movslq	%esi, %rsi
  438a56:	48 39 de 	cmpq	%rbx, %rsi
  438a59:	73 51 	jae	81 <runtime.funcfile+0x9c>
  438a5b:	8b 04 b0 	movl	(%rax,%rsi,4), %eax
  438a5e:	48 39 c8 	cmpq	%rcx, %rax
  438a61:	73 49 	jae	73 <runtime.funcfile+0x9c>
  438a63:	48 01 d0 	addq	%rdx, %rax
  438a66:	48 89 04 24 	movq	%rax, (%rsp)
  438a6a:	e8 81 ec ff ff 	callq	-4991 <runtime.gostringnocopy>
  438a6f:	48 8b 44 24 08 	movq	8(%rsp), %rax
  438a74:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  438a79:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  438a7e:	48 89 4c 24 48 	movq	%rcx, 72(%rsp)
  438a83:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  438a88:	48 83 c4 20 	addq	$32, %rsp
  438a8c:	c3 	retq
  438a8d:	48 8d 05 c7 11 03 00 	leaq	201159(%rip), %rax
  438a94:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  438a99:	48 c7 44 24 48 01 00 00 00 	movq	$1, 72(%rsp)
  438aa2:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  438aa7:	48 83 c4 20 	addq	$32, %rsp
  438aab:	c3 	retq
  438aac:	e8 8f 6f fe ff 	callq	-102513 <runtime.panicindex>
  438ab1:	0f 0b 	ud2
  438ab3:	e8 b8 ba 00 00 	callq	47800 <runtime.morestack_noctxt>
  438ab8:	e9 53 ff ff ff 	jmp	-173 <runtime.funcfile>
  438abd:	cc 	int3
  438abe:	cc 	int3
  438abf:	cc 	int3

runtime.funcline1:
  438ac0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  438ac9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  438acd:	0f 86 6c 01 00 00 	jbe	364 <runtime.funcline1+0x17f>
  438ad3:	48 83 ec 50 	subq	$80, %rsp
  438ad7:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  438adc:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  438ae1:	48 8b 44 24 58 	movq	88(%rsp), %rax
  438ae6:	48 85 c0 	testq	%rax, %rax
  438ae9:	0f 84 1c 01 00 00 	je	284 <runtime.funcline1+0x14b>
  438aef:	8b 48 18 	movl	24(%rax), %ecx
  438af2:	89 4c 24 10 	movl	%ecx, 16(%rsp)
  438af6:	48 89 04 24 	movq	%rax, (%rsp)
  438afa:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  438aff:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  438b04:	48 8b 54 24 68 	movq	104(%rsp), %rdx
  438b09:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  438b0e:	48 c7 44 24 20 00 00 00 00 	movq	$0, 32(%rsp)
  438b17:	0f b6 5c 24 70 	movzbl	112(%rsp), %ebx
  438b1c:	88 5c 24 28 	movb	%bl, 40(%rsp)
  438b20:	e8 2b f8 ff ff 	callq	-2005 <runtime.pcvalue>
  438b25:	48 63 44 24 30 	movslq	48(%rsp), %rax
  438b2a:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  438b2f:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  438b34:	8b 51 1c 	movl	28(%rcx), %edx
  438b37:	89 54 24 10 	movl	%edx, 16(%rsp)
  438b3b:	48 89 0c 24 	movq	%rcx, (%rsp)
  438b3f:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  438b44:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  438b49:	48 8b 54 24 68 	movq	104(%rsp), %rdx
  438b4e:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  438b53:	48 c7 44 24 20 00 00 00 00 	movq	$0, 32(%rsp)
  438b5c:	0f b6 54 24 70 	movzbl	112(%rsp), %edx
  438b61:	88 54 24 28 	movb	%dl, 40(%rsp)
  438b65:	e8 e6 f7 ff ff 	callq	-2074 <runtime.pcvalue>
  438b6a:	8b 44 24 30 	movl	48(%rsp), %eax
  438b6e:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  438b73:	48 83 f9 ff 	cmpq	$-1, %rcx
  438b77:	75 2d 	jne	45 <runtime.funcline1+0xe6>
  438b79:	48 8d 05 db 10 03 00 	leaq	200923(%rip), %rax
  438b80:	48 89 44 24 78 	movq	%rax, 120(%rsp)
  438b85:	48 c7 84 24 80 00 00 00 01 00 00 00 	movq	$1, 128(%rsp)
  438b91:	c7 84 24 88 00 00 00 00 00 00 00 	movl	$0, 136(%rsp)
  438b9c:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  438ba1:	48 83 c4 50 	addq	$80, %rsp
  438ba5:	c3 	retq
  438ba6:	83 f8 ff 	cmpl	$-1, %eax
  438ba9:	74 ce 	je	-50 <runtime.funcline1+0xb9>
  438bab:	48 8b 54 24 60 	movq	96(%rsp), %rdx
  438bb0:	48 8b 5a 38 	movq	56(%rdx), %rbx
  438bb4:	48 8b 72 30 	movq	48(%rdx), %rsi
  438bb8:	48 39 d9 	cmpq	%rbx, %rcx
  438bbb:	7d bc 	jge	-68 <runtime.funcline1+0xb9>
  438bbd:	48 8b 1a 	movq	(%rdx), %rbx
  438bc0:	48 8b 52 08 	movq	8(%rdx), %rdx
  438bc4:	73 72 	jae	114 <runtime.funcline1+0x178>
  438bc6:	8b 0c 8e 	movl	(%rsi,%rcx,4), %ecx
  438bc9:	48 39 d1 	cmpq	%rdx, %rcx
  438bcc:	73 6a 	jae	106 <runtime.funcline1+0x178>
  438bce:	89 44 24 3c 	movl	%eax, 60(%rsp)
  438bd2:	48 8d 04 0b 	leaq	(%rbx,%rcx), %rax
  438bd6:	48 89 04 24 	movq	%rax, (%rsp)
  438bda:	e8 11 eb ff ff 	callq	-5359 <runtime.gostringnocopy>
  438bdf:	48 8b 44 24 10 	movq	16(%rsp), %rax
  438be4:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  438be9:	48 89 4c 24 78 	movq	%rcx, 120(%rsp)
  438bee:	48 89 84 24 80 00 00 00 	movq	%rax, 128(%rsp)
  438bf6:	8b 44 24 3c 	movl	60(%rsp), %eax
  438bfa:	89 84 24 88 00 00 00 	movl	%eax, 136(%rsp)
  438c01:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  438c06:	48 83 c4 50 	addq	$80, %rsp
  438c0a:	c3 	retq
  438c0b:	48 8d 05 49 10 03 00 	leaq	200777(%rip), %rax
  438c12:	48 89 44 24 78 	movq	%rax, 120(%rsp)
  438c17:	48 c7 84 24 80 00 00 00 01 00 00 00 	movq	$1, 128(%rsp)
  438c23:	c7 84 24 88 00 00 00 00 00 00 00 	movl	$0, 136(%rsp)
  438c2e:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  438c33:	48 83 c4 50 	addq	$80, %rsp
  438c37:	c3 	retq
  438c38:	e8 03 6e fe ff 	callq	-102909 <runtime.panicindex>
  438c3d:	0f 0b 	ud2
  438c3f:	e8 2c b9 00 00 	callq	47404 <runtime.morestack_noctxt>
  438c44:	e9 77 fe ff ff 	jmp	-393 <runtime.funcline1>
  438c49:	cc 	int3
  438c4a:	cc 	int3
  438c4b:	cc 	int3
  438c4c:	cc 	int3
  438c4d:	cc 	int3
  438c4e:	cc 	int3
  438c4f:	cc 	int3

runtime.funcline:
  438c50:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  438c59:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  438c5d:	76 5b 	jbe	91 <runtime.funcline+0x6a>
  438c5f:	48 83 ec 40 	subq	$64, %rsp
  438c63:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  438c68:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  438c6d:	48 8b 44 24 48 	movq	72(%rsp), %rax
  438c72:	48 89 04 24 	movq	%rax, (%rsp)
  438c76:	48 8b 44 24 50 	movq	80(%rsp), %rax
  438c7b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  438c80:	48 8b 44 24 58 	movq	88(%rsp), %rax
  438c85:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  438c8a:	c6 44 24 18 01 	movb	$1, 24(%rsp)
  438c8f:	e8 2c fe ff ff 	callq	-468 <runtime.funcline1>
  438c94:	48 8b 44 24 28 	movq	40(%rsp), %rax
  438c99:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  438c9e:	8b 54 24 30 	movl	48(%rsp), %edx
  438ca2:	48 89 4c 24 60 	movq	%rcx, 96(%rsp)
  438ca7:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  438cac:	89 54 24 70 	movl	%edx, 112(%rsp)
  438cb0:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  438cb5:	48 83 c4 40 	addq	$64, %rsp
  438cb9:	c3 	retq
  438cba:	e8 b1 b8 00 00 	callq	47281 <runtime.morestack_noctxt>
  438cbf:	eb 8f 	jmp	-113 <runtime.funcline>
  438cc1:	cc 	int3
  438cc2:	cc 	int3
  438cc3:	cc 	int3
  438cc4:	cc 	int3
  438cc5:	cc 	int3
  438cc6:	cc 	int3
  438cc7:	cc 	int3
  438cc8:	cc 	int3
  438cc9:	cc 	int3
  438cca:	cc 	int3
  438ccb:	cc 	int3
  438ccc:	cc 	int3
  438ccd:	cc 	int3
  438cce:	cc 	int3
  438ccf:	cc 	int3

runtime.funcspdelta:
  438cd0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  438cd9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  438cdd:	0f 86 48 01 00 00 	jbe	328 <runtime.funcspdelta+0x15b>
  438ce3:	48 83 ec 68 	subq	$104, %rsp
  438ce7:	48 89 6c 24 60 	movq	%rbp, 96(%rsp)
  438cec:	48 8d 6c 24 60 	leaq	96(%rsp), %rbp
  438cf1:	48 8b 44 24 70 	movq	112(%rsp), %rax
  438cf6:	8b 48 14 	movl	20(%rax), %ecx
  438cf9:	89 4c 24 10 	movl	%ecx, 16(%rsp)
  438cfd:	48 89 04 24 	movq	%rax, (%rsp)
  438d01:	48 8b 4c 24 78 	movq	120(%rsp), %rcx
  438d06:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  438d0b:	48 8b 94 24 80 00 00 00 	movq	128(%rsp), %rdx
  438d13:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  438d18:	48 8b 9c 24 88 00 00 00 	movq	136(%rsp), %rbx
  438d20:	48 89 5c 24 20 	movq	%rbx, 32(%rsp)
  438d25:	c6 44 24 28 01 	movb	$1, 40(%rsp)
  438d2a:	e8 21 f6 ff ff 	callq	-2527 <runtime.pcvalue>
  438d2f:	8b 44 24 30 	movl	48(%rsp), %eax
  438d33:	a9 07 00 00 00 	testl	$7, %eax
  438d38:	75 11 	jne	17 <runtime.funcspdelta+0x7b>
  438d3a:	89 84 24 90 00 00 00 	movl	%eax, 144(%rsp)
  438d41:	48 8b 6c 24 60 	movq	96(%rsp), %rbp
  438d46:	48 83 c4 68 	addq	$104, %rsp
  438d4a:	c3 	retq
  438d4b:	89 44 24 3c 	movl	%eax, 60(%rsp)
  438d4f:	48 8b 44 24 70 	movq	112(%rsp), %rax
  438d54:	48 89 04 24 	movq	%rax, (%rsp)
  438d58:	48 8b 4c 24 78 	movq	120(%rsp), %rcx
  438d5d:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  438d62:	e8 99 fb ff ff 	callq	-1127 <runtime.funcname>
  438d67:	48 8b 44 24 18 	movq	24(%rsp), %rax
  438d6c:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  438d71:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  438d76:	48 89 4c 24 58 	movq	%rcx, 88(%rsp)
  438d7b:	48 8b 54 24 70 	movq	112(%rsp), %rdx
  438d80:	48 8b 1a 	movq	(%rdx), %rbx
  438d83:	48 89 5c 24 50 	movq	%rbx, 80(%rsp)
  438d88:	48 63 52 14 	movslq	20(%rdx), %rdx
  438d8c:	48 89 54 24 48 	movq	%rdx, 72(%rsp)
  438d91:	e8 6a 8d fe ff 	callq	-94870 <runtime.printlock>
  438d96:	48 8d 05 65 1d 03 00 	leaq	204133(%rip), %rax
  438d9d:	48 89 04 24 	movq	%rax, (%rsp)
  438da1:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  438daa:	e8 91 96 fe ff 	callq	-92527 <runtime.printstring>
  438daf:	48 8b 44 24 58 	movq	88(%rsp), %rax
  438db4:	48 89 04 24 	movq	%rax, (%rsp)
  438db8:	48 8b 44 24 40 	movq	64(%rsp), %rax
  438dbd:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  438dc2:	e8 79 96 fe ff 	callq	-92551 <runtime.printstring>
  438dc7:	e8 74 8f fe ff 	callq	-94348 <runtime.printsp>
  438dcc:	48 8b 44 24 50 	movq	80(%rsp), %rax
  438dd1:	48 89 04 24 	movq	%rax, (%rsp)
  438dd5:	e8 16 95 fe ff 	callq	-92906 <runtime.printhex>
  438dda:	e8 61 8f fe ff 	callq	-94367 <runtime.printsp>
  438ddf:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  438de7:	48 89 04 24 	movq	%rax, (%rsp)
  438deb:	e8 00 95 fe ff 	callq	-92928 <runtime.printhex>
  438df0:	e8 4b 8f fe ff 	callq	-94389 <runtime.printsp>
  438df5:	48 8b 44 24 48 	movq	72(%rsp), %rax
  438dfa:	48 89 04 24 	movq	%rax, (%rsp)
  438dfe:	e8 ed 94 fe ff 	callq	-92947 <runtime.printhex>
  438e03:	e8 38 8f fe ff 	callq	-94408 <runtime.printsp>
  438e08:	8b 44 24 3c 	movl	60(%rsp), %eax
  438e0c:	48 63 c8 	movslq	%eax, %rcx
  438e0f:	48 89 0c 24 	movq	%rcx, (%rsp)
  438e13:	e8 68 94 fe ff 	callq	-93080 <runtime.printint>
  438e18:	e8 73 8f fe ff 	callq	-94349 <runtime.printnl>
  438e1d:	e8 5e 8d fe ff 	callq	-94882 <runtime.printunlock>
  438e22:	8b 44 24 3c 	movl	60(%rsp), %eax
  438e26:	e9 0f ff ff ff 	jmp	-241 <runtime.funcspdelta+0x6a>
  438e2b:	e8 40 b7 00 00 	callq	46912 <runtime.morestack_noctxt>
  438e30:	e9 9b fe ff ff 	jmp	-357 <runtime.funcspdelta>
  438e35:	cc 	int3
  438e36:	cc 	int3
  438e37:	cc 	int3
  438e38:	cc 	int3
  438e39:	cc 	int3
  438e3a:	cc 	int3
  438e3b:	cc 	int3
  438e3c:	cc 	int3
  438e3d:	cc 	int3
  438e3e:	cc 	int3
  438e3f:	cc 	int3

runtime.pcdatavalue:
  438e40:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  438e49:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  438e4d:	0f 86 84 00 00 00 	jbe	132 <runtime.pcdatavalue+0x97>
  438e53:	48 83 ec 40 	subq	$64, %rsp
  438e57:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  438e5c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  438e61:	8b 44 24 58 	movl	88(%rsp), %eax
  438e65:	85 c0 	testl	%eax, %eax
  438e67:	7d 12 	jge	18 <runtime.pcdatavalue+0x3b>
  438e69:	c7 44 24 70 ff ff ff ff 	movl	$4294967295, 112(%rsp)
  438e71:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  438e76:	48 83 c4 40 	addq	$64, %rsp
  438e7a:	c3 	retq
  438e7b:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  438e80:	8b 51 20 	movl	32(%rcx), %edx
  438e83:	39 d0 	cmpl	%edx, %eax
  438e85:	7d e2 	jge	-30 <runtime.pcdatavalue+0x29>
  438e87:	48 8d 51 24 	leaq	36(%rcx), %rdx
  438e8b:	48 63 c0 	movslq	%eax, %rax
  438e8e:	48 8d 44 82 04 	leaq	4(%rdx,%rax,4), %rax
  438e93:	8b 00 	movl	(%rax), %eax
  438e95:	48 89 0c 24 	movq	%rcx, (%rsp)
  438e99:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  438e9e:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  438ea3:	89 44 24 10 	movl	%eax, 16(%rsp)
  438ea7:	48 8b 44 24 60 	movq	96(%rsp), %rax
  438eac:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  438eb1:	48 8b 44 24 68 	movq	104(%rsp), %rax
  438eb6:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  438ebb:	c6 44 24 28 01 	movb	$1, 40(%rsp)
  438ec0:	e8 8b f4 ff ff 	callq	-2933 <runtime.pcvalue>
  438ec5:	8b 44 24 30 	movl	48(%rsp), %eax
  438ec9:	89 44 24 70 	movl	%eax, 112(%rsp)
  438ecd:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  438ed2:	48 83 c4 40 	addq	$64, %rsp
  438ed6:	c3 	retq
  438ed7:	e8 94 b6 00 00 	callq	46740 <runtime.morestack_noctxt>
  438edc:	e9 5f ff ff ff 	jmp	-161 <runtime.pcdatavalue>
  438ee1:	cc 	int3
  438ee2:	cc 	int3
  438ee3:	cc 	int3
  438ee4:	cc 	int3
  438ee5:	cc 	int3
  438ee6:	cc 	int3
  438ee7:	cc 	int3
  438ee8:	cc 	int3
  438ee9:	cc 	int3
  438eea:	cc 	int3
  438eeb:	cc 	int3
  438eec:	cc 	int3
  438eed:	cc 	int3
  438eee:	cc 	int3
  438eef:	cc 	int3

runtime.funcdata:
  438ef0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  438ef9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  438efd:	0f 86 bc 00 00 00 	jbe	188 <runtime.funcdata+0xcf>
  438f03:	48 83 ec 20 	subq	$32, %rsp
  438f07:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  438f0c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  438f11:	8b 44 24 38 	movl	56(%rsp), %eax
  438f15:	85 c0 	testl	%eax, %eax
  438f17:	7d 13 	jge	19 <runtime.funcdata+0x3c>
  438f19:	48 c7 44 24 40 00 00 00 00 	movq	$0, 64(%rsp)
  438f22:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  438f27:	48 83 c4 20 	addq	$32, %rsp
  438f2b:	c3 	retq
  438f2c:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  438f31:	8b 51 24 	movl	36(%rcx), %edx
  438f34:	48 8d 59 24 	leaq	36(%rcx), %rbx
  438f38:	39 d0 	cmpl	%edx, %eax
  438f3a:	7d dd 	jge	-35 <runtime.funcdata+0x29>
  438f3c:	48 63 51 20 	movslq	32(%rcx), %rdx
  438f40:	48 8d 54 93 04 	leaq	4(%rbx,%rdx,4), %rdx
  438f45:	48 89 d3 	movq	%rdx, %rbx
  438f48:	0f ba e3 02 	btl	$2, %ebx
  438f4c:	73 6c 	jae	108 <runtime.funcdata+0xca>
  438f4e:	0f ba e1 02 	btl	$2, %ecx
  438f52:	72 20 	jb	32 <runtime.funcdata+0x84>
  438f54:	48 8d 4a 04 	leaq	4(%rdx), %rcx
  438f58:	48 63 c0 	movslq	%eax, %rax
  438f5b:	48 8d 14 c1 	leaq	(%rcx,%rax,8), %rdx
  438f5f:	84 02 	testb	%al, (%rdx)
  438f61:	48 8b 04 c1 	movq	(%rcx,%rax,8), %rax
  438f65:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  438f6a:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  438f6f:	48 83 c4 20 	addq	$32, %rsp
  438f73:	c3 	retq
  438f74:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  438f79:	e8 82 8b fe ff 	callq	-95358 <runtime.printlock>
  438f7e:	48 8d 05 58 2b 03 00 	leaq	207704(%rip), %rax
  438f85:	48 89 04 24 	movq	%rax, (%rsp)
  438f89:	48 c7 44 24 08 19 00 00 00 	movq	$25, 8(%rsp)
  438f92:	e8 a9 94 fe ff 	callq	-93015 <runtime.printstring>
  438f97:	48 8b 44 24 28 	movq	40(%rsp), %rax
  438f9c:	48 89 04 24 	movq	%rax, (%rsp)
  438fa0:	e8 5b 94 fe ff 	callq	-93093 <runtime.printpointer>
  438fa5:	e8 e6 8d fe ff 	callq	-94746 <runtime.printnl>
  438faa:	e8 d1 8b fe ff 	callq	-95279 <runtime.printunlock>
  438faf:	8b 44 24 38 	movl	56(%rsp), %eax
  438fb3:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  438fb8:	eb 9a 	jmp	-102 <runtime.funcdata+0x64>
  438fba:	48 89 d1 	movq	%rdx, %rcx
  438fbd:	eb 99 	jmp	-103 <runtime.funcdata+0x68>
  438fbf:	e8 ac b5 00 00 	callq	46508 <runtime.morestack_noctxt>
  438fc4:	e9 27 ff ff ff 	jmp	-217 <runtime.funcdata>
  438fc9:	cc 	int3
  438fca:	cc 	int3
  438fcb:	cc 	int3
  438fcc:	cc 	int3
  438fcd:	cc 	int3
  438fce:	cc 	int3
  438fcf:	cc 	int3

runtime.step:
  438fd0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  438fd9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  438fdd:	0f 86 a2 01 00 00 	jbe	418 <runtime.step+0x1b5>
  438fe3:	48 83 ec 38 	subq	$56, %rsp
  438fe7:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  438fec:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  438ff1:	48 8b 44 24 48 	movq	72(%rsp), %rax
  438ff6:	48 85 c0 	testq	%rax, %rax
  438ff9:	0f 86 7f 01 00 00 	jbe	383 <runtime.step+0x1ae>
  438fff:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  439004:	0f b6 11 	movzbl	(%rcx), %edx
  439007:	85 d2 	testl	%edx, %edx
  439009:	75 0d 	jne	13 <runtime.step+0x48>
  43900b:	0f b6 5c 24 68 	movzbl	104(%rsp), %ebx
  439010:	84 db 	testb	%bl, %bl
  439012:	0f 84 2e 01 00 00 	je	302 <runtime.step+0x176>
  439018:	0f ba e2 07 	btl	$7, %edx
  43901c:	0f 82 f5 00 00 00 	jb	245 <runtime.step+0x147>
  439022:	bb 01 00 00 00 	movl	$1, %ebx
  439027:	48 39 c3 	cmpq	%rax, %rbx
  43902a:	0f 87 47 01 00 00 	ja	327 <runtime.step+0x1a7>
  439030:	48 29 d8 	subq	%rbx, %rax
  439033:	48 8b 74 24 50 	movq	80(%rsp), %rsi
  439038:	48 29 de 	subq	%rbx, %rsi
  43903b:	48 89 f7 	movq	%rsi, %rdi
  43903e:	48 f7 de 	negq	%rsi
  439041:	48 c1 fe 3f 	sarq	$63, %rsi
  439045:	48 21 f3 	andq	%rsi, %rbx
  439048:	48 8d 34 19 	leaq	(%rcx,%rbx), %rsi
  43904c:	0f ba e2 00 	btl	$0, %edx
  439050:	0f 83 ba 00 00 00 	jae	186 <runtime.step+0x140>
  439056:	d1 ea 	shrl	%edx
  439058:	f7 d2 	notl	%edx
  43905a:	48 85 c0 	testq	%rax, %rax
  43905d:	0f 86 0d 01 00 00 	jbe	269 <runtime.step+0x1a0>
  439063:	0f b6 0c 19 	movzbl	(%rcx,%rbx), %ecx
  439067:	0f ba e1 07 	btl	$7, %ecx
  43906b:	72 5d 	jb	93 <runtime.step+0xfa>
  43906d:	bb 01 00 00 00 	movl	$1, %ebx
  439072:	48 39 c3 	cmpq	%rax, %rbx
  439075:	0f 87 ee 00 00 00 	ja	238 <runtime.step+0x199>
  43907b:	4c 8b 44 24 58 	movq	88(%rsp), %r8
  439080:	49 03 08 	addq	(%r8), %rcx
  439083:	49 89 08 	movq	%rcx, (%r8)
  439086:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  43908b:	03 11 	addl	(%rcx), %edx
  43908d:	89 11 	movl	%edx, (%rcx)
  43908f:	48 29 df 	subq	%rbx, %rdi
  439092:	48 89 f9 	movq	%rdi, %rcx
  439095:	48 f7 df 	negq	%rdi
  439098:	48 c1 ff 3f 	sarq	$63, %rdi
  43909c:	48 21 df 	andq	%rbx, %rdi
  43909f:	48 8d 14 3e 	leaq	(%rsi,%rdi), %rdx
  4390a3:	48 89 54 24 70 	movq	%rdx, 112(%rsp)
  4390a8:	48 29 d8 	subq	%rbx, %rax
  4390ab:	48 89 44 24 78 	movq	%rax, 120(%rsp)
  4390b0:	48 89 8c 24 80 00 00 00 	movq	%rcx, 128(%rsp)
  4390b8:	c6 84 24 88 00 00 00 01 	movb	$1, 136(%rsp)
  4390c0:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  4390c5:	48 83 c4 38 	addq	$56, %rsp
  4390c9:	c3 	retq
  4390ca:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  4390cf:	48 89 7c 24 28 	movq	%rdi, 40(%rsp)
  4390d4:	48 89 74 24 40 	movq	%rsi, 64(%rsp)
  4390d9:	89 54 24 24 	movl	%edx, 36(%rsp)
  4390dd:	48 89 34 24 	movq	%rsi, (%rsp)
  4390e1:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4390e6:	48 89 7c 24 10 	movq	%rdi, 16(%rsp)
  4390eb:	e8 a0 00 00 00 	callq	160 <runtime.readvarint>
  4390f0:	8b 5c 24 18 	movl	24(%rsp), %ebx
  4390f4:	8b 4c 24 1c 	movl	28(%rsp), %ecx
  4390f8:	48 8b 44 24 48 	movq	72(%rsp), %rax
  4390fd:	8b 54 24 24 	movl	36(%rsp), %edx
  439101:	48 8b 74 24 40 	movq	64(%rsp), %rsi
  439106:	48 8b 7c 24 28 	movq	40(%rsp), %rdi
  43910b:	e9 62 ff ff ff 	jmp	-158 <runtime.step+0xa2>
  439110:	d1 ea 	shrl	%edx
  439112:	e9 43 ff ff ff 	jmp	-189 <runtime.step+0x8a>
  439117:	48 89 0c 24 	movq	%rcx, (%rsp)
  43911b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  439120:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  439125:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  43912a:	e8 61 00 00 00 	callq	97 <runtime.readvarint>
  43912f:	8b 5c 24 18 	movl	24(%rsp), %ebx
  439133:	8b 54 24 1c 	movl	28(%rsp), %edx
  439137:	48 8b 44 24 48 	movq	72(%rsp), %rax
  43913c:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  439141:	e9 e1 fe ff ff 	jmp	-287 <runtime.step+0x57>
  439146:	48 c7 44 24 70 00 00 00 00 	movq	$0, 112(%rsp)
  43914f:	0f 57 c0 	xorps	%xmm0, %xmm0
  439152:	0f 11 44 24 78 	movups	%xmm0, 120(%rsp)
  439157:	c6 84 24 88 00 00 00 00 	movb	$0, 136(%rsp)
  43915f:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  439164:	48 83 c4 38 	addq	$56, %rsp
  439168:	c3 	retq
  439169:	e8 42 69 fe ff 	callq	-104126 <runtime.panicslice>
  43916e:	0f 0b 	ud2
  439170:	e8 cb 68 fe ff 	callq	-104245 <runtime.panicindex>
  439175:	0f 0b 	ud2
  439177:	e8 34 69 fe ff 	callq	-104140 <runtime.panicslice>
  43917c:	0f 0b 	ud2
  43917e:	e8 bd 68 fe ff 	callq	-104259 <runtime.panicindex>
  439183:	0f 0b 	ud2
  439185:	e8 e6 b3 00 00 	callq	46054 <runtime.morestack_noctxt>
  43918a:	e9 41 fe ff ff 	jmp	-447 <runtime.step>
  43918f:	cc 	int3

runtime.readvarint:
  439190:	48 83 ec 08 	subq	$8, %rsp
  439194:	48 89 2c 24 	movq	%rbp, (%rsp)
  439198:	48 8d 2c 24 	leaq	(%rsp), %rbp
  43919c:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4391a1:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  4391a6:	31 c9 	xorl	%ecx, %ecx
  4391a8:	89 cb 	movl	%ecx, %ebx
  4391aa:	89 de 	movl	%ebx, %esi
  4391ac:	eb 06 	jmp	6 <runtime.readvarint+0x24>
  4391ae:	8d 71 07 	leal	7(%rcx), %esi
  4391b1:	44 89 c1 	movl	%r8d, %ecx
  4391b4:	48 39 d1 	cmpq	%rdx, %rcx
  4391b7:	73 2c 	jae	44 <runtime.readvarint+0x55>
  4391b9:	0f b6 3c 08 	movzbl	(%rax,%rcx), %edi
  4391bd:	44 8d 41 01 	leal	1(%rcx), %r8d
  4391c1:	41 89 f9 	movl	%edi, %r9d
  4391c4:	83 e7 7f 	andl	$127, %edi
  4391c7:	89 f1 	movl	%esi, %ecx
  4391c9:	d3 e7 	shll	%cl, %edi
  4391cb:	09 fb 	orl	%edi, %ebx
  4391cd:	41 f6 c1 80 	testb	$-128, %r9b
  4391d1:	75 db 	jne	-37 <runtime.readvarint+0x1e>
  4391d3:	44 89 44 24 28 	movl	%r8d, 40(%rsp)
  4391d8:	89 5c 24 2c 	movl	%ebx, 44(%rsp)
  4391dc:	48 8b 2c 24 	movq	(%rsp), %rbp
  4391e0:	48 83 c4 08 	addq	$8, %rsp
  4391e4:	c3 	retq
  4391e5:	e8 56 68 fe ff 	callq	-104362 <runtime.panicindex>
  4391ea:	0f 0b 	ud2
  4391ec:	cc 	int3
  4391ed:	cc 	int3
  4391ee:	cc 	int3
  4391ef:	cc 	int3

runtime.stackmapdata:
  4391f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4391f9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4391fd:	76 63 	jbe	99 <runtime.stackmapdata+0x72>
  4391ff:	48 83 ec 18 	subq	$24, %rsp
  439203:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  439208:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  43920d:	8b 44 24 28 	movl	40(%rsp), %eax
  439211:	85 c0 	testl	%eax, %eax
  439213:	7c 32 	jl	50 <runtime.stackmapdata+0x57>
  439215:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  43921a:	8b 11 	movl	(%rcx), %edx
  43921c:	39 d0 	cmpl	%edx, %eax
  43921e:	7d 27 	jge	39 <runtime.stackmapdata+0x57>
  439220:	8b 51 04 	movl	4(%rcx), %edx
  439223:	89 54 24 30 	movl	%edx, 48(%rsp)
  439227:	83 c2 07 	addl	$7, %edx
  43922a:	c1 fa 03 	sarl	$3, %edx
  43922d:	0f af c2 	imull	%edx, %eax
  439230:	48 63 c0 	movslq	%eax, %rax
  439233:	48 8d 44 01 08 	leaq	8(%rcx,%rax), %rax
  439238:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  43923d:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  439242:	48 83 c4 18 	addq	$24, %rsp
  439246:	c3 	retq
  439247:	48 8d 05 d5 36 03 00 	leaq	210645(%rip), %rax
  43924e:	48 89 04 24 	movq	%rax, (%rsp)
  439252:	48 c7 44 24 08 20 00 00 00 	movq	$32, 8(%rsp)
  43925b:	e8 70 7f fe ff 	callq	-98448 <runtime.throw>
  439260:	0f 0b 	ud2
  439262:	e8 09 b3 00 00 	callq	45833 <runtime.morestack_noctxt>
  439267:	eb 87 	jmp	-121 <runtime.stackmapdata>
  439269:	cc 	int3
  43926a:	cc 	int3
  43926b:	cc 	int3
  43926c:	cc 	int3
  43926d:	cc 	int3
  43926e:	cc 	int3
  43926f:	cc 	int3

runtime.timejump:
  439270:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  439279:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43927d:	0f 86 b2 00 00 00 	jbe	178 <runtime.timejump+0xc5>
  439283:	48 83 ec 28 	subq	$40, %rsp
  439287:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  43928c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  439291:	48 8b 05 c8 a6 08 00 	movq	566984(%rip), %rax
  439298:	48 85 c0 	testq	%rax, %rax
  43929b:	0f 84 81 00 00 00 	je	129 <runtime.timejump+0xb2>
  4392a1:	31 c0 	xorl	%eax, %eax
  4392a3:	eb 25 	jmp	37 <runtime.timejump+0x5a>
  4392a5:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  4392aa:	48 c1 e0 07 	shlq	$7, %rax
  4392ae:	48 8d 15 eb 0f 07 00 	leaq	462827(%rip), %rdx
  4392b5:	48 8d 04 10 	leaq	(%rax,%rdx), %rax
  4392b9:	48 89 04 24 	movq	%rax, (%rsp)
  4392bd:	e8 5e 02 fd ff 	callq	-196002 <runtime.lock>
  4392c2:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4392c7:	48 ff c0 	incq	%rax
  4392ca:	48 83 f8 40 	cmpq	$64, %rax
  4392ce:	7c d5 	jl	-43 <runtime.timejump+0x35>
  4392d0:	e8 6b 00 00 00 	callq	107 <runtime.timejumpLocked>
  4392d5:	48 8b 04 24 	movq	(%rsp), %rax
  4392d9:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4392de:	31 c9 	xorl	%ecx, %ecx
  4392e0:	eb 2b 	jmp	43 <runtime.timejump+0x9d>
  4392e2:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4392e7:	48 c1 e1 07 	shlq	$7, %rcx
  4392eb:	48 8d 15 ae 0f 07 00 	leaq	462766(%rip), %rdx
  4392f2:	48 8d 0c 11 	leaq	(%rcx,%rdx), %rcx
  4392f6:	48 89 0c 24 	movq	%rcx, (%rsp)
  4392fa:	e8 c1 03 fd ff 	callq	-195647 <runtime.unlock>
  4392ff:	48 8b 44 24 08 	movq	8(%rsp), %rax
  439304:	48 8d 48 01 	leaq	1(%rax), %rcx
  439308:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43930d:	48 83 f9 40 	cmpq	$64, %rcx
  439311:	7c cf 	jl	-49 <runtime.timejump+0x72>
  439313:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  439318:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  43931d:	48 83 c4 28 	addq	$40, %rsp
  439321:	c3 	retq
  439322:	48 c7 44 24 30 00 00 00 00 	movq	$0, 48(%rsp)
  43932b:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  439330:	48 83 c4 28 	addq	$40, %rsp
  439334:	c3 	retq
  439335:	e8 36 b2 00 00 	callq	45622 <runtime.morestack_noctxt>
  43933a:	e9 31 ff ff ff 	jmp	-207 <runtime.timejump>
  43933f:	cc 	int3

runtime.timejumpLocked:
  439340:	31 c0 	xorl	%eax, %eax
  439342:	31 c9 	xorl	%ecx, %ecx
  439344:	eb 04 	jmp	4 <runtime.timejumpLocked+0xa>
  439346:	48 8d 42 01 	leaq	1(%rdx), %rax
  43934a:	48 83 f8 40 	cmpq	$64, %rax
  43934e:	7d 46 	jge	70 <runtime.timejumpLocked+0x56>
  439350:	48 89 c2 	movq	%rax, %rdx
  439353:	48 c1 e0 07 	shlq	$7, %rax
  439357:	48 8d 1d 42 0f 07 00 	leaq	462658(%rip), %rbx
  43935e:	0f b6 74 03 10 	movzbl	16(%rbx,%rax), %esi
  439363:	40 84 f6 	testb	%sil, %sil
  439366:	74 de 	je	-34 <runtime.timejumpLocked+0x6>
  439368:	48 8b 74 03 30 	movq	48(%rbx,%rax), %rsi
  43936d:	48 8b 44 03 28 	movq	40(%rbx,%rax), %rax
  439372:	48 85 f6 	testq	%rsi, %rsi
  439375:	74 cf 	je	-49 <runtime.timejumpLocked+0x6>
  439377:	48 8b 00 	movq	(%rax), %rax
  43937a:	48 85 c9 	testq	%rcx, %rcx
  43937d:	74 0d 	je	13 <runtime.timejumpLocked+0x4c>
  43937f:	48 8b 70 10 	movq	16(%rax), %rsi
  439383:	48 8b 79 10 	movq	16(%rcx), %rdi
  439387:	48 39 fe 	cmpq	%rdi, %rsi
  43938a:	7d 05 	jge	5 <runtime.timejumpLocked+0x51>
  43938c:	48 89 c1 	movq	%rax, %rcx
  43938f:	eb b5 	jmp	-75 <runtime.timejumpLocked+0x6>
  439391:	48 89 c8 	movq	%rcx, %rax
  439394:	eb f6 	jmp	-10 <runtime.timejumpLocked+0x4c>
  439396:	48 85 c9 	testq	%rcx, %rcx
  439399:	74 10 	je	16 <runtime.timejumpLocked+0x6b>
  43939b:	48 8b 41 10 	movq	16(%rcx), %rax
  43939f:	48 8b 15 ba a5 08 00 	movq	566714(%rip), %rdx
  4393a6:	48 39 d0 	cmpq	%rdx, %rax
  4393a9:	7f 0a 	jg	10 <runtime.timejumpLocked+0x75>
  4393ab:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  4393b4:	c3 	retq
  4393b5:	48 89 05 a4 a5 08 00 	movq	%rax, 566692(%rip)
  4393bc:	48 8b 01 	movq	(%rcx), %rax
  4393bf:	0f b6 48 12 	movzbl	18(%rax), %ecx
  4393c3:	84 c9 	testb	%cl, %cl
  4393c5:	74 0e 	je	14 <runtime.timejumpLocked+0x95>
  4393c7:	c6 40 12 00 	movb	$0, 18(%rax)
  4393cb:	48 8b 40 08 	movq	8(%rax), %rax
  4393cf:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4393d4:	c3 	retq
  4393d5:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  4393de:	c3 	retq
  4393df:	cc 	int3

time.now:
  4393e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4393e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4393ed:	76 55 	jbe	85 <time.now+0x64>
  4393ef:	48 83 ec 28 	subq	$40, %rsp
  4393f3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  4393f8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  4393fd:	e8 9e e5 00 00 	callq	58782 <runtime.walltime>
  439402:	48 8b 04 24 	movq	(%rsp), %rax
  439406:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  43940b:	8b 4c 24 08 	movl	8(%rsp), %ecx
  43940f:	89 4c 24 14 	movl	%ecx, 20(%rsp)
  439413:	e8 18 e6 00 00 	callq	58904 <runtime.nanotime>
  439418:	48 8b 04 24 	movq	(%rsp), %rax
  43941c:	48 2b 05 b5 a5 08 00 	subq	566709(%rip), %rax
  439423:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  439428:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  43942d:	8b 4c 24 14 	movl	20(%rsp), %ecx
  439431:	89 4c 24 38 	movl	%ecx, 56(%rsp)
  439435:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  43943a:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  43943f:	48 83 c4 28 	addq	$40, %rsp
  439443:	c3 	retq
  439444:	e8 27 b1 00 00 	callq	45351 <runtime.morestack_noctxt>
  439449:	eb 95 	jmp	-107 <time.now>
  43944b:	cc 	int3
  43944c:	cc 	int3
  43944d:	cc 	int3
  43944e:	cc 	int3
  43944f:	cc 	int3

runtime.traceReader:
  439450:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  439459:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43945d:	0f 86 d5 00 00 00 	jbe	213 <runtime.traceReader+0xe8>
  439463:	48 83 ec 18 	subq	$24, %rsp
  439467:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  43946c:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  439471:	48 8b 05 b0 a3 07 00 	movq	500656(%rip), %rax
  439478:	48 85 c0 	testq	%rax, %rax
  43947b:	75 13 	jne	19 <runtime.traceReader+0x40>
  43947d:	48 c7 44 24 20 00 00 00 00 	movq	$0, 32(%rsp)
  439486:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  43948b:	48 83 c4 18 	addq	$24, %rsp
  43948f:	c3 	retq
  439490:	48 8b 05 81 a3 07 00 	movq	500609(%rip), %rax
  439497:	48 85 c0 	testq	%rax, %rax
  43949a:	75 0b 	jne	11 <runtime.traceReader+0x57>
  43949c:	0f b6 05 2e a3 07 00 	movzbl	500526(%rip), %eax
  4394a3:	84 c0 	testb	%al, %al
  4394a5:	74 d6 	je	-42 <runtime.traceReader+0x2d>
  4394a7:	48 8d 05 12 a3 07 00 	leaq	500498(%rip), %rax
  4394ae:	48 89 04 24 	movq	%rax, (%rsp)
  4394b2:	e8 69 00 fd ff 	callq	-196503 <runtime.lock>
  4394b7:	48 8b 05 6a a3 07 00 	movq	500586(%rip), %rax
  4394be:	48 85 c0 	testq	%rax, %rax
  4394c1:	75 23 	jne	35 <runtime.traceReader+0x96>
  4394c3:	48 8d 05 f6 a2 07 00 	leaq	500470(%rip), %rax
  4394ca:	48 89 04 24 	movq	%rax, (%rsp)
  4394ce:	e8 ed 01 fd ff 	callq	-196115 <runtime.unlock>
  4394d3:	48 c7 44 24 20 00 00 00 00 	movq	$0, 32(%rsp)
  4394dc:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  4394e1:	48 83 c4 18 	addq	$24, %rsp
  4394e5:	c3 	retq
  4394e6:	48 8b 0d 2b a3 07 00 	movq	500523(%rip), %rcx
  4394ed:	48 85 c9 	testq	%rcx, %rcx
  4394f0:	75 0b 	jne	11 <runtime.traceReader+0xad>
  4394f2:	0f b6 0d d8 a2 07 00 	movzbl	500440(%rip), %ecx
  4394f9:	84 c9 	testb	%cl, %cl
  4394fb:	74 c6 	je	-58 <runtime.traceReader+0x73>
  4394fd:	48 8d 0d 24 a3 07 00 	leaq	500516(%rip), %rcx
  439504:	84 01 	testb	%al, (%rcx)
  439506:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43950b:	31 c9 	xorl	%ecx, %ecx
  43950d:	48 89 0d 14 a3 07 00 	movq	%rcx, 500500(%rip)
  439514:	48 8d 0d a5 a2 07 00 	leaq	500389(%rip), %rcx
  43951b:	48 89 0c 24 	movq	%rcx, (%rsp)
  43951f:	e8 9c 01 fd ff 	callq	-196196 <runtime.unlock>
  439524:	48 8b 44 24 08 	movq	8(%rsp), %rax
  439529:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  43952e:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  439533:	48 83 c4 18 	addq	$24, %rsp
  439537:	c3 	retq
  439538:	e8 33 b0 00 00 	callq	45107 <runtime.morestack_noctxt>
  43953d:	e9 0e ff ff ff 	jmp	-242 <runtime.traceReader>
  439542:	cc 	int3
  439543:	cc 	int3
  439544:	cc 	int3
  439545:	cc 	int3
  439546:	cc 	int3
  439547:	cc 	int3
  439548:	cc 	int3
  439549:	cc 	int3
  43954a:	cc 	int3
  43954b:	cc 	int3
  43954c:	cc 	int3
  43954d:	cc 	int3
  43954e:	cc 	int3
  43954f:	cc 	int3

runtime.traceProcFree:
  439550:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  439559:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43955d:	0f 86 9a 00 00 00 	jbe	154 <runtime.traceProcFree+0xad>
  439563:	48 83 ec 18 	subq	$24, %rsp
  439567:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  43956c:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  439571:	48 8b 44 24 20 	movq	32(%rsp), %rax
  439576:	84 00 	testb	%al, (%rax)
  439578:	48 8b 88 18 12 00 00 	movq	4632(%rax), %rcx
  43957f:	48 c7 80 18 12 00 00 00 00 00 00 	movq	$0, 4632(%rax)
  43958a:	48 85 c9 	testq	%rcx, %rcx
  43958d:	74 64 	je	100 <runtime.traceProcFree+0xa3>
  43958f:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  439594:	48 8d 05 25 a2 07 00 	leaq	500261(%rip), %rax
  43959b:	48 89 04 24 	movq	%rax, (%rsp)
  43959f:	e8 7c ff fc ff 	callq	-196740 <runtime.lock>
  4395a4:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4395a9:	48 89 c1 	movq	%rax, %rcx
  4395ac:	48 c7 00 00 00 00 00 	movq	$0, (%rax)
  4395b3:	48 8b 05 5e a2 07 00 	movq	500318(%rip), %rax
  4395ba:	48 85 c0 	testq	%rax, %rax
  4395bd:	75 28 	jne	40 <runtime.traceProcFree+0x97>
  4395bf:	48 89 0d 52 a2 07 00 	movq	%rcx, 500306(%rip)
  4395c6:	48 89 0d 53 a2 07 00 	movq	%rcx, 500307(%rip)
  4395cd:	48 8d 05 ec a1 07 00 	leaq	500204(%rip), %rax
  4395d4:	48 89 04 24 	movq	%rax, (%rsp)
  4395d8:	e8 e3 00 fd ff 	callq	-196381 <runtime.unlock>
  4395dd:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  4395e2:	48 83 c4 18 	addq	$24, %rsp
  4395e6:	c3 	retq
  4395e7:	48 8b 05 32 a2 07 00 	movq	500274(%rip), %rax
  4395ee:	48 89 08 	movq	%rcx, (%rax)
  4395f1:	eb d3 	jmp	-45 <runtime.traceProcFree+0x76>
  4395f3:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  4395f8:	48 83 c4 18 	addq	$24, %rsp
  4395fc:	c3 	retq
  4395fd:	e8 6e af 00 00 	callq	44910 <runtime.morestack_noctxt>
  439602:	e9 49 ff ff ff 	jmp	-183 <runtime.traceProcFree>
  439607:	cc 	int3
  439608:	cc 	int3
  439609:	cc 	int3
  43960a:	cc 	int3
  43960b:	cc 	int3
  43960c:	cc 	int3
  43960d:	cc 	int3
  43960e:	cc 	int3
  43960f:	cc 	int3

runtime.traceEvent:
  439610:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  439619:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43961d:	0f 86 ba 02 00 00 	jbe	698 <runtime.traceEvent+0x2cd>
  439623:	48 83 ec 78 	subq	$120, %rsp
  439627:	48 89 6c 24 70 	movq	%rbp, 112(%rsp)
  43962c:	48 8d 6c 24 70 	leaq	112(%rsp), %rbp
  439631:	e8 fa 03 00 00 	callq	1018 <runtime.traceAcquireBuffer>
  439636:	48 8b 04 24 	movq	(%rsp), %rax
  43963a:	8b 4c 24 08 	movl	8(%rsp), %ecx
  43963e:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  439643:	0f b6 1d 86 a1 07 00 	movzbl	500102(%rip), %ebx
  43964a:	84 db 	testb	%bl, %bl
  43964c:	0f 84 41 02 00 00 	je	577 <runtime.traceEvent+0x283>
  439652:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  439657:	89 4c 24 34 	movl	%ecx, 52(%rsp)
  43965b:	48 89 54 24 50 	movq	%rdx, 80(%rsp)
  439660:	48 8b 1a 	movq	(%rdx), %rbx
  439663:	48 89 de 	movq	%rbx, %rsi
  439666:	48 85 db 	testq	%rbx, %rbx
  439669:	74 18 	je	24 <runtime.traceEvent+0x73>
  43966b:	48 8b 7b 10 	movq	16(%rbx), %rdi
  43966f:	48 81 c7 18 04 ff ff 	addq	$-64488, %rdi
  439676:	48 f7 df 	negq	%rdi
  439679:	48 83 ff 34 	cmpq	$52, %rdi
  43967d:	0f 8d 08 02 00 00 	jge	520 <runtime.traceEvent+0x27b>
  439683:	48 89 34 24 	movq	%rsi, (%rsp)
  439687:	e8 d4 04 00 00 	callq	1236 <runtime.traceFlush>
  43968c:	48 8b 44 24 10 	movq	16(%rsp), %rax
  439691:	48 89 c1 	movq	%rax, %rcx
  439694:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  439699:	48 89 0a 	movq	%rcx, (%rdx)
  43969c:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  4396a1:	e8 4a c6 00 00 	callq	50762 <runtime.cputicks>
  4396a6:	48 8b 04 24 	movq	(%rsp), %rax
  4396aa:	48 c1 e8 06 	shrq	$6, %rax
  4396ae:	48 8b 4c 24 68 	movq	104(%rsp), %rcx
  4396b3:	48 8b 51 08 	movq	8(%rcx), %rdx
  4396b7:	48 89 41 08 	movq	%rax, 8(%rcx)
  4396bb:	48 29 d0 	subq	%rdx, %rax
  4396be:	48 8b 94 24 88 00 00 00 	movq	136(%rsp), %rdx
  4396c6:	48 85 d2 	testq	%rdx, %rdx
  4396c9:	0f 8c ac 01 00 00 	jl	428 <runtime.traceEvent+0x26b>
  4396cf:	48 8b 9c 24 98 00 00 00 	movq	152(%rsp), %rbx
  4396d7:	8d 73 01 	leal	1(%rbx), %esi
  4396da:	40 80 fe 03 	cmpb	$3, %sil
  4396de:	76 05 	jbe	5 <runtime.traceEvent+0xd5>
  4396e0:	be 03 00 00 00 	movl	$3, %esi
  4396e5:	48 8b 79 10 	movq	16(%rcx), %rdi
  4396e9:	41 89 f0 	movl	%esi, %r8d
  4396ec:	c1 e6 06 	shll	$6, %esi
  4396ef:	44 0f b6 8c 24 80 00 00 00 	movzbl	128(%rsp), %r9d
  4396f8:	41 09 f1 	orl	%esi, %r9d
  4396fb:	48 81 ff e8 fb 00 00 	cmpq	$64488, %rdi
  439702:	0f 83 ce 01 00 00 	jae	462 <runtime.traceEvent+0x2c6>
  439708:	48 89 7c 24 40 	movq	%rdi, 64(%rsp)
  43970d:	44 88 8c 39 18 04 00 00 	movb	%r9b, 1048(%rcx,%rdi)
  439715:	48 ff 41 10 	incq	16(%rcx)
  439719:	41 80 f8 03 	cmpb	$3, %r8b
  43971d:	0f 84 14 01 00 00 	je	276 <runtime.traceEvent+0x227>
  439723:	31 f6 	xorl	%esi, %esi
  439725:	48 89 74 24 60 	movq	%rsi, 96(%rsp)
  43972a:	48 89 0c 24 	movq	%rcx, (%rsp)
  43972e:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  439733:	e8 08 06 00 00 	callq	1544 <runtime.(*traceBuf).varint>
  439738:	31 c0 	xorl	%eax, %eax
  43973a:	eb 2c 	jmp	44 <runtime.traceEvent+0x158>
  43973c:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  439741:	48 8b 8c 24 90 00 00 00 	movq	144(%rsp), %rcx
  439749:	48 8b 14 c1 	movq	(%rcx,%rax,8), %rdx
  43974d:	48 8b 5c 24 68 	movq	104(%rsp), %rbx
  439752:	48 89 1c 24 	movq	%rbx, (%rsp)
  439756:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  43975b:	e8 e0 05 00 00 	callq	1504 <runtime.(*traceBuf).varint>
  439760:	48 8b 44 24 48 	movq	72(%rsp), %rax
  439765:	48 ff c0 	incq	%rax
  439768:	48 8b 8c 24 98 00 00 00 	movq	152(%rsp), %rcx
  439770:	48 39 c8 	cmpq	%rcx, %rax
  439773:	7c c7 	jl	-57 <runtime.traceEvent+0x12c>
  439775:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  43977d:	48 85 c0 	testq	%rax, %rax
  439780:	0f 84 95 00 00 00 	je	149 <runtime.traceEvent+0x20b>
  439786:	7f 41 	jg	65 <runtime.traceEvent+0x1b9>
  439788:	48 8b 44 24 68 	movq	104(%rsp), %rax
  43978d:	48 8b 40 10 	movq	16(%rax), %rax
  439791:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  439796:	48 29 c8 	subq	%rcx, %rax
  439799:	48 83 f8 34 	cmpq	$52, %rax
  43979d:	0f 8f 11 01 00 00 	jg	273 <runtime.traceEvent+0x2a4>
  4397a3:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  4397a8:	48 85 c9 	testq	%rcx, %rcx
  4397ab:	74 06 	je	6 <runtime.traceEvent+0x1a3>
  4397ad:	48 83 c0 fe 	addq	$-2, %rax
  4397b1:	88 01 	movb	%al, (%rcx)
  4397b3:	8b 44 24 34 	movl	52(%rsp), %eax
  4397b7:	89 04 24 	movl	%eax, (%rsp)
  4397ba:	e8 21 03 00 00 	callq	801 <runtime.traceReleaseBuffer>
  4397bf:	48 8b 6c 24 70 	movq	112(%rsp), %rbp
  4397c4:	48 83 c4 78 	addq	$120, %rsp
  4397c8:	c3 	retq
  4397c9:	48 8b 4c 24 68 	movq	104(%rsp), %rcx
  4397ce:	48 8d 51 18 	leaq	24(%rcx), %rdx
  4397d2:	84 02 	testb	%al, (%rdx)
  4397d4:	48 8b 5c 24 58 	movq	88(%rsp), %rbx
  4397d9:	48 89 1c 24 	movq	%rbx, (%rsp)
  4397dd:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  4397e2:	48 c7 44 24 10 80 00 00 00 	movq	$128, 16(%rsp)
  4397eb:	48 c7 44 24 18 80 00 00 00 	movq	$128, 24(%rsp)
  4397f4:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  4397f9:	e8 f2 00 00 00 	callq	242 <runtime.traceStackID>
  4397fe:	48 8b 44 24 28 	movq	40(%rsp), %rax
  439803:	48 8b 4c 24 68 	movq	104(%rsp), %rcx
  439808:	48 89 0c 24 	movq	%rcx, (%rsp)
  43980c:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  439811:	e8 2a 05 00 00 	callq	1322 <runtime.(*traceBuf).varint>
  439816:	e9 6d ff ff ff 	jmp	-147 <runtime.traceEvent+0x178>
  43981b:	48 8b 44 24 68 	movq	104(%rsp), %rax
  439820:	48 89 04 24 	movq	%rax, (%rsp)
  439824:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  43982d:	e8 0e 05 00 00 	callq	1294 <runtime.(*traceBuf).varint>
  439832:	e9 51 ff ff ff 	jmp	-175 <runtime.traceEvent+0x178>
  439837:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  43983c:	48 89 0c 24 	movq	%rcx, (%rsp)
  439840:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  439849:	e8 f2 04 00 00 	callq	1266 <runtime.(*traceBuf).varint>
  43984e:	48 8b 44 24 68 	movq	104(%rsp), %rax
  439853:	48 8b 48 10 	movq	16(%rax), %rcx
  439857:	48 8d 51 ff 	leaq	-1(%rcx), %rdx
  43985b:	48 81 fa e8 fb 00 00 	cmpq	$64488, %rdx
  439862:	73 6b 	jae	107 <runtime.traceEvent+0x2bf>
  439864:	48 8d b4 01 17 04 00 00 	leaq	1047(%rcx,%rax), %rsi
  43986c:	48 8b 44 24 38 	movq	56(%rsp), %rax
  439871:	48 8b 4c 24 68 	movq	104(%rsp), %rcx
  439876:	e9 aa fe ff ff 	jmp	-342 <runtime.traceEvent+0x115>
  43987b:	48 8b 9c 24 98 00 00 00 	movq	152(%rsp), %rbx
  439883:	48 89 de 	movq	%rbx, %rsi
  439886:	e9 4f fe ff ff 	jmp	-433 <runtime.traceEvent+0xca>
  43988b:	48 89 d8 	movq	%rbx, %rax
  43988e:	e9 09 fe ff ff 	jmp	-503 <runtime.traceEvent+0x8c>
  439893:	0f b6 98 28 03 00 00 	movzbl	808(%rax), %ebx
  43989a:	84 db 	testb	%bl, %bl
  43989c:	0f 85 b0 fd ff ff 	jne	-592 <runtime.traceEvent+0x42>
  4398a2:	89 0c 24 	movl	%ecx, (%rsp)
  4398a5:	e8 36 02 00 00 	callq	566 <runtime.traceReleaseBuffer>
  4398aa:	48 8b 6c 24 70 	movq	112(%rsp), %rbp
  4398af:	48 83 c4 78 	addq	$120, %rsp
  4398b3:	c3 	retq
  4398b4:	48 8d 05 dc 29 03 00 	leaq	207324(%rip), %rax
  4398bb:	48 89 04 24 	movq	%rax, (%rsp)
  4398bf:	48 c7 44 24 08 1d 00 00 00 	movq	$29, 8(%rsp)
  4398c8:	e8 03 79 fe ff 	callq	-100093 <runtime.throw>
  4398cd:	0f 0b 	ud2
  4398cf:	e8 6c 61 fe ff 	callq	-106132 <runtime.panicindex>
  4398d4:	0f 0b 	ud2
  4398d6:	e8 65 61 fe ff 	callq	-106139 <runtime.panicindex>
  4398db:	0f 0b 	ud2
  4398dd:	e8 8e ac 00 00 	callq	44174 <runtime.morestack_noctxt>
  4398e2:	e9 29 fd ff ff 	jmp	-727 <runtime.traceEvent>
  4398e7:	cc 	int3
  4398e8:	cc 	int3
  4398e9:	cc 	int3
  4398ea:	cc 	int3
  4398eb:	cc 	int3
  4398ec:	cc 	int3
  4398ed:	cc 	int3
  4398ee:	cc 	int3
  4398ef:	cc 	int3

runtime.traceStackID:
  4398f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4398f9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4398fd:	0f 86 1f 01 00 00 	jbe	287 <runtime.traceStackID+0x132>
  439903:	48 83 ec 40 	subq	$64, %rsp
  439907:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  43990c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  439911:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  43991a:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  43991f:	48 8b 89 c0 00 00 00 	movq	192(%rcx), %rcx
  439926:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  43992b:	48 39 c1 	cmpq	%rax, %rcx
  43992e:	0f 84 a9 00 00 00 	je	169 <runtime.traceStackID+0xed>
  439934:	48 85 c9 	testq	%rcx, %rcx
  439937:	75 64 	jne	100 <runtime.traceStackID+0xad>
  439939:	31 c0 	xorl	%eax, %eax
  43993b:	48 85 c0 	testq	%rax, %rax
  43993e:	7e 03 	jle	3 <runtime.traceStackID+0x53>
  439940:	48 ff c8 	decq	%rax
  439943:	48 85 c0 	testq	%rax, %rax
  439946:	7e 10 	jle	16 <runtime.traceStackID+0x68>
  439948:	48 8b 89 98 00 00 00 	movq	152(%rcx), %rcx
  43994f:	48 83 f9 01 	cmpq	$1, %rcx
  439953:	75 03 	jne	3 <runtime.traceStackID+0x68>
  439955:	48 ff c8 	decq	%rax
  439958:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  43995d:	48 39 c8 	cmpq	%rcx, %rax
  439960:	0f 87 b5 00 00 00 	ja	181 <runtime.traceStackID+0x12b>
  439966:	48 8d 15 c3 9e 07 00 	leaq	499395(%rip), %rdx
  43996d:	48 89 14 24 	movq	%rdx, (%rsp)
  439971:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  439976:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  43997b:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  439980:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  439985:	e8 36 04 00 00 	callq	1078 <runtime.(*traceStackTable).put>
  43998a:	8b 44 24 20 	movl	32(%rsp), %eax
  43998e:	48 89 44 24 70 	movq	%rax, 112(%rsp)
  439993:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  439998:	48 83 c4 40 	addq	$64, %rsp
  43999c:	c3 	retq
  43999d:	48 89 0c 24 	movq	%rcx, (%rsp)
  4399a1:	48 8b 44 24 68 	movq	104(%rsp), %rax
  4399a6:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4399ab:	48 8b 44 24 50 	movq	80(%rsp), %rax
  4399b0:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  4399b5:	48 8b 54 24 58 	movq	88(%rsp), %rdx
  4399ba:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  4399bf:	48 8b 54 24 60 	movq	96(%rsp), %rdx
  4399c4:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  4399c9:	e8 12 40 00 00 	callq	16402 <runtime.gcallers>
  4399ce:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4399d3:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4399d8:	e9 5e ff ff ff 	jmp	-162 <runtime.traceStackID+0x4b>
  4399dd:	48 8b 44 24 68 	movq	104(%rsp), %rax
  4399e2:	48 ff c0 	incq	%rax
  4399e5:	48 89 04 24 	movq	%rax, (%rsp)
  4399e9:	48 8b 44 24 50 	movq	80(%rsp), %rax
  4399ee:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4399f3:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  4399f8:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  4399fd:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  439a02:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  439a07:	e8 f4 3e 00 00 	callq	16116 <runtime.callers>
  439a0c:	48 8b 44 24 20 	movq	32(%rsp), %rax
  439a11:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  439a16:	e9 20 ff ff ff 	jmp	-224 <runtime.traceStackID+0x4b>
  439a1b:	e8 90 60 fe ff 	callq	-106352 <runtime.panicslice>
  439a20:	0f 0b 	ud2
  439a22:	e8 49 ab 00 00 	callq	43849 <runtime.morestack_noctxt>
  439a27:	e9 c4 fe ff ff 	jmp	-316 <runtime.traceStackID>
  439a2c:	cc 	int3
  439a2d:	cc 	int3
  439a2e:	cc 	int3
  439a2f:	cc 	int3

runtime.traceAcquireBuffer:
  439a30:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  439a39:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  439a3d:	0f 86 91 00 00 00 	jbe	145 <runtime.traceAcquireBuffer+0xa4>
  439a43:	48 83 ec 18 	subq	$24, %rsp
  439a47:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  439a4c:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  439a51:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  439a5a:	48 8b 48 30 	movq	48(%rax), %rcx
  439a5e:	ff 81 00 01 00 00 	incl	256(%rcx)
  439a64:	48 8b 48 30 	movq	48(%rax), %rcx
  439a68:	84 00 	testb	%al, (%rax)
  439a6a:	48 8b 81 d0 00 00 00 	movq	208(%rcx), %rax
  439a71:	48 85 c0 	testq	%rax, %rax
  439a74:	74 21 	je	33 <runtime.traceAcquireBuffer+0x67>
  439a76:	8b 50 08 	movl	8(%rax), %edx
  439a79:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  439a7e:	89 54 24 28 	movl	%edx, 40(%rsp)
  439a82:	48 05 18 12 00 00 	addq	$4632, %rax
  439a88:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  439a8d:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  439a92:	48 83 c4 18 	addq	$24, %rsp
  439a96:	c3 	retq
  439a97:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  439a9c:	48 8d 05 d5 9d 08 00 	leaq	564693(%rip), %rax
  439aa3:	48 89 04 24 	movq	%rax, (%rsp)
  439aa7:	e8 74 fa fc ff 	callq	-198028 <runtime.lock>
  439aac:	48 8b 44 24 08 	movq	8(%rsp), %rax
  439ab1:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  439ab6:	c7 44 24 28 ff ff ff ff 	movl	$4294967295, 40(%rsp)
  439abe:	48 8d 05 bb 9d 08 00 	leaq	564667(%rip), %rax
  439ac5:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  439aca:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  439acf:	48 83 c4 18 	addq	$24, %rsp
  439ad3:	c3 	retq
  439ad4:	e8 97 aa 00 00 	callq	43671 <runtime.morestack_noctxt>
  439ad9:	e9 52 ff ff ff 	jmp	-174 <runtime.traceAcquireBuffer>
  439ade:	cc 	int3
  439adf:	cc 	int3

runtime.traceReleaseBuffer:
  439ae0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  439ae9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  439aed:	76 67 	jbe	103 <runtime.traceReleaseBuffer+0x76>
  439aef:	48 83 ec 10 	subq	$16, %rsp
  439af3:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  439af8:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  439afd:	8b 44 24 18 	movl	24(%rsp), %eax
  439b01:	83 f8 ff 	cmpl	$-1, %eax
  439b04:	74 3e 	je	62 <runtime.traceReleaseBuffer+0x64>
  439b06:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  439b0f:	48 8b 48 30 	movq	48(%rax), %rcx
  439b13:	8b 91 00 01 00 00 	movl	256(%rcx), %edx
  439b19:	8d 5a ff 	leal	-1(%rdx), %ebx
  439b1c:	89 99 00 01 00 00 	movl	%ebx, 256(%rcx)
  439b22:	83 fa 01 	cmpl	$1, %edx
  439b25:	75 13 	jne	19 <runtime.traceReleaseBuffer+0x5a>
  439b27:	0f b6 88 c0 00 00 00 	movzbl	192(%rax), %ecx
  439b2e:	84 c9 	testb	%cl, %cl
  439b30:	74 08 	je	8 <runtime.traceReleaseBuffer+0x5a>
  439b32:	48 c7 40 10 de fa ff ff 	movq	$-1314, 16(%rax)
  439b3a:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  439b3f:	48 83 c4 10 	addq	$16, %rsp
  439b43:	c3 	retq
  439b44:	48 8d 05 2d 9d 08 00 	leaq	564525(%rip), %rax
  439b4b:	48 89 04 24 	movq	%rax, (%rsp)
  439b4f:	e8 6c fb fc ff 	callq	-197780 <runtime.unlock>
  439b54:	eb b0 	jmp	-80 <runtime.traceReleaseBuffer+0x26>
  439b56:	e8 15 aa 00 00 	callq	43541 <runtime.morestack_noctxt>
  439b5b:	eb 83 	jmp	-125 <runtime.traceReleaseBuffer>
  439b5d:	cc 	int3
  439b5e:	cc 	int3
  439b5f:	cc 	int3

runtime.traceFlush:
  439b60:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  439b69:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  439b6d:	0f 86 be 01 00 00 	jbe	446 <runtime.traceFlush+0x1d1>
  439b73:	48 83 ec 40 	subq	$64, %rsp
  439b77:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  439b7c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  439b81:	48 8b 05 40 9c 07 00 	movq	498752(%rip), %rax
  439b88:	48 85 c0 	testq	%rax, %rax
  439b8b:	0f 84 74 01 00 00 	je	372 <runtime.traceFlush+0x1a5>
  439b91:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  439b9a:	48 8b 49 30 	movq	48(%rcx), %rcx
  439b9e:	48 8b 89 c0 00 00 00 	movq	192(%rcx), %rcx
  439ba5:	48 39 c8 	cmpq	%rcx, %rax
  439ba8:	0f 95 c0 	setne	%al
  439bab:	88 44 24 1f 	movb	%al, 31(%rsp)
  439baf:	84 c0 	testb	%al, %al
  439bb1:	0f 85 34 01 00 00 	jne	308 <runtime.traceFlush+0x18b>
  439bb7:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  439bbc:	48 85 c9 	testq	%rcx, %rcx
  439bbf:	74 28 	je	40 <runtime.traceFlush+0x89>
  439bc1:	48 89 ca 	movq	%rcx, %rdx
  439bc4:	48 c7 01 00 00 00 00 	movq	$0, (%rcx)
  439bcb:	48 8b 0d 46 9c 07 00 	movq	498758(%rip), %rcx
  439bd2:	48 85 c9 	testq	%rcx, %rcx
  439bd5:	0f 85 01 01 00 00 	jne	257 <runtime.traceFlush+0x17c>
  439bdb:	48 89 15 36 9c 07 00 	movq	%rdx, 498742(%rip)
  439be2:	48 89 15 37 9c 07 00 	movq	%rdx, 498743(%rip)
  439be9:	48 8b 0d 20 9c 07 00 	movq	498720(%rip), %rcx
  439bf0:	48 85 c9 	testq	%rcx, %rcx
  439bf3:	0f 84 b8 00 00 00 	je	184 <runtime.traceFlush+0x151>
  439bf9:	48 89 ca 	movq	%rcx, %rdx
  439bfc:	48 8b 09 	movq	(%rcx), %rcx
  439bff:	48 89 0d 0a 9c 07 00 	movq	%rcx, 498698(%rip)
  439c06:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  439c0b:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  439c10:	31 c9 	xorl	%ecx, %ecx
  439c12:	48 89 0a 	movq	%rcx, (%rdx)
  439c15:	48 c7 42 10 00 00 00 00 	movq	$0, 16(%rdx)
  439c1d:	e8 ce c0 00 00 	callq	49358 <runtime.cputicks>
  439c22:	48 8b 04 24 	movq	(%rsp), %rax
  439c26:	48 c1 e8 06 	shrq	$6, %rax
  439c2a:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  439c2f:	48 89 41 08 	movq	%rax, 8(%rcx)
  439c33:	48 8b 51 10 	movq	16(%rcx), %rdx
  439c37:	48 81 fa e8 fb 00 00 	cmpq	$64488, %rdx
  439c3e:	0f 83 cb 00 00 00 	jae	203 <runtime.traceFlush+0x1af>
  439c44:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  439c49:	c6 84 11 18 04 00 00 41 	movb	$65, 1048(%rcx,%rdx)
  439c51:	48 ff 41 10 	incq	16(%rcx)
  439c55:	48 89 0c 24 	movq	%rcx, (%rsp)
  439c59:	8b 44 24 50 	movl	80(%rsp), %eax
  439c5d:	48 63 c0 	movslq	%eax, %rax
  439c60:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  439c65:	e8 d6 00 00 00 	callq	214 <runtime.(*traceBuf).varint>
  439c6a:	48 8b 44 24 30 	movq	48(%rsp), %rax
  439c6f:	48 89 04 24 	movq	%rax, (%rsp)
  439c73:	48 8b 44 24 28 	movq	40(%rsp), %rax
  439c78:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  439c7d:	e8 be 00 00 00 	callq	190 <runtime.(*traceBuf).varint>
  439c82:	0f b6 44 24 1f 	movzbl	31(%rsp), %eax
  439c87:	84 c0 	testb	%al, %al
  439c89:	75 14 	jne	20 <runtime.traceFlush+0x13f>
  439c8b:	48 8b 44 24 20 	movq	32(%rsp), %rax
  439c90:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  439c95:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  439c9a:	48 83 c4 40 	addq	$64, %rsp
  439c9e:	c3 	retq
  439c9f:	48 8d 05 1a 9b 07 00 	leaq	498458(%rip), %rax
  439ca6:	48 89 04 24 	movq	%rax, (%rsp)
  439caa:	e8 11 fa fc ff 	callq	-198127 <runtime.unlock>
  439caf:	eb da 	jmp	-38 <runtime.traceFlush+0x12b>
  439cb1:	48 c7 04 24 00 00 01 00 	movq	$65536, (%rsp)
  439cb9:	48 8d 05 e0 aa 08 00 	leaq	568032(%rip), %rax
  439cc0:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  439cc5:	e8 56 53 fd ff 	callq	-175274 <runtime.sysAlloc>
  439cca:	48 8b 44 24 10 	movq	16(%rsp), %rax
  439ccf:	48 85 c0 	testq	%rax, %rax
  439cd2:	74 42 	je	66 <runtime.traceFlush+0x1b6>
  439cd4:	48 89 c2 	movq	%rax, %rdx
  439cd7:	e9 2a ff ff ff 	jmp	-214 <runtime.traceFlush+0xa6>
  439cdc:	48 8b 0d 3d 9b 07 00 	movq	498493(%rip), %rcx
  439ce3:	48 89 11 	movq	%rdx, (%rcx)
  439ce6:	e9 f7 fe ff ff 	jmp	-265 <runtime.traceFlush+0x82>
  439ceb:	48 8d 05 ce 9a 07 00 	leaq	498382(%rip), %rax
  439cf2:	48 89 04 24 	movq	%rax, (%rsp)
  439cf6:	e8 25 f8 fc ff 	callq	-198619 <runtime.lock>
  439cfb:	0f b6 44 24 1f 	movzbl	31(%rsp), %eax
  439d00:	e9 b2 fe ff ff 	jmp	-334 <runtime.traceFlush+0x57>
  439d05:	b8 01 00 00 00 	movl	$1, %eax
  439d0a:	e9 9c fe ff ff 	jmp	-356 <runtime.traceFlush+0x4b>
  439d0f:	e8 2c 5d fe ff 	callq	-107220 <runtime.panicindex>
  439d14:	0f 0b 	ud2
  439d16:	48 8d 05 dc 14 03 00 	leaq	201948(%rip), %rax
  439d1d:	48 89 04 24 	movq	%rax, (%rsp)
  439d21:	48 c7 44 24 08 14 00 00 00 	movq	$20, 8(%rsp)
  439d2a:	e8 a1 74 fe ff 	callq	-101215 <runtime.throw>
  439d2f:	0f 0b 	ud2
  439d31:	e8 3a a8 00 00 	callq	43066 <runtime.morestack_noctxt>
  439d36:	e9 25 fe ff ff 	jmp	-475 <runtime.traceFlush>
  439d3b:	cc 	int3
  439d3c:	cc 	int3
  439d3d:	cc 	int3
  439d3e:	cc 	int3
  439d3f:	cc 	int3

runtime.(*traceBuf).varint:
  439d40:	48 83 ec 08 	subq	$8, %rsp
  439d44:	48 89 2c 24 	movq	%rbp, (%rsp)
  439d48:	48 8d 2c 24 	leaq	(%rsp), %rbp
  439d4c:	48 8b 44 24 10 	movq	16(%rsp), %rax
  439d51:	48 8b 48 10 	movq	16(%rax), %rcx
  439d55:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  439d5a:	eb 17 	jmp	23 <runtime.(*traceBuf).varint+0x33>
  439d5c:	48 89 d3 	movq	%rdx, %rbx
  439d5f:	83 ca 80 	orl	$-128, %edx
  439d62:	88 94 08 18 04 00 00 	movb	%dl, 1048(%rax,%rcx)
  439d69:	48 c1 eb 07 	shrq	$7, %rbx
  439d6d:	48 ff c1 	incq	%rcx
  439d70:	48 89 da 	movq	%rbx, %rdx
  439d73:	48 81 fa 80 00 00 00 	cmpq	$128, %rdx
  439d7a:	72 0b 	jb	11 <runtime.(*traceBuf).varint+0x47>
  439d7c:	48 81 f9 e8 fb 00 00 	cmpq	$64488, %rcx
  439d83:	72 d7 	jb	-41 <runtime.(*traceBuf).varint+0x1c>
  439d85:	eb 27 	jmp	39 <runtime.(*traceBuf).varint+0x6e>
  439d87:	48 81 f9 e8 fb 00 00 	cmpq	$64488, %rcx
  439d8e:	73 17 	jae	23 <runtime.(*traceBuf).varint+0x67>
  439d90:	88 94 08 18 04 00 00 	movb	%dl, 1048(%rax,%rcx)
  439d97:	48 ff c1 	incq	%rcx
  439d9a:	48 89 48 10 	movq	%rcx, 16(%rax)
  439d9e:	48 8b 2c 24 	movq	(%rsp), %rbp
  439da2:	48 83 c4 08 	addq	$8, %rsp
  439da6:	c3 	retq
  439da7:	e8 94 5c fe ff 	callq	-107372 <runtime.panicindex>
  439dac:	0f 0b 	ud2
  439dae:	e8 8d 5c fe ff 	callq	-107379 <runtime.panicindex>
  439db3:	0f 0b 	ud2
  439db5:	cc 	int3
  439db6:	cc 	int3
  439db7:	cc 	int3
  439db8:	cc 	int3
  439db9:	cc 	int3
  439dba:	cc 	int3
  439dbb:	cc 	int3
  439dbc:	cc 	int3
  439dbd:	cc 	int3
  439dbe:	cc 	int3
  439dbf:	cc 	int3

runtime.(*traceStackTable).put:
  439dc0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  439dc9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  439dcd:	0f 86 d5 01 00 00 	jbe	469 <runtime.(*traceStackTable).put+0x1e8>
  439dd3:	48 83 ec 50 	subq	$80, %rsp
  439dd7:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  439ddc:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  439de1:	48 8b 44 24 68 	movq	104(%rsp), %rax
  439de6:	48 85 c0 	testq	%rax, %rax
  439de9:	0f 84 a0 01 00 00 	je	416 <runtime.(*traceStackTable).put+0x1cf>
  439def:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  439df4:	48 89 0c 24 	movq	%rcx, (%rsp)
  439df8:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  439e01:	48 c1 e0 03 	shlq	$3, %rax
  439e05:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  439e0a:	e8 01 bd fc ff 	callq	-213759 <runtime.memhash>
  439e0f:	48 8b 44 24 18 	movq	24(%rsp), %rax
  439e14:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  439e19:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  439e1e:	48 89 0c 24 	movq	%rcx, (%rsp)
  439e22:	48 8b 54 24 60 	movq	96(%rsp), %rdx
  439e27:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  439e2c:	48 8b 5c 24 68 	movq	104(%rsp), %rbx
  439e31:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  439e36:	48 8b 74 24 70 	movq	112(%rsp), %rsi
  439e3b:	48 89 74 24 18 	movq	%rsi, 24(%rsp)
  439e40:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  439e45:	e8 76 01 00 00 	callq	374 <runtime.(*traceStackTable).find>
  439e4a:	8b 44 24 28 	movl	40(%rsp), %eax
  439e4e:	85 c0 	testl	%eax, %eax
  439e50:	0f 85 2b 01 00 00 	jne	299 <runtime.(*traceStackTable).put+0x1c1>
  439e56:	48 8b 44 24 58 	movq	88(%rsp), %rax
  439e5b:	84 00 	testb	%al, (%rax)
  439e5d:	48 89 04 24 	movq	%rax, (%rsp)
  439e61:	e8 ba f6 fc ff 	callq	-198982 <runtime.lock>
  439e66:	48 8b 44 24 58 	movq	88(%rsp), %rax
  439e6b:	48 89 04 24 	movq	%rax, (%rsp)
  439e6f:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  439e74:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  439e79:	48 8b 54 24 68 	movq	104(%rsp), %rdx
  439e7e:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  439e83:	48 8b 5c 24 70 	movq	112(%rsp), %rbx
  439e88:	48 89 5c 24 18 	movq	%rbx, 24(%rsp)
  439e8d:	48 8b 5c 24 38 	movq	56(%rsp), %rbx
  439e92:	48 89 5c 24 20 	movq	%rbx, 32(%rsp)
  439e97:	e8 24 01 00 00 	callq	292 <runtime.(*traceStackTable).find>
  439e9c:	8b 44 24 28 	movl	40(%rsp), %eax
  439ea0:	85 c0 	testl	%eax, %eax
  439ea2:	0f 85 b5 00 00 00 	jne	181 <runtime.(*traceStackTable).put+0x19d>
  439ea8:	48 8b 44 24 58 	movq	88(%rsp), %rax
  439ead:	ff 40 08 	incl	8(%rax)
  439eb0:	48 89 04 24 	movq	%rax, (%rsp)
  439eb4:	48 8b 4c 24 68 	movq	104(%rsp), %rcx
  439eb9:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  439ebe:	e8 ad 01 00 00 	callq	429 <runtime.(*traceStackTable).newStack>
  439ec3:	48 8b 44 24 10 	movq	16(%rsp), %rax
  439ec8:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  439ecd:	48 89 48 08 	movq	%rcx, 8(%rax)
  439ed1:	48 8b 54 24 58 	movq	88(%rsp), %rdx
  439ed6:	8b 5a 08 	movl	8(%rdx), %ebx
  439ed9:	89 58 10 	movl	%ebx, 16(%rax)
  439edc:	48 8b 5c 24 68 	movq	104(%rsp), %rbx
  439ee1:	48 89 58 18 	movq	%rbx, 24(%rax)
  439ee5:	48 8d 70 20 	leaq	32(%rax), %rsi
  439ee9:	84 06 	testb	%al, (%rsi)
  439eeb:	48 81 fb 80 00 00 00 	cmpq	$128, %rbx
  439ef2:	0f 87 a9 00 00 00 	ja	169 <runtime.(*traceStackTable).put+0x1e1>
  439ef8:	48 8b 74 24 60 	movq	96(%rsp), %rsi
  439efd:	31 ff 	xorl	%edi, %edi
  439eff:	eb 0c 	jmp	12 <runtime.(*traceStackTable).put+0x14d>
  439f01:	4c 8b 04 fe 	movq	(%rsi,%rdi,8), %r8
  439f05:	4c 89 44 f8 20 	movq	%r8, 32(%rax,%rdi,8)
  439f0a:	48 ff c7 	incq	%rdi
  439f0d:	48 39 df 	cmpq	%rbx, %rdi
  439f10:	7c ef 	jl	-17 <runtime.(*traceStackTable).put+0x141>
  439f12:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  439f17:	48 81 e1 ff 1f 00 00 	andq	$8191, %rcx
  439f1e:	48 8b 5c ca 20 	movq	32(%rdx,%rcx,8), %rbx
  439f23:	48 89 18 	movq	%rbx, (%rax)
  439f26:	48 8d 4c ca 20 	leaq	32(%rdx,%rcx,8), %rcx
  439f2b:	48 89 0c 24 	movq	%rcx, (%rsp)
  439f2f:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  439f34:	e8 a7 7f fc ff 	callq	-229465 <runtime.atomicstorep>
  439f39:	48 8b 44 24 58 	movq	88(%rsp), %rax
  439f3e:	48 89 04 24 	movq	%rax, (%rsp)
  439f42:	e8 79 f7 fc ff 	callq	-198791 <runtime.unlock>
  439f47:	48 8b 44 24 40 	movq	64(%rsp), %rax
  439f4c:	8b 40 10 	movl	16(%rax), %eax
  439f4f:	89 44 24 78 	movl	%eax, 120(%rsp)
  439f53:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  439f58:	48 83 c4 50 	addq	$80, %rsp
  439f5c:	c3 	retq
  439f5d:	89 44 24 34 	movl	%eax, 52(%rsp)
  439f61:	48 8b 44 24 58 	movq	88(%rsp), %rax
  439f66:	48 89 04 24 	movq	%rax, (%rsp)
  439f6a:	e8 51 f7 fc ff 	callq	-198831 <runtime.unlock>
  439f6f:	8b 44 24 34 	movl	52(%rsp), %eax
  439f73:	89 44 24 78 	movl	%eax, 120(%rsp)
  439f77:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  439f7c:	48 83 c4 50 	addq	$80, %rsp
  439f80:	c3 	retq
  439f81:	89 44 24 78 	movl	%eax, 120(%rsp)
  439f85:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  439f8a:	48 83 c4 50 	addq	$80, %rsp
  439f8e:	c3 	retq
  439f8f:	c7 44 24 78 00 00 00 00 	movl	$0, 120(%rsp)
  439f97:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  439f9c:	48 83 c4 50 	addq	$80, %rsp
  439fa0:	c3 	retq
  439fa1:	e8 0a 5b fe ff 	callq	-107766 <runtime.panicslice>
  439fa6:	0f 0b 	ud2
  439fa8:	e8 c3 a5 00 00 	callq	42435 <runtime.morestack_noctxt>
  439fad:	e9 0e fe ff ff 	jmp	-498 <runtime.(*traceStackTable).put>
  439fb2:	cc 	int3
  439fb3:	cc 	int3
  439fb4:	cc 	int3
  439fb5:	cc 	int3
  439fb6:	cc 	int3
  439fb7:	cc 	int3
  439fb8:	cc 	int3
  439fb9:	cc 	int3
  439fba:	cc 	int3
  439fbb:	cc 	int3
  439fbc:	cc 	int3
  439fbd:	cc 	int3
  439fbe:	cc 	int3
  439fbf:	cc 	int3

runtime.(*traceStackTable).find:
  439fc0:	48 83 ec 08 	subq	$8, %rsp
  439fc4:	48 89 2c 24 	movq	%rbp, (%rsp)
  439fc8:	48 8d 2c 24 	leaq	(%rsp), %rbp
  439fcc:	48 8b 44 24 10 	movq	16(%rsp), %rax
  439fd1:	84 00 	testb	%al, (%rax)
  439fd3:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  439fd8:	48 89 ca 	movq	%rcx, %rdx
  439fdb:	48 81 e1 ff 1f 00 00 	andq	$8191, %rcx
  439fe2:	48 8b 44 c8 20 	movq	32(%rax,%rcx,8), %rax
  439fe7:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  439fec:	48 8b 5c 24 18 	movq	24(%rsp), %rbx
  439ff1:	eb 1e 	jmp	30 <runtime.(*traceStackTable).find+0x51>
  439ff3:	48 ff c7 	incq	%rdi
  439ff6:	48 39 f7 	cmpq	%rsi, %rdi
  439ff9:	7d 40 	jge	64 <runtime.(*traceStackTable).find+0x7b>
  439ffb:	4c 8b 44 f8 20 	movq	32(%rax,%rdi,8), %r8
  43a000:	48 39 cf 	cmpq	%rcx, %rdi
  43a003:	73 57 	jae	87 <runtime.(*traceStackTable).find+0x9c>
  43a005:	4c 8b 0c fb 	movq	(%rbx,%rdi,8), %r9
  43a009:	4d 39 c8 	cmpq	%r9, %r8
  43a00c:	74 e5 	je	-27 <runtime.(*traceStackTable).find+0x33>
  43a00e:	48 8b 00 	movq	(%rax), %rax
  43a011:	48 85 c0 	testq	%rax, %rax
  43a014:	74 35 	je	53 <runtime.(*traceStackTable).find+0x8b>
  43a016:	48 8b 70 08 	movq	8(%rax), %rsi
  43a01a:	48 39 f2 	cmpq	%rsi, %rdx
  43a01d:	75 ef 	jne	-17 <runtime.(*traceStackTable).find+0x4e>
  43a01f:	48 8b 70 18 	movq	24(%rax), %rsi
  43a023:	48 39 ce 	cmpq	%rcx, %rsi
  43a026:	75 e6 	jne	-26 <runtime.(*traceStackTable).find+0x4e>
  43a028:	48 8d 78 20 	leaq	32(%rax), %rdi
  43a02c:	84 07 	testb	%al, (%rdi)
  43a02e:	48 81 fe 80 00 00 00 	cmpq	$128, %rsi
  43a035:	77 2c 	ja	44 <runtime.(*traceStackTable).find+0xa3>
  43a037:	31 ff 	xorl	%edi, %edi
  43a039:	eb bb 	jmp	-69 <runtime.(*traceStackTable).find+0x36>
  43a03b:	8b 40 10 	movl	16(%rax), %eax
  43a03e:	89 44 24 38 	movl	%eax, 56(%rsp)
  43a042:	48 8b 2c 24 	movq	(%rsp), %rbp
  43a046:	48 83 c4 08 	addq	$8, %rsp
  43a04a:	c3 	retq
  43a04b:	c7 44 24 38 00 00 00 00 	movl	$0, 56(%rsp)
  43a053:	48 8b 2c 24 	movq	(%rsp), %rbp
  43a057:	48 83 c4 08 	addq	$8, %rsp
  43a05b:	c3 	retq
  43a05c:	e8 df 59 fe ff 	callq	-108065 <runtime.panicindex>
  43a061:	0f 0b 	ud2
  43a063:	e8 48 5a fe ff 	callq	-107960 <runtime.panicslice>
  43a068:	0f 0b 	ud2
  43a06a:	cc 	int3
  43a06b:	cc 	int3
  43a06c:	cc 	int3
  43a06d:	cc 	int3
  43a06e:	cc 	int3
  43a06f:	cc 	int3

runtime.(*traceStackTable).newStack:
  43a070:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43a079:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43a07d:	76 48 	jbe	72 <runtime.(*traceStackTable).newStack+0x57>
  43a07f:	48 83 ec 20 	subq	$32, %rsp
  43a083:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  43a088:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  43a08d:	48 8b 44 24 28 	movq	40(%rsp), %rax
  43a092:	84 00 	testb	%al, (%rax)
  43a094:	48 83 c0 10 	addq	$16, %rax
  43a098:	48 89 04 24 	movq	%rax, (%rsp)
  43a09c:	48 8b 44 24 30 	movq	48(%rsp), %rax
  43a0a1:	48 c1 e0 03 	shlq	$3, %rax
  43a0a5:	48 83 c0 28 	addq	$40, %rax
  43a0a9:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43a0ae:	e8 1d 00 00 00 	callq	29 <runtime.(*traceAlloc).alloc>
  43a0b3:	48 8b 44 24 10 	movq	16(%rsp), %rax
  43a0b8:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  43a0bd:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  43a0c2:	48 83 c4 20 	addq	$32, %rsp
  43a0c6:	c3 	retq
  43a0c7:	e8 a4 a4 00 00 	callq	42148 <runtime.morestack_noctxt>
  43a0cc:	eb a2 	jmp	-94 <runtime.(*traceStackTable).newStack>
  43a0ce:	cc 	int3
  43a0cf:	cc 	int3

runtime.(*traceAlloc).alloc:
  43a0d0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43a0d9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43a0dd:	0f 86 fb 00 00 00 	jbe	251 <runtime.(*traceAlloc).alloc+0x10e>
  43a0e3:	48 83 ec 20 	subq	$32, %rsp
  43a0e7:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  43a0ec:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  43a0f1:	48 8b 44 24 28 	movq	40(%rsp), %rax
  43a0f6:	48 8b 08 	movq	(%rax), %rcx
  43a0f9:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  43a0fe:	48 83 c2 07 	addq	$7, %rdx
  43a102:	48 83 e2 f8 	andq	$-8, %rdx
  43a106:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  43a10b:	48 85 c9 	testq	%rcx, %rcx
  43a10e:	75 78 	jne	120 <runtime.(*traceAlloc).alloc+0xb8>
  43a110:	48 81 fa f8 ff 00 00 	cmpq	$65528, %rdx
  43a117:	0f 87 a6 00 00 00 	ja	166 <runtime.(*traceAlloc).alloc+0xf3>
  43a11d:	48 c7 04 24 00 00 01 00 	movq	$65536, (%rsp)
  43a125:	48 8d 05 74 a6 08 00 	leaq	566900(%rip), %rax
  43a12c:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43a131:	e8 ea 4e fd ff 	callq	-176406 <runtime.sysAlloc>
  43a136:	48 8b 44 24 10 	movq	16(%rsp), %rax
  43a13b:	48 85 c0 	testq	%rax, %rax
  43a13e:	74 68 	je	104 <runtime.(*traceAlloc).alloc+0xd8>
  43a140:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  43a145:	48 8b 11 	movq	(%rcx), %rdx
  43a148:	48 89 10 	movq	%rdx, (%rax)
  43a14b:	48 89 01 	movq	%rax, (%rcx)
  43a14e:	48 c7 41 08 00 00 00 00 	movq	$0, 8(%rcx)
  43a156:	48 8b 01 	movq	(%rcx), %rax
  43a159:	84 00 	testb	%al, (%rax)
  43a15b:	48 8b 51 08 	movq	8(%rcx), %rdx
  43a15f:	48 81 fa f8 ff 00 00 	cmpq	$65528, %rdx
  43a166:	73 39 	jae	57 <runtime.(*traceAlloc).alloc+0xd1>
  43a168:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  43a16d:	48 01 d3 	addq	%rdx, %rbx
  43a170:	48 89 59 08 	movq	%rbx, 8(%rcx)
  43a174:	48 8d 44 10 08 	leaq	8(%rax,%rdx), %rax
  43a179:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  43a17e:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  43a183:	48 83 c4 20 	addq	$32, %rsp
  43a187:	c3 	retq
  43a188:	48 8b 48 08 	movq	8(%rax), %rcx
  43a18c:	48 01 d1 	addq	%rdx, %rcx
  43a18f:	48 81 f9 f8 ff 00 00 	cmpq	$65528, %rcx
  43a196:	0f 87 74 ff ff ff 	ja	-140 <runtime.(*traceAlloc).alloc+0x40>
  43a19c:	48 89 c1 	movq	%rax, %rcx
  43a19f:	eb b5 	jmp	-75 <runtime.(*traceAlloc).alloc+0x86>
  43a1a1:	e8 9a 58 fe ff 	callq	-108390 <runtime.panicindex>
  43a1a6:	0f 0b 	ud2
  43a1a8:	48 8d 05 4a 10 03 00 	leaq	200778(%rip), %rax
  43a1af:	48 89 04 24 	movq	%rax, (%rsp)
  43a1b3:	48 c7 44 24 08 14 00 00 00 	movq	$20, 8(%rsp)
  43a1bc:	e8 0f 70 fe ff 	callq	-102385 <runtime.throw>
  43a1c1:	0f 0b 	ud2
  43a1c3:	48 8d 05 b4 13 03 00 	leaq	201652(%rip), %rax
  43a1ca:	48 89 04 24 	movq	%rax, (%rsp)
  43a1ce:	48 c7 44 24 08 16 00 00 00 	movq	$22, 8(%rsp)
  43a1d7:	e8 f4 6f fe ff 	callq	-102412 <runtime.throw>
  43a1dc:	0f 0b 	ud2
  43a1de:	e8 8d a3 00 00 	callq	41869 <runtime.morestack_noctxt>
  43a1e3:	e9 e8 fe ff ff 	jmp	-280 <runtime.(*traceAlloc).alloc>
  43a1e8:	cc 	int3
  43a1e9:	cc 	int3
  43a1ea:	cc 	int3
  43a1eb:	cc 	int3
  43a1ec:	cc 	int3
  43a1ed:	cc 	int3
  43a1ee:	cc 	int3
  43a1ef:	cc 	int3

runtime.traceGomaxprocs:
  43a1f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43a1f9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43a1fd:	76 5b 	jbe	91 <runtime.traceGomaxprocs+0x6a>
  43a1ff:	48 83 ec 38 	subq	$56, %rsp
  43a203:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  43a208:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  43a20d:	48 c7 44 24 28 00 00 00 00 	movq	$0, 40(%rsp)
  43a216:	8b 44 24 40 	movl	64(%rsp), %eax
  43a21a:	48 63 c0 	movslq	%eax, %rax
  43a21d:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  43a222:	c6 04 24 04 	movb	$4, (%rsp)
  43a226:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  43a22f:	48 8d 44 24 28 	leaq	40(%rsp), %rax
  43a234:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43a239:	48 c7 44 24 18 01 00 00 00 	movq	$1, 24(%rsp)
  43a242:	48 c7 44 24 20 01 00 00 00 	movq	$1, 32(%rsp)
  43a24b:	e8 c0 f3 ff ff 	callq	-3136 <runtime.traceEvent>
  43a250:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  43a255:	48 83 c4 38 	addq	$56, %rsp
  43a259:	c3 	retq
  43a25a:	e8 11 a3 00 00 	callq	41745 <runtime.morestack_noctxt>
  43a25f:	eb 8f 	jmp	-113 <runtime.traceGomaxprocs>
  43a261:	cc 	int3
  43a262:	cc 	int3
  43a263:	cc 	int3
  43a264:	cc 	int3
  43a265:	cc 	int3
  43a266:	cc 	int3
  43a267:	cc 	int3
  43a268:	cc 	int3
  43a269:	cc 	int3
  43a26a:	cc 	int3
  43a26b:	cc 	int3
  43a26c:	cc 	int3
  43a26d:	cc 	int3
  43a26e:	cc 	int3
  43a26f:	cc 	int3

runtime.traceProcStart:
  43a270:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43a279:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43a27d:	76 68 	jbe	104 <runtime.traceProcStart+0x77>
  43a27f:	48 83 ec 38 	subq	$56, %rsp
  43a283:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  43a288:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  43a28d:	48 c7 44 24 28 00 00 00 00 	movq	$0, 40(%rsp)
  43a296:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  43a29f:	48 8b 40 30 	movq	48(%rax), %rax
  43a2a3:	48 8b 80 e0 00 00 00 	movq	224(%rax), %rax
  43a2aa:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  43a2af:	c6 04 24 05 	movb	$5, (%rsp)
  43a2b3:	48 c7 44 24 08 ff ff ff ff 	movq	$-1, 8(%rsp)
  43a2bc:	48 8d 44 24 28 	leaq	40(%rsp), %rax
  43a2c1:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43a2c6:	48 c7 44 24 18 01 00 00 00 	movq	$1, 24(%rsp)
  43a2cf:	48 c7 44 24 20 01 00 00 00 	movq	$1, 32(%rsp)
  43a2d8:	e8 33 f3 ff ff 	callq	-3277 <runtime.traceEvent>
  43a2dd:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  43a2e2:	48 83 c4 38 	addq	$56, %rsp
  43a2e6:	c3 	retq
  43a2e7:	e8 84 a2 00 00 	callq	41604 <runtime.morestack_noctxt>
  43a2ec:	eb 82 	jmp	-126 <runtime.traceProcStart>
  43a2ee:	cc 	int3
  43a2ef:	cc 	int3

runtime.traceProcStop:
  43a2f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43a2f9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43a2fd:	0f 86 bb 00 00 00 	jbe	187 <runtime.traceProcStop+0xce>
  43a303:	48 83 ec 40 	subq	$64, %rsp
  43a307:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  43a30c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  43a311:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  43a31a:	48 8b 48 30 	movq	48(%rax), %rcx
  43a31e:	ff 81 00 01 00 00 	incl	256(%rcx)
  43a324:	48 8b 48 30 	movq	48(%rax), %rcx
  43a328:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  43a32d:	84 00 	testb	%al, (%rax)
  43a32f:	48 8d 81 d0 00 00 00 	leaq	208(%rcx), %rax
  43a336:	84 00 	testb	%al, (%rax)
  43a338:	48 8b 81 d0 00 00 00 	movq	208(%rcx), %rax
  43a33f:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  43a344:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  43a349:	48 89 91 d0 00 00 00 	movq	%rdx, 208(%rcx)
  43a350:	c6 04 24 06 	movb	$6, (%rsp)
  43a354:	48 c7 44 24 08 ff ff ff ff 	movq	$-1, 8(%rsp)
  43a35d:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  43a366:	0f 57 c0 	xorps	%xmm0, %xmm0
  43a369:	0f 11 44 24 18 	movups	%xmm0, 24(%rsp)
  43a36e:	e8 9d f2 ff ff 	callq	-3427 <runtime.traceEvent>
  43a373:	48 8b 44 24 28 	movq	40(%rsp), %rax
  43a378:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  43a37d:	48 89 81 d0 00 00 00 	movq	%rax, 208(%rcx)
  43a384:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  43a38d:	8b 91 00 01 00 00 	movl	256(%rcx), %edx
  43a393:	8d 5a ff 	leal	-1(%rdx), %ebx
  43a396:	89 99 00 01 00 00 	movl	%ebx, 256(%rcx)
  43a39c:	83 fa 01 	cmpl	$1, %edx
  43a39f:	75 13 	jne	19 <runtime.traceProcStop+0xc4>
  43a3a1:	0f b6 88 c0 00 00 00 	movzbl	192(%rax), %ecx
  43a3a8:	84 c9 	testb	%cl, %cl
  43a3aa:	74 08 	je	8 <runtime.traceProcStop+0xc4>
  43a3ac:	48 c7 40 10 de fa ff ff 	movq	$-1314, 16(%rax)
  43a3b4:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  43a3b9:	48 83 c4 40 	addq	$64, %rsp
  43a3bd:	c3 	retq
  43a3be:	e8 ad a1 00 00 	callq	41389 <runtime.morestack_noctxt>
  43a3c3:	e9 28 ff ff ff 	jmp	-216 <runtime.traceProcStop>
  43a3c8:	cc 	int3
  43a3c9:	cc 	int3
  43a3ca:	cc 	int3
  43a3cb:	cc 	int3
  43a3cc:	cc 	int3
  43a3cd:	cc 	int3
  43a3ce:	cc 	int3
  43a3cf:	cc 	int3

runtime.traceGCStart:
  43a3d0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43a3d9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43a3dd:	76 62 	jbe	98 <runtime.traceGCStart+0x71>
  43a3df:	48 83 ec 38 	subq	$56, %rsp
  43a3e3:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  43a3e8:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  43a3ed:	48 c7 44 24 28 00 00 00 00 	movq	$0, 40(%rsp)
  43a3f6:	48 8b 05 03 94 07 00 	movq	496643(%rip), %rax
  43a3fd:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  43a402:	c6 04 24 07 	movb	$7, (%rsp)
  43a406:	48 c7 44 24 08 03 00 00 00 	movq	$3, 8(%rsp)
  43a40f:	48 8d 44 24 28 	leaq	40(%rsp), %rax
  43a414:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43a419:	48 c7 44 24 18 01 00 00 00 	movq	$1, 24(%rsp)
  43a422:	48 c7 44 24 20 01 00 00 00 	movq	$1, 32(%rsp)
  43a42b:	e8 e0 f1 ff ff 	callq	-3616 <runtime.traceEvent>
  43a430:	48 ff 05 c9 93 07 00 	incq	496585(%rip)
  43a437:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  43a43c:	48 83 c4 38 	addq	$56, %rsp
  43a440:	c3 	retq
  43a441:	e8 2a a1 00 00 	callq	41258 <runtime.morestack_noctxt>
  43a446:	eb 88 	jmp	-120 <runtime.traceGCStart>
  43a448:	cc 	int3
  43a449:	cc 	int3
  43a44a:	cc 	int3
  43a44b:	cc 	int3
  43a44c:	cc 	int3
  43a44d:	cc 	int3
  43a44e:	cc 	int3
  43a44f:	cc 	int3

runtime.traceGCDone:
  43a450:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43a459:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43a45d:	76 3b 	jbe	59 <runtime.traceGCDone+0x4a>
  43a45f:	48 83 ec 30 	subq	$48, %rsp
  43a463:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  43a468:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  43a46d:	c6 04 24 08 	movb	$8, (%rsp)
  43a471:	48 c7 44 24 08 ff ff ff ff 	movq	$-1, 8(%rsp)
  43a47a:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  43a483:	0f 57 c0 	xorps	%xmm0, %xmm0
  43a486:	0f 11 44 24 18 	movups	%xmm0, 24(%rsp)
  43a48b:	e8 80 f1 ff ff 	callq	-3712 <runtime.traceEvent>
  43a490:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  43a495:	48 83 c4 30 	addq	$48, %rsp
  43a499:	c3 	retq
  43a49a:	e8 d1 a0 00 00 	callq	41169 <runtime.morestack_noctxt>
  43a49f:	eb af 	jmp	-81 <runtime.traceGCDone>
  43a4a1:	cc 	int3
  43a4a2:	cc 	int3
  43a4a3:	cc 	int3
  43a4a4:	cc 	int3
  43a4a5:	cc 	int3
  43a4a6:	cc 	int3
  43a4a7:	cc 	int3
  43a4a8:	cc 	int3
  43a4a9:	cc 	int3
  43a4aa:	cc 	int3
  43a4ab:	cc 	int3
  43a4ac:	cc 	int3
  43a4ad:	cc 	int3
  43a4ae:	cc 	int3
  43a4af:	cc 	int3

runtime.traceGCSTWStart:
  43a4b0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43a4b9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43a4bd:	76 59 	jbe	89 <runtime.traceGCSTWStart+0x68>
  43a4bf:	48 83 ec 38 	subq	$56, %rsp
  43a4c3:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  43a4c8:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  43a4cd:	48 c7 44 24 28 00 00 00 00 	movq	$0, 40(%rsp)
  43a4d6:	48 8b 44 24 40 	movq	64(%rsp), %rax
  43a4db:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  43a4e0:	c6 04 24 09 	movb	$9, (%rsp)
  43a4e4:	48 c7 44 24 08 ff ff ff ff 	movq	$-1, 8(%rsp)
  43a4ed:	48 8d 44 24 28 	leaq	40(%rsp), %rax
  43a4f2:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43a4f7:	48 c7 44 24 18 01 00 00 00 	movq	$1, 24(%rsp)
  43a500:	48 c7 44 24 20 01 00 00 00 	movq	$1, 32(%rsp)
  43a509:	e8 02 f1 ff ff 	callq	-3838 <runtime.traceEvent>
  43a50e:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  43a513:	48 83 c4 38 	addq	$56, %rsp
  43a517:	c3 	retq
  43a518:	e8 53 a0 00 00 	callq	41043 <runtime.morestack_noctxt>
  43a51d:	eb 91 	jmp	-111 <runtime.traceGCSTWStart>
  43a51f:	cc 	int3

runtime.traceGCSTWDone:
  43a520:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43a529:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43a52d:	76 3b 	jbe	59 <runtime.traceGCSTWDone+0x4a>
  43a52f:	48 83 ec 30 	subq	$48, %rsp
  43a533:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  43a538:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  43a53d:	c6 04 24 0a 	movb	$10, (%rsp)
  43a541:	48 c7 44 24 08 ff ff ff ff 	movq	$-1, 8(%rsp)
  43a54a:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  43a553:	0f 57 c0 	xorps	%xmm0, %xmm0
  43a556:	0f 11 44 24 18 	movups	%xmm0, 24(%rsp)
  43a55b:	e8 b0 f0 ff ff 	callq	-3920 <runtime.traceEvent>
  43a560:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  43a565:	48 83 c4 30 	addq	$48, %rsp
  43a569:	c3 	retq
  43a56a:	e8 01 a0 00 00 	callq	40961 <runtime.morestack_noctxt>
  43a56f:	eb af 	jmp	-81 <runtime.traceGCSTWDone>
  43a571:	cc 	int3
  43a572:	cc 	int3
  43a573:	cc 	int3
  43a574:	cc 	int3
  43a575:	cc 	int3
  43a576:	cc 	int3
  43a577:	cc 	int3
  43a578:	cc 	int3
  43a579:	cc 	int3
  43a57a:	cc 	int3
  43a57b:	cc 	int3
  43a57c:	cc 	int3
  43a57d:	cc 	int3
  43a57e:	cc 	int3
  43a57f:	cc 	int3

runtime.traceGCSweepStart:
  43a580:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43a589:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43a58d:	76 65 	jbe	101 <runtime.traceGCSweepStart+0x74>
  43a58f:	48 83 ec 18 	subq	$24, %rsp
  43a593:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  43a598:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  43a59d:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  43a5a6:	48 8b 40 30 	movq	48(%rax), %rax
  43a5aa:	48 8b 80 d0 00 00 00 	movq	208(%rax), %rax
  43a5b1:	84 00 	testb	%al, (%rax)
  43a5b3:	0f b6 88 20 12 00 00 	movzbl	4640(%rax), %ecx
  43a5ba:	84 c9 	testb	%cl, %cl
  43a5bc:	75 1b 	jne	27 <runtime.traceGCSweepStart+0x59>
  43a5be:	c6 80 20 12 00 00 01 	movb	$1, 4640(%rax)
  43a5c5:	0f 57 c0 	xorps	%xmm0, %xmm0
  43a5c8:	0f 11 80 28 12 00 00 	movups	%xmm0, 4648(%rax)
  43a5cf:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  43a5d4:	48 83 c4 18 	addq	$24, %rsp
  43a5d8:	c3 	retq
  43a5d9:	48 8d 05 c6 12 03 00 	leaq	201414(%rip), %rax
  43a5e0:	48 89 04 24 	movq	%rax, (%rsp)
  43a5e4:	48 c7 44 24 08 18 00 00 00 	movq	$24, 8(%rsp)
  43a5ed:	e8 de 6b fe ff 	callq	-103458 <runtime.throw>
  43a5f2:	0f 0b 	ud2
  43a5f4:	e8 77 9f 00 00 	callq	40823 <runtime.morestack_noctxt>
  43a5f9:	eb 85 	jmp	-123 <runtime.traceGCSweepStart>
  43a5fb:	cc 	int3
  43a5fc:	cc 	int3
  43a5fd:	cc 	int3
  43a5fe:	cc 	int3
  43a5ff:	cc 	int3

runtime.traceGCSweepSpan:
  43a600:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43a609:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43a60d:	0f 86 87 00 00 00 	jbe	135 <runtime.traceGCSweepSpan+0x9a>
  43a613:	48 83 ec 38 	subq	$56, %rsp
  43a617:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  43a61c:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  43a621:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  43a62a:	48 8b 40 30 	movq	48(%rax), %rax
  43a62e:	48 8b 80 d0 00 00 00 	movq	208(%rax), %rax
  43a635:	84 00 	testb	%al, (%rax)
  43a637:	0f b6 88 20 12 00 00 	movzbl	4640(%rax), %ecx
  43a63e:	84 c9 	testb	%cl, %cl
  43a640:	74 1f 	je	31 <runtime.traceGCSweepSpan+0x61>
  43a642:	48 8b 88 28 12 00 00 	movq	4648(%rax), %rcx
  43a649:	48 85 c9 	testq	%rcx, %rcx
  43a64c:	74 1d 	je	29 <runtime.traceGCSweepSpan+0x6b>
  43a64e:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  43a653:	48 03 88 28 12 00 00 	addq	4648(%rax), %rcx
  43a65a:	48 89 88 28 12 00 00 	movq	%rcx, 4648(%rax)
  43a661:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  43a666:	48 83 c4 38 	addq	$56, %rsp
  43a66a:	c3 	retq
  43a66b:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  43a670:	c6 04 24 0b 	movb	$11, (%rsp)
  43a674:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  43a67d:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  43a686:	0f 57 c0 	xorps	%xmm0, %xmm0
  43a689:	0f 11 44 24 18 	movups	%xmm0, 24(%rsp)
  43a68e:	e8 7d ef ff ff 	callq	-4227 <runtime.traceEvent>
  43a693:	48 8b 44 24 28 	movq	40(%rsp), %rax
  43a698:	eb b4 	jmp	-76 <runtime.traceGCSweepSpan+0x4e>
  43a69a:	e8 d1 9e 00 00 	callq	40657 <runtime.morestack_noctxt>
  43a69f:	e9 5c ff ff ff 	jmp	-164 <runtime.traceGCSweepSpan>
  43a6a4:	cc 	int3
  43a6a5:	cc 	int3
  43a6a6:	cc 	int3
  43a6a7:	cc 	int3
  43a6a8:	cc 	int3
  43a6a9:	cc 	int3
  43a6aa:	cc 	int3
  43a6ab:	cc 	int3
  43a6ac:	cc 	int3
  43a6ad:	cc 	int3
  43a6ae:	cc 	int3
  43a6af:	cc 	int3

runtime.traceGCSweepDone:
  43a6b0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43a6b9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43a6bd:	0f 86 c1 00 00 00 	jbe	193 <runtime.traceGCSweepDone+0xd4>
  43a6c3:	48 83 ec 48 	subq	$72, %rsp
  43a6c7:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  43a6cc:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  43a6d1:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  43a6da:	48 8b 40 30 	movq	48(%rax), %rax
  43a6de:	48 8b 80 d0 00 00 00 	movq	208(%rax), %rax
  43a6e5:	84 00 	testb	%al, (%rax)
  43a6e7:	0f b6 88 20 12 00 00 	movzbl	4640(%rax), %ecx
  43a6ee:	84 c9 	testb	%cl, %cl
  43a6f0:	74 77 	je	119 <runtime.traceGCSweepDone+0xb9>
  43a6f2:	48 8b 88 28 12 00 00 	movq	4648(%rax), %rcx
  43a6f9:	48 85 c9 	testq	%rcx, %rcx
  43a6fc:	75 11 	jne	17 <runtime.traceGCSweepDone+0x5f>
  43a6fe:	c6 80 20 12 00 00 00 	movb	$0, 4640(%rax)
  43a705:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  43a70a:	48 83 c4 48 	addq	$72, %rsp
  43a70e:	c3 	retq
  43a70f:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  43a714:	0f 57 c0 	xorps	%xmm0, %xmm0
  43a717:	0f 11 44 24 28 	movups	%xmm0, 40(%rsp)
  43a71c:	48 8b 88 28 12 00 00 	movq	4648(%rax), %rcx
  43a723:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  43a728:	48 8b 88 30 12 00 00 	movq	4656(%rax), %rcx
  43a72f:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  43a734:	c6 04 24 0c 	movb	$12, (%rsp)
  43a738:	48 c7 44 24 08 ff ff ff ff 	movq	$-1, 8(%rsp)
  43a741:	48 8d 4c 24 28 	leaq	40(%rsp), %rcx
  43a746:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  43a74b:	48 c7 44 24 18 02 00 00 00 	movq	$2, 24(%rsp)
  43a754:	48 c7 44 24 20 02 00 00 00 	movq	$2, 32(%rsp)
  43a75d:	e8 ae ee ff ff 	callq	-4434 <runtime.traceEvent>
  43a762:	48 8b 44 24 38 	movq	56(%rsp), %rax
  43a767:	eb 95 	jmp	-107 <runtime.traceGCSweepDone+0x4e>
  43a769:	48 8d 05 f0 12 03 00 	leaq	201456(%rip), %rax
  43a770:	48 89 04 24 	movq	%rax, (%rsp)
  43a774:	48 c7 44 24 08 19 00 00 00 	movq	$25, 8(%rsp)
  43a77d:	e8 4e 6a fe ff 	callq	-103858 <runtime.throw>
  43a782:	0f 0b 	ud2
  43a784:	e8 e7 9d 00 00 	callq	40423 <runtime.morestack_noctxt>
  43a789:	e9 22 ff ff ff 	jmp	-222 <runtime.traceGCSweepDone>
  43a78e:	cc 	int3
  43a78f:	cc 	int3

runtime.traceGCMarkAssistStart:
  43a790:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43a799:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43a79d:	76 3b 	jbe	59 <runtime.traceGCMarkAssistStart+0x4a>
  43a79f:	48 83 ec 30 	subq	$48, %rsp
  43a7a3:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  43a7a8:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  43a7ad:	c6 04 24 2b 	movb	$43, (%rsp)
  43a7b1:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  43a7ba:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  43a7c3:	0f 57 c0 	xorps	%xmm0, %xmm0
  43a7c6:	0f 11 44 24 18 	movups	%xmm0, 24(%rsp)
  43a7cb:	e8 40 ee ff ff 	callq	-4544 <runtime.traceEvent>
  43a7d0:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  43a7d5:	48 83 c4 30 	addq	$48, %rsp
  43a7d9:	c3 	retq
  43a7da:	e8 91 9d 00 00 	callq	40337 <runtime.morestack_noctxt>
  43a7df:	eb af 	jmp	-81 <runtime.traceGCMarkAssistStart>
  43a7e1:	cc 	int3
  43a7e2:	cc 	int3
  43a7e3:	cc 	int3
  43a7e4:	cc 	int3
  43a7e5:	cc 	int3
  43a7e6:	cc 	int3
  43a7e7:	cc 	int3
  43a7e8:	cc 	int3
  43a7e9:	cc 	int3
  43a7ea:	cc 	int3
  43a7eb:	cc 	int3
  43a7ec:	cc 	int3
  43a7ed:	cc 	int3
  43a7ee:	cc 	int3
  43a7ef:	cc 	int3

runtime.traceGCMarkAssistDone:
  43a7f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43a7f9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43a7fd:	76 3b 	jbe	59 <runtime.traceGCMarkAssistDone+0x4a>
  43a7ff:	48 83 ec 30 	subq	$48, %rsp
  43a803:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  43a808:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  43a80d:	c6 04 24 2c 	movb	$44, (%rsp)
  43a811:	48 c7 44 24 08 ff ff ff ff 	movq	$-1, 8(%rsp)
  43a81a:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  43a823:	0f 57 c0 	xorps	%xmm0, %xmm0
  43a826:	0f 11 44 24 18 	movups	%xmm0, 24(%rsp)
  43a82b:	e8 e0 ed ff ff 	callq	-4640 <runtime.traceEvent>
  43a830:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  43a835:	48 83 c4 30 	addq	$48, %rsp
  43a839:	c3 	retq
  43a83a:	e8 31 9d 00 00 	callq	40241 <runtime.morestack_noctxt>
  43a83f:	eb af 	jmp	-81 <runtime.traceGCMarkAssistDone>
  43a841:	cc 	int3
  43a842:	cc 	int3
  43a843:	cc 	int3
  43a844:	cc 	int3
  43a845:	cc 	int3
  43a846:	cc 	int3
  43a847:	cc 	int3
  43a848:	cc 	int3
  43a849:	cc 	int3
  43a84a:	cc 	int3
  43a84b:	cc 	int3
  43a84c:	cc 	int3
  43a84d:	cc 	int3
  43a84e:	cc 	int3
  43a84f:	cc 	int3

runtime.traceGoCreate:
  43a850:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43a859:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43a85d:	0f 86 da 00 00 00 	jbe	218 <runtime.traceGoCreate+0xed>
  43a863:	48 83 ec 40 	subq	$64, %rsp
  43a867:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  43a86c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  43a871:	48 8b 44 24 48 	movq	72(%rsp), %rax
  43a876:	48 c7 80 d0 00 00 00 00 00 00 00 	movq	$0, 208(%rax)
  43a881:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43a88a:	48 8b 49 30 	movq	48(%rcx), %rcx
  43a88e:	48 8b 89 d0 00 00 00 	movq	208(%rcx), %rcx
  43a895:	48 89 88 d8 00 00 00 	movq	%rcx, 216(%rax)
  43a89c:	48 8d 0d 5d d7 01 00 	leaq	120669(%rip), %rcx
  43a8a3:	48 89 0c 24 	movq	%rcx, (%rsp)
  43a8a7:	e8 74 08 fd ff 	callq	-194444 <runtime.newobject>
  43a8ac:	48 8b 44 24 08 	movq	8(%rsp), %rax
  43a8b1:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  43a8b6:	48 ff c1 	incq	%rcx
  43a8b9:	48 89 08 	movq	%rcx, (%rax)
  43a8bc:	48 8d 0d 6d 8f 07 00 	leaq	495469(%rip), %rcx
  43a8c3:	48 89 0c 24 	movq	%rcx, (%rsp)
  43a8c7:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43a8cc:	48 c7 44 24 10 01 00 00 00 	movq	$1, 16(%rsp)
  43a8d5:	48 c7 44 24 18 01 00 00 00 	movq	$1, 24(%rsp)
  43a8de:	e8 dd f4 ff ff 	callq	-2851 <runtime.(*traceStackTable).put>
  43a8e3:	8b 44 24 20 	movl	32(%rsp), %eax
  43a8e7:	0f 57 c0 	xorps	%xmm0, %xmm0
  43a8ea:	0f 11 44 24 28 	movups	%xmm0, 40(%rsp)
  43a8ef:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  43a8f4:	48 8b 89 98 00 00 00 	movq	152(%rcx), %rcx
  43a8fb:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  43a900:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  43a905:	c6 04 24 0d 	movb	$13, (%rsp)
  43a909:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  43a912:	48 8d 44 24 28 	leaq	40(%rsp), %rax
  43a917:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43a91c:	48 c7 44 24 18 02 00 00 00 	movq	$2, 24(%rsp)
  43a925:	48 c7 44 24 20 02 00 00 00 	movq	$2, 32(%rsp)
  43a92e:	e8 dd ec ff ff 	callq	-4899 <runtime.traceEvent>
  43a933:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  43a938:	48 83 c4 40 	addq	$64, %rsp
  43a93c:	c3 	retq
  43a93d:	e8 2e 9c 00 00 	callq	39982 <runtime.morestack_noctxt>
  43a942:	e9 09 ff ff ff 	jmp	-247 <runtime.traceGoCreate>
  43a947:	cc 	int3
  43a948:	cc 	int3
  43a949:	cc 	int3
  43a94a:	cc 	int3
  43a94b:	cc 	int3
  43a94c:	cc 	int3
  43a94d:	cc 	int3
  43a94e:	cc 	int3
  43a94f:	cc 	int3

runtime.traceGoStart:
  43a950:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43a959:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43a95d:	0f 86 81 01 00 00 	jbe	385 <runtime.traceGoStart+0x194>
  43a963:	48 83 ec 60 	subq	$96, %rsp
  43a967:	48 89 6c 24 58 	movq	%rbp, 88(%rsp)
  43a96c:	48 8d 6c 24 58 	leaq	88(%rsp), %rbp
  43a971:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  43a97a:	48 8b 40 30 	movq	48(%rax), %rax
  43a97e:	48 8b 80 c0 00 00 00 	movq	192(%rax), %rax
  43a985:	48 8b 48 30 	movq	48(%rax), %rcx
  43a989:	48 8b 89 d0 00 00 00 	movq	208(%rcx), %rcx
  43a990:	48 ff 80 d0 00 00 00 	incq	208(%rax)
  43a997:	48 89 ca 	movq	%rcx, %rdx
  43a99a:	84 01 	testb	%al, (%rcx)
  43a99c:	48 8b 99 58 12 00 00 	movq	4696(%rcx), %rbx
  43a9a3:	48 39 d8 	cmpq	%rbx, %rax
  43a9a6:	0f 85 86 00 00 00 	jne	134 <runtime.traceGoStart+0xe2>
  43a9ac:	48 c7 44 24 40 00 00 00 00 	movq	$0, 64(%rsp)
  43a9b5:	0f 57 c0 	xorps	%xmm0, %xmm0
  43a9b8:	0f 11 44 24 48 	movups	%xmm0, 72(%rsp)
  43a9bd:	48 8b 90 98 00 00 00 	movq	152(%rax), %rdx
  43a9c4:	48 89 54 24 40 	movq	%rdx, 64(%rsp)
  43a9c9:	48 8b 80 d0 00 00 00 	movq	208(%rax), %rax
  43a9d0:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  43a9d5:	48 8b 81 60 12 00 00 	movq	4704(%rcx), %rax
  43a9dc:	48 83 f8 03 	cmpq	$3, %rax
  43a9e0:	0f 83 f7 00 00 00 	jae	247 <runtime.traceGoStart+0x18d>
  43a9e6:	48 8d 0d d3 8d 07 00 	leaq	495059(%rip), %rcx
  43a9ed:	48 8b 84 c1 a0 00 01 00 	movq	65696(%rcx,%rax,8), %rax
  43a9f5:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  43a9fa:	c6 04 24 29 	movb	$41, (%rsp)
  43a9fe:	48 c7 44 24 08 ff ff ff ff 	movq	$-1, 8(%rsp)
  43aa07:	48 8d 44 24 40 	leaq	64(%rsp), %rax
  43aa0c:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43aa11:	48 c7 44 24 18 03 00 00 00 	movq	$3, 24(%rsp)
  43aa1a:	48 c7 44 24 20 03 00 00 00 	movq	$3, 32(%rsp)
  43aa23:	e8 e8 eb ff ff 	callq	-5144 <runtime.traceEvent>
  43aa28:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  43aa2d:	48 83 c4 60 	addq	$96, %rsp
  43aa31:	c3 	retq
  43aa32:	48 8b 88 d8 00 00 00 	movq	216(%rax), %rcx
  43aa39:	48 39 d1 	cmpq	%rdx, %rcx
  43aa3c:	75 45 	jne	69 <runtime.traceGoStart+0x133>
  43aa3e:	48 c7 44 24 28 00 00 00 00 	movq	$0, 40(%rsp)
  43aa47:	48 8b 80 98 00 00 00 	movq	152(%rax), %rax
  43aa4e:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  43aa53:	c6 04 24 26 	movb	$38, (%rsp)
  43aa57:	48 c7 44 24 08 ff ff ff ff 	movq	$-1, 8(%rsp)
  43aa60:	48 8d 44 24 28 	leaq	40(%rsp), %rax
  43aa65:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43aa6a:	48 c7 44 24 18 01 00 00 00 	movq	$1, 24(%rsp)
  43aa73:	48 c7 44 24 20 01 00 00 00 	movq	$1, 32(%rsp)
  43aa7c:	e8 8f eb ff ff 	callq	-5233 <runtime.traceEvent>
  43aa81:	eb a5 	jmp	-91 <runtime.traceGoStart+0xd8>
  43aa83:	48 89 90 d8 00 00 00 	movq	%rdx, 216(%rax)
  43aa8a:	0f 57 c0 	xorps	%xmm0, %xmm0
  43aa8d:	0f 11 44 24 30 	movups	%xmm0, 48(%rsp)
  43aa92:	48 8b 88 98 00 00 00 	movq	152(%rax), %rcx
  43aa99:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  43aa9e:	48 8b 80 d0 00 00 00 	movq	208(%rax), %rax
  43aaa5:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  43aaaa:	c6 04 24 0e 	movb	$14, (%rsp)
  43aaae:	48 c7 44 24 08 ff ff ff ff 	movq	$-1, 8(%rsp)
  43aab7:	48 8d 44 24 30 	leaq	48(%rsp), %rax
  43aabc:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43aac1:	48 c7 44 24 18 02 00 00 00 	movq	$2, 24(%rsp)
  43aaca:	48 c7 44 24 20 02 00 00 00 	movq	$2, 32(%rsp)
  43aad3:	e8 38 eb ff ff 	callq	-5320 <runtime.traceEvent>
  43aad8:	e9 4b ff ff ff 	jmp	-181 <runtime.traceGoStart+0xd8>
  43aadd:	e8 5e 4f fe ff 	callq	-110754 <runtime.panicindex>
  43aae2:	0f 0b 	ud2
  43aae4:	e8 87 9a 00 00 	callq	39559 <runtime.morestack_noctxt>
  43aae9:	e9 62 fe ff ff 	jmp	-414 <runtime.traceGoStart>
  43aaee:	cc 	int3
  43aaef:	cc 	int3

runtime.traceGoEnd:
  43aaf0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43aaf9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43aafd:	76 3b 	jbe	59 <runtime.traceGoEnd+0x4a>
  43aaff:	48 83 ec 30 	subq	$48, %rsp
  43ab03:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  43ab08:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  43ab0d:	c6 04 24 0f 	movb	$15, (%rsp)
  43ab11:	48 c7 44 24 08 ff ff ff ff 	movq	$-1, 8(%rsp)
  43ab1a:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  43ab23:	0f 57 c0 	xorps	%xmm0, %xmm0
  43ab26:	0f 11 44 24 18 	movups	%xmm0, 24(%rsp)
  43ab2b:	e8 e0 ea ff ff 	callq	-5408 <runtime.traceEvent>
  43ab30:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  43ab35:	48 83 c4 30 	addq	$48, %rsp
  43ab39:	c3 	retq
  43ab3a:	e8 31 9a 00 00 	callq	39473 <runtime.morestack_noctxt>
  43ab3f:	eb af 	jmp	-81 <runtime.traceGoEnd>
  43ab41:	cc 	int3
  43ab42:	cc 	int3
  43ab43:	cc 	int3
  43ab44:	cc 	int3
  43ab45:	cc 	int3
  43ab46:	cc 	int3
  43ab47:	cc 	int3
  43ab48:	cc 	int3
  43ab49:	cc 	int3
  43ab4a:	cc 	int3
  43ab4b:	cc 	int3
  43ab4c:	cc 	int3
  43ab4d:	cc 	int3
  43ab4e:	cc 	int3
  43ab4f:	cc 	int3

runtime.traceGoSched:
  43ab50:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43ab59:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43ab5d:	76 56 	jbe	86 <runtime.traceGoSched+0x65>
  43ab5f:	48 83 ec 30 	subq	$48, %rsp
  43ab63:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  43ab68:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  43ab6d:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  43ab76:	48 8b 48 30 	movq	48(%rax), %rcx
  43ab7a:	48 8b 89 d0 00 00 00 	movq	208(%rcx), %rcx
  43ab81:	48 89 88 d8 00 00 00 	movq	%rcx, 216(%rax)
  43ab88:	c6 04 24 11 	movb	$17, (%rsp)
  43ab8c:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  43ab95:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  43ab9e:	0f 57 c0 	xorps	%xmm0, %xmm0
  43aba1:	0f 11 44 24 18 	movups	%xmm0, 24(%rsp)
  43aba6:	e8 65 ea ff ff 	callq	-5531 <runtime.traceEvent>
  43abab:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  43abb0:	48 83 c4 30 	addq	$48, %rsp
  43abb4:	c3 	retq
  43abb5:	e8 b6 99 00 00 	callq	39350 <runtime.morestack_noctxt>
  43abba:	eb 94 	jmp	-108 <runtime.traceGoSched>
  43abbc:	cc 	int3
  43abbd:	cc 	int3
  43abbe:	cc 	int3
  43abbf:	cc 	int3

runtime.traceGoPreempt:
  43abc0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43abc9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43abcd:	76 56 	jbe	86 <runtime.traceGoPreempt+0x65>
  43abcf:	48 83 ec 30 	subq	$48, %rsp
  43abd3:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  43abd8:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  43abdd:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  43abe6:	48 8b 48 30 	movq	48(%rax), %rcx
  43abea:	48 8b 89 d0 00 00 00 	movq	208(%rcx), %rcx
  43abf1:	48 89 88 d8 00 00 00 	movq	%rcx, 216(%rax)
  43abf8:	c6 04 24 12 	movb	$18, (%rsp)
  43abfc:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  43ac05:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  43ac0e:	0f 57 c0 	xorps	%xmm0, %xmm0
  43ac11:	0f 11 44 24 18 	movups	%xmm0, 24(%rsp)
  43ac16:	e8 f5 e9 ff ff 	callq	-5643 <runtime.traceEvent>
  43ac1b:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  43ac20:	48 83 c4 30 	addq	$48, %rsp
  43ac24:	c3 	retq
  43ac25:	e8 46 99 00 00 	callq	39238 <runtime.morestack_noctxt>
  43ac2a:	eb 94 	jmp	-108 <runtime.traceGoPreempt>
  43ac2c:	cc 	int3
  43ac2d:	cc 	int3
  43ac2e:	cc 	int3
  43ac2f:	cc 	int3

runtime.traceGoPark:
  43ac30:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43ac39:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43ac3d:	76 71 	jbe	113 <runtime.traceGoPark+0x80>
  43ac3f:	48 83 ec 30 	subq	$48, %rsp
  43ac43:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  43ac48:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  43ac4d:	0f b6 44 24 38 	movzbl	56(%rsp), %eax
  43ac52:	a8 80 	testb	$-128, %al
  43ac54:	75 30 	jne	48 <runtime.traceGoPark+0x56>
  43ac56:	83 e0 7f 	andl	$127, %eax
  43ac59:	88 04 24 	movb	%al, (%rsp)
  43ac5c:	48 8b 44 24 40 	movq	64(%rsp), %rax
  43ac61:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43ac66:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  43ac6f:	0f 57 c0 	xorps	%xmm0, %xmm0
  43ac72:	0f 11 44 24 18 	movups	%xmm0, 24(%rsp)
  43ac77:	e8 94 e9 ff ff 	callq	-5740 <runtime.traceEvent>
  43ac7c:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  43ac81:	48 83 c4 30 	addq	$48, %rsp
  43ac85:	c3 	retq
  43ac86:	c6 04 24 24 	movb	$36, (%rsp)
  43ac8a:	48 c7 44 24 08 ff ff ff ff 	movq	$-1, 8(%rsp)
  43ac93:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  43ac9c:	0f 57 c0 	xorps	%xmm0, %xmm0
  43ac9f:	0f 11 44 24 18 	movups	%xmm0, 24(%rsp)
  43aca4:	e8 67 e9 ff ff 	callq	-5785 <runtime.traceEvent>
  43aca9:	0f b6 44 24 38 	movzbl	56(%rsp), %eax
  43acae:	eb a6 	jmp	-90 <runtime.traceGoPark+0x26>
  43acb0:	e8 bb 98 00 00 	callq	39099 <runtime.morestack_noctxt>
  43acb5:	e9 76 ff ff ff 	jmp	-138 <runtime.traceGoPark>
  43acba:	cc 	int3
  43acbb:	cc 	int3
  43acbc:	cc 	int3
  43acbd:	cc 	int3
  43acbe:	cc 	int3
  43acbf:	cc 	int3

runtime.traceGoUnpark:
  43acc0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43acc9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43accd:	0f 86 e0 00 00 00 	jbe	224 <runtime.traceGoUnpark+0xf3>
  43acd3:	48 83 ec 48 	subq	$72, %rsp
  43acd7:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  43acdc:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  43ace1:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  43acea:	48 8b 40 30 	movq	48(%rax), %rax
  43acee:	48 8b 80 d0 00 00 00 	movq	208(%rax), %rax
  43acf5:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  43acfa:	48 ff 81 d0 00 00 00 	incq	208(%rcx)
  43ad01:	48 8b 91 d8 00 00 00 	movq	216(%rcx), %rdx
  43ad08:	48 39 c2 	cmpq	%rax, %rdx
  43ad0b:	75 4e 	jne	78 <runtime.traceGoUnpark+0x9b>
  43ad0d:	48 c7 44 24 28 00 00 00 00 	movq	$0, 40(%rsp)
  43ad16:	48 8b 81 98 00 00 00 	movq	152(%rcx), %rax
  43ad1d:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  43ad22:	c6 04 24 27 	movb	$39, (%rsp)
  43ad26:	48 8b 44 24 58 	movq	88(%rsp), %rax
  43ad2b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43ad30:	48 8d 44 24 28 	leaq	40(%rsp), %rax
  43ad35:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43ad3a:	48 c7 44 24 18 01 00 00 00 	movq	$1, 24(%rsp)
  43ad43:	48 c7 44 24 20 01 00 00 00 	movq	$1, 32(%rsp)
  43ad4c:	e8 bf e8 ff ff 	callq	-5953 <runtime.traceEvent>
  43ad51:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  43ad56:	48 83 c4 48 	addq	$72, %rsp
  43ad5a:	c3 	retq
  43ad5b:	48 89 81 d8 00 00 00 	movq	%rax, 216(%rcx)
  43ad62:	0f 57 c0 	xorps	%xmm0, %xmm0
  43ad65:	0f 11 44 24 30 	movups	%xmm0, 48(%rsp)
  43ad6a:	48 8b 81 98 00 00 00 	movq	152(%rcx), %rax
  43ad71:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  43ad76:	48 8b 81 d0 00 00 00 	movq	208(%rcx), %rax
  43ad7d:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  43ad82:	c6 04 24 15 	movb	$21, (%rsp)
  43ad86:	48 8b 44 24 58 	movq	88(%rsp), %rax
  43ad8b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43ad90:	48 8d 44 24 30 	leaq	48(%rsp), %rax
  43ad95:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43ad9a:	48 c7 44 24 18 02 00 00 00 	movq	$2, 24(%rsp)
  43ada3:	48 c7 44 24 20 02 00 00 00 	movq	$2, 32(%rsp)
  43adac:	e8 5f e8 ff ff 	callq	-6049 <runtime.traceEvent>
  43adb1:	eb 9e 	jmp	-98 <runtime.traceGoUnpark+0x91>
  43adb3:	e8 b8 97 00 00 	callq	38840 <runtime.morestack_noctxt>
  43adb8:	e9 03 ff ff ff 	jmp	-253 <runtime.traceGoUnpark>
  43adbd:	cc 	int3
  43adbe:	cc 	int3
  43adbf:	cc 	int3

runtime.traceGoSysCall:
  43adc0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43adc9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43adcd:	76 3b 	jbe	59 <runtime.traceGoSysCall+0x4a>
  43adcf:	48 83 ec 30 	subq	$48, %rsp
  43add3:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  43add8:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  43addd:	c6 04 24 1c 	movb	$28, (%rsp)
  43ade1:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  43adea:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  43adf3:	0f 57 c0 	xorps	%xmm0, %xmm0
  43adf6:	0f 11 44 24 18 	movups	%xmm0, 24(%rsp)
  43adfb:	e8 10 e8 ff ff 	callq	-6128 <runtime.traceEvent>
  43ae00:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  43ae05:	48 83 c4 30 	addq	$48, %rsp
  43ae09:	c3 	retq
  43ae0a:	e8 61 97 00 00 	callq	38753 <runtime.morestack_noctxt>
  43ae0f:	eb af 	jmp	-81 <runtime.traceGoSysCall>
  43ae11:	cc 	int3
  43ae12:	cc 	int3
  43ae13:	cc 	int3
  43ae14:	cc 	int3
  43ae15:	cc 	int3
  43ae16:	cc 	int3
  43ae17:	cc 	int3
  43ae18:	cc 	int3
  43ae19:	cc 	int3
  43ae1a:	cc 	int3
  43ae1b:	cc 	int3
  43ae1c:	cc 	int3
  43ae1d:	cc 	int3
  43ae1e:	cc 	int3
  43ae1f:	cc 	int3

runtime.traceGoSysExit:
  43ae20:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43ae29:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43ae2d:	0f 86 bd 00 00 00 	jbe	189 <runtime.traceGoSysExit+0xd0>
  43ae33:	48 83 ec 48 	subq	$72, %rsp
  43ae37:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  43ae3c:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  43ae41:	48 8b 44 24 50 	movq	80(%rsp), %rax
  43ae46:	48 85 c0 	testq	%rax, %rax
  43ae49:	74 0e 	je	14 <runtime.traceGoSysExit+0x39>
  43ae4b:	48 8b 0d 8e 89 07 00 	movq	493966(%rip), %rcx
  43ae52:	48 39 c8 	cmpq	%rcx, %rax
  43ae55:	7d 02 	jge	2 <runtime.traceGoSysExit+0x39>
  43ae57:	31 c0 	xorl	%eax, %eax
  43ae59:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43ae62:	48 8b 49 30 	movq	48(%rcx), %rcx
  43ae66:	48 8b 89 c0 00 00 00 	movq	192(%rcx), %rcx
  43ae6d:	48 ff 81 d0 00 00 00 	incq	208(%rcx)
  43ae74:	48 8b 51 30 	movq	48(%rcx), %rdx
  43ae78:	48 8b 92 d0 00 00 00 	movq	208(%rdx), %rdx
  43ae7f:	48 89 91 d8 00 00 00 	movq	%rdx, 216(%rcx)
  43ae86:	48 c7 44 24 28 00 00 00 00 	movq	$0, 40(%rsp)
  43ae8f:	0f 57 c0 	xorps	%xmm0, %xmm0
  43ae92:	0f 11 44 24 30 	movups	%xmm0, 48(%rsp)
  43ae97:	48 8b 91 98 00 00 00 	movq	152(%rcx), %rdx
  43ae9e:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  43aea3:	48 8b 89 d0 00 00 00 	movq	208(%rcx), %rcx
  43aeaa:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  43aeaf:	48 c1 e8 06 	shrq	$6, %rax
  43aeb3:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  43aeb8:	c6 04 24 1d 	movb	$29, (%rsp)
  43aebc:	48 c7 44 24 08 ff ff ff ff 	movq	$-1, 8(%rsp)
  43aec5:	48 8d 44 24 28 	leaq	40(%rsp), %rax
  43aeca:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43aecf:	48 c7 44 24 18 03 00 00 00 	movq	$3, 24(%rsp)
  43aed8:	48 c7 44 24 20 03 00 00 00 	movq	$3, 32(%rsp)
  43aee1:	e8 2a e7 ff ff 	callq	-6358 <runtime.traceEvent>
  43aee6:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  43aeeb:	48 83 c4 48 	addq	$72, %rsp
  43aeef:	c3 	retq
  43aef0:	e8 7b 96 00 00 	callq	38523 <runtime.morestack_noctxt>
  43aef5:	e9 26 ff ff ff 	jmp	-218 <runtime.traceGoSysExit>
  43aefa:	cc 	int3
  43aefb:	cc 	int3
  43aefc:	cc 	int3
  43aefd:	cc 	int3
  43aefe:	cc 	int3
  43aeff:	cc 	int3

runtime.traceGoSysBlock:
  43af00:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43af09:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43af0d:	0f 86 bb 00 00 00 	jbe	187 <runtime.traceGoSysBlock+0xce>
  43af13:	48 83 ec 40 	subq	$64, %rsp
  43af17:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  43af1c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  43af21:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  43af2a:	48 8b 48 30 	movq	48(%rax), %rcx
  43af2e:	ff 81 00 01 00 00 	incl	256(%rcx)
  43af34:	48 8b 48 30 	movq	48(%rax), %rcx
  43af38:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  43af3d:	84 00 	testb	%al, (%rax)
  43af3f:	48 8d 81 d0 00 00 00 	leaq	208(%rcx), %rax
  43af46:	84 00 	testb	%al, (%rax)
  43af48:	48 8b 81 d0 00 00 00 	movq	208(%rcx), %rax
  43af4f:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  43af54:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  43af59:	48 89 91 d0 00 00 00 	movq	%rdx, 208(%rcx)
  43af60:	c6 04 24 1e 	movb	$30, (%rsp)
  43af64:	48 c7 44 24 08 ff ff ff ff 	movq	$-1, 8(%rsp)
  43af6d:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  43af76:	0f 57 c0 	xorps	%xmm0, %xmm0
  43af79:	0f 11 44 24 18 	movups	%xmm0, 24(%rsp)
  43af7e:	e8 8d e6 ff ff 	callq	-6515 <runtime.traceEvent>
  43af83:	48 8b 44 24 28 	movq	40(%rsp), %rax
  43af88:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  43af8d:	48 89 81 d0 00 00 00 	movq	%rax, 208(%rcx)
  43af94:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  43af9d:	8b 91 00 01 00 00 	movl	256(%rcx), %edx
  43afa3:	8d 5a ff 	leal	-1(%rdx), %ebx
  43afa6:	89 99 00 01 00 00 	movl	%ebx, 256(%rcx)
  43afac:	83 fa 01 	cmpl	$1, %edx
  43afaf:	75 13 	jne	19 <runtime.traceGoSysBlock+0xc4>
  43afb1:	0f b6 88 c0 00 00 00 	movzbl	192(%rax), %ecx
  43afb8:	84 c9 	testb	%cl, %cl
  43afba:	74 08 	je	8 <runtime.traceGoSysBlock+0xc4>
  43afbc:	48 c7 40 10 de fa ff ff 	movq	$-1314, 16(%rax)
  43afc4:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  43afc9:	48 83 c4 40 	addq	$64, %rsp
  43afcd:	c3 	retq
  43afce:	e8 9d 95 00 00 	callq	38301 <runtime.morestack_noctxt>
  43afd3:	e9 28 ff ff ff 	jmp	-216 <runtime.traceGoSysBlock>
  43afd8:	cc 	int3
  43afd9:	cc 	int3
  43afda:	cc 	int3
  43afdb:	cc 	int3
  43afdc:	cc 	int3
  43afdd:	cc 	int3
  43afde:	cc 	int3
  43afdf:	cc 	int3

runtime.traceHeapAlloc:
  43afe0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43afe9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43afed:	76 5b 	jbe	91 <runtime.traceHeapAlloc+0x6a>
  43afef:	48 83 ec 38 	subq	$56, %rsp
  43aff3:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  43aff8:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  43affd:	48 c7 44 24 28 00 00 00 00 	movq	$0, 40(%rsp)
  43b006:	48 8b 05 33 ae 08 00 	movq	568883(%rip), %rax
  43b00d:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  43b012:	c6 04 24 21 	movb	$33, (%rsp)
  43b016:	48 c7 44 24 08 ff ff ff ff 	movq	$-1, 8(%rsp)
  43b01f:	48 8d 44 24 28 	leaq	40(%rsp), %rax
  43b024:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43b029:	48 c7 44 24 18 01 00 00 00 	movq	$1, 24(%rsp)
  43b032:	48 c7 44 24 20 01 00 00 00 	movq	$1, 32(%rsp)
  43b03b:	e8 d0 e5 ff ff 	callq	-6704 <runtime.traceEvent>
  43b040:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  43b045:	48 83 c4 38 	addq	$56, %rsp
  43b049:	c3 	retq
  43b04a:	e8 21 95 00 00 	callq	38177 <runtime.morestack_noctxt>
  43b04f:	eb 8f 	jmp	-113 <runtime.traceHeapAlloc>
  43b051:	cc 	int3
  43b052:	cc 	int3
  43b053:	cc 	int3
  43b054:	cc 	int3
  43b055:	cc 	int3
  43b056:	cc 	int3
  43b057:	cc 	int3
  43b058:	cc 	int3
  43b059:	cc 	int3
  43b05a:	cc 	int3
  43b05b:	cc 	int3
  43b05c:	cc 	int3
  43b05d:	cc 	int3
  43b05e:	cc 	int3
  43b05f:	cc 	int3

runtime.traceNextGC:
  43b060:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43b069:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43b06d:	0f 86 a4 00 00 00 	jbe	164 <runtime.traceNextGC+0xb7>
  43b073:	48 83 ec 40 	subq	$64, %rsp
  43b077:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  43b07c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  43b081:	48 8b 05 20 97 08 00 	movq	562976(%rip), %rax
  43b088:	48 83 f8 ff 	cmpq	$-1, %rax
  43b08c:	75 44 	jne	68 <runtime.traceNextGC+0x72>
  43b08e:	48 8b 05 d3 9a 03 00 	movq	236243(%rip), %rax
  43b095:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  43b09a:	c6 04 24 22 	movb	$34, (%rsp)
  43b09e:	48 c7 44 24 08 ff ff ff ff 	movq	$-1, 8(%rsp)
  43b0a7:	48 8d 44 24 30 	leaq	48(%rsp), %rax
  43b0ac:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43b0b1:	48 c7 44 24 18 01 00 00 00 	movq	$1, 24(%rsp)
  43b0ba:	48 c7 44 24 20 01 00 00 00 	movq	$1, 32(%rsp)
  43b0c3:	e8 48 e5 ff ff 	callq	-6840 <runtime.traceEvent>
  43b0c8:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  43b0cd:	48 83 c4 40 	addq	$64, %rsp
  43b0d1:	c3 	retq
  43b0d2:	48 c7 44 24 28 00 00 00 00 	movq	$0, 40(%rsp)
  43b0db:	48 8b 05 c6 96 08 00 	movq	562886(%rip), %rax
  43b0e2:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  43b0e7:	c6 04 24 22 	movb	$34, (%rsp)
  43b0eb:	48 c7 44 24 08 ff ff ff ff 	movq	$-1, 8(%rsp)
  43b0f4:	48 8d 44 24 28 	leaq	40(%rsp), %rax
  43b0f9:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43b0fe:	48 c7 44 24 18 01 00 00 00 	movq	$1, 24(%rsp)
  43b107:	48 c7 44 24 20 01 00 00 00 	movq	$1, 32(%rsp)
  43b110:	e8 fb e4 ff ff 	callq	-6917 <runtime.traceEvent>
  43b115:	eb b1 	jmp	-79 <runtime.traceNextGC+0x68>
  43b117:	e8 54 94 00 00 	callq	37972 <runtime.morestack_noctxt>
  43b11c:	e9 3f ff ff ff 	jmp	-193 <runtime.traceNextGC>
  43b121:	cc 	int3
  43b122:	cc 	int3
  43b123:	cc 	int3
  43b124:	cc 	int3
  43b125:	cc 	int3
  43b126:	cc 	int3
  43b127:	cc 	int3
  43b128:	cc 	int3
  43b129:	cc 	int3
  43b12a:	cc 	int3
  43b12b:	cc 	int3
  43b12c:	cc 	int3
  43b12d:	cc 	int3
  43b12e:	cc 	int3
  43b12f:	cc 	int3

runtime.tracebackdefers:
  43b130:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43b139:	48 8d 44 24 d0 	leaq	-48(%rsp), %rax
  43b13e:	48 3b 41 10 	cmpq	16(%rcx), %rax
  43b142:	0f 86 d3 01 00 00 	jbe	467 <runtime.tracebackdefers+0x1eb>
  43b148:	48 81 ec b0 00 00 00 	subq	$176, %rsp
  43b14f:	48 89 ac 24 a8 00 00 00 	movq	%rbp, 168(%rsp)
  43b157:	48 8d ac 24 a8 00 00 00 	leaq	168(%rsp), %rbp
  43b15f:	48 c7 44 24 50 00 00 00 00 	movq	$0, 80(%rsp)
  43b168:	48 8d 7c 24 58 	leaq	88(%rsp), %rdi
  43b16d:	0f 57 c0 	xorps	%xmm0, %xmm0
  43b170:	48 8d 7f d0 	leaq	-48(%rdi), %rdi
  43b174:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  43b179:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  43b17e:	e8 32 b9 00 00 	callq	47410 <runtime.duffzero+0x115>
  43b183:	48 8b 6d 00 	movq	(%rbp), %rbp
  43b187:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  43b18f:	48 8b 40 28 	movq	40(%rax), %rax
  43b193:	eb 0c 	jmp	12 <runtime.tracebackdefers+0x71>
  43b195:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  43b19a:	48 8b 41 28 	movq	40(%rcx), %rax
  43b19e:	0f 57 c0 	xorps	%xmm0, %xmm0
  43b1a1:	48 85 c0 	testq	%rax, %rax
  43b1a4:	0f 84 06 01 00 00 	je	262 <runtime.tracebackdefers+0x180>
  43b1aa:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  43b1af:	48 8b 48 18 	movq	24(%rax), %rcx
  43b1b3:	48 85 c9 	testq	%rcx, %rcx
  43b1b6:	75 68 	jne	104 <runtime.tracebackdefers+0xf0>
  43b1b8:	48 c7 44 24 60 00 00 00 00 	movq	$0, 96(%rsp)
  43b1c1:	0f 11 44 24 50 	movups	%xmm0, 80(%rsp)
  43b1c6:	0f 11 84 24 90 00 00 00 	movups	%xmm0, 144(%rsp)
  43b1ce:	48 c7 84 24 a0 00 00 00 00 00 00 00 	movq	$0, 160(%rsp)
  43b1da:	48 8b 44 24 60 	movq	96(%rsp), %rax
  43b1df:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  43b1e4:	48 8d 44 24 50 	leaq	80(%rsp), %rax
  43b1e9:	48 89 04 24 	movq	%rax, (%rsp)
  43b1ed:	48 8b 8c 24 c8 00 00 00 	movq	200(%rsp), %rcx
  43b1f5:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  43b1fa:	48 8b 94 24 c0 00 00 00 	movq	192(%rsp), %rdx
  43b202:	48 8b 1a 	movq	(%rdx), %rbx
  43b205:	ff d3 	callq	*%rbx
  43b207:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  43b20c:	84 c0 	testb	%al, %al
  43b20e:	75 85 	jne	-123 <runtime.tracebackdefers+0x65>
  43b210:	48 8b ac 24 a8 00 00 00 	movq	168(%rsp), %rbp
  43b218:	48 81 c4 b0 00 00 00 	addq	$176, %rsp
  43b21f:	c3 	retq
  43b220:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  43b225:	48 8b 01 	movq	(%rcx), %rax
  43b228:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  43b22d:	48 89 04 24 	movq	%rax, (%rsp)
  43b231:	e8 9a cf ff ff 	callq	-12390 <runtime.findfunc>
  43b236:	48 8b 44 24 10 	movq	16(%rsp), %rax
  43b23b:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  43b240:	48 85 c9 	testq	%rcx, %rcx
  43b243:	74 7b 	je	123 <runtime.tracebackdefers+0x190>
  43b245:	48 89 4c 24 50 	movq	%rcx, 80(%rsp)
  43b24a:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  43b24f:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  43b254:	8b 1a 	movl	(%rdx), %ebx
  43b256:	85 db 	testl	%ebx, %ebx
  43b258:	75 50 	jne	80 <runtime.tracebackdefers+0x17a>
  43b25a:	31 db 	xorl	%ebx, %ebx
  43b25c:	48 89 9c 24 90 00 00 00 	movq	%rbx, 144(%rsp)
  43b264:	48 8d 54 24 50 	leaq	80(%rsp), %rdx
  43b269:	48 89 14 24 	movq	%rdx, (%rsp)
  43b26d:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  43b272:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43b277:	c6 44 24 18 01 	movb	$1, 24(%rsp)
  43b27c:	48 8b 44 24 40 	movq	64(%rsp), %rax
  43b281:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  43b286:	e8 e5 1c 00 00 	callq	7397 <runtime.getArgInfo>
  43b28b:	48 8b 44 24 28 	movq	40(%rsp), %rax
  43b290:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  43b295:	48 89 84 24 98 00 00 00 	movq	%rax, 152(%rsp)
  43b29d:	48 89 8c 24 a0 00 00 00 	movq	%rcx, 160(%rsp)
  43b2a5:	e9 30 ff ff ff 	jmp	-208 <runtime.tracebackdefers+0xaa>
  43b2aa:	48 8d 5a 30 	leaq	48(%rdx), %rbx
  43b2ae:	eb ac 	jmp	-84 <runtime.tracebackdefers+0x12c>
  43b2b0:	48 8b ac 24 a8 00 00 00 	movq	168(%rsp), %rbp
  43b2b8:	48 81 c4 b0 00 00 00 	addq	$176, %rsp
  43b2bf:	c3 	retq
  43b2c0:	48 8b 44 24 60 	movq	96(%rsp), %rax
  43b2c5:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  43b2ca:	e8 31 68 fe ff 	callq	-104399 <runtime.printlock>
  43b2cf:	48 8d 05 a9 10 03 00 	leaq	200873(%rip), %rax
  43b2d6:	48 89 04 24 	movq	%rax, (%rsp)
  43b2da:	48 c7 44 24 08 1d 00 00 00 	movq	$29, 8(%rsp)
  43b2e3:	e8 58 71 fe ff 	callq	-102056 <runtime.printstring>
  43b2e8:	48 8b 44 24 38 	movq	56(%rsp), %rax
  43b2ed:	48 89 04 24 	movq	%rax, (%rsp)
  43b2f1:	e8 fa 6f fe ff 	callq	-102406 <runtime.printhex>
  43b2f6:	e8 95 6a fe ff 	callq	-103787 <runtime.printnl>
  43b2fb:	e8 80 68 fe ff 	callq	-104320 <runtime.printunlock>
  43b300:	48 8d 05 87 f0 02 00 	leaq	192647(%rip), %rax
  43b307:	48 89 04 24 	movq	%rax, (%rsp)
  43b30b:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  43b314:	e8 b7 5e fe ff 	callq	-106825 <runtime.throw>
  43b319:	0f 0b 	ud2
  43b31b:	e8 50 92 00 00 	callq	37456 <runtime.morestack_noctxt>
  43b320:	e9 0b fe ff ff 	jmp	-501 <runtime.tracebackdefers>
  43b325:	cc 	int3
  43b326:	cc 	int3
  43b327:	cc 	int3
  43b328:	cc 	int3
  43b329:	cc 	int3
  43b32a:	cc 	int3
  43b32b:	cc 	int3
  43b32c:	cc 	int3
  43b32d:	cc 	int3
  43b32e:	cc 	int3
  43b32f:	cc 	int3

runtime.gentraceback:
  43b330:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43b339:	48 8d 84 24 80 fd ff ff 	leaq	-640(%rsp), %rax
  43b341:	48 3b 41 10 	cmpq	16(%rcx), %rax
  43b345:	0f 86 13 1c 00 00 	jbe	7187 <runtime.gentraceback+0x1c2e>
  43b34b:	48 81 ec 00 03 00 00 	subq	$768, %rsp
  43b352:	48 89 ac 24 f8 02 00 00 	movq	%rbp, 760(%rsp)
  43b35a:	48 8d ac 24 f8 02 00 00 	leaq	760(%rsp), %rbp
  43b362:	48 8b 84 24 28 03 00 00 	movq	808(%rsp), %rax
  43b36a:	48 85 c0 	testq	%rax, %rax
  43b36d:	0f 8e 88 19 00 00 	jle	6536 <runtime.gentraceback+0x19cb>
  43b373:	48 8b 8c 24 40 03 00 00 	movq	832(%rsp), %rcx
  43b37b:	48 85 c9 	testq	%rcx, %rcx
  43b37e:	0f 85 bf 1b 00 00 	jne	7103 <runtime.gentraceback+0x1c13>
  43b384:	64 48 8b 14 25 f8 ff ff ff 	movq	%fs:-8, %rdx
  43b38d:	48 8b 9c 24 20 03 00 00 	movq	800(%rsp), %rbx
  43b395:	48 39 d3 	cmpq	%rdx, %rbx
  43b398:	75 14 	jne	20 <runtime.gentraceback+0x7e>
  43b39a:	48 8b 72 30 	movq	48(%rdx), %rsi
  43b39e:	48 8b b6 c0 00 00 00 	movq	192(%rsi), %rsi
  43b3a5:	48 39 d6 	cmpq	%rdx, %rsi
  43b3a8:	0f 84 7a 1b 00 00 	je	7034 <runtime.gentraceback+0x1bf8>
  43b3ae:	8b 35 54 9c 06 00 	movl	433236(%rip), %esi
  43b3b4:	4c 8b 42 30 	movq	48(%rdx), %r8
  43b3b8:	45 0f b6 80 29 01 00 00 	movzbl	297(%r8), %r8d
  43b3c0:	45 84 c0 	testb	%r8b, %r8b
  43b3c3:	0f 84 2a 19 00 00 	je	6442 <runtime.gentraceback+0x19c3>
  43b3c9:	41 0f b6 f0 	movzbl	%r8b, %esi
  43b3cd:	4c 8b 84 24 08 03 00 00 	movq	776(%rsp), %r8
  43b3d5:	49 83 f8 ff 	cmpq	$-1, %r8
  43b3d9:	0f 85 04 19 00 00 	jne	6404 <runtime.gentraceback+0x19b3>
  43b3df:	4c 8b 8c 24 10 03 00 00 	movq	784(%rsp), %r9
  43b3e7:	49 83 f9 ff 	cmpq	$-1, %r9
  43b3eb:	0f 85 e2 18 00 00 	jne	6370 <runtime.gentraceback+0x19a3>
  43b3f1:	4c 8b 43 70 	movq	112(%rbx), %r8
  43b3f5:	4d 85 c0 	testq	%r8, %r8
  43b3f8:	0f 84 c8 18 00 00 	je	6344 <runtime.gentraceback+0x1996>
  43b3fe:	4c 8b 4b 78 	movq	120(%rbx), %r9
  43b402:	48 c7 84 24 a0 02 00 00 00 00 00 00 	movq	$0, 672(%rsp)
  43b40e:	48 8d bc 24 a8 02 00 00 	leaq	680(%rsp), %rdi
  43b416:	0f 57 c0 	xorps	%xmm0, %xmm0
  43b419:	48 8d 7f d0 	leaq	-48(%rdi), %rdi
  43b41d:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  43b422:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  43b427:	e8 89 b6 00 00 	callq	46729 <runtime.duffzero+0x115>
  43b42c:	48 8b 6d 00 	movq	(%rbp), %rbp
  43b430:	4c 89 8c 24 b0 02 00 00 	movq	%r9, 688(%rsp)
  43b438:	4c 89 84 24 c8 02 00 00 	movq	%r8, 712(%rsp)
  43b440:	4c 8b 8b 48 01 00 00 	movq	328(%rbx), %r9
  43b447:	4c 8b 93 40 01 00 00 	movq	320(%rbx), %r10
  43b44e:	4c 8b 9c 24 30 03 00 00 	movq	816(%rsp), %r11
  43b456:	4d 85 db 	testq	%r11, %r11
  43b459:	0f 84 5b 18 00 00 	je	6235 <runtime.gentraceback+0x198a>
  43b45f:	31 ff 	xorl	%edi, %edi
  43b461:	4c 8b 63 28 	movq	40(%rbx), %r12
  43b465:	eb 05 	jmp	5 <runtime.gentraceback+0x13c>
  43b467:	4d 8b 64 24 28 	movq	40(%r12), %r12
  43b46c:	4d 85 e4 	testq	%r12, %r12
  43b46f:	74 0b 	je	11 <runtime.gentraceback+0x14c>
  43b471:	4d 8b 6c 24 08 	movq	8(%r12), %r13
  43b476:	49 83 fd ff 	cmpq	$-1, %r13
  43b47a:	74 eb 	je	-21 <runtime.gentraceback+0x137>
  43b47c:	48 89 94 24 20 02 00 00 	movq	%rdx, 544(%rsp)
  43b484:	40 88 7c 24 41 	movb	%dil, 65(%rsp)
  43b489:	4c 89 a4 24 58 02 00 00 	movq	%r12, 600(%rsp)
  43b491:	4c 89 8c 24 a8 00 00 00 	movq	%r9, 168(%rsp)
  43b499:	4c 89 94 24 50 02 00 00 	movq	%r10, 592(%rsp)
  43b4a1:	89 74 24 48 	movl	%esi, 72(%rsp)
  43b4a5:	4c 8b ac 24 b0 02 00 00 	movq	688(%rsp), %r13
  43b4ad:	4d 85 ed 	testq	%r13, %r13
  43b4b0:	75 14 	jne	20 <runtime.gentraceback+0x196>
  43b4b2:	4d 8b 00 	movq	(%r8), %r8
  43b4b5:	4c 89 84 24 b0 02 00 00 	movq	%r8, 688(%rsp)
  43b4bd:	48 83 84 24 c8 02 00 00 08 	addq	$8, 712(%rsp)
  43b4c6:	48 8b 84 24 b0 02 00 00 	movq	688(%rsp), %rax
  43b4ce:	48 89 04 24 	movq	%rax, (%rsp)
  43b4d2:	e8 f9 cc ff ff 	callq	-13063 <runtime.findfunc>
  43b4d7:	48 8b 44 24 10 	movq	16(%rsp), %rax
  43b4dc:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  43b4e1:	48 85 c9 	testq	%rcx, %rcx
  43b4e4:	0f 84 04 17 00 00 	je	5892 <runtime.gentraceback+0x18be>
  43b4ea:	48 89 8c 24 a0 02 00 00 	movq	%rcx, 672(%rsp)
  43b4f2:	48 89 84 24 a8 02 00 00 	movq	%rax, 680(%rsp)
  43b4fa:	48 8d bc 24 08 01 00 00 	leaq	264(%rsp), %rdi
  43b502:	0f 57 c0 	xorps	%xmm0, %xmm0
  43b505:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  43b50a:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  43b50f:	e8 70 b5 00 00 	callq	46448 <runtime.duffzero+0xe4>
  43b514:	48 8b 6d 00 	movq	(%rbp), %rbp
  43b518:	48 8d 44 24 18 	leaq	24(%rsp), %rax
  43b51d:	48 89 84 24 98 02 00 00 	movq	%rax, 664(%rsp)
  43b525:	31 c9 	xorl	%ecx, %ecx
  43b527:	31 d2 	xorl	%edx, %edx
  43b529:	31 db 	xorl	%ebx, %ebx
  43b52b:	48 8b b4 24 a8 00 00 00 	movq	168(%rsp), %rsi
  43b533:	48 8b bc 24 50 02 00 00 	movq	592(%rsp), %rdi
  43b53b:	4c 8b 84 24 28 03 00 00 	movq	808(%rsp), %r8
  43b543:	45 31 c9 	xorl	%r9d, %r9d
  43b546:	4c 8b 94 24 58 02 00 00 	movq	600(%rsp), %r10
  43b54e:	e9 23 01 00 00 	jmp	291 <runtime.gentraceback+0x346>
  43b553:	4d 8b 52 28 	movq	40(%r10), %r10
  43b557:	4d 85 d2 	testq	%r10, %r10
  43b55a:	0f 84 4c 11 00 00 	je	4428 <runtime.gentraceback+0x137c>
  43b560:	4d 8b 5a 08 	movq	8(%r10), %r11
  43b564:	4c 8b ac 24 c8 02 00 00 	movq	712(%rsp), %r13
  43b56c:	4d 39 dd 	cmpq	%r11, %r13
  43b56f:	74 e2 	je	-30 <runtime.gentraceback+0x223>
  43b571:	49 83 fb ff 	cmpq	$-1, %r11
  43b575:	74 dc 	je	-36 <runtime.gentraceback+0x223>
  43b577:	48 85 c0 	testq	%rax, %rax
  43b57a:	4c 89 94 24 58 02 00 00 	movq	%r10, 600(%rsp)
  43b582:	0f 85 75 10 00 00 	jne	4213 <runtime.gentraceback+0x12cd>
  43b588:	4c 8b 9c 24 30 03 00 00 	movq	816(%rsp), %r11
  43b590:	4d 85 db 	testq	%r11, %r11
  43b593:	74 22 	je	34 <runtime.gentraceback+0x287>
  43b595:	4d 85 c0 	testq	%r8, %r8
  43b598:	0f 85 f6 0d 00 00 	jne	3574 <runtime.gentraceback+0x1064>
  43b59e:	4c 8b ac 24 b0 02 00 00 	movq	688(%rsp), %r13
  43b5a6:	48 81 f9 00 00 10 00 	cmpq	$1048576, %rcx
  43b5ad:	0f 83 38 19 00 00 	jae	6456 <runtime.gentraceback+0x1bbb>
  43b5b3:	4d 89 2c cb 	movq	%r13, (%r11,%rcx,8)
  43b5b7:	45 84 f6 	testb	%r14b, %r14b
  43b5ba:	0f 85 f8 04 00 00 	jne	1272 <runtime.gentraceback+0x788>
  43b5c0:	48 ff c1 	incq	%rcx
  43b5c3:	45 8b 6c 24 10 	movl	16(%r12), %r13d
  43b5c8:	41 83 fd 10 	cmpl	$16, %r13d
  43b5cc:	0f 85 de 04 00 00 	jne	1246 <runtime.gentraceback+0x780>
  43b5d2:	48 85 f6 	testq	%rsi, %rsi
  43b5d5:	0f 8e d5 04 00 00 	jle	1237 <runtime.gentraceback+0x780>
  43b5db:	4c 8d 6e ff 	leaq	-1(%rsi), %r13
  43b5df:	49 39 f5 	cmpq	%rsi, %r13
  43b5e2:	0f 83 e0 18 00 00 	jae	6368 <runtime.gentraceback+0x1b98>
  43b5e8:	48 8b 74 f7 f8 	movq	-8(%rdi,%rsi,8), %rsi
  43b5ed:	4d 85 c0 	testq	%r8, %r8
  43b5f0:	75 09 	jne	9 <runtime.gentraceback+0x2cb>
  43b5f2:	48 85 c0 	testq	%rax, %rax
  43b5f5:	0f 84 17 04 00 00 	je	1047 <runtime.gentraceback+0x6e2>
  43b5fb:	41 8b 74 24 10 	movl	16(%r12), %esi
  43b600:	4d 85 ff 	testq	%r15, %r15
  43b603:	0f 84 f0 01 00 00 	je	496 <runtime.gentraceback+0x4c9>
  43b609:	4c 89 bc 24 a0 02 00 00 	movq	%r15, 672(%rsp)
  43b611:	4c 8b a4 24 40 02 00 00 	movq	576(%rsp), %r12
  43b619:	4c 89 a4 24 a8 02 00 00 	movq	%r12, 680(%rsp)
  43b621:	4c 8b a4 24 c0 02 00 00 	movq	704(%rsp), %r12
  43b629:	4c 89 a4 24 b0 02 00 00 	movq	%r12, 688(%rsp)
  43b631:	48 c7 84 24 c0 02 00 00 00 00 00 00 	movq	$0, 704(%rsp)
  43b63d:	4c 8b a4 24 d0 02 00 00 	movq	720(%rsp), %r12
  43b645:	4c 89 a4 24 c8 02 00 00 	movq	%r12, 712(%rsp)
  43b64d:	48 c7 84 24 d0 02 00 00 00 00 00 00 	movq	$0, 720(%rsp)
  43b659:	48 c7 84 24 f0 02 00 00 00 00 00 00 	movq	$0, 752(%rsp)
  43b665:	83 fe 08 	cmpl	$8, %esi
  43b668:	0f 94 c2 	sete	%dl
  43b66b:	48 8b 84 24 98 02 00 00 	movq	664(%rsp), %rax
  43b673:	4c 89 ee 	movq	%r13, %rsi
  43b676:	4c 8b 9c 24 38 03 00 00 	movq	824(%rsp), %r11
  43b67e:	4c 39 d9 	cmpq	%r11, %rcx
  43b681:	0f 8d 54 15 00 00 	jge	5460 <runtime.gentraceback+0x18ab>
  43b687:	4c 8b a4 24 a0 02 00 00 	movq	672(%rsp), %r12
  43b68f:	4c 8b ac 24 a8 02 00 00 	movq	680(%rsp), %r13
  43b697:	45 8b 74 24 14 	movl	20(%r12), %r14d
  43b69c:	45 85 f6 	testl	%r14d, %r14d
  43b69f:	0f 84 23 15 00 00 	je	5411 <runtime.gentraceback+0x1898>
  43b6a5:	48 89 8c 24 88 00 00 00 	movq	%rcx, 136(%rsp)
  43b6ad:	4c 89 94 24 90 02 00 00 	movq	%r10, 656(%rsp)
  43b6b5:	4c 89 4c 24 68 	movq	%r9, 104(%rsp)
  43b6ba:	4c 89 ac 24 88 02 00 00 	movq	%r13, 648(%rsp)
  43b6c2:	4c 89 84 24 28 03 00 00 	movq	%r8, 808(%rsp)
  43b6ca:	4c 89 a4 24 80 02 00 00 	movq	%r12, 640(%rsp)
  43b6d2:	88 5c 24 40 	movb	%bl, 64(%rsp)
  43b6d6:	88 54 24 3f 	movb	%dl, 63(%rsp)
  43b6da:	4c 8b b4 24 d0 02 00 00 	movq	720(%rsp), %r14
  43b6e2:	4d 85 f6 	testq	%r14, %r14
  43b6e5:	0f 84 67 13 00 00 	je	4967 <runtime.gentraceback+0x1722>
  43b6eb:	4c 8b b4 24 20 03 00 00 	movq	800(%rsp), %r14
  43b6f3:	4d 8b 7e 30 	movq	48(%r14), %r15
  43b6f7:	4d 85 ff 	testq	%r15, %r15
  43b6fa:	0f 84 4a 13 00 00 	je	4938 <runtime.gentraceback+0x171a>
  43b700:	4d 8b 3f 	movq	(%r15), %r15
  43b703:	4d 39 f7 	cmpq	%r14, %r15
  43b706:	41 0f 94 c7 	sete	%r15b
  43b70a:	41 8b 44 24 10 	movl	16(%r12), %eax
  43b70f:	83 f8 01 	cmpl	$1, %eax
  43b712:	0f 85 d0 12 00 00 	jne	4816 <runtime.gentraceback+0x16b8>
  43b718:	b8 01 00 00 00 	movl	$1, %eax
  43b71d:	48 89 b4 24 a8 00 00 00 	movq	%rsi, 168(%rsp)
  43b725:	48 89 bc 24 78 02 00 00 	movq	%rdi, 632(%rsp)
  43b72d:	84 c0 	testb	%al, %al
  43b72f:	0f 84 45 10 00 00 	je	4165 <runtime.gentraceback+0x144a>
  43b735:	48 c7 84 24 c0 02 00 00 00 00 00 00 	movq	$0, 704(%rsp)
  43b741:	31 c0 	xorl	%eax, %eax
  43b743:	45 31 ff 	xorl	%r15d, %r15d
  43b746:	48 89 84 24 40 02 00 00 	movq	%rax, 576(%rsp)
  43b74e:	4c 8b b4 24 d0 02 00 00 	movq	720(%rsp), %r14
  43b756:	4d 8d 5e f8 	leaq	-8(%r14), %r11
  43b75a:	4c 89 9c 24 d8 02 00 00 	movq	%r11, 728(%rsp)
  43b762:	0f b6 05 2e 93 03 00 	movzbl	234286(%rip), %eax
  43b769:	84 c0 	testb	%al, %al
  43b76b:	74 19 	je	25 <runtime.gentraceback+0x456>
  43b76d:	48 8b 84 24 c8 02 00 00 	movq	712(%rsp), %rax
  43b775:	49 39 c3 	cmpq	%rax, %r11
  43b778:	76 0c 	jbe	12 <runtime.gentraceback+0x456>
  43b77a:	49 8d 46 f0 	leaq	-16(%r14), %rax
  43b77e:	48 89 84 24 d8 02 00 00 	movq	%rax, 728(%rsp)
  43b786:	4c 89 bc 24 48 02 00 00 	movq	%r15, 584(%rsp)
  43b78e:	48 8b 84 24 40 03 00 00 	movq	832(%rsp), %rax
  43b796:	48 85 c0 	testq	%rax, %rax
  43b799:	41 0f 95 c3 	setne	%r11b
  43b79d:	0f 85 22 0f 00 00 	jne	3874 <runtime.gentraceback+0x1395>
  43b7a3:	44 0f b6 74 24 41 	movzbl	65(%rsp), %r14d
  43b7a9:	45 84 f6 	testb	%r14b, %r14b
  43b7ac:	0f 85 13 0f 00 00 	jne	3859 <runtime.gentraceback+0x1395>
  43b7b2:	4c 8b 9c 24 b0 02 00 00 	movq	688(%rsp), %r11
  43b7ba:	4c 89 9c 24 b8 02 00 00 	movq	%r11, 696(%rsp)
  43b7c2:	84 d2 	testb	%dl, %dl
  43b7c4:	0f 84 8d fd ff ff 	je	-627 <runtime.gentraceback+0x227>
  43b7ca:	4d 85 d2 	testq	%r10, %r10
  43b7cd:	0f 84 e1 0e 00 00 	je	3809 <runtime.gentraceback+0x1384>
  43b7d3:	4d 8b 5a 08 	movq	8(%r10), %r11
  43b7d7:	4c 8b ac 24 c8 02 00 00 	movq	712(%rsp), %r13
  43b7df:	4d 39 dd 	cmpq	%r11, %r13
  43b7e2:	0f 85 cc 0e 00 00 	jne	3788 <runtime.gentraceback+0x1384>
  43b7e8:	4d 8b 5a 10 	movq	16(%r10), %r11
  43b7ec:	4c 89 9c 24 b8 02 00 00 	movq	%r11, 696(%rsp)
  43b7f4:	e9 5e fd ff ff 	jmp	-674 <runtime.gentraceback+0x227>
  43b7f9:	45 84 f6 	testb	%r14b, %r14b
  43b7fc:	0f 84 08 02 00 00 	je	520 <runtime.gentraceback+0x6da>
  43b802:	48 85 c0 	testq	%rax, %rax
  43b805:	0f 84 f5 01 00 00 	je	501 <runtime.gentraceback+0x6d0>
  43b80b:	48 8b 8c 24 38 03 00 00 	movq	824(%rsp), %rcx
  43b813:	49 39 c9 	cmpq	%rcx, %r9
  43b816:	0f 8d df 01 00 00 	jge	479 <runtime.gentraceback+0x6cb>
  43b81c:	4d 85 d2 	testq	%r10, %r10
  43b81f:	0f 84 94 01 00 00 	je	404 <runtime.gentraceback+0x689>
  43b825:	48 8b 84 24 20 03 00 00 	movq	800(%rsp), %rax
  43b82d:	48 8b 88 98 00 00 00 	movq	152(%rax), %rcx
  43b834:	48 89 8c 24 00 01 00 00 	movq	%rcx, 256(%rsp)
  43b83c:	49 8b 52 08 	movq	8(%r10), %rdx
  43b840:	48 89 94 24 f8 00 00 00 	movq	%rdx, 248(%rsp)
  43b848:	49 8b 5a 10 	movq	16(%r10), %rbx
  43b84c:	48 89 9c 24 f0 00 00 00 	movq	%rbx, 240(%rsp)
  43b854:	e8 a7 62 fe ff 	callq	-105817 <runtime.printlock>
  43b859:	48 8d 05 fc ea 02 00 	leaq	191228(%rip), %rax
  43b860:	48 89 04 24 	movq	%rax, (%rsp)
  43b864:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  43b86d:	e8 ce 6b fe ff 	callq	-103474 <runtime.printstring>
  43b872:	48 8b 84 24 00 01 00 00 	movq	256(%rsp), %rax
  43b87a:	48 89 04 24 	movq	%rax, (%rsp)
  43b87e:	e8 fd 69 fe ff 	callq	-103939 <runtime.printint>
  43b883:	48 8d 05 7b f7 02 00 	leaq	194427(%rip), %rax
  43b88a:	48 89 04 24 	movq	%rax, (%rsp)
  43b88e:	48 c7 44 24 08 14 00 00 00 	movq	$20, 8(%rsp)
  43b897:	e8 a4 6b fe ff 	callq	-103516 <runtime.printstring>
  43b89c:	48 8b 84 24 f8 00 00 00 	movq	248(%rsp), %rax
  43b8a4:	48 89 04 24 	movq	%rax, (%rsp)
  43b8a8:	e8 43 6a fe ff 	callq	-103869 <runtime.printhex>
  43b8ad:	48 8d 05 1e e4 02 00 	leaq	189470(%rip), %rax
  43b8b4:	48 89 04 24 	movq	%rax, (%rsp)
  43b8b8:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  43b8c1:	e8 7a 6b fe ff 	callq	-103558 <runtime.printstring>
  43b8c6:	48 8b 84 24 f0 00 00 00 	movq	240(%rsp), %rax
  43b8ce:	48 89 04 24 	movq	%rax, (%rsp)
  43b8d2:	e8 19 6a fe ff 	callq	-103911 <runtime.printhex>
  43b8d7:	e8 b4 64 fe ff 	callq	-105292 <runtime.printnl>
  43b8dc:	e8 9f 62 fe ff 	callq	-105825 <runtime.printunlock>
  43b8e1:	48 8b 84 24 20 03 00 00 	movq	800(%rsp), %rax
  43b8e9:	48 8b 40 28 	movq	40(%rax), %rax
  43b8ed:	e9 b9 00 00 00 	jmp	185 <runtime.gentraceback+0x67b>
  43b8f2:	48 89 84 24 58 02 00 00 	movq	%rax, 600(%rsp)
  43b8fa:	48 8b 48 08 	movq	8(%rax), %rcx
  43b8fe:	48 89 8c 24 f8 00 00 00 	movq	%rcx, 248(%rsp)
  43b906:	48 8b 50 10 	movq	16(%rax), %rdx
  43b90a:	48 89 94 24 f0 00 00 00 	movq	%rdx, 240(%rsp)
  43b912:	e8 e9 61 fe ff 	callq	-106007 <runtime.printlock>
  43b917:	48 8d 05 90 e5 02 00 	leaq	189840(%rip), %rax
  43b91e:	48 89 04 24 	movq	%rax, (%rsp)
  43b922:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  43b92b:	e8 10 6b fe ff 	callq	-103664 <runtime.printstring>
  43b930:	48 8b 84 24 58 02 00 00 	movq	600(%rsp), %rax
  43b938:	48 89 04 24 	movq	%rax, (%rsp)
  43b93c:	e8 bf 6a fe ff 	callq	-103745 <runtime.printpointer>
  43b941:	48 8d 05 92 e3 02 00 	leaq	189330(%rip), %rax
  43b948:	48 89 04 24 	movq	%rax, (%rsp)
  43b94c:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  43b955:	e8 e6 6a fe ff 	callq	-103706 <runtime.printstring>
  43b95a:	48 8b 84 24 f8 00 00 00 	movq	248(%rsp), %rax
  43b962:	48 89 04 24 	movq	%rax, (%rsp)
  43b966:	e8 85 69 fe ff 	callq	-104059 <runtime.printhex>
  43b96b:	48 8d 05 60 e3 02 00 	leaq	189280(%rip), %rax
  43b972:	48 89 04 24 	movq	%rax, (%rsp)
  43b976:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  43b97f:	e8 bc 6a fe ff 	callq	-103748 <runtime.printstring>
  43b984:	48 8b 84 24 f0 00 00 00 	movq	240(%rsp), %rax
  43b98c:	48 89 04 24 	movq	%rax, (%rsp)
  43b990:	e8 5b 69 fe ff 	callq	-104101 <runtime.printhex>
  43b995:	e8 f6 63 fe ff 	callq	-105482 <runtime.printnl>
  43b99a:	e8 e1 61 fe ff 	callq	-106015 <runtime.printunlock>
  43b99f:	48 8b 84 24 58 02 00 00 	movq	600(%rsp), %rax
  43b9a7:	48 8b 40 28 	movq	40(%rax), %rax
  43b9ab:	48 85 c0 	testq	%rax, %rax
  43b9ae:	0f 85 3e ff ff ff 	jne	-194 <runtime.gentraceback+0x5c2>
  43b9b4:	e9 f4 14 00 00 	jmp	5364 <runtime.gentraceback+0x1b7d>
  43b9b9:	48 85 c0 	testq	%rax, %rax
  43b9bc:	74 25 	je	37 <runtime.gentraceback+0x6b3>
  43b9be:	49 39 c9 	cmpq	%rcx, %r9
  43b9c1:	7d 20 	jge	32 <runtime.gentraceback+0x6b3>
  43b9c3:	48 8b 84 24 c8 02 00 00 	movq	712(%rsp), %rax
  43b9cb:	48 8b 94 24 20 03 00 00 	movq	800(%rsp), %rdx
  43b9d3:	48 8b 9a 80 00 00 00 	movq	128(%rdx), %rbx
  43b9da:	48 39 d8 	cmpq	%rbx, %rax
  43b9dd:	0f 85 25 13 00 00 	jne	4901 <runtime.gentraceback+0x19d8>
  43b9e3:	4c 89 8c 24 58 03 00 00 	movq	%r9, 856(%rsp)
  43b9eb:	48 8b ac 24 f8 02 00 00 	movq	760(%rsp), %rbp
  43b9f3:	48 81 c4 00 03 00 00 	addq	$768, %rsp
  43b9fa:	c3 	retq
  43b9fb:	48 85 c0 	testq	%rax, %rax
  43b9fe:	eb bc 	jmp	-68 <runtime.gentraceback+0x68c>
  43ba00:	48 8b 8c 24 38 03 00 00 	movq	824(%rsp), %rcx
  43ba08:	eb b2 	jmp	-78 <runtime.gentraceback+0x68c>
  43ba0a:	49 89 c9 	movq	%rcx, %r9
  43ba0d:	e9 f0 fd ff ff 	jmp	-528 <runtime.gentraceback+0x4d2>
  43ba12:	4c 89 ac 24 e8 00 00 00 	movq	%r13, 232(%rsp)
  43ba1a:	4c 89 8c 24 e0 00 00 00 	movq	%r9, 224(%rsp)
  43ba22:	4c 89 84 24 d8 00 00 00 	movq	%r8, 216(%rsp)
  43ba2a:	88 5c 24 43 	movb	%bl, 67(%rsp)
  43ba2e:	4c 89 1c 24 	movq	%r11, (%rsp)
  43ba32:	44 88 74 24 08 	movb	%r14b, 8(%rsp)
  43ba37:	48 89 74 24 10 	movq	%rsi, 16(%rsp)
  43ba3c:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  43ba41:	48 8b 84 24 38 03 00 00 	movq	824(%rsp), %rax
  43ba49:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  43ba4e:	e8 dd 16 00 00 	callq	5853 <runtime.tracebackCgoContext>
  43ba53:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  43ba58:	48 8b 84 24 40 03 00 00 	movq	832(%rsp), %rax
  43ba60:	0f b6 5c 24 43 	movzbl	67(%rsp), %ebx
  43ba65:	48 8b bc 24 78 02 00 00 	movq	632(%rsp), %rdi
  43ba6d:	4c 8b 84 24 d8 00 00 00 	movq	216(%rsp), %r8
  43ba75:	4c 8b 8c 24 e0 00 00 00 	movq	224(%rsp), %r9
  43ba7d:	4c 8b 94 24 58 02 00 00 	movq	600(%rsp), %r10
  43ba85:	4c 8b 9c 24 30 03 00 00 	movq	816(%rsp), %r11
  43ba8d:	4c 8b a4 24 80 02 00 00 	movq	640(%rsp), %r12
  43ba95:	4c 8b ac 24 e8 00 00 00 	movq	232(%rsp), %r13
  43ba9d:	44 0f b6 74 24 41 	movzbl	65(%rsp), %r14d
  43baa3:	4c 8b bc 24 48 02 00 00 	movq	584(%rsp), %r15
  43baab:	e9 4b fb ff ff 	jmp	-1205 <runtime.gentraceback+0x2cb>
  43bab0:	49 89 f5 	movq	%rsi, %r13
  43bab3:	e9 43 fb ff ff 	jmp	-1213 <runtime.gentraceback+0x2cb>
  43bab8:	4c 89 84 24 d0 00 00 00 	movq	%r8, 208(%rsp)
  43bac0:	48 89 8c 24 c8 00 00 00 	movq	%rcx, 200(%rsp)
  43bac8:	4c 89 24 24 	movq	%r12, (%rsp)
  43bacc:	48 8b 84 24 88 02 00 00 	movq	648(%rsp), %rax
  43bad4:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43bad9:	e8 22 ce ff ff 	callq	-12766 <runtime.funcname>
  43bade:	48 8b 44 24 10 	movq	16(%rsp), %rax
  43bae3:	48 89 84 24 08 02 00 00 	movq	%rax, 520(%rsp)
  43baeb:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  43baf0:	48 89 4c 24 78 	movq	%rcx, 120(%rsp)
  43baf5:	48 83 f9 0f 	cmpq	$15, %rcx
  43baf9:	0f 85 86 08 00 00 	jne	2182 <runtime.gentraceback+0x1055>
  43baff:	48 8b 10 	movq	(%rax), %rdx
  43bb02:	48 bb 72 75 6e 74 69 6d 65 2e 	movabsq	$3343198598084851058, %rbx
  43bb0c:	48 39 d3 	cmpq	%rdx, %rbx
  43bb0f:	0f 85 ce 07 00 00 	jne	1998 <runtime.gentraceback+0xfb3>
  43bb15:	8b 50 08 	movl	8(%rax), %edx
  43bb18:	81 fa 67 6f 70 61 	cmpl	$1634758503, %edx
  43bb1e:	0f 85 bf 07 00 00 	jne	1983 <runtime.gentraceback+0xfb3>
  43bb24:	0f b7 50 0c 	movzwl	12(%rax), %edx
  43bb28:	66 81 fa 6e 69 	cmpw	$26990, %dx
  43bb2d:	0f 85 b0 07 00 00 	jne	1968 <runtime.gentraceback+0xfb3>
  43bb33:	0f b6 50 0e 	movzbl	14(%rax), %edx
  43bb37:	80 fa 63 	cmpb	$99, %dl
  43bb3a:	0f 85 a3 07 00 00 	jne	1955 <runtime.gentraceback+0xfb3>
  43bb40:	ba 01 00 00 00 	movl	$1, %edx
  43bb45:	88 54 24 42 	movb	%dl, 66(%rsp)
  43bb49:	48 8b b4 24 50 03 00 00 	movq	848(%rsp), %rsi
  43bb51:	0f ba e6 00 	btl	$0, %esi
  43bb55:	0f 83 f1 06 00 00 	jae	1777 <runtime.gentraceback+0xf1c>
  43bb5b:	48 8b bc 24 b0 02 00 00 	movq	688(%rsp), %rdi
  43bb63:	4c 8b 84 24 c8 00 00 00 	movq	200(%rsp), %r8
  43bb6b:	4d 85 c0 	testq	%r8, %r8
  43bb6e:	0f 8e c1 06 00 00 	jle	1729 <runtime.gentraceback+0xf05>
  43bb74:	4c 8b 8c 24 80 02 00 00 	movq	640(%rsp), %r9
  43bb7c:	4d 8b 11 	movq	(%r9), %r10
  43bb7f:	4c 39 d7 	cmpq	%r10, %rdi
  43bb82:	76 0f 	jbe	15 <runtime.gentraceback+0x863>
  43bb84:	44 0f b6 54 24 3f 	movzbl	63(%rsp), %r10d
  43bb8a:	45 84 d2 	testb	%r10b, %r10b
  43bb8d:	0f 84 9a 06 00 00 	je	1690 <runtime.gentraceback+0xefd>
  43bb93:	48 89 7c 24 50 	movq	%rdi, 80(%rsp)
  43bb98:	4c 89 0c 24 	movq	%r9, (%rsp)
  43bb9c:	48 8b 84 24 88 02 00 00 	movq	648(%rsp), %rax
  43bba4:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43bba9:	48 89 7c 24 10 	movq	%rdi, 16(%rsp)
  43bbae:	e8 9d d0 ff ff 	callq	-12131 <runtime.funcline>
  43bbb3:	8b 44 24 28 	movl	40(%rsp), %eax
  43bbb7:	89 44 24 44 	movl	%eax, 68(%rsp)
  43bbbb:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  43bbc0:	48 89 8c 24 a0 00 00 00 	movq	%rcx, 160(%rsp)
  43bbc8:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  43bbcd:	48 89 94 24 38 02 00 00 	movq	%rdx, 568(%rsp)
  43bbd5:	48 8b 9c 24 80 02 00 00 	movq	640(%rsp), %rbx
  43bbdd:	48 89 1c 24 	movq	%rbx, (%rsp)
  43bbe1:	48 8b b4 24 88 02 00 00 	movq	648(%rsp), %rsi
  43bbe9:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  43bbee:	c7 44 24 10 02 00 00 00 	movl	$2, 16(%rsp)
  43bbf6:	e8 f5 d2 ff ff 	callq	-11531 <runtime.funcdata>
  43bbfb:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43bc00:	48 85 c0 	testq	%rax, %rax
  43bc03:	0f 85 25 04 00 00 	jne	1061 <runtime.gentraceback+0xcfe>
  43bc09:	48 8b 44 24 78 	movq	120(%rsp), %rax
  43bc0e:	48 83 f8 0f 	cmpq	$15, %rax
  43bc12:	48 8b 8c 24 38 02 00 00 	movq	568(%rsp), %rcx
  43bc1a:	48 8b 94 24 a0 00 00 00 	movq	160(%rsp), %rdx
  43bc22:	8b 5c 24 44 	movl	68(%rsp), %ebx
  43bc26:	48 89 8c 24 38 02 00 00 	movq	%rcx, 568(%rsp)
  43bc2e:	48 89 94 24 a0 00 00 00 	movq	%rdx, 160(%rsp)
  43bc36:	89 5c 24 44 	movl	%ebx, 68(%rsp)
  43bc3a:	0f 85 e1 03 00 00 	jne	993 <runtime.gentraceback+0xcf1>
  43bc40:	48 8b b4 24 08 02 00 00 	movq	520(%rsp), %rsi
  43bc48:	48 8b 3e 	movq	(%rsi), %rdi
  43bc4b:	49 b8 72 75 6e 74 69 6d 65 2e 	movabsq	$3343198598084851058, %r8
  43bc55:	4c 39 c7 	cmpq	%r8, %rdi
  43bc58:	75 2c 	jne	44 <runtime.gentraceback+0x956>
  43bc5a:	8b 7e 08 	movl	8(%rsi), %edi
  43bc5d:	81 ff 67 6f 70 61 	cmpl	$1634758503, %edi
  43bc63:	75 21 	jne	33 <runtime.gentraceback+0x956>
  43bc65:	0f b7 7e 0c 	movzwl	12(%rsi), %edi
  43bc69:	66 81 ff 6e 69 	cmpw	$26990, %di
  43bc6e:	75 16 	jne	22 <runtime.gentraceback+0x956>
  43bc70:	0f b6 7e 0e 	movzbl	14(%rsi), %edi
  43bc74:	40 80 ff 63 	cmpb	$99, %dil
  43bc78:	75 0c 	jne	12 <runtime.gentraceback+0x956>
  43bc7a:	b8 05 00 00 00 	movl	$5, %eax
  43bc7f:	48 8d 35 50 e1 02 00 	leaq	188752(%rip), %rsi
  43bc86:	48 89 44 24 70 	movq	%rax, 112(%rsp)
  43bc8b:	48 89 b4 24 18 02 00 00 	movq	%rsi, 536(%rsp)
  43bc93:	e8 68 5e fe ff 	callq	-106904 <runtime.printlock>
  43bc98:	48 8b 84 24 18 02 00 00 	movq	536(%rsp), %rax
  43bca0:	48 89 04 24 	movq	%rax, (%rsp)
  43bca4:	48 8b 44 24 70 	movq	112(%rsp), %rax
  43bca9:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43bcae:	e8 8d 67 fe ff 	callq	-104563 <runtime.printstring>
  43bcb3:	48 8d 05 97 df 02 00 	leaq	188311(%rip), %rax
  43bcba:	48 89 04 24 	movq	%rax, (%rsp)
  43bcbe:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  43bcc7:	e8 74 67 fe ff 	callq	-104588 <runtime.printstring>
  43bccc:	e8 af 5e fe ff 	callq	-106833 <runtime.printunlock>
  43bcd1:	48 8b 84 24 e0 02 00 00 	movq	736(%rsp), %rax
  43bcd9:	48 89 84 24 70 02 00 00 	movq	%rax, 624(%rsp)
  43bce1:	31 c9 	xorl	%ecx, %ecx
  43bce3:	eb 3d 	jmp	61 <runtime.gentraceback+0x9f2>
  43bce5:	84 00 	testb	%al, (%rax)
  43bce7:	48 8b 14 c8 	movq	(%rax,%rcx,8), %rdx
  43bceb:	48 89 94 24 f8 00 00 00 	movq	%rdx, 248(%rsp)
  43bcf3:	e8 08 5e fe ff 	callq	-107000 <runtime.printlock>
  43bcf8:	48 8b 84 24 f8 00 00 00 	movq	248(%rsp), %rax
  43bd00:	48 89 04 24 	movq	%rax, (%rsp)
  43bd04:	e8 e7 65 fe ff 	callq	-104985 <runtime.printhex>
  43bd09:	e8 72 5e fe ff 	callq	-106894 <runtime.printunlock>
  43bd0e:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  43bd16:	48 8d 48 01 	leaq	1(%rax), %rcx
  43bd1a:	48 8b 84 24 70 02 00 00 	movq	624(%rsp), %rax
  43bd22:	48 8b 94 24 e8 02 00 00 	movq	744(%rsp), %rdx
  43bd2a:	48 c1 ea 03 	shrq	$3, %rdx
  43bd2e:	48 39 d1 	cmpq	%rdx, %rcx
  43bd31:	73 6e 	jae	110 <runtime.gentraceback+0xa71>
  43bd33:	48 83 f9 0a 	cmpq	$10, %rcx
  43bd37:	73 45 	jae	69 <runtime.gentraceback+0xa4e>
  43bd39:	48 89 8c 24 98 00 00 00 	movq	%rcx, 152(%rsp)
  43bd41:	48 85 c9 	testq	%rcx, %rcx
  43bd44:	74 9f 	je	-97 <runtime.gentraceback+0x9b5>
  43bd46:	e8 b5 5d fe ff 	callq	-107083 <runtime.printlock>
  43bd4b:	48 8d 05 1a df 02 00 	leaq	188186(%rip), %rax
  43bd52:	48 89 04 24 	movq	%rax, (%rsp)
  43bd56:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  43bd5f:	e8 dc 66 fe ff 	callq	-104740 <runtime.printstring>
  43bd64:	e8 17 5e fe ff 	callq	-106985 <runtime.printunlock>
  43bd69:	48 8b 84 24 70 02 00 00 	movq	624(%rsp), %rax
  43bd71:	48 8b 8c 24 98 00 00 00 	movq	152(%rsp), %rcx
  43bd79:	e9 67 ff ff ff 	jmp	-153 <runtime.gentraceback+0x9b5>
  43bd7e:	e8 7d 5d fe ff 	callq	-107139 <runtime.printlock>
  43bd83:	48 8d 05 0b e0 02 00 	leaq	188427(%rip), %rax
  43bd8a:	48 89 04 24 	movq	%rax, (%rsp)
  43bd8e:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  43bd97:	e8 a4 66 fe ff 	callq	-104796 <runtime.printstring>
  43bd9c:	e8 df 5d fe ff 	callq	-107041 <runtime.printunlock>
  43bda1:	e8 5a 5d fe ff 	callq	-107174 <runtime.printlock>
  43bda6:	48 8d 05 bd de 02 00 	leaq	188093(%rip), %rax
  43bdad:	48 89 04 24 	movq	%rax, (%rsp)
  43bdb1:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  43bdba:	e8 81 66 fe ff 	callq	-104831 <runtime.printstring>
  43bdbf:	e8 bc 5d fe ff 	callq	-107076 <runtime.printunlock>
  43bdc4:	e8 37 5d fe ff 	callq	-107209 <runtime.printlock>
  43bdc9:	48 8d 05 8e de 02 00 	leaq	188046(%rip), %rax
  43bdd0:	48 89 04 24 	movq	%rax, (%rsp)
  43bdd4:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  43bddd:	e8 5e 66 fe ff 	callq	-104866 <runtime.printstring>
  43bde2:	48 8b 84 24 38 02 00 00 	movq	568(%rsp), %rax
  43bdea:	48 89 04 24 	movq	%rax, (%rsp)
  43bdee:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  43bdf6:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43bdfb:	e8 40 66 fe ff 	callq	-104896 <runtime.printstring>
  43be00:	48 8d 05 51 de 02 00 	leaq	187985(%rip), %rax
  43be07:	48 89 04 24 	movq	%rax, (%rsp)
  43be0b:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  43be14:	e8 27 66 fe ff 	callq	-104921 <runtime.printstring>
  43be19:	8b 44 24 44 	movl	68(%rsp), %eax
  43be1d:	48 63 c0 	movslq	%eax, %rax
  43be20:	48 89 04 24 	movq	%rax, (%rsp)
  43be24:	e8 57 64 fe ff 	callq	-105385 <runtime.printint>
  43be29:	e8 52 5d fe ff 	callq	-107182 <runtime.printunlock>
  43be2e:	48 8b 84 24 b0 02 00 00 	movq	688(%rsp), %rax
  43be36:	48 8b 8c 24 80 02 00 00 	movq	640(%rsp), %rcx
  43be3e:	48 8b 11 	movq	(%rcx), %rdx
  43be41:	48 39 d0 	cmpq	%rdx, %rax
  43be44:	0f 87 7b 01 00 00 	ja	379 <runtime.gentraceback+0xc95>
  43be4a:	48 8b 84 24 20 02 00 00 	movq	544(%rsp), %rax
  43be52:	48 8b 50 30 	movq	48(%rax), %rdx
  43be56:	8b 9a ec 00 00 00 	movl	236(%rdx), %ebx
  43be5c:	85 db 	testl	%ebx, %ebx
  43be5e:	0f 8e 57 01 00 00 	jle	343 <runtime.gentraceback+0xc8b>
  43be64:	48 8b 92 c0 00 00 00 	movq	192(%rdx), %rdx
  43be6b:	48 8b 9c 24 20 03 00 00 	movq	800(%rsp), %rbx
  43be73:	48 39 da 	cmpq	%rbx, %rdx
  43be76:	0f 85 2d 01 00 00 	jne	301 <runtime.gentraceback+0xc79>
  43be7c:	48 8b 84 24 d0 02 00 00 	movq	720(%rsp), %rax
  43be84:	48 89 84 24 f8 00 00 00 	movq	%rax, 248(%rsp)
  43be8c:	48 8b 8c 24 c8 02 00 00 	movq	712(%rsp), %rcx
  43be94:	48 89 8c 24 f0 00 00 00 	movq	%rcx, 240(%rsp)
  43be9c:	48 8b 94 24 b0 02 00 00 	movq	688(%rsp), %rdx
  43bea4:	48 89 94 24 c0 00 00 00 	movq	%rdx, 192(%rsp)
  43beac:	e8 4f 5c fe ff 	callq	-107441 <runtime.printlock>
  43beb1:	48 8d 05 0a de 02 00 	leaq	187914(%rip), %rax
  43beb8:	48 89 04 24 	movq	%rax, (%rsp)
  43bebc:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  43bec5:	e8 76 65 fe ff 	callq	-105098 <runtime.printstring>
  43beca:	48 8b 84 24 f8 00 00 00 	movq	248(%rsp), %rax
  43bed2:	48 89 04 24 	movq	%rax, (%rsp)
  43bed6:	e8 15 64 fe ff 	callq	-105451 <runtime.printhex>
  43bedb:	48 8d 05 f8 dd 02 00 	leaq	187896(%rip), %rax
  43bee2:	48 89 04 24 	movq	%rax, (%rsp)
  43bee6:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  43beef:	e8 4c 65 fe ff 	callq	-105140 <runtime.printstring>
  43bef4:	48 8b 84 24 f0 00 00 00 	movq	240(%rsp), %rax
  43befc:	48 89 04 24 	movq	%rax, (%rsp)
  43bf00:	e8 eb 63 fe ff 	callq	-105493 <runtime.printhex>
  43bf05:	48 8d 05 c6 dd 02 00 	leaq	187846(%rip), %rax
  43bf0c:	48 89 04 24 	movq	%rax, (%rsp)
  43bf10:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  43bf19:	e8 22 65 fe ff 	callq	-105182 <runtime.printstring>
  43bf1e:	48 8b 84 24 c0 00 00 00 	movq	192(%rsp), %rax
  43bf26:	48 89 04 24 	movq	%rax, (%rsp)
  43bf2a:	e8 c1 63 fe ff 	callq	-105535 <runtime.printhex>
  43bf2f:	e8 4c 5c fe ff 	callq	-107444 <runtime.printunlock>
  43bf34:	e8 c7 5b fe ff 	callq	-107577 <runtime.printlock>
  43bf39:	e8 52 5e fe ff 	callq	-106926 <runtime.printnl>
  43bf3e:	e8 3d 5c fe ff 	callq	-107459 <runtime.printunlock>
  43bf43:	48 8b 44 24 68 	movq	104(%rsp), %rax
  43bf48:	48 ff c0 	incq	%rax
  43bf4b:	0f b6 5c 24 42 	movzbl	66(%rsp), %ebx
  43bf50:	83 f3 01 	xorl	$1, %ebx
  43bf53:	48 8b 8c 24 c8 00 00 00 	movq	200(%rsp), %rcx
  43bf5b:	48 8b b4 24 a8 00 00 00 	movq	168(%rsp), %rsi
  43bf63:	48 8b bc 24 78 02 00 00 	movq	632(%rsp), %rdi
  43bf6b:	4c 8b 84 24 d0 00 00 00 	movq	208(%rsp), %r8
  43bf73:	4c 8b 94 24 58 02 00 00 	movq	600(%rsp), %r10
  43bf7b:	4c 8b 9c 24 30 03 00 00 	movq	816(%rsp), %r11
  43bf83:	4c 8b a4 24 80 02 00 00 	movq	640(%rsp), %r12
  43bf8b:	44 0f b6 74 24 41 	movzbl	65(%rsp), %r14d
  43bf91:	4c 8b bc 24 48 02 00 00 	movq	584(%rsp), %r15
  43bf99:	49 89 c1 	movq	%rax, %r9
  43bf9c:	48 8b 84 24 40 03 00 00 	movq	832(%rsp), %rax
  43bfa4:	e9 17 f6 ff ff 	jmp	-2537 <runtime.gentraceback+0x290>
  43bfa9:	8b 54 24 48 	movl	72(%rsp), %edx
  43bfad:	83 fa 02 	cmpl	$2, %edx
  43bfb0:	0f 8d c6 fe ff ff 	jge	-314 <runtime.gentraceback+0xb4c>
  43bfb6:	e9 79 ff ff ff 	jmp	-135 <runtime.gentraceback+0xc04>
  43bfbb:	48 8b 9c 24 20 03 00 00 	movq	800(%rsp), %rbx
  43bfc3:	eb e4 	jmp	-28 <runtime.gentraceback+0xc79>
  43bfc5:	48 89 84 24 f8 00 00 00 	movq	%rax, 248(%rsp)
  43bfcd:	48 89 94 24 f0 00 00 00 	movq	%rdx, 240(%rsp)
  43bfd5:	e8 26 5b fe ff 	callq	-107738 <runtime.printlock>
  43bfda:	48 8d 05 7f dc 02 00 	leaq	187519(%rip), %rax
  43bfe1:	48 89 04 24 	movq	%rax, (%rsp)
  43bfe5:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  43bfee:	e8 4d 64 fe ff 	callq	-105395 <runtime.printstring>
  43bff3:	48 8b 84 24 f8 00 00 00 	movq	248(%rsp), %rax
  43bffb:	48 8b 8c 24 f0 00 00 00 	movq	240(%rsp), %rcx
  43c003:	48 29 c8 	subq	%rcx, %rax
  43c006:	48 89 04 24 	movq	%rax, (%rsp)
  43c00a:	e8 e1 62 fe ff 	callq	-105759 <runtime.printhex>
  43c00f:	e8 6c 5b fe ff 	callq	-107668 <runtime.printunlock>
  43c014:	48 8b 8c 24 80 02 00 00 	movq	640(%rsp), %rcx
  43c01c:	e9 29 fe ff ff 	jmp	-471 <runtime.gentraceback+0xb1a>
  43c021:	48 8b b4 24 08 02 00 00 	movq	520(%rsp), %rsi
  43c029:	e9 58 fc ff ff 	jmp	-936 <runtime.gentraceback+0x956>
  43c02e:	48 89 84 24 70 02 00 00 	movq	%rax, 624(%rsp)
  43c036:	48 8b 84 24 80 02 00 00 	movq	640(%rsp), %rax
  43c03e:	48 89 04 24 	movq	%rax, (%rsp)
  43c042:	48 8b 8c 24 88 02 00 00 	movq	648(%rsp), %rcx
  43c04a:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  43c04f:	c7 44 24 10 01 00 00 00 	movl	$1, 16(%rsp)
  43c057:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  43c05c:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  43c061:	48 c7 44 24 20 00 00 00 00 	movq	$0, 32(%rsp)
  43c06a:	e8 d1 cd ff ff 	callq	-12847 <runtime.pcdatavalue>
  43c06f:	8b 44 24 28 	movl	40(%rsp), %eax
  43c073:	48 8b 8c 24 a0 00 00 00 	movq	160(%rsp), %rcx
  43c07b:	48 8b 94 24 38 02 00 00 	movq	568(%rsp), %rdx
  43c083:	8b 5c 24 44 	movl	68(%rsp), %ebx
  43c087:	e9 71 01 00 00 	jmp	369 <runtime.gentraceback+0xecd>
  43c08c:	48 89 8c 24 b8 00 00 00 	movq	%rcx, 184(%rsp)
  43c094:	48 89 94 24 68 02 00 00 	movq	%rdx, 616(%rsp)
  43c09c:	89 5c 24 4c 	movl	%ebx, 76(%rsp)
  43c0a0:	48 c1 e0 04 	shlq	$4, %rax
  43c0a4:	48 89 84 24 b0 00 00 00 	movq	%rax, 176(%rsp)
  43c0ac:	48 8b 8c 24 70 02 00 00 	movq	624(%rsp), %rcx
  43c0b4:	8b 54 01 0c 	movl	12(%rcx,%rax), %edx
  43c0b8:	89 54 24 10 	movl	%edx, 16(%rsp)
  43c0bc:	48 8b 94 24 80 02 00 00 	movq	640(%rsp), %rdx
  43c0c4:	48 89 14 24 	movq	%rdx, (%rsp)
  43c0c8:	48 8b 9c 24 88 02 00 00 	movq	648(%rsp), %rbx
  43c0d0:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  43c0d5:	e8 a6 c8 ff ff 	callq	-14170 <runtime.funcnameFromNameoff>
  43c0da:	48 8b 44 24 20 	movq	32(%rsp), %rax
  43c0df:	48 89 84 24 80 00 00 00 	movq	%rax, 128(%rsp)
  43c0e7:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  43c0ec:	48 89 8c 24 10 02 00 00 	movq	%rcx, 528(%rsp)
  43c0f4:	e8 07 5a fe ff 	callq	-108025 <runtime.printlock>
  43c0f9:	48 8b 84 24 10 02 00 00 	movq	528(%rsp), %rax
  43c101:	48 89 04 24 	movq	%rax, (%rsp)
  43c105:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  43c10d:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43c112:	e8 29 63 fe ff 	callq	-105687 <runtime.printstring>
  43c117:	48 8d 05 11 dd 02 00 	leaq	187665(%rip), %rax
  43c11e:	48 89 04 24 	movq	%rax, (%rsp)
  43c122:	48 c7 44 24 08 06 00 00 00 	movq	$6, 8(%rsp)
  43c12b:	e8 10 63 fe ff 	callq	-105712 <runtime.printstring>
  43c130:	e8 4b 5a fe ff 	callq	-107957 <runtime.printunlock>
  43c135:	e8 c6 59 fe ff 	callq	-108090 <runtime.printlock>
  43c13a:	48 8d 05 1d db 02 00 	leaq	187165(%rip), %rax
  43c141:	48 89 04 24 	movq	%rax, (%rsp)
  43c145:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  43c14e:	e8 ed 62 fe ff 	callq	-105747 <runtime.printstring>
  43c153:	48 8b 84 24 68 02 00 00 	movq	616(%rsp), %rax
  43c15b:	48 89 04 24 	movq	%rax, (%rsp)
  43c15f:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  43c167:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43c16c:	e8 cf 62 fe ff 	callq	-105777 <runtime.printstring>
  43c171:	48 8d 05 e0 da 02 00 	leaq	187104(%rip), %rax
  43c178:	48 89 04 24 	movq	%rax, (%rsp)
  43c17c:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  43c185:	e8 b6 62 fe ff 	callq	-105802 <runtime.printstring>
  43c18a:	8b 44 24 4c 	movl	76(%rsp), %eax
  43c18e:	48 63 c0 	movslq	%eax, %rax
  43c191:	48 89 04 24 	movq	%rax, (%rsp)
  43c195:	e8 e6 60 fe ff 	callq	-106266 <runtime.printint>
  43c19a:	e8 f1 5b fe ff 	callq	-107535 <runtime.printnl>
  43c19f:	e8 dc 59 fe ff 	callq	-108068 <runtime.printunlock>
  43c1a4:	48 8b 84 24 b0 00 00 00 	movq	176(%rsp), %rax
  43c1ac:	48 8b 8c 24 70 02 00 00 	movq	624(%rsp), %rcx
  43c1b4:	8b 54 01 04 	movl	4(%rcx,%rax), %edx
  43c1b8:	89 54 24 10 	movl	%edx, 16(%rsp)
  43c1bc:	48 8b 94 24 80 02 00 00 	movq	640(%rsp), %rdx
  43c1c4:	48 89 14 24 	movq	%rdx, (%rsp)
  43c1c8:	48 8b 9c 24 88 02 00 00 	movq	648(%rsp), %rbx
  43c1d0:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  43c1d5:	e8 36 c8 ff ff 	callq	-14282 <runtime.funcfile>
  43c1da:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  43c1df:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  43c1e4:	48 8b 84 24 b0 00 00 00 	movq	176(%rsp), %rax
  43c1ec:	48 8b 9c 24 70 02 00 00 	movq	624(%rsp), %rbx
  43c1f4:	8b 74 03 08 	movl	8(%rbx,%rax), %esi
  43c1f8:	8b 04 03 	movl	(%rbx,%rax), %eax
  43c1fb:	89 f3 	movl	%esi, %ebx
  43c1fd:	83 f8 ff 	cmpl	$-1, %eax
  43c200:	74 14 	je	20 <runtime.gentraceback+0xee6>
  43c202:	48 63 c0 	movslq	%eax, %rax
  43c205:	48 3d 00 00 10 00 	cmpq	$1048576, %rax
  43c20b:	0f 82 7b fe ff ff 	jb	-389 <runtime.gentraceback+0xd5c>
  43c211:	e9 b9 0c 00 00 	jmp	3257 <runtime.gentraceback+0x1b9f>
  43c216:	48 8b 44 24 78 	movq	120(%rsp), %rax
  43c21b:	48 83 f8 0f 	cmpq	$15, %rax
  43c21f:	48 89 ce 	movq	%rcx, %rsi
  43c222:	48 89 d1 	movq	%rdx, %rcx
  43c225:	48 89 f2 	movq	%rsi, %rdx
  43c228:	e9 f9 f9 ff ff 	jmp	-1543 <runtime.gentraceback+0x8f6>
  43c22d:	48 ff cf 	decq	%rdi
  43c230:	e9 5e f9 ff ff 	jmp	-1698 <runtime.gentraceback+0x863>
  43c235:	0f ba e6 01 	btl	$1, %esi
  43c239:	0f 83 35 f9 ff ff 	jae	-1739 <runtime.gentraceback+0x844>
  43c23f:	4c 8b 8c 24 80 02 00 00 	movq	640(%rsp), %r9
  43c247:	e9 47 f9 ff ff 	jmp	-1721 <runtime.gentraceback+0x863>
  43c24c:	48 8b bc 24 80 02 00 00 	movq	640(%rsp), %rdi
  43c254:	48 89 3c 24 	movq	%rdi, (%rsp)
  43c258:	4c 8b 84 24 88 02 00 00 	movq	648(%rsp), %r8
  43c260:	4c 89 44 24 08 	movq	%r8, 8(%rsp)
  43c265:	4c 8b 8c 24 20 03 00 00 	movq	800(%rsp), %r9
  43c26d:	4c 89 4c 24 10 	movq	%r9, 16(%rsp)
  43c272:	4c 8b 54 24 68 	movq	104(%rsp), %r10
  43c277:	4d 85 d2 	testq	%r10, %r10
  43c27a:	4c 8b 9c 24 98 02 00 00 	movq	664(%rsp), %r11
  43c282:	41 0f 94 03 	sete	(%r11)
  43c286:	44 0f b6 64 24 40 	movzbl	64(%rsp), %r12d
  43c28c:	45 84 e4 	testb	%r12b, %r12b
  43c28f:	74 4d 	je	77 <runtime.gentraceback+0xfae>
  43c291:	4d 85 d2 	testq	%r10, %r10
  43c294:	41 0f 95 c4 	setne	%r12b
  43c298:	44 88 64 24 19 	movb	%r12b, 25(%rsp)
  43c29d:	e8 ee 17 00 00 	callq	6126 <runtime.showframe>
  43c2a2:	0f b6 44 24 20 	movzbl	32(%rsp), %eax
  43c2a7:	84 c0 	testb	%al, %al
  43c2a9:	75 0a 	jne	10 <runtime.gentraceback+0xf85>
  43c2ab:	48 8b 44 24 68 	movq	104(%rsp), %rax
  43c2b0:	e9 96 fc ff ff 	jmp	-874 <runtime.gentraceback+0xc1b>
  43c2b5:	48 8b 84 24 08 02 00 00 	movq	520(%rsp), %rax
  43c2bd:	48 8b 4c 24 78 	movq	120(%rsp), %rcx
  43c2c2:	0f b6 54 24 42 	movzbl	66(%rsp), %edx
  43c2c7:	48 bb 72 75 6e 74 69 6d 65 2e 	movabsq	$3343198598084851058, %rbx
  43c2d1:	48 8b b4 24 50 03 00 00 	movq	848(%rsp), %rsi
  43c2d9:	e9 7d f8 ff ff 	jmp	-1923 <runtime.gentraceback+0x82b>
  43c2de:	45 31 e4 	xorl	%r12d, %r12d
  43c2e1:	eb b5 	jmp	-75 <runtime.gentraceback+0xf68>
  43c2e3:	48 83 f9 10 	cmpq	$16, %rcx
  43c2e7:	0f 85 8a 00 00 00 	jne	138 <runtime.gentraceback+0x1047>
  43c2ed:	48 8b 10 	movq	(%rax), %rdx
  43c2f0:	48 39 d3 	cmpq	%rdx, %rbx
  43c2f3:	75 74 	jne	116 <runtime.gentraceback+0x1039>
  43c2f5:	48 8b 50 08 	movq	8(%rax), %rdx
  43c2f9:	48 be 73 69 67 70 61 6e 69 63 	movabsq	$7163378047086193011, %rsi
  43c303:	48 39 d6 	cmpq	%rdx, %rsi
  43c306:	0f 94 c2 	sete	%dl
  43c309:	84 d2 	testb	%dl, %dl
  43c30b:	74 0a 	je	10 <runtime.gentraceback+0xfe7>
  43c30d:	ba 01 00 00 00 	movl	$1, %edx
  43c312:	e9 2e f8 ff ff 	jmp	-2002 <runtime.gentraceback+0x815>
  43c317:	48 83 f9 11 	cmpq	$17, %rcx
  43c31b:	74 07 	je	7 <runtime.gentraceback+0xff4>
  43c31d:	31 d2 	xorl	%edx, %edx
  43c31f:	e9 21 f8 ff ff 	jmp	-2015 <runtime.gentraceback+0x815>
  43c324:	48 89 04 24 	movq	%rax, (%rsp)
  43c328:	48 8d 15 61 e9 02 00 	leaq	190817(%rip), %rdx
  43c32f:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  43c334:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  43c339:	e8 02 a0 00 00 	callq	40962 <runtime.memequal>
  43c33e:	0f b6 54 24 18 	movzbl	24(%rsp), %edx
  43c343:	48 8b 84 24 08 02 00 00 	movq	520(%rsp), %rax
  43c34b:	48 8b 4c 24 78 	movq	120(%rsp), %rcx
  43c350:	48 bb 72 75 6e 74 69 6d 65 2e 	movabsq	$3343198598084851058, %rbx
  43c35a:	48 be 73 69 67 70 61 6e 69 63 	movabsq	$7163378047086193011, %rsi
  43c364:	e9 dc f7 ff ff 	jmp	-2084 <runtime.gentraceback+0x815>
  43c369:	48 be 73 69 67 70 61 6e 69 63 	movabsq	$7163378047086193011, %rsi
  43c373:	31 d2 	xorl	%edx, %edx
  43c375:	eb 92 	jmp	-110 <runtime.gentraceback+0xfd9>
  43c377:	48 be 73 69 67 70 61 6e 69 63 	movabsq	$7163378047086193011, %rsi
  43c381:	31 d2 	xorl	%edx, %edx
  43c383:	eb 84 	jmp	-124 <runtime.gentraceback+0xfd9>
  43c385:	48 bb 72 75 6e 74 69 6d 65 2e 	movabsq	$3343198598084851058, %rbx
  43c38f:	e9 4f ff ff ff 	jmp	-177 <runtime.gentraceback+0xfb3>
  43c394:	4c 8b ac 24 b0 02 00 00 	movq	688(%rsp), %r13
  43c39c:	48 85 c9 	testq	%rcx, %rcx
  43c39f:	0f 8e 3a 02 00 00 	jle	570 <runtime.gentraceback+0x12af>
  43c3a5:	4d 8b 34 24 	movq	(%r12), %r14
  43c3a9:	4d 39 f5 	cmpq	%r14, %r13
  43c3ac:	76 08 	jbe	8 <runtime.gentraceback+0x1086>
  43c3ae:	84 d2 	testb	%dl, %dl
  43c3b0:	0f 84 21 02 00 00 	je	545 <runtime.gentraceback+0x12a7>
  43c3b6:	4c 89 6c 24 58 	movq	%r13, 88(%rsp)
  43c3bb:	4c 89 24 24 	movq	%r12, (%rsp)
  43c3bf:	48 8b 84 24 88 02 00 00 	movq	648(%rsp), %rax
  43c3c7:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43c3cc:	c7 44 24 10 02 00 00 00 	movl	$2, 16(%rsp)
  43c3d4:	e8 17 cb ff ff 	callq	-13545 <runtime.funcdata>
  43c3d9:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43c3de:	48 85 c0 	testq	%rax, %rax
  43c3e1:	75 61 	jne	97 <runtime.gentraceback+0x1114>
  43c3e3:	4c 8b ac 24 28 03 00 00 	movq	808(%rsp), %r13
  43c3eb:	4d 8d 45 ff 	leaq	-1(%r13), %r8
  43c3ef:	48 8b 84 24 40 03 00 00 	movq	832(%rsp), %rax
  43c3f7:	48 8b b4 24 a8 00 00 00 	movq	168(%rsp), %rsi
  43c3ff:	48 8b bc 24 78 02 00 00 	movq	632(%rsp), %rdi
  43c407:	4c 8b 94 24 58 02 00 00 	movq	600(%rsp), %r10
  43c40f:	4c 8b 9c 24 30 03 00 00 	movq	816(%rsp), %r11
  43c417:	4c 8b a4 24 80 02 00 00 	movq	640(%rsp), %r12
  43c41f:	44 0f b6 74 24 41 	movzbl	65(%rsp), %r14d
  43c425:	4c 8b bc 24 48 02 00 00 	movq	584(%rsp), %r15
  43c42d:	0f b6 5c 24 40 	movzbl	64(%rsp), %ebx
  43c432:	4c 8b 4c 24 68 	movq	104(%rsp), %r9
  43c437:	48 8b 8c 24 88 00 00 00 	movq	136(%rsp), %rcx
  43c43f:	e9 7f f1 ff ff 	jmp	-3713 <runtime.gentraceback+0x293>
  43c444:	48 89 84 24 70 02 00 00 	movq	%rax, 624(%rsp)
  43c44c:	48 8b 84 24 80 02 00 00 	movq	640(%rsp), %rax
  43c454:	48 89 04 24 	movq	%rax, (%rsp)
  43c458:	48 8b 8c 24 88 02 00 00 	movq	648(%rsp), %rcx
  43c460:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  43c465:	c7 44 24 10 01 00 00 00 	movl	$1, 16(%rsp)
  43c46d:	48 8b 54 24 58 	movq	88(%rsp), %rdx
  43c472:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  43c477:	48 8d 94 24 08 01 00 00 	leaq	264(%rsp), %rdx
  43c47f:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  43c484:	e8 b7 c9 ff ff 	callq	-13897 <runtime.pcdatavalue>
  43c489:	8b 44 24 28 	movl	40(%rsp), %eax
  43c48d:	48 8b 8c 24 70 02 00 00 	movq	624(%rsp), %rcx
  43c495:	48 8b 94 24 28 03 00 00 	movq	808(%rsp), %rdx
  43c49d:	31 db 	xorl	%ebx, %ebx
  43c49f:	eb 0d 	jmp	13 <runtime.gentraceback+0x117e>
  43c4a1:	48 ff ca 	decq	%rdx
  43c4a4:	48 ff c3 	incq	%rbx
  43c4a7:	48 c1 e0 04 	shlq	$4, %rax
  43c4ab:	8b 04 01 	movl	(%rcx,%rax), %eax
  43c4ae:	85 c0 	testl	%eax, %eax
  43c4b0:	7c 15 	jl	21 <runtime.gentraceback+0x1197>
  43c4b2:	48 85 d2 	testq	%rdx, %rdx
  43c4b5:	7e 10 	jle	16 <runtime.gentraceback+0x1197>
  43c4b7:	48 63 c0 	movslq	%eax, %rax
  43c4ba:	48 3d 00 00 10 00 	cmpq	$1048576, %rax
  43c4c0:	72 df 	jb	-33 <runtime.gentraceback+0x1171>
  43c4c2:	e9 1d 0a 00 00 	jmp	2589 <runtime.gentraceback+0x1bb4>
  43c4c7:	48 85 d2 	testq	%rdx, %rdx
  43c4ca:	7e 59 	jle	89 <runtime.gentraceback+0x11f5>
  43c4cc:	4c 8d 42 ff 	leaq	-1(%rdx), %r8
  43c4d0:	48 8b 84 24 40 03 00 00 	movq	832(%rsp), %rax
  43c4d8:	48 8b b4 24 a8 00 00 00 	movq	168(%rsp), %rsi
  43c4e0:	48 8b bc 24 78 02 00 00 	movq	632(%rsp), %rdi
  43c4e8:	4c 8b 94 24 58 02 00 00 	movq	600(%rsp), %r10
  43c4f0:	4c 8b 9c 24 30 03 00 00 	movq	816(%rsp), %r11
  43c4f8:	4c 8b a4 24 80 02 00 00 	movq	640(%rsp), %r12
  43c500:	44 0f b6 74 24 41 	movzbl	65(%rsp), %r14d
  43c506:	4c 8b bc 24 48 02 00 00 	movq	584(%rsp), %r15
  43c50e:	0f b6 5c 24 40 	movzbl	64(%rsp), %ebx
  43c513:	4c 8b 4c 24 68 	movq	104(%rsp), %r9
  43c518:	48 8b 8c 24 88 00 00 00 	movq	136(%rsp), %rcx
  43c520:	e9 9e f0 ff ff 	jmp	-3938 <runtime.gentraceback+0x293>
  43c525:	48 8b 84 24 b0 02 00 00 	movq	688(%rsp), %rax
  43c52d:	48 8b 8c 24 88 00 00 00 	movq	136(%rsp), %rcx
  43c535:	48 81 f9 00 00 10 00 	cmpq	$1048576, %rcx
  43c53c:	0f 83 9b 09 00 00 	jae	2459 <runtime.gentraceback+0x1bad>
  43c542:	48 8b b4 24 30 03 00 00 	movq	816(%rsp), %rsi
  43c54a:	48 89 04 ce 	movq	%rax, (%rsi,%rcx,8)
  43c54e:	48 8d 41 01 	leaq	1(%rcx), %rax
  43c552:	48 8b bc 24 38 03 00 00 	movq	824(%rsp), %rdi
  43c55a:	48 39 f8 	cmpq	%rdi, %rax
  43c55d:	7d 73 	jge	115 <runtime.gentraceback+0x12a2>
  43c55f:	4c 8b 05 62 74 08 00 	movq	554082(%rip), %r8
  43c566:	4c 01 c3 	addq	%r8, %rbx
  43c569:	48 3d 00 00 10 00 	cmpq	$1048576, %rax
  43c56f:	0f 83 61 09 00 00 	jae	2401 <runtime.gentraceback+0x1ba6>
  43c575:	48 89 5c ce 08 	movq	%rbx, 8(%rsi,%rcx,8)
  43c57a:	0f b6 5c 24 40 	movzbl	64(%rsp), %ebx
  43c57f:	48 8b b4 24 a8 00 00 00 	movq	168(%rsp), %rsi
  43c587:	48 8b bc 24 78 02 00 00 	movq	632(%rsp), %rdi
  43c58f:	4c 8b 4c 24 68 	movq	104(%rsp), %r9
  43c594:	4c 8b 94 24 58 02 00 00 	movq	600(%rsp), %r10
  43c59c:	4c 8b 9c 24 30 03 00 00 	movq	816(%rsp), %r11
  43c5a4:	4c 8b a4 24 80 02 00 00 	movq	640(%rsp), %r12
  43c5ac:	44 0f b6 74 24 41 	movzbl	65(%rsp), %r14d
  43c5b2:	4c 8b bc 24 48 02 00 00 	movq	584(%rsp), %r15
  43c5ba:	48 89 c1 	movq	%rax, %rcx
  43c5bd:	49 89 d0 	movq	%rdx, %r8
  43c5c0:	48 8b 84 24 40 03 00 00 	movq	832(%rsp), %rax
  43c5c8:	0f b6 54 24 3f 	movzbl	63(%rsp), %edx
  43c5cd:	e9 e5 ef ff ff 	jmp	-4123 <runtime.gentraceback+0x287>
  43c5d2:	48 89 c8 	movq	%rcx, %rax
  43c5d5:	eb a3 	jmp	-93 <runtime.gentraceback+0x124a>
  43c5d7:	49 ff cd 	decq	%r13
  43c5da:	e9 d7 fd ff ff 	jmp	-553 <runtime.gentraceback+0x1086>
  43c5df:	4c 8b b4 24 50 03 00 00 	movq	848(%rsp), %r14
  43c5e7:	41 0f ba e6 01 	btl	$1, %r14d
  43c5ec:	0f 82 c4 fd ff ff 	jb	-572 <runtime.gentraceback+0x1086>
  43c5f2:	44 0f b6 74 24 41 	movzbl	65(%rsp), %r14d
  43c5f8:	e9 a8 fd ff ff 	jmp	-600 <runtime.gentraceback+0x1075>
  43c5fd:	48 8d 8c 24 a0 02 00 00 	leaq	672(%rsp), %rcx
  43c605:	48 89 0c 24 	movq	%rcx, (%rsp)
  43c609:	48 8b 9c 24 48 03 00 00 	movq	840(%rsp), %rbx
  43c611:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  43c616:	48 8b 30 	movq	(%rax), %rsi
  43c619:	48 89 c2 	movq	%rax, %rdx
  43c61c:	ff d6 	callq	*%rsi
  43c61e:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  43c623:	84 c0 	testb	%al, %al
  43c625:	74 65 	je	101 <runtime.gentraceback+0x135c>
  43c627:	4c 8b 9c 24 30 03 00 00 	movq	816(%rsp), %r11
  43c62f:	4d 85 db 	testq	%r11, %r11
  43c632:	48 8b 84 24 40 03 00 00 	movq	832(%rsp), %rax
  43c63a:	48 8b 8c 24 88 00 00 00 	movq	136(%rsp), %rcx
  43c642:	0f b6 54 24 3f 	movzbl	63(%rsp), %edx
  43c647:	0f b6 5c 24 40 	movzbl	64(%rsp), %ebx
  43c64c:	48 8b b4 24 a8 00 00 00 	movq	168(%rsp), %rsi
  43c654:	48 8b bc 24 78 02 00 00 	movq	632(%rsp), %rdi
  43c65c:	4c 8b 84 24 28 03 00 00 	movq	808(%rsp), %r8
  43c664:	4c 8b 4c 24 68 	movq	104(%rsp), %r9
  43c669:	4c 8b 94 24 58 02 00 00 	movq	600(%rsp), %r10
  43c671:	4c 8b a4 24 80 02 00 00 	movq	640(%rsp), %r12
  43c679:	44 0f b6 74 24 41 	movzbl	65(%rsp), %r14d
  43c67f:	4c 8b bc 24 48 02 00 00 	movq	584(%rsp), %r15
  43c687:	e9 07 ef ff ff 	jmp	-4345 <runtime.gentraceback+0x263>
  43c68c:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  43c694:	48 89 84 24 58 03 00 00 	movq	%rax, 856(%rsp)
  43c69c:	48 8b ac 24 f8 02 00 00 	movq	760(%rsp), %rbp
  43c6a4:	48 81 c4 00 03 00 00 	addq	$768, %rsp
  43c6ab:	c3 	retq
  43c6ac:	48 85 c0 	testq	%rax, %rax
  43c6af:	e9 c6 ee ff ff 	jmp	-4410 <runtime.gentraceback+0x24a>
  43c6b4:	48 c7 84 24 b8 02 00 00 00 00 00 00 	movq	$0, 696(%rsp)
  43c6c0:	e9 92 ee ff ff 	jmp	-4462 <runtime.gentraceback+0x227>
  43c6c5:	48 8b 84 24 d0 02 00 00 	movq	720(%rsp), %rax
  43c6cd:	48 89 84 24 e0 02 00 00 	movq	%rax, 736(%rsp)
  43c6d5:	48 8d 84 24 a0 02 00 00 	leaq	672(%rsp), %rax
  43c6dd:	48 89 04 24 	movq	%rax, (%rsp)
  43c6e1:	4c 89 64 24 08 	movq	%r12, 8(%rsp)
  43c6e6:	4c 89 6c 24 10 	movq	%r13, 16(%rsp)
  43c6eb:	44 88 5c 24 18 	movb	%r11b, 24(%rsp)
  43c6f0:	48 c7 44 24 20 00 00 00 00 	movq	$0, 32(%rsp)
  43c6f9:	e8 72 08 00 00 	callq	2162 <runtime.getArgInfo>
  43c6fe:	48 8b 44 24 28 	movq	40(%rsp), %rax
  43c703:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  43c708:	48 89 84 24 e8 02 00 00 	movq	%rax, 744(%rsp)
  43c710:	48 89 8c 24 f0 02 00 00 	movq	%rcx, 752(%rsp)
  43c718:	48 8b 84 24 40 03 00 00 	movq	832(%rsp), %rax
  43c720:	48 8b 8c 24 88 00 00 00 	movq	136(%rsp), %rcx
  43c728:	0f b6 54 24 3f 	movzbl	63(%rsp), %edx
  43c72d:	0f b6 5c 24 40 	movzbl	64(%rsp), %ebx
  43c732:	48 8b b4 24 a8 00 00 00 	movq	168(%rsp), %rsi
  43c73a:	48 8b bc 24 78 02 00 00 	movq	632(%rsp), %rdi
  43c742:	4c 8b 84 24 28 03 00 00 	movq	808(%rsp), %r8
  43c74a:	4c 8b 4c 24 68 	movq	104(%rsp), %r9
  43c74f:	4c 8b 94 24 90 02 00 00 	movq	656(%rsp), %r10
  43c757:	4c 8b a4 24 80 02 00 00 	movq	640(%rsp), %r12
  43c75f:	4c 8b ac 24 88 02 00 00 	movq	648(%rsp), %r13
  43c767:	44 0f b6 74 24 41 	movzbl	65(%rsp), %r14d
  43c76d:	4c 8b bc 24 48 02 00 00 	movq	584(%rsp), %r15
  43c775:	e9 38 f0 ff ff 	jmp	-4040 <runtime.gentraceback+0x482>
  43c77a:	48 8b 84 24 c0 02 00 00 	movq	704(%rsp), %rax
  43c782:	48 85 c0 	testq	%rax, %rax
  43c785:	0f 85 55 02 00 00 	jne	597 <runtime.gentraceback+0x16b0>
  43c78b:	48 8b 84 24 d0 02 00 00 	movq	720(%rsp), %rax
  43c793:	48 83 c0 f8 	addq	$-8, %rax
  43c797:	49 89 c7 	movq	%rax, %r15
  43c79a:	48 8b 00 	movq	(%rax), %rax
  43c79d:	48 89 84 24 c0 02 00 00 	movq	%rax, 704(%rsp)
  43c7a5:	4c 89 bc 24 90 00 00 00 	movq	%r15, 144(%rsp)
  43c7ad:	48 8b 84 24 c0 02 00 00 	movq	704(%rsp), %rax
  43c7b5:	48 89 04 24 	movq	%rax, (%rsp)
  43c7b9:	e8 12 ba ff ff 	callq	-17902 <runtime.findfunc>
  43c7be:	48 8b 44 24 10 	movq	16(%rsp), %rax
  43c7c3:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  43c7c8:	48 85 c9 	testq	%rcx, %rcx
  43c7cb:	74 5f 	je	95 <runtime.gentraceback+0x14fc>
  43c7cd:	0f b6 54 24 3f 	movzbl	63(%rsp), %edx
  43c7d2:	0f b6 5c 24 40 	movzbl	64(%rsp), %ebx
  43c7d7:	48 8b b4 24 a8 00 00 00 	movq	168(%rsp), %rsi
  43c7df:	48 8b bc 24 78 02 00 00 	movq	632(%rsp), %rdi
  43c7e7:	4c 8b 84 24 28 03 00 00 	movq	808(%rsp), %r8
  43c7ef:	4c 8b 4c 24 68 	movq	104(%rsp), %r9
  43c7f4:	4c 8b 94 24 90 02 00 00 	movq	656(%rsp), %r10
  43c7fc:	4c 8b 9c 24 38 03 00 00 	movq	824(%rsp), %r11
  43c804:	4c 8b a4 24 80 02 00 00 	movq	640(%rsp), %r12
  43c80c:	4c 8b ac 24 88 02 00 00 	movq	648(%rsp), %r13
  43c814:	4c 8b b4 24 20 03 00 00 	movq	800(%rsp), %r14
  43c81c:	49 89 cf 	movq	%rcx, %r15
  43c81f:	48 8b 8c 24 88 00 00 00 	movq	136(%rsp), %rcx
  43c827:	e9 1a ef ff ff 	jmp	-4326 <runtime.gentraceback+0x416>
  43c82c:	0f b6 5c 24 41 	movzbl	65(%rsp), %ebx
  43c831:	84 db 	testb	%bl, %bl
  43c833:	0f 84 90 01 00 00 	je	400 <runtime.gentraceback+0x1699>
  43c839:	48 8b b4 24 20 03 00 00 	movq	800(%rsp), %rsi
  43c841:	48 8b 7e 30 	movq	48(%rsi), %rdi
  43c845:	0f b6 bf 19 01 00 00 	movzbl	281(%rdi), %edi
  43c84c:	40 84 ff 	testb	%dil, %dil
  43c84f:	0f 84 6a 01 00 00 	je	362 <runtime.gentraceback+0x168f>
  43c855:	48 8b bc 24 80 02 00 00 	movq	640(%rsp), %rdi
  43c85d:	44 8b 47 10 	movl	16(%rdi), %r8d
  43c861:	41 83 f8 08 	cmpl	$8, %r8d
  43c865:	0f 85 4d 01 00 00 	jne	333 <runtime.gentraceback+0x1688>
  43c86b:	31 d2 	xorl	%edx, %edx
  43c86d:	48 89 84 24 28 02 00 00 	movq	%rax, 552(%rsp)
  43c875:	48 89 8c 24 30 02 00 00 	movq	%rcx, 560(%rsp)
  43c87d:	4c 8b 84 24 40 03 00 00 	movq	832(%rsp), %r8
  43c885:	4d 85 c0 	testq	%r8, %r8
  43c888:	75 12 	jne	18 <runtime.gentraceback+0x156c>
  43c88a:	84 d2 	testb	%dl, %dl
  43c88c:	75 0e 	jne	14 <runtime.gentraceback+0x156c>
  43c88e:	4d 85 c0 	testq	%r8, %r8
  43c891:	0f 85 5b 06 00 00 	jne	1627 <runtime.gentraceback+0x1bc2>
  43c897:	e9 31 ff ff ff 	jmp	-207 <runtime.gentraceback+0x149d>
  43c89c:	48 89 3c 24 	movq	%rdi, (%rsp)
  43c8a0:	48 8b 84 24 88 02 00 00 	movq	648(%rsp), %rax
  43c8a8:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43c8ad:	e8 4e c0 ff ff 	callq	-16306 <runtime.funcname>
  43c8b2:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43c8b7:	48 89 84 24 c8 00 00 00 	movq	%rax, 200(%rsp)
  43c8bf:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  43c8c4:	48 89 8c 24 60 02 00 00 	movq	%rcx, 608(%rsp)
  43c8cc:	48 8b 94 24 c0 02 00 00 	movq	704(%rsp), %rdx
  43c8d4:	48 89 94 24 f8 00 00 00 	movq	%rdx, 248(%rsp)
  43c8dc:	e8 1f 52 fe ff 	callq	-110049 <runtime.printlock>
  43c8e1:	48 8d 05 78 03 03 00 	leaq	197496(%rip), %rax
  43c8e8:	48 89 04 24 	movq	%rax, (%rsp)
  43c8ec:	48 c7 44 24 08 22 00 00 00 	movq	$34, 8(%rsp)
  43c8f5:	e8 46 5b fe ff 	callq	-107706 <runtime.printstring>
  43c8fa:	48 8b 84 24 60 02 00 00 	movq	608(%rsp), %rax
  43c902:	48 89 04 24 	movq	%rax, (%rsp)
  43c906:	48 8b 84 24 c8 00 00 00 	movq	200(%rsp), %rax
  43c90e:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43c913:	e8 28 5b fe ff 	callq	-107736 <runtime.printstring>
  43c918:	48 8d 05 45 dd 02 00 	leaq	187717(%rip), %rax
  43c91f:	48 89 04 24 	movq	%rax, (%rsp)
  43c923:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  43c92c:	e8 0f 5b fe ff 	callq	-107761 <runtime.printstring>
  43c931:	48 8b 84 24 f8 00 00 00 	movq	248(%rsp), %rax
  43c939:	48 89 04 24 	movq	%rax, (%rsp)
  43c93d:	e8 ae 59 fe ff 	callq	-108114 <runtime.printhex>
  43c942:	e8 49 54 fe ff 	callq	-109495 <runtime.printnl>
  43c947:	e8 34 52 fe ff 	callq	-110028 <runtime.printunlock>
  43c94c:	48 8b 84 24 20 03 00 00 	movq	800(%rsp), %rax
  43c954:	48 8b 48 08 	movq	8(%rax), %rcx
  43c958:	48 8b 10 	movq	(%rax), %rdx
  43c95b:	48 89 14 24 	movq	%rdx, (%rsp)
  43c95f:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  43c964:	48 8d 8c 24 a0 02 00 00 	leaq	672(%rsp), %rcx
  43c96c:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  43c971:	48 8b 94 24 90 00 00 00 	movq	144(%rsp), %rdx
  43c979:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  43c97e:	e8 9d 18 00 00 	callq	6301 <runtime.tracebackHexdump>
  43c983:	4c 8b 84 24 40 03 00 00 	movq	832(%rsp), %r8
  43c98b:	4d 85 c0 	testq	%r8, %r8
  43c98e:	48 8b 84 24 28 02 00 00 	movq	552(%rsp), %rax
  43c996:	48 8b 8c 24 30 02 00 00 	movq	560(%rsp), %rcx
  43c99e:	0f b6 5c 24 41 	movzbl	65(%rsp), %ebx
  43c9a3:	48 8b b4 24 20 03 00 00 	movq	800(%rsp), %rsi
  43c9ab:	48 8b bc 24 80 02 00 00 	movq	640(%rsp), %rdi
  43c9b3:	e9 d9 fe ff ff 	jmp	-295 <runtime.gentraceback+0x1561>
  43c9b8:	89 da 	movl	%ebx, %edx
  43c9ba:	e9 ae fe ff ff 	jmp	-338 <runtime.gentraceback+0x153d>
  43c9bf:	48 8b bc 24 80 02 00 00 	movq	640(%rsp), %rdi
  43c9c7:	eb ef 	jmp	-17 <runtime.gentraceback+0x1688>
  43c9c9:	48 8b b4 24 20 03 00 00 	movq	800(%rsp), %rsi
  43c9d1:	48 8b bc 24 80 02 00 00 	movq	640(%rsp), %rdi
  43c9d9:	31 d2 	xorl	%edx, %edx
  43c9db:	e9 8d fe ff ff 	jmp	-371 <runtime.gentraceback+0x153d>
  43c9e0:	45 31 ff 	xorl	%r15d, %r15d
  43c9e3:	e9 bd fd ff ff 	jmp	-579 <runtime.gentraceback+0x1475>
  43c9e8:	83 f8 05 	cmpl	$5, %eax
  43c9eb:	75 0a 	jne	10 <runtime.gentraceback+0x16c7>
  43c9ed:	b8 01 00 00 00 	movl	$1, %eax
  43c9f2:	e9 26 ed ff ff 	jmp	-4826 <runtime.gentraceback+0x3ed>
  43c9f7:	83 f8 03 	cmpl	$3, %eax
  43c9fa:	75 0a 	jne	10 <runtime.gentraceback+0x16d6>
  43c9fc:	b8 01 00 00 00 	movl	$1, %eax
  43ca01:	e9 17 ed ff ff 	jmp	-4841 <runtime.gentraceback+0x3ed>
  43ca06:	83 f8 04 	cmpl	$4, %eax
  43ca09:	75 0a 	jne	10 <runtime.gentraceback+0x16e5>
  43ca0b:	b8 01 00 00 00 	movl	$1, %eax
  43ca10:	e9 08 ed ff ff 	jmp	-4856 <runtime.gentraceback+0x3ed>
  43ca15:	83 f8 06 	cmpl	$6, %eax
  43ca18:	75 0a 	jne	10 <runtime.gentraceback+0x16f4>
  43ca1a:	b8 01 00 00 00 	movl	$1, %eax
  43ca1f:	e9 f9 ec ff ff 	jmp	-4871 <runtime.gentraceback+0x3ed>
  43ca24:	83 f8 12 	cmpl	$18, %eax
  43ca27:	75 0a 	jne	10 <runtime.gentraceback+0x1703>
  43ca29:	b8 01 00 00 00 	movl	$1, %eax
  43ca2e:	e9 ea ec ff ff 	jmp	-4886 <runtime.gentraceback+0x3ed>
  43ca33:	45 84 ff 	testb	%r15b, %r15b
  43ca36:	74 0b 	je	11 <runtime.gentraceback+0x1713>
  43ca38:	83 f8 07 	cmpl	$7, %eax
  43ca3b:	0f 94 c0 	sete	%al
  43ca3e:	e9 da ec ff ff 	jmp	-4902 <runtime.gentraceback+0x3ed>
  43ca43:	31 c0 	xorl	%eax, %eax
  43ca45:	e9 d3 ec ff ff 	jmp	-4909 <runtime.gentraceback+0x3ed>
  43ca4a:	45 31 ff 	xorl	%r15d, %r15d
  43ca4d:	e9 b8 ec ff ff 	jmp	-4936 <runtime.gentraceback+0x3da>
  43ca52:	4c 8b b4 24 c8 02 00 00 	movq	712(%rsp), %r14
  43ca5a:	4c 8b bc 24 50 03 00 00 	movq	848(%rsp), %r15
  43ca62:	41 0f ba e7 02 	btl	$2, %r15d
  43ca67:	0f 83 4a 01 00 00 	jae	330 <runtime.gentraceback+0x1887>
  43ca6d:	41 8b 44 24 10 	movl	16(%r12), %eax
  43ca72:	83 f8 0f 	cmpl	$15, %eax
  43ca75:	0f 85 2b 01 00 00 	jne	299 <runtime.gentraceback+0x1876>
  43ca7b:	48 8b 84 24 20 02 00 00 	movq	544(%rsp), %rax
  43ca83:	48 8b 40 30 	movq	48(%rax), %rax
  43ca87:	48 8b 00 	movq	(%rax), %rax
  43ca8a:	4c 8b bc 24 20 03 00 00 	movq	800(%rsp), %r15
  43ca92:	4c 39 f8 	cmpq	%r15, %rax
  43ca95:	0f 85 fa 00 00 00 	jne	250 <runtime.gentraceback+0x1865>
  43ca9b:	49 8b 47 30 	movq	48(%r15), %rax
  43ca9f:	48 8b 80 c0 00 00 00 	movq	192(%rax), %rax
  43caa6:	48 85 c0 	testq	%rax, %rax
  43caa9:	0f 84 d5 00 00 00 	je	213 <runtime.gentraceback+0x1854>
  43caaf:	48 8b 40 38 	movq	56(%rax), %rax
  43cab3:	48 89 84 24 c8 02 00 00 	movq	%rax, 712(%rsp)
  43cabb:	49 8b 77 30 	movq	48(%r15), %rsi
  43cabf:	48 8b b6 c0 00 00 00 	movq	192(%rsi), %rsi
  43cac6:	48 8b be 48 01 00 00 	movq	328(%rsi), %rdi
  43cacd:	48 8b b6 40 01 00 00 	movq	320(%rsi), %rsi
  43cad4:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  43cad9:	48 89 bc 24 a8 00 00 00 	movq	%rdi, 168(%rsp)
  43cae1:	48 89 b4 24 78 02 00 00 	movq	%rsi, 632(%rsp)
  43cae9:	4c 89 24 24 	movq	%r12, (%rsp)
  43caed:	4c 89 6c 24 08 	movq	%r13, 8(%rsp)
  43caf2:	48 8b 8c 24 b0 02 00 00 	movq	688(%rsp), %rcx
  43cafa:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  43caff:	48 8d 8c 24 08 01 00 00 	leaq	264(%rsp), %rcx
  43cb07:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  43cb0c:	e8 bf c1 ff ff 	callq	-15937 <runtime.funcspdelta>
  43cb11:	48 63 44 24 20 	movslq	32(%rsp), %rax
  43cb16:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  43cb1b:	48 8d 44 08 08 	leaq	8(%rax,%rcx), %rax
  43cb20:	48 89 84 24 d0 02 00 00 	movq	%rax, 720(%rsp)
  43cb28:	48 8b 84 24 98 02 00 00 	movq	664(%rsp), %rax
  43cb30:	48 8b 8c 24 88 00 00 00 	movq	136(%rsp), %rcx
  43cb38:	0f b6 54 24 3f 	movzbl	63(%rsp), %edx
  43cb3d:	0f b6 5c 24 40 	movzbl	64(%rsp), %ebx
  43cb42:	4c 8b 84 24 28 03 00 00 	movq	808(%rsp), %r8
  43cb4a:	4c 8b 4c 24 68 	movq	104(%rsp), %r9
  43cb4f:	4c 8b 94 24 90 02 00 00 	movq	656(%rsp), %r10
  43cb57:	4c 8b 9c 24 38 03 00 00 	movq	824(%rsp), %r11
  43cb5f:	4c 8b a4 24 80 02 00 00 	movq	640(%rsp), %r12
  43cb67:	4c 8b ac 24 88 02 00 00 	movq	648(%rsp), %r13
  43cb6f:	48 8b b4 24 a8 00 00 00 	movq	168(%rsp), %rsi
  43cb77:	48 8b bc 24 78 02 00 00 	movq	632(%rsp), %rdi
  43cb7f:	e9 67 eb ff ff 	jmp	-5273 <runtime.gentraceback+0x3bb>
  43cb84:	4c 89 f0 	movq	%r14, %rax
  43cb87:	49 89 fe 	movq	%rdi, %r14
  43cb8a:	48 89 f7 	movq	%rsi, %rdi
  43cb8d:	4c 89 f6 	movq	%r14, %rsi
  43cb90:	e9 3f ff ff ff 	jmp	-193 <runtime.gentraceback+0x17a4>
  43cb95:	4c 89 f0 	movq	%r14, %rax
  43cb98:	49 89 fe 	movq	%rdi, %r14
  43cb9b:	48 89 f7 	movq	%rsi, %rdi
  43cb9e:	4c 89 f6 	movq	%r14, %rsi
  43cba1:	e9 2e ff ff ff 	jmp	-210 <runtime.gentraceback+0x17a4>
  43cba6:	4c 89 f0 	movq	%r14, %rax
  43cba9:	49 89 fe 	movq	%rdi, %r14
  43cbac:	48 89 f7 	movq	%rsi, %rdi
  43cbaf:	4c 89 f6 	movq	%r14, %rsi
  43cbb2:	e9 1d ff ff ff 	jmp	-227 <runtime.gentraceback+0x17a4>
  43cbb7:	4c 89 f0 	movq	%r14, %rax
  43cbba:	49 89 fe 	movq	%rdi, %r14
  43cbbd:	48 89 f7 	movq	%rsi, %rdi
  43cbc0:	4c 89 f6 	movq	%r14, %rsi
  43cbc3:	e9 0c ff ff ff 	jmp	-244 <runtime.gentraceback+0x17a4>
  43cbc8:	48 8b 84 24 40 03 00 00 	movq	832(%rsp), %rax
  43cbd0:	44 0f b6 74 24 41 	movzbl	65(%rsp), %r14d
  43cbd6:	e9 1e ec ff ff 	jmp	-5090 <runtime.gentraceback+0x4c9>
  43cbdb:	48 8b 84 24 40 03 00 00 	movq	832(%rsp), %rax
  43cbe3:	44 0f b6 74 24 41 	movzbl	65(%rsp), %r14d
  43cbe9:	e9 0b ec ff ff 	jmp	-5109 <runtime.gentraceback+0x4c9>
  43cbee:	48 8b 84 24 40 03 00 00 	movq	832(%rsp), %rax
  43cbf6:	48 85 c0 	testq	%rax, %rax
  43cbf9:	0f 84 a9 00 00 00 	je	169 <runtime.gentraceback+0x1978>
  43cbff:	48 8b 84 24 b0 02 00 00 	movq	688(%rsp), %rax
  43cc07:	48 89 84 24 f8 00 00 00 	movq	%rax, 248(%rsp)
  43cc0f:	e8 ec 4e fe ff 	callq	-110868 <runtime.printlock>
  43cc14:	48 8d 05 b6 e5 02 00 	leaq	189878(%rip), %rax
  43cc1b:	48 89 04 24 	movq	%rax, (%rsp)
  43cc1f:	48 c7 44 24 08 14 00 00 00 	movq	$20, 8(%rsp)
  43cc28:	e8 13 58 fe ff 	callq	-108525 <runtime.printstring>
  43cc2d:	48 8b 84 24 f8 00 00 00 	movq	248(%rsp), %rax
  43cc35:	48 89 04 24 	movq	%rax, (%rsp)
  43cc39:	e8 b2 56 fe ff 	callq	-108878 <runtime.printhex>
  43cc3e:	e8 4d 51 fe ff 	callq	-110259 <runtime.printnl>
  43cc43:	e8 38 4f fe ff 	callq	-110792 <runtime.printunlock>
  43cc48:	48 8b 84 24 20 03 00 00 	movq	800(%rsp), %rax
  43cc50:	48 8b 48 08 	movq	8(%rax), %rcx
  43cc54:	48 8b 00 	movq	(%rax), %rax
  43cc57:	48 89 04 24 	movq	%rax, (%rsp)
  43cc5b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  43cc60:	48 8d 84 24 a0 02 00 00 	leaq	672(%rsp), %rax
  43cc68:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43cc6d:	48 c7 44 24 18 00 00 00 00 	movq	$0, 24(%rsp)
  43cc76:	e8 a5 15 00 00 	callq	5541 <runtime.tracebackHexdump>
  43cc7b:	48 8b 84 24 40 03 00 00 	movq	832(%rsp), %rax
  43cc83:	48 85 c0 	testq	%rax, %rax
  43cc86:	0f 85 81 02 00 00 	jne	641 <runtime.gentraceback+0x1bdd>
  43cc8c:	48 c7 84 24 58 03 00 00 00 00 00 00 	movq	$0, 856(%rsp)
  43cc98:	48 8b ac 24 f8 02 00 00 	movq	760(%rsp), %rbp
  43cca0:	48 81 c4 00 03 00 00 	addq	$768, %rsp
  43cca7:	c3 	retq
  43cca8:	0f b6 4c 24 41 	movzbl	65(%rsp), %ecx
  43ccad:	84 c9 	testb	%cl, %cl
  43ccaf:	0f 85 4a ff ff ff 	jne	-182 <runtime.gentraceback+0x18cf>
  43ccb5:	48 85 c0 	testq	%rax, %rax
  43ccb8:	eb cc 	jmp	-52 <runtime.gentraceback+0x1956>
  43ccba:	48 85 c9 	testq	%rcx, %rcx
  43ccbd:	40 0f 94 c7 	sete	%dil
  43ccc1:	e9 9b e7 ff ff 	jmp	-6245 <runtime.gentraceback+0x131>
  43ccc6:	4c 8b 4b 40 	movq	64(%rbx), %r9
  43ccca:	4c 8b 43 38 	movq	56(%rbx), %r8
  43ccce:	e9 2f e7 ff ff 	jmp	-6353 <runtime.gentraceback+0xd2>
  43ccd3:	4d 89 c1 	movq	%r8, %r9
  43ccd6:	4c 8b 84 24 10 03 00 00 	movq	784(%rsp), %r8
  43ccde:	e9 1f e7 ff ff 	jmp	-6369 <runtime.gentraceback+0xd2>
  43cce3:	4d 89 c1 	movq	%r8, %r9
  43cce6:	4c 8b 84 24 10 03 00 00 	movq	784(%rsp), %r8
  43ccee:	e9 0f e7 ff ff 	jmp	-6385 <runtime.gentraceback+0xd2>
  43ccf3:	c1 ee 02 	shrl	$2, %esi
  43ccf6:	e9 d2 e6 ff ff 	jmp	-6446 <runtime.gentraceback+0x9d>
  43ccfb:	48 8b 8c 24 40 03 00 00 	movq	832(%rsp), %rcx
  43cd03:	e9 7c e6 ff ff 	jmp	-6532 <runtime.gentraceback+0x54>
  43cd08:	48 89 84 24 f8 00 00 00 	movq	%rax, 248(%rsp)
  43cd10:	48 89 9c 24 f0 00 00 00 	movq	%rbx, 240(%rsp)
  43cd18:	4c 89 8c 24 88 00 00 00 	movq	%r9, 136(%rsp)
  43cd20:	48 8b 82 98 00 00 00 	movq	152(%rdx), %rax
  43cd27:	48 89 84 24 00 01 00 00 	movq	%rax, 256(%rsp)
  43cd2f:	e8 cc 4d fe ff 	callq	-111156 <runtime.printlock>
  43cd34:	48 8d 05 21 d6 02 00 	leaq	185889(%rip), %rax
  43cd3b:	48 89 04 24 	movq	%rax, (%rsp)
  43cd3f:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  43cd48:	e8 f3 56 fe ff 	callq	-108813 <runtime.printstring>
  43cd4d:	48 8b 84 24 00 01 00 00 	movq	256(%rsp), %rax
  43cd55:	48 89 04 24 	movq	%rax, (%rsp)
  43cd59:	e8 22 55 fe ff 	callq	-109278 <runtime.printint>
  43cd5e:	48 8d 05 d8 d6 02 00 	leaq	186072(%rip), %rax
  43cd65:	48 89 04 24 	movq	%rax, (%rsp)
  43cd69:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  43cd72:	e8 c9 56 fe ff 	callq	-108855 <runtime.printstring>
  43cd77:	48 8b 84 24 f8 00 00 00 	movq	248(%rsp), %rax
  43cd7f:	48 89 04 24 	movq	%rax, (%rsp)
  43cd83:	e8 68 55 fe ff 	callq	-109208 <runtime.printhex>
  43cd88:	48 8d 05 f7 cf 02 00 	leaq	184311(%rip), %rax
  43cd8f:	48 89 04 24 	movq	%rax, (%rsp)
  43cd93:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  43cd9c:	e8 9f 56 fe ff 	callq	-108897 <runtime.printstring>
  43cda1:	48 8b 84 24 f0 00 00 00 	movq	240(%rsp), %rax
  43cda9:	48 89 04 24 	movq	%rax, (%rsp)
  43cdad:	e8 3e 55 fe ff 	callq	-109250 <runtime.printhex>
  43cdb2:	e8 d9 4f fe ff 	callq	-110631 <runtime.printnl>
  43cdb7:	e8 c4 4d fe ff 	callq	-111164 <runtime.printunlock>
  43cdbc:	48 8b 84 24 20 03 00 00 	movq	800(%rsp), %rax
  43cdc4:	48 8b 08 	movq	(%rax), %rcx
  43cdc7:	48 89 8c 24 f8 00 00 00 	movq	%rcx, 248(%rsp)
  43cdcf:	48 8b 40 08 	movq	8(%rax), %rax
  43cdd3:	48 89 84 24 f0 00 00 00 	movq	%rax, 240(%rsp)
  43cddb:	e8 20 4d fe ff 	callq	-111328 <runtime.printlock>
  43cde0:	48 8d 05 20 d2 02 00 	leaq	184864(%rip), %rax
  43cde7:	48 89 04 24 	movq	%rax, (%rsp)
  43cdeb:	48 c7 44 24 08 08 00 00 00 	movq	$8, 8(%rsp)
  43cdf4:	e8 47 56 fe ff 	callq	-108985 <runtime.printstring>
  43cdf9:	48 8b 84 24 f8 00 00 00 	movq	248(%rsp), %rax
  43ce01:	48 89 04 24 	movq	%rax, (%rsp)
  43ce05:	e8 e6 54 fe ff 	callq	-109338 <runtime.printhex>
  43ce0a:	48 8d 05 44 ce 02 00 	leaq	183876(%rip), %rax
  43ce11:	48 89 04 24 	movq	%rax, (%rsp)
  43ce15:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  43ce1e:	e8 1d 56 fe ff 	callq	-109027 <runtime.printstring>
  43ce23:	48 8b 84 24 f0 00 00 00 	movq	240(%rsp), %rax
  43ce2b:	48 89 04 24 	movq	%rax, (%rsp)
  43ce2f:	e8 bc 54 fe ff 	callq	-109380 <runtime.printhex>
  43ce34:	48 8d 05 c3 ce 02 00 	leaq	184003(%rip), %rax
  43ce3b:	48 89 04 24 	movq	%rax, (%rsp)
  43ce3f:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  43ce48:	e8 f3 55 fe ff 	callq	-109069 <runtime.printstring>
  43ce4d:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  43ce55:	48 89 04 24 	movq	%rax, (%rsp)
  43ce59:	e8 22 54 fe ff 	callq	-109534 <runtime.printint>
  43ce5e:	48 8d 05 0d cf 02 00 	leaq	184077(%rip), %rax
  43ce65:	48 89 04 24 	movq	%rax, (%rsp)
  43ce69:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  43ce72:	e8 c9 55 fe ff 	callq	-109111 <runtime.printstring>
  43ce77:	48 8b 84 24 38 03 00 00 	movq	824(%rsp), %rax
  43ce7f:	48 89 04 24 	movq	%rax, (%rsp)
  43ce83:	e8 f8 53 fe ff 	callq	-109576 <runtime.printint>
  43ce88:	e8 03 4f fe ff 	callq	-110845 <runtime.printnl>
  43ce8d:	e8 ee 4c fe ff 	callq	-111378 <runtime.printunlock>
  43ce92:	48 8d 05 22 ff 02 00 	leaq	196386(%rip), %rax
  43ce99:	48 89 04 24 	movq	%rax, (%rsp)
  43ce9d:	48 c7 44 24 08 23 00 00 00 	movq	$35, 8(%rsp)
  43cea6:	e8 25 43 fe ff 	callq	-113883 <runtime.throw>
  43ceab:	0f 0b 	ud2
  43cead:	48 8d 05 22 f5 02 00 	leaq	193826(%rip), %rax
  43ceb4:	48 89 04 24 	movq	%rax, (%rsp)
  43ceb8:	48 c7 44 24 08 1d 00 00 00 	movq	$29, 8(%rsp)
  43cec1:	e8 0a 43 fe ff 	callq	-113910 <runtime.throw>
  43cec6:	0f 0b 	ud2
  43cec8:	e8 73 2b fe ff 	callq	-119949 <runtime.panicindex>
  43cecd:	0f 0b 	ud2
  43cecf:	e8 6c 2b fe ff 	callq	-119956 <runtime.panicindex>
  43ced4:	0f 0b 	ud2
  43ced6:	e8 65 2b fe ff 	callq	-119963 <runtime.panicindex>
  43cedb:	0f 0b 	ud2
  43cedd:	e8 5e 2b fe ff 	callq	-119970 <runtime.panicindex>
  43cee2:	0f 0b 	ud2
  43cee4:	e8 57 2b fe ff 	callq	-119977 <runtime.panicindex>
  43cee9:	0f 0b 	ud2
  43ceeb:	e8 50 2b fe ff 	callq	-119984 <runtime.panicindex>
  43cef0:	0f 0b 	ud2
  43cef2:	48 8d 05 30 de 02 00 	leaq	187952(%rip), %rax
  43cef9:	48 89 04 24 	movq	%rax, (%rsp)
  43cefd:	48 c7 44 24 08 11 00 00 00 	movq	$17, 8(%rsp)
  43cf06:	e8 c5 42 fe ff 	callq	-113979 <runtime.throw>
  43cf0b:	0f 0b 	ud2
  43cf0d:	48 8d 05 7a d4 02 00 	leaq	185466(%rip), %rax
  43cf14:	48 89 04 24 	movq	%rax, (%rsp)
  43cf18:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  43cf21:	e8 aa 42 fe ff 	callq	-114006 <runtime.throw>
  43cf26:	0f 0b 	ud2
  43cf28:	48 8d 05 a8 0d 03 00 	leaq	200104(%rip), %rax
  43cf2f:	48 89 04 24 	movq	%rax, (%rsp)
  43cf33:	48 c7 44 24 08 39 00 00 00 	movq	$57, 8(%rsp)
  43cf3c:	e8 8f 42 fe ff 	callq	-114033 <runtime.throw>
  43cf41:	0f 0b 	ud2
  43cf43:	48 8d 05 e7 0c 03 00 	leaq	199911(%rip), %rax
  43cf4a:	48 89 04 24 	movq	%rax, (%rsp)
  43cf4e:	48 c7 44 24 08 37 00 00 00 	movq	$55, 8(%rsp)
  43cf57:	e8 74 42 fe ff 	callq	-114060 <runtime.throw>
  43cf5c:	0f 0b 	ud2
  43cf5e:	e8 0d 76 00 00 	callq	30221 <runtime.morestack_noctxt>
  43cf63:	e9 c8 e3 ff ff 	jmp	-7224 <runtime.gentraceback>
  43cf68:	cc 	int3
  43cf69:	cc 	int3
  43cf6a:	cc 	int3
  43cf6b:	cc 	int3
  43cf6c:	cc 	int3
  43cf6d:	cc 	int3
  43cf6e:	cc 	int3
  43cf6f:	cc 	int3

runtime.getArgInfo:
  43cf70:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43cf79:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43cf7d:	0f 86 9c 01 00 00 	jbe	412 <runtime.getArgInfo+0x1af>
  43cf83:	48 83 ec 40 	subq	$64, %rsp
  43cf87:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  43cf8c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  43cf91:	48 8b 44 24 50 	movq	80(%rsp), %rax
  43cf96:	8b 48 0c 	movl	12(%rax), %ecx
  43cf99:	48 63 d1 	movslq	%ecx, %rdx
  43cf9c:	0f b6 5c 24 60 	movzbl	96(%rsp), %ebx
  43cfa1:	84 db 	testb	%bl, %bl
  43cfa3:	0f 84 ed 00 00 00 	je	237 <runtime.getArgInfo+0x126>
  43cfa9:	81 f9 00 00 00 80 	cmpl	$2147483648, %ecx
  43cfaf:	74 16 	je	22 <runtime.getArgInfo+0x57>
  43cfb1:	31 c0 	xorl	%eax, %eax
  43cfb3:	48 89 54 24 70 	movq	%rdx, 112(%rsp)
  43cfb8:	48 89 44 24 78 	movq	%rax, 120(%rsp)
  43cfbd:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  43cfc2:	48 83 c4 40 	addq	$64, %rsp
  43cfc6:	c3 	retq
  43cfc7:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  43cfcc:	48 89 04 24 	movq	%rax, (%rsp)
  43cfd0:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  43cfd5:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  43cfda:	e8 21 b9 ff ff 	callq	-18143 <runtime.funcname>
  43cfdf:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43cfe4:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  43cfe9:	48 83 f8 14 	cmpq	$20, %rax
  43cfed:	74 6b 	je	107 <runtime.getArgInfo+0xea>
  43cfef:	48 83 f8 17 	cmpq	$23, %rax
  43cff3:	74 0c 	je	12 <runtime.getArgInfo+0x91>
  43cff5:	31 c0 	xorl	%eax, %eax
  43cff7:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  43cffc:	48 89 ca 	movq	%rcx, %rdx
  43cfff:	eb b2 	jmp	-78 <runtime.getArgInfo+0x43>
  43d001:	48 89 0c 24 	movq	%rcx, (%rsp)
  43d005:	48 8d 0d 26 e7 02 00 	leaq	190246(%rip), %rcx
  43d00c:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  43d011:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43d016:	e8 25 93 00 00 	callq	37669 <runtime.memequal>
  43d01b:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  43d020:	84 c0 	testb	%al, %al
  43d022:	74 d1 	je	-47 <runtime.getArgInfo+0x85>
  43d024:	48 8b 44 24 68 	movq	104(%rsp), %rax
  43d029:	48 85 c0 	testq	%rax, %rax
  43d02c:	74 1e 	je	30 <runtime.getArgInfo+0xdc>
  43d02e:	48 8b 08 	movq	(%rax), %rcx
  43d031:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  43d036:	48 8b 1a 	movq	(%rdx), %rbx
  43d039:	48 39 d9 	cmpq	%rbx, %rcx
  43d03c:	75 5f 	jne	95 <runtime.getArgInfo+0x12d>
  43d03e:	48 8b 40 08 	movq	8(%rax), %rax
  43d042:	8b 10 	movl	(%rax), %edx
  43d044:	c1 e2 03 	shll	$3, %edx
  43d047:	48 63 ca 	movslq	%edx, %rcx
  43d04a:	eb b0 	jmp	-80 <runtime.getArgInfo+0x8c>
  43d04c:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  43d051:	48 8b 49 28 	movq	40(%rcx), %rcx
  43d055:	48 8b 01 	movq	(%rcx), %rax
  43d058:	eb d4 	jmp	-44 <runtime.getArgInfo+0xbe>
  43d05a:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  43d05f:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  43d064:	48 89 0c 24 	movq	%rcx, (%rsp)
  43d068:	48 8d 15 3a e1 02 00 	leaq	188730(%rip), %rdx
  43d06f:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  43d074:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43d079:	e8 c2 92 00 00 	callq	37570 <runtime.memequal>
  43d07e:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  43d083:	84 c0 	testb	%al, %al
  43d085:	75 9d 	jne	-99 <runtime.getArgInfo+0xb4>
  43d087:	48 8b 44 24 20 	movq	32(%rsp), %rax
  43d08c:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  43d091:	e9 59 ff ff ff 	jmp	-167 <runtime.getArgInfo+0x7f>
  43d096:	31 c0 	xorl	%eax, %eax
  43d098:	e9 16 ff ff ff 	jmp	-234 <runtime.getArgInfo+0x43>
  43d09d:	48 89 14 24 	movq	%rdx, (%rsp)
  43d0a1:	48 8b 44 24 58 	movq	88(%rsp), %rax
  43d0a6:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43d0ab:	e8 50 b8 ff ff 	callq	-18352 <runtime.funcname>
  43d0b0:	48 8b 44 24 10 	movq	16(%rsp), %rax
  43d0b5:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  43d0ba:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  43d0bf:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  43d0c4:	e8 37 4a fe ff 	callq	-112073 <runtime.printlock>
  43d0c9:	48 8d 05 37 e2 02 00 	leaq	188983(%rip), %rax
  43d0d0:	48 89 04 24 	movq	%rax, (%rsp)
  43d0d4:	48 c7 44 24 08 15 00 00 00 	movq	$21, 8(%rsp)
  43d0dd:	e8 5e 53 fe ff 	callq	-109730 <runtime.printstring>
  43d0e2:	48 8b 44 24 30 	movq	48(%rsp), %rax
  43d0e7:	48 89 04 24 	movq	%rax, (%rsp)
  43d0eb:	48 8b 44 24 20 	movq	32(%rsp), %rax
  43d0f0:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43d0f5:	e8 46 53 fe ff 	callq	-109754 <runtime.printstring>
  43d0fa:	e8 91 4c fe ff 	callq	-111471 <runtime.printnl>
  43d0ff:	e8 7c 4a fe ff 	callq	-112004 <runtime.printunlock>
  43d104:	48 8d 05 37 da 02 00 	leaq	186935(%rip), %rax
  43d10b:	48 89 04 24 	movq	%rax, (%rsp)
  43d10f:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  43d118:	e8 b3 40 fe ff 	callq	-114509 <runtime.throw>
  43d11d:	0f 0b 	ud2
  43d11f:	e8 4c 74 00 00 	callq	29772 <runtime.morestack_noctxt>
  43d124:	e9 47 fe ff ff 	jmp	-441 <runtime.getArgInfo>
  43d129:	cc 	int3
  43d12a:	cc 	int3
  43d12b:	cc 	int3
  43d12c:	cc 	int3
  43d12d:	cc 	int3
  43d12e:	cc 	int3
  43d12f:	cc 	int3

runtime.tracebackCgoContext:
  43d130:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43d139:	48 8d 84 24 08 fe ff ff 	leaq	-504(%rsp), %rax
  43d141:	48 3b 41 10 	cmpq	16(%rcx), %rax
  43d145:	0f 86 29 02 00 00 	jbe	553 <runtime.tracebackCgoContext+0x244>
  43d14b:	48 81 ec 78 02 00 00 	subq	$632, %rsp
  43d152:	48 89 ac 24 70 02 00 00 	movq	%rbp, 624(%rsp)
  43d15a:	48 8d ac 24 70 02 00 00 	leaq	624(%rsp), %rbp
  43d162:	48 8d 7c 24 38 	leaq	56(%rsp), %rdi
  43d167:	0f 57 c0 	xorps	%xmm0, %xmm0
  43d16a:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  43d16f:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  43d174:	e8 0b 99 00 00 	callq	39179 <runtime.duffzero+0xe4>
  43d179:	48 8b 6d 00 	movq	(%rbp), %rbp
  43d17d:	48 8b 84 24 90 02 00 00 	movq	656(%rsp), %rax
  43d185:	48 89 04 24 	movq	%rax, (%rsp)
  43d189:	48 8d 44 24 38 	leaq	56(%rsp), %rax
  43d18e:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43d193:	48 c7 44 24 10 20 00 00 00 	movq	$32, 16(%rsp)
  43d19c:	48 c7 44 24 18 20 00 00 00 	movq	$32, 24(%rsp)
  43d1a5:	e8 e6 16 00 00 	callq	5862 <runtime.cgoContextPCs>
  43d1aa:	48 c7 84 24 38 02 00 00 00 00 00 00 	movq	$0, 568(%rsp)
  43d1b6:	0f 57 c9 	xorps	%xmm1, %xmm1
  43d1b9:	0f 11 8c 24 40 02 00 00 	movups	%xmm1, 576(%rsp)
  43d1c1:	0f 11 8c 24 50 02 00 00 	movups	%xmm1, 592(%rsp)
  43d1c9:	0f 11 8c 24 60 02 00 00 	movups	%xmm1, 608(%rsp)
  43d1d1:	48 8d bc 24 38 01 00 00 	leaq	312(%rsp), %rdi
  43d1d9:	48 8d 74 24 38 	leaq	56(%rsp), %rsi
  43d1de:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  43d1e3:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  43d1e8:	e8 93 9b 00 00 	callq	39827 <runtime.duffcopy+0x2a0>
  43d1ed:	48 8b 6d 00 	movq	(%rbp), %rbp
  43d1f1:	31 c0 	xorl	%eax, %eax
  43d1f3:	31 c9 	xorl	%ecx, %ecx
  43d1f5:	48 8b 94 24 98 02 00 00 	movq	664(%rsp), %rdx
  43d1fd:	eb 06 	jmp	6 <runtime.tracebackCgoContext+0xd5>
  43d1ff:	48 ff c0 	incq	%rax
  43d202:	48 ff c2 	incq	%rdx
  43d205:	48 89 94 24 98 02 00 00 	movq	%rdx, 664(%rsp)
  43d20d:	48 83 f8 20 	cmpq	$32, %rax
  43d211:	0f 8d 13 01 00 00 	jge	275 <runtime.tracebackCgoContext+0x1fa>
  43d217:	48 8b 9c c4 38 01 00 00 	movq	312(%rsp,%rax,8), %rbx
  43d21f:	48 85 db 	testq	%rbx, %rbx
  43d222:	0f 84 02 01 00 00 	je	258 <runtime.tracebackCgoContext+0x1fa>
  43d228:	48 8b b4 24 a0 02 00 00 	movq	672(%rsp), %rsi
  43d230:	48 39 f2 	cmpq	%rsi, %rdx
  43d233:	0f 8d f1 00 00 00 	jge	241 <runtime.tracebackCgoContext+0x1fa>
  43d239:	48 8b bc 24 80 02 00 00 	movq	640(%rsp), %rdi
  43d241:	48 85 ff 	testq	%rdi, %rdi
  43d244:	74 11 	je	17 <runtime.tracebackCgoContext+0x127>
  43d246:	48 81 fa 00 00 10 00 	cmpq	$1048576, %rdx
  43d24d:	0f 83 1a 01 00 00 	jae	282 <runtime.tracebackCgoContext+0x23d>
  43d253:	48 89 1c d7 	movq	%rbx, (%rdi,%rdx,8)
  43d257:	44 0f b6 84 24 88 02 00 00 	movzbl	648(%rsp), %r8d
  43d260:	45 84 c0 	testb	%r8b, %r8b
  43d263:	74 9a 	je	-102 <runtime.tracebackCgoContext+0xcf>
  43d265:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  43d26a:	88 4c 24 26 	movb	%cl, 38(%rsp)
  43d26e:	4c 8b 0d c3 a3 06 00 	movq	435139(%rip), %r9
  43d275:	4d 85 c9 	testq	%r9, %r9
  43d278:	41 0f 95 c1 	setne	%r9b
  43d27c:	44 88 4c 24 27 	movb	%r9b, 39(%rsp)
  43d281:	74 62 	je	98 <runtime.tracebackCgoContext+0x1b5>
  43d283:	48 89 1c 24 	movq	%rbx, (%rsp)
  43d287:	48 29 d6 	subq	%rdx, %rsi
  43d28a:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  43d28f:	48 8d 8c 24 38 02 00 00 	leaq	568(%rsp), %rcx
  43d297:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  43d29c:	e8 6f 13 00 00 	callq	4975 <runtime.printOneCgoTraceback>
  43d2a1:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43d2a6:	48 8b 8c 24 98 02 00 00 	movq	664(%rsp), %rcx
  43d2ae:	48 8d 44 08 ff 	leaq	-1(%rax,%rcx), %rax
  43d2b3:	0f b6 4c 24 27 	movzbl	39(%rsp), %ecx
  43d2b8:	0f b6 5c 24 26 	movzbl	38(%rsp), %ebx
  43d2bd:	09 d9 	orl	%ebx, %ecx
  43d2bf:	48 8b b4 24 a0 02 00 00 	movq	672(%rsp), %rsi
  43d2c7:	48 8b bc 24 80 02 00 00 	movq	640(%rsp), %rdi
  43d2cf:	44 0f b6 84 24 88 02 00 00 	movzbl	648(%rsp), %r8d
  43d2d8:	48 89 c2 	movq	%rax, %rdx
  43d2db:	48 8b 44 24 30 	movq	48(%rsp), %rax
  43d2e0:	e9 1a ff ff ff 	jmp	-230 <runtime.tracebackCgoContext+0xcf>
  43d2e5:	48 89 5c 24 28 	movq	%rbx, 40(%rsp)
  43d2ea:	e8 11 48 fe ff 	callq	-112623 <runtime.printlock>
  43d2ef:	48 8d 05 80 e1 02 00 	leaq	188800(%rip), %rax
  43d2f6:	48 89 04 24 	movq	%rax, (%rsp)
  43d2fa:	48 c7 44 24 08 16 00 00 00 	movq	$22, 8(%rsp)
  43d303:	e8 38 51 fe ff 	callq	-110280 <runtime.printstring>
  43d308:	48 8b 44 24 28 	movq	40(%rsp), %rax
  43d30d:	48 89 04 24 	movq	%rax, (%rsp)
  43d311:	e8 da 4f fe ff 	callq	-110630 <runtime.printhex>
  43d316:	e8 75 4a fe ff 	callq	-112011 <runtime.printnl>
  43d31b:	e8 60 48 fe ff 	callq	-112544 <runtime.printunlock>
  43d320:	48 8b 84 24 98 02 00 00 	movq	664(%rsp), %rax
  43d328:	eb 89 	jmp	-119 <runtime.tracebackCgoContext+0x183>
  43d32a:	84 c9 	testb	%cl, %cl
  43d32c:	75 18 	jne	24 <runtime.tracebackCgoContext+0x216>
  43d32e:	48 89 94 24 a8 02 00 00 	movq	%rdx, 680(%rsp)
  43d336:	48 8b ac 24 70 02 00 00 	movq	624(%rsp), %rbp
  43d33e:	48 81 c4 78 02 00 00 	addq	$632, %rsp
  43d345:	c3 	retq
  43d346:	48 c7 84 24 38 02 00 00 00 00 00 00 	movq	$0, 568(%rsp)
  43d352:	48 8d 84 24 38 02 00 00 	leaq	568(%rsp), %rax
  43d35a:	48 89 04 24 	movq	%rax, (%rsp)
  43d35e:	e8 ad 14 00 00 	callq	5293 <runtime.callCgoSymbolizer>
  43d363:	48 8b 94 24 98 02 00 00 	movq	664(%rsp), %rdx
  43d36b:	eb c1 	jmp	-63 <runtime.tracebackCgoContext+0x1fe>
  43d36d:	e8 ce 26 fe ff 	callq	-121138 <runtime.panicindex>
  43d372:	0f 0b 	ud2
  43d374:	e8 f7 71 00 00 	callq	29175 <runtime.morestack_noctxt>
  43d379:	e9 b2 fd ff ff 	jmp	-590 <runtime.tracebackCgoContext>
  43d37e:	cc 	int3
  43d37f:	cc 	int3

runtime.printcreatedby:
  43d380:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43d389:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43d38d:	0f 86 20 02 00 00 	jbe	544 <runtime.printcreatedby+0x233>
  43d393:	48 81 ec 80 00 00 00 	subq	$128, %rsp
  43d39a:	48 89 6c 24 78 	movq	%rbp, 120(%rsp)
  43d39f:	48 8d 6c 24 78 	leaq	120(%rsp), %rbp
  43d3a4:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  43d3ac:	48 8b 88 20 01 00 00 	movq	288(%rax), %rcx
  43d3b3:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  43d3b8:	48 89 0c 24 	movq	%rcx, (%rsp)
  43d3bc:	e8 0f ae ff ff 	callq	-20977 <runtime.findfunc>
  43d3c1:	48 8b 44 24 10 	movq	16(%rsp), %rax
  43d3c6:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  43d3cb:	48 85 c9 	testq	%rcx, %rcx
  43d3ce:	75 0d 	jne	13 <runtime.printcreatedby+0x5d>
  43d3d0:	48 8b 6c 24 78 	movq	120(%rsp), %rbp
  43d3d5:	48 81 c4 80 00 00 00 	addq	$128, %rsp
  43d3dc:	c3 	retq
  43d3dd:	48 89 44 24 70 	movq	%rax, 112(%rsp)
  43d3e2:	48 89 4c 24 68 	movq	%rcx, 104(%rsp)
  43d3e7:	48 89 0c 24 	movq	%rcx, (%rsp)
  43d3eb:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43d3f0:	48 8b 94 24 88 00 00 00 	movq	136(%rsp), %rdx
  43d3f8:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  43d3fd:	66 c7 44 24 18 00 00 	movw	$0, 24(%rsp)
  43d404:	e8 87 06 00 00 	callq	1671 <runtime.showframe>
  43d409:	0f b6 44 24 20 	movzbl	32(%rsp), %eax
  43d40e:	84 c0 	testb	%al, %al
  43d410:	74 be 	je	-66 <runtime.printcreatedby+0x50>
  43d412:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  43d41a:	48 8b 80 98 00 00 00 	movq	152(%rax), %rax
  43d421:	48 83 f8 01 	cmpq	$1, %rax
  43d425:	74 a9 	je	-87 <runtime.printcreatedby+0x50>
  43d427:	48 8b 44 24 68 	movq	104(%rsp), %rax
  43d42c:	48 89 04 24 	movq	%rax, (%rsp)
  43d430:	48 8b 4c 24 70 	movq	112(%rsp), %rcx
  43d435:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  43d43a:	e8 c1 b4 ff ff 	callq	-19263 <runtime.funcname>
  43d43f:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43d444:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  43d449:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  43d44e:	48 89 4c 24 60 	movq	%rcx, 96(%rsp)
  43d453:	e8 a8 46 fe ff 	callq	-112984 <runtime.printlock>
  43d458:	48 8d 05 20 d0 02 00 	leaq	184352(%rip), %rax
  43d45f:	48 89 04 24 	movq	%rax, (%rsp)
  43d463:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  43d46c:	e8 cf 4f fe ff 	callq	-110641 <runtime.printstring>
  43d471:	48 8b 44 24 60 	movq	96(%rsp), %rax
  43d476:	48 89 04 24 	movq	%rax, (%rsp)
  43d47a:	48 8b 44 24 50 	movq	80(%rsp), %rax
  43d47f:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43d484:	e8 b7 4f fe ff 	callq	-110665 <runtime.printstring>
  43d489:	e8 02 49 fe ff 	callq	-112382 <runtime.printnl>
  43d48e:	e8 ed 46 fe ff 	callq	-112915 <runtime.printunlock>
  43d493:	48 8b 44 24 68 	movq	104(%rsp), %rax
  43d498:	48 8b 08 	movq	(%rax), %rcx
  43d49b:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  43d4a0:	48 39 ca 	cmpq	%rcx, %rdx
  43d4a3:	0f 86 02 01 00 00 	jbe	258 <runtime.printcreatedby+0x22b>
  43d4a9:	48 8d 4a ff 	leaq	-1(%rdx), %rcx
  43d4ad:	48 89 04 24 	movq	%rax, (%rsp)
  43d4b1:	48 8b 54 24 70 	movq	112(%rsp), %rdx
  43d4b6:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  43d4bb:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  43d4c0:	e8 8b b7 ff ff 	callq	-18549 <runtime.funcline>
  43d4c5:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43d4ca:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  43d4cf:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  43d4d4:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  43d4d9:	48 63 54 24 28 	movslq	40(%rsp), %rdx
  43d4de:	48 89 54 24 48 	movq	%rdx, 72(%rsp)
  43d4e3:	e8 18 46 fe ff 	callq	-113128 <runtime.printlock>
  43d4e8:	48 8d 05 6f c7 02 00 	leaq	182127(%rip), %rax
  43d4ef:	48 89 04 24 	movq	%rax, (%rsp)
  43d4f3:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  43d4fc:	e8 3f 4f fe ff 	callq	-110785 <runtime.printstring>
  43d501:	48 8b 44 24 58 	movq	88(%rsp), %rax
  43d506:	48 89 04 24 	movq	%rax, (%rsp)
  43d50a:	48 8b 44 24 38 	movq	56(%rsp), %rax
  43d50f:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43d514:	e8 27 4f fe ff 	callq	-110809 <runtime.printstring>
  43d519:	48 8d 05 38 c7 02 00 	leaq	182072(%rip), %rax
  43d520:	48 89 04 24 	movq	%rax, (%rsp)
  43d524:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  43d52d:	e8 0e 4f fe ff 	callq	-110834 <runtime.printstring>
  43d532:	48 8b 44 24 48 	movq	72(%rsp), %rax
  43d537:	48 89 04 24 	movq	%rax, (%rsp)
  43d53b:	e8 40 4d fe ff 	callq	-111296 <runtime.printint>
  43d540:	e8 3b 46 fe ff 	callq	-113093 <runtime.printunlock>
  43d545:	48 8b 44 24 68 	movq	104(%rsp), %rax
  43d54a:	48 8b 00 	movq	(%rax), %rax
  43d54d:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  43d552:	48 39 c1 	cmpq	%rax, %rcx
  43d555:	77 14 	ja	20 <runtime.printcreatedby+0x1eb>
  43d557:	e8 a4 45 fe ff 	callq	-113244 <runtime.printlock>
  43d55c:	e8 2f 48 fe ff 	callq	-112593 <runtime.printnl>
  43d561:	e8 1a 46 fe ff 	callq	-113126 <runtime.printunlock>
  43d566:	e9 65 fe ff ff 	jmp	-411 <runtime.printcreatedby+0x50>
  43d56b:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  43d570:	e8 8b 45 fe ff 	callq	-113269 <runtime.printlock>
  43d575:	48 8d 05 e4 c6 02 00 	leaq	181988(%rip), %rax
  43d57c:	48 89 04 24 	movq	%rax, (%rsp)
  43d580:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  43d589:	e8 b2 4e fe ff 	callq	-110926 <runtime.printstring>
  43d58e:	48 8b 44 24 30 	movq	48(%rsp), %rax
  43d593:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  43d598:	48 29 c8 	subq	%rcx, %rax
  43d59b:	48 89 04 24 	movq	%rax, (%rsp)
  43d59f:	e8 4c 4d fe ff 	callq	-111284 <runtime.printhex>
  43d5a4:	e8 d7 45 fe ff 	callq	-113193 <runtime.printunlock>
  43d5a9:	eb ac 	jmp	-84 <runtime.printcreatedby+0x1d7>
  43d5ab:	48 89 d1 	movq	%rdx, %rcx
  43d5ae:	e9 fa fe ff ff 	jmp	-262 <runtime.printcreatedby+0x12d>
  43d5b3:	e8 b8 6f 00 00 	callq	28600 <runtime.morestack_noctxt>
  43d5b8:	e9 c3 fd ff ff 	jmp	-573 <runtime.printcreatedby>
  43d5bd:	cc 	int3
  43d5be:	cc 	int3
  43d5bf:	cc 	int3

runtime.traceback:
  43d5c0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43d5c9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43d5cd:	76 4d 	jbe	77 <runtime.traceback+0x5c>
  43d5cf:	48 83 ec 30 	subq	$48, %rsp
  43d5d3:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  43d5d8:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  43d5dd:	48 8b 44 24 38 	movq	56(%rsp), %rax
  43d5e2:	48 89 04 24 	movq	%rax, (%rsp)
  43d5e6:	48 8b 44 24 40 	movq	64(%rsp), %rax
  43d5eb:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43d5f0:	48 8b 44 24 48 	movq	72(%rsp), %rax
  43d5f5:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43d5fa:	48 8b 44 24 50 	movq	80(%rsp), %rax
  43d5ff:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  43d604:	48 c7 44 24 20 00 00 00 00 	movq	$0, 32(%rsp)
  43d60d:	e8 8e 00 00 00 	callq	142 <runtime.traceback1>
  43d612:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  43d617:	48 83 c4 30 	addq	$48, %rsp
  43d61b:	c3 	retq
  43d61c:	e8 4f 6f 00 00 	callq	28495 <runtime.morestack_noctxt>
  43d621:	eb 9d 	jmp	-99 <runtime.traceback>
  43d623:	cc 	int3
  43d624:	cc 	int3
  43d625:	cc 	int3
  43d626:	cc 	int3
  43d627:	cc 	int3
  43d628:	cc 	int3
  43d629:	cc 	int3
  43d62a:	cc 	int3
  43d62b:	cc 	int3
  43d62c:	cc 	int3
  43d62d:	cc 	int3
  43d62e:	cc 	int3
  43d62f:	cc 	int3

runtime.tracebacktrap:
  43d630:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43d639:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43d63d:	76 4d 	jbe	77 <runtime.tracebacktrap+0x5c>
  43d63f:	48 83 ec 30 	subq	$48, %rsp
  43d643:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  43d648:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  43d64d:	48 8b 44 24 38 	movq	56(%rsp), %rax
  43d652:	48 89 04 24 	movq	%rax, (%rsp)
  43d656:	48 8b 44 24 40 	movq	64(%rsp), %rax
  43d65b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43d660:	48 8b 44 24 48 	movq	72(%rsp), %rax
  43d665:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43d66a:	48 8b 44 24 50 	movq	80(%rsp), %rax
  43d66f:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  43d674:	48 c7 44 24 20 02 00 00 00 	movq	$2, 32(%rsp)
  43d67d:	e8 1e 00 00 00 	callq	30 <runtime.traceback1>
  43d682:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  43d687:	48 83 c4 30 	addq	$48, %rsp
  43d68b:	c3 	retq
  43d68c:	e8 df 6e 00 00 	callq	28383 <runtime.morestack_noctxt>
  43d691:	eb 9d 	jmp	-99 <runtime.tracebacktrap>
  43d693:	cc 	int3
  43d694:	cc 	int3
  43d695:	cc 	int3
  43d696:	cc 	int3
  43d697:	cc 	int3
  43d698:	cc 	int3
  43d699:	cc 	int3
  43d69a:	cc 	int3
  43d69b:	cc 	int3
  43d69c:	cc 	int3
  43d69d:	cc 	int3
  43d69e:	cc 	int3
  43d69f:	cc 	int3

runtime.traceback1:
  43d6a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43d6a9:	48 8d 84 24 20 ff ff ff 	leaq	-224(%rsp), %rax
  43d6b1:	48 3b 41 10 	cmpq	16(%rcx), %rax
  43d6b5:	0f 86 36 02 00 00 	jbe	566 <runtime.traceback1+0x251>
  43d6bb:	48 81 ec 60 01 00 00 	subq	$352, %rsp
  43d6c2:	48 89 ac 24 58 01 00 00 	movq	%rbp, 344(%rsp)
  43d6ca:	48 8d ac 24 58 01 00 00 	leaq	344(%rsp), %rbp
  43d6d2:	0f b6 05 d3 61 08 00 	movzbl	549331(%rip), %eax
  43d6d9:	84 c0 	testb	%al, %al
  43d6db:	0f 84 03 02 00 00 	je	515 <runtime.traceback1+0x244>
  43d6e1:	48 8b 84 24 80 01 00 00 	movq	384(%rsp), %rax
  43d6e9:	48 8b 48 30 	movq	48(%rax), %rcx
  43d6ed:	48 85 c9 	testq	%rcx, %rcx
  43d6f0:	74 2b 	je	43 <runtime.traceback1+0x7d>
  43d6f2:	8b 91 38 01 00 00 	movl	312(%rcx), %edx
  43d6f8:	85 d2 	testl	%edx, %edx
  43d6fa:	7e 21 	jle	33 <runtime.traceback1+0x7d>
  43d6fc:	48 8b 50 70 	movq	112(%rax), %rdx
  43d700:	48 85 d2 	testq	%rdx, %rdx
  43d703:	74 18 	je	24 <runtime.traceback1+0x7d>
  43d705:	48 8b 91 40 01 00 00 	movq	320(%rcx), %rdx
  43d70c:	48 85 d2 	testq	%rdx, %rdx
  43d70f:	74 0c 	je	12 <runtime.traceback1+0x7d>
  43d711:	48 8b 12 	movq	(%rdx), %rdx
  43d714:	48 85 d2 	testq	%rdx, %rdx
  43d717:	0f 85 5e 01 00 00 	jne	350 <runtime.traceback1+0x1db>
  43d71d:	8b 88 90 00 00 00 	movl	144(%rax), %ecx
  43d723:	81 e1 ff ef ff ff 	andl	$4294963199, %ecx
  43d729:	83 f9 03 	cmpl	$3, %ecx
  43d72c:	0f 85 2c 01 00 00 	jne	300 <runtime.traceback1+0x1be>
  43d732:	48 8b 48 78 	movq	120(%rax), %rcx
  43d736:	48 8b 50 70 	movq	112(%rax), %rdx
  43d73a:	48 8b 9c 24 88 01 00 00 	movq	392(%rsp), %rbx
  43d742:	48 83 e3 fd 	andq	$-3, %rbx
  43d746:	48 89 8c 24 68 01 00 00 	movq	%rcx, 360(%rsp)
  43d74e:	48 89 94 24 70 01 00 00 	movq	%rdx, 368(%rsp)
  43d756:	48 89 9c 24 88 01 00 00 	movq	%rbx, 392(%rsp)
  43d75e:	48 89 0c 24 	movq	%rcx, (%rsp)
  43d762:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  43d767:	48 8b b4 24 78 01 00 00 	movq	376(%rsp), %rsi
  43d76f:	48 89 74 24 10 	movq	%rsi, 16(%rsp)
  43d774:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  43d779:	0f 57 c0 	xorps	%xmm0, %xmm0
  43d77c:	0f 11 44 24 20 	movups	%xmm0, 32(%rsp)
  43d781:	48 c7 44 24 30 64 00 00 00 	movq	$100, 48(%rsp)
  43d78a:	0f 11 44 24 38 	movups	%xmm0, 56(%rsp)
  43d78f:	48 89 5c 24 48 	movq	%rbx, 72(%rsp)
  43d794:	e8 97 db ff ff 	callq	-9321 <runtime.gentraceback>
  43d799:	48 8b 44 24 50 	movq	80(%rsp), %rax
  43d79e:	48 85 c0 	testq	%rax, %rax
  43d7a1:	75 0e 	jne	14 <runtime.traceback1+0x111>
  43d7a3:	48 8b 8c 24 88 01 00 00 	movq	392(%rsp), %rcx
  43d7ab:	0f ba e1 00 	btl	$0, %ecx
  43d7af:	73 4c 	jae	76 <runtime.traceback1+0x15d>
  43d7b1:	48 83 f8 64 	cmpq	$100, %rax
  43d7b5:	74 21 	je	33 <runtime.traceback1+0x138>
  43d7b7:	48 8b 84 24 80 01 00 00 	movq	384(%rsp), %rax
  43d7bf:	48 89 04 24 	movq	%rax, (%rsp)
  43d7c3:	e8 b8 fb ff ff 	callq	-1096 <runtime.printcreatedby>
  43d7c8:	48 8b ac 24 58 01 00 00 	movq	344(%rsp), %rbp
  43d7d0:	48 81 c4 60 01 00 00 	addq	$352, %rsp
  43d7d7:	c3 	retq
  43d7d8:	e8 23 43 fe ff 	callq	-113885 <runtime.printlock>
  43d7dd:	48 8d 05 0d ee 02 00 	leaq	192013(%rip), %rax
  43d7e4:	48 89 04 24 	movq	%rax, (%rsp)
  43d7e8:	48 c7 44 24 08 1f 00 00 00 	movq	$31, 8(%rsp)
  43d7f1:	e8 4a 4c fe ff 	callq	-111542 <runtime.printstring>
  43d7f6:	e8 85 43 fe ff 	callq	-113787 <runtime.printunlock>
  43d7fb:	eb ba 	jmp	-70 <runtime.traceback1+0x117>
  43d7fd:	48 8b 84 24 68 01 00 00 	movq	360(%rsp), %rax
  43d805:	48 89 04 24 	movq	%rax, (%rsp)
  43d809:	48 8b 84 24 70 01 00 00 	movq	368(%rsp), %rax
  43d811:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43d816:	48 8b 84 24 78 01 00 00 	movq	376(%rsp), %rax
  43d81e:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43d823:	48 8b 84 24 80 01 00 00 	movq	384(%rsp), %rax
  43d82b:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  43d830:	0f 57 c0 	xorps	%xmm0, %xmm0
  43d833:	0f 11 44 24 20 	movups	%xmm0, 32(%rsp)
  43d838:	48 c7 44 24 30 64 00 00 00 	movq	$100, 48(%rsp)
  43d841:	0f 11 44 24 38 	movups	%xmm0, 56(%rsp)
  43d846:	48 83 c9 01 	orq	$1, %rcx
  43d84a:	48 89 4c 24 48 	movq	%rcx, 72(%rsp)
  43d84f:	e8 dc da ff ff 	callq	-9508 <runtime.gentraceback>
  43d854:	48 8b 44 24 50 	movq	80(%rsp), %rax
  43d859:	e9 53 ff ff ff 	jmp	-173 <runtime.traceback1+0x111>
  43d85e:	48 8b 8c 24 68 01 00 00 	movq	360(%rsp), %rcx
  43d866:	48 8b 94 24 70 01 00 00 	movq	368(%rsp), %rdx
  43d86e:	48 8b 9c 24 88 01 00 00 	movq	392(%rsp), %rbx
  43d876:	e9 cb fe ff ff 	jmp	-309 <runtime.traceback1+0xa6>
  43d87b:	ba 01 00 00 00 	movl	$1, %edx
  43d880:	87 91 3c 01 00 00 	xchgl	%edx, 316(%rcx)
  43d886:	48 8b 48 30 	movq	48(%rax), %rcx
  43d88a:	48 8b b1 40 01 00 00 	movq	320(%rcx), %rsi
  43d891:	84 01 	testb	%al, (%rcx)
  43d893:	48 8d 7c 24 58 	leaq	88(%rsp), %rdi
  43d898:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  43d89d:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  43d8a2:	e8 d9 94 00 00 	callq	38105 <runtime.duffcopy+0x2a0>
  43d8a7:	48 8b 6d 00 	movq	(%rbp), %rbp
  43d8ab:	48 8b 48 30 	movq	48(%rax), %rcx
  43d8af:	48 8b 89 40 01 00 00 	movq	320(%rcx), %rcx
  43d8b6:	48 c7 01 00 00 00 00 	movq	$0, (%rcx)
  43d8bd:	48 8b 48 30 	movq	48(%rax), %rcx
  43d8c1:	31 d2 	xorl	%edx, %edx
  43d8c3:	87 91 3c 01 00 00 	xchgl	%edx, 316(%rcx)
  43d8c9:	48 8d 4c 24 58 	leaq	88(%rsp), %rcx
  43d8ce:	48 89 0c 24 	movq	%rcx, (%rsp)
  43d8d2:	e8 09 0c 00 00 	callq	3081 <runtime.printCgoTraceback>
  43d8d7:	48 8b 84 24 80 01 00 00 	movq	384(%rsp), %rax
  43d8df:	e9 39 fe ff ff 	jmp	-455 <runtime.traceback1+0x7d>
  43d8e4:	48 8b 84 24 80 01 00 00 	movq	384(%rsp), %rax
  43d8ec:	e9 2c fe ff ff 	jmp	-468 <runtime.traceback1+0x7d>
  43d8f1:	e8 7a 6c 00 00 	callq	27770 <runtime.morestack_noctxt>
  43d8f6:	e9 a5 fd ff ff 	jmp	-603 <runtime.traceback1>
  43d8fb:	cc 	int3
  43d8fc:	cc 	int3
  43d8fd:	cc 	int3
  43d8fe:	cc 	int3
  43d8ff:	cc 	int3

runtime.callers:
  43d900:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43d909:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43d90d:	0f 86 bf 00 00 00 	jbe	191 <runtime.callers+0xd2>
  43d913:	48 83 ec 60 	subq	$96, %rsp
  43d917:	48 89 6c 24 58 	movq	%rbp, 88(%rsp)
  43d91c:	48 8d 6c 24 58 	leaq	88(%rsp), %rbp
  43d921:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  43d92a:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  43d933:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  43d93c:	0f 57 c0 	xorps	%xmm0, %xmm0
  43d93f:	0f 11 44 24 18 	movups	%xmm0, 24(%rsp)
  43d944:	0f 11 44 24 28 	movups	%xmm0, 40(%rsp)
  43d949:	0f 11 44 24 38 	movups	%xmm0, 56(%rsp)
  43d94e:	0f 11 44 24 48 	movups	%xmm0, 72(%rsp)
  43d953:	48 8d 0d 56 63 00 00 	leaq	25430(%rip), %rcx
  43d95a:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  43d95f:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  43d964:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  43d969:	48 8d 4c 24 68 	leaq	104(%rsp), %rcx
  43d96e:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  43d973:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  43d978:	48 8d 44 24 68 	leaq	104(%rsp), %rax
  43d97d:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  43d982:	48 8b 44 24 70 	movq	112(%rsp), %rax
  43d987:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  43d98c:	48 8b 44 24 78 	movq	120(%rsp), %rax
  43d991:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  43d996:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  43d99e:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  43d9a3:	48 8d 44 24 08 	leaq	8(%rsp), %rax
  43d9a8:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  43d9ad:	48 8d 44 24 10 	leaq	16(%rsp), %rax
  43d9b2:	48 89 04 24 	movq	%rax, (%rsp)
  43d9b6:	e8 65 6a 00 00 	callq	27237 <runtime.systemstack>
  43d9bb:	48 8b 44 24 08 	movq	8(%rsp), %rax
  43d9c0:	48 89 84 24 88 00 00 00 	movq	%rax, 136(%rsp)
  43d9c8:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  43d9cd:	48 83 c4 60 	addq	$96, %rsp
  43d9d1:	c3 	retq
  43d9d2:	e8 99 6b 00 00 	callq	27545 <runtime.morestack_noctxt>
  43d9d7:	e9 24 ff ff ff 	jmp	-220 <runtime.callers>
  43d9dc:	cc 	int3
  43d9dd:	cc 	int3
  43d9de:	cc 	int3
  43d9df:	cc 	int3

runtime.gcallers:
  43d9e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43d9e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43d9ed:	0f 86 8c 00 00 00 	jbe	140 <runtime.gcallers+0x9f>
  43d9f3:	48 83 ec 60 	subq	$96, %rsp
  43d9f7:	48 89 6c 24 58 	movq	%rbp, 88(%rsp)
  43d9fc:	48 8d 6c 24 58 	leaq	88(%rsp), %rbp
  43da01:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  43da09:	48 85 c0 	testq	%rax, %rax
  43da0c:	76 6a 	jbe	106 <runtime.gcallers+0x98>
  43da0e:	48 8b 4c 24 78 	movq	120(%rsp), %rcx
  43da13:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  43da18:	48 c7 04 24 ff ff ff ff 	movq	$-1, (%rsp)
  43da20:	48 c7 44 24 08 ff ff ff ff 	movq	$-1, 8(%rsp)
  43da29:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  43da32:	48 8b 4c 24 68 	movq	104(%rsp), %rcx
  43da37:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  43da3c:	48 8b 4c 24 70 	movq	112(%rsp), %rcx
  43da41:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  43da46:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  43da4b:	0f 57 c0 	xorps	%xmm0, %xmm0
  43da4e:	0f 11 44 24 38 	movups	%xmm0, 56(%rsp)
  43da53:	48 c7 44 24 48 00 00 00 00 	movq	$0, 72(%rsp)
  43da5c:	e8 cf d8 ff ff 	callq	-10033 <runtime.gentraceback>
  43da61:	48 8b 44 24 50 	movq	80(%rsp), %rax
  43da66:	48 89 84 24 90 00 00 00 	movq	%rax, 144(%rsp)
  43da6e:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  43da73:	48 83 c4 60 	addq	$96, %rsp
  43da77:	c3 	retq
  43da78:	e8 c3 1f fe ff 	callq	-122941 <runtime.panicindex>
  43da7d:	0f 0b 	ud2
  43da7f:	e8 ec 6a 00 00 	callq	27372 <runtime.morestack_noctxt>
  43da84:	e9 57 ff ff ff 	jmp	-169 <runtime.gcallers>
  43da89:	cc 	int3
  43da8a:	cc 	int3
  43da8b:	cc 	int3
  43da8c:	cc 	int3
  43da8d:	cc 	int3
  43da8e:	cc 	int3
  43da8f:	cc 	int3

runtime.showframe:
  43da90:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43da99:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43da9d:	0f 86 69 02 00 00 	jbe	617 <runtime.showframe+0x27c>
  43daa3:	48 83 ec 48 	subq	$72, %rsp
  43daa7:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  43daac:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  43dab1:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  43daba:	48 8b 48 30 	movq	48(%rax), %rcx
  43dabe:	8b 91 ec 00 00 00 	movl	236(%rcx), %edx
  43dac4:	85 d2 	testl	%edx, %edx
  43dac6:	7e 31 	jle	49 <runtime.showframe+0x69>
  43dac8:	48 8b 54 24 60 	movq	96(%rsp), %rdx
  43dacd:	48 85 d2 	testq	%rdx, %rdx
  43dad0:	74 27 	je	39 <runtime.showframe+0x69>
  43dad2:	48 8b 99 c0 00 00 00 	movq	192(%rcx), %rbx
  43dad9:	48 39 d3 	cmpq	%rdx, %rbx
  43dadc:	75 0f 	jne	15 <runtime.showframe+0x5d>
  43dade:	c6 44 24 70 01 	movb	$1, 112(%rsp)
  43dae3:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  43dae8:	48 83 c4 48 	addq	$72, %rsp
  43daec:	c3 	retq
  43daed:	48 8b 89 c8 00 00 00 	movq	200(%rcx), %rcx
  43daf4:	48 39 d1 	cmpq	%rdx, %rcx
  43daf7:	74 e5 	je	-27 <runtime.showframe+0x4e>
  43daf9:	8b 0d 09 75 06 00 	movl	423177(%rip), %ecx
  43daff:	48 8b 40 30 	movq	48(%rax), %rax
  43db03:	0f b6 80 29 01 00 00 	movzbl	297(%rax), %eax
  43db0a:	84 c0 	testb	%al, %al
  43db0c:	0f 84 f0 01 00 00 	je	496 <runtime.showframe+0x272>
  43db12:	0f b6 c0 	movzbl	%al, %eax
  43db15:	83 f8 01 	cmpl	$1, %eax
  43db18:	0f 8f d5 01 00 00 	jg	469 <runtime.showframe+0x263>
  43db1e:	48 8b 44 24 50 	movq	80(%rsp), %rax
  43db23:	48 85 c0 	testq	%rax, %rax
  43db26:	0f 84 b8 01 00 00 	je	440 <runtime.showframe+0x254>
  43db2c:	0f b6 4c 24 69 	movzbl	105(%rsp), %ecx
  43db31:	84 c9 	testb	%cl, %cl
  43db33:	0f 85 39 01 00 00 	jne	313 <runtime.showframe+0x1e2>
  43db39:	48 89 04 24 	movq	%rax, (%rsp)
  43db3d:	48 8b 44 24 58 	movq	88(%rsp), %rax
  43db42:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43db47:	e8 b4 ad ff ff 	callq	-21068 <runtime.funcname>
  43db4c:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43db51:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  43db56:	48 83 f8 0f 	cmpq	$15, %rax
  43db5a:	75 3e 	jne	62 <runtime.showframe+0x10a>
  43db5c:	48 8b 11 	movq	(%rcx), %rdx
  43db5f:	48 bb 72 75 6e 74 69 6d 65 2e 	movabsq	$3343198598084851058, %rbx
  43db69:	48 39 da 	cmpq	%rbx, %rdx
  43db6c:	75 2c 	jne	44 <runtime.showframe+0x10a>
  43db6e:	8b 51 08 	movl	8(%rcx), %edx
  43db71:	81 fa 67 6f 70 61 	cmpl	$1634758503, %edx
  43db77:	75 21 	jne	33 <runtime.showframe+0x10a>
  43db79:	0f b7 51 0c 	movzwl	12(%rcx), %edx
  43db7d:	66 81 fa 6e 69 	cmpw	$26990, %dx
  43db82:	75 16 	jne	22 <runtime.showframe+0x10a>
  43db84:	0f b6 51 0e 	movzbl	14(%rcx), %edx
  43db88:	80 fa 63 	cmpb	$99, %dl
  43db8b:	75 0d 	jne	13 <runtime.showframe+0x10a>
  43db8d:	0f b6 54 24 68 	movzbl	104(%rsp), %edx
  43db92:	84 d2 	testb	%dl, %dl
  43db94:	0f 84 c9 00 00 00 	je	201 <runtime.showframe+0x1d3>
  43db9a:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  43db9f:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  43dba4:	48 89 0c 24 	movq	%rcx, (%rsp)
  43dba8:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43dbad:	48 8d 15 a2 c0 02 00 	leaq	180386(%rip), %rdx
  43dbb4:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  43dbb9:	48 c7 44 24 18 01 00 00 00 	movq	$1, 24(%rsp)
  43dbc2:	e8 c9 98 ff ff 	callq	-26423 <runtime.contains>
  43dbc7:	0f b6 44 24 20 	movzbl	32(%rsp), %eax
  43dbcc:	84 c0 	testb	%al, %al
  43dbce:	0f 84 8b 00 00 00 	je	139 <runtime.showframe+0x1cf>
  43dbd4:	48 8b 44 24 30 	movq	48(%rsp), %rax
  43dbd9:	48 83 f8 08 	cmpq	$8, %rax
  43dbdd:	7d 51 	jge	81 <runtime.showframe+0x1a0>
  43dbdf:	31 c9 	xorl	%ecx, %ecx
  43dbe1:	84 c9 	testb	%cl, %cl
  43dbe3:	74 44 	je	68 <runtime.showframe+0x199>
  43dbe5:	48 83 f8 08 	cmpq	$8, %rax
  43dbe9:	7e 3a 	jle	58 <runtime.showframe+0x195>
  43dbeb:	48 8b 44 24 38 	movq	56(%rsp), %rax
  43dbf0:	48 8b 08 	movq	(%rax), %rcx
  43dbf3:	48 ba 72 75 6e 74 69 6d 65 2e 	movabsq	$3343198598084851058, %rdx
  43dbfd:	48 39 d1 	cmpq	%rdx, %rcx
  43dc00:	75 1f 	jne	31 <runtime.showframe+0x191>
  43dc02:	0f b6 40 08 	movzbl	8(%rax), %eax
  43dc06:	3c 41 	cmpb	$65, %al
  43dc08:	72 13 	jb	19 <runtime.showframe+0x18d>
  43dc0a:	3c 5a 	cmpb	$90, %al
  43dc0c:	0f 96 c0 	setbe	%al
  43dc0f:	88 44 24 70 	movb	%al, 112(%rsp)
  43dc13:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  43dc18:	48 83 c4 48 	addq	$72, %rsp
  43dc1c:	c3 	retq
  43dc1d:	31 c0 	xorl	%eax, %eax
  43dc1f:	eb ee 	jmp	-18 <runtime.showframe+0x17f>
  43dc21:	31 c0 	xorl	%eax, %eax
  43dc23:	eb ea 	jmp	-22 <runtime.showframe+0x17f>
  43dc25:	31 c0 	xorl	%eax, %eax
  43dc27:	eb e6 	jmp	-26 <runtime.showframe+0x17f>
  43dc29:	b8 01 00 00 00 	movl	$1, %eax
  43dc2e:	eb df 	jmp	-33 <runtime.showframe+0x17f>
  43dc30:	48 8b 44 24 38 	movq	56(%rsp), %rax
  43dc35:	48 89 04 24 	movq	%rax, (%rsp)
  43dc39:	48 8d 0d e7 c3 02 00 	leaq	181223(%rip), %rcx
  43dc40:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  43dc45:	48 c7 44 24 10 08 00 00 00 	movq	$8, 16(%rsp)
  43dc4e:	e8 ed 86 00 00 	callq	34541 <runtime.memequal>
  43dc53:	0f b6 4c 24 18 	movzbl	24(%rsp), %ecx
  43dc58:	48 8b 44 24 30 	movq	48(%rsp), %rax
  43dc5d:	eb 82 	jmp	-126 <runtime.showframe+0x151>
  43dc5f:	31 c0 	xorl	%eax, %eax
  43dc61:	eb ac 	jmp	-84 <runtime.showframe+0x17f>
  43dc63:	c6 44 24 70 01 	movb	$1, 112(%rsp)
  43dc68:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  43dc6d:	48 83 c4 48 	addq	$72, %rsp
  43dc71:	c3 	retq
  43dc72:	48 8b 08 	movq	(%rax), %rcx
  43dc75:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  43dc7a:	48 89 04 24 	movq	%rax, (%rsp)
  43dc7e:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  43dc83:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  43dc88:	e8 c3 af ff ff 	callq	-20541 <runtime.funcline>
  43dc8d:	48 8b 44 24 20 	movq	32(%rsp), %rax
  43dc92:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  43dc97:	48 83 f8 0f 	cmpq	$15, %rax
  43dc9b:	75 2e 	jne	46 <runtime.showframe+0x23b>
  43dc9d:	48 8b 01 	movq	(%rcx), %rax
  43dca0:	48 ba 3c 61 75 74 6f 67 65 6e 	movabsq	$7954878045212729660, %rdx
  43dcaa:	48 39 c2 	cmpq	%rax, %rdx
  43dcad:	75 1c 	jne	28 <runtime.showframe+0x23b>
  43dcaf:	8b 41 08 	movl	8(%rcx), %eax
  43dcb2:	3d 65 72 61 74 	cmpl	$1952543333, %eax
  43dcb7:	75 12 	jne	18 <runtime.showframe+0x23b>
  43dcb9:	0f b7 41 0c 	movzwl	12(%rcx), %eax
  43dcbd:	66 3d 65 64 	cmpw	$25701, %ax
  43dcc1:	75 08 	jne	8 <runtime.showframe+0x23b>
  43dcc3:	0f b6 41 0e 	movzbl	14(%rcx), %eax
  43dcc7:	3c 3e 	cmpb	$62, %al
  43dcc9:	74 0a 	je	10 <runtime.showframe+0x245>
  43dccb:	48 8b 44 24 50 	movq	80(%rsp), %rax
  43dcd0:	e9 64 fe ff ff 	jmp	-412 <runtime.showframe+0xa9>
  43dcd5:	c6 44 24 70 00 	movb	$0, 112(%rsp)
  43dcda:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  43dcdf:	48 83 c4 48 	addq	$72, %rsp
  43dce3:	c3 	retq
  43dce4:	c6 44 24 70 00 	movb	$0, 112(%rsp)
  43dce9:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  43dcee:	48 83 c4 48 	addq	$72, %rsp
  43dcf2:	c3 	retq
  43dcf3:	c6 44 24 70 01 	movb	$1, 112(%rsp)
  43dcf8:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  43dcfd:	48 83 c4 48 	addq	$72, %rsp
  43dd01:	c3 	retq
  43dd02:	c1 e9 02 	shrl	$2, %ecx
  43dd05:	89 c8 	movl	%ecx, %eax
  43dd07:	e9 09 fe ff ff 	jmp	-503 <runtime.showframe+0x85>
  43dd0c:	e8 5f 68 00 00 	callq	26719 <runtime.morestack_noctxt>
  43dd11:	e9 7a fd ff ff 	jmp	-646 <runtime.showframe>
  43dd16:	cc 	int3
  43dd17:	cc 	int3
  43dd18:	cc 	int3
  43dd19:	cc 	int3
  43dd1a:	cc 	int3
  43dd1b:	cc 	int3
  43dd1c:	cc 	int3
  43dd1d:	cc 	int3
  43dd1e:	cc 	int3
  43dd1f:	cc 	int3

runtime.goroutineheader:
  43dd20:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43dd29:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43dd2d:	0f 86 7a 02 00 00 	jbe	634 <runtime.goroutineheader+0x28d>
  43dd33:	48 83 ec 40 	subq	$64, %rsp
  43dd37:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  43dd3c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  43dd41:	48 8b 44 24 48 	movq	72(%rsp), %rax
  43dd46:	8b 88 90 00 00 00 	movl	144(%rax), %ecx
  43dd4c:	89 ca 	movl	%ecx, %edx
  43dd4e:	81 e1 ff ef ff ff 	andl	$4294963199, %ecx
  43dd54:	83 f9 09 	cmpl	$9, %ecx
  43dd57:	0f 83 36 02 00 00 	jae	566 <runtime.goroutineheader+0x273>
  43dd5d:	48 83 f9 09 	cmpq	$9, %rcx
  43dd61:	0f 83 3f 02 00 00 	jae	575 <runtime.goroutineheader+0x286>
  43dd67:	89 cb 	movl	%ecx, %ebx
  43dd69:	48 c1 e1 04 	shlq	$4, %rcx
  43dd6d:	48 8d 35 2c 7f 06 00 	leaq	425772(%rip), %rsi
  43dd74:	48 8b 7c 0e 08 	movq	8(%rsi,%rcx), %rdi
  43dd79:	48 8b 0c 0e 	movq	(%rsi,%rcx), %rcx
  43dd7d:	83 fb 04 	cmpl	$4, %ebx
  43dd80:	0f 85 02 02 00 00 	jne	514 <runtime.goroutineheader+0x268>
  43dd86:	48 8b b0 b0 00 00 00 	movq	176(%rax), %rsi
  43dd8d:	4c 8b 80 a8 00 00 00 	movq	168(%rax), %r8
  43dd94:	48 85 f6 	testq	%rsi, %rsi
  43dd97:	0f 84 dd 01 00 00 	je	477 <runtime.goroutineheader+0x25a>
  43dd9d:	83 fb 04 	cmpl	$4, %ebx
  43dda0:	89 54 24 14 	movl	%edx, 20(%rsp)
  43dda4:	48 89 74 24 20 	movq	%rsi, 32(%rsp)
  43dda9:	4c 89 44 24 30 	movq	%r8, 48(%rsp)
  43ddae:	0f 85 b6 01 00 00 	jne	438 <runtime.goroutineheader+0x24a>
  43ddb4:	48 8b 88 a0 00 00 00 	movq	160(%rax), %rcx
  43ddbb:	48 85 c9 	testq	%rcx, %rcx
  43ddbe:	0f 85 68 01 00 00 	jne	360 <runtime.goroutineheader+0x20c>
  43ddc4:	31 c9 	xorl	%ecx, %ecx
  43ddc6:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  43ddcb:	48 8b 90 98 00 00 00 	movq	152(%rax), %rdx
  43ddd2:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  43ddd7:	e8 24 3d fe ff 	callq	-115420 <runtime.printlock>
  43dddc:	48 8d 05 65 c5 02 00 	leaq	181605(%rip), %rax
  43dde3:	48 89 04 24 	movq	%rax, (%rsp)
  43dde7:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  43ddf0:	e8 4b 46 fe ff 	callq	-113077 <runtime.printstring>
  43ddf5:	48 8b 44 24 28 	movq	40(%rsp), %rax
  43ddfa:	48 89 04 24 	movq	%rax, (%rsp)
  43ddfe:	e8 7d 44 fe ff 	callq	-113539 <runtime.printint>
  43de03:	48 8d 05 5c be 02 00 	leaq	179804(%rip), %rax
  43de0a:	48 89 04 24 	movq	%rax, (%rsp)
  43de0e:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  43de17:	e8 24 46 fe ff 	callq	-113116 <runtime.printstring>
  43de1c:	48 8b 44 24 30 	movq	48(%rsp), %rax
  43de21:	48 89 04 24 	movq	%rax, (%rsp)
  43de25:	48 8b 44 24 20 	movq	32(%rsp), %rax
  43de2a:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43de2f:	e8 0c 46 fe ff 	callq	-113140 <runtime.printstring>
  43de34:	e8 47 3d fe ff 	callq	-115385 <runtime.printunlock>
  43de39:	8b 44 24 14 	movl	20(%rsp), %eax
  43de3d:	0f ba e0 0c 	btl	$12, %eax
  43de41:	0f 82 bd 00 00 00 	jb	189 <runtime.goroutineheader+0x1e4>
  43de47:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43de4c:	48 83 f8 01 	cmpq	$1, %rax
  43de50:	7d 63 	jge	99 <runtime.goroutineheader+0x195>
  43de52:	48 8b 44 24 48 	movq	72(%rsp), %rax
  43de57:	48 8b 80 e0 00 00 00 	movq	224(%rax), %rax
  43de5e:	48 85 c0 	testq	%rax, %rax
  43de61:	75 2d 	jne	45 <runtime.goroutineheader+0x170>
  43de63:	e8 98 3c fe ff 	callq	-115560 <runtime.printlock>
  43de68:	48 8d 05 36 be 02 00 	leaq	179766(%rip), %rax
  43de6f:	48 89 04 24 	movq	%rax, (%rsp)
  43de73:	48 c7 44 24 08 03 00 00 00 	movq	$3, 8(%rsp)
  43de7c:	e8 bf 45 fe ff 	callq	-113217 <runtime.printstring>
  43de81:	e8 fa 3c fe ff 	callq	-115462 <runtime.printunlock>
  43de86:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  43de8b:	48 83 c4 40 	addq	$64, %rsp
  43de8f:	c3 	retq
  43de90:	e8 6b 3c fe ff 	callq	-115605 <runtime.printlock>
  43de95:	48 8d 05 d3 ce 02 00 	leaq	184019(%rip), %rax
  43de9c:	48 89 04 24 	movq	%rax, (%rsp)
  43dea0:	48 c7 44 24 08 12 00 00 00 	movq	$18, 8(%rsp)
  43dea9:	e8 92 45 fe ff 	callq	-113262 <runtime.printstring>
  43deae:	e8 cd 3c fe ff 	callq	-115507 <runtime.printunlock>
  43deb3:	eb ae 	jmp	-82 <runtime.goroutineheader+0x143>
  43deb5:	e8 46 3c fe ff 	callq	-115642 <runtime.printlock>
  43deba:	48 8d 05 ab bd 02 00 	leaq	179627(%rip), %rax
  43dec1:	48 89 04 24 	movq	%rax, (%rsp)
  43dec5:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  43dece:	e8 6d 45 fe ff 	callq	-113299 <runtime.printstring>
  43ded3:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43ded8:	48 89 04 24 	movq	%rax, (%rsp)
  43dedc:	e8 9f 43 fe ff 	callq	-113761 <runtime.printint>
  43dee1:	48 8d 05 c7 c0 02 00 	leaq	180423(%rip), %rax
  43dee8:	48 89 04 24 	movq	%rax, (%rsp)
  43deec:	48 c7 44 24 08 08 00 00 00 	movq	$8, 8(%rsp)
  43def5:	e8 46 45 fe ff 	callq	-113338 <runtime.printstring>
  43defa:	e8 81 3c fe ff 	callq	-115583 <runtime.printunlock>
  43deff:	e9 4e ff ff ff 	jmp	-178 <runtime.goroutineheader+0x132>
  43df04:	e8 f7 3b fe ff 	callq	-115721 <runtime.printlock>
  43df09:	48 8d 05 4a bf 02 00 	leaq	180042(%rip), %rax
  43df10:	48 89 04 24 	movq	%rax, (%rsp)
  43df14:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  43df1d:	e8 1e 45 fe ff 	callq	-113378 <runtime.printstring>
  43df22:	e8 59 3c fe ff 	callq	-115623 <runtime.printunlock>
  43df27:	e9 1b ff ff ff 	jmp	-229 <runtime.goroutineheader+0x127>
  43df2c:	e8 ff 9a 00 00 	callq	39679 <runtime.nanotime>
  43df31:	48 8b 04 24 	movq	(%rsp), %rax
  43df35:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  43df3a:	48 2b 81 a0 00 00 00 	subq	160(%rcx), %rax
  43df41:	48 89 c2 	movq	%rax, %rdx
  43df44:	48 b8 40 47 4f 3f 9a ff 4c 49 	movabsq	$5281877500950955840, %rax
  43df4e:	48 89 d3 	movq	%rdx, %rbx
  43df51:	48 f7 ea 	imulq	%rdx
  43df54:	48 c1 fa 22 	sarq	$34, %rdx
  43df58:	48 c1 fb 3f 	sarq	$63, %rbx
  43df5c:	48 29 da 	subq	%rbx, %rdx
  43df5f:	48 89 c8 	movq	%rcx, %rax
  43df62:	48 89 d1 	movq	%rdx, %rcx
  43df65:	e9 5c fe ff ff 	jmp	-420 <runtime.goroutineheader+0xa6>
  43df6a:	83 fb 03 	cmpl	$3, %ebx
  43df6d:	0f 84 41 fe ff ff 	je	-447 <runtime.goroutineheader+0x94>
  43df73:	31 c9 	xorl	%ecx, %ecx
  43df75:	e9 4c fe ff ff 	jmp	-436 <runtime.goroutineheader+0xa6>
  43df7a:	83 fb 04 	cmpl	$4, %ebx
  43df7d:	48 89 fe 	movq	%rdi, %rsi
  43df80:	49 89 c8 	movq	%rcx, %r8
  43df83:	e9 18 fe ff ff 	jmp	-488 <runtime.goroutineheader+0x80>
  43df88:	48 89 fe 	movq	%rdi, %rsi
  43df8b:	49 89 c8 	movq	%rcx, %r8
  43df8e:	e9 0d fe ff ff 	jmp	-499 <runtime.goroutineheader+0x80>
  43df93:	89 cb 	movl	%ecx, %ebx
  43df95:	bf 03 00 00 00 	movl	$3, %edi
  43df9a:	48 8d 0d fb bc 02 00 	leaq	179451(%rip), %rcx
  43dfa1:	e9 d7 fd ff ff 	jmp	-553 <runtime.goroutineheader+0x5d>
  43dfa6:	e8 95 1a fe ff 	callq	-124267 <runtime.panicindex>
  43dfab:	0f 0b 	ud2
  43dfad:	e8 be 65 00 00 	callq	26046 <runtime.morestack_noctxt>
  43dfb2:	e9 69 fd ff ff 	jmp	-663 <runtime.goroutineheader>
  43dfb7:	cc 	int3
  43dfb8:	cc 	int3
  43dfb9:	cc 	int3
  43dfba:	cc 	int3
  43dfbb:	cc 	int3
  43dfbc:	cc 	int3
  43dfbd:	cc 	int3
  43dfbe:	cc 	int3
  43dfbf:	cc 	int3

runtime.tracebackothers:
  43dfc0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43dfc9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43dfcd:	0f 86 3d 02 00 00 	jbe	573 <runtime.tracebackothers+0x250>
  43dfd3:	48 83 ec 60 	subq	$96, %rsp
  43dfd7:	48 89 6c 24 58 	movq	%rbp, 88(%rsp)
  43dfdc:	48 8d 6c 24 58 	leaq	88(%rsp), %rbp
  43dfe1:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  43dfea:	8b 0d 18 70 06 00 	movl	421912(%rip), %ecx
  43dff0:	48 8b 40 30 	movq	48(%rax), %rax
  43dff4:	0f b6 80 29 01 00 00 	movzbl	297(%rax), %eax
  43dffb:	84 c0 	testb	%al, %al
  43dffd:	0f 84 03 02 00 00 	je	515 <runtime.tracebackothers+0x246>
  43e003:	0f b6 c0 	movzbl	%al, %eax
  43e006:	89 44 24 24 	movl	%eax, 36(%rsp)
  43e00a:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43e013:	48 89 4c 24 48 	movq	%rcx, 72(%rsp)
  43e018:	48 8b 51 30 	movq	48(%rcx), %rdx
  43e01c:	48 8b 92 c0 00 00 00 	movq	192(%rdx), %rdx
  43e023:	48 85 d2 	testq	%rdx, %rdx
  43e026:	0f 84 d0 01 00 00 	je	464 <runtime.tracebackothers+0x23c>
  43e02c:	48 8b 5c 24 68 	movq	104(%rsp), %rbx
  43e031:	48 39 d3 	cmpq	%rdx, %rbx
  43e034:	0f 85 72 01 00 00 	jne	370 <runtime.tracebackothers+0x1ec>
  43e03a:	48 8d 05 d7 58 08 00 	leaq	547031(%rip), %rax
  43e041:	48 89 04 24 	movq	%rax, (%rsp)
  43e045:	e8 d6 b4 fc ff 	callq	-215850 <runtime.lock>
  43e04a:	48 8b 05 47 96 06 00 	movq	431687(%rip), %rax
  43e051:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  43e056:	48 8b 0d 33 96 06 00 	movq	431667(%rip), %rcx
  43e05d:	48 89 4c 24 50 	movq	%rcx, 80(%rsp)
  43e062:	31 d2 	xorl	%edx, %edx
  43e064:	eb 03 	jmp	3 <runtime.tracebackothers+0xa9>
  43e066:	48 ff c2 	incq	%rdx
  43e069:	48 39 c2 	cmpq	%rax, %rdx
  43e06c:	0f 8d 20 01 00 00 	jge	288 <runtime.tracebackothers+0x1d2>
  43e072:	48 8b 1c d1 	movq	(%rcx,%rdx,8), %rbx
  43e076:	48 8b 74 24 68 	movq	104(%rsp), %rsi
  43e07b:	48 39 de 	cmpq	%rbx, %rsi
  43e07e:	74 e6 	je	-26 <runtime.tracebackothers+0xa6>
  43e080:	48 8b 7c 24 48 	movq	72(%rsp), %rdi
  43e085:	4c 8b 47 30 	movq	48(%rdi), %r8
  43e089:	4d 8b 80 c0 00 00 00 	movq	192(%r8), %r8
  43e090:	4c 39 c3 	cmpq	%r8, %rbx
  43e093:	74 d1 	je	-47 <runtime.tracebackothers+0xa6>
  43e095:	44 8b 83 90 00 00 00 	movl	144(%rbx), %r8d
  43e09c:	41 83 f8 06 	cmpl	$6, %r8d
  43e0a0:	74 c4 	je	-60 <runtime.tracebackothers+0xa6>
  43e0a2:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  43e0a7:	48 89 5c 24 38 	movq	%rbx, 56(%rsp)
  43e0ac:	48 89 1c 24 	movq	%rbx, (%rsp)
  43e0b0:	e8 7b 03 00 00 	callq	891 <runtime.isSystemGoroutine>
  43e0b5:	0f b6 44 24 08 	movzbl	8(%rsp), %eax
  43e0ba:	84 c0 	testb	%al, %al
  43e0bc:	74 1f 	je	31 <runtime.tracebackothers+0x11d>
  43e0be:	8b 44 24 24 	movl	36(%rsp), %eax
  43e0c2:	83 f8 02 	cmpl	$2, %eax
  43e0c5:	7d 16 	jge	22 <runtime.tracebackothers+0x11d>
  43e0c7:	48 8b 44 24 30 	movq	48(%rsp), %rax
  43e0cc:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  43e0d1:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  43e0d6:	48 8b 74 24 68 	movq	104(%rsp), %rsi
  43e0db:	eb 89 	jmp	-119 <runtime.tracebackothers+0xa6>
  43e0dd:	e8 1e 3a fe ff 	callq	-116194 <runtime.printlock>
  43e0e2:	e8 a9 3c fe ff 	callq	-115543 <runtime.printnl>
  43e0e7:	e8 94 3a fe ff 	callq	-116076 <runtime.printunlock>
  43e0ec:	48 8b 44 24 38 	movq	56(%rsp), %rax
  43e0f1:	48 89 04 24 	movq	%rax, (%rsp)
  43e0f5:	e8 26 fc ff ff 	callq	-986 <runtime.goroutineheader>
  43e0fa:	48 8b 44 24 38 	movq	56(%rsp), %rax
  43e0ff:	48 8b 48 30 	movq	48(%rax), %rcx
  43e103:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  43e108:	48 8b 5a 30 	movq	48(%rdx), %rbx
  43e10c:	48 39 d9 	cmpq	%rbx, %rcx
  43e10f:	74 11 	je	17 <runtime.tracebackothers+0x162>
  43e111:	8b 88 90 00 00 00 	movl	144(%rax), %ecx
  43e117:	81 e1 ff ef ff ff 	andl	$4294963199, %ecx
  43e11d:	83 f9 02 	cmpl	$2, %ecx
  43e120:	74 3d 	je	61 <runtime.tracebackothers+0x19f>
  43e122:	48 c7 04 24 ff ff ff ff 	movq	$-1, (%rsp)
  43e12a:	48 c7 44 24 08 ff ff ff ff 	movq	$-1, 8(%rsp)
  43e133:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  43e13c:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  43e141:	e8 7a f4 ff ff 	callq	-2950 <runtime.traceback>
  43e146:	48 8b 44 24 30 	movq	48(%rsp), %rax
  43e14b:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  43e150:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  43e155:	48 8b 74 24 68 	movq	104(%rsp), %rsi
  43e15a:	e9 07 ff ff ff 	jmp	-249 <runtime.tracebackothers+0xa6>
  43e15f:	e8 9c 39 fe ff 	callq	-116324 <runtime.printlock>
  43e164:	48 8d 05 ed f9 02 00 	leaq	195053(%rip), %rax
  43e16b:	48 89 04 24 	movq	%rax, (%rsp)
  43e16f:	48 c7 44 24 08 36 00 00 00 	movq	$54, 8(%rsp)
  43e178:	e8 c3 42 fe ff 	callq	-113981 <runtime.printstring>
  43e17d:	e8 fe 39 fe ff 	callq	-116226 <runtime.printunlock>
  43e182:	48 8b 44 24 38 	movq	56(%rsp), %rax
  43e187:	48 89 04 24 	movq	%rax, (%rsp)
  43e18b:	e8 f0 f1 ff ff 	callq	-3600 <runtime.printcreatedby>
  43e190:	eb b4 	jmp	-76 <runtime.tracebackothers+0x186>
  43e192:	48 8d 05 7f 57 08 00 	leaq	546687(%rip), %rax
  43e199:	48 89 04 24 	movq	%rax, (%rsp)
  43e19d:	e8 1e b5 fc ff 	callq	-215778 <runtime.unlock>
  43e1a2:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  43e1a7:	48 83 c4 60 	addq	$96, %rsp
  43e1ab:	c3 	retq
  43e1ac:	48 89 54 24 40 	movq	%rdx, 64(%rsp)
  43e1b1:	e8 4a 39 fe ff 	callq	-116406 <runtime.printlock>
  43e1b6:	e8 d5 3b fe ff 	callq	-115755 <runtime.printnl>
  43e1bb:	e8 c0 39 fe ff 	callq	-116288 <runtime.printunlock>
  43e1c0:	48 8b 44 24 40 	movq	64(%rsp), %rax
  43e1c5:	48 89 04 24 	movq	%rax, (%rsp)
  43e1c9:	e8 52 fb ff ff 	callq	-1198 <runtime.goroutineheader>
  43e1ce:	48 c7 04 24 ff ff ff ff 	movq	$-1, (%rsp)
  43e1d6:	48 c7 44 24 08 ff ff ff ff 	movq	$-1, 8(%rsp)
  43e1df:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  43e1e8:	48 8b 44 24 40 	movq	64(%rsp), %rax
  43e1ed:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  43e1f2:	e8 c9 f3 ff ff 	callq	-3127 <runtime.traceback>
  43e1f7:	e9 3e fe ff ff 	jmp	-450 <runtime.tracebackothers+0x7a>
  43e1fc:	48 8b 5c 24 68 	movq	104(%rsp), %rbx
  43e201:	e9 34 fe ff ff 	jmp	-460 <runtime.tracebackothers+0x7a>
  43e206:	c1 e9 02 	shrl	$2, %ecx
  43e209:	89 c8 	movl	%ecx, %eax
  43e20b:	e9 f6 fd ff ff 	jmp	-522 <runtime.tracebackothers+0x46>
  43e210:	e8 5b 63 00 00 	callq	25435 <runtime.morestack_noctxt>
  43e215:	e9 a6 fd ff ff 	jmp	-602 <runtime.tracebackothers>
  43e21a:	cc 	int3
  43e21b:	cc 	int3
  43e21c:	cc 	int3
  43e21d:	cc 	int3
  43e21e:	cc 	int3
  43e21f:	cc 	int3

runtime.tracebackHexdump:
  43e220:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43e229:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43e22d:	0f 86 ef 01 00 00 	jbe	495 <runtime.tracebackHexdump+0x202>
  43e233:	48 83 ec 58 	subq	$88, %rsp
  43e237:	48 89 6c 24 50 	movq	%rbp, 80(%rsp)
  43e23c:	48 8d 6c 24 50 	leaq	80(%rsp), %rbp
  43e241:	48 8b 44 24 70 	movq	112(%rsp), %rax
  43e246:	48 8b 48 28 	movq	40(%rax), %rcx
  43e24a:	48 8b 50 30 	movq	48(%rax), %rdx
  43e24e:	48 85 d2 	testq	%rdx, %rdx
  43e251:	0f 84 c0 01 00 00 	je	448 <runtime.tracebackHexdump+0x1f7>
  43e257:	48 39 ca 	cmpq	%rcx, %rdx
  43e25a:	0f 83 b4 01 00 00 	jae	436 <runtime.tracebackHexdump+0x1f4>
  43e260:	48 85 d2 	testq	%rdx, %rdx
  43e263:	48 89 d3 	movq	%rdx, %rbx
  43e266:	0f 84 9d 01 00 00 	je	413 <runtime.tracebackHexdump+0x1e9>
  43e26c:	48 39 cb 	cmpq	%rcx, %rbx
  43e26f:	0f 86 94 01 00 00 	jbe	404 <runtime.tracebackHexdump+0x1e9>
  43e275:	48 89 de 	movq	%rbx, %rsi
  43e278:	48 81 c2 00 ff ff ff 	addq	$-256, %rdx
  43e27f:	48 8d b9 00 f8 ff ff 	leaq	-2048(%rcx), %rdi
  43e286:	48 39 fa 	cmpq	%rdi, %rdx
  43e289:	0f 83 72 01 00 00 	jae	370 <runtime.tracebackHexdump+0x1e1>
  43e28f:	48 8d 93 00 01 00 00 	leaq	256(%rbx), %rdx
  43e296:	48 8d 99 00 08 00 00 	leaq	2048(%rcx), %rbx
  43e29d:	48 39 da 	cmpq	%rbx, %rdx
  43e2a0:	0f 86 53 01 00 00 	jbe	339 <runtime.tracebackHexdump+0x1d9>
  43e2a6:	48 8b 54 24 60 	movq	96(%rsp), %rdx
  43e2ab:	48 39 d7 	cmpq	%rdx, %rdi
  43e2ae:	0f 83 38 01 00 00 	jae	312 <runtime.tracebackHexdump+0x1cc>
  43e2b4:	48 89 d7 	movq	%rdx, %rdi
  43e2b7:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  43e2bc:	48 89 74 24 30 	movq	%rsi, 48(%rsp)
  43e2c1:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  43e2c6:	4c 8b 44 24 68 	movq	104(%rsp), %r8
  43e2cb:	4c 39 c3 	cmpq	%r8, %rbx
  43e2ce:	0f 86 10 01 00 00 	jbe	272 <runtime.tracebackHexdump+0x1c4>
  43e2d4:	4c 89 44 24 28 	movq	%r8, 40(%rsp)
  43e2d9:	e8 22 38 fe ff 	callq	-116702 <runtime.printlock>
  43e2de:	48 8d 05 22 ca 02 00 	leaq	182818(%rip), %rax
  43e2e5:	48 89 04 24 	movq	%rax, (%rsp)
  43e2e9:	48 c7 44 24 08 11 00 00 00 	movq	$17, 8(%rsp)
  43e2f2:	e8 49 41 fe ff 	callq	-114359 <runtime.printstring>
  43e2f7:	48 8b 44 24 20 	movq	32(%rsp), %rax
  43e2fc:	48 89 04 24 	movq	%rax, (%rsp)
  43e300:	e8 eb 3f fe ff 	callq	-114709 <runtime.printhex>
  43e305:	48 8d 05 8e ba 02 00 	leaq	178830(%rip), %rax
  43e30c:	48 89 04 24 	movq	%rax, (%rsp)
  43e310:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  43e319:	e8 22 41 fe ff 	callq	-114398 <runtime.printstring>
  43e31e:	48 8b 44 24 30 	movq	48(%rsp), %rax
  43e323:	48 89 04 24 	movq	%rax, (%rsp)
  43e327:	e8 c4 3f fe ff 	callq	-114748 <runtime.printhex>
  43e32c:	48 8d 05 3a bf 02 00 	leaq	180026(%rip), %rax
  43e333:	48 89 04 24 	movq	%rax, (%rsp)
  43e337:	48 c7 44 24 08 09 00 00 00 	movq	$9, 8(%rsp)
  43e340:	e8 fb 40 fe ff 	callq	-114437 <runtime.printstring>
  43e345:	48 8b 44 24 60 	movq	96(%rsp), %rax
  43e34a:	48 89 04 24 	movq	%rax, (%rsp)
  43e34e:	e8 9d 3f fe ff 	callq	-114787 <runtime.printhex>
  43e353:	48 8d 05 fa b8 02 00 	leaq	178426(%rip), %rax
  43e35a:	48 89 04 24 	movq	%rax, (%rsp)
  43e35e:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  43e367:	e8 d4 40 fe ff 	callq	-114476 <runtime.printstring>
  43e36c:	48 8b 44 24 68 	movq	104(%rsp), %rax
  43e371:	48 89 04 24 	movq	%rax, (%rsp)
  43e375:	e8 76 3f fe ff 	callq	-114826 <runtime.printhex>
  43e37a:	48 8d 05 e9 b8 02 00 	leaq	178409(%rip), %rax
  43e381:	48 89 04 24 	movq	%rax, (%rsp)
  43e385:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  43e38e:	e8 ad 40 fe ff 	callq	-114515 <runtime.printstring>
  43e393:	e8 e8 37 fe ff 	callq	-116760 <runtime.printunlock>
  43e398:	48 8d 05 c1 59 00 00 	leaq	22977(%rip), %rax
  43e39f:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  43e3a4:	48 8b 44 24 70 	movq	112(%rsp), %rax
  43e3a9:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  43e3ae:	48 8b 44 24 78 	movq	120(%rsp), %rax
  43e3b3:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  43e3b8:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43e3bd:	48 89 04 24 	movq	%rax, (%rsp)
  43e3c1:	48 8b 44 24 28 	movq	40(%rsp), %rax
  43e3c6:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43e3cb:	48 8d 44 24 38 	leaq	56(%rsp), %rax
  43e3d0:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43e3d5:	e8 86 42 fe ff 	callq	-114042 <runtime.hexdumpWords>
  43e3da:	48 8b 6c 24 50 	movq	80(%rsp), %rbp
  43e3df:	48 83 c4 58 	addq	$88, %rsp
  43e3e3:	c3 	retq
  43e3e4:	49 89 d8 	movq	%rbx, %r8
  43e3e7:	e9 e8 fe ff ff 	jmp	-280 <runtime.tracebackHexdump+0xb4>
  43e3ec:	48 89 fa 	movq	%rdi, %rdx
  43e3ef:	48 8b 7c 24 60 	movq	96(%rsp), %rdi
  43e3f4:	e9 be fe ff ff 	jmp	-322 <runtime.tracebackHexdump+0x97>
  43e3f9:	48 89 d3 	movq	%rdx, %rbx
  43e3fc:	e9 a5 fe ff ff 	jmp	-347 <runtime.tracebackHexdump+0x86>
  43e401:	48 89 d7 	movq	%rdx, %rdi
  43e404:	e9 86 fe ff ff 	jmp	-378 <runtime.tracebackHexdump+0x6f>
  43e409:	48 89 de 	movq	%rbx, %rsi
  43e40c:	48 89 cb 	movq	%rcx, %rbx
  43e40f:	e9 64 fe ff ff 	jmp	-412 <runtime.tracebackHexdump+0x58>
  43e414:	48 85 d2 	testq	%rdx, %rdx
  43e417:	48 89 d3 	movq	%rdx, %rbx
  43e41a:	48 89 ca 	movq	%rcx, %rdx
  43e41d:	e9 44 fe ff ff 	jmp	-444 <runtime.tracebackHexdump+0x46>
  43e422:	e8 49 61 00 00 	callq	24905 <runtime.morestack_noctxt>
  43e427:	e9 f4 fd ff ff 	jmp	-524 <runtime.tracebackHexdump>
  43e42c:	cc 	int3
  43e42d:	cc 	int3
  43e42e:	cc 	int3
  43e42f:	cc 	int3

runtime.isSystemGoroutine:
  43e430:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43e439:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43e43d:	0f 86 8e 00 00 00 	jbe	142 <runtime.isSystemGoroutine+0xa1>
  43e443:	48 83 ec 20 	subq	$32, %rsp
  43e447:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  43e44c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  43e451:	48 8b 44 24 28 	movq	40(%rsp), %rax
  43e456:	48 8b 80 28 01 00 00 	movq	296(%rax), %rax
  43e45d:	48 89 04 24 	movq	%rax, (%rsp)
  43e461:	e8 6a 9d ff ff 	callq	-25238 <runtime.findfunc>
  43e466:	48 8b 44 24 08 	movq	8(%rsp), %rax
  43e46b:	48 85 c0 	testq	%rax, %rax
  43e46e:	74 52 	je	82 <runtime.isSystemGoroutine+0x92>
  43e470:	8b 40 10 	movl	16(%rax), %eax
  43e473:	83 f8 09 	cmpl	$9, %eax
  43e476:	75 0b 	jne	11 <runtime.isSystemGoroutine+0x53>
  43e478:	0f b6 0d 25 54 08 00 	movzbl	545829(%rip), %ecx
  43e47f:	84 c9 	testb	%cl, %cl
  43e481:	74 38 	je	56 <runtime.isSystemGoroutine+0x8b>
  43e483:	83 f8 0a 	cmpl	$10, %eax
  43e486:	75 13 	jne	19 <runtime.isSystemGoroutine+0x6b>
  43e488:	b8 01 00 00 00 	movl	$1, %eax
  43e48d:	88 44 24 30 	movb	%al, 48(%rsp)
  43e491:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  43e496:	48 83 c4 20 	addq	$32, %rsp
  43e49a:	c3 	retq
  43e49b:	83 f8 0b 	cmpl	$11, %eax
  43e49e:	75 07 	jne	7 <runtime.isSystemGoroutine+0x77>
  43e4a0:	b8 01 00 00 00 	movl	$1, %eax
  43e4a5:	eb e6 	jmp	-26 <runtime.isSystemGoroutine+0x5d>
  43e4a7:	83 f8 0c 	cmpl	$12, %eax
  43e4aa:	75 07 	jne	7 <runtime.isSystemGoroutine+0x83>
  43e4ac:	b8 01 00 00 00 	movl	$1, %eax
  43e4b1:	eb da 	jmp	-38 <runtime.isSystemGoroutine+0x5d>
  43e4b3:	83 f8 0d 	cmpl	$13, %eax
  43e4b6:	0f 94 c0 	sete	%al
  43e4b9:	eb d2 	jmp	-46 <runtime.isSystemGoroutine+0x5d>
  43e4bb:	b8 01 00 00 00 	movl	$1, %eax
  43e4c0:	eb cb 	jmp	-53 <runtime.isSystemGoroutine+0x5d>
  43e4c2:	c6 44 24 30 00 	movb	$0, 48(%rsp)
  43e4c7:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  43e4cc:	48 83 c4 20 	addq	$32, %rsp
  43e4d0:	c3 	retq
  43e4d1:	e8 9a 60 00 00 	callq	24730 <runtime.morestack_noctxt>
  43e4d6:	e9 55 ff ff ff 	jmp	-171 <runtime.isSystemGoroutine>
  43e4db:	cc 	int3
  43e4dc:	cc 	int3
  43e4dd:	cc 	int3
  43e4de:	cc 	int3
  43e4df:	cc 	int3

runtime.printCgoTraceback:
  43e4e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43e4e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43e4ed:	0f 86 05 01 00 00 	jbe	261 <runtime.printCgoTraceback+0x118>
  43e4f3:	48 83 ec 70 	subq	$112, %rsp
  43e4f7:	48 89 6c 24 68 	movq	%rbp, 104(%rsp)
  43e4fc:	48 8d 6c 24 68 	leaq	104(%rsp), %rbp
  43e501:	48 8b 05 30 91 06 00 	movq	430384(%rip), %rax
  43e508:	48 85 c0 	testq	%rax, %rax
  43e50b:	74 7f 	je	127 <runtime.printCgoTraceback+0xac>
  43e50d:	48 c7 44 24 30 00 00 00 00 	movq	$0, 48(%rsp)
  43e516:	0f 57 c0 	xorps	%xmm0, %xmm0
  43e519:	0f 11 44 24 38 	movups	%xmm0, 56(%rsp)
  43e51e:	0f 11 44 24 48 	movups	%xmm0, 72(%rsp)
  43e523:	0f 11 44 24 58 	movups	%xmm0, 88(%rsp)
  43e528:	31 c0 	xorl	%eax, %eax
  43e52a:	eb 29 	jmp	41 <runtime.printCgoTraceback+0x75>
  43e52c:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  43e531:	48 89 14 24 	movq	%rdx, (%rsp)
  43e535:	48 c7 44 24 08 ff ff ff 7f 	movq	$2147483647, 8(%rsp)
  43e53e:	48 8d 44 24 30 	leaq	48(%rsp), %rax
  43e543:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43e548:	e8 c3 00 00 00 	callq	195 <runtime.printOneCgoTraceback>
  43e54d:	48 8b 44 24 28 	movq	40(%rsp), %rax
  43e552:	48 ff c0 	incq	%rax
  43e555:	48 83 f8 20 	cmpq	$32, %rax
  43e559:	7d 10 	jge	16 <runtime.printCgoTraceback+0x8b>
  43e55b:	48 8b 4c 24 78 	movq	120(%rsp), %rcx
  43e560:	84 01 	testb	%al, (%rcx)
  43e562:	48 8b 14 c1 	movq	(%rcx,%rax,8), %rdx
  43e566:	48 85 d2 	testq	%rdx, %rdx
  43e569:	75 c1 	jne	-63 <runtime.printCgoTraceback+0x4c>
  43e56b:	48 c7 44 24 30 00 00 00 00 	movq	$0, 48(%rsp)
  43e574:	48 8d 44 24 30 	leaq	48(%rsp), %rax
  43e579:	48 89 04 24 	movq	%rax, (%rsp)
  43e57d:	e8 8e 02 00 00 	callq	654 <runtime.callCgoSymbolizer>
  43e582:	48 8b 6c 24 68 	movq	104(%rsp), %rbp
  43e587:	48 83 c4 70 	addq	$112, %rsp
  43e58b:	c3 	retq
  43e58c:	31 c0 	xorl	%eax, %eax
  43e58e:	eb 48 	jmp	72 <runtime.printCgoTraceback+0xf8>
  43e590:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  43e595:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  43e59a:	e8 61 35 fe ff 	callq	-117407 <runtime.printlock>
  43e59f:	48 8d 05 d0 ce 02 00 	leaq	184016(%rip), %rax
  43e5a6:	48 89 04 24 	movq	%rax, (%rsp)
  43e5aa:	48 c7 44 24 08 16 00 00 00 	movq	$22, 8(%rsp)
  43e5b3:	e8 88 3e fe ff 	callq	-115064 <runtime.printstring>
  43e5b8:	48 8b 44 24 20 	movq	32(%rsp), %rax
  43e5bd:	48 89 04 24 	movq	%rax, (%rsp)
  43e5c1:	e8 2a 3d fe ff 	callq	-115414 <runtime.printhex>
  43e5c6:	e8 c5 37 fe ff 	callq	-116795 <runtime.printnl>
  43e5cb:	e8 b0 35 fe ff 	callq	-117328 <runtime.printunlock>
  43e5d0:	48 8b 44 24 28 	movq	40(%rsp), %rax
  43e5d5:	48 ff c0 	incq	%rax
  43e5d8:	48 83 f8 20 	cmpq	$32, %rax
  43e5dc:	7d 10 	jge	16 <runtime.printCgoTraceback+0x10e>
  43e5de:	48 8b 4c 24 78 	movq	120(%rsp), %rcx
  43e5e3:	84 01 	testb	%al, (%rcx)
  43e5e5:	48 8b 14 c1 	movq	(%rcx,%rax,8), %rdx
  43e5e9:	48 85 d2 	testq	%rdx, %rdx
  43e5ec:	75 a2 	jne	-94 <runtime.printCgoTraceback+0xb0>
  43e5ee:	48 8b 6c 24 68 	movq	104(%rsp), %rbp
  43e5f3:	48 83 c4 70 	addq	$112, %rsp
  43e5f7:	c3 	retq
  43e5f8:	e8 73 5f 00 00 	callq	24435 <runtime.morestack_noctxt>
  43e5fd:	e9 de fe ff ff 	jmp	-290 <runtime.printCgoTraceback>
  43e602:	cc 	int3
  43e603:	cc 	int3
  43e604:	cc 	int3
  43e605:	cc 	int3
  43e606:	cc 	int3
  43e607:	cc 	int3
  43e608:	cc 	int3
  43e609:	cc 	int3
  43e60a:	cc 	int3
  43e60b:	cc 	int3
  43e60c:	cc 	int3
  43e60d:	cc 	int3
  43e60e:	cc 	int3
  43e60f:	cc 	int3

runtime.printOneCgoTraceback:
  43e610:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43e619:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43e61d:	0f 86 d7 01 00 00 	jbe	471 <runtime.printOneCgoTraceback+0x1ea>
  43e623:	48 83 ec 40 	subq	$64, %rsp
  43e627:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  43e62c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  43e631:	48 8b 44 24 48 	movq	72(%rsp), %rax
  43e636:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  43e63b:	48 89 01 	movq	%rax, (%rcx)
  43e63e:	31 d2 	xorl	%edx, %edx
  43e640:	eb 08 	jmp	8 <runtime.printOneCgoTraceback+0x3a>
  43e642:	48 89 c2 	movq	%rax, %rdx
  43e645:	48 8b 44 24 48 	movq	72(%rsp), %rax
  43e64a:	48 8b 5c 24 50 	movq	80(%rsp), %rbx
  43e64f:	48 39 da 	cmpq	%rbx, %rdx
  43e652:	0f 8f 9a 01 00 00 	jg	410 <runtime.printOneCgoTraceback+0x1e2>
  43e658:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  43e65d:	48 89 0c 24 	movq	%rcx, (%rsp)
  43e661:	e8 aa 01 00 00 	callq	426 <runtime.callCgoSymbolizer>
  43e666:	48 8b 44 24 58 	movq	88(%rsp), %rax
  43e66b:	48 8b 48 18 	movq	24(%rax), %rcx
  43e66f:	48 85 c9 	testq	%rcx, %rcx
  43e672:	0f 84 52 01 00 00 	je	338 <runtime.printOneCgoTraceback+0x1ba>
  43e678:	48 89 0c 24 	movq	%rcx, (%rsp)
  43e67c:	e8 6f 90 ff ff 	callq	-28561 <runtime.gostringnocopy>
  43e681:	48 8b 44 24 10 	movq	16(%rsp), %rax
  43e686:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  43e68b:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  43e690:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  43e695:	e8 66 34 fe ff 	callq	-117658 <runtime.printlock>
  43e69a:	48 8b 44 24 30 	movq	48(%rsp), %rax
  43e69f:	48 89 04 24 	movq	%rax, (%rsp)
  43e6a3:	48 8b 44 24 28 	movq	40(%rsp), %rax
  43e6a8:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43e6ad:	e8 8e 3d fe ff 	callq	-115314 <runtime.printstring>
  43e6b2:	e8 d9 36 fe ff 	callq	-117031 <runtime.printnl>
  43e6b7:	e8 c4 34 fe ff 	callq	-117564 <runtime.printunlock>
  43e6bc:	e8 3f 34 fe ff 	callq	-117697 <runtime.printlock>
  43e6c1:	48 8d 05 96 b5 02 00 	leaq	177558(%rip), %rax
  43e6c8:	48 89 04 24 	movq	%rax, (%rsp)
  43e6cc:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  43e6d5:	e8 66 3d fe ff 	callq	-115354 <runtime.printstring>
  43e6da:	e8 a1 34 fe ff 	callq	-117599 <runtime.printunlock>
  43e6df:	48 8b 44 24 58 	movq	88(%rsp), %rax
  43e6e4:	48 8b 48 08 	movq	8(%rax), %rcx
  43e6e8:	48 85 c9 	testq	%rcx, %rcx
  43e6eb:	75 5f 	jne	95 <runtime.printOneCgoTraceback+0x13c>
  43e6ed:	e8 0e 34 fe ff 	callq	-117746 <runtime.printlock>
  43e6f2:	48 8d 05 be b5 02 00 	leaq	177598(%rip), %rax
  43e6f9:	48 89 04 24 	movq	%rax, (%rsp)
  43e6fd:	48 c7 44 24 08 03 00 00 00 	movq	$3, 8(%rsp)
  43e706:	e8 35 3d fe ff 	callq	-115403 <runtime.printstring>
  43e70b:	48 8b 44 24 48 	movq	72(%rsp), %rax
  43e710:	48 89 04 24 	movq	%rax, (%rsp)
  43e714:	e8 d7 3b fe ff 	callq	-115753 <runtime.printhex>
  43e719:	e8 72 36 fe ff 	callq	-117134 <runtime.printnl>
  43e71e:	e8 5d 34 fe ff 	callq	-117667 <runtime.printunlock>
  43e723:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43e728:	48 ff c0 	incq	%rax
  43e72b:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  43e730:	48 8b 51 28 	movq	40(%rcx), %rdx
  43e734:	48 85 d2 	testq	%rdx, %rdx
  43e737:	0f 85 05 ff ff ff 	jne	-251 <runtime.printOneCgoTraceback+0x32>
  43e73d:	48 89 44 24 60 	movq	%rax, 96(%rsp)
  43e742:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  43e747:	48 83 c4 40 	addq	$64, %rsp
  43e74b:	c3 	retq
  43e74c:	48 89 0c 24 	movq	%rcx, (%rsp)
  43e750:	e8 9b 8f ff ff 	callq	-28773 <runtime.gostringnocopy>
  43e755:	48 8b 44 24 08 	movq	8(%rsp), %rax
  43e75a:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  43e75f:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  43e764:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  43e769:	48 8b 54 24 58 	movq	88(%rsp), %rdx
  43e76e:	48 8b 5a 10 	movq	16(%rdx), %rbx
  43e772:	48 89 5c 24 20 	movq	%rbx, 32(%rsp)
  43e777:	e8 84 33 fe ff 	callq	-117884 <runtime.printlock>
  43e77c:	48 8b 44 24 30 	movq	48(%rsp), %rax
  43e781:	48 89 04 24 	movq	%rax, (%rsp)
  43e785:	48 8b 44 24 28 	movq	40(%rsp), %rax
  43e78a:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43e78f:	e8 ac 3c fe ff 	callq	-115540 <runtime.printstring>
  43e794:	48 8d 05 bd b4 02 00 	leaq	177341(%rip), %rax
  43e79b:	48 89 04 24 	movq	%rax, (%rsp)
  43e79f:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  43e7a8:	e8 93 3c fe ff 	callq	-115565 <runtime.printstring>
  43e7ad:	48 8b 44 24 20 	movq	32(%rsp), %rax
  43e7b2:	48 89 04 24 	movq	%rax, (%rsp)
  43e7b6:	e8 b5 39 fe ff 	callq	-116299 <runtime.printuint>
  43e7bb:	e8 80 35 fe ff 	callq	-117376 <runtime.printsp>
  43e7c0:	e8 bb 33 fe ff 	callq	-117829 <runtime.printunlock>
  43e7c5:	e9 23 ff ff ff 	jmp	-221 <runtime.printOneCgoTraceback+0xdd>
  43e7ca:	e8 31 33 fe ff 	callq	-117967 <runtime.printlock>
  43e7cf:	48 8d 05 4c c3 02 00 	leaq	181068(%rip), %rax
  43e7d6:	48 89 04 24 	movq	%rax, (%rsp)
  43e7da:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  43e7e3:	e8 58 3c fe ff 	callq	-115624 <runtime.printstring>
  43e7e8:	e8 93 33 fe ff 	callq	-117869 <runtime.printunlock>
  43e7ed:	e9 ca fe ff ff 	jmp	-310 <runtime.printOneCgoTraceback+0xac>
  43e7f2:	48 89 d0 	movq	%rdx, %rax
  43e7f5:	e9 43 ff ff ff 	jmp	-189 <runtime.printOneCgoTraceback+0x12d>
  43e7fa:	e8 71 5d 00 00 	callq	23921 <runtime.morestack_noctxt>
  43e7ff:	e9 0c fe ff ff 	jmp	-500 <runtime.printOneCgoTraceback>
  43e804:	cc 	int3
  43e805:	cc 	int3
  43e806:	cc 	int3
  43e807:	cc 	int3
  43e808:	cc 	int3
  43e809:	cc 	int3
  43e80a:	cc 	int3
  43e80b:	cc 	int3
  43e80c:	cc 	int3
  43e80d:	cc 	int3
  43e80e:	cc 	int3
  43e80f:	cc 	int3

runtime.callCgoSymbolizer:
  43e810:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43e819:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43e81d:	76 68 	jbe	104 <runtime.callCgoSymbolizer+0x77>
  43e81f:	48 83 ec 20 	subq	$32, %rsp
  43e823:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  43e828:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  43e82d:	8b 05 c1 50 08 00 	movl	544961(%rip), %eax
  43e833:	85 c0 	testl	%eax, %eax
  43e835:	76 2e 	jbe	46 <runtime.callCgoSymbolizer+0x55>
  43e837:	48 8d 05 62 f7 02 00 	leaq	194402(%rip), %rax
  43e83e:	48 8b 0d f3 8d 06 00 	movq	429555(%rip), %rcx
  43e845:	48 89 0c 24 	movq	%rcx, (%rsp)
  43e849:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  43e84e:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  43e853:	48 8b 08 	movq	(%rax), %rcx
  43e856:	48 89 c2 	movq	%rax, %rdx
  43e859:	ff d1 	callq	*%rcx
  43e85b:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  43e860:	48 83 c4 20 	addq	$32, %rsp
  43e864:	c3 	retq
  43e865:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  43e86e:	48 8b 48 30 	movq	48(%rax), %rcx
  43e872:	48 8b 89 c0 00 00 00 	movq	192(%rcx), %rcx
  43e879:	48 39 c1 	cmpq	%rax, %rcx
  43e87c:	75 b9 	jne	-71 <runtime.callCgoSymbolizer+0x27>
  43e87e:	48 8d 05 73 f7 02 00 	leaq	194419(%rip), %rax
  43e885:	eb b7 	jmp	-73 <runtime.callCgoSymbolizer+0x2e>
  43e887:	e8 e4 5c 00 00 	callq	23780 <runtime.morestack_noctxt>
  43e88c:	eb 82 	jmp	-126 <runtime.callCgoSymbolizer>
  43e88e:	cc 	int3
  43e88f:	cc 	int3

runtime.cgoContextPCs:
  43e890:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43e899:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43e89d:	0f 86 b5 00 00 00 	jbe	181 <runtime.cgoContextPCs+0xc8>
  43e8a3:	48 83 ec 40 	subq	$64, %rsp
  43e8a7:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  43e8ac:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  43e8b1:	48 8b 05 88 8d 06 00 	movq	429448(%rip), %rax
  43e8b8:	48 85 c0 	testq	%rax, %rax
  43e8bb:	0f 84 86 00 00 00 	je	134 <runtime.cgoContextPCs+0xb7>
  43e8c1:	8b 05 2d 50 08 00 	movl	544813(%rip), %eax
  43e8c7:	85 c0 	testl	%eax, %eax
  43e8c9:	76 5a 	jbe	90 <runtime.cgoContextPCs+0x95>
  43e8cb:	48 8d 05 ce f6 02 00 	leaq	194254(%rip), %rax
  43e8d2:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  43e8d7:	48 85 c9 	testq	%rcx, %rcx
  43e8da:	76 75 	jbe	117 <runtime.cgoContextPCs+0xc1>
  43e8dc:	48 c7 44 24 20 00 00 00 00 	movq	$0, 32(%rsp)
  43e8e5:	48 8b 5c 24 48 	movq	72(%rsp), %rbx
  43e8ea:	48 89 5c 24 18 	movq	%rbx, 24(%rsp)
  43e8ef:	48 8b 5c 24 50 	movq	80(%rsp), %rbx
  43e8f4:	48 89 5c 24 28 	movq	%rbx, 40(%rsp)
  43e8f9:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  43e8fe:	48 8b 0d 3b 8d 06 00 	movq	429371(%rip), %rcx
  43e905:	48 89 0c 24 	movq	%rcx, (%rsp)
  43e909:	48 8d 4c 24 18 	leaq	24(%rsp), %rcx
  43e90e:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  43e913:	48 8b 08 	movq	(%rax), %rcx
  43e916:	48 89 c2 	movq	%rax, %rdx
  43e919:	ff d1 	callq	*%rcx
  43e91b:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  43e920:	48 83 c4 40 	addq	$64, %rsp
  43e924:	c3 	retq
  43e925:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  43e92e:	48 8b 48 30 	movq	48(%rax), %rcx
  43e932:	48 8b 89 c0 00 00 00 	movq	192(%rcx), %rcx
  43e939:	48 39 c1 	cmpq	%rax, %rcx
  43e93c:	75 8d 	jne	-115 <runtime.cgoContextPCs+0x3b>
  43e93e:	48 8d 05 b3 f6 02 00 	leaq	194227(%rip), %rax
  43e945:	eb 8b 	jmp	-117 <runtime.cgoContextPCs+0x42>
  43e947:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  43e94c:	48 83 c4 40 	addq	$64, %rsp
  43e950:	c3 	retq
  43e951:	e8 ea 10 fe ff 	callq	-126742 <runtime.panicindex>
  43e956:	0f 0b 	ud2
  43e958:	e8 13 5c 00 00 	callq	23571 <runtime.morestack_noctxt>
  43e95d:	e9 2e ff ff ff 	jmp	-210 <runtime.cgoContextPCs>
  43e962:	cc 	int3
  43e963:	cc 	int3
  43e964:	cc 	int3
  43e965:	cc 	int3
  43e966:	cc 	int3
  43e967:	cc 	int3
  43e968:	cc 	int3
  43e969:	cc 	int3
  43e96a:	cc 	int3
  43e96b:	cc 	int3
  43e96c:	cc 	int3
  43e96d:	cc 	int3
  43e96e:	cc 	int3
  43e96f:	cc 	int3

runtime.(*_type).string:
  43e970:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43e979:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43e97d:	0f 86 92 00 00 00 	jbe	146 <runtime.(*_type).string+0xa5>
  43e983:	48 83 ec 20 	subq	$32, %rsp
  43e987:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  43e98c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  43e991:	48 8b 44 24 28 	movq	40(%rsp), %rax
  43e996:	8b 48 28 	movl	40(%rax), %ecx
  43e999:	89 4c 24 08 	movl	%ecx, 8(%rsp)
  43e99d:	48 89 04 24 	movq	%rax, (%rsp)
  43e9a1:	e8 8a 04 00 00 	callq	1162 <runtime.(*_type).nameOff>
  43e9a6:	48 8b 44 24 10 	movq	16(%rsp), %rax
  43e9ab:	48 89 04 24 	movq	%rax, (%rsp)
  43e9af:	e8 dc 0b 00 00 	callq	3036 <runtime.name.name>
  43e9b4:	48 8b 44 24 08 	movq	8(%rsp), %rax
  43e9b9:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  43e9be:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  43e9c3:	0f b6 52 14 	movzbl	20(%rdx), %edx
  43e9c7:	f6 c2 02 	testb	$2, %dl
  43e9ca:	74 2e 	je	46 <runtime.(*_type).string+0x8a>
  43e9cc:	48 83 f9 01 	cmpq	$1, %rcx
  43e9d0:	72 3c 	jb	60 <runtime.(*_type).string+0x9e>
  43e9d2:	48 ff c9 	decq	%rcx
  43e9d5:	48 89 ca 	movq	%rcx, %rdx
  43e9d8:	48 f7 d9 	negq	%rcx
  43e9db:	48 c1 f9 3f 	sarq	$63, %rcx
  43e9df:	48 83 e1 01 	andq	$1, %rcx
  43e9e3:	48 01 c8 	addq	%rcx, %rax
  43e9e6:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  43e9eb:	48 89 54 24 38 	movq	%rdx, 56(%rsp)
  43e9f0:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  43e9f5:	48 83 c4 20 	addq	$32, %rsp
  43e9f9:	c3 	retq
  43e9fa:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  43e9ff:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  43ea04:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  43ea09:	48 83 c4 20 	addq	$32, %rsp
  43ea0d:	c3 	retq
  43ea0e:	e8 9d 10 fe ff 	callq	-126819 <runtime.panicslice>
  43ea13:	0f 0b 	ud2
  43ea15:	e8 56 5b 00 00 	callq	23382 <runtime.morestack_noctxt>
  43ea1a:	e9 51 ff ff ff 	jmp	-175 <runtime.(*_type).string>
  43ea1f:	cc 	int3

runtime.(*_type).uncommon:
  43ea20:	48 8b 44 24 08 	movq	8(%rsp), %rax
  43ea25:	0f b6 48 14 	movzbl	20(%rax), %ecx
  43ea29:	f6 c1 01 	testb	$1, %cl
  43ea2c:	0f 84 8e 00 00 00 	je	142 <runtime.(*_type).uncommon+0xa0>
  43ea32:	0f b6 48 17 	movzbl	23(%rax), %ecx
  43ea36:	83 e1 1f 	andl	$31, %ecx
  43ea39:	80 f9 14 	cmpb	$20, %cl
  43ea3c:	77 46 	ja	70 <runtime.(*_type).uncommon+0x64>
  43ea3e:	80 f9 12 	cmpb	$18, %cl
  43ea41:	77 28 	ja	40 <runtime.(*_type).uncommon+0x4b>
  43ea43:	80 f9 11 	cmpb	$17, %cl
  43ea46:	74 19 	je	25 <runtime.(*_type).uncommon+0x41>
  43ea48:	80 f9 12 	cmpb	$18, %cl
  43ea4b:	74 0a 	je	10 <runtime.(*_type).uncommon+0x37>
  43ea4d:	48 83 c0 30 	addq	$48, %rax
  43ea51:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43ea56:	c3 	retq
  43ea57:	48 83 c0 40 	addq	$64, %rax
  43ea5b:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43ea60:	c3 	retq
  43ea61:	48 83 c0 48 	addq	$72, %rax
  43ea65:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43ea6a:	c3 	retq
  43ea6b:	80 f9 13 	cmpb	$19, %cl
  43ea6e:	75 0a 	jne	10 <runtime.(*_type).uncommon+0x5a>
  43ea70:	48 83 c0 38 	addq	$56, %rax
  43ea74:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43ea79:	c3 	retq
  43ea7a:	48 83 c0 50 	addq	$80, %rax
  43ea7e:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43ea83:	c3 	retq
  43ea84:	80 f9 16 	cmpb	$22, %cl
  43ea87:	77 19 	ja	25 <runtime.(*_type).uncommon+0x82>
  43ea89:	80 f9 15 	cmpb	$21, %cl
  43ea8c:	75 0a 	jne	10 <runtime.(*_type).uncommon+0x78>
  43ea8e:	48 83 c0 58 	addq	$88, %rax
  43ea92:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43ea97:	c3 	retq
  43ea98:	48 83 c0 38 	addq	$56, %rax
  43ea9c:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43eaa1:	c3 	retq
  43eaa2:	80 f9 17 	cmpb	$23, %cl
  43eaa5:	74 0f 	je	15 <runtime.(*_type).uncommon+0x96>
  43eaa7:	80 f9 19 	cmpb	$25, %cl
  43eaaa:	75 a1 	jne	-95 <runtime.(*_type).uncommon+0x2d>
  43eaac:	48 83 c0 50 	addq	$80, %rax
  43eab0:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43eab5:	c3 	retq
  43eab6:	48 83 c0 38 	addq	$56, %rax
  43eaba:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43eabf:	c3 	retq
  43eac0:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  43eac9:	c3 	retq
  43eaca:	cc 	int3
  43eacb:	cc 	int3
  43eacc:	cc 	int3
  43eacd:	cc 	int3
  43eace:	cc 	int3
  43eacf:	cc 	int3

runtime.reflectOffsLock:
  43ead0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43ead9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43eadd:	76 28 	jbe	40 <runtime.reflectOffsLock+0x37>
  43eadf:	48 83 ec 10 	subq	$16, %rsp
  43eae3:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  43eae8:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  43eaed:	48 8d 05 ac 8c 06 00 	leaq	429228(%rip), %rax
  43eaf4:	48 89 04 24 	movq	%rax, (%rsp)
  43eaf8:	e8 23 aa fc ff 	callq	-218589 <runtime.lock>
  43eafd:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  43eb02:	48 83 c4 10 	addq	$16, %rsp
  43eb06:	c3 	retq
  43eb07:	e8 64 5a 00 00 	callq	23140 <runtime.morestack_noctxt>
  43eb0c:	eb c2 	jmp	-62 <runtime.reflectOffsLock>
  43eb0e:	cc 	int3
  43eb0f:	cc 	int3

runtime.reflectOffsUnlock:
  43eb10:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43eb19:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43eb1d:	76 28 	jbe	40 <runtime.reflectOffsUnlock+0x37>
  43eb1f:	48 83 ec 10 	subq	$16, %rsp
  43eb23:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  43eb28:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  43eb2d:	48 8d 05 6c 8c 06 00 	leaq	429164(%rip), %rax
  43eb34:	48 89 04 24 	movq	%rax, (%rsp)
  43eb38:	e8 83 ab fc ff 	callq	-218237 <runtime.unlock>
  43eb3d:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  43eb42:	48 83 c4 10 	addq	$16, %rsp
  43eb46:	c3 	retq
  43eb47:	e8 24 5a 00 00 	callq	23076 <runtime.morestack_noctxt>
  43eb4c:	eb c2 	jmp	-62 <runtime.reflectOffsUnlock>
  43eb4e:	cc 	int3
  43eb4f:	cc 	int3

runtime.resolveNameOff:
  43eb50:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43eb59:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43eb5d:	0f 86 bd 02 00 00 	jbe	701 <runtime.resolveNameOff+0x2d0>
  43eb63:	48 83 ec 60 	subq	$96, %rsp
  43eb67:	48 89 6c 24 58 	movq	%rbp, 88(%rsp)
  43eb6c:	48 8d 6c 24 58 	leaq	88(%rsp), %rbp
  43eb71:	8b 44 24 70 	movl	112(%rsp), %eax
  43eb75:	85 c0 	testl	%eax, %eax
  43eb77:	0f 84 ca 01 00 00 	je	458 <runtime.resolveNameOff+0x1f7>
  43eb7d:	48 8b 4c 24 68 	movq	104(%rsp), %rcx
  43eb82:	48 8d 15 b7 6c 06 00 	leaq	421047(%rip), %rdx
  43eb89:	eb 07 	jmp	7 <runtime.resolveNameOff+0x42>
  43eb8b:	48 8b 92 c0 01 00 00 	movq	448(%rdx), %rdx
  43eb92:	48 85 d2 	testq	%rdx, %rdx
  43eb95:	74 36 	je	54 <runtime.resolveNameOff+0x7d>
  43eb97:	48 8b 9a c8 00 00 00 	movq	200(%rdx), %rbx
  43eb9e:	48 39 d9 	cmpq	%rbx, %rcx
  43eba1:	72 e8 	jb	-24 <runtime.resolveNameOff+0x3b>
  43eba3:	48 8b b2 d0 00 00 00 	movq	208(%rdx), %rsi
  43ebaa:	48 39 f1 	cmpq	%rsi, %rcx
  43ebad:	73 dc 	jae	-36 <runtime.resolveNameOff+0x3b>
  43ebaf:	48 63 c8 	movslq	%eax, %rcx
  43ebb2:	48 01 d9 	addq	%rbx, %rcx
  43ebb5:	48 39 f1 	cmpq	%rsi, %rcx
  43ebb8:	0f 87 b7 01 00 00 	ja	439 <runtime.resolveNameOff+0x225>
  43ebbe:	48 89 4c 24 78 	movq	%rcx, 120(%rsp)
  43ebc3:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  43ebc8:	48 83 c4 60 	addq	$96, %rsp
  43ebcc:	c3 	retq
  43ebcd:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  43ebd2:	e8 f9 fe ff ff 	callq	-263 <runtime.reflectOffsLock>
  43ebd7:	48 8d 05 a2 bd 01 00 	leaq	114082(%rip), %rax
  43ebde:	48 89 04 24 	movq	%rax, (%rsp)
  43ebe2:	48 8b 05 c7 8b 06 00 	movq	428999(%rip), %rax
  43ebe9:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43ebee:	8b 44 24 70 	movl	112(%rsp), %eax
  43ebf2:	89 44 24 10 	movl	%eax, 16(%rsp)
  43ebf6:	e8 15 8e fc ff 	callq	-225771 <runtime.mapaccess2_fast32>
  43ebfb:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43ec00:	0f b6 4c 24 20 	movzbl	32(%rsp), %ecx
  43ec05:	88 4c 24 2f 	movb	%cl, 47(%rsp)
  43ec09:	48 8b 00 	movq	(%rax), %rax
  43ec0c:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  43ec11:	e8 fa fe ff ff 	callq	-262 <runtime.reflectOffsUnlock>
  43ec16:	0f b6 44 24 2f 	movzbl	47(%rsp), %eax
  43ec1b:	84 c0 	testb	%al, %al
  43ec1d:	0f 85 10 01 00 00 	jne	272 <runtime.resolveNameOff+0x1e3>
  43ec23:	e8 d8 2e fe ff 	callq	-119080 <runtime.printlock>
  43ec28:	48 8d 05 72 c0 02 00 	leaq	180338(%rip), %rax
  43ec2f:	48 89 04 24 	movq	%rax, (%rsp)
  43ec33:	48 c7 44 24 08 11 00 00 00 	movq	$17, 8(%rsp)
  43ec3c:	e8 ff 37 fe ff 	callq	-116737 <runtime.printstring>
  43ec41:	8b 44 24 70 	movl	112(%rsp), %eax
  43ec45:	48 63 c0 	movslq	%eax, %rax
  43ec48:	48 89 04 24 	movq	%rax, (%rsp)
  43ec4c:	e8 9f 36 fe ff 	callq	-117089 <runtime.printhex>
  43ec51:	48 8d 05 95 b1 02 00 	leaq	176533(%rip), %rax
  43ec58:	48 89 04 24 	movq	%rax, (%rsp)
  43ec5c:	48 c7 44 24 08 06 00 00 00 	movq	$6, 8(%rsp)
  43ec65:	e8 d6 37 fe ff 	callq	-116778 <runtime.printstring>
  43ec6a:	48 8b 44 24 30 	movq	48(%rsp), %rax
  43ec6f:	48 89 04 24 	movq	%rax, (%rsp)
  43ec73:	e8 78 36 fe ff 	callq	-117128 <runtime.printhex>
  43ec78:	48 8d 05 93 bd 02 00 	leaq	179603(%rip), %rax
  43ec7f:	48 89 04 24 	movq	%rax, (%rsp)
  43ec83:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  43ec8c:	e8 af 37 fe ff 	callq	-116817 <runtime.printstring>
  43ec91:	e8 ea 2e fe ff 	callq	-119062 <runtime.printunlock>
  43ec96:	48 8d 05 a3 6b 06 00 	leaq	420771(%rip), %rax
  43ec9d:	e9 86 00 00 00 	jmp	134 <runtime.resolveNameOff+0x1d8>
  43eca2:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  43eca7:	48 8b 88 c8 00 00 00 	movq	200(%rax), %rcx
  43ecae:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  43ecb3:	48 8b 90 d0 00 00 00 	movq	208(%rax), %rdx
  43ecba:	48 89 54 24 38 	movq	%rdx, 56(%rsp)
  43ecbf:	e8 3c 2e fe ff 	callq	-119236 <runtime.printlock>
  43ecc4:	48 8d 05 ea b1 02 00 	leaq	176618(%rip), %rax
  43eccb:	48 89 04 24 	movq	%rax, (%rsp)
  43eccf:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  43ecd8:	e8 63 37 fe ff 	callq	-116893 <runtime.printstring>
  43ecdd:	48 8b 44 24 40 	movq	64(%rsp), %rax
  43ece2:	48 89 04 24 	movq	%rax, (%rsp)
  43ece6:	e8 05 36 fe ff 	callq	-117243 <runtime.printhex>
  43eceb:	48 8d 05 95 b2 02 00 	leaq	176789(%rip), %rax
  43ecf2:	48 89 04 24 	movq	%rax, (%rsp)
  43ecf6:	48 c7 44 24 08 08 00 00 00 	movq	$8, 8(%rsp)
  43ecff:	e8 3c 37 fe ff 	callq	-116932 <runtime.printstring>
  43ed04:	48 8b 44 24 38 	movq	56(%rsp), %rax
  43ed09:	48 89 04 24 	movq	%rax, (%rsp)
  43ed0d:	e8 de 35 fe ff 	callq	-117282 <runtime.printhex>
  43ed12:	e8 79 30 fe ff 	callq	-118663 <runtime.printnl>
  43ed17:	e8 64 2e fe ff 	callq	-119196 <runtime.printunlock>
  43ed1c:	48 8b 44 24 50 	movq	80(%rsp), %rax
  43ed21:	48 8b 80 c0 01 00 00 	movq	448(%rax), %rax
  43ed28:	48 85 c0 	testq	%rax, %rax
  43ed2b:	0f 85 71 ff ff ff 	jne	-143 <runtime.resolveNameOff+0x152>
  43ed31:	eb 27 	jmp	39 <runtime.resolveNameOff+0x20a>
  43ed33:	48 8b 44 24 48 	movq	72(%rsp), %rax
  43ed38:	48 89 44 24 78 	movq	%rax, 120(%rsp)
  43ed3d:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  43ed42:	48 83 c4 60 	addq	$96, %rsp
  43ed46:	c3 	retq
  43ed47:	48 c7 44 24 78 00 00 00 00 	movq	$0, 120(%rsp)
  43ed50:	48 8b 6c 24 58 	movq	88(%rsp), %rbp
  43ed55:	48 83 c4 60 	addq	$96, %rsp
  43ed59:	c3 	retq
  43ed5a:	48 8d 05 27 ea 02 00 	leaq	191015(%rip), %rax
  43ed61:	48 89 04 24 	movq	%rax, (%rsp)
  43ed65:	48 c7 44 24 08 2e 00 00 00 	movq	$46, 8(%rsp)
  43ed6e:	e8 5d 24 fe ff 	callq	-121763 <runtime.throw>
  43ed73:	0f 0b 	ud2
  43ed75:	48 89 5c 24 40 	movq	%rbx, 64(%rsp)
  43ed7a:	48 89 74 24 38 	movq	%rsi, 56(%rsp)
  43ed7f:	e8 7c 2d fe ff 	callq	-119428 <runtime.printlock>
  43ed84:	48 8d 05 16 bf 02 00 	leaq	179990(%rip), %rax
  43ed8b:	48 89 04 24 	movq	%rax, (%rsp)
  43ed8f:	48 c7 44 24 08 11 00 00 00 	movq	$17, 8(%rsp)
  43ed98:	e8 a3 36 fe ff 	callq	-117085 <runtime.printstring>
  43ed9d:	8b 44 24 70 	movl	112(%rsp), %eax
  43eda1:	48 63 c0 	movslq	%eax, %rax
  43eda4:	48 89 04 24 	movq	%rax, (%rsp)
  43eda8:	e8 43 35 fe ff 	callq	-117437 <runtime.printhex>
  43edad:	48 8d 05 38 ba 02 00 	leaq	178744(%rip), %rax
  43edb4:	48 89 04 24 	movq	%rax, (%rsp)
  43edb8:	48 c7 44 24 08 0e 00 00 00 	movq	$14, 8(%rsp)
  43edc1:	e8 7a 36 fe ff 	callq	-117126 <runtime.printstring>
  43edc6:	48 8b 44 24 40 	movq	64(%rsp), %rax
  43edcb:	48 89 04 24 	movq	%rax, (%rsp)
  43edcf:	e8 1c 35 fe ff 	callq	-117476 <runtime.printhex>
  43edd4:	48 8d 05 af ae 02 00 	leaq	175791(%rip), %rax
  43eddb:	48 89 04 24 	movq	%rax, (%rsp)
  43eddf:	48 c7 44 24 08 03 00 00 00 	movq	$3, 8(%rsp)
  43ede8:	e8 53 36 fe ff 	callq	-117165 <runtime.printstring>
  43eded:	48 8b 44 24 38 	movq	56(%rsp), %rax
  43edf2:	48 89 04 24 	movq	%rax, (%rsp)
  43edf6:	e8 f5 34 fe ff 	callq	-117515 <runtime.printhex>
  43edfb:	e8 90 2f fe ff 	callq	-118896 <runtime.printnl>
  43ee00:	e8 7b 2d fe ff 	callq	-119429 <runtime.printunlock>
  43ee05:	48 8d 05 a1 dc 02 00 	leaq	187553(%rip), %rax
  43ee0c:	48 89 04 24 	movq	%rax, (%rsp)
  43ee10:	48 c7 44 24 08 21 00 00 00 	movq	$33, 8(%rsp)
  43ee19:	e8 b2 23 fe ff 	callq	-121934 <runtime.throw>
  43ee1e:	0f 0b 	ud2
  43ee20:	e8 4b 57 00 00 	callq	22347 <runtime.morestack_noctxt>
  43ee25:	e9 26 fd ff ff 	jmp	-730 <runtime.resolveNameOff>
  43ee2a:	cc 	int3
  43ee2b:	cc 	int3
  43ee2c:	cc 	int3
  43ee2d:	cc 	int3
  43ee2e:	cc 	int3
  43ee2f:	cc 	int3

runtime.(*_type).nameOff:
  43ee30:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43ee39:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43ee3d:	76 38 	jbe	56 <runtime.(*_type).nameOff+0x47>
  43ee3f:	48 83 ec 20 	subq	$32, %rsp
  43ee43:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  43ee48:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  43ee4d:	48 8b 44 24 28 	movq	40(%rsp), %rax
  43ee52:	48 89 04 24 	movq	%rax, (%rsp)
  43ee56:	8b 44 24 30 	movl	48(%rsp), %eax
  43ee5a:	89 44 24 08 	movl	%eax, 8(%rsp)
  43ee5e:	e8 ed fc ff ff 	callq	-787 <runtime.resolveNameOff>
  43ee63:	48 8b 44 24 10 	movq	16(%rsp), %rax
  43ee68:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  43ee6d:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  43ee72:	48 83 c4 20 	addq	$32, %rsp
  43ee76:	c3 	retq
  43ee77:	e8 f4 56 00 00 	callq	22260 <runtime.morestack_noctxt>
  43ee7c:	eb b2 	jmp	-78 <runtime.(*_type).nameOff>
  43ee7e:	cc 	int3
  43ee7f:	cc 	int3

runtime.resolveTypeOff:
  43ee80:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43ee89:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43ee8d:	0f 86 1b 03 00 00 	jbe	795 <runtime.resolveTypeOff+0x32e>
  43ee93:	48 83 ec 58 	subq	$88, %rsp
  43ee97:	48 89 6c 24 50 	movq	%rbp, 80(%rsp)
  43ee9c:	48 8d 6c 24 50 	leaq	80(%rsp), %rbp
  43eea1:	8b 44 24 68 	movl	104(%rsp), %eax
  43eea5:	85 c0 	testl	%eax, %eax
  43eea7:	0f 84 28 02 00 00 	je	552 <runtime.resolveTypeOff+0x255>
  43eead:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  43eeb2:	48 8d 15 87 69 06 00 	leaq	420231(%rip), %rdx
  43eeb9:	eb 07 	jmp	7 <runtime.resolveTypeOff+0x42>
  43eebb:	48 8b 92 c0 01 00 00 	movq	448(%rdx), %rdx
  43eec2:	48 85 d2 	testq	%rdx, %rdx
  43eec5:	0f 84 03 02 00 00 	je	515 <runtime.resolveTypeOff+0x24e>
  43eecb:	48 8b 9a c8 00 00 00 	movq	200(%rdx), %rbx
  43eed2:	48 39 d9 	cmpq	%rbx, %rcx
  43eed5:	72 e4 	jb	-28 <runtime.resolveTypeOff+0x3b>
  43eed7:	48 8b 9a d0 00 00 00 	movq	208(%rdx), %rbx
  43eede:	48 39 d9 	cmpq	%rbx, %rcx
  43eee1:	73 d8 	jae	-40 <runtime.resolveTypeOff+0x3b>
  43eee3:	48 85 d2 	testq	%rdx, %rdx
  43eee6:	74 76 	je	118 <runtime.resolveTypeOff+0xde>
  43eee8:	48 89 54 24 48 	movq	%rdx, 72(%rsp)
  43eeed:	48 8b 8a b0 01 00 00 	movq	432(%rdx), %rcx
  43eef4:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  43eef9:	48 8d 0d 40 bb 01 00 	leaq	113472(%rip), %rcx
  43ef00:	48 89 0c 24 	movq	%rcx, (%rsp)
  43ef04:	89 44 24 10 	movl	%eax, 16(%rsp)
  43ef08:	e8 63 89 fc ff 	callq	-226973 <runtime.mapaccess1_fast32>
  43ef0d:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43ef12:	48 8b 00 	movq	(%rax), %rax
  43ef15:	48 85 c0 	testq	%rax, %rax
  43ef18:	75 35 	jne	53 <runtime.resolveTypeOff+0xcf>
  43ef1a:	48 8b 44 24 48 	movq	72(%rsp), %rax
  43ef1f:	48 8b 88 c8 00 00 00 	movq	200(%rax), %rcx
  43ef26:	8b 54 24 68 	movl	104(%rsp), %edx
  43ef2a:	48 63 da 	movslq	%edx, %rbx
  43ef2d:	48 01 cb 	addq	%rcx, %rbx
  43ef30:	48 8b 80 d0 00 00 00 	movq	208(%rax), %rax
  43ef37:	48 39 c3 	cmpq	%rax, %rbx
  43ef3a:	0f 87 a8 01 00 00 	ja	424 <runtime.resolveTypeOff+0x268>
  43ef40:	48 89 5c 24 70 	movq	%rbx, 112(%rsp)
  43ef45:	48 8b 6c 24 50 	movq	80(%rsp), %rbp
  43ef4a:	48 83 c4 58 	addq	$88, %rsp
  43ef4e:	c3 	retq
  43ef4f:	48 89 44 24 70 	movq	%rax, 112(%rsp)
  43ef54:	48 8b 6c 24 50 	movq	80(%rsp), %rbp
  43ef59:	48 83 c4 58 	addq	$88, %rsp
  43ef5d:	c3 	retq
  43ef5e:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  43ef63:	e8 68 fb ff ff 	callq	-1176 <runtime.reflectOffsLock>
  43ef68:	48 8d 05 11 ba 01 00 	leaq	113169(%rip), %rax
  43ef6f:	48 89 04 24 	movq	%rax, (%rsp)
  43ef73:	48 8b 05 36 88 06 00 	movq	428086(%rip), %rax
  43ef7a:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43ef7f:	8b 44 24 68 	movl	104(%rsp), %eax
  43ef83:	89 44 24 10 	movl	%eax, 16(%rsp)
  43ef87:	e8 e4 88 fc ff 	callq	-227100 <runtime.mapaccess1_fast32>
  43ef8c:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43ef91:	48 8b 00 	movq	(%rax), %rax
  43ef94:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  43ef99:	e8 72 fb ff ff 	callq	-1166 <runtime.reflectOffsUnlock>
  43ef9e:	48 8b 44 24 38 	movq	56(%rsp), %rax
  43efa3:	48 85 c0 	testq	%rax, %rax
  43efa6:	0f 85 13 01 00 00 	jne	275 <runtime.resolveTypeOff+0x23f>
  43efac:	e8 4f 2b fe ff 	callq	-119985 <runtime.printlock>
  43efb1:	48 8d 05 2d bd 02 00 	leaq	179501(%rip), %rax
  43efb8:	48 89 04 24 	movq	%rax, (%rsp)
  43efbc:	48 c7 44 24 08 11 00 00 00 	movq	$17, 8(%rsp)
  43efc5:	e8 76 34 fe ff 	callq	-117642 <runtime.printstring>
  43efca:	8b 44 24 68 	movl	104(%rsp), %eax
  43efce:	48 63 c0 	movslq	%eax, %rax
  43efd1:	48 89 04 24 	movq	%rax, (%rsp)
  43efd5:	e8 16 33 fe ff 	callq	-117994 <runtime.printhex>
  43efda:	48 8d 05 0c ae 02 00 	leaq	175628(%rip), %rax
  43efe1:	48 89 04 24 	movq	%rax, (%rsp)
  43efe5:	48 c7 44 24 08 06 00 00 00 	movq	$6, 8(%rsp)
  43efee:	e8 4d 34 fe ff 	callq	-117683 <runtime.printstring>
  43eff3:	48 8b 44 24 20 	movq	32(%rsp), %rax
  43eff8:	48 89 04 24 	movq	%rax, (%rsp)
  43effc:	e8 ef 32 fe ff 	callq	-118033 <runtime.printhex>
  43f001:	48 8d 05 0a ba 02 00 	leaq	178698(%rip), %rax
  43f008:	48 89 04 24 	movq	%rax, (%rsp)
  43f00c:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  43f015:	e8 26 34 fe ff 	callq	-117722 <runtime.printstring>
  43f01a:	e8 61 2b fe ff 	callq	-119967 <runtime.printunlock>
  43f01f:	48 8d 05 1a 68 06 00 	leaq	419866(%rip), %rax
  43f026:	e9 86 00 00 00 	jmp	134 <runtime.resolveTypeOff+0x231>
  43f02b:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  43f030:	48 8b 88 c8 00 00 00 	movq	200(%rax), %rcx
  43f037:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  43f03c:	48 8b 90 d0 00 00 00 	movq	208(%rax), %rdx
  43f043:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  43f048:	e8 b3 2a fe ff 	callq	-120141 <runtime.printlock>
  43f04d:	48 8d 05 61 ae 02 00 	leaq	175713(%rip), %rax
  43f054:	48 89 04 24 	movq	%rax, (%rsp)
  43f058:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  43f061:	e8 da 33 fe ff 	callq	-117798 <runtime.printstring>
  43f066:	48 8b 44 24 30 	movq	48(%rsp), %rax
  43f06b:	48 89 04 24 	movq	%rax, (%rsp)
  43f06f:	e8 7c 32 fe ff 	callq	-118148 <runtime.printhex>
  43f074:	48 8d 05 0c af 02 00 	leaq	175884(%rip), %rax
  43f07b:	48 89 04 24 	movq	%rax, (%rsp)
  43f07f:	48 c7 44 24 08 08 00 00 00 	movq	$8, 8(%rsp)
  43f088:	e8 b3 33 fe ff 	callq	-117837 <runtime.printstring>
  43f08d:	48 8b 44 24 28 	movq	40(%rsp), %rax
  43f092:	48 89 04 24 	movq	%rax, (%rsp)
  43f096:	e8 55 32 fe ff 	callq	-118187 <runtime.printhex>
  43f09b:	e8 f0 2c fe ff 	callq	-119568 <runtime.printnl>
  43f0a0:	e8 db 2a fe ff 	callq	-120101 <runtime.printunlock>
  43f0a5:	48 8b 44 24 40 	movq	64(%rsp), %rax
  43f0aa:	48 8b 80 c0 01 00 00 	movq	448(%rax), %rax
  43f0b1:	48 85 c0 	testq	%rax, %rax
  43f0b4:	0f 85 71 ff ff ff 	jne	-143 <runtime.resolveTypeOff+0x1ab>
  43f0ba:	e9 d4 00 00 00 	jmp	212 <runtime.resolveTypeOff+0x313>
  43f0bf:	48 89 44 24 70 	movq	%rax, 112(%rsp)
  43f0c4:	48 8b 6c 24 50 	movq	80(%rsp), %rbp
  43f0c9:	48 83 c4 58 	addq	$88, %rsp
  43f0cd:	c3 	retq
  43f0ce:	31 d2 	xorl	%edx, %edx
  43f0d0:	e9 0e fe ff ff 	jmp	-498 <runtime.resolveTypeOff+0x63>
  43f0d5:	48 c7 44 24 70 00 00 00 00 	movq	$0, 112(%rsp)
  43f0de:	48 8b 6c 24 50 	movq	80(%rsp), %rbp
  43f0e3:	48 83 c4 58 	addq	$88, %rsp
  43f0e7:	c3 	retq
  43f0e8:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  43f0ed:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  43f0f2:	e8 09 2a fe ff 	callq	-120311 <runtime.printlock>
  43f0f7:	48 8d 05 e7 bb 02 00 	leaq	179175(%rip), %rax
  43f0fe:	48 89 04 24 	movq	%rax, (%rsp)
  43f102:	48 c7 44 24 08 11 00 00 00 	movq	$17, 8(%rsp)
  43f10b:	e8 30 33 fe ff 	callq	-117968 <runtime.printstring>
  43f110:	8b 44 24 68 	movl	104(%rsp), %eax
  43f114:	48 63 c0 	movslq	%eax, %rax
  43f117:	48 89 04 24 	movq	%rax, (%rsp)
  43f11b:	e8 d0 31 fe ff 	callq	-118320 <runtime.printhex>
  43f120:	48 8d 05 c5 b6 02 00 	leaq	177861(%rip), %rax
  43f127:	48 89 04 24 	movq	%rax, (%rsp)
  43f12b:	48 c7 44 24 08 0e 00 00 00 	movq	$14, 8(%rsp)
  43f134:	e8 07 33 fe ff 	callq	-118009 <runtime.printstring>
  43f139:	48 8b 44 24 30 	movq	48(%rsp), %rax
  43f13e:	48 89 04 24 	movq	%rax, (%rsp)
  43f142:	e8 a9 31 fe ff 	callq	-118359 <runtime.printhex>
  43f147:	48 8d 05 3c ab 02 00 	leaq	174908(%rip), %rax
  43f14e:	48 89 04 24 	movq	%rax, (%rsp)
  43f152:	48 c7 44 24 08 03 00 00 00 	movq	$3, 8(%rsp)
  43f15b:	e8 e0 32 fe ff 	callq	-118048 <runtime.printstring>
  43f160:	48 8b 44 24 28 	movq	40(%rsp), %rax
  43f165:	48 89 04 24 	movq	%rax, (%rsp)
  43f169:	e8 82 31 fe ff 	callq	-118398 <runtime.printhex>
  43f16e:	e8 1d 2c fe ff 	callq	-119779 <runtime.printnl>
  43f173:	e8 08 2a fe ff 	callq	-120312 <runtime.printunlock>
  43f178:	48 8d 05 70 d9 02 00 	leaq	186736(%rip), %rax
  43f17f:	48 89 04 24 	movq	%rax, (%rsp)
  43f183:	48 c7 44 24 08 21 00 00 00 	movq	$33, 8(%rsp)
  43f18c:	e8 3f 20 fe ff 	callq	-122817 <runtime.throw>
  43f191:	0f 0b 	ud2
  43f193:	48 8d 05 78 e6 02 00 	leaq	190072(%rip), %rax
  43f19a:	48 89 04 24 	movq	%rax, (%rsp)
  43f19e:	48 c7 44 24 08 2e 00 00 00 	movq	$46, 8(%rsp)
  43f1a7:	e8 24 20 fe ff 	callq	-122844 <runtime.throw>
  43f1ac:	0f 0b 	ud2
  43f1ae:	e8 bd 53 00 00 	callq	21437 <runtime.morestack_noctxt>
  43f1b3:	e9 c8 fc ff ff 	jmp	-824 <runtime.resolveTypeOff>
  43f1b8:	cc 	int3
  43f1b9:	cc 	int3
  43f1ba:	cc 	int3
  43f1bb:	cc 	int3
  43f1bc:	cc 	int3
  43f1bd:	cc 	int3
  43f1be:	cc 	int3
  43f1bf:	cc 	int3

runtime.(*_type).typeOff:
  43f1c0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43f1c9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43f1cd:	76 38 	jbe	56 <runtime.(*_type).typeOff+0x47>
  43f1cf:	48 83 ec 20 	subq	$32, %rsp
  43f1d3:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  43f1d8:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  43f1dd:	48 8b 44 24 28 	movq	40(%rsp), %rax
  43f1e2:	48 89 04 24 	movq	%rax, (%rsp)
  43f1e6:	8b 44 24 30 	movl	48(%rsp), %eax
  43f1ea:	89 44 24 08 	movl	%eax, 8(%rsp)
  43f1ee:	e8 8d fc ff ff 	callq	-883 <runtime.resolveTypeOff>
  43f1f3:	48 8b 44 24 10 	movq	16(%rsp), %rax
  43f1f8:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  43f1fd:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  43f202:	48 83 c4 20 	addq	$32, %rsp
  43f206:	c3 	retq
  43f207:	e8 64 53 00 00 	callq	21348 <runtime.morestack_noctxt>
  43f20c:	eb b2 	jmp	-78 <runtime.(*_type).typeOff>
  43f20e:	cc 	int3
  43f20f:	cc 	int3

runtime.(*_type).textOff:
  43f210:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43f219:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43f21d:	0f 86 03 03 00 00 	jbe	771 <runtime.(*_type).textOff+0x316>
  43f223:	48 83 ec 50 	subq	$80, %rsp
  43f227:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  43f22c:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  43f231:	48 8b 44 24 58 	movq	88(%rsp), %rax
  43f236:	48 8d 0d 03 66 06 00 	leaq	419331(%rip), %rcx
  43f23d:	eb 07 	jmp	7 <runtime.(*_type).textOff+0x36>
  43f23f:	48 8b 89 c0 01 00 00 	movq	448(%rcx), %rcx
  43f246:	48 85 c9 	testq	%rcx, %rcx
  43f249:	0f 84 06 02 00 00 	je	518 <runtime.(*_type).textOff+0x245>
  43f24f:	48 8b 91 c8 00 00 00 	movq	200(%rcx), %rdx
  43f256:	48 39 d0 	cmpq	%rdx, %rax
  43f259:	72 e4 	jb	-28 <runtime.(*_type).textOff+0x2f>
  43f25b:	48 8b 91 d0 00 00 00 	movq	208(%rcx), %rdx
  43f262:	48 39 d0 	cmpq	%rdx, %rax
  43f265:	73 d8 	jae	-40 <runtime.(*_type).textOff+0x2f>
  43f267:	48 85 c9 	testq	%rcx, %rcx
  43f26a:	74 79 	je	121 <runtime.(*_type).textOff+0xd5>
  43f26c:	48 8b 81 d8 00 00 00 	movq	216(%rcx), %rax
  43f273:	48 8b 91 e0 00 00 00 	movq	224(%rcx), %rdx
  43f27a:	48 83 fa 01 	cmpq	$1, %rdx
  43f27e:	7e 58 	jle	88 <runtime.(*_type).textOff+0xc8>
  43f280:	8b 5c 24 60 	movl	96(%rsp), %ebx
  43f284:	31 f6 	xorl	%esi, %esi
  43f286:	eb 03 	jmp	3 <runtime.(*_type).textOff+0x7b>
  43f288:	48 ff c6 	incq	%rsi
  43f28b:	48 39 d6 	cmpq	%rdx, %rsi
  43f28e:	7d 44 	jge	68 <runtime.(*_type).textOff+0xc4>
  43f290:	48 8d 3c 76 	leaq	(%rsi,%rsi,2), %rdi
  43f294:	4c 8b 04 f8 	movq	(%rax,%rdi,8), %r8
  43f298:	4c 8b 4c f8 08 	movq	8(%rax,%rdi,8), %r9
  43f29d:	4c 63 d3 	movslq	%ebx, %r10
  43f2a0:	4d 39 c2 	cmpq	%r8, %r10
  43f2a3:	72 e3 	jb	-29 <runtime.(*_type).textOff+0x78>
  43f2a5:	4d 01 c1 	addq	%r8, %r9
  43f2a8:	4d 39 ca 	cmpq	%r9, %r10
  43f2ab:	77 db 	ja	-37 <runtime.(*_type).textOff+0x78>
  43f2ad:	48 8b 44 f8 10 	movq	16(%rax,%rdi,8), %rax
  43f2b2:	4c 01 d0 	addq	%r10, %rax
  43f2b5:	4c 29 c0 	subq	%r8, %rax
  43f2b8:	48 8b 51 68 	movq	104(%rcx), %rdx
  43f2bc:	48 39 d0 	cmpq	%rdx, %rax
  43f2bf:	0f 87 97 01 00 00 	ja	407 <runtime.(*_type).textOff+0x24c>
  43f2c5:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  43f2ca:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  43f2cf:	48 83 c4 50 	addq	$80, %rsp
  43f2d3:	c3 	retq
  43f2d4:	31 c0 	xorl	%eax, %eax
  43f2d6:	eb e0 	jmp	-32 <runtime.(*_type).textOff+0xa8>
  43f2d8:	8b 5c 24 60 	movl	96(%rsp), %ebx
  43f2dc:	48 63 c3 	movslq	%ebx, %rax
  43f2df:	48 03 41 60 	addq	96(%rcx), %rax
  43f2e3:	eb d3 	jmp	-45 <runtime.(*_type).textOff+0xa8>
  43f2e5:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  43f2ea:	e8 e1 f7 ff ff 	callq	-2079 <runtime.reflectOffsLock>
  43f2ef:	48 8d 05 8a b6 01 00 	leaq	112266(%rip), %rax
  43f2f6:	48 89 04 24 	movq	%rax, (%rsp)
  43f2fa:	48 8b 05 af 84 06 00 	movq	427183(%rip), %rax
  43f301:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43f306:	8b 44 24 60 	movl	96(%rsp), %eax
  43f30a:	89 44 24 10 	movl	%eax, 16(%rsp)
  43f30e:	e8 5d 85 fc ff 	callq	-228003 <runtime.mapaccess1_fast32>
  43f313:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43f318:	48 8b 00 	movq	(%rax), %rax
  43f31b:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  43f320:	e8 eb f7 ff ff 	callq	-2069 <runtime.reflectOffsUnlock>
  43f325:	48 8b 44 24 38 	movq	56(%rsp), %rax
  43f32a:	48 85 c0 	testq	%rax, %rax
  43f32d:	0f 85 13 01 00 00 	jne	275 <runtime.(*_type).textOff+0x236>
  43f333:	e8 c8 27 fe ff 	callq	-120888 <runtime.printlock>
  43f338:	48 8d 05 95 b9 02 00 	leaq	178581(%rip), %rax
  43f33f:	48 89 04 24 	movq	%rax, (%rsp)
  43f343:	48 c7 44 24 08 11 00 00 00 	movq	$17, 8(%rsp)
  43f34c:	e8 ef 30 fe ff 	callq	-118545 <runtime.printstring>
  43f351:	8b 44 24 60 	movl	96(%rsp), %eax
  43f355:	48 63 c0 	movslq	%eax, %rax
  43f358:	48 89 04 24 	movq	%rax, (%rsp)
  43f35c:	e8 8f 2f fe ff 	callq	-118897 <runtime.printhex>
  43f361:	48 8d 05 85 aa 02 00 	leaq	174725(%rip), %rax
  43f368:	48 89 04 24 	movq	%rax, (%rsp)
  43f36c:	48 c7 44 24 08 06 00 00 00 	movq	$6, 8(%rsp)
  43f375:	e8 c6 30 fe ff 	callq	-118586 <runtime.printstring>
  43f37a:	48 8b 44 24 20 	movq	32(%rsp), %rax
  43f37f:	48 89 04 24 	movq	%rax, (%rsp)
  43f383:	e8 68 2f fe ff 	callq	-118936 <runtime.printhex>
  43f388:	48 8d 05 83 b6 02 00 	leaq	177795(%rip), %rax
  43f38f:	48 89 04 24 	movq	%rax, (%rsp)
  43f393:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  43f39c:	e8 9f 30 fe ff 	callq	-118625 <runtime.printstring>
  43f3a1:	e8 da 27 fe ff 	callq	-120870 <runtime.printunlock>
  43f3a6:	48 8d 05 93 64 06 00 	leaq	418963(%rip), %rax
  43f3ad:	e9 86 00 00 00 	jmp	134 <runtime.(*_type).textOff+0x228>
  43f3b2:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  43f3b7:	48 8b 88 c8 00 00 00 	movq	200(%rax), %rcx
  43f3be:	48 89 4c 24 30 	movq	%rcx, 48(%rsp)
  43f3c3:	48 8b 90 d0 00 00 00 	movq	208(%rax), %rdx
  43f3ca:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  43f3cf:	e8 2c 27 fe ff 	callq	-121044 <runtime.printlock>
  43f3d4:	48 8d 05 da aa 02 00 	leaq	174810(%rip), %rax
  43f3db:	48 89 04 24 	movq	%rax, (%rsp)
  43f3df:	48 c7 44 24 08 07 00 00 00 	movq	$7, 8(%rsp)
  43f3e8:	e8 53 30 fe ff 	callq	-118701 <runtime.printstring>
  43f3ed:	48 8b 44 24 30 	movq	48(%rsp), %rax
  43f3f2:	48 89 04 24 	movq	%rax, (%rsp)
  43f3f6:	e8 f5 2e fe ff 	callq	-119051 <runtime.printhex>
  43f3fb:	48 8d 05 85 ab 02 00 	leaq	174981(%rip), %rax
  43f402:	48 89 04 24 	movq	%rax, (%rsp)
  43f406:	48 c7 44 24 08 08 00 00 00 	movq	$8, 8(%rsp)
  43f40f:	e8 2c 30 fe ff 	callq	-118740 <runtime.printstring>
  43f414:	48 8b 44 24 28 	movq	40(%rsp), %rax
  43f419:	48 89 04 24 	movq	%rax, (%rsp)
  43f41d:	e8 ce 2e fe ff 	callq	-119090 <runtime.printhex>
  43f422:	e8 69 29 fe ff 	callq	-120471 <runtime.printnl>
  43f427:	e8 54 27 fe ff 	callq	-121004 <runtime.printunlock>
  43f42c:	48 8b 44 24 40 	movq	64(%rsp), %rax
  43f431:	48 8b 80 c0 01 00 00 	movq	448(%rax), %rax
  43f438:	48 85 c0 	testq	%rax, %rax
  43f43b:	0f 85 71 ff ff ff 	jne	-143 <runtime.(*_type).textOff+0x1a2>
  43f441:	e9 c5 00 00 00 	jmp	197 <runtime.(*_type).textOff+0x2fb>
  43f446:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  43f44b:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  43f450:	48 83 c4 50 	addq	$80, %rsp
  43f454:	c3 	retq
  43f455:	31 c9 	xorl	%ecx, %ecx
  43f457:	e9 0b fe ff ff 	jmp	-501 <runtime.(*_type).textOff+0x57>
  43f45c:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  43f461:	48 8b 41 60 	movq	96(%rcx), %rax
  43f465:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  43f46a:	e8 91 26 fe ff 	callq	-121199 <runtime.printlock>
  43f46f:	48 8d 05 5e b8 02 00 	leaq	178270(%rip), %rax
  43f476:	48 89 04 24 	movq	%rax, (%rsp)
  43f47a:	48 c7 44 24 08 11 00 00 00 	movq	$17, 8(%rsp)
  43f483:	e8 b8 2f fe ff 	callq	-118856 <runtime.printstring>
  43f488:	8b 44 24 60 	movl	96(%rsp), %eax
  43f48c:	48 63 c0 	movslq	%eax, %rax
  43f48f:	48 89 04 24 	movq	%rax, (%rsp)
  43f493:	e8 58 2e fe ff 	callq	-119208 <runtime.printhex>
  43f498:	48 8d 05 4d b3 02 00 	leaq	176973(%rip), %rax
  43f49f:	48 89 04 24 	movq	%rax, (%rsp)
  43f4a3:	48 c7 44 24 08 0e 00 00 00 	movq	$14, 8(%rsp)
  43f4ac:	e8 8f 2f fe ff 	callq	-118897 <runtime.printstring>
  43f4b1:	48 8b 44 24 28 	movq	40(%rsp), %rax
  43f4b6:	48 89 04 24 	movq	%rax, (%rsp)
  43f4ba:	e8 31 2e fe ff 	callq	-119247 <runtime.printhex>
  43f4bf:	48 8d 05 c4 a7 02 00 	leaq	174020(%rip), %rax
  43f4c6:	48 89 04 24 	movq	%rax, (%rsp)
  43f4ca:	48 c7 44 24 08 03 00 00 00 	movq	$3, 8(%rsp)
  43f4d3:	e8 68 2f fe ff 	callq	-118936 <runtime.printstring>
  43f4d8:	48 8b 44 24 30 	movq	48(%rsp), %rax
  43f4dd:	48 89 04 24 	movq	%rax, (%rsp)
  43f4e1:	e8 0a 2e fe ff 	callq	-119286 <runtime.printhex>
  43f4e6:	e8 a5 28 fe ff 	callq	-120667 <runtime.printnl>
  43f4eb:	e8 90 26 fe ff 	callq	-121200 <runtime.printunlock>
  43f4f0:	48 8d 05 d7 d5 02 00 	leaq	185815(%rip), %rax
  43f4f7:	48 89 04 24 	movq	%rax, (%rsp)
  43f4fb:	48 c7 44 24 08 21 00 00 00 	movq	$33, 8(%rsp)
  43f504:	e8 c7 1c fe ff 	callq	-123705 <runtime.throw>
  43f509:	0f 0b 	ud2
  43f50b:	48 8d 05 d2 e2 02 00 	leaq	189138(%rip), %rax
  43f512:	48 89 04 24 	movq	%rax, (%rsp)
  43f516:	48 c7 44 24 08 2e 00 00 00 	movq	$46, 8(%rsp)
  43f51f:	e8 ac 1c fe ff 	callq	-123732 <runtime.throw>
  43f524:	0f 0b 	ud2
  43f526:	e8 45 50 00 00 	callq	20549 <runtime.morestack_noctxt>
  43f52b:	e9 e0 fc ff ff 	jmp	-800 <runtime.(*_type).textOff>

runtime.name.tagLen:
  43f530:	48 8b 44 24 08 	movq	8(%rsp), %rax
  43f535:	0f b6 08 	movzbl	(%rax), %ecx
  43f538:	f6 c1 02 	testb	$2, %cl
  43f53b:	75 0a 	jne	10 <runtime.name.tagLen+0x17>
  43f53d:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  43f546:	c3 	retq
  43f547:	b9 01 00 00 00 	movl	$1, %ecx
  43f54c:	0f b6 0c 08 	movzbl	(%rax,%rcx), %ecx
  43f550:	c1 e1 08 	shll	$8, %ecx
  43f553:	ba 02 00 00 00 	movl	$2, %edx
  43f558:	0f b6 14 10 	movzbl	(%rax,%rdx), %edx
  43f55c:	09 d1 	orl	%edx, %ecx
  43f55e:	0f b7 c9 	movzwl	%cx, %ecx
  43f561:	48 89 c2 	movq	%rax, %rdx
  43f564:	48 8d 5c 01 03 	leaq	3(%rcx,%rax), %rbx
  43f569:	48 8d 44 01 04 	leaq	4(%rcx,%rax), %rax
  43f56e:	48 8d 4a 01 	leaq	1(%rdx), %rcx
  43f572:	84 01 	testb	%al, (%rcx)
  43f574:	48 8d 4a 02 	leaq	2(%rdx), %rcx
  43f578:	84 01 	testb	%al, (%rcx)
  43f57a:	0f b6 0b 	movzbl	(%rbx), %ecx
  43f57d:	0f b6 00 	movzbl	(%rax), %eax
  43f580:	c1 e1 08 	shll	$8, %ecx
  43f583:	09 c1 	orl	%eax, %ecx
  43f585:	0f b7 c1 	movzwl	%cx, %eax
  43f588:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43f58d:	c3 	retq
  43f58e:	cc 	int3
  43f58f:	cc 	int3

runtime.name.name:
  43f590:	0f 57 c0 	xorps	%xmm0, %xmm0
  43f593:	0f 11 44 24 10 	movups	%xmm0, 16(%rsp)
  43f598:	48 8b 44 24 08 	movq	8(%rsp), %rax
  43f59d:	48 85 c0 	testq	%rax, %rax
  43f5a0:	74 40 	je	64 <runtime.name.name+0x52>
  43f5a2:	48 8d 48 01 	leaq	1(%rax), %rcx
  43f5a6:	84 01 	testb	%al, (%rcx)
  43f5a8:	48 8d 48 02 	leaq	2(%rax), %rcx
  43f5ac:	84 01 	testb	%al, (%rcx)
  43f5ae:	b9 01 00 00 00 	movl	$1, %ecx
  43f5b3:	0f b6 0c 08 	movzbl	(%rax,%rcx), %ecx
  43f5b7:	c1 e1 08 	shll	$8, %ecx
  43f5ba:	ba 02 00 00 00 	movl	$2, %edx
  43f5bf:	0f b6 14 10 	movzbl	(%rax,%rdx), %edx
  43f5c3:	09 d1 	orl	%edx, %ecx
  43f5c5:	0f b7 c9 	movzwl	%cx, %ecx
  43f5c8:	48 85 c9 	testq	%rcx, %rcx
  43f5cb:	75 06 	jne	6 <runtime.name.name+0x43>
  43f5cd:	0f 11 44 24 10 	movups	%xmm0, 16(%rsp)
  43f5d2:	c3 	retq
  43f5d3:	48 83 c0 03 	addq	$3, %rax
  43f5d7:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43f5dc:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  43f5e1:	c3 	retq
  43f5e2:	0f 11 44 24 10 	movups	%xmm0, 16(%rsp)
  43f5e7:	c3 	retq
  43f5e8:	cc 	int3
  43f5e9:	cc 	int3
  43f5ea:	cc 	int3
  43f5eb:	cc 	int3
  43f5ec:	cc 	int3
  43f5ed:	cc 	int3
  43f5ee:	cc 	int3
  43f5ef:	cc 	int3

runtime.name.tag:
  43f5f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43f5f9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43f5fd:	0f 86 84 00 00 00 	jbe	132 <runtime.name.tag+0x97>
  43f603:	48 83 ec 18 	subq	$24, %rsp
  43f607:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  43f60c:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  43f611:	0f 57 c0 	xorps	%xmm0, %xmm0
  43f614:	0f 11 44 24 28 	movups	%xmm0, 40(%rsp)
  43f619:	48 8b 44 24 20 	movq	32(%rsp), %rax
  43f61e:	48 89 04 24 	movq	%rax, (%rsp)
  43f622:	e8 09 ff ff ff 	callq	-247 <runtime.name.tagLen>
  43f627:	48 8b 44 24 08 	movq	8(%rsp), %rax
  43f62c:	48 85 c0 	testq	%rax, %rax
  43f62f:	75 12 	jne	18 <runtime.name.tag+0x53>
  43f631:	0f 57 c0 	xorps	%xmm0, %xmm0
  43f634:	0f 11 44 24 28 	movups	%xmm0, 40(%rsp)
  43f639:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  43f63e:	48 83 c4 18 	addq	$24, %rsp
  43f642:	c3 	retq
  43f643:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  43f648:	48 8d 51 01 	leaq	1(%rcx), %rdx
  43f64c:	84 02 	testb	%al, (%rdx)
  43f64e:	48 8d 51 02 	leaq	2(%rcx), %rdx
  43f652:	84 02 	testb	%al, (%rdx)
  43f654:	ba 01 00 00 00 	movl	$1, %edx
  43f659:	0f b6 14 11 	movzbl	(%rcx,%rdx), %edx
  43f65d:	c1 e2 08 	shll	$8, %edx
  43f660:	bb 02 00 00 00 	movl	$2, %ebx
  43f665:	0f b6 1c 19 	movzbl	(%rcx,%rbx), %ebx
  43f669:	09 da 	orl	%ebx, %edx
  43f66b:	0f b7 d2 	movzwl	%dx, %edx
  43f66e:	48 8d 4c 0a 05 	leaq	5(%rdx,%rcx), %rcx
  43f673:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  43f678:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  43f67d:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  43f682:	48 83 c4 18 	addq	$24, %rsp
  43f686:	c3 	retq
  43f687:	e8 e4 4e 00 00 	callq	20196 <runtime.morestack_noctxt>
  43f68c:	e9 5f ff ff ff 	jmp	-161 <runtime.name.tag>
  43f691:	cc 	int3
  43f692:	cc 	int3
  43f693:	cc 	int3
  43f694:	cc 	int3
  43f695:	cc 	int3
  43f696:	cc 	int3
  43f697:	cc 	int3
  43f698:	cc 	int3
  43f699:	cc 	int3
  43f69a:	cc 	int3
  43f69b:	cc 	int3
  43f69c:	cc 	int3
  43f69d:	cc 	int3
  43f69e:	cc 	int3
  43f69f:	cc 	int3

runtime.name.pkgPath:
  43f6a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43f6a9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  43f6ad:	0f 86 e4 00 00 00 	jbe	228 <runtime.name.pkgPath+0xf7>
  43f6b3:	48 83 ec 28 	subq	$40, %rsp
  43f6b7:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  43f6bc:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  43f6c1:	48 8b 44 24 30 	movq	48(%rsp), %rax
  43f6c6:	48 85 c0 	testq	%rax, %rax
  43f6c9:	74 08 	je	8 <runtime.name.pkgPath+0x33>
  43f6cb:	0f b6 08 	movzbl	(%rax), %ecx
  43f6ce:	f6 c1 04 	testb	$4, %cl
  43f6d1:	75 12 	jne	18 <runtime.name.pkgPath+0x45>
  43f6d3:	0f 57 c0 	xorps	%xmm0, %xmm0
  43f6d6:	0f 11 44 24 38 	movups	%xmm0, 56(%rsp)
  43f6db:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  43f6e0:	48 83 c4 28 	addq	$40, %rsp
  43f6e4:	c3 	retq
  43f6e5:	48 8d 48 01 	leaq	1(%rax), %rcx
  43f6e9:	84 01 	testb	%al, (%rcx)
  43f6eb:	48 8d 48 02 	leaq	2(%rax), %rcx
  43f6ef:	84 01 	testb	%al, (%rcx)
  43f6f1:	b9 01 00 00 00 	movl	$1, %ecx
  43f6f6:	0f b6 0c 08 	movzbl	(%rax,%rcx), %ecx
  43f6fa:	66 89 4c 24 1a 	movw	%cx, 26(%rsp)
  43f6ff:	ba 02 00 00 00 	movl	$2, %edx
  43f704:	0f b6 14 10 	movzbl	(%rax,%rdx), %edx
  43f708:	66 89 54 24 18 	movw	%dx, 24(%rsp)
  43f70d:	48 89 04 24 	movq	%rax, (%rsp)
  43f711:	e8 1a fe ff ff 	callq	-486 <runtime.name.tagLen>
  43f716:	0f b7 44 24 1a 	movzwl	26(%rsp), %eax
  43f71b:	c1 e0 08 	shll	$8, %eax
  43f71e:	0f b7 4c 24 18 	movzwl	24(%rsp), %ecx
  43f723:	09 c8 	orl	%ecx, %eax
  43f725:	0f b7 c0 	movzwl	%ax, %eax
  43f728:	48 8d 48 03 	leaq	3(%rax), %rcx
  43f72c:	48 8b 54 24 08 	movq	8(%rsp), %rdx
  43f731:	48 85 d2 	testq	%rdx, %rdx
  43f734:	7e 5c 	jle	92 <runtime.name.pkgPath+0xf2>
  43f736:	48 8d 44 02 05 	leaq	5(%rdx,%rax), %rax
  43f73b:	c7 44 24 1c 00 00 00 00 	movl	$0, 28(%rsp)
  43f743:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  43f748:	48 8d 14 08 	leaq	(%rax,%rcx), %rdx
  43f74c:	84 02 	testb	%al, (%rdx)
  43f74e:	8b 04 08 	movl	(%rax,%rcx), %eax
  43f751:	89 44 24 1c 	movl	%eax, 28(%rsp)
  43f755:	48 89 0c 24 	movq	%rcx, (%rsp)
  43f759:	8b 44 24 1c 	movl	28(%rsp), %eax
  43f75d:	89 44 24 08 	movl	%eax, 8(%rsp)
  43f761:	e8 ea f3 ff ff 	callq	-3094 <runtime.resolveNameOff>
  43f766:	48 8b 44 24 10 	movq	16(%rsp), %rax
  43f76b:	48 89 04 24 	movq	%rax, (%rsp)
  43f76f:	e8 1c fe ff ff 	callq	-484 <runtime.name.name>
  43f774:	48 8b 44 24 10 	movq	16(%rsp), %rax
  43f779:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  43f77e:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  43f783:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  43f788:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  43f78d:	48 83 c4 28 	addq	$40, %rsp
  43f791:	c3 	retq
  43f792:	48 89 c8 	movq	%rcx, %rax
  43f795:	eb a4 	jmp	-92 <runtime.name.pkgPath+0x9b>
  43f797:	e8 d4 4d 00 00 	callq	19924 <runtime.morestack_noctxt>
  43f79c:	e9 ff fe ff ff 	jmp	-257 <runtime.name.pkgPath>
  43f7a1:	cc 	int3
  43f7a2:	cc 	int3
  43f7a3:	cc 	int3
  43f7a4:	cc 	int3
  43f7a5:	cc 	int3
  43f7a6:	cc 	int3
  43f7a7:	cc 	int3
  43f7a8:	cc 	int3
  43f7a9:	cc 	int3
  43f7aa:	cc 	int3
  43f7ab:	cc 	int3
  43f7ac:	cc 	int3
  43f7ad:	cc 	int3
  43f7ae:	cc 	int3
  43f7af:	cc 	int3

runtime.typelinksinit:
  43f7b0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43f7b9:	48 8d 84 24 b8 fd ff ff 	leaq	-584(%rsp), %rax
  43f7c1:	48 3b 41 10 	cmpq	16(%rcx), %rax
  43f7c5:	0f 86 c7 06 00 00 	jbe	1735 <runtime.typelinksinit+0x6e2>
  43f7cb:	48 81 ec c8 02 00 00 	subq	$712, %rsp
  43f7d2:	48 89 ac 24 c0 02 00 00 	movq	%rbp, 704(%rsp)
  43f7da:	48 8d ac 24 c0 02 00 00 	leaq	704(%rsp), %rbp
  43f7e2:	0f 57 c0 	xorps	%xmm0, %xmm0
  43f7e5:	48 8d bc 24 10 01 00 00 	leaq	272(%rsp), %rdi
  43f7ed:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  43f7f2:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  43f7f7:	e8 a6 72 00 00 	callq	29350 <runtime.duffzero+0x102>
  43f7fc:	48 8b 6d 00 	movq	(%rbp), %rbp
  43f800:	0f 11 84 24 e0 00 00 00 	movups	%xmm0, 224(%rsp)
  43f808:	0f 11 84 24 f0 00 00 00 	movups	%xmm0, 240(%rsp)
  43f810:	0f 11 84 24 00 01 00 00 	movups	%xmm0, 256(%rsp)
  43f818:	48 8b 05 e1 61 06 00 	movq	418273(%rip), %rax
  43f81f:	48 85 c0 	testq	%rax, %rax
  43f822:	0f 84 53 06 00 00 	je	1619 <runtime.typelinksinit+0x6cb>
  43f828:	48 8b 05 09 61 06 00 	movq	418057(%rip), %rax
  43f82f:	0f 57 c0 	xorps	%xmm0, %xmm0
  43f832:	0f 11 84 24 10 01 00 00 	movups	%xmm0, 272(%rsp)
  43f83a:	0f 11 84 24 20 01 00 00 	movups	%xmm0, 288(%rsp)
  43f842:	0f 11 84 24 30 01 00 00 	movups	%xmm0, 304(%rsp)
  43f84a:	48 8d bc 24 d0 01 00 00 	leaq	464(%rsp), %rdi
  43f852:	48 8d 7f f0 	leaq	-16(%rdi), %rdi
  43f856:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  43f85b:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  43f860:	e8 22 72 00 00 	callq	29218 <runtime.duffzero+0xe7>
  43f865:	48 8b 6d 00 	movq	(%rbp), %rbp
  43f869:	48 8d 8c 24 d0 01 00 00 	leaq	464(%rsp), %rcx
  43f871:	48 89 8c 24 20 01 00 00 	movq	%rcx, 288(%rsp)
  43f879:	48 8d 0d 80 b2 01 00 	leaq	111232(%rip), %rcx
  43f880:	48 89 0c 24 	movq	%rcx, (%rsp)
  43f884:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43f889:	48 8d 84 24 10 01 00 00 	leaq	272(%rsp), %rax
  43f891:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43f896:	e8 e5 69 fc ff 	callq	-235035 <runtime.makemap>
  43f89b:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43f8a0:	48 8b 0d d1 7d 06 00 	movq	425425(%rip), %rcx
  43f8a7:	48 85 c9 	testq	%rcx, %rcx
  43f8aa:	0f 84 c0 05 00 00 	je	1472 <runtime.typelinksinit+0x6c0>
  43f8b0:	48 8b 51 08 	movq	8(%rcx), %rdx
  43f8b4:	48 8b 59 10 	movq	16(%rcx), %rbx
  43f8b8:	48 8b 09 	movq	(%rcx), %rcx
  43f8bb:	48 85 d2 	testq	%rdx, %rdx
  43f8be:	0f 86 c7 05 00 00 	jbe	1479 <runtime.typelinksinit+0x6db>
  43f8c4:	48 89 84 24 80 00 00 00 	movq	%rax, 128(%rsp)
  43f8cc:	48 8b 31 	movq	(%rcx), %rsi
  43f8cf:	48 ff cb 	decq	%rbx
  43f8d2:	48 f7 db 	negq	%rbx
  43f8d5:	48 c1 fb 3f 	sarq	$63, %rbx
  43f8d9:	48 83 e3 08 	andq	$8, %rbx
  43f8dd:	48 01 d9 	addq	%rbx, %rcx
  43f8e0:	48 89 8c 24 d8 00 00 00 	movq	%rcx, 216(%rsp)
  43f8e8:	48 ff ca 	decq	%rdx
  43f8eb:	48 89 54 24 78 	movq	%rdx, 120(%rsp)
  43f8f0:	31 db 	xorl	%ebx, %ebx
  43f8f2:	e9 ff 01 00 00 	jmp	511 <runtime.typelinksinit+0x346>
  43f8f7:	48 ff c6 	incq	%rsi
  43f8fa:	48 39 c6 	cmpq	%rax, %rsi
  43f8fd:	0f 8d b9 00 00 00 	jge	185 <runtime.typelinksinit+0x20c>
  43f903:	4c 8b 04 f2 	movq	(%rdx,%rsi,8), %r8
  43f907:	49 39 d8 	cmpq	%rbx, %r8
  43f90a:	75 eb 	jne	-21 <runtime.typelinksinit+0x147>
  43f90c:	4c 8b 5c 24 60 	movq	96(%rsp), %r11
  43f911:	4d 8d 53 01 	leaq	1(%r11), %r10
  43f915:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  43f91d:	48 8b 8c 24 d8 00 00 00 	movq	216(%rsp), %rcx
  43f925:	48 8b 54 24 78 	movq	120(%rsp), %rdx
  43f92a:	48 8b 5c 24 70 	movq	112(%rsp), %rbx
  43f92f:	48 8b b4 24 a0 00 00 00 	movq	160(%rsp), %rsi
  43f937:	48 8b bc 24 a8 00 00 00 	movq	168(%rsp), %rdi
  43f93f:	4c 8b 84 24 d0 00 00 00 	movq	208(%rsp), %r8
  43f947:	4c 8b 4c 24 68 	movq	104(%rsp), %r9
  43f94c:	4d 39 ca 	cmpq	%r9, %r10
  43f94f:	0f 8d 88 01 00 00 	jge	392 <runtime.typelinksinit+0x32d>
  43f955:	4c 89 54 24 60 	movq	%r10, 96(%rsp)
  43f95a:	47 8b 1c 90 	movl	(%r8,%r10,4), %r11d
  43f95e:	4c 8b a6 b0 01 00 00 	movq	432(%rsi), %r12
  43f965:	4d 85 e4 	testq	%r12, %r12
  43f968:	0f 85 40 01 00 00 	jne	320 <runtime.typelinksinit+0x2fe>
  43f96e:	4d 63 db 	movslq	%r11d, %r11
  43f971:	4c 03 9e c8 00 00 00 	addq	200(%rsi), %r11
  43f978:	4c 89 9c 24 90 00 00 00 	movq	%r11, 144(%rsp)
  43f980:	41 8b 4b 10 	movl	16(%r11), %ecx
  43f984:	89 4c 24 10 	movl	%ecx, 16(%rsp)
  43f988:	48 8d 0d 71 b1 01 00 	leaq	110961(%rip), %rcx
  43f98f:	48 89 0c 24 	movq	%rcx, (%rsp)
  43f993:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43f998:	e8 d3 7e fc ff 	callq	-229677 <runtime.mapaccess1_fast32>
  43f99d:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43f9a2:	48 8b 48 10 	movq	16(%rax), %rcx
  43f9a6:	48 8b 10 	movq	(%rax), %rdx
  43f9a9:	48 8b 40 08 	movq	8(%rax), %rax
  43f9ad:	48 8b 9c 24 90 00 00 00 	movq	144(%rsp), %rbx
  43f9b5:	31 f6 	xorl	%esi, %esi
  43f9b7:	e9 3e ff ff ff 	jmp	-194 <runtime.typelinksinit+0x14a>
  43f9bc:	48 8d 70 01 	leaq	1(%rax), %rsi
  43f9c0:	48 39 ce 	cmpq	%rcx, %rsi
  43f9c3:	0f 8f 97 00 00 00 	jg	151 <runtime.typelinksinit+0x2b0>
  43f9c9:	48 89 94 24 c8 00 00 00 	movq	%rdx, 200(%rsp)
  43f9d1:	48 89 74 24 58 	movq	%rsi, 88(%rsp)
  43f9d6:	48 89 4c 24 50 	movq	%rcx, 80(%rsp)
  43f9db:	48 8d 3c c2 	leaq	(%rdx,%rax,8), %rdi
  43f9df:	44 8b 05 2a 40 08 00 	movl	540714(%rip), %r8d
  43f9e6:	45 85 c0 	testl	%r8d, %r8d
  43f9e9:	75 6b 	jne	107 <runtime.typelinksinit+0x2a6>
  43f9eb:	48 89 1c c2 	movq	%rbx, (%rdx,%rax,8)
  43f9ef:	8b 43 10 	movl	16(%rbx), %eax
  43f9f2:	89 44 24 10 	movl	%eax, 16(%rsp)
  43f9f6:	48 8d 05 03 b1 01 00 	leaq	110851(%rip), %rax
  43f9fd:	48 89 04 24 	movq	%rax, (%rsp)
  43fa01:	48 8b 8c 24 80 00 00 00 	movq	128(%rsp), %rcx
  43fa09:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  43fa0e:	e8 bd 81 fc ff 	callq	-228931 <runtime.mapassign_fast32>
  43fa13:	48 8b 7c 24 18 	movq	24(%rsp), %rdi
  43fa18:	48 8b 44 24 58 	movq	88(%rsp), %rax
  43fa1d:	48 89 47 08 	movq	%rax, 8(%rdi)
  43fa21:	48 8b 44 24 50 	movq	80(%rsp), %rax
  43fa26:	48 89 47 10 	movq	%rax, 16(%rdi)
  43fa2a:	8b 05 e0 3f 08 00 	movl	540640(%rip), %eax
  43fa30:	85 c0 	testl	%eax, %eax
  43fa32:	75 10 	jne	16 <runtime.typelinksinit+0x294>
  43fa34:	48 8b 84 24 c8 00 00 00 	movq	200(%rsp), %rax
  43fa3c:	48 89 07 	movq	%rax, (%rdi)
  43fa3f:	e9 c8 fe ff ff 	jmp	-312 <runtime.typelinksinit+0x15c>
  43fa44:	48 8b 84 24 c8 00 00 00 	movq	200(%rsp), %rax
  43fa4c:	e8 4f 6e 00 00 	callq	28239 <runtime.gcWriteBarrier>
  43fa51:	e9 b6 fe ff ff 	jmp	-330 <runtime.typelinksinit+0x15c>
  43fa56:	48 89 d8 	movq	%rbx, %rax
  43fa59:	e8 42 6e 00 00 	callq	28226 <runtime.gcWriteBarrier>
  43fa5e:	eb 8f 	jmp	-113 <runtime.typelinksinit+0x23f>
  43fa60:	48 89 44 24 48 	movq	%rax, 72(%rsp)
  43fa65:	48 8d 1d 94 fd 01 00 	leaq	130452(%rip), %rbx
  43fa6c:	48 89 1c 24 	movq	%rbx, (%rsp)
  43fa70:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  43fa75:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  43fa7a:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  43fa7f:	48 89 74 24 20 	movq	%rsi, 32(%rsp)
  43fa84:	e8 d7 3d ff ff 	callq	-49705 <runtime.growslice>
  43fa89:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  43fa8e:	48 8b 44 24 30 	movq	48(%rsp), %rax
  43fa93:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  43fa98:	48 8d 70 01 	leaq	1(%rax), %rsi
  43fa9c:	48 8b 44 24 48 	movq	72(%rsp), %rax
  43faa1:	48 8b 9c 24 90 00 00 00 	movq	144(%rsp), %rbx
  43faa9:	e9 1b ff ff ff 	jmp	-229 <runtime.typelinksinit+0x219>
  43faae:	4c 89 64 24 08 	movq	%r12, 8(%rsp)
  43fab3:	48 8d 05 86 af 01 00 	leaq	110470(%rip), %rax
  43faba:	48 89 04 24 	movq	%rax, (%rsp)
  43fabe:	44 89 5c 24 10 	movl	%r11d, 16(%rsp)
  43fac3:	e8 a8 7d fc ff 	callq	-229976 <runtime.mapaccess1_fast32>
  43fac8:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43facd:	4c 8b 18 	movq	(%rax), %r11
  43fad0:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  43fad8:	e9 9b fe ff ff 	jmp	-357 <runtime.typelinksinit+0x1c8>
  43fadd:	48 8b b7 b0 01 00 00 	movq	432(%rdi), %rsi
  43fae4:	4c 8d 87 b0 01 00 00 	leaq	432(%rdi), %r8
  43faeb:	48 85 f6 	testq	%rsi, %rsi
  43faee:	74 4b 	je	75 <runtime.typelinksinit+0x38b>
  43faf0:	48 ff c3 	incq	%rbx
  43faf3:	48 89 fe 	movq	%rdi, %rsi
  43faf6:	48 39 d3 	cmpq	%rdx, %rbx
  43faf9:	0f 8d 61 03 00 00 	jge	865 <runtime.typelinksinit+0x6b0>
  43faff:	48 89 5c 24 70 	movq	%rbx, 112(%rsp)
  43fb04:	48 89 b4 24 a0 00 00 00 	movq	%rsi, 160(%rsp)
  43fb0c:	48 8b 3c d9 	movq	(%rcx,%rbx,8), %rdi
  43fb10:	48 89 bc 24 a8 00 00 00 	movq	%rdi, 168(%rsp)
  43fb18:	4c 8b 86 f0 00 00 00 	movq	240(%rsi), %r8
  43fb1f:	4c 89 84 24 d0 00 00 00 	movq	%r8, 208(%rsp)
  43fb27:	4c 8b 8e f8 00 00 00 	movq	248(%rsi), %r9
  43fb2e:	4c 89 4c 24 68 	movq	%r9, 104(%rsp)
  43fb33:	45 31 d2 	xorl	%r10d, %r10d
  43fb36:	e9 11 fe ff ff 	jmp	-495 <runtime.typelinksinit+0x19c>
  43fb3b:	4c 89 84 24 c0 00 00 00 	movq	%r8, 192(%rsp)
  43fb43:	48 8b 87 f8 00 00 00 	movq	248(%rdi), %rax
  43fb4a:	48 8d 0d ef ae 01 00 	leaq	110319(%rip), %rcx
  43fb51:	48 89 0c 24 	movq	%rcx, (%rsp)
  43fb55:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  43fb5a:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  43fb63:	e8 18 67 fc ff 	callq	-235752 <runtime.makemap>
  43fb68:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43fb6d:	48 8b 0d dc 7b 06 00 	movq	424924(%rip), %rcx
  43fb74:	48 8b 15 dd 7b 06 00 	movq	424925(%rip), %rdx
  43fb7b:	48 8b 1d de 7b 06 00 	movq	424926(%rip), %rbx
  43fb82:	48 8d 72 01 	leaq	1(%rdx), %rsi
  43fb86:	48 39 de 	cmpq	%rbx, %rsi
  43fb89:	0f 8f 5d 02 00 00 	jg	605 <runtime.typelinksinit+0x63c>
  43fb8f:	48 8d 5a 01 	leaq	1(%rdx), %rbx
  43fb93:	48 89 1d be 7b 06 00 	movq	%rbx, 424894(%rip)
  43fb9a:	48 8d 3c d1 	leaq	(%rcx,%rdx,8), %rdi
  43fb9e:	8b 1d 6c 3e 08 00 	movl	540268(%rip), %ebx
  43fba4:	85 db 	testl	%ebx, %ebx
  43fba6:	0f 85 21 02 00 00 	jne	545 <runtime.typelinksinit+0x61d>
  43fbac:	48 89 04 d1 	movq	%rax, (%rcx,%rdx,8)
  43fbb0:	48 8b 8c 24 a8 00 00 00 	movq	168(%rsp), %rcx
  43fbb8:	48 89 81 b0 01 00 00 	movq	%rax, 432(%rcx)
  43fbbf:	48 8b 81 f8 00 00 00 	movq	248(%rcx), %rax
  43fbc6:	48 89 44 24 68 	movq	%rax, 104(%rsp)
  43fbcb:	48 8b 91 f0 00 00 00 	movq	240(%rcx), %rdx
  43fbd2:	48 89 94 24 d0 00 00 00 	movq	%rdx, 208(%rsp)
  43fbda:	31 db 	xorl	%ebx, %ebx
  43fbdc:	e9 3b 01 00 00 	jmp	315 <runtime.typelinksinit+0x56c>
  43fbe1:	48 8b 5c 24 50 	movq	80(%rsp), %rbx
  43fbe6:	48 8d 53 01 	leaq	1(%rbx), %rdx
  43fbea:	48 8b 84 24 c8 00 00 00 	movq	200(%rsp), %rax
  43fbf2:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  43fbf7:	48 39 ca 	cmpq	%rcx, %rdx
  43fbfa:	0f 8d 99 01 00 00 	jge	409 <runtime.typelinksinit+0x5e9>
  43fc00:	48 89 54 24 50 	movq	%rdx, 80(%rsp)
  43fc05:	48 8b 0c d0 	movq	(%rax,%rdx,8), %rcx
  43fc09:	48 89 8c 24 b0 00 00 00 	movq	%rcx, 176(%rsp)
  43fc11:	0f 57 c0 	xorps	%xmm0, %xmm0
  43fc14:	0f 11 84 24 e0 00 00 00 	movups	%xmm0, 224(%rsp)
  43fc1c:	0f 11 84 24 f0 00 00 00 	movups	%xmm0, 240(%rsp)
  43fc24:	0f 11 84 24 00 01 00 00 	movups	%xmm0, 256(%rsp)
  43fc2c:	48 8d bc 24 40 01 00 00 	leaq	320(%rsp), %rdi
  43fc34:	48 8d 7f d0 	leaq	-48(%rdi), %rdi
  43fc38:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  43fc3d:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  43fc42:	e8 5b 6e 00 00 	callq	28251 <runtime.duffzero+0x102>
  43fc47:	48 8b 6d 00 	movq	(%rbp), %rbp
  43fc4b:	48 8d 9c 24 40 01 00 00 	leaq	320(%rsp), %rbx
  43fc53:	48 89 9c 24 f0 00 00 00 	movq	%rbx, 240(%rsp)
  43fc5b:	e8 20 7b ff ff 	callq	-34016 <runtime.fastrand>
  43fc60:	8b 04 24 	movl	(%rsp), %eax
  43fc63:	89 84 24 ec 00 00 00 	movl	%eax, 236(%rsp)
  43fc6a:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  43fc72:	48 89 04 24 	movq	%rax, (%rsp)
  43fc76:	48 8b 8c 24 b0 00 00 00 	movq	176(%rsp), %rcx
  43fc7e:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  43fc83:	48 8d 94 24 e0 00 00 00 	leaq	224(%rsp), %rdx
  43fc8b:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  43fc90:	e8 0b 02 00 00 	callq	523 <runtime.typesEqual>
  43fc95:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  43fc9a:	84 c0 	testb	%al, %al
  43fc9c:	0f 84 3f ff ff ff 	je	-193 <runtime.typelinksinit+0x431>
  43fca2:	48 8b 84 24 b0 00 00 00 	movq	176(%rsp), %rax
  43fcaa:	48 89 84 24 98 00 00 00 	movq	%rax, 152(%rsp)
  43fcb2:	48 8b 8c 24 a8 00 00 00 	movq	168(%rsp), %rcx
  43fcba:	48 8b 91 b0 01 00 00 	movq	432(%rcx), %rdx
  43fcc1:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  43fcc6:	48 8d 15 73 ad 01 00 	leaq	109939(%rip), %rdx
  43fccd:	48 89 14 24 	movq	%rdx, (%rsp)
  43fcd1:	8b 5c 24 44 	movl	68(%rsp), %ebx
  43fcd5:	89 5c 24 10 	movl	%ebx, 16(%rsp)
  43fcd9:	e8 f2 7e fc ff 	callq	-229646 <runtime.mapassign_fast32>
  43fcde:	48 8b 7c 24 18 	movq	24(%rsp), %rdi
  43fce3:	84 07 	testb	%al, (%rdi)
  43fce5:	8b 05 25 3d 08 00 	movl	539941(%rip), %eax
  43fceb:	85 c0 	testl	%eax, %eax
  43fced:	0f 85 94 00 00 00 	jne	148 <runtime.typelinksinit+0x5d7>
  43fcf3:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  43fcfb:	48 89 07 	movq	%rax, (%rdi)
  43fcfe:	48 8b 74 24 60 	movq	96(%rsp), %rsi
  43fd03:	48 8d 5e 01 	leaq	1(%rsi), %rbx
  43fd07:	48 8b 44 24 68 	movq	104(%rsp), %rax
  43fd0c:	48 8b 8c 24 a8 00 00 00 	movq	168(%rsp), %rcx
  43fd14:	48 8b 94 24 d0 00 00 00 	movq	208(%rsp), %rdx
  43fd1c:	48 39 c3 	cmpq	%rax, %rbx
  43fd1f:	0f 8d 81 00 00 00 	jge	129 <runtime.typelinksinit+0x5f6>
  43fd25:	48 89 5c 24 60 	movq	%rbx, 96(%rsp)
  43fd2a:	8b 04 9a 	movl	(%rdx,%rbx,4), %eax
  43fd2d:	89 44 24 44 	movl	%eax, 68(%rsp)
  43fd31:	48 63 f0 	movslq	%eax, %rsi
  43fd34:	48 03 b1 c8 00 00 00 	addq	200(%rcx), %rsi
  43fd3b:	48 89 b4 24 b8 00 00 00 	movq	%rsi, 184(%rsp)
  43fd43:	8b 7e 10 	movl	16(%rsi), %edi
  43fd46:	89 7c 24 10 	movl	%edi, 16(%rsp)
  43fd4a:	48 8d 3d af ad 01 00 	leaq	109999(%rip), %rdi
  43fd51:	48 89 3c 24 	movq	%rdi, (%rsp)
  43fd55:	4c 8b 84 24 80 00 00 00 	movq	128(%rsp), %r8
  43fd5d:	4c 89 44 24 08 	movq	%r8, 8(%rsp)
  43fd62:	e8 09 7b fc ff 	callq	-230647 <runtime.mapaccess1_fast32>
  43fd67:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43fd6c:	48 8b 48 08 	movq	8(%rax), %rcx
  43fd70:	48 89 4c 24 58 	movq	%rcx, 88(%rsp)
  43fd75:	48 8b 00 	movq	(%rax), %rax
  43fd78:	48 89 84 24 c8 00 00 00 	movq	%rax, 200(%rsp)
  43fd80:	31 d2 	xorl	%edx, %edx
  43fd82:	e9 70 fe ff ff 	jmp	-400 <runtime.typelinksinit+0x447>
  43fd87:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  43fd8f:	e8 0c 6b 00 00 	callq	27404 <runtime.gcWriteBarrier>
  43fd94:	e9 65 ff ff ff 	jmp	-155 <runtime.typelinksinit+0x54e>
  43fd99:	48 8b 84 24 b8 00 00 00 	movq	184(%rsp), %rax
  43fda1:	e9 04 ff ff ff 	jmp	-252 <runtime.typelinksinit+0x4fa>
  43fda6:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  43fdae:	48 8b 8c 24 d8 00 00 00 	movq	216(%rsp), %rcx
  43fdb6:	48 8b 54 24 78 	movq	120(%rsp), %rdx
  43fdbb:	48 8b 5c 24 70 	movq	112(%rsp), %rbx
  43fdc0:	48 8b bc 24 a8 00 00 00 	movq	168(%rsp), %rdi
  43fdc8:	e9 23 fd ff ff 	jmp	-733 <runtime.typelinksinit+0x340>
  43fdcd:	e8 ce 6a 00 00 	callq	27342 <runtime.gcWriteBarrier>
  43fdd2:	48 8b bc 24 c0 00 00 00 	movq	192(%rsp), %rdi
  43fdda:	e8 c1 6a 00 00 	callq	27329 <runtime.gcWriteBarrier>
  43fddf:	48 8b 8c 24 a8 00 00 00 	movq	168(%rsp), %rcx
  43fde7:	e9 d3 fd ff ff 	jmp	-557 <runtime.typelinksinit+0x40f>
  43fdec:	48 89 84 24 88 00 00 00 	movq	%rax, 136(%rsp)
  43fdf4:	48 8d 05 45 ac 01 00 	leaq	109637(%rip), %rax
  43fdfb:	48 89 04 24 	movq	%rax, (%rsp)
  43fdff:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  43fe04:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  43fe09:	48 89 5c 24 18 	movq	%rbx, 24(%rsp)
  43fe0e:	48 89 74 24 20 	movq	%rsi, 32(%rsp)
  43fe13:	e8 48 3a ff ff 	callq	-50616 <runtime.growslice>
  43fe18:	48 8b 44 24 28 	movq	40(%rsp), %rax
  43fe1d:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  43fe22:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  43fe27:	48 89 15 32 79 06 00 	movq	%rdx, 424242(%rip)
  43fe2e:	8b 15 dc 3b 08 00 	movl	539612(%rip), %edx
  43fe34:	85 d2 	testl	%edx, %edx
  43fe36:	75 1a 	jne	26 <runtime.typelinksinit+0x6a2>
  43fe38:	48 89 05 11 79 06 00 	movq	%rax, 424209(%rip)
  43fe3f:	48 89 ca 	movq	%rcx, %rdx
  43fe42:	48 89 c1 	movq	%rax, %rcx
  43fe45:	48 8b 84 24 88 00 00 00 	movq	136(%rsp), %rax
  43fe4d:	e9 3d fd ff ff 	jmp	-707 <runtime.typelinksinit+0x3df>
  43fe52:	48 8d 3d f7 78 06 00 	leaq	424183(%rip), %rdi
  43fe59:	e8 42 6a 00 00 	callq	27202 <runtime.gcWriteBarrier>
  43fe5e:	eb df 	jmp	-33 <runtime.typelinksinit+0x68f>
  43fe60:	48 8b ac 24 c0 02 00 00 	movq	704(%rsp), %rbp
  43fe68:	48 81 c4 c8 02 00 00 	addq	$712, %rsp
  43fe6f:	c3 	retq
  43fe70:	31 db 	xorl	%ebx, %ebx
  43fe72:	31 d2 	xorl	%edx, %edx
  43fe74:	31 c9 	xorl	%ecx, %ecx
  43fe76:	e9 40 fa ff ff 	jmp	-1472 <runtime.typelinksinit+0x10b>
  43fe7b:	48 8b ac 24 c0 02 00 00 	movq	704(%rsp), %rbp
  43fe83:	48 81 c4 c8 02 00 00 	addq	$712, %rsp
  43fe8a:	c3 	retq
  43fe8b:	e8 b0 fb fd ff 	callq	-132176 <runtime.panicindex>
  43fe90:	0f 0b 	ud2
  43fe92:	e8 d9 46 00 00 	callq	18137 <runtime.morestack_noctxt>
  43fe97:	e9 14 f9 ff ff 	jmp	-1772 <runtime.typelinksinit>
  43fe9c:	cc 	int3
  43fe9d:	cc 	int3
  43fe9e:	cc 	int3
  43fe9f:	cc 	int3

runtime.typesEqual:
  43fea0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  43fea9:	48 8d 84 24 38 ff ff ff 	leaq	-200(%rsp), %rax
  43feb1:	48 3b 41 10 	cmpq	16(%rcx), %rax
  43feb5:	0f 86 42 0f 00 00 	jbe	3906 <runtime.typesEqual+0xf5d>
  43febb:	48 81 ec 48 01 00 00 	subq	$328, %rsp
  43fec2:	48 89 ac 24 40 01 00 00 	movq	%rbp, 320(%rsp)
  43feca:	48 8d ac 24 40 01 00 00 	leaq	320(%rsp), %rbp
  43fed2:	48 8b 84 24 50 01 00 00 	movq	336(%rsp), %rax
  43feda:	48 89 84 24 30 01 00 00 	movq	%rax, 304(%rsp)
  43fee2:	48 8b 8c 24 58 01 00 00 	movq	344(%rsp), %rcx
  43feea:	48 89 8c 24 38 01 00 00 	movq	%rcx, 312(%rsp)
  43fef2:	48 8d 15 e7 aa 01 00 	leaq	109287(%rip), %rdx
  43fef9:	48 89 14 24 	movq	%rdx, (%rsp)
  43fefd:	48 8b 9c 24 60 01 00 00 	movq	352(%rsp), %rbx
  43ff05:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  43ff0a:	48 8d b4 24 30 01 00 00 	leaq	304(%rsp), %rsi
  43ff12:	48 89 74 24 10 	movq	%rsi, 16(%rsp)
  43ff17:	e8 54 65 fc ff 	callq	-236204 <runtime.mapaccess2>
  43ff1c:	0f b6 44 24 20 	movzbl	32(%rsp), %eax
  43ff21:	84 c0 	testb	%al, %al
  43ff23:	0f 85 30 0e 00 00 	jne	3632 <runtime.typesEqual+0xeb9>
  43ff29:	48 8b 84 24 50 01 00 00 	movq	336(%rsp), %rax
  43ff31:	48 89 84 24 20 01 00 00 	movq	%rax, 288(%rsp)
  43ff39:	48 8b 8c 24 58 01 00 00 	movq	344(%rsp), %rcx
  43ff41:	48 89 8c 24 28 01 00 00 	movq	%rcx, 296(%rsp)
  43ff49:	48 8d 15 90 aa 01 00 	leaq	109200(%rip), %rdx
  43ff50:	48 89 14 24 	movq	%rdx, (%rsp)
  43ff54:	48 8b 94 24 60 01 00 00 	movq	352(%rsp), %rdx
  43ff5c:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  43ff61:	48 8d 9c 24 20 01 00 00 	leaq	288(%rsp), %rbx
  43ff69:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  43ff6e:	e8 3d 67 fc ff 	callq	-235715 <runtime.mapassign>
  43ff73:	48 8b 44 24 18 	movq	24(%rsp), %rax
  43ff78:	84 00 	testb	%al, (%rax)
  43ff7a:	48 8b 84 24 50 01 00 00 	movq	336(%rsp), %rax
  43ff82:	48 8b 8c 24 58 01 00 00 	movq	344(%rsp), %rcx
  43ff8a:	48 39 c8 	cmpq	%rcx, %rax
  43ff8d:	0f 84 ae 0d 00 00 	je	3502 <runtime.typesEqual+0xea1>
  43ff93:	0f b6 50 17 	movzbl	23(%rax), %edx
  43ff97:	89 d3 	movl	%edx, %ebx
  43ff99:	83 e2 1f 	andl	$31, %edx
  43ff9c:	0f b6 71 17 	movzbl	23(%rcx), %esi
  43ffa0:	83 e6 1f 	andl	$31, %esi
  43ffa3:	40 38 f2 	cmpb	%sil, %dl
  43ffa6:	0f 85 7d 0d 00 00 	jne	3453 <runtime.typesEqual+0xe89>
  43ffac:	88 5c 24 2f 	movb	%bl, 47(%rsp)
  43ffb0:	88 54 24 2e 	movb	%dl, 46(%rsp)
  43ffb4:	48 89 04 24 	movq	%rax, (%rsp)
  43ffb8:	e8 b3 e9 ff ff 	callq	-5709 <runtime.(*_type).string>
  43ffbd:	48 8b 44 24 10 	movq	16(%rsp), %rax
  43ffc2:	48 89 84 24 88 00 00 00 	movq	%rax, 136(%rsp)
  43ffca:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  43ffcf:	48 89 8c 24 18 01 00 00 	movq	%rcx, 280(%rsp)
  43ffd7:	48 8b 94 24 58 01 00 00 	movq	344(%rsp), %rdx
  43ffdf:	48 89 14 24 	movq	%rdx, (%rsp)
  43ffe3:	e8 88 e9 ff ff 	callq	-5752 <runtime.(*_type).string>
  43ffe8:	48 8b 44 24 10 	movq	16(%rsp), %rax
  43ffed:	48 8b 8c 24 88 00 00 00 	movq	136(%rsp), %rcx
  43fff5:	48 39 c8 	cmpq	%rcx, %rax
  43fff8:	74 18 	je	24 <runtime.typesEqual+0x172>
  43fffa:	c6 84 24 68 01 00 00 00 	movb	$0, 360(%rsp)
  440002:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  44000a:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  440011:	c3 	retq
  440012:	48 8b 84 24 18 01 00 00 	movq	280(%rsp), %rax
  44001a:	48 89 04 24 	movq	%rax, (%rsp)
  44001e:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  440023:	e8 18 63 00 00 	callq	25368 <runtime.memequal>
  440028:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44002d:	84 c0 	testb	%al, %al
  44002f:	74 c9 	je	-55 <runtime.typesEqual+0x15a>
  440031:	48 8b 84 24 50 01 00 00 	movq	336(%rsp), %rax
  440039:	48 89 04 24 	movq	%rax, (%rsp)
  44003d:	e8 de e9 ff ff 	callq	-5666 <runtime.(*_type).uncommon>
  440042:	48 8b 44 24 08 	movq	8(%rsp), %rax
  440047:	48 89 84 24 a8 00 00 00 	movq	%rax, 168(%rsp)
  44004f:	48 8b 8c 24 58 01 00 00 	movq	344(%rsp), %rcx
  440057:	48 89 0c 24 	movq	%rcx, (%rsp)
  44005b:	e8 c0 e9 ff ff 	callq	-5696 <runtime.(*_type).uncommon>
  440060:	48 8b 44 24 08 	movq	8(%rsp), %rax
  440065:	48 8b 8c 24 a8 00 00 00 	movq	168(%rsp), %rcx
  44006d:	48 85 c9 	testq	%rcx, %rcx
  440070:	0f 85 d9 0b 00 00 	jne	3033 <runtime.typesEqual+0xdaf>
  440076:	48 85 c0 	testq	%rax, %rax
  440079:	0f 85 cd 0b 00 00 	jne	3021 <runtime.typesEqual+0xdac>
  44007f:	0f b6 44 24 2e 	movzbl	46(%rsp), %eax
  440084:	8d 48 ff 	leal	-1(%rax), %ecx
  440087:	80 f9 0f 	cmpb	$15, %cl
  44008a:	0f 86 a4 0b 00 00 	jbe	2980 <runtime.typesEqual+0xd94>
  440090:	3c 15 	cmpb	$21, %al
  440092:	0f 87 9b 07 00 00 	ja	1947 <runtime.typesEqual+0x993>
  440098:	3c 12 	cmpb	$18, %al
  44009a:	0f 86 b2 06 00 00 	jbe	1714 <runtime.typesEqual+0x8b2>
  4400a0:	3c 13 	cmpb	$19, %al
  4400a2:	0f 85 a9 02 00 00 	jne	681 <runtime.typesEqual+0x4b1>
  4400a8:	48 8b 84 24 50 01 00 00 	movq	336(%rsp), %rax
  4400b0:	0f b7 48 32 	movzwl	50(%rax), %ecx
  4400b4:	48 8b 94 24 58 01 00 00 	movq	344(%rsp), %rdx
  4400bc:	0f b7 5a 32 	movzwl	50(%rdx), %ebx
  4400c0:	66 39 d9 	cmpw	%bx, %cx
  4400c3:	0f 85 70 02 00 00 	jne	624 <runtime.typesEqual+0x499>
  4400c9:	0f b7 48 30 	movzwl	48(%rax), %ecx
  4400cd:	0f b7 5a 30 	movzwl	48(%rdx), %ebx
  4400d1:	66 39 cb 	cmpw	%cx, %bx
  4400d4:	0f 85 5f 02 00 00 	jne	607 <runtime.typesEqual+0x499>
  4400da:	0f b6 70 14 	movzbl	20(%rax), %esi
  4400de:	40 f6 c6 01 	testb	$1, %sil
  4400e2:	0f 84 47 02 00 00 	je	583 <runtime.typesEqual+0x48f>
  4400e8:	be 48 00 00 00 	movl	$72, %esi
  4400ed:	48 01 c6 	addq	%rax, %rsi
  4400f0:	84 06 	testb	%al, (%rsi)
  4400f2:	0f b7 c9 	movzwl	%cx, %ecx
  4400f5:	0f b6 7a 14 	movzbl	20(%rdx), %edi
  4400f9:	40 f6 c7 01 	testb	$1, %dil
  4400fd:	0f 84 22 02 00 00 	je	546 <runtime.typesEqual+0x485>
  440103:	bf 48 00 00 00 	movl	$72, %edi
  440108:	48 01 d7 	addq	%rdx, %rdi
  44010b:	84 07 	testb	%al, (%rdi)
  44010d:	0f b7 db 	movzwl	%bx, %ebx
  440110:	48 89 b4 24 10 01 00 00 	movq	%rsi, 272(%rsp)
  440118:	48 89 4c 24 48 	movq	%rcx, 72(%rsp)
  44011d:	48 89 bc 24 08 01 00 00 	movq	%rdi, 264(%rsp)
  440125:	48 89 5c 24 38 	movq	%rbx, 56(%rsp)
  44012a:	45 31 c0 	xorl	%r8d, %r8d
  44012d:	eb 33 	jmp	51 <runtime.typesEqual+0x2c2>
  44012f:	4c 8b 4c 24 58 	movq	88(%rsp), %r9
  440134:	4d 8d 41 01 	leaq	1(%r9), %r8
  440138:	48 8b 84 24 50 01 00 00 	movq	336(%rsp), %rax
  440140:	48 8b 4c 24 48 	movq	72(%rsp), %rcx
  440145:	48 8b 94 24 58 01 00 00 	movq	344(%rsp), %rdx
  44014d:	48 8b 5c 24 38 	movq	56(%rsp), %rbx
  440152:	48 8b b4 24 10 01 00 00 	movq	272(%rsp), %rsi
  44015a:	48 8b bc 24 08 01 00 00 	movq	264(%rsp), %rdi
  440162:	49 39 c8 	cmpq	%rcx, %r8
  440165:	7d 52 	jge	82 <runtime.typesEqual+0x319>
  440167:	4e 8b 0c c6 	movq	(%rsi,%r8,8), %r9
  44016b:	49 39 d8 	cmpq	%rbx, %r8
  44016e:	0f 83 2e 0c 00 00 	jae	3118 <runtime.typesEqual+0xf02>
  440174:	4c 89 44 24 58 	movq	%r8, 88(%rsp)
  440179:	4a 8b 04 c7 	movq	(%rdi,%r8,8), %rax
  44017d:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  440182:	4c 89 0c 24 	movq	%r9, (%rsp)
  440186:	48 8b 84 24 60 01 00 00 	movq	352(%rsp), %rax
  44018e:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  440193:	e8 08 fd ff ff 	callq	-760 <runtime.typesEqual>
  440198:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44019d:	84 c0 	testb	%al, %al
  44019f:	75 8e 	jne	-114 <runtime.typesEqual+0x28f>
  4401a1:	c6 84 24 68 01 00 00 00 	movb	$0, 360(%rsp)
  4401a9:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  4401b1:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  4401b8:	c3 	retq
  4401b9:	0f b6 48 14 	movzbl	20(%rax), %ecx
  4401bd:	f6 c1 01 	testb	$1, %cl
  4401c0:	0f 84 55 01 00 00 	je	341 <runtime.typesEqual+0x47b>
  4401c6:	b9 48 00 00 00 	movl	$72, %ecx
  4401cb:	48 01 c1 	addq	%rax, %rcx
  4401ce:	84 01 	testb	%al, (%rcx)
  4401d0:	0f b7 58 32 	movzwl	50(%rax), %ebx
  4401d4:	81 e3 ff 7f 00 00 	andl	$32767, %ebx
  4401da:	0f b7 40 30 	movzwl	48(%rax), %eax
  4401de:	0f b7 f0 	movzwl	%ax, %esi
  4401e1:	01 d8 	addl	%ebx, %eax
  4401e3:	0f b7 c0 	movzwl	%ax, %eax
  4401e6:	48 39 c6 	cmpq	%rax, %rsi
  4401e9:	0f 87 ac 0b 00 00 	ja	2988 <runtime.typesEqual+0xefb>
  4401ef:	48 29 f0 	subq	%rsi, %rax
  4401f2:	48 8d 9e 00 00 f0 ff 	leaq	-1048576(%rsi), %rbx
  4401f9:	48 f7 db 	negq	%rbx
  4401fc:	48 f7 db 	negq	%rbx
  4401ff:	48 c1 fb 3f 	sarq	$63, %rbx
  440203:	48 c1 e6 03 	shlq	$3, %rsi
  440207:	48 21 de 	andq	%rbx, %rsi
  44020a:	48 01 f1 	addq	%rsi, %rcx
  44020d:	0f b6 5a 14 	movzbl	20(%rdx), %ebx
  440211:	f6 c3 01 	testb	$1, %bl
  440214:	0f 84 f7 00 00 00 	je	247 <runtime.typesEqual+0x471>
  44021a:	bb 48 00 00 00 	movl	$72, %ebx
  44021f:	48 01 d3 	addq	%rdx, %rbx
  440222:	84 03 	testb	%al, (%rbx)
  440224:	0f b7 72 32 	movzwl	50(%rdx), %esi
  440228:	81 e6 ff 7f 00 00 	andl	$32767, %esi
  44022e:	0f b7 52 30 	movzwl	48(%rdx), %edx
  440232:	0f b7 fa 	movzwl	%dx, %edi
  440235:	01 f2 	addl	%esi, %edx
  440237:	0f b7 d2 	movzwl	%dx, %edx
  44023a:	48 39 d7 	cmpq	%rdx, %rdi
  44023d:	0f 87 51 0b 00 00 	ja	2897 <runtime.typesEqual+0xef4>
  440243:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  440248:	48 89 8c 24 b0 00 00 00 	movq	%rcx, 176(%rsp)
  440250:	48 29 fa 	subq	%rdi, %rdx
  440253:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  440258:	48 8d b7 00 00 f0 ff 	leaq	-1048576(%rdi), %rsi
  44025f:	48 f7 de 	negq	%rsi
  440262:	48 f7 de 	negq	%rsi
  440265:	48 c1 e7 03 	shlq	$3, %rdi
  440269:	48 c1 fe 3f 	sarq	$63, %rsi
  44026d:	48 21 f7 	andq	%rsi, %rdi
  440270:	48 01 fb 	addq	%rdi, %rbx
  440273:	48 89 9c 24 90 00 00 00 	movq	%rbx, 144(%rsp)
  44027b:	31 f6 	xorl	%esi, %esi
  44027d:	eb 23 	jmp	35 <runtime.typesEqual+0x402>
  44027f:	48 8b 7c 24 68 	movq	104(%rsp), %rdi
  440284:	48 8d 77 01 	leaq	1(%rdi), %rsi
  440288:	48 8b 44 24 40 	movq	64(%rsp), %rax
  44028d:	48 8b 8c 24 b0 00 00 00 	movq	176(%rsp), %rcx
  440295:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  44029a:	48 8b 9c 24 90 00 00 00 	movq	144(%rsp), %rbx
  4402a2:	48 39 c6 	cmpq	%rax, %rsi
  4402a5:	7d 52 	jge	82 <runtime.typesEqual+0x459>
  4402a7:	48 8b 3c f1 	movq	(%rcx,%rsi,8), %rdi
  4402ab:	48 39 d6 	cmpq	%rdx, %rsi
  4402ae:	0f 83 d9 0a 00 00 	jae	2777 <runtime.typesEqual+0xeed>
  4402b4:	48 89 74 24 68 	movq	%rsi, 104(%rsp)
  4402b9:	48 8b 04 f3 	movq	(%rbx,%rsi,8), %rax
  4402bd:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4402c2:	48 89 3c 24 	movq	%rdi, (%rsp)
  4402c6:	48 8b 84 24 60 01 00 00 	movq	352(%rsp), %rax
  4402ce:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  4402d3:	e8 c8 fb ff ff 	callq	-1080 <runtime.typesEqual>
  4402d8:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  4402dd:	84 c0 	testb	%al, %al
  4402df:	75 9e 	jne	-98 <runtime.typesEqual+0x3df>
  4402e1:	c6 84 24 68 01 00 00 00 	movb	$0, 360(%rsp)
  4402e9:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  4402f1:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  4402f8:	c3 	retq
  4402f9:	c6 84 24 68 01 00 00 01 	movb	$1, 360(%rsp)
  440301:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  440309:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  440310:	c3 	retq
  440311:	bb 38 00 00 00 	movl	$56, %ebx
  440316:	e9 04 ff ff ff 	jmp	-252 <runtime.typesEqual+0x37f>
  44031b:	b9 38 00 00 00 	movl	$56, %ecx
  440320:	e9 a6 fe ff ff 	jmp	-346 <runtime.typesEqual+0x32b>
  440325:	bf 38 00 00 00 	movl	$56, %edi
  44032a:	e9 d9 fd ff ff 	jmp	-551 <runtime.typesEqual+0x268>
  44032f:	be 38 00 00 00 	movl	$56, %esi
  440334:	e9 b4 fd ff ff 	jmp	-588 <runtime.typesEqual+0x24d>
  440339:	c6 84 24 68 01 00 00 00 	movb	$0, 360(%rsp)
  440341:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  440349:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  440350:	c3 	retq
  440351:	3c 14 	cmpb	$20, %al
  440353:	0f 85 6a 03 00 00 	jne	874 <runtime.typesEqual+0x823>
  440359:	48 8b 84 24 50 01 00 00 	movq	336(%rsp), %rax
  440361:	48 8b 48 30 	movq	48(%rax), %rcx
  440365:	48 89 0c 24 	movq	%rcx, (%rsp)
  440369:	e8 22 f2 ff ff 	callq	-3550 <runtime.name.name>
  44036e:	48 8b 44 24 10 	movq	16(%rsp), %rax
  440373:	48 89 84 24 88 00 00 00 	movq	%rax, 136(%rsp)
  44037b:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  440380:	48 89 8c 24 18 01 00 00 	movq	%rcx, 280(%rsp)
  440388:	48 8b 94 24 58 01 00 00 	movq	344(%rsp), %rdx
  440390:	48 8b 5a 30 	movq	48(%rdx), %rbx
  440394:	48 89 1c 24 	movq	%rbx, (%rsp)
  440398:	e8 f3 f1 ff ff 	callq	-3597 <runtime.name.name>
  44039d:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4403a2:	48 8b 8c 24 88 00 00 00 	movq	136(%rsp), %rcx
  4403aa:	48 39 c8 	cmpq	%rcx, %rax
  4403ad:	74 18 	je	24 <runtime.typesEqual+0x527>
  4403af:	c6 84 24 68 01 00 00 00 	movb	$0, 360(%rsp)
  4403b7:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  4403bf:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  4403c6:	c3 	retq
  4403c7:	48 8b 84 24 18 01 00 00 	movq	280(%rsp), %rax
  4403cf:	48 89 04 24 	movq	%rax, (%rsp)
  4403d3:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  4403d8:	e8 63 5f 00 00 	callq	24419 <runtime.memequal>
  4403dd:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  4403e2:	84 c0 	testb	%al, %al
  4403e4:	74 c9 	je	-55 <runtime.typesEqual+0x50f>
  4403e6:	48 8b 84 24 50 01 00 00 	movq	336(%rsp), %rax
  4403ee:	48 8b 48 40 	movq	64(%rax), %rcx
  4403f2:	48 8b 94 24 58 01 00 00 	movq	344(%rsp), %rdx
  4403fa:	48 8b 5a 40 	movq	64(%rdx), %rbx
  4403fe:	48 39 d9 	cmpq	%rbx, %rcx
  440401:	0f 85 a4 02 00 00 	jne	676 <runtime.typesEqual+0x80b>
  440407:	48 89 8c 24 88 00 00 00 	movq	%rcx, 136(%rsp)
  44040f:	31 db 	xorl	%ebx, %ebx
  440411:	eb 21 	jmp	33 <runtime.typesEqual+0x594>
  440413:	48 8b 74 24 60 	movq	96(%rsp), %rsi
  440418:	48 8d 5e 01 	leaq	1(%rsi), %rbx
  44041c:	48 8b 84 24 50 01 00 00 	movq	336(%rsp), %rax
  440424:	48 8b 8c 24 88 00 00 00 	movq	136(%rsp), %rcx
  44042c:	48 8b 94 24 58 01 00 00 	movq	344(%rsp), %rdx
  440434:	48 39 cb 	cmpq	%rcx, %rbx
  440437:	0f 8d 56 02 00 00 	jge	598 <runtime.typesEqual+0x7f3>
  44043d:	48 8b 70 40 	movq	64(%rax), %rsi
  440441:	48 8b 78 38 	movq	56(%rax), %rdi
  440445:	48 39 f3 	cmpq	%rsi, %rbx
  440448:	0f 83 38 09 00 00 	jae	2360 <runtime.typesEqual+0xee6>
  44044e:	48 8d 34 df 	leaq	(%rdi,%rbx,8), %rsi
  440452:	4c 8b 42 40 	movq	64(%rdx), %r8
  440456:	4c 8b 4a 38 	movq	56(%rdx), %r9
  44045a:	4c 39 c3 	cmpq	%r8, %rbx
  44045d:	0f 83 1c 09 00 00 	jae	2332 <runtime.typesEqual+0xedf>
  440463:	4c 89 8c 24 00 01 00 00 	movq	%r9, 256(%rsp)
  44046b:	48 89 bc 24 f8 00 00 00 	movq	%rdi, 248(%rsp)
  440473:	48 89 5c 24 60 	movq	%rbx, 96(%rsp)
  440478:	48 89 b4 24 b8 00 00 00 	movq	%rsi, 184(%rsp)
  440480:	8b 04 df 	movl	(%rdi,%rbx,8), %eax
  440483:	89 44 24 08 	movl	%eax, 8(%rsp)
  440487:	48 89 34 24 	movq	%rsi, (%rsp)
  44048b:	e8 c0 e6 ff ff 	callq	-6464 <runtime.resolveNameOff>
  440490:	48 8b 44 24 10 	movq	16(%rsp), %rax
  440495:	48 89 84 24 f0 00 00 00 	movq	%rax, 240(%rsp)
  44049d:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  4404a2:	48 8b 94 24 00 01 00 00 	movq	256(%rsp), %rdx
  4404aa:	8b 1c ca 	movl	(%rdx,%rcx,8), %ebx
  4404ad:	89 5c 24 08 	movl	%ebx, 8(%rsp)
  4404b1:	48 8d 1c ca 	leaq	(%rdx,%rcx,8), %rbx
  4404b5:	48 89 9c 24 98 00 00 00 	movq	%rbx, 152(%rsp)
  4404bd:	48 89 1c 24 	movq	%rbx, (%rsp)
  4404c1:	e8 8a e6 ff ff 	callq	-6518 <runtime.resolveNameOff>
  4404c6:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4404cb:	48 89 84 24 e8 00 00 00 	movq	%rax, 232(%rsp)
  4404d3:	48 8b 8c 24 f0 00 00 00 	movq	240(%rsp), %rcx
  4404db:	48 89 0c 24 	movq	%rcx, (%rsp)
  4404df:	e8 ac f0 ff ff 	callq	-3924 <runtime.name.name>
  4404e4:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4404e9:	48 89 84 24 80 00 00 00 	movq	%rax, 128(%rsp)
  4404f1:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  4404f6:	48 89 8c 24 e0 00 00 00 	movq	%rcx, 224(%rsp)
  4404fe:	48 8b 94 24 e8 00 00 00 	movq	232(%rsp), %rdx
  440506:	48 89 14 24 	movq	%rdx, (%rsp)
  44050a:	e8 81 f0 ff ff 	callq	-3967 <runtime.name.name>
  44050f:	48 8b 44 24 10 	movq	16(%rsp), %rax
  440514:	48 8b 8c 24 80 00 00 00 	movq	128(%rsp), %rcx
  44051c:	48 39 c8 	cmpq	%rcx, %rax
  44051f:	0f 85 56 01 00 00 	jne	342 <runtime.typesEqual+0x7db>
  440525:	48 8b 84 24 e0 00 00 00 	movq	224(%rsp), %rax
  44052d:	48 89 04 24 	movq	%rax, (%rsp)
  440531:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  440536:	e8 05 5e 00 00 	callq	24069 <runtime.memequal>
  44053b:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  440540:	84 c0 	testb	%al, %al
  440542:	0f 84 33 01 00 00 	je	307 <runtime.typesEqual+0x7db>
  440548:	48 8b 84 24 f0 00 00 00 	movq	240(%rsp), %rax
  440550:	48 89 04 24 	movq	%rax, (%rsp)
  440554:	e8 47 f1 ff ff 	callq	-3769 <runtime.name.pkgPath>
  440559:	48 8b 44 24 10 	movq	16(%rsp), %rax
  44055e:	48 89 84 24 80 00 00 00 	movq	%rax, 128(%rsp)
  440566:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  44056b:	48 89 8c 24 18 01 00 00 	movq	%rcx, 280(%rsp)
  440573:	48 8b 94 24 e8 00 00 00 	movq	232(%rsp), %rdx
  44057b:	48 89 14 24 	movq	%rdx, (%rsp)
  44057f:	e8 1c f1 ff ff 	callq	-3812 <runtime.name.pkgPath>
  440584:	48 8b 44 24 10 	movq	16(%rsp), %rax
  440589:	48 8b 8c 24 80 00 00 00 	movq	128(%rsp), %rcx
  440591:	48 39 c8 	cmpq	%rcx, %rax
  440594:	0f 85 c9 00 00 00 	jne	201 <runtime.typesEqual+0x7c3>
  44059a:	48 8b 84 24 18 01 00 00 	movq	280(%rsp), %rax
  4405a2:	48 89 04 24 	movq	%rax, (%rsp)
  4405a6:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  4405ab:	e8 90 5d 00 00 	callq	23952 <runtime.memequal>
  4405b0:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  4405b5:	84 c0 	testb	%al, %al
  4405b7:	0f 84 a6 00 00 00 	je	166 <runtime.typesEqual+0x7c3>
  4405bd:	48 8b 44 24 60 	movq	96(%rsp), %rax
  4405c2:	48 8b 8c 24 f8 00 00 00 	movq	248(%rsp), %rcx
  4405ca:	8b 4c c1 04 	movl	4(%rcx,%rax,8), %ecx
  4405ce:	89 4c 24 08 	movl	%ecx, 8(%rsp)
  4405d2:	48 8b 8c 24 b8 00 00 00 	movq	184(%rsp), %rcx
  4405da:	48 89 0c 24 	movq	%rcx, (%rsp)
  4405de:	e8 9d e8 ff ff 	callq	-5987 <runtime.resolveTypeOff>
  4405e3:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4405e8:	48 89 84 24 c0 00 00 00 	movq	%rax, 192(%rsp)
  4405f0:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  4405f5:	48 8b 94 24 00 01 00 00 	movq	256(%rsp), %rdx
  4405fd:	8b 54 ca 04 	movl	4(%rdx,%rcx,8), %edx
  440601:	89 54 24 08 	movl	%edx, 8(%rsp)
  440605:	48 8b 94 24 98 00 00 00 	movq	152(%rsp), %rdx
  44060d:	48 89 14 24 	movq	%rdx, (%rsp)
  440611:	e8 6a e8 ff ff 	callq	-6038 <runtime.resolveTypeOff>
  440616:	48 8b 44 24 10 	movq	16(%rsp), %rax
  44061b:	48 8b 8c 24 c0 00 00 00 	movq	192(%rsp), %rcx
  440623:	48 89 0c 24 	movq	%rcx, (%rsp)
  440627:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44062c:	48 8b 84 24 60 01 00 00 	movq	352(%rsp), %rax
  440634:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  440639:	e8 62 f8 ff ff 	callq	-1950 <runtime.typesEqual>
  44063e:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  440643:	84 c0 	testb	%al, %al
  440645:	0f 85 c8 fd ff ff 	jne	-568 <runtime.typesEqual+0x573>
  44064b:	c6 84 24 68 01 00 00 00 	movb	$0, 360(%rsp)
  440653:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  44065b:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  440662:	c3 	retq
  440663:	c6 84 24 68 01 00 00 00 	movb	$0, 360(%rsp)
  44066b:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  440673:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  44067a:	c3 	retq
  44067b:	c6 84 24 68 01 00 00 00 	movb	$0, 360(%rsp)
  440683:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  44068b:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  440692:	c3 	retq
  440693:	c6 84 24 68 01 00 00 01 	movb	$1, 360(%rsp)
  44069b:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  4406a3:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  4406aa:	c3 	retq
  4406ab:	c6 84 24 68 01 00 00 00 	movb	$0, 360(%rsp)
  4406b3:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  4406bb:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  4406c2:	c3 	retq
  4406c3:	48 8b 84 24 50 01 00 00 	movq	336(%rsp), %rax
  4406cb:	48 8b 48 30 	movq	48(%rax), %rcx
  4406cf:	48 8b 94 24 58 01 00 00 	movq	344(%rsp), %rdx
  4406d7:	48 8b 5a 30 	movq	48(%rdx), %rbx
  4406db:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  4406e0:	48 89 0c 24 	movq	%rcx, (%rsp)
  4406e4:	48 8b 8c 24 60 01 00 00 	movq	352(%rsp), %rcx
  4406ec:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  4406f1:	e8 aa f7 ff ff 	callq	-2134 <runtime.typesEqual>
  4406f6:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  4406fb:	84 c0 	testb	%al, %al
  4406fd:	75 19 	jne	25 <runtime.typesEqual+0x878>
  4406ff:	31 c0 	xorl	%eax, %eax
  440701:	88 84 24 68 01 00 00 	movb	%al, 360(%rsp)
  440708:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  440710:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  440717:	c3 	retq
  440718:	48 8b 84 24 50 01 00 00 	movq	336(%rsp), %rax
  440720:	48 8b 40 38 	movq	56(%rax), %rax
  440724:	48 8b 8c 24 58 01 00 00 	movq	344(%rsp), %rcx
  44072c:	48 8b 49 38 	movq	56(%rcx), %rcx
  440730:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  440735:	48 89 04 24 	movq	%rax, (%rsp)
  440739:	48 8b 84 24 60 01 00 00 	movq	352(%rsp), %rax
  440741:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  440746:	e8 55 f7 ff ff 	callq	-2219 <runtime.typesEqual>
  44074b:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  440750:	eb af 	jmp	-81 <runtime.typesEqual+0x861>
  440752:	3c 11 	cmpb	$17, %al
  440754:	74 68 	je	104 <runtime.typesEqual+0x91e>
  440756:	3c 12 	cmpb	$18, %al
  440758:	0f 85 4b 06 00 00 	jne	1611 <runtime.typesEqual+0xf09>
  44075e:	48 8b 84 24 50 01 00 00 	movq	336(%rsp), %rax
  440766:	48 8b 48 38 	movq	56(%rax), %rcx
  44076a:	48 8b 94 24 58 01 00 00 	movq	344(%rsp), %rdx
  440772:	48 8b 5a 38 	movq	56(%rdx), %rbx
  440776:	48 39 d9 	cmpq	%rbx, %rcx
  440779:	74 19 	je	25 <runtime.typesEqual+0x8f4>
  44077b:	31 c0 	xorl	%eax, %eax
  44077d:	88 84 24 68 01 00 00 	movb	%al, 360(%rsp)
  440784:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  44078c:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  440793:	c3 	retq
  440794:	48 8b 40 30 	movq	48(%rax), %rax
  440798:	48 8b 4a 30 	movq	48(%rdx), %rcx
  44079c:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4407a1:	48 89 04 24 	movq	%rax, (%rsp)
  4407a5:	48 8b 84 24 60 01 00 00 	movq	352(%rsp), %rax
  4407ad:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  4407b2:	e8 e9 f6 ff ff 	callq	-2327 <runtime.typesEqual>
  4407b7:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  4407bc:	eb bf 	jmp	-65 <runtime.typesEqual+0x8dd>
  4407be:	48 8b 84 24 50 01 00 00 	movq	336(%rsp), %rax
  4407c6:	48 8b 48 30 	movq	48(%rax), %rcx
  4407ca:	48 8b 94 24 58 01 00 00 	movq	344(%rsp), %rdx
  4407d2:	48 8b 5a 30 	movq	48(%rdx), %rbx
  4407d6:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  4407db:	48 89 0c 24 	movq	%rcx, (%rsp)
  4407df:	48 8b 8c 24 60 01 00 00 	movq	352(%rsp), %rcx
  4407e7:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  4407ec:	e8 af f6 ff ff 	callq	-2385 <runtime.typesEqual>
  4407f1:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  4407f6:	84 c0 	testb	%al, %al
  4407f8:	74 35 	je	53 <runtime.typesEqual+0x98f>
  4407fa:	48 8b 84 24 50 01 00 00 	movq	336(%rsp), %rax
  440802:	48 8b 40 40 	movq	64(%rax), %rax
  440806:	48 8b 8c 24 58 01 00 00 	movq	344(%rsp), %rcx
  44080e:	48 8b 49 40 	movq	64(%rcx), %rcx
  440812:	48 39 c8 	cmpq	%rcx, %rax
  440815:	0f 94 c0 	sete	%al
  440818:	88 84 24 68 01 00 00 	movb	%al, 360(%rsp)
  44081f:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  440827:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  44082e:	c3 	retq
  44082f:	31 c0 	xorl	%eax, %eax
  440831:	eb e5 	jmp	-27 <runtime.typesEqual+0x978>
  440833:	3c 17 	cmpb	$23, %al
  440835:	0f 87 a2 00 00 00 	ja	162 <runtime.typesEqual+0xa3d>
  44083b:	3c 16 	cmpb	$22, %al
  44083d:	75 4f 	jne	79 <runtime.typesEqual+0x9ee>
  44083f:	48 8b 84 24 50 01 00 00 	movq	336(%rsp), %rax
  440847:	48 8b 40 30 	movq	48(%rax), %rax
  44084b:	48 8b 8c 24 58 01 00 00 	movq	344(%rsp), %rcx
  440853:	48 8b 49 30 	movq	48(%rcx), %rcx
  440857:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44085c:	48 89 04 24 	movq	%rax, (%rsp)
  440860:	48 8b 84 24 60 01 00 00 	movq	352(%rsp), %rax
  440868:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  44086d:	e8 2e f6 ff ff 	callq	-2514 <runtime.typesEqual>
  440872:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  440877:	88 84 24 68 01 00 00 	movb	%al, 360(%rsp)
  44087e:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  440886:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  44088d:	c3 	retq
  44088e:	48 8b 84 24 50 01 00 00 	movq	336(%rsp), %rax
  440896:	48 8b 40 30 	movq	48(%rax), %rax
  44089a:	48 8b 8c 24 58 01 00 00 	movq	344(%rsp), %rcx
  4408a2:	48 8b 49 30 	movq	48(%rcx), %rcx
  4408a6:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4408ab:	48 89 04 24 	movq	%rax, (%rsp)
  4408af:	48 8b 84 24 60 01 00 00 	movq	352(%rsp), %rax
  4408b7:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  4408bc:	e8 df f5 ff ff 	callq	-2593 <runtime.typesEqual>
  4408c1:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  4408c6:	88 84 24 68 01 00 00 	movb	%al, 360(%rsp)
  4408cd:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  4408d5:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  4408dc:	c3 	retq
  4408dd:	3c 18 	cmpb	$24, %al
  4408df:	75 18 	jne	24 <runtime.typesEqual+0xa59>
  4408e1:	c6 84 24 68 01 00 00 01 	movb	$1, 360(%rsp)
  4408e9:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  4408f1:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  4408f8:	c3 	retq
  4408f9:	3c 19 	cmpb	$25, %al
  4408fb:	0f 85 26 03 00 00 	jne	806 <runtime.typesEqual+0xd87>
  440901:	48 8b 84 24 50 01 00 00 	movq	336(%rsp), %rax
  440909:	48 8b 48 40 	movq	64(%rax), %rcx
  44090d:	48 8b 94 24 58 01 00 00 	movq	344(%rsp), %rdx
  440915:	48 8b 5a 40 	movq	64(%rdx), %rbx
  440919:	48 39 d9 	cmpq	%rbx, %rcx
  44091c:	0f 85 ed 02 00 00 	jne	749 <runtime.typesEqual+0xd6f>
  440922:	48 8b 48 30 	movq	48(%rax), %rcx
  440926:	48 89 0c 24 	movq	%rcx, (%rsp)
  44092a:	e8 61 ec ff ff 	callq	-5023 <runtime.name.name>
  44092f:	48 8b 44 24 10 	movq	16(%rsp), %rax
  440934:	48 89 84 24 88 00 00 00 	movq	%rax, 136(%rsp)
  44093c:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  440941:	48 89 8c 24 18 01 00 00 	movq	%rcx, 280(%rsp)
  440949:	48 8b 94 24 58 01 00 00 	movq	344(%rsp), %rdx
  440951:	48 8b 5a 30 	movq	48(%rdx), %rbx
  440955:	48 89 1c 24 	movq	%rbx, (%rsp)
  440959:	e8 32 ec ff ff 	callq	-5070 <runtime.name.name>
  44095e:	48 8b 44 24 10 	movq	16(%rsp), %rax
  440963:	48 8b 8c 24 88 00 00 00 	movq	136(%rsp), %rcx
  44096b:	48 39 c8 	cmpq	%rcx, %rax
  44096e:	74 18 	je	24 <runtime.typesEqual+0xae8>
  440970:	c6 84 24 68 01 00 00 00 	movb	$0, 360(%rsp)
  440978:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  440980:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  440987:	c3 	retq
  440988:	48 8b 84 24 18 01 00 00 	movq	280(%rsp), %rax
  440990:	48 89 04 24 	movq	%rax, (%rsp)
  440994:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  440999:	e8 a2 59 00 00 	callq	22946 <runtime.memequal>
  44099e:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  4409a3:	84 c0 	testb	%al, %al
  4409a5:	74 c9 	je	-55 <runtime.typesEqual+0xad0>
  4409a7:	48 8b 84 24 50 01 00 00 	movq	336(%rsp), %rax
  4409af:	48 8b 48 40 	movq	64(%rax), %rcx
  4409b3:	48 89 8c 24 88 00 00 00 	movq	%rcx, 136(%rsp)
  4409bb:	31 d2 	xorl	%edx, %edx
  4409bd:	eb 19 	jmp	25 <runtime.typesEqual+0xb38>
  4409bf:	48 8b 5c 24 70 	movq	112(%rsp), %rbx
  4409c4:	48 8d 53 01 	leaq	1(%rbx), %rdx
  4409c8:	48 8b 84 24 50 01 00 00 	movq	336(%rsp), %rax
  4409d0:	48 8b 8c 24 88 00 00 00 	movq	136(%rsp), %rcx
  4409d8:	48 39 ca 	cmpq	%rcx, %rdx
  4409db:	0f 8d 16 02 00 00 	jge	534 <runtime.typesEqual+0xd57>
  4409e1:	48 8b 58 40 	movq	64(%rax), %rbx
  4409e5:	48 8b 70 38 	movq	56(%rax), %rsi
  4409e9:	48 39 da 	cmpq	%rbx, %rdx
  4409ec:	0f 83 86 03 00 00 	jae	902 <runtime.typesEqual+0xed8>
  4409f2:	48 8d 1c 52 	leaq	(%rdx,%rdx,2), %rbx
  4409f6:	48 8b bc 24 58 01 00 00 	movq	344(%rsp), %rdi
  4409fe:	4c 8b 47 40 	movq	64(%rdi), %r8
  440a02:	4c 8b 4f 38 	movq	56(%rdi), %r9
  440a06:	4c 39 c2 	cmpq	%r8, %rdx
  440a09:	0f 83 62 03 00 00 	jae	866 <runtime.typesEqual+0xed1>
  440a0f:	4c 89 8c 24 d8 00 00 00 	movq	%r9, 216(%rsp)
  440a17:	48 89 54 24 70 	movq	%rdx, 112(%rsp)
  440a1c:	48 89 9c 24 80 00 00 00 	movq	%rbx, 128(%rsp)
  440a24:	48 89 b4 24 d0 00 00 00 	movq	%rsi, 208(%rsp)
  440a2c:	48 8b 04 de 	movq	(%rsi,%rbx,8), %rax
  440a30:	48 89 04 24 	movq	%rax, (%rsp)
  440a34:	e8 57 eb ff ff 	callq	-5289 <runtime.name.name>
  440a39:	48 8b 44 24 08 	movq	8(%rsp), %rax
  440a3e:	48 89 84 24 18 01 00 00 	movq	%rax, 280(%rsp)
  440a46:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  440a4b:	48 89 4c 24 78 	movq	%rcx, 120(%rsp)
  440a50:	48 8b 94 24 80 00 00 00 	movq	128(%rsp), %rdx
  440a58:	48 8b 9c 24 d8 00 00 00 	movq	216(%rsp), %rbx
  440a60:	48 8b 34 d3 	movq	(%rbx,%rdx,8), %rsi
  440a64:	48 89 34 24 	movq	%rsi, (%rsp)
  440a68:	e8 23 eb ff ff 	callq	-5341 <runtime.name.name>
  440a6d:	48 8b 44 24 10 	movq	16(%rsp), %rax
  440a72:	48 8b 4c 24 78 	movq	120(%rsp), %rcx
  440a77:	48 39 c8 	cmpq	%rcx, %rax
  440a7a:	0f 85 5f 01 00 00 	jne	351 <runtime.typesEqual+0xd3f>
  440a80:	48 8b 84 24 18 01 00 00 	movq	280(%rsp), %rax
  440a88:	48 89 04 24 	movq	%rax, (%rsp)
  440a8c:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  440a91:	e8 aa 58 00 00 	callq	22698 <runtime.memequal>
  440a96:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  440a9b:	84 c0 	testb	%al, %al
  440a9d:	0f 84 3c 01 00 00 	je	316 <runtime.typesEqual+0xd3f>
  440aa3:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  440aab:	48 8b 8c 24 d0 00 00 00 	movq	208(%rsp), %rcx
  440ab3:	48 8b 54 c1 08 	movq	8(%rcx,%rax,8), %rdx
  440ab8:	48 8b 9c 24 d8 00 00 00 	movq	216(%rsp), %rbx
  440ac0:	48 8b 74 c3 08 	movq	8(%rbx,%rax,8), %rsi
  440ac5:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  440aca:	48 89 14 24 	movq	%rdx, (%rsp)
  440ace:	48 8b 94 24 60 01 00 00 	movq	352(%rsp), %rdx
  440ad6:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  440adb:	e8 c0 f3 ff ff 	callq	-3136 <runtime.typesEqual>
  440ae0:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  440ae5:	84 c0 	testb	%al, %al
  440ae7:	0f 84 da 00 00 00 	je	218 <runtime.typesEqual+0xd27>
  440aed:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  440af5:	48 8b 8c 24 d0 00 00 00 	movq	208(%rsp), %rcx
  440afd:	48 8b 14 c1 	movq	(%rcx,%rax,8), %rdx
  440b01:	48 89 14 24 	movq	%rdx, (%rsp)
  440b05:	e8 e6 ea ff ff 	callq	-5402 <runtime.name.tag>
  440b0a:	48 8b 44 24 10 	movq	16(%rsp), %rax
  440b0f:	48 89 44 24 78 	movq	%rax, 120(%rsp)
  440b14:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  440b19:	48 89 8c 24 18 01 00 00 	movq	%rcx, 280(%rsp)
  440b21:	48 8b 94 24 80 00 00 00 	movq	128(%rsp), %rdx
  440b29:	48 8b 9c 24 d8 00 00 00 	movq	216(%rsp), %rbx
  440b31:	48 8b 34 d3 	movq	(%rbx,%rdx,8), %rsi
  440b35:	48 89 34 24 	movq	%rsi, (%rsp)
  440b39:	e8 b2 ea ff ff 	callq	-5454 <runtime.name.tag>
  440b3e:	48 8b 44 24 10 	movq	16(%rsp), %rax
  440b43:	48 8b 4c 24 78 	movq	120(%rsp), %rcx
  440b48:	48 39 c8 	cmpq	%rcx, %rax
  440b4b:	75 62 	jne	98 <runtime.typesEqual+0xd0f>
  440b4d:	48 8b 84 24 18 01 00 00 	movq	280(%rsp), %rax
  440b55:	48 89 04 24 	movq	%rax, (%rsp)
  440b59:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  440b5e:	e8 dd 57 00 00 	callq	22493 <runtime.memequal>
  440b63:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  440b68:	84 c0 	testb	%al, %al
  440b6a:	74 43 	je	67 <runtime.typesEqual+0xd0f>
  440b6c:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  440b74:	48 8b 8c 24 d0 00 00 00 	movq	208(%rsp), %rcx
  440b7c:	48 8b 4c c1 10 	movq	16(%rcx,%rax,8), %rcx
  440b81:	48 8b 94 24 d8 00 00 00 	movq	216(%rsp), %rdx
  440b89:	48 8b 44 c2 10 	movq	16(%rdx,%rax,8), %rax
  440b8e:	48 39 c1 	cmpq	%rax, %rcx
  440b91:	0f 84 28 fe ff ff 	je	-472 <runtime.typesEqual+0xb1f>
  440b97:	c6 84 24 68 01 00 00 00 	movb	$0, 360(%rsp)
  440b9f:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  440ba7:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  440bae:	c3 	retq
  440baf:	c6 84 24 68 01 00 00 00 	movb	$0, 360(%rsp)
  440bb7:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  440bbf:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  440bc6:	c3 	retq
  440bc7:	c6 84 24 68 01 00 00 00 	movb	$0, 360(%rsp)
  440bcf:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  440bd7:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  440bde:	c3 	retq
  440bdf:	c6 84 24 68 01 00 00 00 	movb	$0, 360(%rsp)
  440be7:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  440bef:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  440bf6:	c3 	retq
  440bf7:	c6 84 24 68 01 00 00 01 	movb	$1, 360(%rsp)
  440bff:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  440c07:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  440c0e:	c3 	retq
  440c0f:	c6 84 24 68 01 00 00 00 	movb	$0, 360(%rsp)
  440c17:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  440c1f:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  440c26:	c3 	retq
  440c27:	3c 1a 	cmpb	$26, %al
  440c29:	0f 84 b2 fc ff ff 	je	-846 <runtime.typesEqual+0xa41>
  440c2f:	e9 75 01 00 00 	jmp	373 <runtime.typesEqual+0xf09>
  440c34:	c6 84 24 68 01 00 00 01 	movb	$1, 360(%rsp)
  440c3c:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  440c44:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  440c4b:	c3 	retq
  440c4c:	48 85 c9 	testq	%rcx, %rcx
  440c4f:	74 05 	je	5 <runtime.typesEqual+0xdb6>
  440c51:	48 85 c0 	testq	%rax, %rax
  440c54:	75 18 	jne	24 <runtime.typesEqual+0xdce>
  440c56:	c6 84 24 68 01 00 00 00 	movb	$0, 360(%rsp)
  440c5e:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  440c66:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  440c6d:	c3 	retq
  440c6e:	48 89 84 24 a0 00 00 00 	movq	%rax, 160(%rsp)
  440c76:	8b 01 	movl	(%rcx), %eax
  440c78:	89 44 24 08 	movl	%eax, 8(%rsp)
  440c7c:	48 8b 84 24 50 01 00 00 	movq	336(%rsp), %rax
  440c84:	48 89 04 24 	movq	%rax, (%rsp)
  440c88:	e8 a3 e1 ff ff 	callq	-7773 <runtime.(*_type).nameOff>
  440c8d:	48 8b 44 24 10 	movq	16(%rsp), %rax
  440c92:	48 89 04 24 	movq	%rax, (%rsp)
  440c96:	e8 f5 e8 ff ff 	callq	-5899 <runtime.name.name>
  440c9b:	48 8b 44 24 10 	movq	16(%rsp), %rax
  440ca0:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  440ca5:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  440caa:	48 89 8c 24 c8 00 00 00 	movq	%rcx, 200(%rsp)
  440cb2:	48 8b 94 24 a0 00 00 00 	movq	160(%rsp), %rdx
  440cba:	8b 12 	movl	(%rdx), %edx
  440cbc:	89 54 24 08 	movl	%edx, 8(%rsp)
  440cc0:	48 8b 94 24 58 01 00 00 	movq	344(%rsp), %rdx
  440cc8:	48 89 14 24 	movq	%rdx, (%rsp)
  440ccc:	e8 5f e1 ff ff 	callq	-7841 <runtime.(*_type).nameOff>
  440cd1:	48 8b 44 24 10 	movq	16(%rsp), %rax
  440cd6:	48 89 04 24 	movq	%rax, (%rsp)
  440cda:	e8 b1 e8 ff ff 	callq	-5967 <runtime.name.name>
  440cdf:	48 8b 44 24 10 	movq	16(%rsp), %rax
  440ce4:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  440ce9:	48 39 c8 	cmpq	%rcx, %rax
  440cec:	75 23 	jne	35 <runtime.typesEqual+0xe71>
  440cee:	48 8b 84 24 c8 00 00 00 	movq	200(%rsp), %rax
  440cf6:	48 89 04 24 	movq	%rax, (%rsp)
  440cfa:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  440cff:	e8 3c 56 00 00 	callq	22076 <runtime.memequal>
  440d04:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  440d09:	84 c0 	testb	%al, %al
  440d0b:	0f 85 6e f3 ff ff 	jne	-3218 <runtime.typesEqual+0x1df>
  440d11:	c6 84 24 68 01 00 00 00 	movb	$0, 360(%rsp)
  440d19:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  440d21:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  440d28:	c3 	retq
  440d29:	c6 84 24 68 01 00 00 00 	movb	$0, 360(%rsp)
  440d31:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  440d39:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  440d40:	c3 	retq
  440d41:	c6 84 24 68 01 00 00 01 	movb	$1, 360(%rsp)
  440d49:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  440d51:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  440d58:	c3 	retq
  440d59:	c6 84 24 68 01 00 00 01 	movb	$1, 360(%rsp)
  440d61:	48 8b ac 24 40 01 00 00 	movq	320(%rsp), %rbp
  440d69:	48 81 c4 48 01 00 00 	addq	$328, %rsp
  440d70:	c3 	retq
  440d71:	e8 ca ec fd ff 	callq	-135990 <runtime.panicindex>
  440d76:	0f 0b 	ud2
  440d78:	e8 c3 ec fd ff 	callq	-135997 <runtime.panicindex>
  440d7d:	0f 0b 	ud2
  440d7f:	e8 bc ec fd ff 	callq	-136004 <runtime.panicindex>
  440d84:	0f 0b 	ud2
  440d86:	e8 b5 ec fd ff 	callq	-136011 <runtime.panicindex>
  440d8b:	0f 0b 	ud2
  440d8d:	e8 ae ec fd ff 	callq	-136018 <runtime.panicindex>
  440d92:	0f 0b 	ud2
  440d94:	e8 17 ed fd ff 	callq	-135913 <runtime.panicslice>
  440d99:	0f 0b 	ud2
  440d9b:	e8 10 ed fd ff 	callq	-135920 <runtime.panicslice>
  440da0:	0f 0b 	ud2
  440da2:	e8 99 ec fd ff 	callq	-136039 <runtime.panicindex>
  440da7:	0f 0b 	ud2
  440da9:	e8 52 0d fe ff 	callq	-127662 <runtime.printlock>
  440dae:	48 8d 05 1e b8 02 00 	leaq	178206(%rip), %rax
  440db5:	48 89 04 24 	movq	%rax, (%rsp)
  440db9:	48 c7 44 24 08 1e 00 00 00 	movq	$30, 8(%rsp)
  440dc2:	e8 79 16 fe ff 	callq	-125319 <runtime.printstring>
  440dc7:	0f b6 44 24 2f 	movzbl	47(%rsp), %eax
  440dcc:	83 e0 1f 	andl	$31, %eax
  440dcf:	48 89 04 24 	movq	%rax, (%rsp)
  440dd3:	e8 98 13 fe ff 	callq	-126056 <runtime.printuint>
  440dd8:	e8 b3 0f fe ff 	callq	-127053 <runtime.printnl>
  440ddd:	e8 9e 0d fe ff 	callq	-127586 <runtime.printunlock>
  440de2:	48 8d 05 cb b4 02 00 	leaq	177355(%rip), %rax
  440de9:	48 89 04 24 	movq	%rax, (%rsp)
  440ded:	48 c7 44 24 08 1d 00 00 00 	movq	$29, 8(%rsp)
  440df6:	e8 d5 03 fe ff 	callq	-130091 <runtime.throw>
  440dfb:	0f 0b 	ud2
  440dfd:	e8 6e 37 00 00 	callq	14190 <runtime.morestack_noctxt>
  440e02:	e9 99 f0 ff ff 	jmp	-3943 <runtime.typesEqual>
  440e07:	cc 	int3
  440e08:	cc 	int3
  440e09:	cc 	int3
  440e0a:	cc 	int3
  440e0b:	cc 	int3
  440e0c:	cc 	int3
  440e0d:	cc 	int3
  440e0e:	cc 	int3
  440e0f:	cc 	int3

runtime.vdso_init_from_sysinfo_ehdr:
  440e10:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  440e19:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  440e1d:	0f 86 43 04 00 00 	jbe	1091 <runtime.vdso_init_from_sysinfo_ehdr+0x456>
  440e23:	48 83 ec 08 	subq	$8, %rsp
  440e27:	48 89 2c 24 	movq	%rbp, (%rsp)
  440e2b:	48 8d 2c 24 	leaq	(%rsp), %rbp
  440e2f:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  440e34:	c6 01 00 	movb	$0, (%rcx)
  440e37:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  440e3c:	48 89 d3 	movq	%rdx, %rbx
  440e3f:	48 89 51 08 	movq	%rdx, 8(%rcx)
  440e43:	48 8b 73 20 	movq	32(%rbx), %rsi
  440e47:	48 01 f2 	addq	%rsi, %rdx
  440e4a:	31 c0 	xorl	%eax, %eax
  440e4c:	31 f6 	xorl	%esi, %esi
  440e4e:	31 ff 	xorl	%edi, %edi
  440e50:	eb 02 	jmp	2 <runtime.vdso_init_from_sysinfo_ehdr+0x44>
  440e52:	ff c0 	incl	%eax
  440e54:	44 0f b7 43 38 	movzwl	56(%rbx), %r8d
  440e59:	66 44 39 c0 	cmpw	%r8w, %ax
  440e5d:	73 4d 	jae	77 <runtime.vdso_init_from_sysinfo_ehdr+0x9c>
  440e5f:	44 0f b7 c0 	movzwl	%ax, %r8d
  440e63:	4d 6b c0 38 	imulq	$56, %r8, %r8
  440e67:	4e 8d 0c 02 	leaq	(%rdx,%r8), %r9
  440e6b:	41 84 01 	testb	%al, (%r9)
  440e6e:	46 8b 0c 02 	movl	(%rdx,%r8), %r9d
  440e72:	41 83 f9 01 	cmpl	$1, %r9d
  440e76:	75 23 	jne	35 <runtime.vdso_init_from_sysinfo_ehdr+0x8b>
  440e78:	40 84 f6 	testb	%sil, %sil
  440e7b:	74 07 	je	7 <runtime.vdso_init_from_sysinfo_ehdr+0x74>
  440e7d:	be 01 00 00 00 	movl	$1, %esi
  440e82:	eb ce 	jmp	-50 <runtime.vdso_init_from_sysinfo_ehdr+0x42>
  440e84:	49 8b 74 10 08 	movq	8(%r8,%rdx), %rsi
  440e89:	4e 8b 44 02 10 	movq	16(%rdx,%r8), %r8
  440e8e:	4c 29 c6 	subq	%r8, %rsi
  440e91:	48 03 71 08 	addq	8(%rcx), %rsi
  440e95:	48 89 71 10 	movq	%rsi, 16(%rcx)
  440e99:	eb e2 	jmp	-30 <runtime.vdso_init_from_sysinfo_ehdr+0x6d>
  440e9b:	41 83 f9 02 	cmpl	$2, %r9d
  440e9f:	75 b1 	jne	-79 <runtime.vdso_init_from_sysinfo_ehdr+0x42>
  440ea1:	49 8b 7c 10 08 	movq	8(%r8,%rdx), %rdi
  440ea6:	48 03 79 08 	addq	8(%rcx), %rdi
  440eaa:	eb a6 	jmp	-90 <runtime.vdso_init_from_sysinfo_ehdr+0x42>
  440eac:	40 84 f6 	testb	%sil, %sil
  440eaf:	0f 84 85 03 00 00 	je	901 <runtime.vdso_init_from_sysinfo_ehdr+0x42a>
  440eb5:	48 85 ff 	testq	%rdi, %rdi
  440eb8:	0f 84 7c 03 00 00 	je	892 <runtime.vdso_init_from_sysinfo_ehdr+0x42a>
  440ebe:	8b 15 4c 2b 08 00 	movl	535372(%rip), %edx
  440ec4:	48 8d 59 20 	leaq	32(%rcx), %rbx
  440ec8:	48 8d 71 18 	leaq	24(%rcx), %rsi
  440ecc:	4c 8d 41 60 	leaq	96(%rcx), %r8
  440ed0:	4c 8d 49 68 	leaq	104(%rcx), %r9
  440ed4:	85 d2 	testl	%edx, %edx
  440ed6:	0f 85 28 03 00 00 	jne	808 <runtime.vdso_init_from_sysinfo_ehdr+0x3f4>
  440edc:	48 c7 41 20 00 00 00 00 	movq	$0, 32(%rcx)
  440ee4:	48 c7 41 18 00 00 00 00 	movq	$0, 24(%rcx)
  440eec:	0f 57 c0 	xorps	%xmm0, %xmm0
  440eef:	0f 11 41 60 	movups	%xmm0, 96(%rcx)
  440ef3:	31 c0 	xorl	%eax, %eax
  440ef5:	31 d2 	xorl	%edx, %edx
  440ef7:	49 89 d2 	movq	%rdx, %r10
  440efa:	eb 09 	jmp	9 <runtime.vdso_init_from_sysinfo_ehdr+0xf5>
  440efc:	49 ff c4 	incq	%r12
  440eff:	48 89 c2 	movq	%rax, %rdx
  440f02:	4c 89 e0 	movq	%r12, %rax
  440f05:	49 bb ff ff ff ff ff 3f 00 00 	movabsq	$70368744177663, %r11
  440f0f:	4c 39 d8 	cmpq	%r11, %rax
  440f12:	0f 83 47 03 00 00 	jae	839 <runtime.vdso_init_from_sysinfo_ehdr+0x44f>
  440f18:	49 89 c4 	movq	%rax, %r12
  440f1b:	48 c1 e0 04 	shlq	$4, %rax
  440f1f:	4c 8b 2c 07 	movq	(%rdi,%rax), %r13
  440f23:	4d 85 ed 	testq	%r13, %r13
  440f26:	0f 84 ee 00 00 00 	je	238 <runtime.vdso_init_from_sysinfo_ehdr+0x20a>
  440f2c:	48 8b 44 07 08 	movq	8(%rdi,%rax), %rax
  440f31:	48 03 41 10 	addq	16(%rcx), %rax
  440f35:	49 83 fd 06 	cmpq	$6, %r13
  440f39:	7f 69 	jg	105 <runtime.vdso_init_from_sysinfo_ehdr+0x194>
  440f3b:	49 83 fd 04 	cmpq	$4, %r13
  440f3f:	75 02 	jne	2 <runtime.vdso_init_from_sysinfo_ehdr+0x133>
  440f41:	eb b9 	jmp	-71 <runtime.vdso_init_from_sysinfo_ehdr+0xec>
  440f43:	49 83 fd 05 	cmpq	$5, %r13
  440f47:	75 25 	jne	37 <runtime.vdso_init_from_sysinfo_ehdr+0x15e>
  440f49:	44 8b 2d c0 2a 08 00 	movl	535232(%rip), %r13d
  440f50:	45 85 ed 	testl	%r13d, %r13d
  440f53:	75 09 	jne	9 <runtime.vdso_init_from_sysinfo_ehdr+0x14e>
  440f55:	48 89 41 20 	movq	%rax, 32(%rcx)
  440f59:	48 89 d0 	movq	%rdx, %rax
  440f5c:	eb 9e 	jmp	-98 <runtime.vdso_init_from_sysinfo_ehdr+0xec>
  440f5e:	49 89 fd 	movq	%rdi, %r13
  440f61:	48 89 df 	movq	%rbx, %rdi
  440f64:	e8 37 59 00 00 	callq	22839 <runtime.gcWriteBarrier>
  440f69:	4c 89 ef 	movq	%r13, %rdi
  440f6c:	eb eb 	jmp	-21 <runtime.vdso_init_from_sysinfo_ehdr+0x149>
  440f6e:	49 83 fd 06 	cmpq	$6, %r13
  440f72:	75 28 	jne	40 <runtime.vdso_init_from_sysinfo_ehdr+0x18c>
  440f74:	44 8b 2d 95 2a 08 00 	movl	535189(%rip), %r13d
  440f7b:	45 85 ed 	testl	%r13d, %r13d
  440f7e:	75 0c 	jne	12 <runtime.vdso_init_from_sysinfo_ehdr+0x17c>
  440f80:	48 89 41 18 	movq	%rax, 24(%rcx)
  440f84:	48 89 d0 	movq	%rdx, %rax
  440f87:	e9 70 ff ff ff 	jmp	-144 <runtime.vdso_init_from_sysinfo_ehdr+0xec>
  440f8c:	49 89 fd 	movq	%rdi, %r13
  440f8f:	48 89 f7 	movq	%rsi, %rdi
  440f92:	e8 09 59 00 00 	callq	22793 <runtime.gcWriteBarrier>
  440f97:	4c 89 ef 	movq	%r13, %rdi
  440f9a:	eb e8 	jmp	-24 <runtime.vdso_init_from_sysinfo_ehdr+0x174>
  440f9c:	48 89 d0 	movq	%rdx, %rax
  440f9f:	e9 58 ff ff ff 	jmp	-168 <runtime.vdso_init_from_sysinfo_ehdr+0xec>
  440fa4:	49 81 fd f5 fe ff 6f 	cmpq	$1879047925, %r13
  440fab:	75 0b 	jne	11 <runtime.vdso_init_from_sysinfo_ehdr+0x1a8>
  440fad:	49 89 c2 	movq	%rax, %r10
  440fb0:	48 89 d0 	movq	%rdx, %rax
  440fb3:	e9 44 ff ff ff 	jmp	-188 <runtime.vdso_init_from_sysinfo_ehdr+0xec>
  440fb8:	49 81 fd f0 ff ff 6f 	cmpq	$1879048176, %r13
  440fbf:	75 28 	jne	40 <runtime.vdso_init_from_sysinfo_ehdr+0x1d9>
  440fc1:	44 8b 2d 48 2a 08 00 	movl	535112(%rip), %r13d
  440fc8:	45 85 ed 	testl	%r13d, %r13d
  440fcb:	75 0c 	jne	12 <runtime.vdso_init_from_sysinfo_ehdr+0x1c9>
  440fcd:	48 89 41 60 	movq	%rax, 96(%rcx)
  440fd1:	48 89 d0 	movq	%rdx, %rax
  440fd4:	e9 23 ff ff ff 	jmp	-221 <runtime.vdso_init_from_sysinfo_ehdr+0xec>
  440fd9:	49 89 fd 	movq	%rdi, %r13
  440fdc:	4c 89 c7 	movq	%r8, %rdi
  440fdf:	e8 bc 58 00 00 	callq	22716 <runtime.gcWriteBarrier>
  440fe4:	4c 89 ef 	movq	%r13, %rdi
  440fe7:	eb e8 	jmp	-24 <runtime.vdso_init_from_sysinfo_ehdr+0x1c1>
  440fe9:	49 81 fd fc ff ff 6f 	cmpq	$1879048188, %r13
  440ff0:	75 aa 	jne	-86 <runtime.vdso_init_from_sysinfo_ehdr+0x18c>
  440ff2:	44 8b 2d 17 2a 08 00 	movl	535063(%rip), %r13d
  440ff9:	45 85 ed 	testl	%r13d, %r13d
  440ffc:	75 0c 	jne	12 <runtime.vdso_init_from_sysinfo_ehdr+0x1fa>
  440ffe:	48 89 41 68 	movq	%rax, 104(%rcx)
  441002:	48 89 d0 	movq	%rdx, %rax
  441005:	e9 f2 fe ff ff 	jmp	-270 <runtime.vdso_init_from_sysinfo_ehdr+0xec>
  44100a:	49 89 fd 	movq	%rdi, %r13
  44100d:	4c 89 cf 	movq	%r9, %rdi
  441010:	e8 8b 58 00 00 	callq	22667 <runtime.gcWriteBarrier>
  441015:	4c 89 ef 	movq	%r13, %rdi
  441018:	eb e8 	jmp	-24 <runtime.vdso_init_from_sysinfo_ehdr+0x1f2>
  44101a:	48 8b 59 20 	movq	32(%rcx), %rbx
  44101e:	48 85 db 	testq	%rbx, %rbx
  441021:	0f 84 d4 01 00 00 	je	468 <runtime.vdso_init_from_sysinfo_ehdr+0x3eb>
  441027:	48 8b 59 18 	movq	24(%rcx), %rbx
  44102b:	48 85 db 	testq	%rbx, %rbx
  44102e:	0f 84 c7 01 00 00 	je	455 <runtime.vdso_init_from_sysinfo_ehdr+0x3eb>
  441034:	48 85 d2 	testq	%rdx, %rdx
  441037:	0f 84 b5 01 00 00 	je	437 <runtime.vdso_init_from_sysinfo_ehdr+0x3e2>
  44103d:	48 8b 59 68 	movq	104(%rcx), %rbx
  441041:	48 85 db 	testq	%rbx, %rbx
  441044:	0f 84 82 01 00 00 	je	386 <runtime.vdso_init_from_sysinfo_ehdr+0x3bc>
  44104a:	4d 85 d2 	testq	%r10, %r10
  44104d:	0f 84 c6 00 00 00 	je	198 <runtime.vdso_init_from_sysinfo_ehdr+0x309>
  441053:	41 8b 12 	movl	(%r10), %edx
  441056:	41 8b 5a 04 	movl	4(%r10), %ebx
  44105a:	89 59 58 	movl	%ebx, 88(%rcx)
  44105d:	41 8b 5a 08 	movl	8(%r10), %ebx
  441061:	d1 e3 	shll	%ebx
  441063:	8d 73 04 	leal	4(%rbx), %esi
  441066:	49 b8 ff ff ff ff ff ff 00 00 	movabsq	$281474976710655, %r8
  441070:	4c 39 c6 	cmpq	%r8, %rsi
  441073:	0f 87 df 01 00 00 	ja	479 <runtime.vdso_init_from_sysinfo_ehdr+0x448>
  441079:	49 29 f0 	subq	%rsi, %r8
  44107c:	48 c1 e6 02 	shlq	$2, %rsi
  441080:	4d 89 c1 	movq	%r8, %r9
  441083:	49 f7 d8 	negq	%r8
  441086:	49 c1 f8 3f 	sarq	$63, %r8
  44108a:	4c 21 c6 	andq	%r8, %rsi
  44108d:	49 8d 04 32 	leaq	(%r10,%rsi), %rax
  441091:	4c 39 ca 	cmpq	%r9, %rdx
  441094:	0f 87 be 01 00 00 	ja	446 <runtime.vdso_init_from_sysinfo_ehdr+0x448>
  44109a:	48 89 51 48 	movq	%rdx, 72(%rcx)
  44109e:	4c 89 49 50 	movq	%r9, 80(%rcx)
  4410a2:	8b 35 68 29 08 00 	movl	534888(%rip), %esi
  4410a8:	48 8d 79 40 	leaq	64(%rcx), %rdi
  4410ac:	01 da 	addl	%ebx, %edx
  4410ae:	85 f6 	testl	%esi, %esi
  4410b0:	75 60 	jne	96 <runtime.vdso_init_from_sysinfo_ehdr+0x302>
  4410b2:	48 89 41 40 	movq	%rax, 64(%rcx)
  4410b6:	83 c2 04 	addl	$4, %edx
  4410b9:	48 bb ff ff ff ff ff ff 00 00 	movabsq	$281474976710655, %rbx
  4410c3:	48 39 da 	cmpq	%rbx, %rdx
  4410c6:	0f 87 85 01 00 00 	ja	389 <runtime.vdso_init_from_sysinfo_ehdr+0x441>
  4410cc:	48 29 d3 	subq	%rdx, %rbx
  4410cf:	48 89 59 30 	movq	%rbx, 48(%rcx)
  4410d3:	48 89 59 38 	movq	%rbx, 56(%rcx)
  4410d7:	8b 35 33 29 08 00 	movl	534835(%rip), %esi
  4410dd:	48 8d 79 28 	leaq	40(%rcx), %rdi
  4410e1:	48 f7 db 	negq	%rbx
  4410e4:	48 c1 e2 02 	shlq	$2, %rdx
  4410e8:	48 c1 fb 3f 	sarq	$63, %rbx
  4410ec:	48 21 da 	andq	%rbx, %rdx
  4410ef:	49 8d 04 12 	leaq	(%r10,%rdx), %rax
  4410f3:	85 f6 	testl	%esi, %esi
  4410f5:	75 14 	jne	20 <runtime.vdso_init_from_sysinfo_ehdr+0x2fb>
  4410f7:	48 89 41 28 	movq	%rax, 40(%rcx)
  4410fb:	c6 41 5c 01 	movb	$1, 92(%rcx)
  4410ff:	c6 01 01 	movb	$1, (%rcx)
  441102:	48 8b 2c 24 	movq	(%rsp), %rbp
  441106:	48 83 c4 08 	addq	$8, %rsp
  44110a:	c3 	retq
  44110b:	e8 90 57 00 00 	callq	22416 <runtime.gcWriteBarrier>
  441110:	eb e9 	jmp	-23 <runtime.vdso_init_from_sysinfo_ehdr+0x2eb>
  441112:	e8 89 57 00 00 	callq	22409 <runtime.gcWriteBarrier>
  441117:	eb 9d 	jmp	-99 <runtime.vdso_init_from_sysinfo_ehdr+0x2a6>
  441119:	8b 1a 	movl	(%rdx), %ebx
  44111b:	8b 72 04 	movl	4(%rdx), %esi
  44111e:	44 8d 43 02 	leal	2(%rbx), %r8d
  441122:	49 83 f8 02 	cmpq	$2, %r8
  441126:	0f 82 1e 01 00 00 	jb	286 <runtime.vdso_init_from_sysinfo_ehdr+0x43a>
  44112c:	49 b9 ff ff ff ff ff ff 00 00 	movabsq	$281474976710655, %r9
  441136:	4d 39 c8 	cmpq	%r9, %r8
  441139:	0f 87 0b 01 00 00 	ja	267 <runtime.vdso_init_from_sysinfo_ehdr+0x43a>
  44113f:	4d 8d 50 fe 	leaq	-2(%r8), %r10
  441143:	4c 89 51 48 	movq	%r10, 72(%rcx)
  441147:	49 ba fd ff ff ff ff ff 00 00 	movabsq	$281474976710653, %r10
  441151:	4c 89 51 50 	movq	%r10, 80(%rcx)
  441155:	44 8b 15 b4 28 08 00 	movl	534708(%rip), %r10d
  44115c:	48 8d 79 40 	leaq	64(%rcx), %rdi
  441160:	48 8d 42 08 	leaq	8(%rdx), %rax
  441164:	01 f3 	addl	%esi, %ebx
  441166:	45 85 d2 	testl	%r10d, %r10d
  441169:	75 5a 	jne	90 <runtime.vdso_init_from_sysinfo_ehdr+0x3b5>
  44116b:	48 89 41 40 	movq	%rax, 64(%rcx)
  44116f:	83 c3 02 	addl	$2, %ebx
  441172:	49 39 d8 	cmpq	%rbx, %r8
  441175:	0f 87 c8 00 00 00 	ja	200 <runtime.vdso_init_from_sysinfo_ehdr+0x433>
  44117b:	4c 39 cb 	cmpq	%r9, %rbx
  44117e:	0f 87 bf 00 00 00 	ja	191 <runtime.vdso_init_from_sysinfo_ehdr+0x433>
  441184:	4c 29 c3 	subq	%r8, %rbx
  441187:	48 89 59 30 	movq	%rbx, 48(%rcx)
  44118b:	4d 29 c1 	subq	%r8, %r9
  44118e:	4c 89 49 38 	movq	%r9, 56(%rcx)
  441192:	8b 1d 78 28 08 00 	movl	534648(%rip), %ebx
  441198:	48 8d 79 28 	leaq	40(%rcx), %rdi
  44119c:	49 f7 d9 	negq	%r9
  44119f:	49 c1 e0 02 	shlq	$2, %r8
  4411a3:	49 c1 f9 3f 	sarq	$63, %r9
  4411a7:	4d 21 c8 	andq	%r9, %r8
  4411aa:	4a 8d 04 02 	leaq	(%rdx,%r8), %rax
  4411ae:	85 db 	testl	%ebx, %ebx
  4411b0:	75 09 	jne	9 <runtime.vdso_init_from_sysinfo_ehdr+0x3ab>
  4411b2:	48 89 41 28 	movq	%rax, 40(%rcx)
  4411b6:	e9 44 ff ff ff 	jmp	-188 <runtime.vdso_init_from_sysinfo_ehdr+0x2ef>
  4411bb:	e8 e0 56 00 00 	callq	22240 <runtime.gcWriteBarrier>
  4411c0:	e9 3a ff ff ff 	jmp	-198 <runtime.vdso_init_from_sysinfo_ehdr+0x2ef>
  4411c5:	e8 d6 56 00 00 	callq	22230 <runtime.gcWriteBarrier>
  4411ca:	eb a3 	jmp	-93 <runtime.vdso_init_from_sysinfo_ehdr+0x35f>
  4411cc:	8b 1d 3e 28 08 00 	movl	534590(%rip), %ebx
  4411d2:	85 db 	testl	%ebx, %ebx
  4411d4:	75 0d 	jne	13 <runtime.vdso_init_from_sysinfo_ehdr+0x3d3>
  4411d6:	48 c7 41 60 00 00 00 00 	movq	$0, 96(%rcx)
  4411de:	e9 67 fe ff ff 	jmp	-409 <runtime.vdso_init_from_sysinfo_ehdr+0x23a>
  4411e3:	4c 89 c7 	movq	%r8, %rdi
  4411e6:	31 c0 	xorl	%eax, %eax
  4411e8:	e8 b3 56 00 00 	callq	22195 <runtime.gcWriteBarrier>
  4411ed:	e9 58 fe ff ff 	jmp	-424 <runtime.vdso_init_from_sysinfo_ehdr+0x23a>
  4411f2:	4d 85 d2 	testq	%r10, %r10
  4411f5:	0f 85 42 fe ff ff 	jne	-446 <runtime.vdso_init_from_sysinfo_ehdr+0x22d>
  4411fb:	48 8b 2c 24 	movq	(%rsp), %rbp
  4411ff:	48 83 c4 08 	addq	$8, %rsp
  441203:	c3 	retq
  441204:	48 89 f8 	movq	%rdi, %rax
  441207:	48 89 df 	movq	%rbx, %rdi
  44120a:	48 89 c2 	movq	%rax, %rdx
  44120d:	31 c0 	xorl	%eax, %eax
  44120f:	e8 8c 56 00 00 	callq	22156 <runtime.gcWriteBarrier>
  441214:	48 89 f7 	movq	%rsi, %rdi
  441217:	31 c0 	xorl	%eax, %eax
  441219:	e8 82 56 00 00 	callq	22146 <runtime.gcWriteBarrier>
  44121e:	4c 89 c7 	movq	%r8, %rdi
  441221:	31 c0 	xorl	%eax, %eax
  441223:	e8 78 56 00 00 	callq	22136 <runtime.gcWriteBarrier>
  441228:	4c 89 cf 	movq	%r9, %rdi
  44122b:	31 c0 	xorl	%eax, %eax
  44122d:	e8 6e 56 00 00 	callq	22126 <runtime.gcWriteBarrier>
  441232:	48 89 d7 	movq	%rdx, %rdi
  441235:	e9 b9 fc ff ff 	jmp	-839 <runtime.vdso_init_from_sysinfo_ehdr+0xe3>
  44123a:	48 8b 2c 24 	movq	(%rsp), %rbp
  44123e:	48 83 c4 08 	addq	$8, %rsp
  441242:	c3 	retq
  441243:	e8 68 e8 fd ff 	callq	-137112 <runtime.panicslice>
  441248:	0f 0b 	ud2
  44124a:	e8 61 e8 fd ff 	callq	-137119 <runtime.panicslice>
  44124f:	0f 0b 	ud2
  441251:	e8 5a e8 fd ff 	callq	-137126 <runtime.panicslice>
  441256:	0f 0b 	ud2
  441258:	e8 53 e8 fd ff 	callq	-137133 <runtime.panicslice>
  44125d:	0f 0b 	ud2
  44125f:	e8 dc e7 fd ff 	callq	-137252 <runtime.panicindex>
  441264:	0f 0b 	ud2
  441266:	e8 05 33 00 00 	callq	13061 <runtime.morestack_noctxt>
  44126b:	e9 a0 fb ff ff 	jmp	-1120 <runtime.vdso_init_from_sysinfo_ehdr>

runtime.vdso_find_version:
  441270:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  441279:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44127d:	0f 86 0c 01 00 00 	jbe	268 <runtime.vdso_find_version+0x11f>
  441283:	48 83 ec 30 	subq	$48, %rsp
  441287:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  44128c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  441291:	48 8b 44 24 38 	movq	56(%rsp), %rax
  441296:	0f b6 08 	movzbl	(%rax), %ecx
  441299:	84 c9 	testb	%cl, %cl
  44129b:	0f 84 dc 00 00 00 	je	220 <runtime.vdso_find_version+0x10d>
  4412a1:	48 8b 48 68 	movq	104(%rax), %rcx
  4412a5:	eb 03 	jmp	3 <runtime.vdso_find_version+0x3a>
  4412a7:	48 01 d1 	addq	%rdx, %rcx
  4412aa:	0f b7 51 02 	movzwl	2(%rcx), %edx
  4412ae:	66 f7 c2 01 00 	testw	$1, %dx
  4412b3:	0f 85 ba 00 00 00 	jne	186 <runtime.vdso_find_version+0x103>
  4412b9:	8b 51 0c 	movl	12(%rcx), %edx
  4412bc:	8b 59 08 	movl	8(%rcx), %ebx
  4412bf:	48 8b 74 24 40 	movq	64(%rsp), %rsi
  4412c4:	8b 7e 10 	movl	16(%rsi), %edi
  4412c7:	4c 8d 04 11 	leaq	(%rcx,%rdx), %r8
  4412cb:	39 fb 	cmpl	%edi, %ebx
  4412cd:	74 19 	je	25 <runtime.vdso_find_version+0x78>
  4412cf:	8b 51 10 	movl	16(%rcx), %edx
  4412d2:	85 d2 	testl	%edx, %edx
  4412d4:	75 d1 	jne	-47 <runtime.vdso_find_version+0x37>
  4412d6:	c7 44 24 48 ff ff ff ff 	movl	$4294967295, 72(%rsp)
  4412de:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  4412e3:	48 83 c4 30 	addq	$48, %rsp
  4412e7:	c3 	retq
  4412e8:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  4412ed:	48 8b 58 20 	movq	32(%rax), %rbx
  4412f1:	84 03 	testb	%al, (%rbx)
  4412f3:	41 84 00 	testb	%al, (%r8)
  4412f6:	8b 14 11 	movl	(%rcx,%rdx), %edx
  4412f9:	48 01 da 	addq	%rbx, %rdx
  4412fc:	48 89 14 24 	movq	%rdx, (%rsp)
  441300:	e8 eb 63 ff ff 	callq	-39957 <runtime.gostringnocopy>
  441305:	48 8b 44 24 40 	movq	64(%rsp), %rax
  44130a:	48 8b 48 08 	movq	8(%rax), %rcx
  44130e:	48 8b 10 	movq	(%rax), %rdx
  441311:	48 8b 5c 24 10 	movq	16(%rsp), %rbx
  441316:	48 39 d9 	cmpq	%rbx, %rcx
  441319:	74 11 	je	17 <runtime.vdso_find_version+0xbc>
  44131b:	48 8b 44 24 38 	movq	56(%rsp), %rax
  441320:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  441325:	48 8b 74 24 40 	movq	64(%rsp), %rsi
  44132a:	eb a3 	jmp	-93 <runtime.vdso_find_version+0x5f>
  44132c:	48 89 14 24 	movq	%rdx, (%rsp)
  441330:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  441335:	e8 06 50 00 00 	callq	20486 <runtime.memequal>
  44133a:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44133f:	84 c0 	testb	%al, %al
  441341:	75 14 	jne	20 <runtime.vdso_find_version+0xe7>
  441343:	48 8b 44 24 38 	movq	56(%rsp), %rax
  441348:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  44134d:	48 8b 74 24 40 	movq	64(%rsp), %rsi
  441352:	e9 78 ff ff ff 	jmp	-136 <runtime.vdso_find_version+0x5f>
  441357:	48 8b 44 24 20 	movq	32(%rsp), %rax
  44135c:	0f b7 40 04 	movzwl	4(%rax), %eax
  441360:	25 ff 7f 00 00 	andl	$32767, %eax
  441365:	89 44 24 48 	movl	%eax, 72(%rsp)
  441369:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  44136e:	48 83 c4 30 	addq	$48, %rsp
  441372:	c3 	retq
  441373:	48 8b 74 24 40 	movq	64(%rsp), %rsi
  441378:	e9 52 ff ff ff 	jmp	-174 <runtime.vdso_find_version+0x5f>
  44137d:	c7 44 24 48 00 00 00 00 	movl	$0, 72(%rsp)
  441385:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  44138a:	48 83 c4 30 	addq	$48, %rsp
  44138e:	c3 	retq
  44138f:	e8 dc 31 00 00 	callq	12764 <runtime.morestack_noctxt>
  441394:	e9 d7 fe ff ff 	jmp	-297 <runtime.vdso_find_version>
  441399:	cc 	int3
  44139a:	cc 	int3
  44139b:	cc 	int3
  44139c:	cc 	int3
  44139d:	cc 	int3
  44139e:	cc 	int3
  44139f:	cc 	int3

runtime.vdso_parse_symbols:
  4413a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4413a9:	48 8d 44 24 e0 	leaq	-32(%rsp), %rax
  4413ae:	48 3b 41 10 	cmpq	16(%rcx), %rax
  4413b2:	0f 86 5a 03 00 00 	jbe	858 <runtime.vdso_parse_symbols+0x372>
  4413b8:	48 81 ec a0 00 00 00 	subq	$160, %rsp
  4413bf:	48 89 ac 24 98 00 00 00 	movq	%rbp, 152(%rsp)
  4413c7:	48 8d ac 24 98 00 00 00 	leaq	152(%rsp), %rbp
  4413cf:	48 8b 8c 24 a8 00 00 00 	movq	168(%rsp), %rcx
  4413d7:	0f b6 19 	movzbl	(%rcx), %ebx
  4413da:	84 db 	testb	%bl, %bl
  4413dc:	0f 84 fd 02 00 00 	je	765 <runtime.vdso_parse_symbols+0x33f>
  4413e2:	48 8d 1d b7 29 00 00 	leaq	10679(%rip), %rbx
  4413e9:	48 89 9c 24 80 00 00 00 	movq	%rbx, 128(%rsp)
  4413f1:	48 89 8c 24 88 00 00 00 	movq	%rcx, 136(%rsp)
  4413f9:	8b 9c 24 b0 00 00 00 	movl	176(%rsp), %ebx
  441400:	89 9c 24 90 00 00 00 	movl	%ebx, 144(%rsp)
  441407:	0f b6 59 5c 	movzbl	92(%rcx), %ebx
  44140b:	84 db 	testb	%bl, %bl
  44140d:	0f 84 8f 01 00 00 	je	399 <runtime.vdso_parse_symbols+0x202>
  441413:	48 8b 1d ae 47 06 00 	movq	411566(%rip), %rbx
  44141a:	48 89 5c 24 58 	movq	%rbx, 88(%rsp)
  44141f:	48 8b 35 9a 47 06 00 	movq	411546(%rip), %rsi
  441426:	31 c0 	xorl	%eax, %eax
  441428:	eb 08 	jmp	8 <runtime.vdso_parse_symbols+0x92>
  44142a:	48 83 c6 20 	addq	$32, %rsi
  44142e:	49 8d 46 01 	leaq	1(%r14), %rax
  441432:	48 39 d8 	cmpq	%rbx, %rax
  441435:	0f 8d 57 01 00 00 	jge	343 <runtime.vdso_parse_symbols+0x1f2>
  44143b:	48 8b 7e 08 	movq	8(%rsi), %rdi
  44143f:	4c 8b 06 	movq	(%rsi), %r8
  441442:	4c 8b 4e 18 	movq	24(%rsi), %r9
  441446:	44 8b 56 14 	movl	20(%rsi), %r10d
  44144a:	44 8b 5e 10 	movl	16(%rsi), %r11d
  44144e:	4c 8b 61 48 	movq	72(%rcx), %r12
  441452:	4c 8b 69 40 	movq	64(%rcx), %r13
  441456:	45 85 e4 	testl	%r12d, %r12d
  441459:	0f 84 9e 02 00 00 	je	670 <runtime.vdso_parse_symbols+0x35d>
  44145f:	48 89 c2 	movq	%rax, %rdx
  441462:	44 89 d0 	movl	%r10d, %eax
  441465:	49 89 d6 	movq	%rdx, %r14
  441468:	31 d2 	xorl	%edx, %edx
  44146a:	41 f7 f4 	divl	%r12d
  44146d:	41 89 d7 	movl	%edx, %r15d
  441470:	4d 39 e7 	cmpq	%r12, %r15
  441473:	0f 83 7d 02 00 00 	jae	637 <runtime.vdso_parse_symbols+0x356>
  441479:	47 8b 64 bd 00 	movl	(%r13,%r15,4), %r12d
  44147e:	44 8b 69 58 	movl	88(%rcx), %r13d
  441482:	45 39 ec 	cmpl	%r13d, %r12d
  441485:	72 a3 	jb	-93 <runtime.vdso_parse_symbols+0x8a>
  441487:	48 89 7c 24 50 	movq	%rdi, 80(%rsp)
  44148c:	4c 89 44 24 78 	movq	%r8, 120(%rsp)
  441491:	4c 89 74 24 48 	movq	%r14, 72(%rsp)
  441496:	4c 89 4c 24 70 	movq	%r9, 112(%rsp)
  44149b:	44 89 54 24 44 	movl	%r10d, 68(%rsp)
  4414a0:	44 89 5c 24 40 	movl	%r11d, 64(%rsp)
  4414a5:	48 89 74 24 68 	movq	%rsi, 104(%rsp)
  4414aa:	eb 0a 	jmp	10 <runtime.vdso_parse_symbols+0x116>
  4414ac:	44 8d 62 01 	leal	1(%rdx), %r12d
  4414b0:	48 89 c3 	movq	%rax, %rbx
  4414b3:	45 89 ea 	movl	%r13d, %r10d
  4414b6:	4c 8b 69 30 	movq	48(%rcx), %r13
  4414ba:	4c 8b 79 28 	movq	40(%rcx), %r15
  4414be:	48 89 d8 	movq	%rbx, %rax
  4414c1:	8b 59 58 	movl	88(%rcx), %ebx
  4414c4:	44 89 e2 	movl	%r12d, %edx
  4414c7:	41 29 dc 	subl	%ebx, %r12d
  4414ca:	4d 39 ec 	cmpq	%r13, %r12
  4414cd:	0f 83 1c 02 00 00 	jae	540 <runtime.vdso_parse_symbols+0x34f>
  4414d3:	43 8b 1c a7 	movl	(%r15,%r12,4), %ebx
  4414d7:	41 89 dc 	movl	%ebx, %r12d
  4414da:	83 cb 01 	orl	$1, %ebx
  4414dd:	45 89 d5 	movl	%r10d, %r13d
  4414e0:	41 83 ca 01 	orl	$1, %r10d
  4414e4:	44 39 d3 	cmpl	%r10d, %ebx
  4414e7:	74 0f 	je	15 <runtime.vdso_parse_symbols+0x158>
  4414e9:	41 0f ba e4 00 	btl	$0, %r12d
  4414ee:	73 bc 	jae	-68 <runtime.vdso_parse_symbols+0x10c>
  4414f0:	48 89 c3 	movq	%rax, %rbx
  4414f3:	e9 32 ff ff ff 	jmp	-206 <runtime.vdso_parse_symbols+0x8a>
  4414f8:	44 89 64 24 3c 	movl	%r12d, 60(%rsp)
  4414fd:	89 54 24 38 	movl	%edx, 56(%rsp)
  441501:	89 14 24 	movl	%edx, (%rsp)
  441504:	4c 89 44 24 08 	movq	%r8, 8(%rsp)
  441509:	48 89 7c 24 10 	movq	%rdi, 16(%rsp)
  44150e:	44 89 5c 24 18 	movl	%r11d, 24(%rsp)
  441513:	44 89 6c 24 1c 	movl	%r13d, 28(%rsp)
  441518:	4c 89 4c 24 20 	movq	%r9, 32(%rsp)
  44151d:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  441525:	48 8d 94 24 80 00 00 00 	leaq	128(%rsp), %rdx
  44152d:	ff d0 	callq	*%rax
  44152f:	0f b6 44 24 28 	movzbl	40(%rsp), %eax
  441534:	84 c0 	testb	%al, %al
  441536:	75 3e 	jne	62 <runtime.vdso_parse_symbols+0x1d6>
  441538:	48 8b 44 24 58 	movq	88(%rsp), %rax
  44153d:	48 8b 8c 24 a8 00 00 00 	movq	168(%rsp), %rcx
  441545:	8b 54 24 38 	movl	56(%rsp), %edx
  441549:	48 8b 74 24 68 	movq	104(%rsp), %rsi
  44154e:	48 8b 7c 24 50 	movq	80(%rsp), %rdi
  441553:	4c 8b 44 24 78 	movq	120(%rsp), %r8
  441558:	4c 8b 4c 24 70 	movq	112(%rsp), %r9
  44155d:	44 8b 5c 24 40 	movl	64(%rsp), %r11d
  441562:	44 8b 64 24 3c 	movl	60(%rsp), %r12d
  441567:	44 8b 6c 24 44 	movl	68(%rsp), %r13d
  44156c:	4c 8b 74 24 48 	movq	72(%rsp), %r14
  441571:	e9 73 ff ff ff 	jmp	-141 <runtime.vdso_parse_symbols+0x149>
  441576:	48 8b 44 24 58 	movq	88(%rsp), %rax
  44157b:	48 8b 8c 24 a8 00 00 00 	movq	168(%rsp), %rcx
  441583:	48 8b 74 24 68 	movq	104(%rsp), %rsi
  441588:	4c 8b 74 24 48 	movq	72(%rsp), %r14
  44158d:	e9 5e ff ff ff 	jmp	-162 <runtime.vdso_parse_symbols+0x150>
  441592:	48 8b ac 24 98 00 00 00 	movq	152(%rsp), %rbp
  44159a:	48 81 c4 a0 00 00 00 	addq	$160, %rsp
  4415a1:	c3 	retq
  4415a2:	48 8b 1d 1f 46 06 00 	movq	411167(%rip), %rbx
  4415a9:	48 89 5c 24 58 	movq	%rbx, 88(%rsp)
  4415ae:	48 8b 35 0b 46 06 00 	movq	411147(%rip), %rsi
  4415b5:	31 c0 	xorl	%eax, %eax
  4415b7:	e9 ad 00 00 00 	jmp	173 <runtime.vdso_parse_symbols+0x2c9>
  4415bc:	44 8b 24 be 	movl	(%rsi,%rdi,4), %r12d
  4415c0:	48 8b 5c 24 58 	movq	88(%rsp), %rbx
  4415c5:	48 8b 74 24 60 	movq	96(%rsp), %rsi
  4415ca:	8b 7c 24 44 	movl	68(%rsp), %edi
  4415ce:	4c 8b 44 24 70 	movq	112(%rsp), %r8
  4415d3:	44 8b 4c 24 40 	movl	64(%rsp), %r9d
  4415d8:	4c 8b 54 24 78 	movq	120(%rsp), %r10
  4415dd:	4c 8b 5c 24 48 	movq	72(%rsp), %r11
  4415e2:	4c 8b 74 24 50 	movq	80(%rsp), %r14
  4415e7:	45 85 e4 	testl	%r12d, %r12d
  4415ea:	74 5e 	je	94 <runtime.vdso_parse_symbols+0x2aa>
  4415ec:	44 89 64 24 34 	movl	%r12d, 52(%rsp)
  4415f1:	44 89 24 24 	movl	%r12d, (%rsp)
  4415f5:	4c 89 54 24 08 	movq	%r10, 8(%rsp)
  4415fa:	4c 89 5c 24 10 	movq	%r11, 16(%rsp)
  4415ff:	44 89 4c 24 18 	movl	%r9d, 24(%rsp)
  441604:	89 7c 24 1c 	movl	%edi, 28(%rsp)
  441608:	4c 89 44 24 20 	movq	%r8, 32(%rsp)
  44160d:	48 8b 84 24 80 00 00 00 	movq	128(%rsp), %rax
  441615:	48 8d 94 24 80 00 00 00 	leaq	128(%rsp), %rdx
  44161d:	ff d0 	callq	*%rax
  44161f:	0f b6 44 24 28 	movzbl	40(%rsp), %eax
  441624:	84 c0 	testb	%al, %al
  441626:	75 22 	jne	34 <runtime.vdso_parse_symbols+0x2aa>
  441628:	48 8b 8c 24 a8 00 00 00 	movq	168(%rsp), %rcx
  441630:	48 8b 59 30 	movq	48(%rcx), %rbx
  441634:	48 8b 71 28 	movq	40(%rcx), %rsi
  441638:	8b 7c 24 34 	movl	52(%rsp), %edi
  44163c:	48 39 df 	cmpq	%rbx, %rdi
  44163f:	0f 82 77 ff ff ff 	jb	-137 <runtime.vdso_parse_symbols+0x21c>
  441645:	e9 ba 00 00 00 	jmp	186 <runtime.vdso_parse_symbols+0x364>
  44164a:	48 8b 7c 24 60 	movq	96(%rsp), %rdi
  44164f:	48 8d 77 20 	leaq	32(%rdi), %rsi
  441653:	48 8b 7c 24 50 	movq	80(%rsp), %rdi
  441658:	48 8d 47 01 	leaq	1(%rdi), %rax
  44165c:	48 8b 8c 24 a8 00 00 00 	movq	168(%rsp), %rcx
  441664:	48 8b 5c 24 58 	movq	88(%rsp), %rbx
  441669:	48 39 d8 	cmpq	%rbx, %rax
  44166c:	7d 61 	jge	97 <runtime.vdso_parse_symbols+0x32f>
  44166e:	8b 7e 14 	movl	20(%rsi), %edi
  441671:	4c 8b 46 18 	movq	24(%rsi), %r8
  441675:	44 8b 4e 10 	movl	16(%rsi), %r9d
  441679:	4c 8b 16 	movq	(%rsi), %r10
  44167c:	4c 8b 5e 08 	movq	8(%rsi), %r11
  441680:	4c 8b 61 48 	movq	72(%rcx), %r12
  441684:	4c 8b 69 40 	movq	64(%rcx), %r13
  441688:	45 85 e4 	testl	%r12d, %r12d
  44168b:	74 7e 	je	126 <runtime.vdso_parse_symbols+0x36b>
  44168d:	48 89 c2 	movq	%rax, %rdx
  441690:	44 89 c8 	movl	%r9d, %eax
  441693:	49 89 d6 	movq	%rdx, %r14
  441696:	31 d2 	xorl	%edx, %edx
  441698:	41 f7 f4 	divl	%r12d
  44169b:	41 89 d7 	movl	%edx, %r15d
  44169e:	4d 39 e7 	cmpq	%r12, %r15
  4416a1:	73 61 	jae	97 <runtime.vdso_parse_symbols+0x364>
  4416a3:	4c 89 74 24 50 	movq	%r14, 80(%rsp)
  4416a8:	89 7c 24 44 	movl	%edi, 68(%rsp)
  4416ac:	4c 89 44 24 70 	movq	%r8, 112(%rsp)
  4416b1:	44 89 4c 24 40 	movl	%r9d, 64(%rsp)
  4416b6:	4c 89 54 24 78 	movq	%r10, 120(%rsp)
  4416bb:	4c 89 5c 24 48 	movq	%r11, 72(%rsp)
  4416c0:	48 89 74 24 60 	movq	%rsi, 96(%rsp)
  4416c5:	47 8b 64 bd 00 	movl	(%r13,%r15,4), %r12d
  4416ca:	e9 18 ff ff ff 	jmp	-232 <runtime.vdso_parse_symbols+0x247>
  4416cf:	48 8b ac 24 98 00 00 00 	movq	152(%rsp), %rbp
  4416d7:	48 81 c4 a0 00 00 00 	addq	$160, %rsp
  4416de:	c3 	retq
  4416df:	48 8b ac 24 98 00 00 00 	movq	152(%rsp), %rbp
  4416e7:	48 81 c4 a0 00 00 00 	addq	$160, %rsp
  4416ee:	c3 	retq
  4416ef:	e8 4c e3 fd ff 	callq	-138420 <runtime.panicindex>
  4416f4:	0f 0b 	ud2
  4416f6:	e8 45 e3 fd ff 	callq	-138427 <runtime.panicindex>
  4416fb:	0f 0b 	ud2
  4416fd:	e8 1e e4 fd ff 	callq	-138210 <runtime.panicdivide>
  441702:	0f 0b 	ud2
  441704:	e8 37 e3 fd ff 	callq	-138441 <runtime.panicindex>
  441709:	0f 0b 	ud2
  44170b:	e8 10 e4 fd ff 	callq	-138224 <runtime.panicdivide>
  441710:	0f 0b 	ud2
  441712:	e8 59 2e 00 00 	callq	11865 <runtime.morestack_noctxt>
  441717:	e9 84 fc ff ff 	jmp	-892 <runtime.vdso_parse_symbols>
  44171c:	cc 	int3
  44171d:	cc 	int3
  44171e:	cc 	int3
  44171f:	cc 	int3

runtime.archauxv:
  441720:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  441729:	48 8d 44 24 f0 	leaq	-16(%rsp), %rax
  44172e:	48 3b 41 10 	cmpq	16(%rcx), %rax
  441732:	0f 86 b4 00 00 00 	jbe	180 <runtime.archauxv+0xcc>
  441738:	48 81 ec 90 00 00 00 	subq	$144, %rsp
  44173f:	48 89 ac 24 88 00 00 00 	movq	%rbp, 136(%rsp)
  441747:	48 8d ac 24 88 00 00 00 	leaq	136(%rsp), %rbp
  44174f:	48 8b 84 24 98 00 00 00 	movq	152(%rsp), %rax
  441757:	48 83 f8 21 	cmpq	$33, %rax
  44175b:	75 6f 	jne	111 <runtime.archauxv+0xac>
  44175d:	48 8b 84 24 a0 00 00 00 	movq	160(%rsp), %rax
  441765:	48 85 c0 	testq	%rax, %rax
  441768:	74 72 	je	114 <runtime.archauxv+0xbc>
  44176a:	48 8d 7c 24 18 	leaq	24(%rsp), %rdi
  44176f:	0f 57 c0 	xorps	%xmm0, %xmm0
  441772:	48 8d 7f f0 	leaq	-16(%rdi), %rdi
  441776:	48 89 6c 24 f0 	movq	%rbp, -16(%rsp)
  44177b:	48 8d 6c 24 f0 	leaq	-16(%rsp), %rbp
  441780:	e8 28 53 00 00 	callq	21288 <runtime.duffzero+0x10d>
  441785:	48 8b 6d 00 	movq	(%rbp), %rbp
  441789:	48 8d 4c 24 18 	leaq	24(%rsp), %rcx
  44178e:	48 89 0c 24 	movq	%rcx, (%rsp)
  441792:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  441797:	e8 74 f6 ff ff 	callq	-2444 <runtime.vdso_init_from_sysinfo_ehdr>
  44179c:	48 8d 44 24 18 	leaq	24(%rsp), %rax
  4417a1:	48 89 04 24 	movq	%rax, (%rsp)
  4417a5:	48 8d 0d b4 43 06 00 	leaq	410548(%rip), %rcx
  4417ac:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4417b1:	e8 ba fa ff ff 	callq	-1350 <runtime.vdso_find_version>
  4417b6:	8b 44 24 10 	movl	16(%rsp), %eax
  4417ba:	48 8d 4c 24 18 	leaq	24(%rsp), %rcx
  4417bf:	48 89 0c 24 	movq	%rcx, (%rsp)
  4417c3:	89 44 24 08 	movl	%eax, 8(%rsp)
  4417c7:	e8 d4 fb ff ff 	callq	-1068 <runtime.vdso_parse_symbols>
  4417cc:	48 8b ac 24 88 00 00 00 	movq	136(%rsp), %rbp
  4417d4:	48 81 c4 90 00 00 00 	addq	$144, %rsp
  4417db:	c3 	retq
  4417dc:	48 8b ac 24 88 00 00 00 	movq	136(%rsp), %rbp
  4417e4:	48 81 c4 90 00 00 00 	addq	$144, %rsp
  4417eb:	c3 	retq
  4417ec:	e8 7f 2d 00 00 	callq	11647 <runtime.morestack_noctxt>
  4417f1:	e9 2a ff ff ff 	jmp	-214 <runtime.archauxv>
  4417f6:	cc 	int3
  4417f7:	cc 	int3
  4417f8:	cc 	int3
  4417f9:	cc 	int3
  4417fa:	cc 	int3
  4417fb:	cc 	int3
  4417fc:	cc 	int3
  4417fd:	cc 	int3
  4417fe:	cc 	int3
  4417ff:	cc 	int3

runtime.writeErr:
  441800:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  441809:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44180d:	76 44 	jbe	68 <runtime.writeErr+0x53>
  44180f:	48 83 ec 28 	subq	$40, %rsp
  441813:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  441818:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44181d:	48 8b 44 24 38 	movq	56(%rsp), %rax
  441822:	48 85 c0 	testq	%rax, %rax
  441825:	76 25 	jbe	37 <runtime.writeErr+0x4c>
  441827:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44182c:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  441831:	48 c7 04 24 02 00 00 00 	movq	$2, (%rsp)
  441839:	89 44 24 10 	movl	%eax, 16(%rsp)
  44183d:	e8 0e 60 00 00 	callq	24590 <runtime.write>
  441842:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  441847:	48 83 c4 28 	addq	$40, %rsp
  44184b:	c3 	retq
  44184c:	e8 ef e1 fd ff 	callq	-138769 <runtime.panicindex>
  441851:	0f 0b 	ud2
  441853:	e8 18 2d 00 00 	callq	11544 <runtime.morestack_noctxt>
  441858:	eb a6 	jmp	-90 <runtime.writeErr>
  44185a:	cc 	int3
  44185b:	cc 	int3
  44185c:	cc 	int3
  44185d:	cc 	int3
  44185e:	cc 	int3
  44185f:	cc 	int3

runtime.mmap.func1:
  441860:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  441869:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44186d:	76 62 	jbe	98 <runtime.mmap.func1+0x71>
  44186f:	48 83 ec 38 	subq	$56, %rsp
  441873:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  441878:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  44187d:	48 8b 42 08 	movq	8(%rdx), %rax
  441881:	48 8b 4a 10 	movq	16(%rdx), %rcx
  441885:	8b 5a 18 	movl	24(%rdx), %ebx
  441888:	8b 72 1c 	movl	28(%rdx), %esi
  44188b:	8b 7a 20 	movl	32(%rdx), %edi
  44188e:	44 8b 42 24 	movl	36(%rdx), %r8d
  441892:	48 8b 52 28 	movq	40(%rdx), %rdx
  441896:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  44189b:	48 89 04 24 	movq	%rax, (%rsp)
  44189f:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4418a4:	89 5c 24 10 	movl	%ebx, 16(%rsp)
  4418a8:	89 74 24 14 	movl	%esi, 20(%rsp)
  4418ac:	89 7c 24 18 	movl	%edi, 24(%rsp)
  4418b0:	44 89 44 24 1c 	movl	%r8d, 28(%rsp)
  4418b5:	e8 66 64 00 00 	callq	25702 <runtime.callCgoMmap>
  4418ba:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4418bf:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  4418c4:	48 89 01 	movq	%rax, (%rcx)
  4418c7:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  4418cc:	48 83 c4 38 	addq	$56, %rsp
  4418d0:	c3 	retq
  4418d1:	e8 fa 2b 00 00 	callq	11258 <runtime.morestack>
  4418d6:	eb 88 	jmp	-120 <runtime.mmap.func1>
  4418d8:	cc 	int3
  4418d9:	cc 	int3
  4418da:	cc 	int3
  4418db:	cc 	int3
  4418dc:	cc 	int3
  4418dd:	cc 	int3
  4418de:	cc 	int3
  4418df:	cc 	int3

runtime.munmap.func1:
  4418e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4418e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4418ed:	76 2e 	jbe	46 <runtime.munmap.func1+0x3d>
  4418ef:	48 83 ec 18 	subq	$24, %rsp
  4418f3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  4418f8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  4418fd:	48 8b 42 08 	movq	8(%rdx), %rax
  441901:	48 8b 4a 10 	movq	16(%rdx), %rcx
  441905:	48 89 04 24 	movq	%rax, (%rsp)
  441909:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44190e:	e8 9d 64 00 00 	callq	25757 <runtime.callCgoMunmap>
  441913:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  441918:	48 83 c4 18 	addq	$24, %rsp
  44191c:	c3 	retq
  44191d:	e8 ae 2b 00 00 	callq	11182 <runtime.morestack>
  441922:	eb bc 	jmp	-68 <runtime.munmap.func1>
  441924:	cc 	int3
  441925:	cc 	int3
  441926:	cc 	int3
  441927:	cc 	int3
  441928:	cc 	int3
  441929:	cc 	int3
  44192a:	cc 	int3
  44192b:	cc 	int3
  44192c:	cc 	int3
  44192d:	cc 	int3
  44192e:	cc 	int3
  44192f:	cc 	int3

runtime.rt_sigaction.func1:
  441930:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  441939:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44193d:	76 4e 	jbe	78 <runtime.rt_sigaction.func1+0x5d>
  44193f:	48 83 ec 30 	subq	$48, %rsp
  441943:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  441948:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  44194d:	48 8b 42 08 	movq	8(%rdx), %rax
  441951:	48 8b 4a 10 	movq	16(%rdx), %rcx
  441955:	48 8b 5a 18 	movq	24(%rdx), %rbx
  441959:	48 8b 52 20 	movq	32(%rdx), %rdx
  44195d:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  441962:	48 8b 00 	movq	(%rax), %rax
  441965:	48 89 04 24 	movq	%rax, (%rsp)
  441969:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44196e:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  441973:	e8 a8 61 00 00 	callq	25000 <runtime.callCgoSigaction>
  441978:	8b 44 24 18 	movl	24(%rsp), %eax
  44197c:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  441981:	89 01 	movl	%eax, (%rcx)
  441983:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  441988:	48 83 c4 30 	addq	$48, %rsp
  44198c:	c3 	retq
  44198d:	e8 3e 2b 00 00 	callq	11070 <runtime.morestack>
  441992:	eb 9c 	jmp	-100 <runtime.rt_sigaction.func1>
  441994:	cc 	int3
  441995:	cc 	int3
  441996:	cc 	int3
  441997:	cc 	int3
  441998:	cc 	int3
  441999:	cc 	int3
  44199a:	cc 	int3
  44199b:	cc 	int3
  44199c:	cc 	int3
  44199d:	cc 	int3
  44199e:	cc 	int3
  44199f:	cc 	int3

runtime.cgoCheckWriteBarrier.func1:
  4419a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4419a9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4419ad:	0f 86 98 00 00 00 	jbe	152 <runtime.cgoCheckWriteBarrier.func1+0xab>
  4419b3:	48 83 ec 28 	subq	$40, %rsp
  4419b7:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  4419bc:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  4419c1:	48 8b 42 08 	movq	8(%rdx), %rax
  4419c5:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  4419ca:	48 8b 4a 10 	movq	16(%rdx), %rcx
  4419ce:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  4419d3:	e8 28 01 fe ff 	callq	-130776 <runtime.printlock>
  4419d8:	48 8d 05 42 98 02 00 	leaq	170050(%rip), %rax
  4419df:	48 89 04 24 	movq	%rax, (%rsp)
  4419e3:	48 c7 44 24 08 14 00 00 00 	movq	$20, 8(%rsp)
  4419ec:	e8 4f 0a fe ff 	callq	-128433 <runtime.printstring>
  4419f1:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4419f6:	48 89 04 24 	movq	%rax, (%rsp)
  4419fa:	e8 f1 08 fe ff 	callq	-128783 <runtime.printhex>
  4419ff:	48 8d 05 57 93 02 00 	leaq	168791(%rip), %rax
  441a06:	48 89 04 24 	movq	%rax, (%rsp)
  441a0a:	48 c7 44 24 08 12 00 00 00 	movq	$18, 8(%rsp)
  441a13:	e8 28 0a fe ff 	callq	-128472 <runtime.printstring>
  441a18:	48 8b 44 24 18 	movq	24(%rsp), %rax
  441a1d:	48 89 04 24 	movq	%rax, (%rsp)
  441a21:	e8 ca 08 fe ff 	callq	-128822 <runtime.printhex>
  441a26:	e8 65 03 fe ff 	callq	-130203 <runtime.printnl>
  441a2b:	e8 50 01 fe ff 	callq	-130736 <runtime.printunlock>
  441a30:	48 8d 05 a7 b3 02 00 	leaq	177063(%rip), %rax
  441a37:	48 89 04 24 	movq	%rax, (%rsp)
  441a3b:	48 c7 44 24 08 24 00 00 00 	movq	$36, 8(%rsp)
  441a44:	e8 87 f7 fd ff 	callq	-133241 <runtime.throw>
  441a49:	0f 0b 	ud2
  441a4b:	e8 80 2a 00 00 	callq	10880 <runtime.morestack>
  441a50:	e9 4b ff ff ff 	jmp	-181 <runtime.cgoCheckWriteBarrier.func1>
  441a55:	cc 	int3
  441a56:	cc 	int3
  441a57:	cc 	int3
  441a58:	cc 	int3
  441a59:	cc 	int3
  441a5a:	cc 	int3
  441a5b:	cc 	int3
  441a5c:	cc 	int3
  441a5d:	cc 	int3
  441a5e:	cc 	int3
  441a5f:	cc 	int3

runtime.cgoCheckTypedBlock.func1:
  441a60:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  441a69:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  441a6d:	76 40 	jbe	64 <runtime.cgoCheckTypedBlock.func1+0x4f>
  441a6f:	48 83 ec 28 	subq	$40, %rsp
  441a73:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  441a78:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  441a7d:	48 8b 42 08 	movq	8(%rdx), %rax
  441a81:	48 8b 4a 10 	movq	16(%rdx), %rcx
  441a85:	48 8b 5a 18 	movq	24(%rdx), %rbx
  441a89:	48 8b 52 20 	movq	32(%rdx), %rdx
  441a8d:	48 89 04 24 	movq	%rax, (%rsp)
  441a91:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  441a96:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  441a9b:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  441aa0:	e8 cb 10 fc ff 	callq	-257845 <runtime.cgoCheckUsingType>
  441aa5:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  441aaa:	48 83 c4 28 	addq	$40, %rsp
  441aae:	c3 	retq
  441aaf:	e8 1c 2a 00 00 	callq	10780 <runtime.morestack>
  441ab4:	eb aa 	jmp	-86 <runtime.cgoCheckTypedBlock.func1>
  441ab6:	cc 	int3
  441ab7:	cc 	int3
  441ab8:	cc 	int3
  441ab9:	cc 	int3
  441aba:	cc 	int3
  441abb:	cc 	int3
  441abc:	cc 	int3
  441abd:	cc 	int3
  441abe:	cc 	int3
  441abf:	cc 	int3

runtime.cgoCheckTypedBlock.func2:
  441ac0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  441ac9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  441acd:	76 29 	jbe	41 <runtime.cgoCheckTypedBlock.func2+0x38>
  441acf:	48 83 ec 18 	subq	$24, %rsp
  441ad3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  441ad8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  441add:	48 8d 05 fa b2 02 00 	leaq	176890(%rip), %rax
  441ae4:	48 89 04 24 	movq	%rax, (%rsp)
  441ae8:	48 c7 44 24 08 24 00 00 00 	movq	$36, 8(%rsp)
  441af1:	e8 da f6 fd ff 	callq	-133414 <runtime.throw>
  441af6:	0f 0b 	ud2
  441af8:	e8 73 2a 00 00 	callq	10867 <runtime.morestack_noctxt>
  441afd:	eb c1 	jmp	-63 <runtime.cgoCheckTypedBlock.func2>
  441aff:	cc 	int3

runtime.cgoCheckBits.func1:
  441b00:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  441b09:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  441b0d:	76 29 	jbe	41 <runtime.cgoCheckBits.func1+0x38>
  441b0f:	48 83 ec 18 	subq	$24, %rsp
  441b13:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  441b18:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  441b1d:	48 8d 05 ba b2 02 00 	leaq	176826(%rip), %rax
  441b24:	48 89 04 24 	movq	%rax, (%rsp)
  441b28:	48 c7 44 24 08 24 00 00 00 	movq	$36, 8(%rsp)
  441b31:	e8 9a f6 fd ff 	callq	-133478 <runtime.throw>
  441b36:	0f 0b 	ud2
  441b38:	e8 33 2a 00 00 	callq	10803 <runtime.morestack_noctxt>
  441b3d:	eb c1 	jmp	-63 <runtime.cgoCheckBits.func1>
  441b3f:	cc 	int3

runtime.chansend.func1:
  441b40:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  441b49:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  441b4d:	76 2b 	jbe	43 <runtime.chansend.func1+0x3a>
  441b4f:	48 83 ec 10 	subq	$16, %rsp
  441b53:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  441b58:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  441b5d:	48 8b 42 08 	movq	8(%rdx), %rax
  441b61:	84 00 	testb	%al, (%rax)
  441b63:	48 83 c0 58 	addq	$88, %rax
  441b67:	48 89 04 24 	movq	%rax, (%rsp)
  441b6b:	e8 50 7b fc ff 	callq	-230576 <runtime.unlock>
  441b70:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  441b75:	48 83 c4 10 	addq	$16, %rsp
  441b79:	c3 	retq
  441b7a:	e8 51 29 00 00 	callq	10577 <runtime.morestack>
  441b7f:	eb bf 	jmp	-65 <runtime.chansend.func1>
  441b81:	cc 	int3
  441b82:	cc 	int3
  441b83:	cc 	int3
  441b84:	cc 	int3
  441b85:	cc 	int3
  441b86:	cc 	int3
  441b87:	cc 	int3
  441b88:	cc 	int3
  441b89:	cc 	int3
  441b8a:	cc 	int3
  441b8b:	cc 	int3
  441b8c:	cc 	int3
  441b8d:	cc 	int3
  441b8e:	cc 	int3
  441b8f:	cc 	int3

runtime.chanrecv.func1:
  441b90:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  441b99:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  441b9d:	76 2b 	jbe	43 <runtime.chanrecv.func1+0x3a>
  441b9f:	48 83 ec 10 	subq	$16, %rsp
  441ba3:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  441ba8:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  441bad:	48 8b 42 08 	movq	8(%rdx), %rax
  441bb1:	84 00 	testb	%al, (%rax)
  441bb3:	48 83 c0 58 	addq	$88, %rax
  441bb7:	48 89 04 24 	movq	%rax, (%rsp)
  441bbb:	e8 00 7b fc ff 	callq	-230656 <runtime.unlock>
  441bc0:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  441bc5:	48 83 c4 10 	addq	$16, %rsp
  441bc9:	c3 	retq
  441bca:	e8 01 29 00 00 	callq	10497 <runtime.morestack>
  441bcf:	eb bf 	jmp	-65 <runtime.chanrecv.func1>
  441bd1:	cc 	int3
  441bd2:	cc 	int3
  441bd3:	cc 	int3
  441bd4:	cc 	int3
  441bd5:	cc 	int3
  441bd6:	cc 	int3
  441bd7:	cc 	int3
  441bd8:	cc 	int3
  441bd9:	cc 	int3
  441bda:	cc 	int3
  441bdb:	cc 	int3
  441bdc:	cc 	int3
  441bdd:	cc 	int3
  441bde:	cc 	int3
  441bdf:	cc 	int3

runtime.(*mcache).nextFree.func1:
  441be0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  441be9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  441bed:	76 2d 	jbe	45 <runtime.(*mcache).nextFree.func1+0x3c>
  441bef:	48 83 ec 18 	subq	$24, %rsp
  441bf3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  441bf8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  441bfd:	48 8b 42 08 	movq	8(%rdx), %rax
  441c01:	0f b6 4a 10 	movzbl	16(%rdx), %ecx
  441c05:	48 89 04 24 	movq	%rax, (%rsp)
  441c09:	88 4c 24 08 	movb	%cl, 8(%rsp)
  441c0d:	e8 1e c8 fc ff 	callq	-210914 <runtime.(*mcache).refill>
  441c12:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  441c17:	48 83 c4 18 	addq	$24, %rsp
  441c1b:	c3 	retq
  441c1c:	e8 af 28 00 00 	callq	10415 <runtime.morestack>
  441c21:	eb bd 	jmp	-67 <runtime.(*mcache).nextFree.func1>
  441c23:	cc 	int3
  441c24:	cc 	int3
  441c25:	cc 	int3
  441c26:	cc 	int3
  441c27:	cc 	int3
  441c28:	cc 	int3
  441c29:	cc 	int3
  441c2a:	cc 	int3
  441c2b:	cc 	int3
  441c2c:	cc 	int3
  441c2d:	cc 	int3
  441c2e:	cc 	int3
  441c2f:	cc 	int3

runtime.mallocgc.func1:
  441c30:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  441c39:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  441c3d:	76 4e 	jbe	78 <runtime.mallocgc.func1+0x5d>
  441c3f:	48 83 ec 28 	subq	$40, %rsp
  441c43:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  441c48:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  441c4d:	48 8b 42 08 	movq	8(%rdx), %rax
  441c51:	0f b6 4a 10 	movzbl	16(%rdx), %ecx
  441c55:	0f b6 5a 11 	movzbl	17(%rdx), %ebx
  441c59:	48 8b 52 18 	movq	24(%rdx), %rdx
  441c5d:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  441c62:	48 8b 00 	movq	(%rax), %rax
  441c65:	48 89 04 24 	movq	%rax, (%rsp)
  441c69:	88 4c 24 08 	movb	%cl, 8(%rsp)
  441c6d:	88 5c 24 09 	movb	%bl, 9(%rsp)
  441c71:	e8 6a 93 fc ff 	callq	-224406 <runtime.largeAlloc>
  441c76:	48 8b 44 24 10 	movq	16(%rsp), %rax
  441c7b:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  441c80:	48 89 01 	movq	%rax, (%rcx)
  441c83:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  441c88:	48 83 c4 28 	addq	$40, %rsp
  441c8c:	c3 	retq
  441c8d:	e8 3e 28 00 00 	callq	10302 <runtime.morestack>
  441c92:	eb 9c 	jmp	-100 <runtime.mallocgc.func1>
  441c94:	cc 	int3
  441c95:	cc 	int3
  441c96:	cc 	int3
  441c97:	cc 	int3
  441c98:	cc 	int3
  441c99:	cc 	int3
  441c9a:	cc 	int3
  441c9b:	cc 	int3
  441c9c:	cc 	int3
  441c9d:	cc 	int3
  441c9e:	cc 	int3
  441c9f:	cc 	int3

runtime.persistentalloc.func1:
  441ca0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  441ca9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  441cad:	76 4d 	jbe	77 <runtime.persistentalloc.func1+0x5c>
  441caf:	48 83 ec 30 	subq	$48, %rsp
  441cb3:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  441cb8:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  441cbd:	48 8b 42 08 	movq	8(%rdx), %rax
  441cc1:	48 8b 4a 10 	movq	16(%rdx), %rcx
  441cc5:	48 8b 5a 18 	movq	24(%rdx), %rbx
  441cc9:	48 8b 52 20 	movq	32(%rdx), %rdx
  441ccd:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  441cd2:	48 89 04 24 	movq	%rax, (%rsp)
  441cd6:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  441cdb:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  441ce0:	e8 5b 98 fc ff 	callq	-223141 <runtime.persistentalloc1>
  441ce5:	48 8b 44 24 18 	movq	24(%rsp), %rax
  441cea:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  441cef:	48 89 01 	movq	%rax, (%rcx)
  441cf2:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  441cf7:	48 83 c4 30 	addq	$48, %rsp
  441cfb:	c3 	retq
  441cfc:	e8 cf 27 00 00 	callq	10191 <runtime.morestack>
  441d01:	eb 9d 	jmp	-99 <runtime.persistentalloc.func1>
  441d03:	cc 	int3
  441d04:	cc 	int3
  441d05:	cc 	int3
  441d06:	cc 	int3
  441d07:	cc 	int3
  441d08:	cc 	int3
  441d09:	cc 	int3
  441d0a:	cc 	int3
  441d0b:	cc 	int3
  441d0c:	cc 	int3
  441d0d:	cc 	int3
  441d0e:	cc 	int3
  441d0f:	cc 	int3

runtime.writebarrierptr_prewrite1.func1:
  441d10:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  441d19:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  441d1d:	0f 86 e5 00 00 00 	jbe	229 <runtime.writebarrierptr_prewrite1.func1+0xf8>
  441d23:	48 83 ec 18 	subq	$24, %rsp
  441d27:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  441d2c:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  441d31:	48 8b 42 08 	movq	8(%rdx), %rax
  441d35:	48 8b 4a 10 	movq	16(%rdx), %rcx
  441d39:	48 8b 52 18 	movq	24(%rdx), %rdx
  441d3d:	48 8b 98 d0 00 00 00 	movq	208(%rax), %rbx
  441d44:	48 85 db 	testq	%rbx, %rbx
  441d47:	75 16 	jne	22 <runtime.writebarrierptr_prewrite1.func1+0x4f>
  441d49:	0f b6 1d 80 3a 08 00 	movzbl	539264(%rip), %ebx
  441d50:	84 db 	testb	%bl, %bl
  441d52:	74 0b 	je	11 <runtime.writebarrierptr_prewrite1.func1+0x4f>
  441d54:	0f b6 98 16 01 00 00 	movzbl	278(%rax), %ebx
  441d5b:	84 db 	testb	%bl, %bl
  441d5d:	74 1f 	je	31 <runtime.writebarrierptr_prewrite1.func1+0x6e>
  441d5f:	c6 80 16 01 00 00 01 	movb	$1, 278(%rax)
  441d66:	48 89 14 24 	movq	%rdx, (%rsp)
  441d6a:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  441d6f:	e8 ac 9a fc ff 	callq	-222548 <runtime.gcmarkwb_m>
  441d74:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  441d79:	48 83 c4 18 	addq	$24, %rsp
  441d7d:	c3 	retq
  441d7e:	48 85 c9 	testq	%rcx, %rcx
  441d81:	74 dc 	je	-36 <runtime.writebarrierptr_prewrite1.func1+0x4f>
  441d83:	48 8b 1d 3e b8 06 00 	movq	440382(%rip), %rbx
  441d8a:	48 39 d9 	cmpq	%rbx, %rcx
  441d8d:	72 d0 	jb	-48 <runtime.writebarrierptr_prewrite1.func1+0x4f>
  441d8f:	48 8b 35 3a b8 06 00 	movq	440378(%rip), %rsi
  441d96:	48 39 f1 	cmpq	%rsi, %rcx
  441d99:	73 c4 	jae	-60 <runtime.writebarrierptr_prewrite1.func1+0x4f>
  441d9b:	48 8b 35 4e b5 06 00 	movq	439630(%rip), %rsi
  441da2:	48 8b 3d 3f b5 06 00 	movq	439615(%rip), %rdi
  441da9:	49 89 c8 	movq	%rcx, %r8
  441dac:	48 29 d9 	subq	%rbx, %rcx
  441daf:	48 c1 e9 0d 	shrq	$13, %rcx
  441db3:	48 39 f1 	cmpq	%rsi, %rcx
  441db6:	73 2e 	jae	46 <runtime.writebarrierptr_prewrite1.func1+0xd6>
  441db8:	48 8b 0c cf 	movq	(%rdi,%rcx,8), %rcx
  441dbc:	48 85 c9 	testq	%rcx, %rcx
  441dbf:	74 09 	je	9 <runtime.writebarrierptr_prewrite1.func1+0xba>
  441dc1:	48 8b 59 18 	movq	24(%rcx), %rbx
  441dc5:	49 39 d8 	cmpq	%rbx, %r8
  441dc8:	73 05 	jae	5 <runtime.writebarrierptr_prewrite1.func1+0xbf>
  441dca:	4c 89 c1 	movq	%r8, %rcx
  441dcd:	eb 90 	jmp	-112 <runtime.writebarrierptr_prewrite1.func1+0x4f>
  441dcf:	48 8b 99 80 00 00 00 	movq	128(%rcx), %rbx
  441dd6:	49 39 d8 	cmpq	%rbx, %r8
  441dd9:	73 ef 	jae	-17 <runtime.writebarrierptr_prewrite1.func1+0xba>
  441ddb:	0f b6 49 64 	movzbl	100(%rcx), %ecx
  441ddf:	80 f9 01 	cmpb	$1, %cl
  441de2:	75 e6 	jne	-26 <runtime.writebarrierptr_prewrite1.func1+0xba>
  441de4:	eb 07 	jmp	7 <runtime.writebarrierptr_prewrite1.func1+0xdd>
  441de6:	e8 55 dc fd ff 	callq	-140203 <runtime.panicindex>
  441deb:	0f 0b 	ud2
  441ded:	48 8d 05 cd bb 02 00 	leaq	179149(%rip), %rax
  441df4:	48 89 04 24 	movq	%rax, (%rsp)
  441df8:	48 c7 44 24 08 31 00 00 00 	movq	$49, 8(%rsp)
  441e01:	e8 ca f3 fd ff 	callq	-134198 <runtime.throw>
  441e06:	0f 0b 	ud2
  441e08:	e8 c3 26 00 00 	callq	9923 <runtime.morestack>
  441e0d:	e9 fe fe ff ff 	jmp	-258 <runtime.writebarrierptr_prewrite1.func1>
  441e12:	cc 	int3
  441e13:	cc 	int3
  441e14:	cc 	int3
  441e15:	cc 	int3
  441e16:	cc 	int3
  441e17:	cc 	int3
  441e18:	cc 	int3
  441e19:	cc 	int3
  441e1a:	cc 	int3
  441e1b:	cc 	int3
  441e1c:	cc 	int3
  441e1d:	cc 	int3
  441e1e:	cc 	int3
  441e1f:	cc 	int3

runtime.writebarrierptr_prewrite.func1:
  441e20:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  441e29:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  441e2d:	76 29 	jbe	41 <runtime.writebarrierptr_prewrite.func1+0x38>
  441e2f:	48 83 ec 18 	subq	$24, %rsp
  441e33:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  441e38:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  441e3d:	48 8d 05 02 a2 02 00 	leaq	172546(%rip), %rax
  441e44:	48 89 04 24 	movq	%rax, (%rsp)
  441e48:	48 c7 44 24 08 1c 00 00 00 	movq	$28, 8(%rsp)
  441e51:	e8 7a f3 fd ff 	callq	-134278 <runtime.throw>
  441e56:	0f 0b 	ud2
  441e58:	e8 13 27 00 00 	callq	10003 <runtime.morestack_noctxt>
  441e5d:	eb c1 	jmp	-63 <runtime.writebarrierptr_prewrite.func1>
  441e5f:	cc 	int3

runtime.freemcache.func1:
  441e60:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  441e69:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  441e6d:	0f 86 9a 00 00 00 	jbe	154 <runtime.freemcache.func1+0xad>
  441e73:	48 83 ec 18 	subq	$24, %rsp
  441e77:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  441e7c:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  441e81:	48 8b 42 08 	movq	8(%rdx), %rax
  441e85:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  441e8a:	48 89 04 24 	movq	%rax, (%rsp)
  441e8e:	e8 dd c6 fc ff 	callq	-211235 <runtime.(*mcache).releaseAll>
  441e93:	48 8b 44 24 08 	movq	8(%rsp), %rax
  441e98:	48 89 04 24 	movq	%rax, (%rsp)
  441e9c:	e8 8f 25 ff ff 	callq	-55921 <runtime.stackcache_clear>
  441ea1:	48 8d 05 f8 a3 06 00 	leaq	435192(%rip), %rax
  441ea8:	48 89 04 24 	movq	%rax, (%rsp)
  441eac:	e8 6f 76 fc ff 	callq	-231825 <runtime.lock>
  441eb1:	48 8b 44 24 08 	movq	8(%rsp), %rax
  441eb6:	48 89 04 24 	movq	%rax, (%rsp)
  441eba:	e8 51 c3 fd ff 	callq	-146607 <runtime.purgecachedstats>
  441ebf:	48 8d 05 f2 d8 06 00 	leaq	448754(%rip), %rax
  441ec6:	84 00 	testb	%al, (%rax)
  441ec8:	48 8b 05 19 d9 06 00 	movq	448793(%rip), %rax
  441ecf:	48 2b 05 e2 d8 06 00 	subq	448738(%rip), %rax
  441ed6:	48 89 05 0b d9 06 00 	movq	%rax, 448779(%rip)
  441edd:	48 8b 05 ec d8 06 00 	movq	448748(%rip), %rax
  441ee4:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  441ee9:	48 89 01 	movq	%rax, (%rcx)
  441eec:	48 89 0d dd d8 06 00 	movq	%rcx, 448733(%rip)
  441ef3:	48 8d 05 a6 a3 06 00 	leaq	435110(%rip), %rax
  441efa:	48 89 04 24 	movq	%rax, (%rsp)
  441efe:	e8 bd 77 fc ff 	callq	-231491 <runtime.unlock>
  441f03:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  441f08:	48 83 c4 18 	addq	$24, %rsp
  441f0c:	c3 	retq
  441f0d:	e8 be 25 00 00 	callq	9662 <runtime.morestack>
  441f12:	e9 49 ff ff ff 	jmp	-183 <runtime.freemcache.func1>
  441f17:	cc 	int3
  441f18:	cc 	int3
  441f19:	cc 	int3
  441f1a:	cc 	int3
  441f1b:	cc 	int3
  441f1c:	cc 	int3
  441f1d:	cc 	int3
  441f1e:	cc 	int3
  441f1f:	cc 	int3

runtime.gcStart.func1:
  441f20:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  441f29:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  441f2d:	76 1a 	jbe	26 <runtime.gcStart.func1+0x29>
  441f2f:	48 83 ec 08 	subq	$8, %rsp
  441f33:	48 89 2c 24 	movq	%rbp, (%rsp)
  441f37:	48 8d 2c 24 	leaq	(%rsp), %rbp
  441f3b:	e8 d0 59 fd ff 	callq	-173616 <runtime.finishsweep_m>
  441f40:	48 8b 2c 24 	movq	(%rsp), %rbp
  441f44:	48 83 c4 08 	addq	$8, %rsp
  441f48:	c3 	retq
  441f49:	e8 22 26 00 00 	callq	9762 <runtime.morestack_noctxt>
  441f4e:	eb d0 	jmp	-48 <runtime.gcStart.func1>

runtime.gcStart.func2:
  441f50:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  441f59:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  441f5d:	76 3d 	jbe	61 <runtime.gcStart.func2+0x4c>
  441f5f:	48 83 ec 20 	subq	$32, %rsp
  441f63:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  441f68:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  441f6d:	48 8b 42 08 	movq	8(%rdx), %rax
  441f71:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  441f76:	0f b6 0d 53 18 07 00 	movzbl	464979(%rip), %ecx
  441f7d:	88 0c 24 	movb	%cl, (%rsp)
  441f80:	e8 6b 35 fe ff 	callq	-117397 <runtime.startTheWorldWithSema>
  441f85:	48 8b 44 24 08 	movq	8(%rsp), %rax
  441f8a:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  441f8f:	48 89 01 	movq	%rax, (%rcx)
  441f92:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  441f97:	48 83 c4 20 	addq	$32, %rsp
  441f9b:	c3 	retq
  441f9c:	e8 2f 25 00 00 	callq	9519 <runtime.morestack>
  441fa1:	eb ad 	jmp	-83 <runtime.gcStart.func2>
  441fa3:	cc 	int3
  441fa4:	cc 	int3
  441fa5:	cc 	int3
  441fa6:	cc 	int3
  441fa7:	cc 	int3
  441fa8:	cc 	int3
  441fa9:	cc 	int3
  441faa:	cc 	int3
  441fab:	cc 	int3
  441fac:	cc 	int3
  441fad:	cc 	int3
  441fae:	cc 	int3
  441faf:	cc 	int3

runtime.gcMarkDone.func1.1:
  441fb0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  441fb9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  441fbd:	76 3c 	jbe	60 <runtime.gcMarkDone.func1.1+0x4b>
  441fbf:	48 83 ec 10 	subq	$16, %rsp
  441fc3:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  441fc8:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  441fcd:	48 8b 44 24 18 	movq	24(%rsp), %rax
  441fd2:	48 89 04 24 	movq	%rax, (%rsp)
  441fd6:	e8 f5 c5 fd ff 	callq	-145931 <runtime.wbBufFlush1>
  441fdb:	48 8b 44 24 18 	movq	24(%rsp), %rax
  441fe0:	84 00 	testb	%al, (%rax)
  441fe2:	48 05 70 12 00 00 	addq	$4720, %rax
  441fe8:	48 89 04 24 	movq	%rax, (%rsp)
  441fec:	e8 8f 72 fd ff 	callq	-167281 <runtime.(*gcWork).dispose>
  441ff1:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  441ff6:	48 83 c4 10 	addq	$16, %rsp
  441ffa:	c3 	retq
  441ffb:	e8 70 25 00 00 	callq	9584 <runtime.morestack_noctxt>
  442000:	eb ae 	jmp	-82 <runtime.gcMarkDone.func1.1>
  442002:	cc 	int3
  442003:	cc 	int3
  442004:	cc 	int3
  442005:	cc 	int3
  442006:	cc 	int3
  442007:	cc 	int3
  442008:	cc 	int3
  442009:	cc 	int3
  44200a:	cc 	int3
  44200b:	cc 	int3
  44200c:	cc 	int3
  44200d:	cc 	int3
  44200e:	cc 	int3
  44200f:	cc 	int3

runtime.gcMarkDone.func1:
  442010:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  442019:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44201d:	76 28 	jbe	40 <runtime.gcMarkDone.func1+0x37>
  44201f:	48 83 ec 10 	subq	$16, %rsp
  442023:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  442028:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  44202d:	48 8d 05 54 c0 02 00 	leaq	180308(%rip), %rax
  442034:	48 89 04 24 	movq	%rax, (%rsp)
  442038:	e8 73 3b fe ff 	callq	-115853 <runtime.forEachP>
  44203d:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  442042:	48 83 c4 10 	addq	$16, %rsp
  442046:	c3 	retq
  442047:	e8 24 25 00 00 	callq	9508 <runtime.morestack_noctxt>
  44204c:	eb c2 	jmp	-62 <runtime.gcMarkDone.func1>
  44204e:	cc 	int3
  44204f:	cc 	int3

runtime.gcMarkTermination.func1:
  442050:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  442059:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44205d:	76 28 	jbe	40 <runtime.gcMarkTermination.func1+0x37>
  44205f:	48 83 ec 10 	subq	$16, %rsp
  442063:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  442068:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  44206d:	48 8b 42 08 	movq	8(%rdx), %rax
  442071:	48 8b 00 	movq	(%rax), %rax
  442074:	48 89 04 24 	movq	%rax, (%rsp)
  442078:	e8 63 0a fd ff 	callq	-193949 <runtime.gcMark>
  44207d:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  442082:	48 83 c4 10 	addq	$16, %rsp
  442086:	c3 	retq
  442087:	e8 44 24 00 00 	callq	9284 <runtime.morestack>
  44208c:	eb c2 	jmp	-62 <runtime.gcMarkTermination.func1>
  44208e:	cc 	int3
  44208f:	cc 	int3

runtime.gcMarkTermination.func2:
  442090:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  442099:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44209d:	0f 86 9e 01 00 00 	jbe	414 <runtime.gcMarkTermination.func2+0x1b1>
  4420a3:	48 83 ec 18 	subq	$24, %rsp
  4420a7:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  4420ac:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  4420b1:	48 8b 42 08 	movq	8(%rdx), %rax
  4420b5:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4420ba:	48 8b 0d 5f 5d 06 00 	movq	417119(%rip), %rcx
  4420c1:	48 89 0d 70 5e 06 00 	movq	%rcx, 417392(%rip)
  4420c8:	8b 0d fe 19 08 00 	movl	530942(%rip), %ecx
  4420ce:	85 c9 	testl	%ecx, %ecx
  4420d0:	0f 8f 41 01 00 00 	jg	321 <runtime.gcMarkTermination.func2+0x187>
  4420d6:	31 c9 	xorl	%ecx, %ecx
  4420d8:	48 8d 15 fd 17 08 00 	leaq	530429(%rip), %rdx
  4420df:	87 0a 	xchgl	%ecx, (%rdx)
  4420e1:	8b 0d f5 17 08 00 	movl	530421(%rip), %ecx
  4420e7:	83 f9 01 	cmpl	$1, %ecx
  4420ea:	0f 85 1c 01 00 00 	jne	284 <runtime.gcMarkTermination.func2+0x17c>
  4420f0:	b9 01 00 00 00 	movl	$1, %ecx
  4420f5:	88 0d 19 19 08 00 	movb	%cl, 530713(%rip)
  4420fb:	84 c9 	testb	%cl, %cl
  4420fd:	0f 84 fd 00 00 00 	je	253 <runtime.gcMarkTermination.func2+0x170>
  442103:	b9 01 00 00 00 	movl	$1, %ecx
  442108:	88 0d 02 19 08 00 	movb	%cl, 530690(%rip)
  44210e:	48 8b 05 8b 5d 06 00 	movq	417163(%rip), %rax
  442115:	48 89 04 24 	movq	%rax, (%rsp)
  442119:	e8 c2 0c fd ff 	callq	-193342 <runtime.gcSweep>
  44211e:	8b 05 bc 19 08 00 	movl	530876(%rip), %eax
  442124:	83 f8 01 	cmpl	$1, %eax
  442127:	7f 0a 	jg	10 <runtime.gcMarkTermination.func2+0xa3>
  442129:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  44212e:	48 83 c4 18 	addq	$24, %rsp
  442132:	c3 	retq
  442133:	e8 f8 58 00 00 	callq	22776 <runtime.nanotime>
  442138:	48 8b 04 24 	movq	(%rsp), %rax
  44213c:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  442141:	48 89 01 	movq	%rax, (%rcx)
  442144:	e8 47 0e fd ff 	callq	-192953 <runtime.gcResetMarkState>
  442149:	e8 c2 57 fd ff 	callq	-174142 <runtime.finishsweep_m>
  44214e:	b8 02 00 00 00 	movl	$2, %eax
  442153:	48 8d 0d 82 17 08 00 	leaq	530306(%rip), %rcx
  44215a:	87 01 	xchgl	%eax, (%rcx)
  44215c:	8b 05 7a 17 08 00 	movl	530298(%rip), %eax
  442162:	83 f8 01 	cmpl	$1, %eax
  442165:	0f 85 8a 00 00 00 	jne	138 <runtime.gcMarkTermination.func2+0x165>
  44216b:	b8 01 00 00 00 	movl	$1, %eax
  442170:	88 05 9e 18 08 00 	movb	%al, 530590(%rip)
  442176:	84 c0 	testb	%al, %al
  442178:	74 72 	je	114 <runtime.gcMarkTermination.func2+0x15c>
  44217a:	b8 01 00 00 00 	movl	$1, %eax
  44217f:	88 05 8b 18 08 00 	movb	%al, 530571(%rip)
  442185:	48 8b 44 24 08 	movq	8(%rsp), %rax
  44218a:	48 8b 00 	movq	(%rax), %rax
  44218d:	48 89 04 24 	movq	%rax, (%rsp)
  442191:	e8 4a 09 fd ff 	callq	-194230 <runtime.gcMark>
  442196:	31 c0 	xorl	%eax, %eax
  442198:	48 8d 0d 3d 17 08 00 	leaq	530237(%rip), %rcx
  44219f:	87 01 	xchgl	%eax, (%rcx)
  4421a1:	8b 05 35 17 08 00 	movl	530229(%rip), %eax
  4421a7:	83 f8 01 	cmpl	$1, %eax
  4421aa:	75 38 	jne	56 <runtime.gcMarkTermination.func2+0x154>
  4421ac:	b8 01 00 00 00 	movl	$1, %eax
  4421b1:	88 05 5d 18 08 00 	movb	%al, 530525(%rip)
  4421b7:	84 c0 	testb	%al, %al
  4421b9:	74 20 	je	32 <runtime.gcMarkTermination.func2+0x14b>
  4421bb:	b8 01 00 00 00 	movl	$1, %eax
  4421c0:	88 05 4a 18 08 00 	movb	%al, 530506(%rip)
  4421c6:	48 8b 05 d3 5c 06 00 	movq	416979(%rip), %rax
  4421cd:	48 89 04 24 	movq	%rax, (%rsp)
  4421d1:	e8 0a 0c fd ff 	callq	-193526 <runtime.gcSweep>
  4421d6:	e9 4e ff ff ff 	jmp	-178 <runtime.gcMarkTermination.func2+0x99>
  4421db:	0f b6 05 33 18 08 00 	movzbl	530483(%rip), %eax
  4421e2:	eb dc 	jmp	-36 <runtime.gcMarkTermination.func2+0x130>
  4421e4:	83 f8 02 	cmpl	$2, %eax
  4421e7:	0f 94 c0 	sete	%al
  4421ea:	eb c5 	jmp	-59 <runtime.gcMarkTermination.func2+0x121>
  4421ec:	0f b6 05 22 18 08 00 	movzbl	530466(%rip), %eax
  4421f3:	eb 8a 	jmp	-118 <runtime.gcMarkTermination.func2+0xef>
  4421f5:	83 f8 02 	cmpl	$2, %eax
  4421f8:	0f 94 c0 	sete	%al
  4421fb:	e9 70 ff ff ff 	jmp	-144 <runtime.gcMarkTermination.func2+0xe0>
  442200:	0f b6 0d 0e 18 08 00 	movzbl	530446(%rip), %ecx
  442207:	e9 fc fe ff ff 	jmp	-260 <runtime.gcMarkTermination.func2+0x78>
  44220c:	83 f9 02 	cmpl	$2, %ecx
  44220f:	0f 94 c1 	sete	%cl
  442212:	e9 de fe ff ff 	jmp	-290 <runtime.gcMarkTermination.func2+0x65>
  442217:	e8 74 0d fd ff 	callq	-193164 <runtime.gcResetMarkState>
  44221c:	e8 0f 55 fd ff 	callq	-174833 <runtime.initCheckmarks>
  442221:	48 8b 44 24 08 	movq	8(%rsp), %rax
  442226:	48 8b 08 	movq	(%rax), %rcx
  442229:	48 89 0c 24 	movq	%rcx, (%rsp)
  44222d:	e8 ae 08 fd ff 	callq	-194386 <runtime.gcMark>
  442232:	e8 e9 55 fd ff 	callq	-174615 <runtime.clearCheckmarks>
  442237:	48 8b 44 24 08 	movq	8(%rsp), %rax
  44223c:	e9 95 fe ff ff 	jmp	-363 <runtime.gcMarkTermination.func2+0x46>
  442241:	e8 8a 22 00 00 	callq	8842 <runtime.morestack>
  442246:	e9 45 fe ff ff 	jmp	-443 <runtime.gcMarkTermination.func2>
  44224b:	cc 	int3
  44224c:	cc 	int3
  44224d:	cc 	int3
  44224e:	cc 	int3
  44224f:	cc 	int3

runtime.gcMarkTermination.func3:
  442250:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  442259:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44225d:	76 21 	jbe	33 <runtime.gcMarkTermination.func3+0x30>
  44225f:	48 83 ec 18 	subq	$24, %rsp
  442263:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  442268:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  44226d:	c6 04 24 01 	movb	$1, (%rsp)
  442271:	e8 7a 32 fe ff 	callq	-118150 <runtime.startTheWorldWithSema>
  442276:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  44227b:	48 83 c4 18 	addq	$24, %rsp
  44227f:	c3 	retq
  442280:	e8 eb 22 00 00 	callq	8939 <runtime.morestack_noctxt>
  442285:	eb c9 	jmp	-55 <runtime.gcMarkTermination.func3>
  442287:	cc 	int3
  442288:	cc 	int3
  442289:	cc 	int3
  44228a:	cc 	int3
  44228b:	cc 	int3
  44228c:	cc 	int3
  44228d:	cc 	int3
  44228e:	cc 	int3
  44228f:	cc 	int3

runtime.gcBgMarkWorker.func1:
  442290:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  442295:	48 8b 11 	movq	(%rcx), %rdx
  442298:	64 48 8b 1c 25 f8 ff ff ff 	movq	%fs:-8, %rbx
  4422a1:	8b b2 00 01 00 00 	movl	256(%rdx), %esi
  4422a7:	8d 7e ff 	leal	-1(%rsi), %edi
  4422aa:	89 ba 00 01 00 00 	movl	%edi, 256(%rdx)
  4422b0:	83 fe 01 	cmpl	$1, %esi
  4422b3:	75 13 	jne	19 <runtime.gcBgMarkWorker.func1+0x38>
  4422b5:	0f b6 93 c0 00 00 00 	movzbl	192(%rbx), %edx
  4422bc:	84 d2 	testb	%dl, %dl
  4422be:	74 08 	je	8 <runtime.gcBgMarkWorker.func1+0x38>
  4422c0:	48 c7 43 10 de fa ff ff 	movq	$-1314, 16(%rbx)
  4422c8:	48 8b 51 08 	movq	8(%rcx), %rdx
  4422cc:	48 8d 59 08 	leaq	8(%rcx), %rbx
  4422d0:	48 85 d2 	testq	%rdx, %rdx
  4422d3:	74 21 	je	33 <runtime.gcBgMarkWorker.func1+0x66>
  4422d5:	84 03 	testb	%al, (%rbx)
  4422d7:	31 db 	xorl	%ebx, %ebx
  4422d9:	48 89 59 08 	movq	%rbx, 8(%rcx)
  4422dd:	84 02 	testb	%al, (%rdx)
  4422df:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  4422e4:	31 c0 	xorl	%eax, %eax
  4422e6:	f0 	lock
  4422e7:	48 0f b1 8a 58 12 00 00 	cmpxchgq	%rcx, 4696(%rdx)
  4422ef:	0f 94 c1 	sete	%cl
  4422f2:	84 c9 	testb	%cl, %cl
  4422f4:	74 06 	je	6 <runtime.gcBgMarkWorker.func1+0x6c>
  4422f6:	c6 44 24 18 01 	movb	$1, 24(%rsp)
  4422fb:	c3 	retq
  4422fc:	c6 44 24 18 00 	movb	$0, 24(%rsp)
  442301:	c3 	retq
  442302:	cc 	int3
  442303:	cc 	int3
  442304:	cc 	int3
  442305:	cc 	int3
  442306:	cc 	int3
  442307:	cc 	int3
  442308:	cc 	int3
  442309:	cc 	int3
  44230a:	cc 	int3
  44230b:	cc 	int3
  44230c:	cc 	int3
  44230d:	cc 	int3
  44230e:	cc 	int3
  44230f:	cc 	int3

runtime.gcBgMarkWorker.func2:
  442310:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  442319:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44231d:	0f 86 ab 01 00 00 	jbe	427 <runtime.gcBgMarkWorker.func2+0x1be>
  442323:	48 83 ec 38 	subq	$56, %rsp
  442327:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  44232c:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  442331:	48 8b 42 08 	movq	8(%rdx), %rax
  442335:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  44233a:	48 8b 4a 10 	movq	16(%rdx), %rcx
  44233e:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  442343:	48 89 04 24 	movq	%rax, (%rsp)
  442347:	48 ba 02 00 00 00 04 00 00 00 	movabsq	$17179869186, %rdx
  442351:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  442356:	e8 25 27 fe ff 	callq	-121051 <runtime.casgstatus>
  44235b:	48 8b 44 24 20 	movq	32(%rsp), %rax
  442360:	84 00 	testb	%al, (%rax)
  442362:	48 8b 88 60 12 00 00 	movq	4704(%rax), %rcx
  442369:	48 85 c9 	testq	%rcx, %rcx
  44236c:	0f 85 01 01 00 00 	jne	257 <runtime.gcBgMarkWorker.func2+0x163>
  442372:	48 8d 88 70 12 00 00 	leaq	4720(%rax), %rcx
  442379:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  44237e:	48 89 0c 24 	movq	%rcx, (%rsp)
  442382:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  44238b:	e8 40 3b fd ff 	callq	-181440 <runtime.gcDrain>
  442390:	48 8b 44 24 18 	movq	24(%rsp), %rax
  442395:	0f b6 88 c0 00 00 00 	movzbl	192(%rax), %ecx
  44239c:	84 c9 	testb	%cl, %cl
  44239e:	0f 84 91 00 00 00 	je	145 <runtime.gcBgMarkWorker.func2+0x125>
  4423a4:	48 8d 05 85 55 06 00 	leaq	415109(%rip), %rax
  4423ab:	48 89 04 24 	movq	%rax, (%rsp)
  4423af:	e8 6c 71 fc ff 	callq	-233108 <runtime.lock>
  4423b4:	eb 16 	jmp	22 <runtime.gcBgMarkWorker.func2+0xbc>
  4423b6:	48 8d 05 c3 55 06 00 	leaq	415171(%rip), %rax
  4423bd:	84 00 	testb	%al, (%rax)
  4423bf:	48 89 15 ba 55 06 00 	movq	%rdx, 415162(%rip)
  4423c6:	ff 05 bc 55 06 00 	incl	415164(%rip)
  4423cc:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4423d1:	48 89 04 24 	movq	%rax, (%rsp)
  4423d5:	e8 96 bd fe ff 	callq	-82538 <runtime.runqget>
  4423da:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4423df:	48 85 c0 	testq	%rax, %rax
  4423e2:	74 41 	je	65 <runtime.gcBgMarkWorker.func2+0x115>
  4423e4:	48 c7 80 b8 00 00 00 00 00 00 00 	movq	$0, 184(%rax)
  4423ef:	48 8b 0d 8a 55 06 00 	movq	415114(%rip), %rcx
  4423f6:	48 85 c9 	testq	%rcx, %rcx
  4423f9:	74 15 	je	21 <runtime.gcBgMarkWorker.func2+0x100>
  4423fb:	48 8d 91 b8 00 00 00 	leaq	184(%rcx), %rdx
  442402:	84 02 	testb	%al, (%rdx)
  442404:	48 89 c2 	movq	%rax, %rdx
  442407:	48 89 81 b8 00 00 00 	movq	%rax, 184(%rcx)
  44240e:	eb a6 	jmp	-90 <runtime.gcBgMarkWorker.func2+0xa6>
  442410:	48 8d 0d 61 55 06 00 	leaq	415073(%rip), %rcx
  442417:	84 01 	testb	%al, (%rcx)
  442419:	48 89 c2 	movq	%rax, %rdx
  44241c:	48 89 05 55 55 06 00 	movq	%rax, 415061(%rip)
  442423:	eb 91 	jmp	-111 <runtime.gcBgMarkWorker.func2+0xa6>
  442425:	48 8d 05 04 55 06 00 	leaq	414980(%rip), %rax
  44242c:	48 89 04 24 	movq	%rax, (%rsp)
  442430:	e8 8b 72 fc ff 	callq	-232821 <runtime.unlock>
  442435:	48 8b 44 24 28 	movq	40(%rsp), %rax
  44243a:	48 89 04 24 	movq	%rax, (%rsp)
  44243e:	48 c7 44 24 08 06 00 00 00 	movq	$6, 8(%rsp)
  442447:	e8 84 3a fd ff 	callq	-181628 <runtime.gcDrain>
  44244c:	48 8b 44 24 18 	movq	24(%rsp), %rax
  442451:	48 89 04 24 	movq	%rax, (%rsp)
  442455:	48 b8 04 00 00 00 02 00 00 00 	movabsq	$8589934596, %rax
  44245f:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  442464:	e8 17 26 fe ff 	callq	-121321 <runtime.casgstatus>
  442469:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  44246e:	48 83 c4 38 	addq	$56, %rsp
  442472:	c3 	retq
  442473:	48 83 f9 01 	cmpq	$1, %rcx
  442477:	74 20 	je	32 <runtime.gcBgMarkWorker.func2+0x189>
  442479:	48 83 f9 02 	cmpq	$2, %rcx
  44247d:	75 34 	jne	52 <runtime.gcBgMarkWorker.func2+0x1a3>
  44247f:	48 05 70 12 00 00 	addq	$4720, %rax
  442485:	48 89 04 24 	movq	%rax, (%rsp)
  442489:	48 c7 44 24 08 0d 00 00 00 	movq	$13, 8(%rsp)
  442492:	e8 39 3a fd ff 	callq	-181703 <runtime.gcDrain>
  442497:	eb b3 	jmp	-77 <runtime.gcBgMarkWorker.func2+0x13c>
  442499:	48 05 70 12 00 00 	addq	$4720, %rax
  44249f:	48 89 04 24 	movq	%rax, (%rsp)
  4424a3:	48 c7 44 24 08 15 00 00 00 	movq	$21, 8(%rsp)
  4424ac:	e8 1f 3a fd ff 	callq	-181729 <runtime.gcDrain>
  4424b1:	eb 99 	jmp	-103 <runtime.gcBgMarkWorker.func2+0x13c>
  4424b3:	48 8d 05 65 b0 02 00 	leaq	176229(%rip), %rax
  4424ba:	48 89 04 24 	movq	%rax, (%rsp)
  4424be:	48 c7 44 24 08 2b 00 00 00 	movq	$43, 8(%rsp)
  4424c7:	e8 04 ed fd ff 	callq	-135932 <runtime.throw>
  4424cc:	0f 0b 	ud2
  4424ce:	e8 fd 1f 00 00 	callq	8189 <runtime.morestack>
  4424d3:	e9 38 fe ff ff 	jmp	-456 <runtime.gcBgMarkWorker.func2>
  4424d8:	cc 	int3
  4424d9:	cc 	int3
  4424da:	cc 	int3
  4424db:	cc 	int3
  4424dc:	cc 	int3
  4424dd:	cc 	int3
  4424de:	cc 	int3
  4424df:	cc 	int3

runtime.markroot.func1:
  4424e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4424e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4424ed:	0f 86 07 01 00 00 	jbe	263 <runtime.markroot.func1+0x11a>
  4424f3:	48 83 ec 38 	subq	$56, %rsp
  4424f7:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  4424fc:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  442501:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  44250a:	48 8b 40 30 	movq	48(%rax), %rax
  44250e:	48 8b 4a 08 	movq	8(%rdx), %rcx
  442512:	48 8b 52 10 	movq	16(%rdx), %rdx
  442516:	48 8b 80 c0 00 00 00 	movq	192(%rax), %rax
  44251d:	48 39 c1 	cmpq	%rax, %rcx
  442520:	0f 85 cd 00 00 00 	jne	205 <runtime.markroot.func1+0x113>
  442526:	8b 98 90 00 00 00 	movl	144(%rax), %ebx
  44252c:	83 fb 02 	cmpl	$2, %ebx
  44252f:	0f 94 c3 	sete	%bl
  442532:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  442537:	88 5c 24 17 	movb	%bl, 23(%rsp)
  44253b:	84 db 	testb	%bl, %bl
  44253d:	75 40 	jne	64 <runtime.markroot.func1+0x9f>
  44253f:	48 89 0c 24 	movq	%rcx, (%rsp)
  442543:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  442548:	e8 23 27 fe ff 	callq	-121053 <runtime.scang>
  44254d:	0f b6 44 24 17 	movzbl	23(%rsp), %eax
  442552:	84 c0 	testb	%al, %al
  442554:	75 0a 	jne	10 <runtime.markroot.func1+0x80>
  442556:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  44255b:	48 83 c4 38 	addq	$56, %rsp
  44255f:	c3 	retq
  442560:	48 8b 44 24 20 	movq	32(%rsp), %rax
  442565:	48 89 04 24 	movq	%rax, (%rsp)
  442569:	48 b8 04 00 00 00 02 00 00 00 	movabsq	$8589934596, %rax
  442573:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  442578:	e8 03 25 fe ff 	callq	-121597 <runtime.casgstatus>
  44257d:	eb d7 	jmp	-41 <runtime.markroot.func1+0x76>
  44257f:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  442584:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  442589:	48 89 04 24 	movq	%rax, (%rsp)
  44258d:	48 b9 02 00 00 00 04 00 00 00 	movabsq	$17179869186, %rcx
  442597:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44259c:	e8 df 24 fe ff 	callq	-121633 <runtime.casgstatus>
  4425a1:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4425a6:	48 c7 80 b0 00 00 00 17 00 00 00 	movq	$23, 176(%rax)
  4425b1:	8b 0d 59 14 08 00 	movl	529497(%rip), %ecx
  4425b7:	48 8d b8 a8 00 00 00 	leaq	168(%rax), %rdi
  4425be:	85 c9 	testl	%ecx, %ecx
  4425c0:	75 1d 	jne	29 <runtime.markroot.func1+0xff>
  4425c2:	48 8d 0d 9a 90 02 00 	leaq	168090(%rip), %rcx
  4425c9:	48 89 88 a8 00 00 00 	movq	%rcx, 168(%rax)
  4425d0:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  4425d5:	48 8b 54 24 28 	movq	40(%rsp), %rdx
  4425da:	e9 60 ff ff ff 	jmp	-160 <runtime.markroot.func1+0x5f>
  4425df:	48 89 c1 	movq	%rax, %rcx
  4425e2:	48 8d 05 7a 90 02 00 	leaq	168058(%rip), %rax
  4425e9:	e8 b2 42 00 00 	callq	17074 <runtime.gcWriteBarrier>
  4425ee:	48 89 c8 	movq	%rcx, %rax
  4425f1:	eb dd 	jmp	-35 <runtime.markroot.func1+0xf0>
  4425f3:	31 db 	xorl	%ebx, %ebx
  4425f5:	e9 38 ff ff ff 	jmp	-200 <runtime.markroot.func1+0x52>
  4425fa:	e8 d1 1e 00 00 	callq	7889 <runtime.morestack>
  4425ff:	e9 dc fe ff ff 	jmp	-292 <runtime.markroot.func1>
  442604:	cc 	int3
  442605:	cc 	int3
  442606:	cc 	int3
  442607:	cc 	int3
  442608:	cc 	int3
  442609:	cc 	int3
  44260a:	cc 	int3
  44260b:	cc 	int3
  44260c:	cc 	int3
  44260d:	cc 	int3
  44260e:	cc 	int3
  44260f:	cc 	int3

runtime.gcAssistAlloc.func1:
  442610:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  442619:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44261d:	76 2e 	jbe	46 <runtime.gcAssistAlloc.func1+0x3d>
  44261f:	48 83 ec 18 	subq	$24, %rsp
  442623:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  442628:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  44262d:	48 8b 42 08 	movq	8(%rdx), %rax
  442631:	48 8b 4a 10 	movq	16(%rdx), %rcx
  442635:	48 89 04 24 	movq	%rax, (%rsp)
  442639:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44263e:	e8 bd 25 fd ff 	callq	-186947 <runtime.gcAssistAlloc1>
  442643:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  442648:	48 83 c4 18 	addq	$24, %rsp
  44264c:	c3 	retq
  44264d:	e8 7e 1e 00 00 	callq	7806 <runtime.morestack>
  442652:	eb bc 	jmp	-68 <runtime.gcAssistAlloc.func1>
  442654:	cc 	int3
  442655:	cc 	int3
  442656:	cc 	int3
  442657:	cc 	int3
  442658:	cc 	int3
  442659:	cc 	int3
  44265a:	cc 	int3
  44265b:	cc 	int3
  44265c:	cc 	int3
  44265d:	cc 	int3
  44265e:	cc 	int3
  44265f:	cc 	int3

runtime.scanstack.func1:
  442660:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  442669:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44266d:	76 3d 	jbe	61 <runtime.scanstack.func1+0x4c>
  44266f:	48 83 ec 20 	subq	$32, %rsp
  442673:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  442678:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  44267d:	48 8b 42 08 	movq	8(%rdx), %rax
  442681:	48 8b 4a 10 	movq	16(%rdx), %rcx
  442685:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44268a:	48 8b 44 24 28 	movq	40(%rsp), %rax
  44268f:	48 89 04 24 	movq	%rax, (%rsp)
  442693:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  442698:	e8 93 31 fd ff 	callq	-183917 <runtime.scanframeworker>
  44269d:	c6 44 24 38 01 	movb	$1, 56(%rsp)
  4426a2:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  4426a7:	48 83 c4 20 	addq	$32, %rsp
  4426ab:	c3 	retq
  4426ac:	e8 1f 1e 00 00 	callq	7711 <runtime.morestack>
  4426b1:	eb ad 	jmp	-83 <runtime.scanstack.func1>
  4426b3:	cc 	int3
  4426b4:	cc 	int3
  4426b5:	cc 	int3
  4426b6:	cc 	int3
  4426b7:	cc 	int3
  4426b8:	cc 	int3
  4426b9:	cc 	int3
  4426ba:	cc 	int3
  4426bb:	cc 	int3
  4426bc:	cc 	int3
  4426bd:	cc 	int3
  4426be:	cc 	int3
  4426bf:	cc 	int3

runtime.gosweepone.func1:
  4426c0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4426c9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4426cd:	76 32 	jbe	50 <runtime.gosweepone.func1+0x41>
  4426cf:	48 83 ec 18 	subq	$24, %rsp
  4426d3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  4426d8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  4426dd:	48 8b 42 08 	movq	8(%rdx), %rax
  4426e1:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4426e6:	e8 d5 53 fd ff 	callq	-175147 <runtime.sweepone>
  4426eb:	48 8b 04 24 	movq	(%rsp), %rax
  4426ef:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  4426f4:	48 89 01 	movq	%rax, (%rcx)
  4426f7:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  4426fc:	48 83 c4 18 	addq	$24, %rsp
  442700:	c3 	retq
  442701:	e8 ca 1d 00 00 	callq	7626 <runtime.morestack>
  442706:	eb b8 	jmp	-72 <runtime.gosweepone.func1>
  442708:	cc 	int3
  442709:	cc 	int3
  44270a:	cc 	int3
  44270b:	cc 	int3
  44270c:	cc 	int3
  44270d:	cc 	int3
  44270e:	cc 	int3
  44270f:	cc 	int3

runtime.getempty.func1:
  442710:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  442719:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44271d:	76 53 	jbe	83 <runtime.getempty.func1+0x62>
  44271f:	48 83 ec 30 	subq	$48, %rsp
  442723:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  442728:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  44272d:	48 8b 42 08 	movq	8(%rdx), %rax
  442731:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  442736:	48 8d 0d 63 9b 06 00 	leaq	432995(%rip), %rcx
  44273d:	48 89 0c 24 	movq	%rcx, (%rsp)
  442741:	48 c7 44 24 08 04 00 00 00 	movq	$4, 8(%rsp)
  44274a:	48 8d 0d 47 20 08 00 	leaq	532551(%rip), %rcx
  442751:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  442756:	e8 a5 85 fd ff 	callq	-162395 <runtime.(*mheap).allocManual>
  44275b:	48 8b 44 24 18 	movq	24(%rsp), %rax
  442760:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  442765:	48 89 01 	movq	%rax, (%rcx)
  442768:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  44276d:	48 83 c4 30 	addq	$48, %rsp
  442771:	c3 	retq
  442772:	e8 59 1d 00 00 	callq	7513 <runtime.morestack>
  442777:	eb 97 	jmp	-105 <runtime.getempty.func1>
  442779:	cc 	int3
  44277a:	cc 	int3
  44277b:	cc 	int3
  44277c:	cc 	int3
  44277d:	cc 	int3
  44277e:	cc 	int3
  44277f:	cc 	int3

runtime.freeSomeWbufs.func1:
  442780:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  442789:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44278d:	0f 86 b6 00 00 00 	jbe	182 <runtime.freeSomeWbufs.func1+0xc9>
  442793:	48 83 ec 40 	subq	$64, %rsp
  442797:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  44279c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  4427a1:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4427aa:	48 8b 40 30 	movq	48(%rax), %rax
  4427ae:	0f b6 4a 08 	movzbl	8(%rdx), %ecx
  4427b2:	88 4c 24 1f 	movb	%cl, 31(%rsp)
  4427b6:	48 8b 80 c0 00 00 00 	movq	192(%rax), %rax
  4427bd:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  4427c2:	31 d2 	xorl	%edx, %edx
  4427c4:	eb 58 	jmp	88 <runtime.freeSomeWbufs.func1+0x9e>
  4427c6:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  4427cb:	48 89 5c 24 30 	movq	%rbx, 48(%rsp)
  4427d0:	48 8d 05 21 56 06 00 	leaq	415265(%rip), %rax
  4427d7:	48 89 04 24 	movq	%rax, (%rsp)
  4427db:	48 89 5c 24 08 	movq	%rbx, 8(%rsp)
  4427e0:	e8 cb 98 fd ff 	callq	-157493 <runtime.(*mSpanList).remove>
  4427e5:	48 8d 05 b4 9a 06 00 	leaq	432820(%rip), %rax
  4427ec:	48 89 04 24 	movq	%rax, (%rsp)
  4427f0:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4427f5:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4427fa:	48 8d 0d 97 1f 08 00 	leaq	532375(%rip), %rcx
  442801:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  442806:	e8 f5 8c fd ff 	callq	-160523 <runtime.(*mheap).freeManual>
  44280b:	48 8b 44 24 20 	movq	32(%rsp), %rax
  442810:	48 8d 50 01 	leaq	1(%rax), %rdx
  442814:	48 8b 44 24 28 	movq	40(%rsp), %rax
  442819:	0f b6 4c 24 1f 	movzbl	31(%rsp), %ecx
  44281e:	48 83 fa 40 	cmpq	$64, %rdx
  442822:	7d 1b 	jge	27 <runtime.freeSomeWbufs.func1+0xbf>
  442824:	84 c9 	testb	%cl, %cl
  442826:	74 0b 	je	11 <runtime.freeSomeWbufs.func1+0xb3>
  442828:	0f b6 98 c0 00 00 00 	movzbl	192(%rax), %ebx
  44282f:	84 db 	testb	%bl, %bl
  442831:	75 0c 	jne	12 <runtime.freeSomeWbufs.func1+0xbf>
  442833:	48 8b 1d be 55 06 00 	movq	415166(%rip), %rbx
  44283a:	48 85 db 	testq	%rbx, %rbx
  44283d:	75 87 	jne	-121 <runtime.freeSomeWbufs.func1+0x46>
  44283f:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  442844:	48 83 c4 40 	addq	$64, %rsp
  442848:	c3 	retq
  442849:	e8 82 1c 00 00 	callq	7298 <runtime.morestack>
  44284e:	e9 2d ff ff ff 	jmp	-211 <runtime.freeSomeWbufs.func1>
  442853:	cc 	int3
  442854:	cc 	int3
  442855:	cc 	int3
  442856:	cc 	int3
  442857:	cc 	int3
  442858:	cc 	int3
  442859:	cc 	int3
  44285a:	cc 	int3
  44285b:	cc 	int3
  44285c:	cc 	int3
  44285d:	cc 	int3
  44285e:	cc 	int3
  44285f:	cc 	int3

runtime.(*mheap).alloc.func1:
  442860:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  442869:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44286d:	76 55 	jbe	85 <runtime.(*mheap).alloc.func1+0x64>
  44286f:	48 83 ec 30 	subq	$48, %rsp
  442873:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  442878:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  44287d:	48 8b 42 08 	movq	8(%rdx), %rax
  442881:	48 8b 4a 10 	movq	16(%rdx), %rcx
  442885:	0f b6 5a 18 	movzbl	24(%rdx), %ebx
  442889:	0f b6 72 19 	movzbl	25(%rdx), %esi
  44288d:	48 8b 52 20 	movq	32(%rdx), %rdx
  442891:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  442896:	48 89 04 24 	movq	%rax, (%rsp)
  44289a:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44289f:	88 5c 24 10 	movb	%bl, 16(%rsp)
  4428a3:	40 88 74 24 11 	movb	%sil, 17(%rsp)
  4428a8:	e8 33 80 fd ff 	callq	-163789 <runtime.(*mheap).alloc_m>
  4428ad:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4428b2:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  4428b7:	48 89 01 	movq	%rax, (%rcx)
  4428ba:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  4428bf:	48 83 c4 30 	addq	$48, %rsp
  4428c3:	c3 	retq
  4428c4:	e8 07 1c 00 00 	callq	7175 <runtime.morestack>
  4428c9:	eb 95 	jmp	-107 <runtime.(*mheap).alloc.func1>
  4428cb:	cc 	int3
  4428cc:	cc 	int3
  4428cd:	cc 	int3
  4428ce:	cc 	int3
  4428cf:	cc 	int3

runtime.(*mheap).freeSpan.func1:
  4428d0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4428d9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4428dd:	0f 86 08 01 00 00 	jbe	264 <runtime.(*mheap).freeSpan.func1+0x11b>
  4428e3:	48 83 ec 48 	subq	$72, %rsp
  4428e7:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  4428ec:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  4428f1:	48 8b 42 08 	movq	8(%rdx), %rax
  4428f5:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  4428fa:	84 00 	testb	%al, (%rax)
  4428fc:	48 8b 4a 10 	movq	16(%rdx), %rcx
  442900:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  442905:	8b 52 18 	movl	24(%rdx), %edx
  442908:	89 54 24 24 	movl	%edx, 36(%rsp)
  44290c:	64 48 8b 1c 25 f8 ff ff ff 	movq	%fs:-8, %rbx
  442915:	48 8b 5b 30 	movq	48(%rbx), %rbx
  442919:	48 89 5c 24 30 	movq	%rbx, 48(%rsp)
  44291e:	48 89 04 24 	movq	%rax, (%rsp)
  442922:	e8 f9 6b fc ff 	callq	-234503 <runtime.lock>
  442927:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44292c:	48 8b 88 60 01 00 00 	movq	352(%rax), %rcx
  442933:	48 8b 49 08 	movq	8(%rcx), %rcx
  442937:	48 03 0d 0a 35 08 00 	addq	537866(%rip), %rcx
  44293e:	48 89 0d 03 35 08 00 	movq	%rcx, 537859(%rip)
  442945:	48 8b 88 60 01 00 00 	movq	352(%rax), %rcx
  44294c:	48 c7 41 08 00 00 00 00 	movq	$0, 8(%rcx)
  442954:	48 8b 88 60 01 00 00 	movq	352(%rax), %rcx
  44295b:	48 8b 49 20 	movq	32(%rcx), %rcx
  44295f:	48 8d 15 c2 34 08 00 	leaq	537794(%rip), %rdx
  442966:	48 03 0a 	addq	(%rdx), %rcx
  442969:	48 89 0d b8 34 08 00 	movq	%rcx, 537784(%rip)
  442970:	48 8b 80 60 01 00 00 	movq	352(%rax), %rax
  442977:	48 c7 40 20 00 00 00 00 	movq	$0, 32(%rax)
  44297f:	8b 44 24 24 	movl	36(%rsp), %eax
  442983:	85 c0 	testl	%eax, %eax
  442985:	74 08 	je	8 <runtime.(*mheap).freeSpan.func1+0xbf>
  442987:	48 83 05 c9 1d 08 00 ff 	addq	$-1, 531913(%rip)
  44298f:	8b 05 3f 0f 08 00 	movl	528191(%rip), %eax
  442995:	85 c0 	testl	%eax, %eax
  442997:	75 40 	jne	64 <runtime.(*mheap).freeSpan.func1+0x109>
  442999:	48 8b 44 24 38 	movq	56(%rsp), %rax
  44299e:	48 89 04 24 	movq	%rax, (%rsp)
  4429a2:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  4429a7:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4429ac:	66 c7 44 24 10 01 01 	movw	$257, 16(%rsp)
  4429b3:	48 c7 44 24 18 00 00 00 00 	movq	$0, 24(%rsp)
  4429bc:	e8 ef 8b fd ff 	callq	-160785 <runtime.(*mheap).freeSpanLocked>
  4429c1:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4429c6:	48 89 04 24 	movq	%rax, (%rsp)
  4429ca:	e8 f1 6c fc ff 	callq	-234255 <runtime.unlock>
  4429cf:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  4429d4:	48 83 c4 48 	addq	$72, %rsp
  4429d8:	c3 	retq
  4429d9:	48 8d 05 40 12 08 00 	leaq	528960(%rip), %rax
  4429e0:	48 89 04 24 	movq	%rax, (%rsp)
  4429e4:	e8 d7 d8 fc ff 	callq	-206633 <runtime.(*gcControllerState).revise>
  4429e9:	eb ae 	jmp	-82 <runtime.(*mheap).freeSpan.func1+0xc9>
  4429eb:	e8 e0 1a 00 00 	callq	6880 <runtime.morestack>
  4429f0:	e9 db fe ff ff 	jmp	-293 <runtime.(*mheap).freeSpan.func1>
  4429f5:	cc 	int3
  4429f6:	cc 	int3
  4429f7:	cc 	int3
  4429f8:	cc 	int3
  4429f9:	cc 	int3
  4429fa:	cc 	int3
  4429fb:	cc 	int3
  4429fc:	cc 	int3
  4429fd:	cc 	int3
  4429fe:	cc 	int3
  4429ff:	cc 	int3

runtime.mProf_Malloc.func1:
  442a00:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  442a09:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  442a0d:	76 2e 	jbe	46 <runtime.mProf_Malloc.func1+0x3d>
  442a0f:	48 83 ec 18 	subq	$24, %rsp
  442a13:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  442a18:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  442a1d:	48 8b 42 08 	movq	8(%rdx), %rax
  442a21:	48 8b 4a 10 	movq	16(%rdx), %rcx
  442a25:	48 89 04 24 	movq	%rax, (%rsp)
  442a29:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  442a2e:	e8 ed 9c fd ff 	callq	-156435 <runtime.setprofilebucket>
  442a33:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  442a38:	48 83 c4 18 	addq	$24, %rsp
  442a3c:	c3 	retq
  442a3d:	e8 8e 1a 00 00 	callq	6798 <runtime.morestack>
  442a42:	eb bc 	jmp	-68 <runtime.mProf_Malloc.func1>
  442a44:	cc 	int3
  442a45:	cc 	int3
  442a46:	cc 	int3
  442a47:	cc 	int3
  442a48:	cc 	int3
  442a49:	cc 	int3
  442a4a:	cc 	int3
  442a4b:	cc 	int3
  442a4c:	cc 	int3
  442a4d:	cc 	int3
  442a4e:	cc 	int3
  442a4f:	cc 	int3

runtime.tracealloc.func1:
  442a50:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  442a59:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  442a5d:	76 40 	jbe	64 <runtime.tracealloc.func1+0x4f>
  442a5f:	48 83 ec 28 	subq	$40, %rsp
  442a63:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  442a68:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  442a6d:	48 8b 42 08 	movq	8(%rdx), %rax
  442a71:	48 8b 4a 10 	movq	16(%rdx), %rcx
  442a75:	48 8b 52 18 	movq	24(%rdx), %rdx
  442a79:	48 89 04 24 	movq	%rax, (%rsp)
  442a7d:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  442a82:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  442a8b:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  442a90:	e8 2b ab ff ff 	callq	-21717 <runtime.traceback>
  442a95:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  442a9a:	48 83 c4 28 	addq	$40, %rsp
  442a9e:	c3 	retq
  442a9f:	e8 2c 1a 00 00 	callq	6700 <runtime.morestack>
  442aa4:	eb aa 	jmp	-86 <runtime.tracealloc.func1>
  442aa6:	cc 	int3
  442aa7:	cc 	int3
  442aa8:	cc 	int3
  442aa9:	cc 	int3
  442aaa:	cc 	int3
  442aab:	cc 	int3
  442aac:	cc 	int3
  442aad:	cc 	int3
  442aae:	cc 	int3
  442aaf:	cc 	int3

runtime.tracefree.func1:
  442ab0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  442ab9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  442abd:	76 40 	jbe	64 <runtime.tracefree.func1+0x4f>
  442abf:	48 83 ec 28 	subq	$40, %rsp
  442ac3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  442ac8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  442acd:	48 8b 42 08 	movq	8(%rdx), %rax
  442ad1:	48 8b 4a 10 	movq	16(%rdx), %rcx
  442ad5:	48 8b 52 18 	movq	24(%rdx), %rdx
  442ad9:	48 89 04 24 	movq	%rax, (%rsp)
  442add:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  442ae2:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  442aeb:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  442af0:	e8 cb aa ff ff 	callq	-21813 <runtime.traceback>
  442af5:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  442afa:	48 83 c4 28 	addq	$40, %rsp
  442afe:	c3 	retq
  442aff:	e8 cc 19 00 00 	callq	6604 <runtime.morestack>
  442b04:	eb aa 	jmp	-86 <runtime.tracefree.func1>
  442b06:	cc 	int3
  442b07:	cc 	int3
  442b08:	cc 	int3
  442b09:	cc 	int3
  442b0a:	cc 	int3
  442b0b:	cc 	int3
  442b0c:	cc 	int3
  442b0d:	cc 	int3
  442b0e:	cc 	int3
  442b0f:	cc 	int3

runtime.wbBufFlush.func1:
  442b10:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  442b19:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  442b1d:	76 35 	jbe	53 <runtime.wbBufFlush.func1+0x44>
  442b1f:	48 83 ec 10 	subq	$16, %rsp
  442b23:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  442b28:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  442b2d:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  442b36:	48 8b 40 30 	movq	48(%rax), %rax
  442b3a:	48 8b 80 d0 00 00 00 	movq	208(%rax), %rax
  442b41:	48 89 04 24 	movq	%rax, (%rsp)
  442b45:	e8 86 ba fd ff 	callq	-148858 <runtime.wbBufFlush1>
  442b4a:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  442b4f:	48 83 c4 10 	addq	$16, %rsp
  442b53:	c3 	retq
  442b54:	e8 17 1a 00 00 	callq	6679 <runtime.morestack_noctxt>
  442b59:	eb b5 	jmp	-75 <runtime.wbBufFlush.func1>
  442b5b:	cc 	int3
  442b5c:	cc 	int3
  442b5d:	cc 	int3
  442b5e:	cc 	int3
  442b5f:	cc 	int3

runtime.futexwakeup.func1:
  442b60:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  442b69:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  442b6d:	0f 86 87 00 00 00 	jbe	135 <runtime.futexwakeup.func1+0x9a>
  442b73:	48 83 ec 28 	subq	$40, %rsp
  442b77:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  442b7c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  442b81:	48 8b 42 08 	movq	8(%rdx), %rax
  442b85:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  442b8a:	48 63 4a 10 	movslq	16(%rdx), %rcx
  442b8e:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  442b93:	e8 68 ef fd ff 	callq	-135320 <runtime.printlock>
  442b98:	48 8d 05 9c 80 02 00 	leaq	163996(%rip), %rax
  442b9f:	48 89 04 24 	movq	%rax, (%rsp)
  442ba3:	48 c7 44 24 08 11 00 00 00 	movq	$17, 8(%rsp)
  442bac:	e8 8f f8 fd ff 	callq	-132977 <runtime.printstring>
  442bb1:	48 8b 44 24 18 	movq	24(%rsp), %rax
  442bb6:	48 89 04 24 	movq	%rax, (%rsp)
  442bba:	e8 41 f8 fd ff 	callq	-133055 <runtime.printpointer>
  442bbf:	48 8d 05 d8 76 02 00 	leaq	161496(%rip), %rax
  442bc6:	48 89 04 24 	movq	%rax, (%rsp)
  442bca:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  442bd3:	e8 68 f8 fd ff 	callq	-133016 <runtime.printstring>
  442bd8:	48 8b 44 24 10 	movq	16(%rsp), %rax
  442bdd:	48 89 04 24 	movq	%rax, (%rsp)
  442be1:	e8 9a f6 fd ff 	callq	-133478 <runtime.printint>
  442be6:	e8 a5 f1 fd ff 	callq	-134747 <runtime.printnl>
  442beb:	e8 90 ef fd ff 	callq	-135280 <runtime.printunlock>
  442bf0:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  442bf5:	48 83 c4 28 	addq	$40, %rsp
  442bf9:	c3 	retq
  442bfa:	e8 d1 18 00 00 	callq	6353 <runtime.morestack>
  442bff:	e9 5c ff ff ff 	jmp	-164 <runtime.futexwakeup.func1>
  442c04:	cc 	int3
  442c05:	cc 	int3
  442c06:	cc 	int3
  442c07:	cc 	int3
  442c08:	cc 	int3
  442c09:	cc 	int3
  442c0a:	cc 	int3
  442c0b:	cc 	int3
  442c0c:	cc 	int3
  442c0d:	cc 	int3
  442c0e:	cc 	int3
  442c0f:	cc 	int3

runtime.newdefer.func1:
  442c10:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  442c19:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  442c1d:	0f 86 ba 01 00 00 	jbe	442 <runtime.newdefer.func1+0x1cd>
  442c23:	48 83 ec 70 	subq	$112, %rsp
  442c27:	48 89 6c 24 68 	movq	%rbp, 104(%rsp)
  442c2c:	48 8d 6c 24 68 	leaq	104(%rsp), %rbp
  442c31:	48 8b 42 08 	movq	8(%rdx), %rax
  442c35:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  442c3a:	48 8b 4a 10 	movq	16(%rdx), %rcx
  442c3e:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  442c43:	48 8d 15 76 4d 06 00 	leaq	413046(%rip), %rdx
  442c4a:	48 89 14 24 	movq	%rdx, (%rsp)
  442c4e:	e8 cd 68 fc ff 	callq	-235315 <runtime.lock>
  442c53:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  442c58:	84 01 	testb	%al, (%rcx)
  442c5a:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  442c5f:	48 83 fa 05 	cmpq	$5, %rdx
  442c63:	0f 83 6d 01 00 00 	jae	365 <runtime.newdefer.func1+0x1c6>
  442c69:	48 8d 1c 52 	leaq	(%rdx,%rdx,2), %rbx
  442c6d:	48 8b 74 d9 68 	movq	104(%rcx,%rbx,8), %rsi
  442c72:	4c 8b 44 d9 60 	movq	96(%rcx,%rbx,8), %r8
  442c77:	4c 8d 4c d9 58 	leaq	88(%rcx,%rbx,8), %r9
  442c7c:	48 d1 ee 	shrq	%rsi
  442c7f:	49 39 f0 	cmpq	%rsi, %r8
  442c82:	0f 8d 34 01 00 00 	jge	308 <runtime.newdefer.func1+0x1ac>
  442c88:	48 8d 35 91 4c 06 00 	leaq	412817(%rip), %rsi
  442c8f:	48 8b 84 d6 a8 00 00 00 	movq	168(%rsi,%rdx,8), %rax
  442c97:	48 8d bc d6 a8 00 00 00 	leaq	168(%rsi,%rdx,8), %rdi
  442c9f:	48 85 c0 	testq	%rax, %rax
  442ca2:	0f 84 14 01 00 00 	je	276 <runtime.newdefer.func1+0x1ac>
  442ca8:	44 8b 05 61 0d 08 00 	movl	527713(%rip), %r8d
  442caf:	4c 8b 50 28 	movq	40(%rax), %r10
  442cb3:	4c 8d 58 28 	leaq	40(%rax), %r11
  442cb7:	45 85 c0 	testl	%r8d, %r8d
  442cba:	0f 85 df 00 00 00 	jne	223 <runtime.newdefer.func1+0x18f>
  442cc0:	4c 89 94 d6 a8 00 00 00 	movq	%r10, 168(%rsi,%rdx,8)
  442cc8:	48 c7 40 28 00 00 00 00 	movq	$0, 40(%rax)
  442cd0:	4c 8b 44 d9 60 	movq	96(%rcx,%rbx,8), %r8
  442cd5:	4c 8b 54 d9 58 	movq	88(%rcx,%rbx,8), %r10
  442cda:	4c 8b 5c d9 68 	movq	104(%rcx,%rbx,8), %r11
  442cdf:	4d 8d 60 01 	leaq	1(%r8), %r12
  442ce3:	4d 39 dc 	cmpq	%r11, %r12
  442ce6:	7f 2a 	jg	42 <runtime.newdefer.func1+0x102>
  442ce8:	4d 8d 48 01 	leaq	1(%r8), %r9
  442cec:	4c 89 4c d9 60 	movq	%r9, 96(%rcx,%rbx,8)
  442cf1:	8b 1d 19 0d 08 00 	movl	527641(%rip), %ebx
  442cf7:	4b 8d 3c c2 	leaq	(%r10,%r8,8), %rdi
  442cfb:	85 db 	testl	%ebx, %ebx
  442cfd:	75 09 	jne	9 <runtime.newdefer.func1+0xf8>
  442cff:	4b 89 04 c2 	movq	%rax, (%r10,%r8,8)
  442d03:	e9 4b ff ff ff 	jmp	-181 <runtime.newdefer.func1+0x43>
  442d08:	e8 93 3b 00 00 	callq	15251 <runtime.gcWriteBarrier>
  442d0d:	e9 41 ff ff ff 	jmp	-191 <runtime.newdefer.func1+0x43>
  442d12:	4c 89 4c 24 60 	movq	%r9, 96(%rsp)
  442d17:	48 89 44 24 58 	movq	%rax, 88(%rsp)
  442d1c:	48 89 5c 24 48 	movq	%rbx, 72(%rsp)
  442d21:	48 8d 05 58 0e 01 00 	leaq	69208(%rip), %rax
  442d28:	48 89 04 24 	movq	%rax, (%rsp)
  442d2c:	4c 89 54 24 08 	movq	%r10, 8(%rsp)
  442d31:	4c 89 44 24 10 	movq	%r8, 16(%rsp)
  442d36:	4c 89 5c 24 18 	movq	%r11, 24(%rsp)
  442d3b:	4c 89 64 24 20 	movq	%r12, 32(%rsp)
  442d40:	e8 1b 0b ff ff 	callq	-62693 <runtime.growslice>
  442d45:	48 8b 44 24 28 	movq	40(%rsp), %rax
  442d4a:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  442d4f:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  442d54:	48 8b 5c 24 48 	movq	72(%rsp), %rbx
  442d59:	48 8b 74 24 50 	movq	80(%rsp), %rsi
  442d5e:	48 89 54 de 68 	movq	%rdx, 104(%rsi,%rbx,8)
  442d63:	8b 15 a7 0c 08 00 	movl	527527(%rip), %edx
  442d69:	85 d2 	testl	%edx, %edx
  442d6b:	75 26 	jne	38 <runtime.newdefer.func1+0x183>
  442d6d:	48 89 44 de 58 	movq	%rax, 88(%rsi,%rbx,8)
  442d72:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  442d77:	48 8d 35 a2 4b 06 00 	leaq	412578(%rip), %rsi
  442d7e:	49 89 c8 	movq	%rcx, %r8
  442d81:	49 89 c2 	movq	%rax, %r10
  442d84:	48 8b 44 24 58 	movq	88(%rsp), %rax
  442d89:	48 8b 4c 24 50 	movq	80(%rsp), %rcx
  442d8e:	e9 55 ff ff ff 	jmp	-171 <runtime.newdefer.func1+0xd8>
  442d93:	48 8b 7c 24 60 	movq	96(%rsp), %rdi
  442d98:	e8 03 3b 00 00 	callq	15107 <runtime.gcWriteBarrier>
  442d9d:	eb d3 	jmp	-45 <runtime.newdefer.func1+0x162>
  442d9f:	49 89 c0 	movq	%rax, %r8
  442da2:	4c 89 d0 	movq	%r10, %rax
  442da5:	e8 f6 3a 00 00 	callq	15094 <runtime.gcWriteBarrier>
  442daa:	4c 89 df 	movq	%r11, %rdi
  442dad:	31 c0 	xorl	%eax, %eax
  442daf:	e8 ec 3a 00 00 	callq	15084 <runtime.gcWriteBarrier>
  442db4:	4c 89 c0 	movq	%r8, %rax
  442db7:	e9 14 ff ff ff 	jmp	-236 <runtime.newdefer.func1+0xc0>
  442dbc:	48 8d 05 fd 4b 06 00 	leaq	412669(%rip), %rax
  442dc3:	48 89 04 24 	movq	%rax, (%rsp)
  442dc7:	e8 f4 68 fc ff 	callq	-235276 <runtime.unlock>
  442dcc:	48 8b 6c 24 68 	movq	104(%rsp), %rbp
  442dd1:	48 83 c4 70 	addq	$112, %rsp
  442dd5:	c3 	retq
  442dd6:	e8 65 cc fd ff 	callq	-144283 <runtime.panicindex>
  442ddb:	0f 0b 	ud2
  442ddd:	e8 ee 16 00 00 	callq	5870 <runtime.morestack>
  442de2:	e9 29 fe ff ff 	jmp	-471 <runtime.newdefer.func1>
  442de7:	cc 	int3
  442de8:	cc 	int3
  442de9:	cc 	int3
  442dea:	cc 	int3
  442deb:	cc 	int3
  442dec:	cc 	int3
  442ded:	cc 	int3
  442dee:	cc 	int3
  442def:	cc 	int3

runtime.newdefer.func2:
  442df0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  442df9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  442dfd:	0f 86 2a 01 00 00 	jbe	298 <runtime.newdefer.func2+0x13d>
  442e03:	48 83 ec 30 	subq	$48, %rsp
  442e07:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  442e0c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  442e11:	48 8b 42 10 	movq	16(%rdx), %rax
  442e15:	48 63 4a 08 	movslq	8(%rdx), %rcx
  442e19:	48 85 c9 	testq	%rcx, %rcx
  442e1c:	0f 87 f4 00 00 00 	ja	244 <runtime.newdefer.func2+0x126>
  442e22:	b9 30 00 00 00 	movl	$48, %ecx
  442e27:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  442e2c:	48 81 f9 00 80 00 00 	cmpq	$32768, %rcx
  442e33:	0f 83 ba 00 00 00 	jae	186 <runtime.newdefer.func2+0x103>
  442e39:	48 81 f9 f8 03 00 00 	cmpq	$1016, %rcx
  442e40:	77 7f 	ja	127 <runtime.newdefer.func2+0xd1>
  442e42:	48 83 c1 07 	addq	$7, %rcx
  442e46:	48 c1 e9 03 	shrq	$3, %rcx
  442e4a:	48 81 f9 81 00 00 00 	cmpq	$129, %rcx
  442e51:	0f 83 cf 00 00 00 	jae	207 <runtime.newdefer.func2+0x136>
  442e57:	48 8d 15 c2 22 06 00 	leaq	402114(%rip), %rdx
  442e5e:	0f b6 0c 11 	movzbl	(%rcx,%rdx), %ecx
  442e62:	48 83 f9 43 	cmpq	$67, %rcx
  442e66:	0f 83 ba 00 00 00 	jae	186 <runtime.newdefer.func2+0x136>
  442e6c:	48 8d 15 4d 23 06 00 	leaq	402253(%rip), %rdx
  442e73:	0f b7 0c 4a 	movzwl	(%rdx,%rcx,2), %ecx
  442e77:	48 89 0c 24 	movq	%rcx, (%rsp)
  442e7b:	48 8b 05 c6 47 06 00 	movq	411590(%rip), %rax
  442e82:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  442e87:	c6 44 24 10 01 	movb	$1, 16(%rsp)
  442e8c:	e8 7f 77 fc ff 	callq	-231553 <runtime.mallocgc>
  442e91:	8b 05 79 0b 08 00 	movl	527225(%rip), %eax
  442e97:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  442e9c:	85 c0 	testl	%eax, %eax
  442e9e:	75 12 	jne	18 <runtime.newdefer.func2+0xc2>
  442ea0:	48 8b 44 24 20 	movq	32(%rsp), %rax
  442ea5:	48 89 08 	movq	%rcx, (%rax)
  442ea8:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  442ead:	48 83 c4 30 	addq	$48, %rsp
  442eb1:	c3 	retq
  442eb2:	48 8b 7c 24 20 	movq	32(%rsp), %rdi
  442eb7:	48 89 c8 	movq	%rcx, %rax
  442eba:	e8 e1 39 00 00 	callq	14817 <runtime.gcWriteBarrier>
  442ebf:	eb e7 	jmp	-25 <runtime.newdefer.func2+0xb8>
  442ec1:	48 81 c1 7f fc ff ff 	addq	$-897, %rcx
  442ec8:	48 c1 e9 07 	shrq	$7, %rcx
  442ecc:	48 81 f9 f9 00 00 00 	cmpq	$249, %rcx
  442ed3:	73 4a 	jae	74 <runtime.newdefer.func2+0x12f>
  442ed5:	48 8d 15 84 23 06 00 	leaq	402308(%rip), %rdx
  442edc:	0f b6 0c 0a 	movzbl	(%rdx,%rcx), %ecx
  442ee0:	48 83 f9 43 	cmpq	$67, %rcx
  442ee4:	73 39 	jae	57 <runtime.newdefer.func2+0x12f>
  442ee6:	48 8d 15 d3 22 06 00 	leaq	402131(%rip), %rdx
  442eed:	0f b7 0c 4a 	movzwl	(%rdx,%rcx,2), %ecx
  442ef1:	eb 84 	jmp	-124 <runtime.newdefer.func2+0x87>
  442ef3:	48 8d 91 00 20 00 00 	leaq	8192(%rcx), %rdx
  442efa:	48 39 ca 	cmpq	%rcx, %rdx
  442efd:	0f 82 74 ff ff ff 	jb	-140 <runtime.newdefer.func2+0x87>
  442f03:	48 81 c1 ff 1f 00 00 	addq	$8191, %rcx
  442f0a:	48 81 e1 00 e0 ff ff 	andq	$-8192, %rcx
  442f11:	e9 61 ff ff ff 	jmp	-159 <runtime.newdefer.func2+0x87>
  442f16:	48 83 c1 30 	addq	$48, %rcx
  442f1a:	e9 08 ff ff ff 	jmp	-248 <runtime.newdefer.func2+0x37>
  442f1f:	e8 1c cb fd ff 	callq	-144612 <runtime.panicindex>
  442f24:	0f 0b 	ud2
  442f26:	e8 15 cb fd ff 	callq	-144619 <runtime.panicindex>
  442f2b:	0f 0b 	ud2
  442f2d:	e8 9e 15 00 00 	callq	5534 <runtime.morestack>
  442f32:	e9 b9 fe ff ff 	jmp	-327 <runtime.newdefer.func2>
  442f37:	cc 	int3
  442f38:	cc 	int3
  442f39:	cc 	int3
  442f3a:	cc 	int3
  442f3b:	cc 	int3
  442f3c:	cc 	int3
  442f3d:	cc 	int3
  442f3e:	cc 	int3
  442f3f:	cc 	int3

runtime.freedefer.func1:
  442f40:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  442f49:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  442f4d:	0f 86 73 01 00 00 	jbe	371 <runtime.freedefer.func1+0x186>
  442f53:	48 83 ec 28 	subq	$40, %rsp
  442f57:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  442f5c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  442f61:	48 8b 4a 08 	movq	8(%rdx), %rcx
  442f65:	48 8b 52 10 	movq	16(%rdx), %rdx
  442f69:	31 c0 	xorl	%eax, %eax
  442f6b:	48 89 c3 	movq	%rax, %rbx
  442f6e:	eb 03 	jmp	3 <runtime.freedefer.func1+0x33>
  442f70:	4c 89 d8 	movq	%r11, %rax
  442f73:	84 01 	testb	%al, (%rcx)
  442f75:	48 83 fa 05 	cmpq	$5, %rdx
  442f79:	0f 83 40 01 00 00 	jae	320 <runtime.freedefer.func1+0x17f>
  442f7f:	48 8d 34 52 	leaq	(%rdx,%rdx,2), %rsi
  442f83:	4c 8b 44 f1 68 	movq	104(%rcx,%rsi,8), %r8
  442f88:	4c 8b 4c f1 60 	movq	96(%rcx,%rsi,8), %r9
  442f8d:	4c 8b 54 f1 58 	movq	88(%rcx,%rsi,8), %r10
  442f92:	49 d1 e8 	shrq	%r8
  442f95:	4d 39 c1 	cmpq	%r8, %r9
  442f98:	0f 8e 81 00 00 00 	jle	129 <runtime.freedefer.func1+0xdf>
  442f9e:	4d 8d 41 ff 	leaq	-1(%r9), %r8
  442fa2:	4d 39 c8 	cmpq	%r9, %r8
  442fa5:	0f 83 0d 01 00 00 	jae	269 <runtime.freedefer.func1+0x178>
  442fab:	4f 8b 5c ca f8 	movq	-8(%r10,%r9,8), %r11
  442fb0:	4b 8d 7c ca f8 	leaq	-8(%r10,%r9,8), %rdi
  442fb5:	44 8b 25 54 0a 08 00 	movl	526932(%rip), %r12d
  442fbc:	45 85 e4 	testl	%r12d, %r12d
  442fbf:	75 4f 	jne	79 <runtime.freedefer.func1+0xd0>
  442fc1:	4b c7 44 ca f8 00 00 00 00 	movq	$0, -8(%r10,%r9,8)
  442fca:	4c 8b 4c f1 68 	movq	104(%rcx,%rsi,8), %r9
  442fcf:	4d 39 c8 	cmpq	%r9, %r8
  442fd2:	0f 87 d9 00 00 00 	ja	217 <runtime.freedefer.func1+0x171>
  442fd8:	4c 89 44 f1 60 	movq	%r8, 96(%rcx,%rsi,8)
  442fdd:	48 85 db 	testq	%rbx, %rbx
  442fe0:	74 26 	je	38 <runtime.freedefer.func1+0xc8>
  442fe2:	84 00 	testb	%al, (%rax)
  442fe4:	8b 35 26 0a 08 00 	movl	526886(%rip), %esi
  442fea:	48 8d 78 28 	leaq	40(%rax), %rdi
  442fee:	85 f6 	testl	%esi, %esi
  442ff0:	75 09 	jne	9 <runtime.freedefer.func1+0xbb>
  442ff2:	4c 89 58 28 	movq	%r11, 40(%rax)
  442ff6:	e9 75 ff ff ff 	jmp	-139 <runtime.freedefer.func1+0x30>
  442ffb:	4c 89 d8 	movq	%r11, %rax
  442ffe:	e8 9d 38 00 00 	callq	14493 <runtime.gcWriteBarrier>
  443003:	e9 68 ff ff ff 	jmp	-152 <runtime.freedefer.func1+0x30>
  443008:	4c 89 db 	movq	%r11, %rbx
  44300b:	e9 60 ff ff ff 	jmp	-160 <runtime.freedefer.func1+0x30>
  443010:	49 89 c1 	movq	%rax, %r9
  443013:	31 c0 	xorl	%eax, %eax
  443015:	e8 86 38 00 00 	callq	14470 <runtime.gcWriteBarrier>
  44301a:	4c 89 c8 	movq	%r9, %rax
  44301d:	eb ab 	jmp	-85 <runtime.freedefer.func1+0x8a>
  44301f:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  443024:	48 89 5c 24 18 	movq	%rbx, 24(%rsp)
  443029:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  44302e:	48 8d 05 8b 49 06 00 	leaq	412043(%rip), %rax
  443035:	48 89 04 24 	movq	%rax, (%rsp)
  443039:	e8 e2 64 fc ff 	callq	-236318 <runtime.lock>
  44303e:	48 8b 44 24 10 	movq	16(%rsp), %rax
  443043:	84 00 	testb	%al, (%rax)
  443045:	8b 0d c5 09 08 00 	movl	526789(%rip), %ecx
  44304b:	48 8d 78 28 	leaq	40(%rax), %rdi
  44304f:	48 8b 54 24 08 	movq	8(%rsp), %rdx
  443054:	48 8d 1d c5 48 06 00 	leaq	411845(%rip), %rbx
  44305b:	48 8b b4 d3 a8 00 00 00 	movq	168(%rbx,%rdx,8), %rsi
  443063:	4c 8d 84 d3 a8 00 00 00 	leaq	168(%rbx,%rdx,8), %r8
  44306b:	85 c9 	testl	%ecx, %ecx
  44306d:	75 2b 	jne	43 <runtime.freedefer.func1+0x15a>
  44306f:	48 89 70 28 	movq	%rsi, 40(%rax)
  443073:	48 8b 44 24 18 	movq	24(%rsp), %rax
  443078:	48 89 84 d3 a8 00 00 00 	movq	%rax, 168(%rbx,%rdx,8)
  443080:	48 8d 05 39 49 06 00 	leaq	411961(%rip), %rax
  443087:	48 89 04 24 	movq	%rax, (%rsp)
  44308b:	e8 30 66 fc ff 	callq	-235984 <runtime.unlock>
  443090:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  443095:	48 83 c4 28 	addq	$40, %rsp
  443099:	c3 	retq
  44309a:	48 89 f0 	movq	%rsi, %rax
  44309d:	e8 fe 37 00 00 	callq	14334 <runtime.gcWriteBarrier>
  4430a2:	4c 89 c7 	movq	%r8, %rdi
  4430a5:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4430aa:	e8 f1 37 00 00 	callq	14321 <runtime.gcWriteBarrier>
  4430af:	eb cf 	jmp	-49 <runtime.freedefer.func1+0x140>
  4430b1:	e8 fa c9 fd ff 	callq	-144902 <runtime.panicslice>
  4430b6:	0f 0b 	ud2
  4430b8:	e8 83 c9 fd ff 	callq	-145021 <runtime.panicindex>
  4430bd:	0f 0b 	ud2
  4430bf:	e8 7c c9 fd ff 	callq	-145028 <runtime.panicindex>
  4430c4:	0f 0b 	ud2
  4430c6:	e8 05 14 00 00 	callq	5125 <runtime.morestack>
  4430cb:	e9 70 fe ff ff 	jmp	-400 <runtime.freedefer.func1>

runtime.preprintpanics.func1:
  4430d0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4430d9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4430dd:	76 4b 	jbe	75 <runtime.preprintpanics.func1+0x5a>
  4430df:	48 83 ec 20 	subq	$32, %rsp
  4430e3:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  4430e8:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  4430ed:	48 8d 44 24 28 	leaq	40(%rsp), %rax
  4430f2:	48 89 04 24 	movq	%rax, (%rsp)
  4430f6:	e8 f5 df fd ff 	callq	-139275 <runtime.gorecover>
  4430fb:	48 8b 44 24 08 	movq	8(%rsp), %rax
  443100:	48 85 c0 	testq	%rax, %rax
  443103:	75 0a 	jne	10 <runtime.preprintpanics.func1+0x3f>
  443105:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  44310a:	48 83 c4 20 	addq	$32, %rsp
  44310e:	c3 	retq
  44310f:	48 8d 05 0d 97 02 00 	leaq	169741(%rip), %rax
  443116:	48 89 04 24 	movq	%rax, (%rsp)
  44311a:	48 c7 44 24 08 20 00 00 00 	movq	$32, 8(%rsp)
  443123:	e8 a8 e0 fd ff 	callq	-139096 <runtime.throw>
  443128:	0f 0b 	ud2
  44312a:	e8 41 14 00 00 	callq	5185 <runtime.morestack_noctxt>
  44312f:	eb 9f 	jmp	-97 <runtime.preprintpanics.func1>
  443131:	cc 	int3
  443132:	cc 	int3
  443133:	cc 	int3
  443134:	cc 	int3
  443135:	cc 	int3
  443136:	cc 	int3
  443137:	cc 	int3
  443138:	cc 	int3
  443139:	cc 	int3
  44313a:	cc 	int3
  44313b:	cc 	int3
  44313c:	cc 	int3
  44313d:	cc 	int3
  44313e:	cc 	int3
  44313f:	cc 	int3

runtime.dopanic.func1:
  443140:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  443149:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44314d:	76 37 	jbe	55 <runtime.dopanic.func1+0x46>
  44314f:	48 83 ec 20 	subq	$32, %rsp
  443153:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  443158:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  44315d:	48 8b 42 08 	movq	8(%rdx), %rax
  443161:	48 8b 4a 10 	movq	16(%rdx), %rcx
  443165:	48 8b 52 18 	movq	24(%rdx), %rdx
  443169:	48 89 04 24 	movq	%rax, (%rsp)
  44316d:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  443172:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  443177:	e8 14 e4 fd ff 	callq	-138220 <runtime.dopanic_m>
  44317c:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  443181:	48 83 c4 20 	addq	$32, %rsp
  443185:	c3 	retq
  443186:	e8 45 13 00 00 	callq	4933 <runtime.morestack>
  44318b:	eb b3 	jmp	-77 <runtime.dopanic.func1>
  44318d:	cc 	int3
  44318e:	cc 	int3
  44318f:	cc 	int3

runtime.hexdumpWords.func1:
  443190:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  443199:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44319d:	0f 86 94 00 00 00 	jbe	148 <runtime.hexdumpWords.func1+0xa7>
  4431a3:	48 83 ec 30 	subq	$48, %rsp
  4431a7:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  4431ac:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  4431b1:	0f 57 c0 	xorps	%xmm0, %xmm0
  4431b4:	0f 11 44 24 18 	movups	%xmm0, 24(%rsp)
  4431b9:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4431be:	b9 0f 00 00 00 	movl	$15, %ecx
  4431c3:	eb 0a 	jmp	10 <runtime.hexdumpWords.func1+0x3f>
  4431c5:	48 ff c9 	decq	%rcx
  4431c8:	48 c1 ea 04 	shrq	$4, %rdx
  4431cc:	48 89 d0 	movq	%rdx, %rax
  4431cf:	48 85 c9 	testq	%rcx, %rcx
  4431d2:	7c 2b 	jl	43 <runtime.hexdumpWords.func1+0x6f>
  4431d4:	48 89 c2 	movq	%rax, %rdx
  4431d7:	48 83 e0 0f 	andq	$15, %rax
  4431db:	48 83 f8 0a 	cmpq	$10, %rax
  4431df:	73 0f 	jae	15 <runtime.hexdumpWords.func1+0x60>
  4431e1:	48 83 f9 10 	cmpq	$16, %rcx
  4431e5:	73 49 	jae	73 <runtime.hexdumpWords.func1+0xa0>
  4431e7:	83 c0 30 	addl	$48, %eax
  4431ea:	88 44 0c 18 	movb	%al, 24(%rsp,%rcx)
  4431ee:	eb d5 	jmp	-43 <runtime.hexdumpWords.func1+0x35>
  4431f0:	48 83 f9 10 	cmpq	$16, %rcx
  4431f4:	73 33 	jae	51 <runtime.hexdumpWords.func1+0x99>
  4431f6:	83 c0 57 	addl	$87, %eax
  4431f9:	88 44 0c 18 	movb	%al, 24(%rsp,%rcx)
  4431fd:	eb c6 	jmp	-58 <runtime.hexdumpWords.func1+0x35>
  4431ff:	48 8d 44 24 18 	leaq	24(%rsp), %rax
  443204:	48 89 04 24 	movq	%rax, (%rsp)
  443208:	48 c7 44 24 08 10 00 00 00 	movq	$16, 8(%rsp)
  443211:	48 c7 44 24 10 10 00 00 00 	movq	$16, 16(%rsp)
  44321a:	e8 d1 e9 fd ff 	callq	-136751 <runtime.gwrite>
  44321f:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  443224:	48 83 c4 30 	addq	$48, %rsp
  443228:	c3 	retq
  443229:	e8 12 c8 fd ff 	callq	-145390 <runtime.panicindex>
  44322e:	0f 0b 	ud2
  443230:	e8 0b c8 fd ff 	callq	-145397 <runtime.panicindex>
  443235:	0f 0b 	ud2
  443237:	e8 34 13 00 00 	callq	4916 <runtime.morestack_noctxt>
  44323c:	e9 4f ff ff ff 	jmp	-177 <runtime.hexdumpWords.func1>
  443241:	cc 	int3
  443242:	cc 	int3
  443243:	cc 	int3
  443244:	cc 	int3
  443245:	cc 	int3
  443246:	cc 	int3
  443247:	cc 	int3
  443248:	cc 	int3
  443249:	cc 	int3
  44324a:	cc 	int3
  44324b:	cc 	int3
  44324c:	cc 	int3
  44324d:	cc 	int3
  44324e:	cc 	int3
  44324f:	cc 	int3

runtime.main.func1:
  443250:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  443259:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44325d:	76 31 	jbe	49 <runtime.main.func1+0x40>
  44325f:	48 83 ec 18 	subq	$24, %rsp
  443263:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  443268:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  44326d:	48 8d 05 ac af 02 00 	leaq	176044(%rip), %rax
  443274:	48 89 04 24 	movq	%rax, (%rsp)
  443278:	48 c7 44 24 08 00 00 00 00 	movq	$0, 8(%rsp)
  443281:	e8 ba 35 fe ff 	callq	-117318 <runtime.newm>
  443286:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  44328b:	48 83 c4 18 	addq	$24, %rsp
  44328f:	c3 	retq
  443290:	e8 db 12 00 00 	callq	4827 <runtime.morestack_noctxt>
  443295:	eb b9 	jmp	-71 <runtime.main.func1>
  443297:	cc 	int3
  443298:	cc 	int3
  443299:	cc 	int3
  44329a:	cc 	int3
  44329b:	cc 	int3
  44329c:	cc 	int3
  44329d:	cc 	int3
  44329e:	cc 	int3
  44329f:	cc 	int3

runtime.main.func2:
  4432a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4432a9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4432ad:	76 28 	jbe	40 <runtime.main.func2+0x37>
  4432af:	48 83 ec 08 	subq	$8, %rsp
  4432b3:	48 89 2c 24 	movq	%rbp, (%rsp)
  4432b7:	48 8d 2c 24 	leaq	(%rsp), %rbp
  4432bb:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4432c0:	0f b6 00 	movzbl	(%rax), %eax
  4432c3:	84 c0 	testb	%al, %al
  4432c5:	75 09 	jne	9 <runtime.main.func2+0x30>
  4432c7:	48 8b 2c 24 	movq	(%rsp), %rbp
  4432cb:	48 83 c4 08 	addq	$8, %rsp
  4432cf:	c3 	retq
  4432d0:	e8 cb 7a fe ff 	callq	-99637 <runtime.unlockOSThread>
  4432d5:	eb f0 	jmp	-16 <runtime.main.func2+0x27>
  4432d7:	e8 94 12 00 00 	callq	4756 <runtime.morestack_noctxt>
  4432dc:	eb c2 	jmp	-62 <runtime.main.func2>
  4432de:	cc 	int3
  4432df:	cc 	int3

runtime.goready.func1:
  4432e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4432e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4432ed:	76 33 	jbe	51 <runtime.goready.func1+0x42>
  4432ef:	48 83 ec 20 	subq	$32, %rsp
  4432f3:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  4432f8:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  4432fd:	48 8b 42 08 	movq	8(%rdx), %rax
  443301:	48 8b 4a 10 	movq	16(%rdx), %rcx
  443305:	48 89 04 24 	movq	%rax, (%rsp)
  443309:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44330e:	c6 44 24 10 01 	movb	$1, 16(%rsp)
  443313:	e8 38 0c fe ff 	callq	-127944 <runtime.ready>
  443318:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  44331d:	48 83 c4 20 	addq	$32, %rsp
  443321:	c3 	retq
  443322:	e8 a9 11 00 00 	callq	4521 <runtime.morestack>
  443327:	eb b7 	jmp	-73 <runtime.goready.func1>
  443329:	cc 	int3
  44332a:	cc 	int3
  44332b:	cc 	int3
  44332c:	cc 	int3
  44332d:	cc 	int3
  44332e:	cc 	int3
  44332f:	cc 	int3

runtime.casgstatus.func1:
  443330:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  443339:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44333d:	0f 86 96 00 00 00 	jbe	150 <runtime.casgstatus.func1+0xa9>
  443343:	48 83 ec 28 	subq	$40, %rsp
  443347:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44334c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  443351:	8b 42 08 	movl	8(%rdx), %eax
  443354:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  443359:	8b 4a 0c 	movl	12(%rdx), %ecx
  44335c:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  443361:	e8 9a e7 fd ff 	callq	-137318 <runtime.printlock>
  443366:	48 8d 05 45 8e 02 00 	leaq	167493(%rip), %rax
  44336d:	48 89 04 24 	movq	%rax, (%rsp)
  443371:	48 c7 44 24 08 1c 00 00 00 	movq	$28, 8(%rsp)
  44337a:	e8 c1 f0 fd ff 	callq	-134975 <runtime.printstring>
  44337f:	48 8b 44 24 18 	movq	24(%rsp), %rax
  443384:	48 89 04 24 	movq	%rax, (%rsp)
  443388:	e8 63 ef fd ff 	callq	-135325 <runtime.printhex>
  44338d:	48 8d 05 2b 6c 02 00 	leaq	158763(%rip), %rax
  443394:	48 89 04 24 	movq	%rax, (%rsp)
  443398:	48 c7 44 24 08 08 00 00 00 	movq	$8, 8(%rsp)
  4433a1:	e8 9a f0 fd ff 	callq	-135014 <runtime.printstring>
  4433a6:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4433ab:	48 89 04 24 	movq	%rax, (%rsp)
  4433af:	e8 3c ef fd ff 	callq	-135364 <runtime.printhex>
  4433b4:	e8 d7 e9 fd ff 	callq	-136745 <runtime.printnl>
  4433b9:	e8 c2 e7 fd ff 	callq	-137278 <runtime.printunlock>
  4433be:	48 8d 05 89 92 02 00 	leaq	168585(%rip), %rax
  4433c5:	48 89 04 24 	movq	%rax, (%rsp)
  4433c9:	48 c7 44 24 08 1f 00 00 00 	movq	$31, 8(%rsp)
  4433d2:	e8 f9 dd fd ff 	callq	-139783 <runtime.throw>
  4433d7:	0f 0b 	ud2
  4433d9:	e8 f2 10 00 00 	callq	4338 <runtime.morestack>
  4433de:	e9 4d ff ff ff 	jmp	-179 <runtime.casgstatus.func1>
  4433e3:	cc 	int3
  4433e4:	cc 	int3
  4433e5:	cc 	int3
  4433e6:	cc 	int3
  4433e7:	cc 	int3
  4433e8:	cc 	int3
  4433e9:	cc 	int3
  4433ea:	cc 	int3
  4433eb:	cc 	int3
  4433ec:	cc 	int3
  4433ed:	cc 	int3
  4433ee:	cc 	int3
  4433ef:	cc 	int3

runtime.casgstatus.func2:
  4433f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4433f9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4433fd:	0f 86 e0 00 00 00 	jbe	224 <runtime.casgstatus.func2+0xf3>
  443403:	48 83 ec 30 	subq	$48, %rsp
  443407:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  44340c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  443411:	48 8b 42 10 	movq	16(%rdx), %rax
  443415:	8b 4a 08 	movl	8(%rdx), %ecx
  443418:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  44341d:	8b 52 0c 	movl	12(%rdx), %edx
  443420:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  443425:	8b 80 90 00 00 00 	movl	144(%rax), %eax
  44342b:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  443430:	e8 cb e6 fd ff 	callq	-137525 <runtime.printlock>
  443435:	48 8d 05 81 7d 02 00 	leaq	163201(%rip), %rax
  44343c:	48 89 04 24 	movq	%rax, (%rsp)
  443440:	48 c7 44 24 08 14 00 00 00 	movq	$20, 8(%rsp)
  443449:	e8 f2 ef fd ff 	callq	-135182 <runtime.printstring>
  44344e:	48 8b 44 24 20 	movq	32(%rsp), %rax
  443453:	48 89 04 24 	movq	%rax, (%rsp)
  443457:	e8 94 ee fd ff 	callq	-135532 <runtime.printhex>
  44345c:	48 8d 05 0b 68 02 00 	leaq	157707(%rip), %rax
  443463:	48 89 04 24 	movq	%rax, (%rsp)
  443467:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  443470:	e8 cb ef fd ff 	callq	-135221 <runtime.printstring>
  443475:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44347a:	48 89 04 24 	movq	%rax, (%rsp)
  44347e:	e8 6d ee fd ff 	callq	-135571 <runtime.printhex>
  443483:	48 8d 05 2f 6f 02 00 	leaq	159535(%rip), %rax
  44348a:	48 89 04 24 	movq	%rax, (%rsp)
  44348e:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  443497:	e8 a4 ef fd ff 	callq	-135260 <runtime.printstring>
  44349c:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4434a1:	48 89 04 24 	movq	%rax, (%rsp)
  4434a5:	e8 46 ee fd ff 	callq	-135610 <runtime.printhex>
  4434aa:	48 8d 05 84 7d 02 00 	leaq	163204(%rip), %rax
  4434b1:	48 89 04 24 	movq	%rax, (%rsp)
  4434b5:	48 c7 44 24 08 15 00 00 00 	movq	$21, 8(%rsp)
  4434be:	e8 7d ef fd ff 	callq	-135299 <runtime.printstring>
  4434c3:	e8 b8 e6 fd ff 	callq	-137544 <runtime.printunlock>
  4434c8:	48 8d 05 6f 6e 02 00 	leaq	159343(%rip), %rax
  4434cf:	48 89 04 24 	movq	%rax, (%rsp)
  4434d3:	48 c7 44 24 08 0a 00 00 00 	movq	$10, 8(%rsp)
  4434dc:	e8 ef dc fd ff 	callq	-140049 <runtime.throw>
  4434e1:	0f 0b 	ud2
  4434e3:	e8 e8 0f 00 00 	callq	4072 <runtime.morestack>
  4434e8:	e9 03 ff ff ff 	jmp	-253 <runtime.casgstatus.func2>
  4434ed:	cc 	int3
  4434ee:	cc 	int3
  4434ef:	cc 	int3

runtime.casgstatus.func3:
  4434f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4434f9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4434fd:	76 29 	jbe	41 <runtime.casgstatus.func3+0x38>
  4434ff:	48 83 ec 18 	subq	$24, %rsp
  443503:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  443508:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  44350d:	48 8d 05 e9 a3 02 00 	leaq	173033(%rip), %rax
  443514:	48 89 04 24 	movq	%rax, (%rsp)
  443518:	48 c7 44 24 08 31 00 00 00 	movq	$49, 8(%rsp)
  443521:	e8 aa dc fd ff 	callq	-140118 <runtime.throw>
  443526:	0f 0b 	ud2
  443528:	e8 43 10 00 00 	callq	4163 <runtime.morestack_noctxt>
  44352d:	eb c1 	jmp	-63 <runtime.casgstatus.func3>
  44352f:	cc 	int3

runtime.reentersyscall.func1:
  443530:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  443539:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44353d:	0f 86 df 00 00 00 	jbe	223 <runtime.reentersyscall.func1+0xf2>
  443543:	48 83 ec 30 	subq	$48, %rsp
  443547:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  44354c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  443551:	48 8b 42 08 	movq	8(%rdx), %rax
  443555:	48 8b 48 70 	movq	112(%rax), %rcx
  443559:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  44355e:	48 8b 10 	movq	(%rax), %rdx
  443561:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  443566:	48 8b 40 08 	movq	8(%rax), %rax
  44356a:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  44356f:	e8 8c e5 fd ff 	callq	-137844 <runtime.printlock>
  443574:	48 8d 05 45 86 02 00 	leaq	165445(%rip), %rax
  44357b:	48 89 04 24 	movq	%rax, (%rsp)
  44357f:	48 c7 44 24 08 1a 00 00 00 	movq	$26, 8(%rsp)
  443588:	e8 b3 ee fd ff 	callq	-135501 <runtime.printstring>
  44358d:	48 8b 44 24 20 	movq	32(%rsp), %rax
  443592:	48 89 04 24 	movq	%rax, (%rsp)
  443596:	e8 55 ed fd ff 	callq	-135851 <runtime.printhex>
  44359b:	48 8d 05 c4 66 02 00 	leaq	157380(%rip), %rax
  4435a2:	48 89 04 24 	movq	%rax, (%rsp)
  4435a6:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  4435af:	e8 8c ee fd ff 	callq	-135540 <runtime.printstring>
  4435b4:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4435b9:	48 89 04 24 	movq	%rax, (%rsp)
  4435bd:	e8 2e ed fd ff 	callq	-135890 <runtime.printhex>
  4435c2:	48 8d 05 8b 66 02 00 	leaq	157323(%rip), %rax
  4435c9:	48 89 04 24 	movq	%rax, (%rsp)
  4435cd:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  4435d6:	e8 65 ee fd ff 	callq	-135579 <runtime.printstring>
  4435db:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4435e0:	48 89 04 24 	movq	%rax, (%rsp)
  4435e4:	e8 07 ed fd ff 	callq	-135929 <runtime.printhex>
  4435e9:	48 8d 05 86 66 02 00 	leaq	157318(%rip), %rax
  4435f0:	48 89 04 24 	movq	%rax, (%rsp)
  4435f4:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  4435fd:	e8 3e ee fd ff 	callq	-135618 <runtime.printstring>
  443602:	e8 79 e5 fd ff 	callq	-137863 <runtime.printunlock>
  443607:	48 8d 05 00 70 02 00 	leaq	159744(%rip), %rax
  44360e:	48 89 04 24 	movq	%rax, (%rsp)
  443612:	48 c7 44 24 08 0c 00 00 00 	movq	$12, 8(%rsp)
  44361b:	e8 b0 db fd ff 	callq	-140368 <runtime.throw>
  443620:	0f 0b 	ud2
  443622:	e8 a9 0e 00 00 	callq	3753 <runtime.morestack>
  443627:	e9 04 ff ff ff 	jmp	-252 <runtime.reentersyscall.func1>
  44362c:	cc 	int3
  44362d:	cc 	int3
  44362e:	cc 	int3
  44362f:	cc 	int3

runtime.entersyscallblock.func1:
  443630:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  443639:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44363d:	0f 86 17 01 00 00 	jbe	279 <runtime.entersyscallblock.func1+0x12a>
  443643:	48 83 ec 40 	subq	$64, %rsp
  443647:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  44364c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  443651:	48 8b 42 20 	movq	32(%rdx), %rax
  443655:	48 8b 4a 08 	movq	8(%rdx), %rcx
  443659:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  44365e:	48 8b 5a 10 	movq	16(%rdx), %rbx
  443662:	48 89 5c 24 18 	movq	%rbx, 24(%rsp)
  443667:	48 8b 52 18 	movq	24(%rdx), %rdx
  44366b:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  443670:	48 8b 30 	movq	(%rax), %rsi
  443673:	48 89 74 24 28 	movq	%rsi, 40(%rsp)
  443678:	48 8b 40 08 	movq	8(%rax), %rax
  44367c:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  443681:	e8 7a e4 fd ff 	callq	-138118 <runtime.printlock>
  443686:	48 8d 05 ff 8f 02 00 	leaq	167935(%rip), %rax
  44368d:	48 89 04 24 	movq	%rax, (%rsp)
  443691:	48 c7 44 24 08 1f 00 00 00 	movq	$31, 8(%rsp)
  44369a:	e8 a1 ed fd ff 	callq	-135775 <runtime.printstring>
  44369f:	48 8b 44 24 20 	movq	32(%rsp), %rax
  4436a4:	48 89 04 24 	movq	%rax, (%rsp)
  4436a8:	e8 43 ec fd ff 	callq	-136125 <runtime.printhex>
  4436ad:	e8 8e e6 fd ff 	callq	-137586 <runtime.printsp>
  4436b2:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4436b7:	48 89 04 24 	movq	%rax, (%rsp)
  4436bb:	e8 30 ec fd ff 	callq	-136144 <runtime.printhex>
  4436c0:	e8 7b e6 fd ff 	callq	-137605 <runtime.printsp>
  4436c5:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4436ca:	48 89 04 24 	movq	%rax, (%rsp)
  4436ce:	e8 1d ec fd ff 	callq	-136163 <runtime.printhex>
  4436d3:	48 8d 05 8c 65 02 00 	leaq	157068(%rip), %rax
  4436da:	48 89 04 24 	movq	%rax, (%rsp)
  4436de:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  4436e7:	e8 54 ed fd ff 	callq	-135852 <runtime.printstring>
  4436ec:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4436f1:	48 89 04 24 	movq	%rax, (%rsp)
  4436f5:	e8 f6 eb fd ff 	callq	-136202 <runtime.printhex>
  4436fa:	48 8d 05 53 65 02 00 	leaq	157011(%rip), %rax
  443701:	48 89 04 24 	movq	%rax, (%rsp)
  443705:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  44370e:	e8 2d ed fd ff 	callq	-135891 <runtime.printstring>
  443713:	48 8b 44 24 30 	movq	48(%rsp), %rax
  443718:	48 89 04 24 	movq	%rax, (%rsp)
  44371c:	e8 cf eb fd ff 	callq	-136241 <runtime.printhex>
  443721:	48 8d 05 4e 65 02 00 	leaq	157006(%rip), %rax
  443728:	48 89 04 24 	movq	%rax, (%rsp)
  44372c:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  443735:	e8 06 ed fd ff 	callq	-135930 <runtime.printstring>
  44373a:	e8 41 e4 fd ff 	callq	-138175 <runtime.printunlock>
  44373f:	48 8d 05 e4 74 02 00 	leaq	160996(%rip), %rax
  443746:	48 89 04 24 	movq	%rax, (%rsp)
  44374a:	48 c7 44 24 08 11 00 00 00 	movq	$17, 8(%rsp)
  443753:	e8 78 da fd ff 	callq	-140680 <runtime.throw>
  443758:	0f 0b 	ud2
  44375a:	e8 71 0d 00 00 	callq	3441 <runtime.morestack>
  44375f:	e9 cc fe ff ff 	jmp	-308 <runtime.entersyscallblock.func1>
  443764:	cc 	int3
  443765:	cc 	int3
  443766:	cc 	int3
  443767:	cc 	int3
  443768:	cc 	int3
  443769:	cc 	int3
  44376a:	cc 	int3
  44376b:	cc 	int3
  44376c:	cc 	int3
  44376d:	cc 	int3
  44376e:	cc 	int3
  44376f:	cc 	int3

runtime.entersyscallblock.func2:
  443770:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  443779:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44377d:	0f 86 17 01 00 00 	jbe	279 <runtime.entersyscallblock.func2+0x12a>
  443783:	48 83 ec 40 	subq	$64, %rsp
  443787:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  44378c:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  443791:	48 8b 42 10 	movq	16(%rdx), %rax
  443795:	48 8b 4a 08 	movq	8(%rdx), %rcx
  443799:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  44379e:	48 8b 50 38 	movq	56(%rax), %rdx
  4437a2:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  4437a7:	48 8b 58 70 	movq	112(%rax), %rbx
  4437ab:	48 89 5c 24 20 	movq	%rbx, 32(%rsp)
  4437b0:	48 8b 30 	movq	(%rax), %rsi
  4437b3:	48 89 74 24 18 	movq	%rsi, 24(%rsp)
  4437b8:	48 8b 40 08 	movq	8(%rax), %rax
  4437bc:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  4437c1:	e8 3a e3 fd ff 	callq	-138438 <runtime.printlock>
  4437c6:	48 8d 05 bf 8e 02 00 	leaq	167615(%rip), %rax
  4437cd:	48 89 04 24 	movq	%rax, (%rsp)
  4437d1:	48 c7 44 24 08 1f 00 00 00 	movq	$31, 8(%rsp)
  4437da:	e8 61 ec fd ff 	callq	-136095 <runtime.printstring>
  4437df:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4437e4:	48 89 04 24 	movq	%rax, (%rsp)
  4437e8:	e8 03 eb fd ff 	callq	-136445 <runtime.printhex>
  4437ed:	e8 4e e5 fd ff 	callq	-137906 <runtime.printsp>
  4437f2:	48 8b 44 24 28 	movq	40(%rsp), %rax
  4437f7:	48 89 04 24 	movq	%rax, (%rsp)
  4437fb:	e8 f0 ea fd ff 	callq	-136464 <runtime.printhex>
  443800:	e8 3b e5 fd ff 	callq	-137925 <runtime.printsp>
  443805:	48 8b 44 24 20 	movq	32(%rsp), %rax
  44380a:	48 89 04 24 	movq	%rax, (%rsp)
  44380e:	e8 dd ea fd ff 	callq	-136483 <runtime.printhex>
  443813:	48 8d 05 4c 64 02 00 	leaq	156748(%rip), %rax
  44381a:	48 89 04 24 	movq	%rax, (%rsp)
  44381e:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  443827:	e8 14 ec fd ff 	callq	-136172 <runtime.printstring>
  44382c:	48 8b 44 24 18 	movq	24(%rsp), %rax
  443831:	48 89 04 24 	movq	%rax, (%rsp)
  443835:	e8 b6 ea fd ff 	callq	-136522 <runtime.printhex>
  44383a:	48 8d 05 13 64 02 00 	leaq	156691(%rip), %rax
  443841:	48 89 04 24 	movq	%rax, (%rsp)
  443845:	48 c7 44 24 08 01 00 00 00 	movq	$1, 8(%rsp)
  44384e:	e8 ed eb fd ff 	callq	-136211 <runtime.printstring>
  443853:	48 8b 44 24 30 	movq	48(%rsp), %rax
  443858:	48 89 04 24 	movq	%rax, (%rsp)
  44385c:	e8 8f ea fd ff 	callq	-136561 <runtime.printhex>
  443861:	48 8d 05 0e 64 02 00 	leaq	156686(%rip), %rax
  443868:	48 89 04 24 	movq	%rax, (%rsp)
  44386c:	48 c7 44 24 08 02 00 00 00 	movq	$2, 8(%rsp)
  443875:	e8 c6 eb fd ff 	callq	-136250 <runtime.printstring>
  44387a:	e8 01 e3 fd ff 	callq	-138495 <runtime.printunlock>
  44387f:	48 8d 05 a4 73 02 00 	leaq	160676(%rip), %rax
  443886:	48 89 04 24 	movq	%rax, (%rsp)
  44388a:	48 c7 44 24 08 11 00 00 00 	movq	$17, 8(%rsp)
  443893:	e8 38 d9 fd ff 	callq	-141000 <runtime.throw>
  443898:	0f 0b 	ud2
  44389a:	e8 31 0c 00 00 	callq	3121 <runtime.morestack>
  44389f:	e9 cc fe ff ff 	jmp	-308 <runtime.entersyscallblock.func2>
  4438a4:	cc 	int3
  4438a5:	cc 	int3
  4438a6:	cc 	int3
  4438a7:	cc 	int3
  4438a8:	cc 	int3
  4438a9:	cc 	int3
  4438aa:	cc 	int3
  4438ab:	cc 	int3
  4438ac:	cc 	int3
  4438ad:	cc 	int3
  4438ae:	cc 	int3
  4438af:	cc 	int3

runtime.exitsyscall.func1:
  4438b0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4438b9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4438bd:	76 29 	jbe	41 <runtime.exitsyscall.func1+0x38>
  4438bf:	48 83 ec 18 	subq	$24, %rsp
  4438c3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  4438c8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  4438cd:	48 8d 05 d1 9d 02 00 	leaq	171473(%rip), %rax
  4438d4:	48 89 04 24 	movq	%rax, (%rsp)
  4438d8:	48 c7 44 24 08 2d 00 00 00 	movq	$45, 8(%rsp)
  4438e1:	e8 ea d8 fd ff 	callq	-141078 <runtime.throw>
  4438e6:	0f 0b 	ud2
  4438e8:	e8 83 0c 00 00 	callq	3203 <runtime.morestack_noctxt>
  4438ed:	eb c1 	jmp	-63 <runtime.exitsyscall.func1>
  4438ef:	cc 	int3

runtime.exitsyscall.func2:
  4438f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4438f9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4438fd:	76 29 	jbe	41 <runtime.exitsyscall.func2+0x38>
  4438ff:	48 83 ec 18 	subq	$24, %rsp
  443903:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  443908:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  44390d:	48 8d 05 a2 6b 02 00 	leaq	158626(%rip), %rax
  443914:	48 89 04 24 	movq	%rax, (%rsp)
  443918:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  443921:	e8 aa d8 fd ff 	callq	-141142 <runtime.throw>
  443926:	0f 0b 	ud2
  443928:	e8 43 0c 00 00 	callq	3139 <runtime.morestack_noctxt>
  44392d:	eb c1 	jmp	-63 <runtime.exitsyscall.func2>
  44392f:	cc 	int3

runtime.exitsyscall.func3:
  443930:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  443939:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44393d:	76 29 	jbe	41 <runtime.exitsyscall.func3+0x38>
  44393f:	48 83 ec 18 	subq	$24, %rsp
  443943:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  443948:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  44394d:	48 8d 05 62 6b 02 00 	leaq	158562(%rip), %rax
  443954:	48 89 04 24 	movq	%rax, (%rsp)
  443958:	48 c7 44 24 08 0b 00 00 00 	movq	$11, 8(%rsp)
  443961:	e8 6a d8 fd ff 	callq	-141206 <runtime.throw>
  443966:	0f 0b 	ud2
  443968:	e8 03 0c 00 00 	callq	3075 <runtime.morestack_noctxt>
  44396d:	eb c1 	jmp	-63 <runtime.exitsyscall.func3>
  44396f:	cc 	int3

runtime.exitsyscallfast.func1:
  443970:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  443979:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44397d:	0f 86 8b 00 00 00 	jbe	139 <runtime.exitsyscallfast.func1+0x9e>
  443983:	48 83 ec 28 	subq	$40, %rsp
  443987:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44398c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  443991:	48 8b 42 08 	movq	8(%rdx), %rax
  443995:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  44399a:	48 8b 4a 10 	movq	16(%rdx), %rcx
  44399e:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4439a3:	48 8b 52 18 	movq	24(%rdx), %rdx
  4439a7:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  4439ac:	e8 cf 65 fe ff 	callq	-105009 <runtime.exitsyscallfast_pidle>
  4439b1:	0f b6 04 24 	movzbl	(%rsp), %eax
  4439b5:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  4439ba:	88 01 	movb	%al, (%rcx)
  4439bc:	84 c0 	testb	%al, %al
  4439be:	74 44 	je	68 <runtime.exitsyscallfast.func1+0x94>
  4439c0:	0f b6 05 09 fe 06 00 	movzbl	458249(%rip), %eax
  4439c7:	84 c0 	testb	%al, %al
  4439c9:	74 39 	je	57 <runtime.exitsyscallfast.func1+0x94>
  4439cb:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4439d0:	48 85 c0 	testq	%rax, %rax
  4439d3:	75 0c 	jne	12 <runtime.exitsyscallfast.func1+0x71>
  4439d5:	eb 20 	jmp	32 <runtime.exitsyscallfast.func1+0x87>
  4439d7:	e8 74 45 00 00 	callq	17780 <runtime.osyield>
  4439dc:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4439e1:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  4439e6:	48 8b 51 30 	movq	48(%rcx), %rdx
  4439ea:	8b 58 1c 	movl	28(%rax), %ebx
  4439ed:	8b 92 2c 03 00 00 	movl	812(%rdx), %edx
  4439f3:	39 d3 	cmpl	%edx, %ebx
  4439f5:	74 e0 	je	-32 <runtime.exitsyscallfast.func1+0x67>
  4439f7:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  4439ff:	e8 1c 74 ff ff 	callq	-35812 <runtime.traceGoSysExit>
  443a04:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  443a09:	48 83 c4 28 	addq	$40, %rsp
  443a0d:	c3 	retq
  443a0e:	e8 bd 0a 00 00 	callq	2749 <runtime.morestack>
  443a13:	e9 58 ff ff ff 	jmp	-168 <runtime.exitsyscallfast.func1>
  443a18:	cc 	int3
  443a19:	cc 	int3
  443a1a:	cc 	int3
  443a1b:	cc 	int3
  443a1c:	cc 	int3
  443a1d:	cc 	int3
  443a1e:	cc 	int3
  443a1f:	cc 	int3

runtime.exitsyscallfast_reacquired.func1:
  443a20:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  443a29:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  443a2d:	76 3d 	jbe	61 <runtime.exitsyscallfast_reacquired.func1+0x4c>
  443a2f:	48 83 ec 10 	subq	$16, %rsp
  443a33:	48 89 6c 24 08 	movq	%rbp, 8(%rsp)
  443a38:	48 8d 6c 24 08 	leaq	8(%rsp), %rbp
  443a3d:	48 8b 42 08 	movq	8(%rdx), %rax
  443a41:	48 8b 40 30 	movq	48(%rax), %rax
  443a45:	48 8b 80 d0 00 00 00 	movq	208(%rax), %rax
  443a4c:	48 89 04 24 	movq	%rax, (%rsp)
  443a50:	e8 ab 74 ff ff 	callq	-35669 <runtime.traceGoSysBlock>
  443a55:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  443a5d:	e8 be 73 ff ff 	callq	-35906 <runtime.traceGoSysExit>
  443a62:	48 8b 6c 24 08 	movq	8(%rsp), %rbp
  443a67:	48 83 c4 10 	addq	$16, %rsp
  443a6b:	c3 	retq
  443a6c:	e8 5f 0a 00 00 	callq	2655 <runtime.morestack>
  443a71:	eb ad 	jmp	-83 <runtime.exitsyscallfast_reacquired.func1>
  443a73:	cc 	int3
  443a74:	cc 	int3
  443a75:	cc 	int3
  443a76:	cc 	int3
  443a77:	cc 	int3
  443a78:	cc 	int3
  443a79:	cc 	int3
  443a7a:	cc 	int3
  443a7b:	cc 	int3
  443a7c:	cc 	int3
  443a7d:	cc 	int3
  443a7e:	cc 	int3
  443a7f:	cc 	int3

runtime.malg.func1:
  443a80:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  443a89:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  443a8d:	76 42 	jbe	66 <runtime.malg.func1+0x51>
  443a8f:	48 83 ec 28 	subq	$40, %rsp
  443a93:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  443a98:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  443a9d:	8b 42 08 	movl	8(%rdx), %eax
  443aa0:	48 8b 4a 10 	movq	16(%rdx), %rcx
  443aa4:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  443aa9:	89 04 24 	movl	%eax, (%rsp)
  443aac:	e8 5f 0a ff ff 	callq	-62881 <runtime.stackalloc>
  443ab1:	48 8b 44 24 08 	movq	8(%rsp), %rax
  443ab6:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  443abb:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  443ac0:	48 89 02 	movq	%rax, (%rdx)
  443ac3:	48 89 4a 08 	movq	%rcx, 8(%rdx)
  443ac7:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  443acc:	48 83 c4 28 	addq	$40, %rsp
  443ad0:	c3 	retq
  443ad1:	e8 fa 09 00 00 	callq	2554 <runtime.morestack>
  443ad6:	eb a8 	jmp	-88 <runtime.malg.func1>
  443ad8:	cc 	int3
  443ad9:	cc 	int3
  443ada:	cc 	int3
  443adb:	cc 	int3
  443adc:	cc 	int3
  443add:	cc 	int3
  443ade:	cc 	int3
  443adf:	cc 	int3

runtime.newproc.func1:
  443ae0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  443ae9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  443aed:	76 41 	jbe	65 <runtime.newproc.func1+0x50>
  443aef:	48 83 ec 28 	subq	$40, %rsp
  443af3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  443af8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  443afd:	48 8b 42 08 	movq	8(%rdx), %rax
  443b01:	48 8b 4a 10 	movq	16(%rdx), %rcx
  443b05:	8b 5a 18 	movl	24(%rdx), %ebx
  443b08:	48 8b 52 20 	movq	32(%rdx), %rdx
  443b0c:	48 8b 00 	movq	(%rax), %rax
  443b0f:	48 89 04 24 	movq	%rax, (%rsp)
  443b13:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  443b18:	89 5c 24 10 	movl	%ebx, 16(%rsp)
  443b1c:	48 89 54 24 18 	movq	%rdx, 24(%rsp)
  443b21:	e8 3a 68 fe ff 	callq	-104390 <runtime.newproc1>
  443b26:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  443b2b:	48 83 c4 28 	addq	$40, %rsp
  443b2f:	c3 	retq
  443b30:	e8 9b 09 00 00 	callq	2459 <runtime.morestack>
  443b35:	eb a9 	jmp	-87 <runtime.newproc.func1>
  443b37:	cc 	int3
  443b38:	cc 	int3
  443b39:	cc 	int3
  443b3a:	cc 	int3
  443b3b:	cc 	int3
  443b3c:	cc 	int3
  443b3d:	cc 	int3
  443b3e:	cc 	int3
  443b3f:	cc 	int3

runtime.gfget.func1:
  443b40:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  443b49:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  443b4d:	76 43 	jbe	67 <runtime.gfget.func1+0x52>
  443b4f:	48 83 ec 28 	subq	$40, %rsp
  443b53:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  443b58:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  443b5d:	48 8b 42 08 	movq	8(%rdx), %rax
  443b61:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  443b66:	c7 04 24 00 08 00 00 	movl	$2048, (%rsp)
  443b6d:	e8 9e 09 ff ff 	callq	-63074 <runtime.stackalloc>
  443b72:	48 8b 44 24 08 	movq	8(%rsp), %rax
  443b77:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  443b7c:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  443b81:	48 89 02 	movq	%rax, (%rdx)
  443b84:	48 89 4a 08 	movq	%rcx, 8(%rdx)
  443b88:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  443b8d:	48 83 c4 28 	addq	$40, %rsp
  443b91:	c3 	retq
  443b92:	e8 39 09 00 00 	callq	2361 <runtime.morestack>
  443b97:	eb a7 	jmp	-89 <runtime.gfget.func1>
  443b99:	cc 	int3
  443b9a:	cc 	int3
  443b9b:	cc 	int3
  443b9c:	cc 	int3
  443b9d:	cc 	int3
  443b9e:	cc 	int3
  443b9f:	cc 	int3

runtime.(*rwmutex).rlock.func1:
  443ba0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  443ba9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  443bad:	0f 86 a9 00 00 00 	jbe	169 <runtime.(*rwmutex).rlock.func1+0xbc>
  443bb3:	48 83 ec 28 	subq	$40, %rsp
  443bb7:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  443bbc:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  443bc1:	48 8b 42 08 	movq	8(%rdx), %rax
  443bc5:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  443bca:	84 00 	testb	%al, (%rax)
  443bcc:	48 89 04 24 	movq	%rax, (%rsp)
  443bd0:	e8 4b 59 fc ff 	callq	-239285 <runtime.lock>
  443bd5:	48 8b 44 24 08 	movq	8(%rsp), %rax
  443bda:	8b 48 10 	movl	16(%rax), %ecx
  443bdd:	85 c9 	testl	%ecx, %ecx
  443bdf:	76 18 	jbe	24 <runtime.(*rwmutex).rlock.func1+0x59>
  443be1:	ff c9 	decl	%ecx
  443be3:	89 48 10 	movl	%ecx, 16(%rax)
  443be6:	48 89 04 24 	movq	%rax, (%rsp)
  443bea:	e8 d1 5a fc ff 	callq	-238895 <runtime.unlock>
  443bef:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  443bf4:	48 83 c4 28 	addq	$40, %rsp
  443bf8:	c3 	retq
  443bf9:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  443c02:	48 8b 49 30 	movq	48(%rcx), %rcx
  443c06:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  443c0b:	48 8b 50 08 	movq	8(%rax), %rdx
  443c0f:	48 89 91 58 01 00 00 	movq	%rdx, 344(%rcx)
  443c16:	48 8d 50 08 	leaq	8(%rax), %rdx
  443c1a:	84 02 	testb	%al, (%rdx)
  443c1c:	48 89 48 08 	movq	%rcx, 8(%rax)
  443c20:	48 89 04 24 	movq	%rax, (%rsp)
  443c24:	e8 97 5a fc ff 	callq	-238953 <runtime.unlock>
  443c29:	48 8b 44 24 10 	movq	16(%rsp), %rax
  443c2e:	48 8d 88 48 01 00 00 	leaq	328(%rax), %rcx
  443c35:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  443c3a:	48 89 0c 24 	movq	%rcx, (%rsp)
  443c3e:	e8 0d 5c fc ff 	callq	-238579 <runtime.notesleep>
  443c43:	48 8b 44 24 18 	movq	24(%rsp), %rax
  443c48:	84 00 	testb	%al, (%rax)
  443c4a:	48 8b 44 24 10 	movq	16(%rsp), %rax
  443c4f:	48 c7 80 48 01 00 00 00 00 00 00 	movq	$0, 328(%rax)
  443c5a:	eb 93 	jmp	-109 <runtime.(*rwmutex).rlock.func1+0x4f>
  443c5c:	e8 6f 08 00 00 	callq	2159 <runtime.morestack>
  443c61:	e9 3a ff ff ff 	jmp	-198 <runtime.(*rwmutex).rlock.func1>
  443c66:	cc 	int3
  443c67:	cc 	int3
  443c68:	cc 	int3
  443c69:	cc 	int3
  443c6a:	cc 	int3
  443c6b:	cc 	int3
  443c6c:	cc 	int3
  443c6d:	cc 	int3
  443c6e:	cc 	int3
  443c6f:	cc 	int3

runtime.morestackc.func1:
  443c70:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  443c79:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  443c7d:	76 29 	jbe	41 <runtime.morestackc.func1+0x38>
  443c7f:	48 83 ec 18 	subq	$24, %rsp
  443c83:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  443c88:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  443c8d:	48 8d 05 5e 9d 02 00 	leaq	171358(%rip), %rax
  443c94:	48 89 04 24 	movq	%rax, (%rsp)
  443c98:	48 c7 44 24 08 32 00 00 00 	movq	$50, 8(%rsp)
  443ca1:	e8 2a d5 fd ff 	callq	-142038 <runtime.throw>
  443ca6:	0f 0b 	ud2
  443ca8:	e8 c3 08 00 00 	callq	2243 <runtime.morestack_noctxt>
  443cad:	eb c1 	jmp	-63 <runtime.morestackc.func1>
  443caf:	cc 	int3

runtime.callers.func1:
  443cb0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  443cb9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  443cbd:	0f 86 91 00 00 00 	jbe	145 <runtime.callers.func1+0xa4>
  443cc3:	48 83 ec 68 	subq	$104, %rsp
  443cc7:	48 89 6c 24 60 	movq	%rbp, 96(%rsp)
  443ccc:	48 8d 6c 24 60 	leaq	96(%rsp), %rbp
  443cd1:	48 8b 42 08 	movq	8(%rdx), %rax
  443cd5:	48 8b 4a 10 	movq	16(%rdx), %rcx
  443cd9:	48 8b 5a 18 	movq	24(%rdx), %rbx
  443cdd:	48 8b 72 20 	movq	32(%rdx), %rsi
  443ce1:	48 8b 7a 40 	movq	64(%rdx), %rdi
  443ce5:	48 8b 36 	movq	(%rsi), %rsi
  443ce8:	4c 8b 42 28 	movq	40(%rdx), %r8
  443cec:	48 8b 52 30 	movq	48(%rdx), %rdx
  443cf0:	48 85 d2 	testq	%rdx, %rdx
  443cf3:	76 58 	jbe	88 <runtime.callers.func1+0x9d>
  443cf5:	48 89 7c 24 58 	movq	%rdi, 88(%rsp)
  443cfa:	4c 89 44 24 28 	movq	%r8, 40(%rsp)
  443cff:	48 89 04 24 	movq	%rax, (%rsp)
  443d03:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  443d08:	48 c7 44 24 10 00 00 00 00 	movq	$0, 16(%rsp)
  443d11:	48 89 5c 24 18 	movq	%rbx, 24(%rsp)
  443d16:	48 89 74 24 20 	movq	%rsi, 32(%rsp)
  443d1b:	48 89 54 24 30 	movq	%rdx, 48(%rsp)
  443d20:	0f 57 c0 	xorps	%xmm0, %xmm0
  443d23:	0f 11 44 24 38 	movups	%xmm0, 56(%rsp)
  443d28:	48 c7 44 24 48 00 00 00 00 	movq	$0, 72(%rsp)
  443d31:	e8 fa 75 ff ff 	callq	-35334 <runtime.gentraceback>
  443d36:	48 8b 44 24 50 	movq	80(%rsp), %rax
  443d3b:	48 8b 4c 24 58 	movq	88(%rsp), %rcx
  443d40:	48 89 01 	movq	%rax, (%rcx)
  443d43:	48 8b 6c 24 60 	movq	96(%rsp), %rbp
  443d48:	48 83 c4 68 	addq	$104, %rsp
  443d4c:	c3 	retq
  443d4d:	e8 ee bc fd ff 	callq	-148242 <runtime.panicindex>
  443d52:	0f 0b 	ud2
  443d54:	e8 77 07 00 00 	callq	1911 <runtime.morestack>
  443d59:	e9 52 ff ff ff 	jmp	-174 <runtime.callers.func1>
  443d5e:	cc 	int3
  443d5f:	cc 	int3

runtime.tracebackHexdump.func1:
  443d60:	48 8b 42 08 	movq	8(%rdx), %rax
  443d64:	48 8b 4a 10 	movq	16(%rdx), %rcx
  443d68:	48 8b 50 30 	movq	48(%rax), %rdx
  443d6c:	48 8b 5c 24 08 	movq	8(%rsp), %rbx
  443d71:	48 39 da 	cmpq	%rbx, %rdx
  443d74:	74 20 	je	32 <runtime.tracebackHexdump.func1+0x36>
  443d76:	48 8b 40 28 	movq	40(%rax), %rax
  443d7a:	48 39 d8 	cmpq	%rbx, %rax
  443d7d:	74 11 	je	17 <runtime.tracebackHexdump.func1+0x30>
  443d7f:	48 39 d9 	cmpq	%rbx, %rcx
  443d82:	75 06 	jne	6 <runtime.tracebackHexdump.func1+0x2a>
  443d84:	c6 44 24 10 21 	movb	$33, 16(%rsp)
  443d89:	c3 	retq
  443d8a:	c6 44 24 10 00 	movb	$0, 16(%rsp)
  443d8f:	c3 	retq
  443d90:	c6 44 24 10 3c 	movb	$60, 16(%rsp)
  443d95:	c3 	retq
  443d96:	c6 44 24 10 3e 	movb	$62, 16(%rsp)
  443d9b:	c3 	retq
  443d9c:	cc 	int3
  443d9d:	cc 	int3
  443d9e:	cc 	int3
  443d9f:	cc 	int3

runtime.vdso_parse_symbols.func1:
  443da0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  443da9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  443dad:	0f 86 2b 01 00 00 	jbe	299 <runtime.vdso_parse_symbols.func1+0x13e>
  443db3:	48 83 ec 48 	subq	$72, %rsp
  443db7:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  443dbc:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  443dc1:	48 8b 42 08 	movq	8(%rdx), %rax
  443dc5:	48 8b 48 18 	movq	24(%rax), %rcx
  443dc9:	84 01 	testb	%al, (%rcx)
  443dcb:	84 00 	testb	%al, (%rax)
  443dcd:	8b 52 10 	movl	16(%rdx), %edx
  443dd0:	8b 5c 24 50 	movl	80(%rsp), %ebx
  443dd4:	48 8d 34 5b 	leaq	(%rbx,%rbx,2), %rsi
  443dd8:	48 89 f7 	movq	%rsi, %rdi
  443ddb:	48 c1 e6 03 	shlq	$3, %rsi
  443ddf:	44 0f b6 44 31 04 	movzbl	4(%rcx,%rsi), %r8d
  443de5:	45 89 c1 	movl	%r8d, %r9d
  443de8:	41 83 e0 0f 	andl	$15, %r8d
  443dec:	41 80 f8 02 	cmpb	$2, %r8b
  443df0:	74 0f 	je	15 <runtime.vdso_parse_symbols.func1+0x61>
  443df2:	c6 44 24 78 00 	movb	$0, 120(%rsp)
  443df7:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  443dfc:	48 83 c4 48 	addq	$72, %rsp
  443e00:	c3 	retq
  443e01:	41 c0 e9 04 	shrb	$4, %r9b
  443e05:	41 80 f9 01 	cmpb	$1, %r9b
  443e09:	74 06 	je	6 <runtime.vdso_parse_symbols.func1+0x71>
  443e0b:	41 80 f9 02 	cmpb	$2, %r9b
  443e0f:	75 e1 	jne	-31 <runtime.vdso_parse_symbols.func1+0x52>
  443e11:	0f b7 74 31 06 	movzwl	6(%rcx,%rsi), %esi
  443e16:	66 85 f6 	testw	%si, %si
  443e19:	74 d7 	je	-41 <runtime.vdso_parse_symbols.func1+0x52>
  443e1b:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  443e20:	89 54 24 24 	movl	%edx, 36(%rsp)
  443e24:	48 89 4c 24 38 	movq	%rcx, 56(%rsp)
  443e29:	48 89 7c 24 28 	movq	%rdi, 40(%rsp)
  443e2e:	48 8b 50 20 	movq	32(%rax), %rdx
  443e32:	84 02 	testb	%al, (%rdx)
  443e34:	8b 1c f9 	movl	(%rcx,%rdi,8), %ebx
  443e37:	48 01 da 	addq	%rbx, %rdx
  443e3a:	48 89 14 24 	movq	%rdx, (%rsp)
  443e3e:	e8 ad 38 ff ff 	callq	-51027 <runtime.gostringnocopy>
  443e43:	48 8b 44 24 10 	movq	16(%rsp), %rax
  443e48:	48 8b 4c 24 60 	movq	96(%rsp), %rcx
  443e4d:	48 39 c1 	cmpq	%rax, %rcx
  443e50:	74 0f 	je	15 <runtime.vdso_parse_symbols.func1+0xc1>
  443e52:	c6 44 24 78 00 	movb	$0, 120(%rsp)
  443e57:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  443e5c:	48 83 c4 48 	addq	$72, %rsp
  443e60:	c3 	retq
  443e61:	48 8b 44 24 58 	movq	88(%rsp), %rax
  443e66:	48 89 04 24 	movq	%rax, (%rsp)
  443e6a:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  443e6f:	e8 cc 24 00 00 	callq	9420 <runtime.memequal>
  443e74:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  443e79:	84 c0 	testb	%al, %al
  443e7b:	74 d5 	je	-43 <runtime.vdso_parse_symbols.func1+0xb2>
  443e7d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  443e82:	48 8b 48 60 	movq	96(%rax), %rcx
  443e86:	48 85 c9 	testq	%rcx, %rcx
  443e89:	74 1a 	je	26 <runtime.vdso_parse_symbols.func1+0x105>
  443e8b:	8b 54 24 24 	movl	36(%rsp), %edx
  443e8f:	85 d2 	testl	%edx, %edx
  443e91:	74 12 	je	18 <runtime.vdso_parse_symbols.func1+0x105>
  443e93:	8b 5c 24 50 	movl	80(%rsp), %ebx
  443e97:	0f b7 0c 59 	movzwl	(%rcx,%rbx,2), %ecx
  443e9b:	81 e1 ff 7f 00 00 	andl	$32767, %ecx
  443ea1:	39 d1 	cmpl	%edx, %ecx
  443ea3:	75 2a 	jne	42 <runtime.vdso_parse_symbols.func1+0x12f>
  443ea5:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  443eaa:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  443eaf:	48 8b 4c ca 08 	movq	8(%rdx,%rcx,8), %rcx
  443eb4:	48 03 48 10 	addq	16(%rax), %rcx
  443eb8:	48 8b 44 24 70 	movq	112(%rsp), %rax
  443ebd:	48 89 08 	movq	%rcx, (%rax)
  443ec0:	c6 44 24 78 01 	movb	$1, 120(%rsp)
  443ec5:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  443eca:	48 83 c4 48 	addq	$72, %rsp
  443ece:	c3 	retq
  443ecf:	c6 44 24 78 00 	movb	$0, 120(%rsp)
  443ed4:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  443ed9:	48 83 c4 48 	addq	$72, %rsp
  443edd:	c3 	retq
  443ede:	e8 ed 05 00 00 	callq	1517 <runtime.morestack>
  443ee3:	e9 b8 fe ff ff 	jmp	-328 <runtime.vdso_parse_symbols.func1>
  443ee8:	cc 	int3
  443ee9:	cc 	int3
  443eea:	cc 	int3
  443eeb:	cc 	int3
  443eec:	cc 	int3
  443eed:	cc 	int3
  443eee:	cc 	int3
  443eef:	cc 	int3

runtime.init:
  443ef0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  443ef9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  443efd:	0f 86 e6 00 00 00 	jbe	230 <runtime.init+0xf9>
  443f03:	48 83 ec 20 	subq	$32, %rsp
  443f07:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  443f0c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  443f11:	0f b6 05 91 f9 07 00 	movzbl	522641(%rip), %eax
  443f18:	3c 01 	cmpb	$1, %al
  443f1a:	76 0a 	jbe	10 <runtime.init+0x36>
  443f1c:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  443f21:	48 83 c4 20 	addq	$32, %rsp
  443f25:	c3 	retq
  443f26:	75 07 	jne	7 <runtime.init+0x3f>
  443f28:	e8 b3 bd fd ff 	callq	-148045 <runtime.throwinit>
  443f2d:	0f 0b 	ud2
  443f2f:	c6 05 73 f9 07 00 01 	movb	$1, 522611(%rip)
  443f36:	48 b8 00 00 00 00 00 00 f0 7f 	movabsq	$9218868437227405312, %rax
  443f40:	48 89 04 24 	movq	%rax, (%rsp)
  443f44:	e8 b7 1b fc ff 	callq	-255049 <runtime.float64frombits>
  443f49:	f2 0f 10 44 24 08 	movsd	8(%rsp), %xmm0
  443f4f:	f2 0f 11 05 19 fa 07 00 	movsd	%xmm0, 522777(%rip)
  443f57:	48 8d 05 02 6f 01 00 	leaq	93954(%rip), %rax
  443f5e:	48 89 04 24 	movq	%rax, (%rsp)
  443f62:	48 8d 05 9f a0 02 00 	leaq	172191(%rip), %rax
  443f69:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  443f6e:	e8 0d f8 fd ff 	callq	-133107 <runtime.funcPC>
  443f73:	48 8b 44 24 10 	movq	16(%rsp), %rax
  443f78:	48 89 05 c1 f9 07 00 	movq	%rax, 522689(%rip)
  443f7f:	48 8d 05 7a 6e 01 00 	leaq	93818(%rip), %rax
  443f86:	48 89 04 24 	movq	%rax, (%rsp)
  443f8a:	48 8d 05 6f a0 02 00 	leaq	172143(%rip), %rax
  443f91:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  443f96:	e8 e5 f7 fd ff 	callq	-133147 <runtime.funcPC>
  443f9b:	48 8b 44 24 10 	movq	16(%rsp), %rax
  443fa0:	48 89 05 91 f9 07 00 	movq	%rax, 522641(%rip)
  443fa7:	e8 84 3a 00 00 	callq	14980 <runtime.nanotime>
  443fac:	48 8b 04 24 	movq	(%rsp), %rax
  443fb0:	48 ff c8 	decq	%rax
  443fb3:	48 89 05 1e fa 07 00 	movq	%rax, 522782(%rip)
  443fba:	e8 b1 05 fc ff 	callq	-260687 <runtime.init.0>
  443fbf:	e8 6c 4d fd ff 	callq	-176788 <runtime.init.1>
  443fc4:	e8 77 a0 fd ff 	callq	-155529 <runtime.init.2>
  443fc9:	e8 d2 c0 fd ff 	callq	-147246 <runtime.init.3>
  443fce:	e8 5d ec fd ff 	callq	-136099 <runtime.init.4>
  443fd3:	e8 c8 e0 fe ff 	callq	-73528 <runtime.init.5>
  443fd8:	c6 05 ca f8 07 00 02 	movb	$2, 522442(%rip)
  443fdf:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  443fe4:	48 83 c4 20 	addq	$32, %rsp
  443fe8:	c3 	retq
  443fe9:	e8 82 05 00 00 	callq	1410 <runtime.morestack_noctxt>
  443fee:	e9 fd fe ff ff 	jmp	-259 <runtime.init>
  443ff3:	cc 	int3
  443ff4:	cc 	int3
  443ff5:	cc 	int3
  443ff6:	cc 	int3
  443ff7:	cc 	int3
  443ff8:	cc 	int3
  443ff9:	cc 	int3
  443ffa:	cc 	int3
  443ffb:	cc 	int3
  443ffc:	cc 	int3
  443ffd:	cc 	int3
  443ffe:	cc 	int3
  443fff:	cc 	int3

runtime.skipPleaseUseCallersFrames:
  444000:	90 	nop
  444001:	90 	nop
  444002:	90 	nop
  444003:	90 	nop
  444004:	90 	nop
  444005:	90 	nop
  444006:	90 	nop
  444007:	90 	nop
  444008:	90 	nop
  444009:	90 	nop
  44400a:	90 	nop
  44400b:	90 	nop
  44400c:	90 	nop
  44400d:	90 	nop
  44400e:	90 	nop
  44400f:	90 	nop
  444010:	90 	nop
  444011:	90 	nop
  444012:	90 	nop
  444013:	90 	nop
  444014:	90 	nop
  444015:	90 	nop
  444016:	90 	nop
  444017:	90 	nop
  444018:	90 	nop
  444019:	90 	nop
  44401a:	90 	nop
  44401b:	90 	nop
  44401c:	90 	nop
  44401d:	90 	nop
  44401e:	90 	nop
  44401f:	90 	nop
  444020:	90 	nop
  444021:	90 	nop
  444022:	90 	nop
  444023:	90 	nop
  444024:	90 	nop
  444025:	90 	nop
  444026:	90 	nop
  444027:	90 	nop
  444028:	90 	nop
  444029:	90 	nop
  44402a:	90 	nop
  44402b:	90 	nop
  44402c:	90 	nop
  44402d:	90 	nop
  44402e:	90 	nop
  44402f:	90 	nop
  444030:	90 	nop
  444031:	90 	nop
  444032:	90 	nop
  444033:	90 	nop
  444034:	90 	nop
  444035:	90 	nop
  444036:	90 	nop
  444037:	90 	nop
  444038:	90 	nop
  444039:	90 	nop
  44403a:	90 	nop
  44403b:	90 	nop
  44403c:	90 	nop
  44403d:	90 	nop
  44403e:	90 	nop
  44403f:	90 	nop
  444040:	90 	nop
  444041:	90 	nop
  444042:	90 	nop
  444043:	90 	nop
  444044:	90 	nop
  444045:	90 	nop
  444046:	90 	nop
  444047:	90 	nop
  444048:	90 	nop
  444049:	90 	nop
  44404a:	90 	nop
  44404b:	90 	nop
  44404c:	90 	nop
  44404d:	90 	nop
  44404e:	90 	nop
  44404f:	90 	nop
  444050:	90 	nop
  444051:	90 	nop
  444052:	90 	nop
  444053:	90 	nop
  444054:	90 	nop
  444055:	90 	nop
  444056:	90 	nop
  444057:	90 	nop
  444058:	90 	nop
  444059:	90 	nop
  44405a:	90 	nop
  44405b:	90 	nop
  44405c:	90 	nop
  44405d:	90 	nop
  44405e:	90 	nop
  44405f:	90 	nop
  444060:	90 	nop
  444061:	90 	nop
  444062:	90 	nop
  444063:	90 	nop
  444064:	90 	nop
  444065:	90 	nop
  444066:	90 	nop
  444067:	90 	nop
  444068:	90 	nop
  444069:	90 	nop
  44406a:	90 	nop
  44406b:	90 	nop
  44406c:	90 	nop
  44406d:	90 	nop
  44406e:	90 	nop
  44406f:	90 	nop
  444070:	90 	nop
  444071:	90 	nop
  444072:	90 	nop
  444073:	90 	nop
  444074:	90 	nop
  444075:	90 	nop
  444076:	90 	nop
  444077:	90 	nop
  444078:	90 	nop
  444079:	90 	nop
  44407a:	90 	nop
  44407b:	90 	nop
  44407c:	90 	nop
  44407d:	90 	nop
  44407e:	90 	nop
  44407f:	90 	nop
  444080:	90 	nop
  444081:	90 	nop
  444082:	90 	nop
  444083:	90 	nop
  444084:	90 	nop
  444085:	90 	nop
  444086:	90 	nop
  444087:	90 	nop
  444088:	90 	nop
  444089:	90 	nop
  44408a:	90 	nop
  44408b:	90 	nop
  44408c:	90 	nop
  44408d:	90 	nop
  44408e:	90 	nop
  44408f:	90 	nop
  444090:	90 	nop
  444091:	90 	nop
  444092:	90 	nop
  444093:	90 	nop
  444094:	90 	nop
  444095:	90 	nop
  444096:	90 	nop
  444097:	90 	nop
  444098:	90 	nop
  444099:	90 	nop
  44409a:	90 	nop
  44409b:	90 	nop
  44409c:	90 	nop
  44409d:	90 	nop
  44409e:	90 	nop
  44409f:	90 	nop
  4440a0:	90 	nop
  4440a1:	90 	nop
  4440a2:	90 	nop
  4440a3:	90 	nop
  4440a4:	90 	nop
  4440a5:	90 	nop
  4440a6:	90 	nop
  4440a7:	90 	nop
  4440a8:	90 	nop
  4440a9:	90 	nop
  4440aa:	90 	nop
  4440ab:	90 	nop
  4440ac:	90 	nop
  4440ad:	90 	nop
  4440ae:	90 	nop
  4440af:	90 	nop
  4440b0:	90 	nop
  4440b1:	90 	nop
  4440b2:	90 	nop
  4440b3:	90 	nop
  4440b4:	90 	nop
  4440b5:	90 	nop
  4440b6:	90 	nop
  4440b7:	90 	nop
  4440b8:	90 	nop
  4440b9:	90 	nop
  4440ba:	90 	nop
  4440bb:	90 	nop
  4440bc:	90 	nop
  4440bd:	90 	nop
  4440be:	90 	nop
  4440bf:	90 	nop
  4440c0:	90 	nop
  4440c1:	90 	nop
  4440c2:	90 	nop
  4440c3:	90 	nop
  4440c4:	90 	nop
  4440c5:	90 	nop
  4440c6:	90 	nop
  4440c7:	90 	nop
  4440c8:	90 	nop
  4440c9:	90 	nop
  4440ca:	90 	nop
  4440cb:	90 	nop
  4440cc:	90 	nop
  4440cd:	90 	nop
  4440ce:	90 	nop
  4440cf:	90 	nop
  4440d0:	90 	nop
  4440d1:	90 	nop
  4440d2:	90 	nop
  4440d3:	90 	nop
  4440d4:	90 	nop
  4440d5:	90 	nop
  4440d6:	90 	nop
  4440d7:	90 	nop
  4440d8:	90 	nop
  4440d9:	90 	nop
  4440da:	90 	nop
  4440db:	90 	nop
  4440dc:	90 	nop
  4440dd:	90 	nop
  4440de:	90 	nop
  4440df:	90 	nop
  4440e0:	90 	nop
  4440e1:	90 	nop
  4440e2:	90 	nop
  4440e3:	90 	nop
  4440e4:	90 	nop
  4440e5:	90 	nop
  4440e6:	90 	nop
  4440e7:	90 	nop
  4440e8:	90 	nop
  4440e9:	90 	nop
  4440ea:	90 	nop
  4440eb:	90 	nop
  4440ec:	90 	nop
  4440ed:	90 	nop
  4440ee:	90 	nop
  4440ef:	90 	nop
  4440f0:	90 	nop
  4440f1:	90 	nop
  4440f2:	90 	nop
  4440f3:	90 	nop
  4440f4:	90 	nop
  4440f5:	90 	nop
  4440f6:	90 	nop
  4440f7:	90 	nop
  4440f8:	90 	nop
  4440f9:	90 	nop
  4440fa:	90 	nop
  4440fb:	90 	nop
  4440fc:	90 	nop
  4440fd:	90 	nop
  4440fe:	90 	nop
  4440ff:	90 	nop

_rt0_amd64:
  444100:	48 8b 3c 24 	movq	(%rsp), %rdi
  444104:	48 8d 74 24 08 	leaq	8(%rsp), %rsi
  444109:	e9 02 00 00 00 	jmp	2 <runtime.rt0_go>
  44410e:	cc 	int3
  44410f:	cc 	int3

runtime.rt0_go:
  444110:	48 89 f8 	movq	%rdi, %rax
  444113:	48 89 f3 	movq	%rsi, %rbx
  444116:	48 83 ec 27 	subq	$39, %rsp
  44411a:	48 83 e4 f0 	andq	$-16, %rsp
  44411e:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  444123:	48 89 5c 24 18 	movq	%rbx, 24(%rsp)
  444128:	48 8d 3d 31 39 06 00 	leaq	407857(%rip), %rdi
  44412f:	48 8d 9c 24 68 00 ff ff 	leaq	-65432(%rsp), %rbx
  444137:	48 89 5f 10 	movq	%rbx, 16(%rdi)
  44413b:	48 89 5f 18 	movq	%rbx, 24(%rdi)
  44413f:	48 89 1f 	movq	%rbx, (%rdi)
  444142:	48 89 67 08 	movq	%rsp, 8(%rdi)
  444146:	b8 00 00 00 00 	movl	$0, %eax
  44414b:	0f a2 	cpuid
  44414d:	89 c6 	movl	%eax, %esi
  44414f:	83 f8 00 	cmpl	$0, %eax
  444152:	0f 84 07 01 00 00 	je	263 <runtime.rt0_go+0x14f>
  444158:	81 fb 47 65 6e 75 	cmpl	$1970169159, %ebx
  44415e:	75 1e 	jne	30 <runtime.rt0_go+0x6e>
  444160:	81 fa 69 6e 65 49 	cmpl	$1231384169, %edx
  444166:	75 16 	jne	22 <runtime.rt0_go+0x6e>
  444168:	81 f9 6e 74 65 6c 	cmpl	$1818588270, %ecx
  44416e:	75 0e 	jne	14 <runtime.rt0_go+0x6e>
  444170:	c6 05 33 f7 07 00 01 	movb	$1, 522035(%rip)
  444177:	c6 05 30 f7 07 00 01 	movb	$1, 522032(%rip)
  44417e:	b8 01 00 00 00 	movl	$1, %eax
  444183:	0f a2 	cpuid
  444185:	89 05 6d f7 07 00 	movl	%eax, 522093(%rip)
  44418b:	f7 c2 00 00 00 04 	testl	$67108864, %edx
  444191:	0f 95 05 21 f7 07 00 	setne	522017(%rip)
  444198:	f7 c1 00 02 00 00 	testl	$512, %ecx
  44419e:	0f 95 05 17 f7 07 00 	setne	522007(%rip)
  4441a5:	f7 c1 00 00 08 00 	testl	$524288, %ecx
  4441ab:	0f 95 05 08 f7 07 00 	setne	521992(%rip)
  4441b2:	f7 c1 00 00 10 00 	testl	$1048576, %ecx
  4441b8:	0f 95 05 fc f6 07 00 	setne	521980(%rip)
  4441bf:	f7 c1 00 00 80 00 	testl	$8388608, %ecx
  4441c5:	0f 95 05 ec f6 07 00 	setne	521964(%rip)
  4441cc:	f7 c1 00 00 00 02 	testl	$33554432, %ecx
  4441d2:	0f 95 05 d8 f6 07 00 	setne	521944(%rip)
  4441d9:	f7 c1 00 00 00 08 	testl	$134217728, %ecx
  4441df:	0f 95 05 d1 f6 07 00 	setne	521937(%rip)
  4441e6:	f7 c1 00 00 00 10 	testl	$268435456, %ecx
  4441ec:	0f 95 05 bf f6 07 00 	setne	521919(%rip)
  4441f3:	83 fe 07 	cmpl	$7, %esi
  4441f6:	7c 40 	jl	64 <runtime.rt0_go+0x128>
  4441f8:	b8 07 00 00 00 	movl	$7, %eax
  4441fd:	b9 00 00 00 00 	movl	$0, %ecx
  444202:	0f a2 	cpuid
  444204:	f7 c3 08 00 00 00 	testl	$8, %ebx
  44420a:	0f 95 05 a3 f6 07 00 	setne	521891(%rip)
  444211:	f7 c3 20 00 00 00 	testl	$32, %ebx
  444217:	0f 95 05 95 f6 07 00 	setne	521877(%rip)
  44421e:	f7 c3 00 01 00 00 	testl	$256, %ebx
  444224:	0f 95 05 8a f6 07 00 	setne	521866(%rip)
  44422b:	f7 c3 00 02 00 00 	testl	$512, %ebx
  444231:	0f 95 05 7e f6 07 00 	setne	521854(%rip)
  444238:	80 3d 78 f6 07 00 01 	cmpb	$1, 521848(%rip)
  44423f:	75 10 	jne	16 <runtime.rt0_go+0x141>
  444241:	b9 00 00 00 00 	movl	$0, %ecx
  444246:	0f 01 d0 	xgetbv
  444249:	83 e0 06 	andl	$6, %eax
  44424c:	83 f8 06 	cmpl	$6, %eax
  44424f:	74 0e 	je	14 <runtime.rt0_go+0x14f>
  444251:	c6 05 5a f6 07 00 00 	movb	$0, 521818(%rip)
  444258:	c6 05 54 f6 07 00 00 	movb	$0, 521812(%rip)
  44425f:	48 8b 05 62 33 06 00 	movq	406370(%rip), %rax
  444266:	48 85 c0 	testq	%rax, %rax
  444269:	74 26 	je	38 <runtime.rt0_go+0x181>
  44426b:	48 89 f9 	movq	%rdi, %rcx
  44426e:	48 8d 35 4b 1a 00 00 	leaq	6731(%rip), %rsi
  444275:	ff d0 	callq	*%rax
  444277:	48 8d 0d e2 37 06 00 	leaq	407522(%rip), %rcx
  44427e:	48 8b 01 	movq	(%rcx), %rax
  444281:	48 05 70 03 00 00 	addq	$880, %rax
  444287:	48 89 41 10 	movq	%rax, 16(%rcx)
  44428b:	48 89 41 18 	movq	%rax, 24(%rcx)
  44428f:	eb 2f 	jmp	47 <runtime.rt0_go+0x1b0>
  444291:	48 8d 3d 50 3d 06 00 	leaq	408912(%rip), %rdi
  444298:	e8 63 3c 00 00 	callq	15459 <runtime.settls>
  44429d:	64 48 c7 04 25 f8 ff ff ff 23 01 00 00 	movq	$291, %fs:-8
  4442aa:	48 8b 05 37 3d 06 00 	movq	408887(%rip), %rax
  4442b1:	48 3d 23 01 00 00 	cmpq	$291, %rax
  4442b7:	74 07 	je	7 <runtime.rt0_go+0x1b0>
  4442b9:	89 04 25 00 00 00 00 	movl	%eax, 0
  4442c0:	48 8d 0d 99 37 06 00 	leaq	407449(%rip), %rcx
  4442c7:	64 48 89 0c 25 f8 ff ff ff 	movq	%rcx, %fs:-8
  4442d0:	48 8d 05 89 3c 06 00 	leaq	408713(%rip), %rax
  4442d7:	48 89 08 	movq	%rcx, (%rax)
  4442da:	48 89 41 30 	movq	%rax, 48(%rcx)
  4442de:	fc 	cld
  4442df:	e8 5c af fe ff 	callq	-86180 <runtime.check>
  4442e4:	8b 44 24 10 	movl	16(%rsp), %eax
  4442e8:	89 04 24 	movl	%eax, (%rsp)
  4442eb:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4442f0:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4442f5:	e8 d6 a9 fe ff 	callq	-87594 <runtime.args>
  4442fa:	e8 11 b1 fd ff 	callq	-151279 <runtime.osinit>
  4442ff:	e8 5c f7 fd ff 	callq	-133284 <runtime.schedinit>
  444304:	48 8d 05 35 08 03 00 	leaq	198709(%rip), %rax
  44430b:	50 	pushq	%rax
  44430c:	6a 00 	pushq	$0
  44430e:	e8 dd 5f fe ff 	callq	-106531 <runtime.newproc>
  444313:	58 	popq	%rax
  444314:	58 	popq	%rax
  444315:	e8 36 14 fe ff 	callq	-125898 <runtime.mstart>
  44431a:	c7 04 25 f1 00 00 00 f1 00 00 00 	movl	$241, 241
  444325:	c3 	retq
  444326:	cc 	int3
  444327:	cc 	int3
  444328:	cc 	int3
  444329:	cc 	int3
  44432a:	cc 	int3
  44432b:	cc 	int3
  44432c:	cc 	int3
  44432d:	cc 	int3
  44432e:	cc 	int3
  44432f:	cc 	int3

runtime.asminit:
  444330:	c3 	retq
  444331:	cc 	int3
  444332:	cc 	int3
  444333:	cc 	int3
  444334:	cc 	int3
  444335:	cc 	int3
  444336:	cc 	int3
  444337:	cc 	int3
  444338:	cc 	int3
  444339:	cc 	int3
  44433a:	cc 	int3
  44433b:	cc 	int3
  44433c:	cc 	int3
  44433d:	cc 	int3
  44433e:	cc 	int3
  44433f:	cc 	int3

runtime.gogo:
  444340:	48 83 ec 18 	subq	$24, %rsp
  444344:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  444349:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  44434e:	48 8b 5c 24 20 	movq	32(%rsp), %rbx
  444353:	48 8b 53 10 	movq	16(%rbx), %rdx
  444357:	48 8b 0a 	movq	(%rdx), %rcx
  44435a:	64 48 89 14 25 f8 ff ff ff 	movq	%rdx, %fs:-8
  444363:	48 8b 23 	movq	(%rbx), %rsp
  444366:	48 8b 43 20 	movq	32(%rbx), %rax
  44436a:	48 8b 53 18 	movq	24(%rbx), %rdx
  44436e:	48 8b 6b 30 	movq	48(%rbx), %rbp
  444372:	48 c7 03 00 00 00 00 	movq	$0, (%rbx)
  444379:	48 c7 43 20 00 00 00 00 	movq	$0, 32(%rbx)
  444381:	48 c7 43 18 00 00 00 00 	movq	$0, 24(%rbx)
  444389:	48 c7 43 30 00 00 00 00 	movq	$0, 48(%rbx)
  444391:	48 8b 5b 08 	movq	8(%rbx), %rbx
  444395:	ff e3 	jmpq	*%rbx
  444397:	cc 	int3
  444398:	cc 	int3
  444399:	cc 	int3
  44439a:	cc 	int3
  44439b:	cc 	int3
  44439c:	cc 	int3
  44439d:	cc 	int3
  44439e:	cc 	int3
  44439f:	cc 	int3

runtime.mcall:
  4443a0:	48 8b 7c 24 08 	movq	8(%rsp), %rdi
  4443a5:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4443ae:	48 8b 1c 24 	movq	(%rsp), %rbx
  4443b2:	48 89 58 40 	movq	%rbx, 64(%rax)
  4443b6:	48 8d 5c 24 08 	leaq	8(%rsp), %rbx
  4443bb:	48 89 58 38 	movq	%rbx, 56(%rax)
  4443bf:	48 89 40 48 	movq	%rax, 72(%rax)
  4443c3:	48 89 68 68 	movq	%rbp, 104(%rax)
  4443c7:	64 48 8b 1c 25 f8 ff ff ff 	movq	%fs:-8, %rbx
  4443d0:	48 8b 5b 30 	movq	48(%rbx), %rbx
  4443d4:	48 8b 33 	movq	(%rbx), %rsi
  4443d7:	48 39 c6 	cmpq	%rax, %rsi
  4443da:	75 09 	jne	9 <runtime.mcall+0x45>
  4443dc:	48 8d 05 bd f3 fd ff 	leaq	-134211(%rip), %rax
  4443e3:	ff e0 	jmpq	*%rax
  4443e5:	64 48 89 34 25 f8 ff ff ff 	movq	%rsi, %fs:-8
  4443ee:	48 8b 66 38 	movq	56(%rsi), %rsp
  4443f2:	50 	pushq	%rax
  4443f3:	48 89 fa 	movq	%rdi, %rdx
  4443f6:	48 8b 3f 	movq	(%rdi), %rdi
  4443f9:	ff d7 	callq	*%rdi
  4443fb:	58 	popq	%rax
  4443fc:	48 8d 05 dd f3 fd ff 	leaq	-134179(%rip), %rax
  444403:	ff e0 	jmpq	*%rax
  444405:	c3 	retq
  444406:	cc 	int3
  444407:	cc 	int3
  444408:	cc 	int3
  444409:	cc 	int3
  44440a:	cc 	int3
  44440b:	cc 	int3
  44440c:	cc 	int3
  44440d:	cc 	int3
  44440e:	cc 	int3
  44440f:	cc 	int3

runtime.systemstack_switch:
  444410:	c3 	retq
  444411:	cc 	int3
  444412:	cc 	int3
  444413:	cc 	int3
  444414:	cc 	int3
  444415:	cc 	int3
  444416:	cc 	int3
  444417:	cc 	int3
  444418:	cc 	int3
  444419:	cc 	int3
  44441a:	cc 	int3
  44441b:	cc 	int3
  44441c:	cc 	int3
  44441d:	cc 	int3
  44441e:	cc 	int3
  44441f:	cc 	int3

runtime.systemstack:
  444420:	48 8b 7c 24 08 	movq	8(%rsp), %rdi
  444425:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  44442e:	48 8b 58 30 	movq	48(%rax), %rbx
  444432:	48 8b 53 50 	movq	80(%rbx), %rdx
  444436:	48 39 d0 	cmpq	%rdx, %rax
  444439:	0f 84 84 00 00 00 	je	132 <runtime.systemstack+0xa3>
  44443f:	48 8b 13 	movq	(%rbx), %rdx
  444442:	48 39 d0 	cmpq	%rdx, %rax
  444445:	74 7c 	je	124 <runtime.systemstack+0xa3>
  444447:	4c 8b 83 c0 00 00 00 	movq	192(%rbx), %r8
  44444e:	4c 39 c0 	cmpq	%r8, %rax
  444451:	74 09 	je	9 <runtime.systemstack+0x3c>
  444453:	48 8d 05 e6 32 ff ff 	leaq	-52506(%rip), %rax
  44445a:	ff d0 	callq	*%rax
  44445c:	48 8d 35 ad ff ff ff 	leaq	-83(%rip), %rsi
  444463:	48 89 70 40 	movq	%rsi, 64(%rax)
  444467:	48 89 60 38 	movq	%rsp, 56(%rax)
  44446b:	48 89 40 48 	movq	%rax, 72(%rax)
  44446f:	48 89 68 68 	movq	%rbp, 104(%rax)
  444473:	64 48 89 14 25 f8 ff ff ff 	movq	%rdx, %fs:-8
  44447c:	48 8b 5a 38 	movq	56(%rdx), %rbx
  444480:	48 83 eb 08 	subq	$8, %rbx
  444484:	48 8d 15 c5 12 fe ff 	leaq	-126267(%rip), %rdx
  44448b:	48 89 13 	movq	%rdx, (%rbx)
  44448e:	48 89 dc 	movq	%rbx, %rsp
  444491:	48 89 fa 	movq	%rdi, %rdx
  444494:	48 8b 3f 	movq	(%rdi), %rdi
  444497:	ff d7 	callq	*%rdi
  444499:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4444a2:	48 8b 58 30 	movq	48(%rax), %rbx
  4444a6:	48 8b 83 c0 00 00 00 	movq	192(%rbx), %rax
  4444ad:	64 48 89 04 25 f8 ff ff ff 	movq	%rax, %fs:-8
  4444b6:	48 8b 60 38 	movq	56(%rax), %rsp
  4444ba:	48 c7 40 38 00 00 00 00 	movq	$0, 56(%rax)
  4444c2:	c3 	retq
  4444c3:	48 89 fa 	movq	%rdi, %rdx
  4444c6:	48 8b 3f 	movq	(%rdi), %rdi
  4444c9:	ff e7 	jmpq	*%rdi
  4444cb:	cc 	int3
  4444cc:	cc 	int3
  4444cd:	cc 	int3
  4444ce:	cc 	int3
  4444cf:	cc 	int3

runtime.morestack:
  4444d0:	64 48 8b 1c 25 f8 ff ff ff 	movq	%fs:-8, %rbx
  4444d9:	48 8b 5b 30 	movq	48(%rbx), %rbx
  4444dd:	48 8b 33 	movq	(%rbx), %rsi
  4444e0:	64 48 39 34 25 f8 ff ff ff 	cmpq	%rsi, %fs:-8
  4444e9:	75 07 	jne	7 <runtime.morestack+0x22>
  4444eb:	e8 80 f3 fd ff 	callq	-134272 <runtime.badmorestackg0>
  4444f0:	cd 03 	int	$3
  4444f2:	48 8b 73 50 	movq	80(%rbx), %rsi
  4444f6:	64 48 39 34 25 f8 ff ff ff 	cmpq	%rsi, %fs:-8
  4444ff:	75 07 	jne	7 <runtime.morestack+0x38>
  444501:	e8 aa f3 fd ff 	callq	-134230 <runtime.badmorestackgsignal>
  444506:	cd 03 	int	$3
  444508:	48 8b 44 24 08 	movq	8(%rsp), %rax
  44450d:	48 89 43 10 	movq	%rax, 16(%rbx)
  444511:	48 8d 44 24 10 	leaq	16(%rsp), %rax
  444516:	48 89 43 08 	movq	%rax, 8(%rbx)
  44451a:	64 48 8b 34 25 f8 ff ff ff 	movq	%fs:-8, %rsi
  444523:	48 89 73 18 	movq	%rsi, 24(%rbx)
  444527:	48 8b 04 24 	movq	(%rsp), %rax
  44452b:	48 89 46 40 	movq	%rax, 64(%rsi)
  44452f:	48 89 76 48 	movq	%rsi, 72(%rsi)
  444533:	48 8d 44 24 08 	leaq	8(%rsp), %rax
  444538:	48 89 46 38 	movq	%rax, 56(%rsi)
  44453c:	48 89 6e 68 	movq	%rbp, 104(%rsi)
  444540:	48 89 56 50 	movq	%rdx, 80(%rsi)
  444544:	48 8b 1b 	movq	(%rbx), %rbx
  444547:	64 48 89 1c 25 f8 ff ff ff 	movq	%rbx, %fs:-8
  444550:	48 8b 63 38 	movq	56(%rbx), %rsp
  444554:	e8 57 17 ff ff 	callq	-59561 <runtime.newstack>
  444559:	48 c7 04 25 03 10 00 00 00 00 00 00 	movq	$0, 4099
  444565:	c3 	retq
  444566:	cc 	int3
  444567:	cc 	int3
  444568:	cc 	int3
  444569:	cc 	int3
  44456a:	cc 	int3
  44456b:	cc 	int3
  44456c:	cc 	int3
  44456d:	cc 	int3
  44456e:	cc 	int3
  44456f:	cc 	int3

runtime.morestack_noctxt:
  444570:	ba 00 00 00 00 	movl	$0, %edx
  444575:	e9 56 ff ff ff 	jmp	-170 <runtime.morestack>
  44457a:	cc 	int3
  44457b:	cc 	int3
  44457c:	cc 	int3
  44457d:	cc 	int3
  44457e:	cc 	int3
  44457f:	cc 	int3

runtime.reflectcall:
  444580:	8b 4c 24 20 	movl	32(%rsp), %ecx
  444584:	48 83 f9 20 	cmpq	$32, %rcx
  444588:	77 09 	ja	9 <runtime.reflectcall+0x13>
  44458a:	48 8d 05 ff 01 00 00 	leaq	511(%rip), %rax
  444591:	ff e0 	jmpq	*%rax
  444593:	48 83 f9 40 	cmpq	$64, %rcx
  444597:	77 09 	ja	9 <runtime.reflectcall+0x22>
  444599:	48 8d 05 70 02 00 00 	leaq	624(%rip), %rax
  4445a0:	ff e0 	jmpq	*%rax
  4445a2:	48 81 f9 80 00 00 00 	cmpq	$128, %rcx
  4445a9:	77 09 	ja	9 <runtime.reflectcall+0x34>
  4445ab:	48 8d 05 de 02 00 00 	leaq	734(%rip), %rax
  4445b2:	ff e0 	jmpq	*%rax
  4445b4:	48 81 f9 00 01 00 00 	cmpq	$256, %rcx
  4445bb:	77 09 	ja	9 <runtime.reflectcall+0x46>
  4445bd:	48 8d 05 7c 03 00 00 	leaq	892(%rip), %rax
  4445c4:	ff e0 	jmpq	*%rax
  4445c6:	48 81 f9 00 02 00 00 	cmpq	$512, %rcx
  4445cd:	77 09 	ja	9 <runtime.reflectcall+0x58>
  4445cf:	48 8d 05 1a 04 00 00 	leaq	1050(%rip), %rax
  4445d6:	ff e0 	jmpq	*%rax
  4445d8:	48 81 f9 00 04 00 00 	cmpq	$1024, %rcx
  4445df:	77 09 	ja	9 <runtime.reflectcall+0x6a>
  4445e1:	48 8d 05 b8 04 00 00 	leaq	1208(%rip), %rax
  4445e8:	ff e0 	jmpq	*%rax
  4445ea:	48 81 f9 00 08 00 00 	cmpq	$2048, %rcx
  4445f1:	77 09 	ja	9 <runtime.reflectcall+0x7c>
  4445f3:	48 8d 05 56 05 00 00 	leaq	1366(%rip), %rax
  4445fa:	ff e0 	jmpq	*%rax
  4445fc:	48 81 f9 00 10 00 00 	cmpq	$4096, %rcx
  444603:	77 09 	ja	9 <runtime.reflectcall+0x8e>
  444605:	48 8d 05 f4 05 00 00 	leaq	1524(%rip), %rax
  44460c:	ff e0 	jmpq	*%rax
  44460e:	48 81 f9 00 20 00 00 	cmpq	$8192, %rcx
  444615:	77 09 	ja	9 <runtime.reflectcall+0xa0>
  444617:	48 8d 05 b2 06 00 00 	leaq	1714(%rip), %rax
  44461e:	ff e0 	jmpq	*%rax
  444620:	48 81 f9 00 40 00 00 	cmpq	$16384, %rcx
  444627:	77 09 	ja	9 <runtime.reflectcall+0xb2>
  444629:	48 8d 05 70 07 00 00 	leaq	1904(%rip), %rax
  444630:	ff e0 	jmpq	*%rax
  444632:	48 81 f9 00 80 00 00 	cmpq	$32768, %rcx
  444639:	77 09 	ja	9 <runtime.reflectcall+0xc4>
  44463b:	48 8d 05 2e 08 00 00 	leaq	2094(%rip), %rax
  444642:	ff e0 	jmpq	*%rax
  444644:	48 81 f9 00 00 01 00 	cmpq	$65536, %rcx
  44464b:	77 09 	ja	9 <runtime.reflectcall+0xd6>
  44464d:	48 8d 05 ec 08 00 00 	leaq	2284(%rip), %rax
  444654:	ff e0 	jmpq	*%rax
  444656:	48 81 f9 00 00 02 00 	cmpq	$131072, %rcx
  44465d:	77 09 	ja	9 <runtime.reflectcall+0xe8>
  44465f:	48 8d 05 aa 09 00 00 	leaq	2474(%rip), %rax
  444666:	ff e0 	jmpq	*%rax
  444668:	48 81 f9 00 00 04 00 	cmpq	$262144, %rcx
  44466f:	77 09 	ja	9 <runtime.reflectcall+0xfa>
  444671:	48 8d 05 68 0a 00 00 	leaq	2664(%rip), %rax
  444678:	ff e0 	jmpq	*%rax
  44467a:	48 81 f9 00 00 08 00 	cmpq	$524288, %rcx
  444681:	77 09 	ja	9 <runtime.reflectcall+0x10c>
  444683:	48 8d 05 26 0b 00 00 	leaq	2854(%rip), %rax
  44468a:	ff e0 	jmpq	*%rax
  44468c:	48 81 f9 00 00 10 00 	cmpq	$1048576, %rcx
  444693:	77 09 	ja	9 <runtime.reflectcall+0x11e>
  444695:	48 8d 05 e4 0b 00 00 	leaq	3044(%rip), %rax
  44469c:	ff e0 	jmpq	*%rax
  44469e:	48 81 f9 00 00 20 00 	cmpq	$2097152, %rcx
  4446a5:	77 09 	ja	9 <runtime.reflectcall+0x130>
  4446a7:	48 8d 05 a2 0c 00 00 	leaq	3234(%rip), %rax
  4446ae:	ff e0 	jmpq	*%rax
  4446b0:	48 81 f9 00 00 40 00 	cmpq	$4194304, %rcx
  4446b7:	77 09 	ja	9 <runtime.reflectcall+0x142>
  4446b9:	48 8d 05 60 0d 00 00 	leaq	3424(%rip), %rax
  4446c0:	ff e0 	jmpq	*%rax
  4446c2:	48 81 f9 00 00 80 00 	cmpq	$8388608, %rcx
  4446c9:	77 09 	ja	9 <runtime.reflectcall+0x154>
  4446cb:	48 8d 05 1e 0e 00 00 	leaq	3614(%rip), %rax
  4446d2:	ff e0 	jmpq	*%rax
  4446d4:	48 81 f9 00 00 00 01 	cmpq	$16777216, %rcx
  4446db:	77 09 	ja	9 <runtime.reflectcall+0x166>
  4446dd:	48 8d 05 dc 0e 00 00 	leaq	3804(%rip), %rax
  4446e4:	ff e0 	jmpq	*%rax
  4446e6:	48 81 f9 00 00 00 02 	cmpq	$33554432, %rcx
  4446ed:	77 09 	ja	9 <runtime.reflectcall+0x178>
  4446ef:	48 8d 05 9a 0f 00 00 	leaq	3994(%rip), %rax
  4446f6:	ff e0 	jmpq	*%rax
  4446f8:	48 81 f9 00 00 00 04 	cmpq	$67108864, %rcx
  4446ff:	77 09 	ja	9 <runtime.reflectcall+0x18a>
  444701:	48 8d 05 58 10 00 00 	leaq	4184(%rip), %rax
  444708:	ff e0 	jmpq	*%rax
  44470a:	48 81 f9 00 00 00 08 	cmpq	$134217728, %rcx
  444711:	77 09 	ja	9 <runtime.reflectcall+0x19c>
  444713:	48 8d 05 16 11 00 00 	leaq	4374(%rip), %rax
  44471a:	ff e0 	jmpq	*%rax
  44471c:	48 81 f9 00 00 00 10 	cmpq	$268435456, %rcx
  444723:	77 09 	ja	9 <runtime.reflectcall+0x1ae>
  444725:	48 8d 05 d4 11 00 00 	leaq	4564(%rip), %rax
  44472c:	ff e0 	jmpq	*%rax
  44472e:	48 81 f9 00 00 00 20 	cmpq	$536870912, %rcx
  444735:	77 09 	ja	9 <runtime.reflectcall+0x1c0>
  444737:	48 8d 05 92 12 00 00 	leaq	4754(%rip), %rax
  44473e:	ff e0 	jmpq	*%rax
  444740:	48 81 f9 00 00 00 40 	cmpq	$1073741824, %rcx
  444747:	77 09 	ja	9 <runtime.reflectcall+0x1d2>
  444749:	48 8d 05 50 13 00 00 	leaq	4944(%rip), %rax
  444750:	ff e0 	jmpq	*%rax
  444752:	48 8d 05 c7 f0 fd ff 	leaq	-134969(%rip), %rax
  444759:	ff e0 	jmpq	*%rax
  44475b:	cc 	int3
  44475c:	cc 	int3
  44475d:	cc 	int3
  44475e:	cc 	int3
  44475f:	cc 	int3

callRet:
  444760:	48 83 ec 28 	subq	$40, %rsp
  444764:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  444769:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44476e:	48 89 14 24 	movq	%rdx, (%rsp)
  444772:	48 89 7c 24 08 	movq	%rdi, 8(%rsp)
  444777:	48 89 74 24 10 	movq	%rsi, 16(%rsp)
  44477c:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  444781:	e8 ba 73 fc ff 	callq	-232518 <runtime.reflectcallmove>
  444786:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44478b:	48 83 c4 28 	addq	$40, %rsp
  44478f:	c3 	retq

runtime.call32:
  444790:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  444799:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44479d:	76 59 	jbe	89 <runtime.call32+0x68>
  44479f:	48 83 ec 28 	subq	$40, %rsp
  4447a3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  4447a8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  4447ad:	48 8b 59 20 	movq	32(%rcx), %rbx
  4447b1:	48 85 db 	testq	%rbx, %rbx
  4447b4:	75 49 	jne	73 <runtime.call32+0x6f>
  4447b6:	48 8b 74 24 40 	movq	64(%rsp), %rsi
  4447bb:	8b 4c 24 48 	movl	72(%rsp), %ecx
  4447bf:	48 89 e7 	movq	%rsp, %rdi
  4447c2:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  4447c4:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  4447c9:	ff 12 	callq	*(%rdx)
  4447cb:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  4447d0:	48 8b 7c 24 40 	movq	64(%rsp), %rdi
  4447d5:	8b 4c 24 48 	movl	72(%rsp), %ecx
  4447d9:	8b 5c 24 4c 	movl	76(%rsp), %ebx
  4447dd:	48 89 e6 	movq	%rsp, %rsi
  4447e0:	48 01 df 	addq	%rbx, %rdi
  4447e3:	48 01 de 	addq	%rbx, %rsi
  4447e6:	48 29 d9 	subq	%rbx, %rcx
  4447e9:	e8 72 ff ff ff 	callq	-142 <callRet>
  4447ee:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4447f3:	48 83 c4 28 	addq	$40, %rsp
  4447f7:	c3 	retq
  4447f8:	e8 73 fd ff ff 	callq	-653 <runtime.morestack_noctxt>
  4447fd:	eb 91 	jmp	-111 <runtime.call32>
  4447ff:	48 8d 7c 24 30 	leaq	48(%rsp), %rdi
  444804:	48 39 3b 	cmpq	%rdi, (%rbx)
  444807:	75 ad 	jne	-83 <runtime.call32+0x26>
  444809:	48 89 23 	movq	%rsp, (%rbx)
  44480c:	eb a8 	jmp	-88 <runtime.call32+0x26>
  44480e:	cc 	int3
  44480f:	cc 	int3

runtime.call64:
  444810:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  444819:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44481d:	76 59 	jbe	89 <runtime.call64+0x68>
  44481f:	48 83 ec 48 	subq	$72, %rsp
  444823:	48 89 6c 24 40 	movq	%rbp, 64(%rsp)
  444828:	48 8d 6c 24 40 	leaq	64(%rsp), %rbp
  44482d:	48 8b 59 20 	movq	32(%rcx), %rbx
  444831:	48 85 db 	testq	%rbx, %rbx
  444834:	75 49 	jne	73 <runtime.call64+0x6f>
  444836:	48 8b 74 24 60 	movq	96(%rsp), %rsi
  44483b:	8b 4c 24 68 	movl	104(%rsp), %ecx
  44483f:	48 89 e7 	movq	%rsp, %rdi
  444842:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  444844:	48 8b 54 24 58 	movq	88(%rsp), %rdx
  444849:	ff 12 	callq	*(%rdx)
  44484b:	48 8b 54 24 50 	movq	80(%rsp), %rdx
  444850:	48 8b 7c 24 60 	movq	96(%rsp), %rdi
  444855:	8b 4c 24 68 	movl	104(%rsp), %ecx
  444859:	8b 5c 24 6c 	movl	108(%rsp), %ebx
  44485d:	48 89 e6 	movq	%rsp, %rsi
  444860:	48 01 df 	addq	%rbx, %rdi
  444863:	48 01 de 	addq	%rbx, %rsi
  444866:	48 29 d9 	subq	%rbx, %rcx
  444869:	e8 f2 fe ff ff 	callq	-270 <callRet>
  44486e:	48 8b 6c 24 40 	movq	64(%rsp), %rbp
  444873:	48 83 c4 48 	addq	$72, %rsp
  444877:	c3 	retq
  444878:	e8 f3 fc ff ff 	callq	-781 <runtime.morestack_noctxt>
  44487d:	eb 91 	jmp	-111 <runtime.call64>
  44487f:	48 8d 7c 24 50 	leaq	80(%rsp), %rdi
  444884:	48 39 3b 	cmpq	%rdi, (%rbx)
  444887:	75 ad 	jne	-83 <runtime.call64+0x26>
  444889:	48 89 23 	movq	%rsp, (%rbx)
  44488c:	eb a8 	jmp	-88 <runtime.call64+0x26>
  44488e:	cc 	int3
  44488f:	cc 	int3

runtime.call128:
  444890:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  444899:	48 8d 44 24 f8 	leaq	-8(%rsp), %rax
  44489e:	48 3b 41 10 	cmpq	16(%rcx), %rax
  4448a2:	76 7d 	jbe	125 <runtime.call128+0x91>
  4448a4:	48 81 ec 88 00 00 00 	subq	$136, %rsp
  4448ab:	48 89 ac 24 80 00 00 00 	movq	%rbp, 128(%rsp)
  4448b3:	48 8d ac 24 80 00 00 00 	leaq	128(%rsp), %rbp
  4448bb:	48 8b 59 20 	movq	32(%rcx), %rbx
  4448bf:	48 85 db 	testq	%rbx, %rbx
  4448c2:	75 67 	jne	103 <runtime.call128+0x9b>
  4448c4:	48 8b b4 24 a0 00 00 00 	movq	160(%rsp), %rsi
  4448cc:	8b 8c 24 a8 00 00 00 	movl	168(%rsp), %ecx
  4448d3:	48 89 e7 	movq	%rsp, %rdi
  4448d6:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  4448d8:	48 8b 94 24 98 00 00 00 	movq	152(%rsp), %rdx
  4448e0:	ff 12 	callq	*(%rdx)
  4448e2:	48 8b 94 24 90 00 00 00 	movq	144(%rsp), %rdx
  4448ea:	48 8b bc 24 a0 00 00 00 	movq	160(%rsp), %rdi
  4448f2:	8b 8c 24 a8 00 00 00 	movl	168(%rsp), %ecx
  4448f9:	8b 9c 24 ac 00 00 00 	movl	172(%rsp), %ebx
  444900:	48 89 e6 	movq	%rsp, %rsi
  444903:	48 01 df 	addq	%rbx, %rdi
  444906:	48 01 de 	addq	%rbx, %rsi
  444909:	48 29 d9 	subq	%rbx, %rcx
  44490c:	e8 4f fe ff ff 	callq	-433 <callRet>
  444911:	48 8b ac 24 80 00 00 00 	movq	128(%rsp), %rbp
  444919:	48 81 c4 88 00 00 00 	addq	$136, %rsp
  444920:	c3 	retq
  444921:	e8 4a fc ff ff 	callq	-950 <runtime.morestack_noctxt>
  444926:	e9 65 ff ff ff 	jmp	-155 <runtime.call128>
  44492b:	48 8d bc 24 90 00 00 00 	leaq	144(%rsp), %rdi
  444933:	48 39 3b 	cmpq	%rdi, (%rbx)
  444936:	75 8c 	jne	-116 <runtime.call128+0x34>
  444938:	48 89 23 	movq	%rsp, (%rbx)
  44493b:	eb 87 	jmp	-121 <runtime.call128+0x34>
  44493d:	cc 	int3
  44493e:	cc 	int3
  44493f:	cc 	int3

runtime.call256:
  444940:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  444949:	48 8d 84 24 78 ff ff ff 	leaq	-136(%rsp), %rax
  444951:	48 3b 41 10 	cmpq	16(%rcx), %rax
  444955:	76 7d 	jbe	125 <runtime.call256+0x94>
  444957:	48 81 ec 08 01 00 00 	subq	$264, %rsp
  44495e:	48 89 ac 24 00 01 00 00 	movq	%rbp, 256(%rsp)
  444966:	48 8d ac 24 00 01 00 00 	leaq	256(%rsp), %rbp
  44496e:	48 8b 59 20 	movq	32(%rcx), %rbx
  444972:	48 85 db 	testq	%rbx, %rbx
  444975:	75 67 	jne	103 <runtime.call256+0x9e>
  444977:	48 8b b4 24 20 01 00 00 	movq	288(%rsp), %rsi
  44497f:	8b 8c 24 28 01 00 00 	movl	296(%rsp), %ecx
  444986:	48 89 e7 	movq	%rsp, %rdi
  444989:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  44498b:	48 8b 94 24 18 01 00 00 	movq	280(%rsp), %rdx
  444993:	ff 12 	callq	*(%rdx)
  444995:	48 8b 94 24 10 01 00 00 	movq	272(%rsp), %rdx
  44499d:	48 8b bc 24 20 01 00 00 	movq	288(%rsp), %rdi
  4449a5:	8b 8c 24 28 01 00 00 	movl	296(%rsp), %ecx
  4449ac:	8b 9c 24 2c 01 00 00 	movl	300(%rsp), %ebx
  4449b3:	48 89 e6 	movq	%rsp, %rsi
  4449b6:	48 01 df 	addq	%rbx, %rdi
  4449b9:	48 01 de 	addq	%rbx, %rsi
  4449bc:	48 29 d9 	subq	%rbx, %rcx
  4449bf:	e8 9c fd ff ff 	callq	-612 <callRet>
  4449c4:	48 8b ac 24 00 01 00 00 	movq	256(%rsp), %rbp
  4449cc:	48 81 c4 08 01 00 00 	addq	$264, %rsp
  4449d3:	c3 	retq
  4449d4:	e8 97 fb ff ff 	callq	-1129 <runtime.morestack_noctxt>
  4449d9:	e9 62 ff ff ff 	jmp	-158 <runtime.call256>
  4449de:	48 8d bc 24 10 01 00 00 	leaq	272(%rsp), %rdi
  4449e6:	48 39 3b 	cmpq	%rdi, (%rbx)
  4449e9:	75 8c 	jne	-116 <runtime.call256+0x37>
  4449eb:	48 89 23 	movq	%rsp, (%rbx)
  4449ee:	eb 87 	jmp	-121 <runtime.call256+0x37>

runtime.call512:
  4449f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4449f9:	48 8d 84 24 78 fe ff ff 	leaq	-392(%rsp), %rax
  444a01:	48 3b 41 10 	cmpq	16(%rcx), %rax
  444a05:	76 7d 	jbe	125 <runtime.call512+0x94>
  444a07:	48 81 ec 08 02 00 00 	subq	$520, %rsp
  444a0e:	48 89 ac 24 00 02 00 00 	movq	%rbp, 512(%rsp)
  444a16:	48 8d ac 24 00 02 00 00 	leaq	512(%rsp), %rbp
  444a1e:	48 8b 59 20 	movq	32(%rcx), %rbx
  444a22:	48 85 db 	testq	%rbx, %rbx
  444a25:	75 67 	jne	103 <runtime.call512+0x9e>
  444a27:	48 8b b4 24 20 02 00 00 	movq	544(%rsp), %rsi
  444a2f:	8b 8c 24 28 02 00 00 	movl	552(%rsp), %ecx
  444a36:	48 89 e7 	movq	%rsp, %rdi
  444a39:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  444a3b:	48 8b 94 24 18 02 00 00 	movq	536(%rsp), %rdx
  444a43:	ff 12 	callq	*(%rdx)
  444a45:	48 8b 94 24 10 02 00 00 	movq	528(%rsp), %rdx
  444a4d:	48 8b bc 24 20 02 00 00 	movq	544(%rsp), %rdi
  444a55:	8b 8c 24 28 02 00 00 	movl	552(%rsp), %ecx
  444a5c:	8b 9c 24 2c 02 00 00 	movl	556(%rsp), %ebx
  444a63:	48 89 e6 	movq	%rsp, %rsi
  444a66:	48 01 df 	addq	%rbx, %rdi
  444a69:	48 01 de 	addq	%rbx, %rsi
  444a6c:	48 29 d9 	subq	%rbx, %rcx
  444a6f:	e8 ec fc ff ff 	callq	-788 <callRet>
  444a74:	48 8b ac 24 00 02 00 00 	movq	512(%rsp), %rbp
  444a7c:	48 81 c4 08 02 00 00 	addq	$520, %rsp
  444a83:	c3 	retq
  444a84:	e8 e7 fa ff ff 	callq	-1305 <runtime.morestack_noctxt>
  444a89:	e9 62 ff ff ff 	jmp	-158 <runtime.call512>
  444a8e:	48 8d bc 24 10 02 00 00 	leaq	528(%rsp), %rdi
  444a96:	48 39 3b 	cmpq	%rdi, (%rbx)
  444a99:	75 8c 	jne	-116 <runtime.call512+0x37>
  444a9b:	48 89 23 	movq	%rsp, (%rbx)
  444a9e:	eb 87 	jmp	-121 <runtime.call512+0x37>

runtime.call1024:
  444aa0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  444aa9:	48 8d 84 24 78 fc ff ff 	leaq	-904(%rsp), %rax
  444ab1:	48 3b 41 10 	cmpq	16(%rcx), %rax
  444ab5:	76 7d 	jbe	125 <runtime.call1024+0x94>
  444ab7:	48 81 ec 08 04 00 00 	subq	$1032, %rsp
  444abe:	48 89 ac 24 00 04 00 00 	movq	%rbp, 1024(%rsp)
  444ac6:	48 8d ac 24 00 04 00 00 	leaq	1024(%rsp), %rbp
  444ace:	48 8b 59 20 	movq	32(%rcx), %rbx
  444ad2:	48 85 db 	testq	%rbx, %rbx
  444ad5:	75 67 	jne	103 <runtime.call1024+0x9e>
  444ad7:	48 8b b4 24 20 04 00 00 	movq	1056(%rsp), %rsi
  444adf:	8b 8c 24 28 04 00 00 	movl	1064(%rsp), %ecx
  444ae6:	48 89 e7 	movq	%rsp, %rdi
  444ae9:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  444aeb:	48 8b 94 24 18 04 00 00 	movq	1048(%rsp), %rdx
  444af3:	ff 12 	callq	*(%rdx)
  444af5:	48 8b 94 24 10 04 00 00 	movq	1040(%rsp), %rdx
  444afd:	48 8b bc 24 20 04 00 00 	movq	1056(%rsp), %rdi
  444b05:	8b 8c 24 28 04 00 00 	movl	1064(%rsp), %ecx
  444b0c:	8b 9c 24 2c 04 00 00 	movl	1068(%rsp), %ebx
  444b13:	48 89 e6 	movq	%rsp, %rsi
  444b16:	48 01 df 	addq	%rbx, %rdi
  444b19:	48 01 de 	addq	%rbx, %rsi
  444b1c:	48 29 d9 	subq	%rbx, %rcx
  444b1f:	e8 3c fc ff ff 	callq	-964 <callRet>
  444b24:	48 8b ac 24 00 04 00 00 	movq	1024(%rsp), %rbp
  444b2c:	48 81 c4 08 04 00 00 	addq	$1032, %rsp
  444b33:	c3 	retq
  444b34:	e8 37 fa ff ff 	callq	-1481 <runtime.morestack_noctxt>
  444b39:	e9 62 ff ff ff 	jmp	-158 <runtime.call1024>
  444b3e:	48 8d bc 24 10 04 00 00 	leaq	1040(%rsp), %rdi
  444b46:	48 39 3b 	cmpq	%rdi, (%rbx)
  444b49:	75 8c 	jne	-116 <runtime.call1024+0x37>
  444b4b:	48 89 23 	movq	%rsp, (%rbx)
  444b4e:	eb 87 	jmp	-121 <runtime.call1024+0x37>

runtime.call2048:
  444b50:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  444b59:	48 8d 84 24 78 f8 ff ff 	leaq	-1928(%rsp), %rax
  444b61:	48 3b 41 10 	cmpq	16(%rcx), %rax
  444b65:	76 7d 	jbe	125 <runtime.call2048+0x94>
  444b67:	48 81 ec 08 08 00 00 	subq	$2056, %rsp
  444b6e:	48 89 ac 24 00 08 00 00 	movq	%rbp, 2048(%rsp)
  444b76:	48 8d ac 24 00 08 00 00 	leaq	2048(%rsp), %rbp
  444b7e:	48 8b 59 20 	movq	32(%rcx), %rbx
  444b82:	48 85 db 	testq	%rbx, %rbx
  444b85:	75 67 	jne	103 <runtime.call2048+0x9e>
  444b87:	48 8b b4 24 20 08 00 00 	movq	2080(%rsp), %rsi
  444b8f:	8b 8c 24 28 08 00 00 	movl	2088(%rsp), %ecx
  444b96:	48 89 e7 	movq	%rsp, %rdi
  444b99:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  444b9b:	48 8b 94 24 18 08 00 00 	movq	2072(%rsp), %rdx
  444ba3:	ff 12 	callq	*(%rdx)
  444ba5:	48 8b 94 24 10 08 00 00 	movq	2064(%rsp), %rdx
  444bad:	48 8b bc 24 20 08 00 00 	movq	2080(%rsp), %rdi
  444bb5:	8b 8c 24 28 08 00 00 	movl	2088(%rsp), %ecx
  444bbc:	8b 9c 24 2c 08 00 00 	movl	2092(%rsp), %ebx
  444bc3:	48 89 e6 	movq	%rsp, %rsi
  444bc6:	48 01 df 	addq	%rbx, %rdi
  444bc9:	48 01 de 	addq	%rbx, %rsi
  444bcc:	48 29 d9 	subq	%rbx, %rcx
  444bcf:	e8 8c fb ff ff 	callq	-1140 <callRet>
  444bd4:	48 8b ac 24 00 08 00 00 	movq	2048(%rsp), %rbp
  444bdc:	48 81 c4 08 08 00 00 	addq	$2056, %rsp
  444be3:	c3 	retq
  444be4:	e8 87 f9 ff ff 	callq	-1657 <runtime.morestack_noctxt>
  444be9:	e9 62 ff ff ff 	jmp	-158 <runtime.call2048>
  444bee:	48 8d bc 24 10 08 00 00 	leaq	2064(%rsp), %rdi
  444bf6:	48 39 3b 	cmpq	%rdi, (%rbx)
  444bf9:	75 8c 	jne	-116 <runtime.call2048+0x37>
  444bfb:	48 89 23 	movq	%rsp, (%rbx)
  444bfe:	eb 87 	jmp	-121 <runtime.call2048+0x37>

runtime.call4096:
  444c00:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  444c09:	48 8b 71 10 	movq	16(%rcx), %rsi
  444c0d:	48 81 fe de fa ff ff 	cmpq	$-1314, %rsi
  444c14:	0f 84 90 00 00 00 	je	144 <runtime.call4096+0xaa>
  444c1a:	48 8d 84 24 70 03 00 00 	leaq	880(%rsp), %rax
  444c22:	48 29 f0 	subq	%rsi, %rax
  444c25:	48 3d f8 12 00 00 	cmpq	$4856, %rax
  444c2b:	76 7d 	jbe	125 <runtime.call4096+0xaa>
  444c2d:	48 81 ec 08 10 00 00 	subq	$4104, %rsp
  444c34:	48 89 ac 24 00 10 00 00 	movq	%rbp, 4096(%rsp)
  444c3c:	48 8d ac 24 00 10 00 00 	leaq	4096(%rsp), %rbp
  444c44:	48 8b 59 20 	movq	32(%rcx), %rbx
  444c48:	48 85 db 	testq	%rbx, %rbx
  444c4b:	75 67 	jne	103 <runtime.call4096+0xb4>
  444c4d:	48 8b b4 24 20 10 00 00 	movq	4128(%rsp), %rsi
  444c55:	8b 8c 24 28 10 00 00 	movl	4136(%rsp), %ecx
  444c5c:	48 89 e7 	movq	%rsp, %rdi
  444c5f:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  444c61:	48 8b 94 24 18 10 00 00 	movq	4120(%rsp), %rdx
  444c69:	ff 12 	callq	*(%rdx)
  444c6b:	48 8b 94 24 10 10 00 00 	movq	4112(%rsp), %rdx
  444c73:	48 8b bc 24 20 10 00 00 	movq	4128(%rsp), %rdi
  444c7b:	8b 8c 24 28 10 00 00 	movl	4136(%rsp), %ecx
  444c82:	8b 9c 24 2c 10 00 00 	movl	4140(%rsp), %ebx
  444c89:	48 89 e6 	movq	%rsp, %rsi
  444c8c:	48 01 df 	addq	%rbx, %rdi
  444c8f:	48 01 de 	addq	%rbx, %rsi
  444c92:	48 29 d9 	subq	%rbx, %rcx
  444c95:	e8 c6 fa ff ff 	callq	-1338 <callRet>
  444c9a:	48 8b ac 24 00 10 00 00 	movq	4096(%rsp), %rbp
  444ca2:	48 81 c4 08 10 00 00 	addq	$4104, %rsp
  444ca9:	c3 	retq
  444caa:	e8 c1 f8 ff ff 	callq	-1855 <runtime.morestack_noctxt>
  444caf:	e9 4c ff ff ff 	jmp	-180 <runtime.call4096>
  444cb4:	48 8d bc 24 10 10 00 00 	leaq	4112(%rsp), %rdi
  444cbc:	48 39 3b 	cmpq	%rdi, (%rbx)
  444cbf:	75 8c 	jne	-116 <runtime.call4096+0x4d>
  444cc1:	48 89 23 	movq	%rsp, (%rbx)
  444cc4:	eb 87 	jmp	-121 <runtime.call4096+0x4d>
  444cc6:	cc 	int3
  444cc7:	cc 	int3
  444cc8:	cc 	int3
  444cc9:	cc 	int3
  444cca:	cc 	int3
  444ccb:	cc 	int3
  444ccc:	cc 	int3
  444ccd:	cc 	int3
  444cce:	cc 	int3
  444ccf:	cc 	int3

runtime.call8192:
  444cd0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  444cd9:	48 8b 71 10 	movq	16(%rcx), %rsi
  444cdd:	48 81 fe de fa ff ff 	cmpq	$-1314, %rsi
  444ce4:	0f 84 90 00 00 00 	je	144 <runtime.call8192+0xaa>
  444cea:	48 8d 84 24 70 03 00 00 	leaq	880(%rsp), %rax
  444cf2:	48 29 f0 	subq	%rsi, %rax
  444cf5:	48 3d f8 22 00 00 	cmpq	$8952, %rax
  444cfb:	76 7d 	jbe	125 <runtime.call8192+0xaa>
  444cfd:	48 81 ec 08 20 00 00 	subq	$8200, %rsp
  444d04:	48 89 ac 24 00 20 00 00 	movq	%rbp, 8192(%rsp)
  444d0c:	48 8d ac 24 00 20 00 00 	leaq	8192(%rsp), %rbp
  444d14:	48 8b 59 20 	movq	32(%rcx), %rbx
  444d18:	48 85 db 	testq	%rbx, %rbx
  444d1b:	75 67 	jne	103 <runtime.call8192+0xb4>
  444d1d:	48 8b b4 24 20 20 00 00 	movq	8224(%rsp), %rsi
  444d25:	8b 8c 24 28 20 00 00 	movl	8232(%rsp), %ecx
  444d2c:	48 89 e7 	movq	%rsp, %rdi
  444d2f:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  444d31:	48 8b 94 24 18 20 00 00 	movq	8216(%rsp), %rdx
  444d39:	ff 12 	callq	*(%rdx)
  444d3b:	48 8b 94 24 10 20 00 00 	movq	8208(%rsp), %rdx
  444d43:	48 8b bc 24 20 20 00 00 	movq	8224(%rsp), %rdi
  444d4b:	8b 8c 24 28 20 00 00 	movl	8232(%rsp), %ecx
  444d52:	8b 9c 24 2c 20 00 00 	movl	8236(%rsp), %ebx
  444d59:	48 89 e6 	movq	%rsp, %rsi
  444d5c:	48 01 df 	addq	%rbx, %rdi
  444d5f:	48 01 de 	addq	%rbx, %rsi
  444d62:	48 29 d9 	subq	%rbx, %rcx
  444d65:	e8 f6 f9 ff ff 	callq	-1546 <callRet>
  444d6a:	48 8b ac 24 00 20 00 00 	movq	8192(%rsp), %rbp
  444d72:	48 81 c4 08 20 00 00 	addq	$8200, %rsp
  444d79:	c3 	retq
  444d7a:	e8 f1 f7 ff ff 	callq	-2063 <runtime.morestack_noctxt>
  444d7f:	e9 4c ff ff ff 	jmp	-180 <runtime.call8192>
  444d84:	48 8d bc 24 10 20 00 00 	leaq	8208(%rsp), %rdi
  444d8c:	48 39 3b 	cmpq	%rdi, (%rbx)
  444d8f:	75 8c 	jne	-116 <runtime.call8192+0x4d>
  444d91:	48 89 23 	movq	%rsp, (%rbx)
  444d94:	eb 87 	jmp	-121 <runtime.call8192+0x4d>
  444d96:	cc 	int3
  444d97:	cc 	int3
  444d98:	cc 	int3
  444d99:	cc 	int3
  444d9a:	cc 	int3
  444d9b:	cc 	int3
  444d9c:	cc 	int3
  444d9d:	cc 	int3
  444d9e:	cc 	int3
  444d9f:	cc 	int3

runtime.call16384:
  444da0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  444da9:	48 8b 71 10 	movq	16(%rcx), %rsi
  444dad:	48 81 fe de fa ff ff 	cmpq	$-1314, %rsi
  444db4:	0f 84 90 00 00 00 	je	144 <runtime.call16384+0xaa>
  444dba:	48 8d 84 24 70 03 00 00 	leaq	880(%rsp), %rax
  444dc2:	48 29 f0 	subq	%rsi, %rax
  444dc5:	48 3d f8 42 00 00 	cmpq	$17144, %rax
  444dcb:	76 7d 	jbe	125 <runtime.call16384+0xaa>
  444dcd:	48 81 ec 08 40 00 00 	subq	$16392, %rsp
  444dd4:	48 89 ac 24 00 40 00 00 	movq	%rbp, 16384(%rsp)
  444ddc:	48 8d ac 24 00 40 00 00 	leaq	16384(%rsp), %rbp
  444de4:	48 8b 59 20 	movq	32(%rcx), %rbx
  444de8:	48 85 db 	testq	%rbx, %rbx
  444deb:	75 67 	jne	103 <runtime.call16384+0xb4>
  444ded:	48 8b b4 24 20 40 00 00 	movq	16416(%rsp), %rsi
  444df5:	8b 8c 24 28 40 00 00 	movl	16424(%rsp), %ecx
  444dfc:	48 89 e7 	movq	%rsp, %rdi
  444dff:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  444e01:	48 8b 94 24 18 40 00 00 	movq	16408(%rsp), %rdx
  444e09:	ff 12 	callq	*(%rdx)
  444e0b:	48 8b 94 24 10 40 00 00 	movq	16400(%rsp), %rdx
  444e13:	48 8b bc 24 20 40 00 00 	movq	16416(%rsp), %rdi
  444e1b:	8b 8c 24 28 40 00 00 	movl	16424(%rsp), %ecx
  444e22:	8b 9c 24 2c 40 00 00 	movl	16428(%rsp), %ebx
  444e29:	48 89 e6 	movq	%rsp, %rsi
  444e2c:	48 01 df 	addq	%rbx, %rdi
  444e2f:	48 01 de 	addq	%rbx, %rsi
  444e32:	48 29 d9 	subq	%rbx, %rcx
  444e35:	e8 26 f9 ff ff 	callq	-1754 <callRet>
  444e3a:	48 8b ac 24 00 40 00 00 	movq	16384(%rsp), %rbp
  444e42:	48 81 c4 08 40 00 00 	addq	$16392, %rsp
  444e49:	c3 	retq
  444e4a:	e8 21 f7 ff ff 	callq	-2271 <runtime.morestack_noctxt>
  444e4f:	e9 4c ff ff ff 	jmp	-180 <runtime.call16384>
  444e54:	48 8d bc 24 10 40 00 00 	leaq	16400(%rsp), %rdi
  444e5c:	48 39 3b 	cmpq	%rdi, (%rbx)
  444e5f:	75 8c 	jne	-116 <runtime.call16384+0x4d>
  444e61:	48 89 23 	movq	%rsp, (%rbx)
  444e64:	eb 87 	jmp	-121 <runtime.call16384+0x4d>
  444e66:	cc 	int3
  444e67:	cc 	int3
  444e68:	cc 	int3
  444e69:	cc 	int3
  444e6a:	cc 	int3
  444e6b:	cc 	int3
  444e6c:	cc 	int3
  444e6d:	cc 	int3
  444e6e:	cc 	int3
  444e6f:	cc 	int3

runtime.call32768:
  444e70:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  444e79:	48 8b 71 10 	movq	16(%rcx), %rsi
  444e7d:	48 81 fe de fa ff ff 	cmpq	$-1314, %rsi
  444e84:	0f 84 90 00 00 00 	je	144 <runtime.call32768+0xaa>
  444e8a:	48 8d 84 24 70 03 00 00 	leaq	880(%rsp), %rax
  444e92:	48 29 f0 	subq	%rsi, %rax
  444e95:	48 3d f8 82 00 00 	cmpq	$33528, %rax
  444e9b:	76 7d 	jbe	125 <runtime.call32768+0xaa>
  444e9d:	48 81 ec 08 80 00 00 	subq	$32776, %rsp
  444ea4:	48 89 ac 24 00 80 00 00 	movq	%rbp, 32768(%rsp)
  444eac:	48 8d ac 24 00 80 00 00 	leaq	32768(%rsp), %rbp
  444eb4:	48 8b 59 20 	movq	32(%rcx), %rbx
  444eb8:	48 85 db 	testq	%rbx, %rbx
  444ebb:	75 67 	jne	103 <runtime.call32768+0xb4>
  444ebd:	48 8b b4 24 20 80 00 00 	movq	32800(%rsp), %rsi
  444ec5:	8b 8c 24 28 80 00 00 	movl	32808(%rsp), %ecx
  444ecc:	48 89 e7 	movq	%rsp, %rdi
  444ecf:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  444ed1:	48 8b 94 24 18 80 00 00 	movq	32792(%rsp), %rdx
  444ed9:	ff 12 	callq	*(%rdx)
  444edb:	48 8b 94 24 10 80 00 00 	movq	32784(%rsp), %rdx
  444ee3:	48 8b bc 24 20 80 00 00 	movq	32800(%rsp), %rdi
  444eeb:	8b 8c 24 28 80 00 00 	movl	32808(%rsp), %ecx
  444ef2:	8b 9c 24 2c 80 00 00 	movl	32812(%rsp), %ebx
  444ef9:	48 89 e6 	movq	%rsp, %rsi
  444efc:	48 01 df 	addq	%rbx, %rdi
  444eff:	48 01 de 	addq	%rbx, %rsi
  444f02:	48 29 d9 	subq	%rbx, %rcx
  444f05:	e8 56 f8 ff ff 	callq	-1962 <callRet>
  444f0a:	48 8b ac 24 00 80 00 00 	movq	32768(%rsp), %rbp
  444f12:	48 81 c4 08 80 00 00 	addq	$32776, %rsp
  444f19:	c3 	retq
  444f1a:	e8 51 f6 ff ff 	callq	-2479 <runtime.morestack_noctxt>
  444f1f:	e9 4c ff ff ff 	jmp	-180 <runtime.call32768>
  444f24:	48 8d bc 24 10 80 00 00 	leaq	32784(%rsp), %rdi
  444f2c:	48 39 3b 	cmpq	%rdi, (%rbx)
  444f2f:	75 8c 	jne	-116 <runtime.call32768+0x4d>
  444f31:	48 89 23 	movq	%rsp, (%rbx)
  444f34:	eb 87 	jmp	-121 <runtime.call32768+0x4d>
  444f36:	cc 	int3
  444f37:	cc 	int3
  444f38:	cc 	int3
  444f39:	cc 	int3
  444f3a:	cc 	int3
  444f3b:	cc 	int3
  444f3c:	cc 	int3
  444f3d:	cc 	int3
  444f3e:	cc 	int3
  444f3f:	cc 	int3

runtime.call65536:
  444f40:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  444f49:	48 8b 71 10 	movq	16(%rcx), %rsi
  444f4d:	48 81 fe de fa ff ff 	cmpq	$-1314, %rsi
  444f54:	0f 84 90 00 00 00 	je	144 <runtime.call65536+0xaa>
  444f5a:	48 8d 84 24 70 03 00 00 	leaq	880(%rsp), %rax
  444f62:	48 29 f0 	subq	%rsi, %rax
  444f65:	48 3d f8 02 01 00 	cmpq	$66296, %rax
  444f6b:	76 7d 	jbe	125 <runtime.call65536+0xaa>
  444f6d:	48 81 ec 08 00 01 00 	subq	$65544, %rsp
  444f74:	48 89 ac 24 00 00 01 00 	movq	%rbp, 65536(%rsp)
  444f7c:	48 8d ac 24 00 00 01 00 	leaq	65536(%rsp), %rbp
  444f84:	48 8b 59 20 	movq	32(%rcx), %rbx
  444f88:	48 85 db 	testq	%rbx, %rbx
  444f8b:	75 67 	jne	103 <runtime.call65536+0xb4>
  444f8d:	48 8b b4 24 20 00 01 00 	movq	65568(%rsp), %rsi
  444f95:	8b 8c 24 28 00 01 00 	movl	65576(%rsp), %ecx
  444f9c:	48 89 e7 	movq	%rsp, %rdi
  444f9f:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  444fa1:	48 8b 94 24 18 00 01 00 	movq	65560(%rsp), %rdx
  444fa9:	ff 12 	callq	*(%rdx)
  444fab:	48 8b 94 24 10 00 01 00 	movq	65552(%rsp), %rdx
  444fb3:	48 8b bc 24 20 00 01 00 	movq	65568(%rsp), %rdi
  444fbb:	8b 8c 24 28 00 01 00 	movl	65576(%rsp), %ecx
  444fc2:	8b 9c 24 2c 00 01 00 	movl	65580(%rsp), %ebx
  444fc9:	48 89 e6 	movq	%rsp, %rsi
  444fcc:	48 01 df 	addq	%rbx, %rdi
  444fcf:	48 01 de 	addq	%rbx, %rsi
  444fd2:	48 29 d9 	subq	%rbx, %rcx
  444fd5:	e8 86 f7 ff ff 	callq	-2170 <callRet>
  444fda:	48 8b ac 24 00 00 01 00 	movq	65536(%rsp), %rbp
  444fe2:	48 81 c4 08 00 01 00 	addq	$65544, %rsp
  444fe9:	c3 	retq
  444fea:	e8 81 f5 ff ff 	callq	-2687 <runtime.morestack_noctxt>
  444fef:	e9 4c ff ff ff 	jmp	-180 <runtime.call65536>
  444ff4:	48 8d bc 24 10 00 01 00 	leaq	65552(%rsp), %rdi
  444ffc:	48 39 3b 	cmpq	%rdi, (%rbx)
  444fff:	75 8c 	jne	-116 <runtime.call65536+0x4d>
  445001:	48 89 23 	movq	%rsp, (%rbx)
  445004:	eb 87 	jmp	-121 <runtime.call65536+0x4d>
  445006:	cc 	int3
  445007:	cc 	int3
  445008:	cc 	int3
  445009:	cc 	int3
  44500a:	cc 	int3
  44500b:	cc 	int3
  44500c:	cc 	int3
  44500d:	cc 	int3
  44500e:	cc 	int3
  44500f:	cc 	int3

runtime.call131072:
  445010:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  445019:	48 8b 71 10 	movq	16(%rcx), %rsi
  44501d:	48 81 fe de fa ff ff 	cmpq	$-1314, %rsi
  445024:	0f 84 90 00 00 00 	je	144 <runtime.call131072+0xaa>
  44502a:	48 8d 84 24 70 03 00 00 	leaq	880(%rsp), %rax
  445032:	48 29 f0 	subq	%rsi, %rax
  445035:	48 3d f8 02 02 00 	cmpq	$131832, %rax
  44503b:	76 7d 	jbe	125 <runtime.call131072+0xaa>
  44503d:	48 81 ec 08 00 02 00 	subq	$131080, %rsp
  445044:	48 89 ac 24 00 00 02 00 	movq	%rbp, 131072(%rsp)
  44504c:	48 8d ac 24 00 00 02 00 	leaq	131072(%rsp), %rbp
  445054:	48 8b 59 20 	movq	32(%rcx), %rbx
  445058:	48 85 db 	testq	%rbx, %rbx
  44505b:	75 67 	jne	103 <runtime.call131072+0xb4>
  44505d:	48 8b b4 24 20 00 02 00 	movq	131104(%rsp), %rsi
  445065:	8b 8c 24 28 00 02 00 	movl	131112(%rsp), %ecx
  44506c:	48 89 e7 	movq	%rsp, %rdi
  44506f:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  445071:	48 8b 94 24 18 00 02 00 	movq	131096(%rsp), %rdx
  445079:	ff 12 	callq	*(%rdx)
  44507b:	48 8b 94 24 10 00 02 00 	movq	131088(%rsp), %rdx
  445083:	48 8b bc 24 20 00 02 00 	movq	131104(%rsp), %rdi
  44508b:	8b 8c 24 28 00 02 00 	movl	131112(%rsp), %ecx
  445092:	8b 9c 24 2c 00 02 00 	movl	131116(%rsp), %ebx
  445099:	48 89 e6 	movq	%rsp, %rsi
  44509c:	48 01 df 	addq	%rbx, %rdi
  44509f:	48 01 de 	addq	%rbx, %rsi
  4450a2:	48 29 d9 	subq	%rbx, %rcx
  4450a5:	e8 b6 f6 ff ff 	callq	-2378 <callRet>
  4450aa:	48 8b ac 24 00 00 02 00 	movq	131072(%rsp), %rbp
  4450b2:	48 81 c4 08 00 02 00 	addq	$131080, %rsp
  4450b9:	c3 	retq
  4450ba:	e8 b1 f4 ff ff 	callq	-2895 <runtime.morestack_noctxt>
  4450bf:	e9 4c ff ff ff 	jmp	-180 <runtime.call131072>
  4450c4:	48 8d bc 24 10 00 02 00 	leaq	131088(%rsp), %rdi
  4450cc:	48 39 3b 	cmpq	%rdi, (%rbx)
  4450cf:	75 8c 	jne	-116 <runtime.call131072+0x4d>
  4450d1:	48 89 23 	movq	%rsp, (%rbx)
  4450d4:	eb 87 	jmp	-121 <runtime.call131072+0x4d>
  4450d6:	cc 	int3
  4450d7:	cc 	int3
  4450d8:	cc 	int3
  4450d9:	cc 	int3
  4450da:	cc 	int3
  4450db:	cc 	int3
  4450dc:	cc 	int3
  4450dd:	cc 	int3
  4450de:	cc 	int3
  4450df:	cc 	int3

runtime.call262144:
  4450e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4450e9:	48 8b 71 10 	movq	16(%rcx), %rsi
  4450ed:	48 81 fe de fa ff ff 	cmpq	$-1314, %rsi
  4450f4:	0f 84 90 00 00 00 	je	144 <runtime.call262144+0xaa>
  4450fa:	48 8d 84 24 70 03 00 00 	leaq	880(%rsp), %rax
  445102:	48 29 f0 	subq	%rsi, %rax
  445105:	48 3d f8 02 04 00 	cmpq	$262904, %rax
  44510b:	76 7d 	jbe	125 <runtime.call262144+0xaa>
  44510d:	48 81 ec 08 00 04 00 	subq	$262152, %rsp
  445114:	48 89 ac 24 00 00 04 00 	movq	%rbp, 262144(%rsp)
  44511c:	48 8d ac 24 00 00 04 00 	leaq	262144(%rsp), %rbp
  445124:	48 8b 59 20 	movq	32(%rcx), %rbx
  445128:	48 85 db 	testq	%rbx, %rbx
  44512b:	75 67 	jne	103 <runtime.call262144+0xb4>
  44512d:	48 8b b4 24 20 00 04 00 	movq	262176(%rsp), %rsi
  445135:	8b 8c 24 28 00 04 00 	movl	262184(%rsp), %ecx
  44513c:	48 89 e7 	movq	%rsp, %rdi
  44513f:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  445141:	48 8b 94 24 18 00 04 00 	movq	262168(%rsp), %rdx
  445149:	ff 12 	callq	*(%rdx)
  44514b:	48 8b 94 24 10 00 04 00 	movq	262160(%rsp), %rdx
  445153:	48 8b bc 24 20 00 04 00 	movq	262176(%rsp), %rdi
  44515b:	8b 8c 24 28 00 04 00 	movl	262184(%rsp), %ecx
  445162:	8b 9c 24 2c 00 04 00 	movl	262188(%rsp), %ebx
  445169:	48 89 e6 	movq	%rsp, %rsi
  44516c:	48 01 df 	addq	%rbx, %rdi
  44516f:	48 01 de 	addq	%rbx, %rsi
  445172:	48 29 d9 	subq	%rbx, %rcx
  445175:	e8 e6 f5 ff ff 	callq	-2586 <callRet>
  44517a:	48 8b ac 24 00 00 04 00 	movq	262144(%rsp), %rbp
  445182:	48 81 c4 08 00 04 00 	addq	$262152, %rsp
  445189:	c3 	retq
  44518a:	e8 e1 f3 ff ff 	callq	-3103 <runtime.morestack_noctxt>
  44518f:	e9 4c ff ff ff 	jmp	-180 <runtime.call262144>
  445194:	48 8d bc 24 10 00 04 00 	leaq	262160(%rsp), %rdi
  44519c:	48 39 3b 	cmpq	%rdi, (%rbx)
  44519f:	75 8c 	jne	-116 <runtime.call262144+0x4d>
  4451a1:	48 89 23 	movq	%rsp, (%rbx)
  4451a4:	eb 87 	jmp	-121 <runtime.call262144+0x4d>
  4451a6:	cc 	int3
  4451a7:	cc 	int3
  4451a8:	cc 	int3
  4451a9:	cc 	int3
  4451aa:	cc 	int3
  4451ab:	cc 	int3
  4451ac:	cc 	int3
  4451ad:	cc 	int3
  4451ae:	cc 	int3
  4451af:	cc 	int3

runtime.call524288:
  4451b0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4451b9:	48 8b 71 10 	movq	16(%rcx), %rsi
  4451bd:	48 81 fe de fa ff ff 	cmpq	$-1314, %rsi
  4451c4:	0f 84 90 00 00 00 	je	144 <runtime.call524288+0xaa>
  4451ca:	48 8d 84 24 70 03 00 00 	leaq	880(%rsp), %rax
  4451d2:	48 29 f0 	subq	%rsi, %rax
  4451d5:	48 3d f8 02 08 00 	cmpq	$525048, %rax
  4451db:	76 7d 	jbe	125 <runtime.call524288+0xaa>
  4451dd:	48 81 ec 08 00 08 00 	subq	$524296, %rsp
  4451e4:	48 89 ac 24 00 00 08 00 	movq	%rbp, 524288(%rsp)
  4451ec:	48 8d ac 24 00 00 08 00 	leaq	524288(%rsp), %rbp
  4451f4:	48 8b 59 20 	movq	32(%rcx), %rbx
  4451f8:	48 85 db 	testq	%rbx, %rbx
  4451fb:	75 67 	jne	103 <runtime.call524288+0xb4>
  4451fd:	48 8b b4 24 20 00 08 00 	movq	524320(%rsp), %rsi
  445205:	8b 8c 24 28 00 08 00 	movl	524328(%rsp), %ecx
  44520c:	48 89 e7 	movq	%rsp, %rdi
  44520f:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  445211:	48 8b 94 24 18 00 08 00 	movq	524312(%rsp), %rdx
  445219:	ff 12 	callq	*(%rdx)
  44521b:	48 8b 94 24 10 00 08 00 	movq	524304(%rsp), %rdx
  445223:	48 8b bc 24 20 00 08 00 	movq	524320(%rsp), %rdi
  44522b:	8b 8c 24 28 00 08 00 	movl	524328(%rsp), %ecx
  445232:	8b 9c 24 2c 00 08 00 	movl	524332(%rsp), %ebx
  445239:	48 89 e6 	movq	%rsp, %rsi
  44523c:	48 01 df 	addq	%rbx, %rdi
  44523f:	48 01 de 	addq	%rbx, %rsi
  445242:	48 29 d9 	subq	%rbx, %rcx
  445245:	e8 16 f5 ff ff 	callq	-2794 <callRet>
  44524a:	48 8b ac 24 00 00 08 00 	movq	524288(%rsp), %rbp
  445252:	48 81 c4 08 00 08 00 	addq	$524296, %rsp
  445259:	c3 	retq
  44525a:	e8 11 f3 ff ff 	callq	-3311 <runtime.morestack_noctxt>
  44525f:	e9 4c ff ff ff 	jmp	-180 <runtime.call524288>
  445264:	48 8d bc 24 10 00 08 00 	leaq	524304(%rsp), %rdi
  44526c:	48 39 3b 	cmpq	%rdi, (%rbx)
  44526f:	75 8c 	jne	-116 <runtime.call524288+0x4d>
  445271:	48 89 23 	movq	%rsp, (%rbx)
  445274:	eb 87 	jmp	-121 <runtime.call524288+0x4d>
  445276:	cc 	int3
  445277:	cc 	int3
  445278:	cc 	int3
  445279:	cc 	int3
  44527a:	cc 	int3
  44527b:	cc 	int3
  44527c:	cc 	int3
  44527d:	cc 	int3
  44527e:	cc 	int3
  44527f:	cc 	int3

runtime.call1048576:
  445280:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  445289:	48 8b 71 10 	movq	16(%rcx), %rsi
  44528d:	48 81 fe de fa ff ff 	cmpq	$-1314, %rsi
  445294:	0f 84 90 00 00 00 	je	144 <runtime.call1048576+0xaa>
  44529a:	48 8d 84 24 70 03 00 00 	leaq	880(%rsp), %rax
  4452a2:	48 29 f0 	subq	%rsi, %rax
  4452a5:	48 3d f8 02 10 00 	cmpq	$1049336, %rax
  4452ab:	76 7d 	jbe	125 <runtime.call1048576+0xaa>
  4452ad:	48 81 ec 08 00 10 00 	subq	$1048584, %rsp
  4452b4:	48 89 ac 24 00 00 10 00 	movq	%rbp, 1048576(%rsp)
  4452bc:	48 8d ac 24 00 00 10 00 	leaq	1048576(%rsp), %rbp
  4452c4:	48 8b 59 20 	movq	32(%rcx), %rbx
  4452c8:	48 85 db 	testq	%rbx, %rbx
  4452cb:	75 67 	jne	103 <runtime.call1048576+0xb4>
  4452cd:	48 8b b4 24 20 00 10 00 	movq	1048608(%rsp), %rsi
  4452d5:	8b 8c 24 28 00 10 00 	movl	1048616(%rsp), %ecx
  4452dc:	48 89 e7 	movq	%rsp, %rdi
  4452df:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  4452e1:	48 8b 94 24 18 00 10 00 	movq	1048600(%rsp), %rdx
  4452e9:	ff 12 	callq	*(%rdx)
  4452eb:	48 8b 94 24 10 00 10 00 	movq	1048592(%rsp), %rdx
  4452f3:	48 8b bc 24 20 00 10 00 	movq	1048608(%rsp), %rdi
  4452fb:	8b 8c 24 28 00 10 00 	movl	1048616(%rsp), %ecx
  445302:	8b 9c 24 2c 00 10 00 	movl	1048620(%rsp), %ebx
  445309:	48 89 e6 	movq	%rsp, %rsi
  44530c:	48 01 df 	addq	%rbx, %rdi
  44530f:	48 01 de 	addq	%rbx, %rsi
  445312:	48 29 d9 	subq	%rbx, %rcx
  445315:	e8 46 f4 ff ff 	callq	-3002 <callRet>
  44531a:	48 8b ac 24 00 00 10 00 	movq	1048576(%rsp), %rbp
  445322:	48 81 c4 08 00 10 00 	addq	$1048584, %rsp
  445329:	c3 	retq
  44532a:	e8 41 f2 ff ff 	callq	-3519 <runtime.morestack_noctxt>
  44532f:	e9 4c ff ff ff 	jmp	-180 <runtime.call1048576>
  445334:	48 8d bc 24 10 00 10 00 	leaq	1048592(%rsp), %rdi
  44533c:	48 39 3b 	cmpq	%rdi, (%rbx)
  44533f:	75 8c 	jne	-116 <runtime.call1048576+0x4d>
  445341:	48 89 23 	movq	%rsp, (%rbx)
  445344:	eb 87 	jmp	-121 <runtime.call1048576+0x4d>
  445346:	cc 	int3
  445347:	cc 	int3
  445348:	cc 	int3
  445349:	cc 	int3
  44534a:	cc 	int3
  44534b:	cc 	int3
  44534c:	cc 	int3
  44534d:	cc 	int3
  44534e:	cc 	int3
  44534f:	cc 	int3

runtime.call2097152:
  445350:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  445359:	48 8b 71 10 	movq	16(%rcx), %rsi
  44535d:	48 81 fe de fa ff ff 	cmpq	$-1314, %rsi
  445364:	0f 84 90 00 00 00 	je	144 <runtime.call2097152+0xaa>
  44536a:	48 8d 84 24 70 03 00 00 	leaq	880(%rsp), %rax
  445372:	48 29 f0 	subq	%rsi, %rax
  445375:	48 3d f8 02 20 00 	cmpq	$2097912, %rax
  44537b:	76 7d 	jbe	125 <runtime.call2097152+0xaa>
  44537d:	48 81 ec 08 00 20 00 	subq	$2097160, %rsp
  445384:	48 89 ac 24 00 00 20 00 	movq	%rbp, 2097152(%rsp)
  44538c:	48 8d ac 24 00 00 20 00 	leaq	2097152(%rsp), %rbp
  445394:	48 8b 59 20 	movq	32(%rcx), %rbx
  445398:	48 85 db 	testq	%rbx, %rbx
  44539b:	75 67 	jne	103 <runtime.call2097152+0xb4>
  44539d:	48 8b b4 24 20 00 20 00 	movq	2097184(%rsp), %rsi
  4453a5:	8b 8c 24 28 00 20 00 	movl	2097192(%rsp), %ecx
  4453ac:	48 89 e7 	movq	%rsp, %rdi
  4453af:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  4453b1:	48 8b 94 24 18 00 20 00 	movq	2097176(%rsp), %rdx
  4453b9:	ff 12 	callq	*(%rdx)
  4453bb:	48 8b 94 24 10 00 20 00 	movq	2097168(%rsp), %rdx
  4453c3:	48 8b bc 24 20 00 20 00 	movq	2097184(%rsp), %rdi
  4453cb:	8b 8c 24 28 00 20 00 	movl	2097192(%rsp), %ecx
  4453d2:	8b 9c 24 2c 00 20 00 	movl	2097196(%rsp), %ebx
  4453d9:	48 89 e6 	movq	%rsp, %rsi
  4453dc:	48 01 df 	addq	%rbx, %rdi
  4453df:	48 01 de 	addq	%rbx, %rsi
  4453e2:	48 29 d9 	subq	%rbx, %rcx
  4453e5:	e8 76 f3 ff ff 	callq	-3210 <callRet>
  4453ea:	48 8b ac 24 00 00 20 00 	movq	2097152(%rsp), %rbp
  4453f2:	48 81 c4 08 00 20 00 	addq	$2097160, %rsp
  4453f9:	c3 	retq
  4453fa:	e8 71 f1 ff ff 	callq	-3727 <runtime.morestack_noctxt>
  4453ff:	e9 4c ff ff ff 	jmp	-180 <runtime.call2097152>
  445404:	48 8d bc 24 10 00 20 00 	leaq	2097168(%rsp), %rdi
  44540c:	48 39 3b 	cmpq	%rdi, (%rbx)
  44540f:	75 8c 	jne	-116 <runtime.call2097152+0x4d>
  445411:	48 89 23 	movq	%rsp, (%rbx)
  445414:	eb 87 	jmp	-121 <runtime.call2097152+0x4d>
  445416:	cc 	int3
  445417:	cc 	int3
  445418:	cc 	int3
  445419:	cc 	int3
  44541a:	cc 	int3
  44541b:	cc 	int3
  44541c:	cc 	int3
  44541d:	cc 	int3
  44541e:	cc 	int3
  44541f:	cc 	int3

runtime.call4194304:
  445420:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  445429:	48 8b 71 10 	movq	16(%rcx), %rsi
  44542d:	48 81 fe de fa ff ff 	cmpq	$-1314, %rsi
  445434:	0f 84 90 00 00 00 	je	144 <runtime.call4194304+0xaa>
  44543a:	48 8d 84 24 70 03 00 00 	leaq	880(%rsp), %rax
  445442:	48 29 f0 	subq	%rsi, %rax
  445445:	48 3d f8 02 40 00 	cmpq	$4195064, %rax
  44544b:	76 7d 	jbe	125 <runtime.call4194304+0xaa>
  44544d:	48 81 ec 08 00 40 00 	subq	$4194312, %rsp
  445454:	48 89 ac 24 00 00 40 00 	movq	%rbp, 4194304(%rsp)
  44545c:	48 8d ac 24 00 00 40 00 	leaq	4194304(%rsp), %rbp
  445464:	48 8b 59 20 	movq	32(%rcx), %rbx
  445468:	48 85 db 	testq	%rbx, %rbx
  44546b:	75 67 	jne	103 <runtime.call4194304+0xb4>
  44546d:	48 8b b4 24 20 00 40 00 	movq	4194336(%rsp), %rsi
  445475:	8b 8c 24 28 00 40 00 	movl	4194344(%rsp), %ecx
  44547c:	48 89 e7 	movq	%rsp, %rdi
  44547f:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  445481:	48 8b 94 24 18 00 40 00 	movq	4194328(%rsp), %rdx
  445489:	ff 12 	callq	*(%rdx)
  44548b:	48 8b 94 24 10 00 40 00 	movq	4194320(%rsp), %rdx
  445493:	48 8b bc 24 20 00 40 00 	movq	4194336(%rsp), %rdi
  44549b:	8b 8c 24 28 00 40 00 	movl	4194344(%rsp), %ecx
  4454a2:	8b 9c 24 2c 00 40 00 	movl	4194348(%rsp), %ebx
  4454a9:	48 89 e6 	movq	%rsp, %rsi
  4454ac:	48 01 df 	addq	%rbx, %rdi
  4454af:	48 01 de 	addq	%rbx, %rsi
  4454b2:	48 29 d9 	subq	%rbx, %rcx
  4454b5:	e8 a6 f2 ff ff 	callq	-3418 <callRet>
  4454ba:	48 8b ac 24 00 00 40 00 	movq	4194304(%rsp), %rbp
  4454c2:	48 81 c4 08 00 40 00 	addq	$4194312, %rsp
  4454c9:	c3 	retq
  4454ca:	e8 a1 f0 ff ff 	callq	-3935 <runtime.morestack_noctxt>
  4454cf:	e9 4c ff ff ff 	jmp	-180 <runtime.call4194304>
  4454d4:	48 8d bc 24 10 00 40 00 	leaq	4194320(%rsp), %rdi
  4454dc:	48 39 3b 	cmpq	%rdi, (%rbx)
  4454df:	75 8c 	jne	-116 <runtime.call4194304+0x4d>
  4454e1:	48 89 23 	movq	%rsp, (%rbx)
  4454e4:	eb 87 	jmp	-121 <runtime.call4194304+0x4d>
  4454e6:	cc 	int3
  4454e7:	cc 	int3
  4454e8:	cc 	int3
  4454e9:	cc 	int3
  4454ea:	cc 	int3
  4454eb:	cc 	int3
  4454ec:	cc 	int3
  4454ed:	cc 	int3
  4454ee:	cc 	int3
  4454ef:	cc 	int3

runtime.call8388608:
  4454f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4454f9:	48 8b 71 10 	movq	16(%rcx), %rsi
  4454fd:	48 81 fe de fa ff ff 	cmpq	$-1314, %rsi
  445504:	0f 84 90 00 00 00 	je	144 <runtime.call8388608+0xaa>
  44550a:	48 8d 84 24 70 03 00 00 	leaq	880(%rsp), %rax
  445512:	48 29 f0 	subq	%rsi, %rax
  445515:	48 3d f8 02 80 00 	cmpq	$8389368, %rax
  44551b:	76 7d 	jbe	125 <runtime.call8388608+0xaa>
  44551d:	48 81 ec 08 00 80 00 	subq	$8388616, %rsp
  445524:	48 89 ac 24 00 00 80 00 	movq	%rbp, 8388608(%rsp)
  44552c:	48 8d ac 24 00 00 80 00 	leaq	8388608(%rsp), %rbp
  445534:	48 8b 59 20 	movq	32(%rcx), %rbx
  445538:	48 85 db 	testq	%rbx, %rbx
  44553b:	75 67 	jne	103 <runtime.call8388608+0xb4>
  44553d:	48 8b b4 24 20 00 80 00 	movq	8388640(%rsp), %rsi
  445545:	8b 8c 24 28 00 80 00 	movl	8388648(%rsp), %ecx
  44554c:	48 89 e7 	movq	%rsp, %rdi
  44554f:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  445551:	48 8b 94 24 18 00 80 00 	movq	8388632(%rsp), %rdx
  445559:	ff 12 	callq	*(%rdx)
  44555b:	48 8b 94 24 10 00 80 00 	movq	8388624(%rsp), %rdx
  445563:	48 8b bc 24 20 00 80 00 	movq	8388640(%rsp), %rdi
  44556b:	8b 8c 24 28 00 80 00 	movl	8388648(%rsp), %ecx
  445572:	8b 9c 24 2c 00 80 00 	movl	8388652(%rsp), %ebx
  445579:	48 89 e6 	movq	%rsp, %rsi
  44557c:	48 01 df 	addq	%rbx, %rdi
  44557f:	48 01 de 	addq	%rbx, %rsi
  445582:	48 29 d9 	subq	%rbx, %rcx
  445585:	e8 d6 f1 ff ff 	callq	-3626 <callRet>
  44558a:	48 8b ac 24 00 00 80 00 	movq	8388608(%rsp), %rbp
  445592:	48 81 c4 08 00 80 00 	addq	$8388616, %rsp
  445599:	c3 	retq
  44559a:	e8 d1 ef ff ff 	callq	-4143 <runtime.morestack_noctxt>
  44559f:	e9 4c ff ff ff 	jmp	-180 <runtime.call8388608>
  4455a4:	48 8d bc 24 10 00 80 00 	leaq	8388624(%rsp), %rdi
  4455ac:	48 39 3b 	cmpq	%rdi, (%rbx)
  4455af:	75 8c 	jne	-116 <runtime.call8388608+0x4d>
  4455b1:	48 89 23 	movq	%rsp, (%rbx)
  4455b4:	eb 87 	jmp	-121 <runtime.call8388608+0x4d>
  4455b6:	cc 	int3
  4455b7:	cc 	int3
  4455b8:	cc 	int3
  4455b9:	cc 	int3
  4455ba:	cc 	int3
  4455bb:	cc 	int3
  4455bc:	cc 	int3
  4455bd:	cc 	int3
  4455be:	cc 	int3
  4455bf:	cc 	int3

runtime.call16777216:
  4455c0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4455c9:	48 8b 71 10 	movq	16(%rcx), %rsi
  4455cd:	48 81 fe de fa ff ff 	cmpq	$-1314, %rsi
  4455d4:	0f 84 90 00 00 00 	je	144 <runtime.call16777216+0xaa>
  4455da:	48 8d 84 24 70 03 00 00 	leaq	880(%rsp), %rax
  4455e2:	48 29 f0 	subq	%rsi, %rax
  4455e5:	48 3d f8 02 00 01 	cmpq	$16777976, %rax
  4455eb:	76 7d 	jbe	125 <runtime.call16777216+0xaa>
  4455ed:	48 81 ec 08 00 00 01 	subq	$16777224, %rsp
  4455f4:	48 89 ac 24 00 00 00 01 	movq	%rbp, 16777216(%rsp)
  4455fc:	48 8d ac 24 00 00 00 01 	leaq	16777216(%rsp), %rbp
  445604:	48 8b 59 20 	movq	32(%rcx), %rbx
  445608:	48 85 db 	testq	%rbx, %rbx
  44560b:	75 67 	jne	103 <runtime.call16777216+0xb4>
  44560d:	48 8b b4 24 20 00 00 01 	movq	16777248(%rsp), %rsi
  445615:	8b 8c 24 28 00 00 01 	movl	16777256(%rsp), %ecx
  44561c:	48 89 e7 	movq	%rsp, %rdi
  44561f:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  445621:	48 8b 94 24 18 00 00 01 	movq	16777240(%rsp), %rdx
  445629:	ff 12 	callq	*(%rdx)
  44562b:	48 8b 94 24 10 00 00 01 	movq	16777232(%rsp), %rdx
  445633:	48 8b bc 24 20 00 00 01 	movq	16777248(%rsp), %rdi
  44563b:	8b 8c 24 28 00 00 01 	movl	16777256(%rsp), %ecx
  445642:	8b 9c 24 2c 00 00 01 	movl	16777260(%rsp), %ebx
  445649:	48 89 e6 	movq	%rsp, %rsi
  44564c:	48 01 df 	addq	%rbx, %rdi
  44564f:	48 01 de 	addq	%rbx, %rsi
  445652:	48 29 d9 	subq	%rbx, %rcx
  445655:	e8 06 f1 ff ff 	callq	-3834 <callRet>
  44565a:	48 8b ac 24 00 00 00 01 	movq	16777216(%rsp), %rbp
  445662:	48 81 c4 08 00 00 01 	addq	$16777224, %rsp
  445669:	c3 	retq
  44566a:	e8 01 ef ff ff 	callq	-4351 <runtime.morestack_noctxt>
  44566f:	e9 4c ff ff ff 	jmp	-180 <runtime.call16777216>
  445674:	48 8d bc 24 10 00 00 01 	leaq	16777232(%rsp), %rdi
  44567c:	48 39 3b 	cmpq	%rdi, (%rbx)
  44567f:	75 8c 	jne	-116 <runtime.call16777216+0x4d>
  445681:	48 89 23 	movq	%rsp, (%rbx)
  445684:	eb 87 	jmp	-121 <runtime.call16777216+0x4d>
  445686:	cc 	int3
  445687:	cc 	int3
  445688:	cc 	int3
  445689:	cc 	int3
  44568a:	cc 	int3
  44568b:	cc 	int3
  44568c:	cc 	int3
  44568d:	cc 	int3
  44568e:	cc 	int3
  44568f:	cc 	int3

runtime.call33554432:
  445690:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  445699:	48 8b 71 10 	movq	16(%rcx), %rsi
  44569d:	48 81 fe de fa ff ff 	cmpq	$-1314, %rsi
  4456a4:	0f 84 90 00 00 00 	je	144 <runtime.call33554432+0xaa>
  4456aa:	48 8d 84 24 70 03 00 00 	leaq	880(%rsp), %rax
  4456b2:	48 29 f0 	subq	%rsi, %rax
  4456b5:	48 3d f8 02 00 02 	cmpq	$33555192, %rax
  4456bb:	76 7d 	jbe	125 <runtime.call33554432+0xaa>
  4456bd:	48 81 ec 08 00 00 02 	subq	$33554440, %rsp
  4456c4:	48 89 ac 24 00 00 00 02 	movq	%rbp, 33554432(%rsp)
  4456cc:	48 8d ac 24 00 00 00 02 	leaq	33554432(%rsp), %rbp
  4456d4:	48 8b 59 20 	movq	32(%rcx), %rbx
  4456d8:	48 85 db 	testq	%rbx, %rbx
  4456db:	75 67 	jne	103 <runtime.call33554432+0xb4>
  4456dd:	48 8b b4 24 20 00 00 02 	movq	33554464(%rsp), %rsi
  4456e5:	8b 8c 24 28 00 00 02 	movl	33554472(%rsp), %ecx
  4456ec:	48 89 e7 	movq	%rsp, %rdi
  4456ef:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  4456f1:	48 8b 94 24 18 00 00 02 	movq	33554456(%rsp), %rdx
  4456f9:	ff 12 	callq	*(%rdx)
  4456fb:	48 8b 94 24 10 00 00 02 	movq	33554448(%rsp), %rdx
  445703:	48 8b bc 24 20 00 00 02 	movq	33554464(%rsp), %rdi
  44570b:	8b 8c 24 28 00 00 02 	movl	33554472(%rsp), %ecx
  445712:	8b 9c 24 2c 00 00 02 	movl	33554476(%rsp), %ebx
  445719:	48 89 e6 	movq	%rsp, %rsi
  44571c:	48 01 df 	addq	%rbx, %rdi
  44571f:	48 01 de 	addq	%rbx, %rsi
  445722:	48 29 d9 	subq	%rbx, %rcx
  445725:	e8 36 f0 ff ff 	callq	-4042 <callRet>
  44572a:	48 8b ac 24 00 00 00 02 	movq	33554432(%rsp), %rbp
  445732:	48 81 c4 08 00 00 02 	addq	$33554440, %rsp
  445739:	c3 	retq
  44573a:	e8 31 ee ff ff 	callq	-4559 <runtime.morestack_noctxt>
  44573f:	e9 4c ff ff ff 	jmp	-180 <runtime.call33554432>
  445744:	48 8d bc 24 10 00 00 02 	leaq	33554448(%rsp), %rdi
  44574c:	48 39 3b 	cmpq	%rdi, (%rbx)
  44574f:	75 8c 	jne	-116 <runtime.call33554432+0x4d>
  445751:	48 89 23 	movq	%rsp, (%rbx)
  445754:	eb 87 	jmp	-121 <runtime.call33554432+0x4d>
  445756:	cc 	int3
  445757:	cc 	int3
  445758:	cc 	int3
  445759:	cc 	int3
  44575a:	cc 	int3
  44575b:	cc 	int3
  44575c:	cc 	int3
  44575d:	cc 	int3
  44575e:	cc 	int3
  44575f:	cc 	int3

runtime.call67108864:
  445760:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  445769:	48 8b 71 10 	movq	16(%rcx), %rsi
  44576d:	48 81 fe de fa ff ff 	cmpq	$-1314, %rsi
  445774:	0f 84 90 00 00 00 	je	144 <runtime.call67108864+0xaa>
  44577a:	48 8d 84 24 70 03 00 00 	leaq	880(%rsp), %rax
  445782:	48 29 f0 	subq	%rsi, %rax
  445785:	48 3d f8 02 00 04 	cmpq	$67109624, %rax
  44578b:	76 7d 	jbe	125 <runtime.call67108864+0xaa>
  44578d:	48 81 ec 08 00 00 04 	subq	$67108872, %rsp
  445794:	48 89 ac 24 00 00 00 04 	movq	%rbp, 67108864(%rsp)
  44579c:	48 8d ac 24 00 00 00 04 	leaq	67108864(%rsp), %rbp
  4457a4:	48 8b 59 20 	movq	32(%rcx), %rbx
  4457a8:	48 85 db 	testq	%rbx, %rbx
  4457ab:	75 67 	jne	103 <runtime.call67108864+0xb4>
  4457ad:	48 8b b4 24 20 00 00 04 	movq	67108896(%rsp), %rsi
  4457b5:	8b 8c 24 28 00 00 04 	movl	67108904(%rsp), %ecx
  4457bc:	48 89 e7 	movq	%rsp, %rdi
  4457bf:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  4457c1:	48 8b 94 24 18 00 00 04 	movq	67108888(%rsp), %rdx
  4457c9:	ff 12 	callq	*(%rdx)
  4457cb:	48 8b 94 24 10 00 00 04 	movq	67108880(%rsp), %rdx
  4457d3:	48 8b bc 24 20 00 00 04 	movq	67108896(%rsp), %rdi
  4457db:	8b 8c 24 28 00 00 04 	movl	67108904(%rsp), %ecx
  4457e2:	8b 9c 24 2c 00 00 04 	movl	67108908(%rsp), %ebx
  4457e9:	48 89 e6 	movq	%rsp, %rsi
  4457ec:	48 01 df 	addq	%rbx, %rdi
  4457ef:	48 01 de 	addq	%rbx, %rsi
  4457f2:	48 29 d9 	subq	%rbx, %rcx
  4457f5:	e8 66 ef ff ff 	callq	-4250 <callRet>
  4457fa:	48 8b ac 24 00 00 00 04 	movq	67108864(%rsp), %rbp
  445802:	48 81 c4 08 00 00 04 	addq	$67108872, %rsp
  445809:	c3 	retq
  44580a:	e8 61 ed ff ff 	callq	-4767 <runtime.morestack_noctxt>
  44580f:	e9 4c ff ff ff 	jmp	-180 <runtime.call67108864>
  445814:	48 8d bc 24 10 00 00 04 	leaq	67108880(%rsp), %rdi
  44581c:	48 39 3b 	cmpq	%rdi, (%rbx)
  44581f:	75 8c 	jne	-116 <runtime.call67108864+0x4d>
  445821:	48 89 23 	movq	%rsp, (%rbx)
  445824:	eb 87 	jmp	-121 <runtime.call67108864+0x4d>
  445826:	cc 	int3
  445827:	cc 	int3
  445828:	cc 	int3
  445829:	cc 	int3
  44582a:	cc 	int3
  44582b:	cc 	int3
  44582c:	cc 	int3
  44582d:	cc 	int3
  44582e:	cc 	int3
  44582f:	cc 	int3

runtime.call134217728:
  445830:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  445839:	48 8b 71 10 	movq	16(%rcx), %rsi
  44583d:	48 81 fe de fa ff ff 	cmpq	$-1314, %rsi
  445844:	0f 84 90 00 00 00 	je	144 <runtime.call134217728+0xaa>
  44584a:	48 8d 84 24 70 03 00 00 	leaq	880(%rsp), %rax
  445852:	48 29 f0 	subq	%rsi, %rax
  445855:	48 3d f8 02 00 08 	cmpq	$134218488, %rax
  44585b:	76 7d 	jbe	125 <runtime.call134217728+0xaa>
  44585d:	48 81 ec 08 00 00 08 	subq	$134217736, %rsp
  445864:	48 89 ac 24 00 00 00 08 	movq	%rbp, 134217728(%rsp)
  44586c:	48 8d ac 24 00 00 00 08 	leaq	134217728(%rsp), %rbp
  445874:	48 8b 59 20 	movq	32(%rcx), %rbx
  445878:	48 85 db 	testq	%rbx, %rbx
  44587b:	75 67 	jne	103 <runtime.call134217728+0xb4>
  44587d:	48 8b b4 24 20 00 00 08 	movq	134217760(%rsp), %rsi
  445885:	8b 8c 24 28 00 00 08 	movl	134217768(%rsp), %ecx
  44588c:	48 89 e7 	movq	%rsp, %rdi
  44588f:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  445891:	48 8b 94 24 18 00 00 08 	movq	134217752(%rsp), %rdx
  445899:	ff 12 	callq	*(%rdx)
  44589b:	48 8b 94 24 10 00 00 08 	movq	134217744(%rsp), %rdx
  4458a3:	48 8b bc 24 20 00 00 08 	movq	134217760(%rsp), %rdi
  4458ab:	8b 8c 24 28 00 00 08 	movl	134217768(%rsp), %ecx
  4458b2:	8b 9c 24 2c 00 00 08 	movl	134217772(%rsp), %ebx
  4458b9:	48 89 e6 	movq	%rsp, %rsi
  4458bc:	48 01 df 	addq	%rbx, %rdi
  4458bf:	48 01 de 	addq	%rbx, %rsi
  4458c2:	48 29 d9 	subq	%rbx, %rcx
  4458c5:	e8 96 ee ff ff 	callq	-4458 <callRet>
  4458ca:	48 8b ac 24 00 00 00 08 	movq	134217728(%rsp), %rbp
  4458d2:	48 81 c4 08 00 00 08 	addq	$134217736, %rsp
  4458d9:	c3 	retq
  4458da:	e8 91 ec ff ff 	callq	-4975 <runtime.morestack_noctxt>
  4458df:	e9 4c ff ff ff 	jmp	-180 <runtime.call134217728>
  4458e4:	48 8d bc 24 10 00 00 08 	leaq	134217744(%rsp), %rdi
  4458ec:	48 39 3b 	cmpq	%rdi, (%rbx)
  4458ef:	75 8c 	jne	-116 <runtime.call134217728+0x4d>
  4458f1:	48 89 23 	movq	%rsp, (%rbx)
  4458f4:	eb 87 	jmp	-121 <runtime.call134217728+0x4d>
  4458f6:	cc 	int3
  4458f7:	cc 	int3
  4458f8:	cc 	int3
  4458f9:	cc 	int3
  4458fa:	cc 	int3
  4458fb:	cc 	int3
  4458fc:	cc 	int3
  4458fd:	cc 	int3
  4458fe:	cc 	int3
  4458ff:	cc 	int3

runtime.call268435456:
  445900:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  445909:	48 8b 71 10 	movq	16(%rcx), %rsi
  44590d:	48 81 fe de fa ff ff 	cmpq	$-1314, %rsi
  445914:	0f 84 90 00 00 00 	je	144 <runtime.call268435456+0xaa>
  44591a:	48 8d 84 24 70 03 00 00 	leaq	880(%rsp), %rax
  445922:	48 29 f0 	subq	%rsi, %rax
  445925:	48 3d f8 02 00 10 	cmpq	$268436216, %rax
  44592b:	76 7d 	jbe	125 <runtime.call268435456+0xaa>
  44592d:	48 81 ec 08 00 00 10 	subq	$268435464, %rsp
  445934:	48 89 ac 24 00 00 00 10 	movq	%rbp, 268435456(%rsp)
  44593c:	48 8d ac 24 00 00 00 10 	leaq	268435456(%rsp), %rbp
  445944:	48 8b 59 20 	movq	32(%rcx), %rbx
  445948:	48 85 db 	testq	%rbx, %rbx
  44594b:	75 67 	jne	103 <runtime.call268435456+0xb4>
  44594d:	48 8b b4 24 20 00 00 10 	movq	268435488(%rsp), %rsi
  445955:	8b 8c 24 28 00 00 10 	movl	268435496(%rsp), %ecx
  44595c:	48 89 e7 	movq	%rsp, %rdi
  44595f:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  445961:	48 8b 94 24 18 00 00 10 	movq	268435480(%rsp), %rdx
  445969:	ff 12 	callq	*(%rdx)
  44596b:	48 8b 94 24 10 00 00 10 	movq	268435472(%rsp), %rdx
  445973:	48 8b bc 24 20 00 00 10 	movq	268435488(%rsp), %rdi
  44597b:	8b 8c 24 28 00 00 10 	movl	268435496(%rsp), %ecx
  445982:	8b 9c 24 2c 00 00 10 	movl	268435500(%rsp), %ebx
  445989:	48 89 e6 	movq	%rsp, %rsi
  44598c:	48 01 df 	addq	%rbx, %rdi
  44598f:	48 01 de 	addq	%rbx, %rsi
  445992:	48 29 d9 	subq	%rbx, %rcx
  445995:	e8 c6 ed ff ff 	callq	-4666 <callRet>
  44599a:	48 8b ac 24 00 00 00 10 	movq	268435456(%rsp), %rbp
  4459a2:	48 81 c4 08 00 00 10 	addq	$268435464, %rsp
  4459a9:	c3 	retq
  4459aa:	e8 c1 eb ff ff 	callq	-5183 <runtime.morestack_noctxt>
  4459af:	e9 4c ff ff ff 	jmp	-180 <runtime.call268435456>
  4459b4:	48 8d bc 24 10 00 00 10 	leaq	268435472(%rsp), %rdi
  4459bc:	48 39 3b 	cmpq	%rdi, (%rbx)
  4459bf:	75 8c 	jne	-116 <runtime.call268435456+0x4d>
  4459c1:	48 89 23 	movq	%rsp, (%rbx)
  4459c4:	eb 87 	jmp	-121 <runtime.call268435456+0x4d>
  4459c6:	cc 	int3
  4459c7:	cc 	int3
  4459c8:	cc 	int3
  4459c9:	cc 	int3
  4459ca:	cc 	int3
  4459cb:	cc 	int3
  4459cc:	cc 	int3
  4459cd:	cc 	int3
  4459ce:	cc 	int3
  4459cf:	cc 	int3

runtime.call536870912:
  4459d0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4459d9:	48 8b 71 10 	movq	16(%rcx), %rsi
  4459dd:	48 81 fe de fa ff ff 	cmpq	$-1314, %rsi
  4459e4:	0f 84 90 00 00 00 	je	144 <runtime.call536870912+0xaa>
  4459ea:	48 8d 84 24 70 03 00 00 	leaq	880(%rsp), %rax
  4459f2:	48 29 f0 	subq	%rsi, %rax
  4459f5:	48 3d f8 02 00 20 	cmpq	$536871672, %rax
  4459fb:	76 7d 	jbe	125 <runtime.call536870912+0xaa>
  4459fd:	48 81 ec 08 00 00 20 	subq	$536870920, %rsp
  445a04:	48 89 ac 24 00 00 00 20 	movq	%rbp, 536870912(%rsp)
  445a0c:	48 8d ac 24 00 00 00 20 	leaq	536870912(%rsp), %rbp
  445a14:	48 8b 59 20 	movq	32(%rcx), %rbx
  445a18:	48 85 db 	testq	%rbx, %rbx
  445a1b:	75 67 	jne	103 <runtime.call536870912+0xb4>
  445a1d:	48 8b b4 24 20 00 00 20 	movq	536870944(%rsp), %rsi
  445a25:	8b 8c 24 28 00 00 20 	movl	536870952(%rsp), %ecx
  445a2c:	48 89 e7 	movq	%rsp, %rdi
  445a2f:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  445a31:	48 8b 94 24 18 00 00 20 	movq	536870936(%rsp), %rdx
  445a39:	ff 12 	callq	*(%rdx)
  445a3b:	48 8b 94 24 10 00 00 20 	movq	536870928(%rsp), %rdx
  445a43:	48 8b bc 24 20 00 00 20 	movq	536870944(%rsp), %rdi
  445a4b:	8b 8c 24 28 00 00 20 	movl	536870952(%rsp), %ecx
  445a52:	8b 9c 24 2c 00 00 20 	movl	536870956(%rsp), %ebx
  445a59:	48 89 e6 	movq	%rsp, %rsi
  445a5c:	48 01 df 	addq	%rbx, %rdi
  445a5f:	48 01 de 	addq	%rbx, %rsi
  445a62:	48 29 d9 	subq	%rbx, %rcx
  445a65:	e8 f6 ec ff ff 	callq	-4874 <callRet>
  445a6a:	48 8b ac 24 00 00 00 20 	movq	536870912(%rsp), %rbp
  445a72:	48 81 c4 08 00 00 20 	addq	$536870920, %rsp
  445a79:	c3 	retq
  445a7a:	e8 f1 ea ff ff 	callq	-5391 <runtime.morestack_noctxt>
  445a7f:	e9 4c ff ff ff 	jmp	-180 <runtime.call536870912>
  445a84:	48 8d bc 24 10 00 00 20 	leaq	536870928(%rsp), %rdi
  445a8c:	48 39 3b 	cmpq	%rdi, (%rbx)
  445a8f:	75 8c 	jne	-116 <runtime.call536870912+0x4d>
  445a91:	48 89 23 	movq	%rsp, (%rbx)
  445a94:	eb 87 	jmp	-121 <runtime.call536870912+0x4d>
  445a96:	cc 	int3
  445a97:	cc 	int3
  445a98:	cc 	int3
  445a99:	cc 	int3
  445a9a:	cc 	int3
  445a9b:	cc 	int3
  445a9c:	cc 	int3
  445a9d:	cc 	int3
  445a9e:	cc 	int3
  445a9f:	cc 	int3

runtime.call1073741824:
  445aa0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  445aa9:	48 8b 71 10 	movq	16(%rcx), %rsi
  445aad:	48 81 fe de fa ff ff 	cmpq	$-1314, %rsi
  445ab4:	0f 84 90 00 00 00 	je	144 <runtime.call1073741824+0xaa>
  445aba:	48 8d 84 24 70 03 00 00 	leaq	880(%rsp), %rax
  445ac2:	48 29 f0 	subq	%rsi, %rax
  445ac5:	48 3d f8 02 00 40 	cmpq	$1073742584, %rax
  445acb:	76 7d 	jbe	125 <runtime.call1073741824+0xaa>
  445acd:	48 81 ec 08 00 00 40 	subq	$1073741832, %rsp
  445ad4:	48 89 ac 24 00 00 00 40 	movq	%rbp, 1073741824(%rsp)
  445adc:	48 8d ac 24 00 00 00 40 	leaq	1073741824(%rsp), %rbp
  445ae4:	48 8b 59 20 	movq	32(%rcx), %rbx
  445ae8:	48 85 db 	testq	%rbx, %rbx
  445aeb:	75 67 	jne	103 <runtime.call1073741824+0xb4>
  445aed:	48 8b b4 24 20 00 00 40 	movq	1073741856(%rsp), %rsi
  445af5:	8b 8c 24 28 00 00 40 	movl	1073741864(%rsp), %ecx
  445afc:	48 89 e7 	movq	%rsp, %rdi
  445aff:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  445b01:	48 8b 94 24 18 00 00 40 	movq	1073741848(%rsp), %rdx
  445b09:	ff 12 	callq	*(%rdx)
  445b0b:	48 8b 94 24 10 00 00 40 	movq	1073741840(%rsp), %rdx
  445b13:	48 8b bc 24 20 00 00 40 	movq	1073741856(%rsp), %rdi
  445b1b:	8b 8c 24 28 00 00 40 	movl	1073741864(%rsp), %ecx
  445b22:	8b 9c 24 2c 00 00 40 	movl	1073741868(%rsp), %ebx
  445b29:	48 89 e6 	movq	%rsp, %rsi
  445b2c:	48 01 df 	addq	%rbx, %rdi
  445b2f:	48 01 de 	addq	%rbx, %rsi
  445b32:	48 29 d9 	subq	%rbx, %rcx
  445b35:	e8 26 ec ff ff 	callq	-5082 <callRet>
  445b3a:	48 8b ac 24 00 00 00 40 	movq	1073741824(%rsp), %rbp
  445b42:	48 81 c4 08 00 00 40 	addq	$1073741832, %rsp
  445b49:	c3 	retq
  445b4a:	e8 21 ea ff ff 	callq	-5599 <runtime.morestack_noctxt>
  445b4f:	e9 4c ff ff ff 	jmp	-180 <runtime.call1073741824>
  445b54:	48 8d bc 24 10 00 00 40 	leaq	1073741840(%rsp), %rdi
  445b5c:	48 39 3b 	cmpq	%rdi, (%rbx)
  445b5f:	75 8c 	jne	-116 <runtime.call1073741824+0x4d>
  445b61:	48 89 23 	movq	%rsp, (%rbx)
  445b64:	eb 87 	jmp	-121 <runtime.call1073741824+0x4d>
  445b66:	cc 	int3
  445b67:	cc 	int3
  445b68:	cc 	int3
  445b69:	cc 	int3
  445b6a:	cc 	int3
  445b6b:	cc 	int3
  445b6c:	cc 	int3
  445b6d:	cc 	int3
  445b6e:	cc 	int3
  445b6f:	cc 	int3

runtime.procyield:
  445b70:	8b 44 24 08 	movl	8(%rsp), %eax
  445b74:	f3 90 	pause
  445b76:	83 e8 01 	subl	$1, %eax
  445b79:	75 f9 	jne	-7 <runtime.procyield+0x4>
  445b7b:	c3 	retq
  445b7c:	cc 	int3
  445b7d:	cc 	int3
  445b7e:	cc 	int3
  445b7f:	cc 	int3

runtime.publicationBarrier:
  445b80:	c3 	retq
  445b81:	cc 	int3
  445b82:	cc 	int3
  445b83:	cc 	int3
  445b84:	cc 	int3
  445b85:	cc 	int3
  445b86:	cc 	int3
  445b87:	cc 	int3
  445b88:	cc 	int3
  445b89:	cc 	int3
  445b8a:	cc 	int3
  445b8b:	cc 	int3
  445b8c:	cc 	int3
  445b8d:	cc 	int3
  445b8e:	cc 	int3
  445b8f:	cc 	int3

runtime.jmpdefer:
  445b90:	48 8b 54 24 08 	movq	8(%rsp), %rdx
  445b95:	48 8b 5c 24 10 	movq	16(%rsp), %rbx
  445b9a:	48 8d 63 f8 	leaq	-8(%rbx), %rsp
  445b9e:	48 8b 6c 24 f8 	movq	-8(%rsp), %rbp
  445ba3:	48 83 2c 24 05 	subq	$5, (%rsp)
  445ba8:	48 8b 1a 	movq	(%rdx), %rbx
  445bab:	ff e3 	jmpq	*%rbx
  445bad:	cc 	int3
  445bae:	cc 	int3
  445baf:	cc 	int3

gosave:
  445bb0:	64 4c 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %r8
  445bb9:	4c 8b 0c 24 	movq	(%rsp), %r9
  445bbd:	4d 89 48 40 	movq	%r9, 64(%r8)
  445bc1:	4c 8d 4c 24 08 	leaq	8(%rsp), %r9
  445bc6:	4d 89 48 38 	movq	%r9, 56(%r8)
  445bca:	49 c7 40 58 00 00 00 00 	movq	$0, 88(%r8)
  445bd2:	49 89 68 68 	movq	%rbp, 104(%r8)
  445bd6:	4d 8b 48 50 	movq	80(%r8), %r9
  445bda:	4d 85 c9 	testq	%r9, %r9
  445bdd:	74 05 	je	5 <gosave+0x34>
  445bdf:	e8 0c dd fd ff 	callq	-140020 <runtime.badctxt>
  445be4:	c3 	retq
  445be5:	cc 	int3
  445be6:	cc 	int3
  445be7:	cc 	int3
  445be8:	cc 	int3
  445be9:	cc 	int3
  445bea:	cc 	int3
  445beb:	cc 	int3
  445bec:	cc 	int3
  445bed:	cc 	int3
  445bee:	cc 	int3
  445bef:	cc 	int3

runtime.asmcgocall:
  445bf0:	48 8b 44 24 08 	movq	8(%rsp), %rax
  445bf5:	48 8b 5c 24 10 	movq	16(%rsp), %rbx
  445bfa:	48 89 e2 	movq	%rsp, %rdx
  445bfd:	64 4c 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %r8
  445c06:	49 83 f8 00 	cmpq	$0, %r8
  445c0a:	74 73 	je	115 <runtime.asmcgocall+0x8f>
  445c0c:	4d 8b 40 30 	movq	48(%r8), %r8
  445c10:	49 8b 30 	movq	(%r8), %rsi
  445c13:	64 48 8b 3c 25 f8 ff ff ff 	movq	%fs:-8, %rdi
  445c1c:	48 39 fe 	cmpq	%rdi, %rsi
  445c1f:	74 5e 	je	94 <runtime.asmcgocall+0x8f>
  445c21:	49 8b 70 50 	movq	80(%r8), %rsi
  445c25:	48 39 fe 	cmpq	%rdi, %rsi
  445c28:	74 55 	je	85 <runtime.asmcgocall+0x8f>
  445c2a:	49 8b 30 	movq	(%r8), %rsi
  445c2d:	e8 7e ff ff ff 	callq	-130 <gosave>
  445c32:	64 48 89 34 25 f8 ff ff ff 	movq	%rsi, %fs:-8
  445c3b:	48 8b 66 38 	movq	56(%rsi), %rsp
  445c3f:	48 83 ec 40 	subq	$64, %rsp
  445c43:	48 83 e4 f0 	andq	$-16, %rsp
  445c47:	48 89 7c 24 30 	movq	%rdi, 48(%rsp)
  445c4c:	48 8b 7f 08 	movq	8(%rdi), %rdi
  445c50:	48 29 d7 	subq	%rdx, %rdi
  445c53:	48 89 7c 24 28 	movq	%rdi, 40(%rsp)
  445c58:	48 89 df 	movq	%rbx, %rdi
  445c5b:	48 89 d9 	movq	%rbx, %rcx
  445c5e:	ff d0 	callq	*%rax
  445c60:	48 8b 7c 24 30 	movq	48(%rsp), %rdi
  445c65:	48 8b 77 08 	movq	8(%rdi), %rsi
  445c69:	48 2b 74 24 28 	subq	40(%rsp), %rsi
  445c6e:	64 48 89 3c 25 f8 ff ff ff 	movq	%rdi, %fs:-8
  445c77:	48 89 f4 	movq	%rsi, %rsp
  445c7a:	89 44 24 18 	movl	%eax, 24(%rsp)
  445c7e:	c3 	retq
  445c7f:	48 83 ec 40 	subq	$64, %rsp
  445c83:	48 83 e4 f0 	andq	$-16, %rsp
  445c87:	48 c7 44 24 30 00 00 00 00 	movq	$0, 48(%rsp)
  445c90:	48 89 54 24 28 	movq	%rdx, 40(%rsp)
  445c95:	48 89 df 	movq	%rbx, %rdi
  445c98:	48 89 d9 	movq	%rbx, %rcx
  445c9b:	ff d0 	callq	*%rax
  445c9d:	48 8b 74 24 28 	movq	40(%rsp), %rsi
  445ca2:	48 89 f4 	movq	%rsi, %rsp
  445ca5:	89 44 24 18 	movl	%eax, 24(%rsp)
  445ca9:	c3 	retq
  445caa:	cc 	int3
  445cab:	cc 	int3
  445cac:	cc 	int3
  445cad:	cc 	int3
  445cae:	cc 	int3
  445caf:	cc 	int3

runtime.setg:
  445cb0:	48 8b 5c 24 08 	movq	8(%rsp), %rbx
  445cb5:	64 48 89 1c 25 f8 ff ff ff 	movq	%rbx, %fs:-8
  445cbe:	c3 	retq
  445cbf:	cc 	int3

setg_gcc:
  445cc0:	64 48 89 3c 25 f8 ff ff ff 	movq	%rdi, %fs:-8
  445cc9:	c3 	retq
  445cca:	cc 	int3
  445ccb:	cc 	int3
  445ccc:	cc 	int3
  445ccd:	cc 	int3
  445cce:	cc 	int3
  445ccf:	cc 	int3

runtime.stackcheck:
  445cd0:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  445cd9:	48 39 60 08 	cmpq	%rsp, 8(%rax)
  445cdd:	77 02 	ja	2 <runtime.stackcheck+0x11>
  445cdf:	cd 03 	int	$3
  445ce1:	48 3b 20 	cmpq	(%rax), %rsp
  445ce4:	77 02 	ja	2 <runtime.stackcheck+0x18>
  445ce6:	cd 03 	int	$3
  445ce8:	c3 	retq
  445ce9:	cc 	int3
  445cea:	cc 	int3
  445ceb:	cc 	int3
  445cec:	cc 	int3
  445ced:	cc 	int3
  445cee:	cc 	int3
  445cef:	cc 	int3

runtime.cputicks:
  445cf0:	80 3d b7 db 07 00 01 	cmpb	$1, 514999(%rip)
  445cf7:	75 05 	jne	5 <runtime.cputicks+0xe>
  445cf9:	0f ae e8 	lfence
  445cfc:	eb 03 	jmp	3 <runtime.cputicks+0x11>
  445cfe:	0f ae f0 	mfence
  445d01:	0f 31 	rdtsc
  445d03:	48 c1 e2 20 	shlq	$32, %rdx
  445d07:	48 01 d0 	addq	%rdx, %rax
  445d0a:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  445d0f:	c3 	retq

runtime.aeshash:
  445d10:	48 8b 44 24 08 	movq	8(%rsp), %rax
  445d15:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  445d1a:	48 8d 54 24 20 	leaq	32(%rsp), %rdx
  445d1f:	e9 2c 00 00 00 	jmp	44 <runtime.aeshashbody>
  445d24:	cc 	int3
  445d25:	cc 	int3
  445d26:	cc 	int3
  445d27:	cc 	int3
  445d28:	cc 	int3
  445d29:	cc 	int3
  445d2a:	cc 	int3
  445d2b:	cc 	int3
  445d2c:	cc 	int3
  445d2d:	cc 	int3
  445d2e:	cc 	int3
  445d2f:	cc 	int3

runtime.aeshashstr:
  445d30:	48 8b 44 24 08 	movq	8(%rsp), %rax
  445d35:	48 8b 48 08 	movq	8(%rax), %rcx
  445d39:	48 8b 00 	movq	(%rax), %rax
  445d3c:	48 8d 54 24 18 	leaq	24(%rsp), %rdx
  445d41:	e9 0a 00 00 00 	jmp	10 <runtime.aeshashbody>
  445d46:	cc 	int3
  445d47:	cc 	int3
  445d48:	cc 	int3
  445d49:	cc 	int3
  445d4a:	cc 	int3
  445d4b:	cc 	int3
  445d4c:	cc 	int3
  445d4d:	cc 	int3
  445d4e:	cc 	int3
  445d4f:	cc 	int3

runtime.aeshashbody:
  445d50:	f3 0f 7e 44 24 10 	movq	16(%rsp), %xmm0
  445d56:	66 0f c4 c1 04 	pinsrw	$4, %ecx, %xmm0
  445d5b:	f3 0f 70 c0 00 	pshufhw	$0, %xmm0, %xmm0
  445d60:	66 0f 6f c8 	movdqa	%xmm0, %xmm1
  445d64:	66 0f ef 05 34 de 07 00 	pxor	515636(%rip), %xmm0
  445d6c:	66 0f 38 dc c0 	aesenc	%xmm0, %xmm0
  445d71:	48 83 f9 10 	cmpq	$16, %rcx
  445d75:	72 24 	jb	36 <runtime.aeshashbody+0x4b>
  445d77:	74 7f 	je	127 <runtime.aeshashbody+0xa8>
  445d79:	48 83 f9 20 	cmpq	$32, %rcx
  445d7d:	76 7f 	jbe	127 <runtime.aeshashbody+0xae>
  445d7f:	48 83 f9 40 	cmpq	$64, %rcx
  445d83:	0f 86 bb 00 00 00 	jbe	187 <runtime.aeshashbody+0xf4>
  445d89:	48 81 f9 80 00 00 00 	cmpq	$128, %rcx
  445d90:	0f 86 4f 01 00 00 	jbe	335 <runtime.aeshashbody+0x195>
  445d96:	e9 d1 02 00 00 	jmp	721 <runtime.aeshashbody+0x31c>
  445d9b:	48 85 c9 	testq	%rcx, %rcx
  445d9e:	74 4e 	je	78 <runtime.aeshashbody+0x9e>
  445da0:	48 83 c0 10 	addq	$16, %rax
  445da4:	66 a9 f0 0f 	testw	$4080, %ax
  445da8:	74 2c 	je	44 <runtime.aeshashbody+0x86>
  445daa:	f3 0f 6f 48 f0 	movdqu	-16(%rax), %xmm1
  445daf:	48 01 c9 	addq	%rcx, %rcx
  445db2:	48 8d 05 27 f2 02 00 	leaq	193063(%rip), %rax
  445db9:	66 0f db 0c c8 	pand	(%rax,%rcx,8), %xmm1
  445dbe:	66 0f ef c8 	pxor	%xmm0, %xmm1
  445dc2:	66 0f 38 dc c9 	aesenc	%xmm1, %xmm1
  445dc7:	66 0f 38 dc c9 	aesenc	%xmm1, %xmm1
  445dcc:	66 0f 38 dc c9 	aesenc	%xmm1, %xmm1
  445dd1:	66 0f d6 0a 	movq	%xmm1, (%rdx)
  445dd5:	c3 	retq
  445dd6:	f3 0f 6f 4c 08 e0 	movdqu	-32(%rax,%rcx), %xmm1
  445ddc:	48 01 c9 	addq	%rcx, %rcx
  445ddf:	48 8d 05 fa f2 02 00 	leaq	193274(%rip), %rax
  445de6:	66 0f 38 00 0c c8 	pshufb	(%rax,%rcx,8), %xmm1
  445dec:	eb d0 	jmp	-48 <runtime.aeshashbody+0x6e>
  445dee:	66 0f 38 dc c0 	aesenc	%xmm0, %xmm0
  445df3:	66 0f d6 02 	movq	%xmm0, (%rdx)
  445df7:	c3 	retq
  445df8:	f3 0f 6f 08 	movdqu	(%rax), %xmm1
  445dfc:	eb c0 	jmp	-64 <runtime.aeshashbody+0x6e>
  445dfe:	66 0f ef 0d aa dd 07 00 	pxor	515498(%rip), %xmm1
  445e06:	66 0f 38 dc c9 	aesenc	%xmm1, %xmm1
  445e0b:	f3 0f 6f 10 	movdqu	(%rax), %xmm2
  445e0f:	f3 0f 6f 5c 08 f0 	movdqu	-16(%rax,%rcx), %xmm3
  445e15:	66 0f ef d0 	pxor	%xmm0, %xmm2
  445e19:	66 0f ef d9 	pxor	%xmm1, %xmm3
  445e1d:	66 0f 38 dc d2 	aesenc	%xmm2, %xmm2
  445e22:	66 0f 38 dc db 	aesenc	%xmm3, %xmm3
  445e27:	66 0f 38 dc d2 	aesenc	%xmm2, %xmm2
  445e2c:	66 0f 38 dc db 	aesenc	%xmm3, %xmm3
  445e31:	66 0f 38 dc d2 	aesenc	%xmm2, %xmm2
  445e36:	66 0f 38 dc db 	aesenc	%xmm3, %xmm3
  445e3b:	66 0f ef d3 	pxor	%xmm3, %xmm2
  445e3f:	66 0f d6 12 	movq	%xmm2, (%rdx)
  445e43:	c3 	retq
  445e44:	66 0f 6f d1 	movdqa	%xmm1, %xmm2
  445e48:	66 0f 6f d9 	movdqa	%xmm1, %xmm3
  445e4c:	66 0f ef 0d 5c dd 07 00 	pxor	515420(%rip), %xmm1
  445e54:	66 0f ef 15 64 dd 07 00 	pxor	515428(%rip), %xmm2
  445e5c:	66 0f ef 1d 6c dd 07 00 	pxor	515436(%rip), %xmm3
  445e64:	66 0f 38 dc c9 	aesenc	%xmm1, %xmm1
  445e69:	66 0f 38 dc d2 	aesenc	%xmm2, %xmm2
  445e6e:	66 0f 38 dc db 	aesenc	%xmm3, %xmm3
  445e73:	f3 0f 6f 20 	movdqu	(%rax), %xmm4
  445e77:	f3 0f 6f 68 10 	movdqu	16(%rax), %xmm5
  445e7c:	f3 0f 6f 74 08 e0 	movdqu	-32(%rax,%rcx), %xmm6
  445e82:	f3 0f 6f 7c 08 f0 	movdqu	-16(%rax,%rcx), %xmm7
  445e88:	66 0f ef e0 	pxor	%xmm0, %xmm4
  445e8c:	66 0f ef e9 	pxor	%xmm1, %xmm5
  445e90:	66 0f ef f2 	pxor	%xmm2, %xmm6
  445e94:	66 0f ef fb 	pxor	%xmm3, %xmm7
  445e98:	66 0f 38 dc e4 	aesenc	%xmm4, %xmm4
  445e9d:	66 0f 38 dc ed 	aesenc	%xmm5, %xmm5
  445ea2:	66 0f 38 dc f6 	aesenc	%xmm6, %xmm6
  445ea7:	66 0f 38 dc ff 	aesenc	%xmm7, %xmm7
  445eac:	66 0f 38 dc e4 	aesenc	%xmm4, %xmm4
  445eb1:	66 0f 38 dc ed 	aesenc	%xmm5, %xmm5
  445eb6:	66 0f 38 dc f6 	aesenc	%xmm6, %xmm6
  445ebb:	66 0f 38 dc ff 	aesenc	%xmm7, %xmm7
  445ec0:	66 0f 38 dc e4 	aesenc	%xmm4, %xmm4
  445ec5:	66 0f 38 dc ed 	aesenc	%xmm5, %xmm5
  445eca:	66 0f 38 dc f6 	aesenc	%xmm6, %xmm6
  445ecf:	66 0f 38 dc ff 	aesenc	%xmm7, %xmm7
  445ed4:	66 0f ef e6 	pxor	%xmm6, %xmm4
  445ed8:	66 0f ef ef 	pxor	%xmm7, %xmm5
  445edc:	66 0f ef e5 	pxor	%xmm5, %xmm4
  445ee0:	66 0f d6 22 	movq	%xmm4, (%rdx)
  445ee4:	c3 	retq
  445ee5:	66 0f 6f d1 	movdqa	%xmm1, %xmm2
  445ee9:	66 0f 6f d9 	movdqa	%xmm1, %xmm3
  445eed:	66 0f 6f e1 	movdqa	%xmm1, %xmm4
  445ef1:	66 0f 6f e9 	movdqa	%xmm1, %xmm5
  445ef5:	66 0f 6f f1 	movdqa	%xmm1, %xmm6
  445ef9:	66 0f 6f f9 	movdqa	%xmm1, %xmm7
  445efd:	66 0f ef 0d ab dc 07 00 	pxor	515243(%rip), %xmm1
  445f05:	66 0f ef 15 b3 dc 07 00 	pxor	515251(%rip), %xmm2
  445f0d:	66 0f ef 1d bb dc 07 00 	pxor	515259(%rip), %xmm3
  445f15:	66 0f ef 25 c3 dc 07 00 	pxor	515267(%rip), %xmm4
  445f1d:	66 0f ef 2d cb dc 07 00 	pxor	515275(%rip), %xmm5
  445f25:	66 0f ef 35 d3 dc 07 00 	pxor	515283(%rip), %xmm6
  445f2d:	66 0f ef 3d db dc 07 00 	pxor	515291(%rip), %xmm7
  445f35:	66 0f 38 dc c9 	aesenc	%xmm1, %xmm1
  445f3a:	66 0f 38 dc d2 	aesenc	%xmm2, %xmm2
  445f3f:	66 0f 38 dc db 	aesenc	%xmm3, %xmm3
  445f44:	66 0f 38 dc e4 	aesenc	%xmm4, %xmm4
  445f49:	66 0f 38 dc ed 	aesenc	%xmm5, %xmm5
  445f4e:	66 0f 38 dc f6 	aesenc	%xmm6, %xmm6
  445f53:	66 0f 38 dc ff 	aesenc	%xmm7, %xmm7
  445f58:	f3 44 0f 6f 00 	movdqu	(%rax), %xmm8
  445f5d:	f3 44 0f 6f 48 10 	movdqu	16(%rax), %xmm9
  445f63:	f3 44 0f 6f 50 20 	movdqu	32(%rax), %xmm10
  445f69:	f3 44 0f 6f 58 30 	movdqu	48(%rax), %xmm11
  445f6f:	f3 44 0f 6f 64 08 c0 	movdqu	-64(%rax,%rcx), %xmm12
  445f76:	f3 44 0f 6f 6c 08 d0 	movdqu	-48(%rax,%rcx), %xmm13
  445f7d:	f3 44 0f 6f 74 08 e0 	movdqu	-32(%rax,%rcx), %xmm14
  445f84:	f3 44 0f 6f 7c 08 f0 	movdqu	-16(%rax,%rcx), %xmm15
  445f8b:	66 44 0f ef c0 	pxor	%xmm0, %xmm8
  445f90:	66 44 0f ef c9 	pxor	%xmm1, %xmm9
  445f95:	66 44 0f ef d2 	pxor	%xmm2, %xmm10
  445f9a:	66 44 0f ef db 	pxor	%xmm3, %xmm11
  445f9f:	66 44 0f ef e4 	pxor	%xmm4, %xmm12
  445fa4:	66 44 0f ef ed 	pxor	%xmm5, %xmm13
  445fa9:	66 44 0f ef f6 	pxor	%xmm6, %xmm14
  445fae:	66 44 0f ef ff 	pxor	%xmm7, %xmm15
  445fb3:	66 45 0f 38 dc c0 	aesenc	%xmm8, %xmm8
  445fb9:	66 45 0f 38 dc c9 	aesenc	%xmm9, %xmm9
  445fbf:	66 45 0f 38 dc d2 	aesenc	%xmm10, %xmm10
  445fc5:	66 45 0f 38 dc db 	aesenc	%xmm11, %xmm11
  445fcb:	66 45 0f 38 dc e4 	aesenc	%xmm12, %xmm12
  445fd1:	66 45 0f 38 dc ed 	aesenc	%xmm13, %xmm13
  445fd7:	66 45 0f 38 dc f6 	aesenc	%xmm14, %xmm14
  445fdd:	66 45 0f 38 dc ff 	aesenc	%xmm15, %xmm15
  445fe3:	66 45 0f 38 dc c0 	aesenc	%xmm8, %xmm8
  445fe9:	66 45 0f 38 dc c9 	aesenc	%xmm9, %xmm9
  445fef:	66 45 0f 38 dc d2 	aesenc	%xmm10, %xmm10
  445ff5:	66 45 0f 38 dc db 	aesenc	%xmm11, %xmm11
  445ffb:	66 45 0f 38 dc e4 	aesenc	%xmm12, %xmm12
  446001:	66 45 0f 38 dc ed 	aesenc	%xmm13, %xmm13
  446007:	66 45 0f 38 dc f6 	aesenc	%xmm14, %xmm14
  44600d:	66 45 0f 38 dc ff 	aesenc	%xmm15, %xmm15
  446013:	66 45 0f 38 dc c0 	aesenc	%xmm8, %xmm8
  446019:	66 45 0f 38 dc c9 	aesenc	%xmm9, %xmm9
  44601f:	66 45 0f 38 dc d2 	aesenc	%xmm10, %xmm10
  446025:	66 45 0f 38 dc db 	aesenc	%xmm11, %xmm11
  44602b:	66 45 0f 38 dc e4 	aesenc	%xmm12, %xmm12
  446031:	66 45 0f 38 dc ed 	aesenc	%xmm13, %xmm13
  446037:	66 45 0f 38 dc f6 	aesenc	%xmm14, %xmm14
  44603d:	66 45 0f 38 dc ff 	aesenc	%xmm15, %xmm15
  446043:	66 45 0f ef c4 	pxor	%xmm12, %xmm8
  446048:	66 45 0f ef cd 	pxor	%xmm13, %xmm9
  44604d:	66 45 0f ef d6 	pxor	%xmm14, %xmm10
  446052:	66 45 0f ef df 	pxor	%xmm15, %xmm11
  446057:	66 45 0f ef c2 	pxor	%xmm10, %xmm8
  44605c:	66 45 0f ef cb 	pxor	%xmm11, %xmm9
  446061:	66 45 0f ef c1 	pxor	%xmm9, %xmm8
  446066:	66 44 0f d6 02 	movq	%xmm8, (%rdx)
  44606b:	c3 	retq
  44606c:	66 0f 6f d1 	movdqa	%xmm1, %xmm2
  446070:	66 0f 6f d9 	movdqa	%xmm1, %xmm3
  446074:	66 0f 6f e1 	movdqa	%xmm1, %xmm4
  446078:	66 0f 6f e9 	movdqa	%xmm1, %xmm5
  44607c:	66 0f 6f f1 	movdqa	%xmm1, %xmm6
  446080:	66 0f 6f f9 	movdqa	%xmm1, %xmm7
  446084:	66 0f ef 0d 24 db 07 00 	pxor	514852(%rip), %xmm1
  44608c:	66 0f ef 15 2c db 07 00 	pxor	514860(%rip), %xmm2
  446094:	66 0f ef 1d 34 db 07 00 	pxor	514868(%rip), %xmm3
  44609c:	66 0f ef 25 3c db 07 00 	pxor	514876(%rip), %xmm4
  4460a4:	66 0f ef 2d 44 db 07 00 	pxor	514884(%rip), %xmm5
  4460ac:	66 0f ef 35 4c db 07 00 	pxor	514892(%rip), %xmm6
  4460b4:	66 0f ef 3d 54 db 07 00 	pxor	514900(%rip), %xmm7
  4460bc:	66 0f 38 dc c9 	aesenc	%xmm1, %xmm1
  4460c1:	66 0f 38 dc d2 	aesenc	%xmm2, %xmm2
  4460c6:	66 0f 38 dc db 	aesenc	%xmm3, %xmm3
  4460cb:	66 0f 38 dc e4 	aesenc	%xmm4, %xmm4
  4460d0:	66 0f 38 dc ed 	aesenc	%xmm5, %xmm5
  4460d5:	66 0f 38 dc f6 	aesenc	%xmm6, %xmm6
  4460da:	66 0f 38 dc ff 	aesenc	%xmm7, %xmm7
  4460df:	f3 44 0f 6f 44 08 80 	movdqu	-128(%rax,%rcx), %xmm8
  4460e6:	f3 44 0f 6f 4c 08 90 	movdqu	-112(%rax,%rcx), %xmm9
  4460ed:	f3 44 0f 6f 54 08 a0 	movdqu	-96(%rax,%rcx), %xmm10
  4460f4:	f3 44 0f 6f 5c 08 b0 	movdqu	-80(%rax,%rcx), %xmm11
  4460fb:	f3 44 0f 6f 64 08 c0 	movdqu	-64(%rax,%rcx), %xmm12
  446102:	f3 44 0f 6f 6c 08 d0 	movdqu	-48(%rax,%rcx), %xmm13
  446109:	f3 44 0f 6f 74 08 e0 	movdqu	-32(%rax,%rcx), %xmm14
  446110:	f3 44 0f 6f 7c 08 f0 	movdqu	-16(%rax,%rcx), %xmm15
  446117:	66 44 0f ef c0 	pxor	%xmm0, %xmm8
  44611c:	66 44 0f ef c9 	pxor	%xmm1, %xmm9
  446121:	66 44 0f ef d2 	pxor	%xmm2, %xmm10
  446126:	66 44 0f ef db 	pxor	%xmm3, %xmm11
  44612b:	66 44 0f ef e4 	pxor	%xmm4, %xmm12
  446130:	66 44 0f ef ed 	pxor	%xmm5, %xmm13
  446135:	66 44 0f ef f6 	pxor	%xmm6, %xmm14
  44613a:	66 44 0f ef ff 	pxor	%xmm7, %xmm15
  44613f:	48 ff c9 	decq	%rcx
  446142:	48 c1 e9 07 	shrq	$7, %rcx
  446146:	66 45 0f 38 dc c0 	aesenc	%xmm8, %xmm8
  44614c:	66 45 0f 38 dc c9 	aesenc	%xmm9, %xmm9
  446152:	66 45 0f 38 dc d2 	aesenc	%xmm10, %xmm10
  446158:	66 45 0f 38 dc db 	aesenc	%xmm11, %xmm11
  44615e:	66 45 0f 38 dc e4 	aesenc	%xmm12, %xmm12
  446164:	66 45 0f 38 dc ed 	aesenc	%xmm13, %xmm13
  44616a:	66 45 0f 38 dc f6 	aesenc	%xmm14, %xmm14
  446170:	66 45 0f 38 dc ff 	aesenc	%xmm15, %xmm15
  446176:	f3 0f 6f 00 	movdqu	(%rax), %xmm0
  44617a:	f3 0f 6f 48 10 	movdqu	16(%rax), %xmm1
  44617f:	f3 0f 6f 50 20 	movdqu	32(%rax), %xmm2
  446184:	f3 0f 6f 58 30 	movdqu	48(%rax), %xmm3
  446189:	66 44 0f 38 dc c0 	aesenc	%xmm0, %xmm8
  44618f:	66 44 0f 38 dc c9 	aesenc	%xmm1, %xmm9
  446195:	66 44 0f 38 dc d2 	aesenc	%xmm2, %xmm10
  44619b:	66 44 0f 38 dc db 	aesenc	%xmm3, %xmm11
  4461a1:	f3 0f 6f 60 40 	movdqu	64(%rax), %xmm4
  4461a6:	f3 0f 6f 68 50 	movdqu	80(%rax), %xmm5
  4461ab:	f3 0f 6f 70 60 	movdqu	96(%rax), %xmm6
  4461b0:	f3 0f 6f 78 70 	movdqu	112(%rax), %xmm7
  4461b5:	66 44 0f 38 dc e4 	aesenc	%xmm4, %xmm12
  4461bb:	66 44 0f 38 dc ed 	aesenc	%xmm5, %xmm13
  4461c1:	66 44 0f 38 dc f6 	aesenc	%xmm6, %xmm14
  4461c7:	66 44 0f 38 dc ff 	aesenc	%xmm7, %xmm15
  4461cd:	48 05 80 00 00 00 	addq	$128, %rax
  4461d3:	48 ff c9 	decq	%rcx
  4461d6:	0f 85 6a ff ff ff 	jne	-150 <runtime.aeshashbody+0x3f6>
  4461dc:	66 45 0f 38 dc c0 	aesenc	%xmm8, %xmm8
  4461e2:	66 45 0f 38 dc c9 	aesenc	%xmm9, %xmm9
  4461e8:	66 45 0f 38 dc d2 	aesenc	%xmm10, %xmm10
  4461ee:	66 45 0f 38 dc db 	aesenc	%xmm11, %xmm11
  4461f4:	66 45 0f 38 dc e4 	aesenc	%xmm12, %xmm12
  4461fa:	66 45 0f 38 dc ed 	aesenc	%xmm13, %xmm13
  446200:	66 45 0f 38 dc f6 	aesenc	%xmm14, %xmm14
  446206:	66 45 0f 38 dc ff 	aesenc	%xmm15, %xmm15
  44620c:	66 45 0f 38 dc c0 	aesenc	%xmm8, %xmm8
  446212:	66 45 0f 38 dc c9 	aesenc	%xmm9, %xmm9
  446218:	66 45 0f 38 dc d2 	aesenc	%xmm10, %xmm10
  44621e:	66 45 0f 38 dc db 	aesenc	%xmm11, %xmm11
  446224:	66 45 0f 38 dc e4 	aesenc	%xmm12, %xmm12
  44622a:	66 45 0f 38 dc ed 	aesenc	%xmm13, %xmm13
  446230:	66 45 0f 38 dc f6 	aesenc	%xmm14, %xmm14
  446236:	66 45 0f 38 dc ff 	aesenc	%xmm15, %xmm15
  44623c:	66 45 0f 38 dc c0 	aesenc	%xmm8, %xmm8
  446242:	66 45 0f 38 dc c9 	aesenc	%xmm9, %xmm9
  446248:	66 45 0f 38 dc d2 	aesenc	%xmm10, %xmm10
  44624e:	66 45 0f 38 dc db 	aesenc	%xmm11, %xmm11
  446254:	66 45 0f 38 dc e4 	aesenc	%xmm12, %xmm12
  44625a:	66 45 0f 38 dc ed 	aesenc	%xmm13, %xmm13
  446260:	66 45 0f 38 dc f6 	aesenc	%xmm14, %xmm14
  446266:	66 45 0f 38 dc ff 	aesenc	%xmm15, %xmm15
  44626c:	66 45 0f ef c4 	pxor	%xmm12, %xmm8
  446271:	66 45 0f ef cd 	pxor	%xmm13, %xmm9
  446276:	66 45 0f ef d6 	pxor	%xmm14, %xmm10
  44627b:	66 45 0f ef df 	pxor	%xmm15, %xmm11
  446280:	66 45 0f ef c2 	pxor	%xmm10, %xmm8
  446285:	66 45 0f ef cb 	pxor	%xmm11, %xmm9
  44628a:	66 45 0f ef c1 	pxor	%xmm9, %xmm8
  44628f:	66 44 0f d6 02 	movq	%xmm8, (%rdx)
  446294:	c3 	retq
  446295:	cc 	int3
  446296:	cc 	int3
  446297:	cc 	int3
  446298:	cc 	int3
  446299:	cc 	int3
  44629a:	cc 	int3
  44629b:	cc 	int3
  44629c:	cc 	int3
  44629d:	cc 	int3
  44629e:	cc 	int3
  44629f:	cc 	int3

runtime.aeshash32:
  4462a0:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4462a5:	f3 0f 7e 44 24 10 	movq	16(%rsp), %xmm0
  4462ab:	66 0f 3a 22 00 02 	pinsrd	$2, (%rax), %xmm0
  4462b1:	66 0f 38 dc 05 e6 d8 07 00 	aesenc	514278(%rip), %xmm0
  4462ba:	66 0f 38 dc 05 ed d8 07 00 	aesenc	514285(%rip), %xmm0
  4462c3:	66 0f 38 dc 05 f4 d8 07 00 	aesenc	514292(%rip), %xmm0
  4462cc:	66 0f d6 44 24 18 	movq	%xmm0, 24(%rsp)
  4462d2:	c3 	retq
  4462d3:	cc 	int3
  4462d4:	cc 	int3
  4462d5:	cc 	int3
  4462d6:	cc 	int3
  4462d7:	cc 	int3
  4462d8:	cc 	int3
  4462d9:	cc 	int3
  4462da:	cc 	int3
  4462db:	cc 	int3
  4462dc:	cc 	int3
  4462dd:	cc 	int3
  4462de:	cc 	int3
  4462df:	cc 	int3

runtime.aeshash64:
  4462e0:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4462e5:	f3 0f 7e 44 24 10 	movq	16(%rsp), %xmm0
  4462eb:	66 48 0f 3a 22 00 01 	pinsrq	$1, (%rax), %xmm0
  4462f2:	66 0f 38 dc 05 a5 d8 07 00 	aesenc	514213(%rip), %xmm0
  4462fb:	66 0f 38 dc 05 ac d8 07 00 	aesenc	514220(%rip), %xmm0
  446304:	66 0f 38 dc 05 b3 d8 07 00 	aesenc	514227(%rip), %xmm0
  44630d:	66 0f d6 44 24 18 	movq	%xmm0, 24(%rsp)
  446313:	c3 	retq
  446314:	cc 	int3
  446315:	cc 	int3
  446316:	cc 	int3
  446317:	cc 	int3
  446318:	cc 	int3
  446319:	cc 	int3
  44631a:	cc 	int3
  44631b:	cc 	int3
  44631c:	cc 	int3
  44631d:	cc 	int3
  44631e:	cc 	int3
  44631f:	cc 	int3

runtime.checkASM:
  446320:	48 8d 05 b9 ec 02 00 	leaq	191673(%rip), %rax
  446327:	48 8d 1d b2 ed 02 00 	leaq	191922(%rip), %rbx
  44632e:	48 09 d8 	orq	%rbx, %rax
  446331:	48 a9 0f 00 00 00 	testq	$15, %rax
  446337:	0f 94 44 24 08 	sete	8(%rsp)
  44633c:	c3 	retq
  44633d:	cc 	int3
  44633e:	cc 	int3
  44633f:	cc 	int3

runtime.memequal:
  446340:	48 8b 74 24 08 	movq	8(%rsp), %rsi
  446345:	48 8b 7c 24 10 	movq	16(%rsp), %rdi
  44634a:	48 39 fe 	cmpq	%rdi, %rsi
  44634d:	74 0f 	je	15 <runtime.memequal+0x1e>
  44634f:	48 8b 5c 24 18 	movq	24(%rsp), %rbx
  446354:	48 8d 44 24 20 	leaq	32(%rsp), %rax
  446359:	e9 42 00 00 00 	jmp	66 <runtime.memeqbody>
  44635e:	c6 44 24 20 01 	movb	$1, 32(%rsp)
  446363:	c3 	retq
  446364:	cc 	int3
  446365:	cc 	int3
  446366:	cc 	int3
  446367:	cc 	int3
  446368:	cc 	int3
  446369:	cc 	int3
  44636a:	cc 	int3
  44636b:	cc 	int3
  44636c:	cc 	int3
  44636d:	cc 	int3
  44636e:	cc 	int3
  44636f:	cc 	int3

runtime.memequal_varlen:
  446370:	48 8b 74 24 08 	movq	8(%rsp), %rsi
  446375:	48 8b 7c 24 10 	movq	16(%rsp), %rdi
  44637a:	48 39 fe 	cmpq	%rdi, %rsi
  44637d:	74 0e 	je	14 <runtime.memequal_varlen+0x1d>
  44637f:	48 8b 5a 08 	movq	8(%rdx), %rbx
  446383:	48 8d 44 24 18 	leaq	24(%rsp), %rax
  446388:	e9 13 00 00 00 	jmp	19 <runtime.memeqbody>
  44638d:	c6 44 24 18 01 	movb	$1, 24(%rsp)
  446392:	c3 	retq
  446393:	cc 	int3
  446394:	cc 	int3
  446395:	cc 	int3
  446396:	cc 	int3
  446397:	cc 	int3
  446398:	cc 	int3
  446399:	cc 	int3
  44639a:	cc 	int3
  44639b:	cc 	int3
  44639c:	cc 	int3
  44639d:	cc 	int3
  44639e:	cc 	int3
  44639f:	cc 	int3

runtime.memeqbody:
  4463a0:	48 83 fb 08 	cmpq	$8, %rbx
  4463a4:	0f 82 f3 00 00 00 	jb	243 <runtime.memeqbody+0xfd>
  4463aa:	48 83 fb 40 	cmpq	$64, %rbx
  4463ae:	0f 82 b7 00 00 00 	jb	183 <runtime.memeqbody+0xcb>
  4463b4:	80 3d f8 d4 07 00 01 	cmpb	$1, 513272(%rip)
  4463bb:	74 68 	je	104 <runtime.memeqbody+0x85>
  4463bd:	48 83 fb 40 	cmpq	$64, %rbx
  4463c1:	0f 82 a4 00 00 00 	jb	164 <runtime.memeqbody+0xcb>
  4463c7:	f3 0f 6f 06 	movdqu	(%rsi), %xmm0
  4463cb:	f3 0f 6f 0f 	movdqu	(%rdi), %xmm1
  4463cf:	f3 0f 6f 56 10 	movdqu	16(%rsi), %xmm2
  4463d4:	f3 0f 6f 5f 10 	movdqu	16(%rdi), %xmm3
  4463d9:	f3 0f 6f 66 20 	movdqu	32(%rsi), %xmm4
  4463de:	f3 0f 6f 6f 20 	movdqu	32(%rdi), %xmm5
  4463e3:	f3 0f 6f 76 30 	movdqu	48(%rsi), %xmm6
  4463e8:	f3 0f 6f 7f 30 	movdqu	48(%rdi), %xmm7
  4463ed:	66 0f 74 c1 	pcmpeqb	%xmm1, %xmm0
  4463f1:	66 0f 74 d3 	pcmpeqb	%xmm3, %xmm2
  4463f5:	66 0f 74 e5 	pcmpeqb	%xmm5, %xmm4
  4463f9:	66 0f 74 f7 	pcmpeqb	%xmm7, %xmm6
  4463fd:	66 0f db c2 	pand	%xmm2, %xmm0
  446401:	66 0f db e6 	pand	%xmm6, %xmm4
  446405:	66 0f db c4 	pand	%xmm4, %xmm0
  446409:	66 0f d7 d0 	pmovmskb	%xmm0, %edx
  44640d:	48 83 c6 40 	addq	$64, %rsi
  446411:	48 83 c7 40 	addq	$64, %rdi
  446415:	48 83 eb 40 	subq	$64, %rbx
  446419:	81 fa ff ff 00 00 	cmpl	$65535, %edx
  44641f:	74 9c 	je	-100 <runtime.memeqbody+0x1d>
  446421:	c6 00 00 	movb	$0, (%rax)
  446424:	c3 	retq
  446425:	48 83 fb 40 	cmpq	$64, %rbx
  446429:	72 3d 	jb	61 <runtime.memeqbody+0xc8>
  44642b:	c5 fe 6f 06 	vmovdqu	(%rsi), %ymm0
  44642f:	c5 fe 6f 0f 	vmovdqu	(%rdi), %ymm1
  446433:	c5 fe 6f 56 20 	vmovdqu	32(%rsi), %ymm2
  446438:	c5 fe 6f 5f 20 	vmovdqu	32(%rdi), %ymm3
  44643d:	c5 fd 74 e1 	vpcmpeqb	%ymm1, %ymm0, %ymm4
  446441:	c5 e5 74 ea 	vpcmpeqb	%ymm2, %ymm3, %ymm5
  446445:	c5 d5 db f4 	vpand	%ymm4, %ymm5, %ymm6
  446449:	c5 fd d7 d6 	vpmovmskb	%ymm6, %edx
  44644d:	48 83 c6 40 	addq	$64, %rsi
  446451:	48 83 c7 40 	addq	$64, %rdi
  446455:	48 83 eb 40 	subq	$64, %rbx
  446459:	81 fa ff ff ff ff 	cmpl	$4294967295, %edx
  44645f:	74 c4 	je	-60 <runtime.memeqbody+0x85>
  446461:	c5 f8 77 	vzeroupper
  446464:	c6 00 00 	movb	$0, (%rax)
  446467:	c3 	retq
  446468:	c5 f8 77 	vzeroupper
  44646b:	48 83 fb 08 	cmpq	$8, %rbx
  44646f:	76 1b 	jbe	27 <runtime.memeqbody+0xec>
  446471:	48 8b 0e 	movq	(%rsi), %rcx
  446474:	48 8b 17 	movq	(%rdi), %rdx
  446477:	48 83 c6 08 	addq	$8, %rsi
  44647b:	48 83 c7 08 	addq	$8, %rdi
  44647f:	48 83 eb 08 	subq	$8, %rbx
  446483:	48 39 d1 	cmpq	%rdx, %rcx
  446486:	74 e3 	je	-29 <runtime.memeqbody+0xcb>
  446488:	c6 00 00 	movb	$0, (%rax)
  44648b:	c3 	retq
  44648c:	48 8b 4c 1e f8 	movq	-8(%rsi,%rbx), %rcx
  446491:	48 8b 54 1f f8 	movq	-8(%rdi,%rbx), %rdx
  446496:	48 39 d1 	cmpq	%rdx, %rcx
  446499:	0f 94 00 	sete	(%rax)
  44649c:	c3 	retq
  44649d:	48 83 fb 00 	cmpq	$0, %rbx
  4464a1:	74 37 	je	55 <runtime.memeqbody+0x13a>
  4464a3:	48 8d 0c dd 00 00 00 00 	leaq	(,%rbx,8), %rcx
  4464ab:	48 f7 d9 	negq	%rcx
  4464ae:	40 80 fe f8 	cmpb	$-8, %sil
  4464b2:	77 05 	ja	5 <runtime.memeqbody+0x119>
  4464b4:	48 8b 36 	movq	(%rsi), %rsi
  4464b7:	eb 08 	jmp	8 <runtime.memeqbody+0x121>
  4464b9:	48 8b 74 1e f8 	movq	-8(%rsi,%rbx), %rsi
  4464be:	48 d3 ee 	shrq	%cl, %rsi
  4464c1:	40 80 ff f8 	cmpb	$-8, %dil
  4464c5:	77 05 	ja	5 <runtime.memeqbody+0x12c>
  4464c7:	48 8b 3f 	movq	(%rdi), %rdi
  4464ca:	eb 08 	jmp	8 <runtime.memeqbody+0x134>
  4464cc:	48 8b 7c 1f f8 	movq	-8(%rdi,%rbx), %rdi
  4464d1:	48 d3 ef 	shrq	%cl, %rdi
  4464d4:	48 29 f7 	subq	%rsi, %rdi
  4464d7:	48 d3 e7 	shlq	%cl, %rdi
  4464da:	0f 94 00 	sete	(%rax)
  4464dd:	c3 	retq
  4464de:	cc 	int3
  4464df:	cc 	int3

runtime.cmpstring:
  4464e0:	48 8b 74 24 08 	movq	8(%rsp), %rsi
  4464e5:	48 8b 5c 24 10 	movq	16(%rsp), %rbx
  4464ea:	48 8b 7c 24 18 	movq	24(%rsp), %rdi
  4464ef:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  4464f4:	4c 8d 4c 24 28 	leaq	40(%rsp), %r9
  4464f9:	e9 02 00 00 00 	jmp	2 <runtime.cmpbody>
  4464fe:	cc 	int3
  4464ff:	cc 	int3

runtime.cmpbody:
  446500:	48 39 fe 	cmpq	%rdi, %rsi
  446503:	0f 84 2b 01 00 00 	je	299 <runtime.cmpbody+0x134>
  446509:	48 39 d3 	cmpq	%rdx, %rbx
  44650c:	49 89 d0 	movq	%rdx, %r8
  44650f:	4c 0f 4c c3 	cmovlq	%rbx, %r8
  446513:	49 83 f8 08 	cmpq	$8, %r8
  446517:	0f 82 bc 00 00 00 	jb	188 <runtime.cmpbody+0xd9>
  44651d:	49 83 f8 3f 	cmpq	$63, %r8
  446521:	76 12 	jbe	18 <runtime.cmpbody+0x35>
  446523:	80 3d 89 d3 07 00 01 	cmpb	$1, 512905(%rip)
  44652a:	0f 84 ad 01 00 00 	je	429 <runtime.cmpbody+0x1dd>
  446530:	e9 17 01 00 00 	jmp	279 <runtime.cmpbody+0x14c>
  446535:	49 83 f8 10 	cmpq	$16, %r8
  446539:	76 5e 	jbe	94 <runtime.cmpbody+0x99>
  44653b:	f3 0f 6f 06 	movdqu	(%rsi), %xmm0
  44653f:	f3 0f 6f 0f 	movdqu	(%rdi), %xmm1
  446543:	66 0f 74 c8 	pcmpeqb	%xmm0, %xmm1
  446547:	66 0f d7 c1 	pmovmskb	%xmm1, %eax
  44654b:	48 35 ff ff 00 00 	xorq	$65535, %rax
  446551:	75 2a 	jne	42 <runtime.cmpbody+0x7d>
  446553:	48 83 c6 10 	addq	$16, %rsi
  446557:	48 83 c7 10 	addq	$16, %rdi
  44655b:	49 83 e8 10 	subq	$16, %r8
  44655f:	eb d4 	jmp	-44 <runtime.cmpbody+0x35>
  446561:	48 83 c6 30 	addq	$48, %rsi
  446565:	48 83 c7 30 	addq	$48, %rdi
  446569:	eb 12 	jmp	18 <runtime.cmpbody+0x7d>
  44656b:	48 83 c6 20 	addq	$32, %rsi
  44656f:	48 83 c7 20 	addq	$32, %rdi
  446573:	eb 08 	jmp	8 <runtime.cmpbody+0x7d>
  446575:	48 83 c6 10 	addq	$16, %rsi
  446579:	48 83 c7 10 	addq	$16, %rdi
  44657d:	48 0f bc d8 	bsfq	%rax, %rbx
  446581:	48 31 c0 	xorq	%rax, %rax
  446584:	8a 0c 1e 	movb	(%rsi,%rbx), %cl
  446587:	3a 0c 1f 	cmpb	(%rdi,%rbx), %cl
  44658a:	0f 97 c0 	seta	%al
  44658d:	48 8d 04 45 ff ff ff ff 	leaq	-1(,%rax,2), %rax
  446595:	49 89 01 	movq	%rax, (%r9)
  446598:	c3 	retq
  446599:	49 83 f8 08 	cmpq	$8, %r8
  44659d:	76 0b 	jbe	11 <runtime.cmpbody+0xaa>
  44659f:	48 8b 06 	movq	(%rsi), %rax
  4465a2:	48 8b 0f 	movq	(%rdi), %rcx
  4465a5:	48 39 c8 	cmpq	%rcx, %rax
  4465a8:	75 0f 	jne	15 <runtime.cmpbody+0xb9>
  4465aa:	4a 8b 44 06 f8 	movq	-8(%rsi,%r8), %rax
  4465af:	4a 8b 4c 07 f8 	movq	-8(%rdi,%r8), %rcx
  4465b4:	48 39 c8 	cmpq	%rcx, %rax
  4465b7:	74 7b 	je	123 <runtime.cmpbody+0x134>
  4465b9:	48 0f c8 	bswapq	%rax
  4465bc:	48 0f c9 	bswapq	%rcx
  4465bf:	48 31 c1 	xorq	%rax, %rcx
  4465c2:	48 0f bd c9 	bsrq	%rcx, %rcx
  4465c6:	48 d3 e8 	shrq	%cl, %rax
  4465c9:	48 83 e0 01 	andq	$1, %rax
  4465cd:	48 8d 04 45 ff ff ff ff 	leaq	-1(,%rax,2), %rax
  4465d5:	49 89 01 	movq	%rax, (%r9)
  4465d8:	c3 	retq
  4465d9:	4a 8d 0c c5 00 00 00 00 	leaq	(,%r8,8), %rcx
  4465e1:	48 f7 d9 	negq	%rcx
  4465e4:	74 4e 	je	78 <runtime.cmpbody+0x134>
  4465e6:	40 80 fe f8 	cmpb	$-8, %sil
  4465ea:	77 05 	ja	5 <runtime.cmpbody+0xf1>
  4465ec:	48 8b 36 	movq	(%rsi), %rsi
  4465ef:	eb 08 	jmp	8 <runtime.cmpbody+0xf9>
  4465f1:	4a 8b 74 06 f8 	movq	-8(%rsi,%r8), %rsi
  4465f6:	48 d3 ee 	shrq	%cl, %rsi
  4465f9:	48 d3 e6 	shlq	%cl, %rsi
  4465fc:	40 80 ff f8 	cmpb	$-8, %dil
  446600:	77 05 	ja	5 <runtime.cmpbody+0x107>
  446602:	48 8b 3f 	movq	(%rdi), %rdi
  446605:	eb 08 	jmp	8 <runtime.cmpbody+0x10f>
  446607:	4a 8b 7c 07 f8 	movq	-8(%rdi,%r8), %rdi
  44660c:	48 d3 ef 	shrq	%cl, %rdi
  44660f:	48 d3 e7 	shlq	%cl, %rdi
  446612:	48 0f ce 	bswapq	%rsi
  446615:	48 0f cf 	bswapq	%rdi
  446618:	48 31 f7 	xorq	%rsi, %rdi
  44661b:	74 17 	je	23 <runtime.cmpbody+0x134>
  44661d:	48 0f bd cf 	bsrq	%rdi, %rcx
  446621:	48 d3 ee 	shrq	%cl, %rsi
  446624:	48 83 e6 01 	andq	$1, %rsi
  446628:	48 8d 04 75 ff ff ff ff 	leaq	-1(,%rsi,2), %rax
  446630:	49 89 01 	movq	%rax, (%r9)
  446633:	c3 	retq
  446634:	48 31 c0 	xorq	%rax, %rax
  446637:	48 31 c9 	xorq	%rcx, %rcx
  44663a:	48 39 d3 	cmpq	%rdx, %rbx
  44663d:	0f 9f c0 	setg	%al
  446640:	0f 94 c1 	sete	%cl
  446643:	48 8d 44 41 ff 	leaq	-1(%rcx,%rax,2), %rax
  446648:	49 89 01 	movq	%rax, (%r9)
  44664b:	c3 	retq
  44664c:	f3 0f 6f 06 	movdqu	(%rsi), %xmm0
  446650:	f3 0f 6f 0f 	movdqu	(%rdi), %xmm1
  446654:	66 0f 74 c8 	pcmpeqb	%xmm0, %xmm1
  446658:	66 0f d7 c1 	pmovmskb	%xmm1, %eax
  44665c:	48 35 ff ff 00 00 	xorq	$65535, %rax
  446662:	0f 85 15 ff ff ff 	jne	-235 <runtime.cmpbody+0x7d>
  446668:	f3 0f 6f 46 10 	movdqu	16(%rsi), %xmm0
  44666d:	f3 0f 6f 4f 10 	movdqu	16(%rdi), %xmm1
  446672:	66 0f 74 c8 	pcmpeqb	%xmm0, %xmm1
  446676:	66 0f d7 c1 	pmovmskb	%xmm1, %eax
  44667a:	48 35 ff ff 00 00 	xorq	$65535, %rax
  446680:	0f 85 ef fe ff ff 	jne	-273 <runtime.cmpbody+0x75>
  446686:	f3 0f 6f 46 20 	movdqu	32(%rsi), %xmm0
  44668b:	f3 0f 6f 4f 20 	movdqu	32(%rdi), %xmm1
  446690:	66 0f 74 c8 	pcmpeqb	%xmm0, %xmm1
  446694:	66 0f d7 c1 	pmovmskb	%xmm1, %eax
  446698:	48 35 ff ff 00 00 	xorq	$65535, %rax
  44669e:	0f 85 c7 fe ff ff 	jne	-313 <runtime.cmpbody+0x6b>
  4466a4:	f3 0f 6f 46 30 	movdqu	48(%rsi), %xmm0
  4466a9:	f3 0f 6f 4f 30 	movdqu	48(%rdi), %xmm1
  4466ae:	66 0f 74 c8 	pcmpeqb	%xmm0, %xmm1
  4466b2:	66 0f d7 c1 	pmovmskb	%xmm1, %eax
  4466b6:	48 35 ff ff 00 00 	xorq	$65535, %rax
  4466bc:	0f 85 9f fe ff ff 	jne	-353 <runtime.cmpbody+0x61>
  4466c2:	48 83 c6 40 	addq	$64, %rsi
  4466c6:	48 83 c7 40 	addq	$64, %rdi
  4466ca:	49 83 e8 40 	subq	$64, %r8
  4466ce:	49 83 f8 40 	cmpq	$64, %r8
  4466d2:	0f 86 5d fe ff ff 	jbe	-419 <runtime.cmpbody+0x35>
  4466d8:	e9 6f ff ff ff 	jmp	-145 <runtime.cmpbody+0x14c>
  4466dd:	c5 fe 6f 16 	vmovdqu	(%rsi), %ymm2
  4466e1:	c5 fe 6f 1f 	vmovdqu	(%rdi), %ymm3
  4466e5:	c5 fe 6f 66 20 	vmovdqu	32(%rsi), %ymm4
  4466ea:	c5 fe 6f 6f 20 	vmovdqu	32(%rdi), %ymm5
  4466ef:	c5 e5 74 c2 	vpcmpeqb	%ymm2, %ymm3, %ymm0
  4466f3:	c5 fd d7 c0 	vpmovmskb	%ymm0, %eax
  4466f7:	35 ff ff ff ff 	xorl	$4294967295, %eax
  4466fc:	75 23 	jne	35 <runtime.cmpbody+0x221>
  4466fe:	c5 d5 74 f4 	vpcmpeqb	%ymm4, %ymm5, %ymm6
  446702:	c5 fd d7 c6 	vpmovmskb	%ymm6, %eax
  446706:	35 ff ff ff ff 	xorl	$4294967295, %eax
  44670b:	75 1c 	jne	28 <runtime.cmpbody+0x229>
  44670d:	48 83 c6 40 	addq	$64, %rsi
  446711:	48 83 c7 40 	addq	$64, %rdi
  446715:	49 83 e8 40 	subq	$64, %r8
  446719:	49 83 f8 40 	cmpq	$64, %r8
  44671d:	72 12 	jb	18 <runtime.cmpbody+0x231>
  44671f:	eb bc 	jmp	-68 <runtime.cmpbody+0x1dd>
  446721:	c5 f8 77 	vzeroupper
  446724:	e9 54 fe ff ff 	jmp	-428 <runtime.cmpbody+0x7d>
  446729:	c5 f8 77 	vzeroupper
  44672c:	e9 3a fe ff ff 	jmp	-454 <runtime.cmpbody+0x6b>
  446731:	c5 f8 77 	vzeroupper
  446734:	e9 fc fd ff ff 	jmp	-516 <runtime.cmpbody+0x35>
  446739:	cc 	int3
  44673a:	cc 	int3
  44673b:	cc 	int3
  44673c:	cc 	int3
  44673d:	cc 	int3
  44673e:	cc 	int3
  44673f:	cc 	int3

strings.IndexByte:
  446740:	48 8b 74 24 08 	movq	8(%rsp), %rsi
  446745:	48 8b 5c 24 10 	movq	16(%rsp), %rbx
  44674a:	8a 44 24 18 	movb	24(%rsp), %al
  44674e:	4c 8d 44 24 20 	leaq	32(%rsp), %r8
  446753:	e9 08 00 00 00 	jmp	8 <runtime.indexbytebody>
  446758:	cc 	int3
  446759:	cc 	int3
  44675a:	cc 	int3
  44675b:	cc 	int3
  44675c:	cc 	int3
  44675d:	cc 	int3
  44675e:	cc 	int3
  44675f:	cc 	int3

runtime.indexbytebody:
  446760:	66 48 0f 6e c0 	movq	%rax, %xmm0
  446765:	66 0f 60 c0 	punpcklbw	%xmm0, %xmm0
  446769:	66 0f 60 c0 	punpcklbw	%xmm0, %xmm0
  44676d:	66 0f 70 c0 00 	pshufd	$0, %xmm0, %xmm0
  446772:	48 83 fb 10 	cmpq	$16, %rbx
  446776:	7c 54 	jl	84 <runtime.indexbytebody+0x6c>
  446778:	48 89 f7 	movq	%rsi, %rdi
  44677b:	48 83 fb 20 	cmpq	$32, %rbx
  44677f:	0f 87 8d 00 00 00 	ja	141 <runtime.indexbytebody+0xb2>
  446785:	48 8d 44 1e f0 	leaq	-16(%rsi,%rbx), %rax
  44678a:	eb 15 	jmp	21 <runtime.indexbytebody+0x41>
  44678c:	f3 0f 6f 0f 	movdqu	(%rdi), %xmm1
  446790:	66 0f 74 c8 	pcmpeqb	%xmm0, %xmm1
  446794:	66 0f d7 d1 	pmovmskb	%xmm1, %edx
  446798:	0f bc d2 	bsfl	%edx, %edx
  44679b:	75 25 	jne	37 <runtime.indexbytebody+0x62>
  44679d:	48 83 c7 10 	addq	$16, %rdi
  4467a1:	48 39 c7 	cmpq	%rax, %rdi
  4467a4:	72 e6 	jb	-26 <runtime.indexbytebody+0x2c>
  4467a6:	48 89 c7 	movq	%rax, %rdi
  4467a9:	f3 0f 6f 08 	movdqu	(%rax), %xmm1
  4467ad:	66 0f 74 c8 	pcmpeqb	%xmm0, %xmm1
  4467b1:	66 0f d7 d1 	pmovmskb	%xmm1, %edx
  4467b5:	0f bc d2 	bsfl	%edx, %edx
  4467b8:	75 08 	jne	8 <runtime.indexbytebody+0x62>
  4467ba:	49 c7 00 ff ff ff ff 	movq	$-1, (%r8)
  4467c1:	c3 	retq
  4467c2:	48 29 f7 	subq	%rsi, %rdi
  4467c5:	48 01 d7 	addq	%rdx, %rdi
  4467c8:	49 89 38 	movq	%rdi, (%r8)
  4467cb:	c3 	retq
  4467cc:	48 85 db 	testq	%rbx, %rbx
  4467cf:	74 e9 	je	-23 <runtime.indexbytebody+0x5a>
  4467d1:	48 8d 46 10 	leaq	16(%rsi), %rax
  4467d5:	66 a9 f0 0f 	testw	$4080, %ax
  4467d9:	74 19 	je	25 <runtime.indexbytebody+0x94>
  4467db:	f3 0f 6f 0e 	movdqu	(%rsi), %xmm1
  4467df:	66 0f 74 c8 	pcmpeqb	%xmm0, %xmm1
  4467e3:	66 0f d7 d1 	pmovmskb	%xmm1, %edx
  4467e7:	0f bc d2 	bsfl	%edx, %edx
  4467ea:	74 ce 	je	-50 <runtime.indexbytebody+0x5a>
  4467ec:	39 da 	cmpl	%ebx, %edx
  4467ee:	73 ca 	jae	-54 <runtime.indexbytebody+0x5a>
  4467f0:	49 89 10 	movq	%rdx, (%r8)
  4467f3:	c3 	retq
  4467f4:	f3 0f 6f 4c 1e f0 	movdqu	-16(%rsi,%rbx), %xmm1
  4467fa:	66 0f 74 c8 	pcmpeqb	%xmm0, %xmm1
  4467fe:	66 0f d7 d1 	pmovmskb	%xmm1, %edx
  446802:	89 d9 	movl	%ebx, %ecx
  446804:	d3 e2 	shll	%cl, %edx
  446806:	c1 ea 10 	shrl	$16, %edx
  446809:	0f bc d2 	bsfl	%edx, %edx
  44680c:	74 ac 	je	-84 <runtime.indexbytebody+0x5a>
  44680e:	49 89 10 	movq	%rdx, (%r8)
  446811:	c3 	retq
  446812:	80 3d 9a d0 07 00 01 	cmpb	$1, 512154(%rip)
  446819:	0f 85 66 ff ff ff 	jne	-154 <runtime.indexbytebody+0x25>
  44681f:	66 48 0f 6e c0 	movq	%rax, %xmm0
  446824:	4c 8d 5c 1e e0 	leaq	-32(%rsi,%rbx), %r11
  446829:	c4 e2 7d 78 c8 	vpbroadcastb	%xmm0, %ymm1
  44682e:	c5 fe 6f 17 	vmovdqu	(%rdi), %ymm2
  446832:	c5 ed 74 d9 	vpcmpeqb	%ymm1, %ymm2, %ymm3
  446836:	c4 e2 7d 17 db 	vptest	%ymm3, %ymm3
  44683b:	75 26 	jne	38 <runtime.indexbytebody+0x103>
  44683d:	48 83 c7 20 	addq	$32, %rdi
  446841:	4c 39 df 	cmpq	%r11, %rdi
  446844:	7c e8 	jl	-24 <runtime.indexbytebody+0xce>
  446846:	4c 89 df 	movq	%r11, %rdi
  446849:	c5 fe 6f 17 	vmovdqu	(%rdi), %ymm2
  44684d:	c5 ed 74 d9 	vpcmpeqb	%ymm1, %ymm2, %ymm3
  446851:	c4 e2 7d 17 db 	vptest	%ymm3, %ymm3
  446856:	75 0b 	jne	11 <runtime.indexbytebody+0x103>
  446858:	c5 f8 77 	vzeroupper
  44685b:	49 c7 00 ff ff ff ff 	movq	$-1, (%r8)
  446862:	c3 	retq
  446863:	c5 fd d7 d3 	vpmovmskb	%ymm3, %edx
  446867:	0f bc d2 	bsfl	%edx, %edx
  44686a:	48 29 f7 	subq	%rsi, %rdi
  44686d:	48 01 fa 	addq	%rdi, %rdx
  446870:	49 89 10 	movq	%rdx, (%r8)
  446873:	c5 f8 77 	vzeroupper
  446876:	c3 	retq
  446877:	cc 	int3
  446878:	cc 	int3
  446879:	cc 	int3
  44687a:	cc 	int3
  44687b:	cc 	int3
  44687c:	cc 	int3
  44687d:	cc 	int3
  44687e:	cc 	int3
  44687f:	cc 	int3

runtime.return0:
  446880:	b8 00 00 00 00 	movl	$0, %eax
  446885:	c3 	retq
  446886:	cc 	int3
  446887:	cc 	int3
  446888:	cc 	int3
  446889:	cc 	int3
  44688a:	cc 	int3
  44688b:	cc 	int3
  44688c:	cc 	int3
  44688d:	cc 	int3
  44688e:	cc 	int3
  44688f:	cc 	int3

runtime.goexit:
  446890:	90 	nop
  446891:	e8 2a 29 fe ff 	callq	-120534 <runtime.goexit1>
  446896:	90 	nop
  446897:	cc 	int3
  446898:	cc 	int3
  446899:	cc 	int3
  44689a:	cc 	int3
  44689b:	cc 	int3
  44689c:	cc 	int3
  44689d:	cc 	int3
  44689e:	cc 	int3
  44689f:	cc 	int3

runtime.gcWriteBarrier:
  4468a0:	48 81 ec 80 00 00 00 	subq	$128, %rsp
  4468a7:	48 89 6c 24 78 	movq	%rbp, 120(%rsp)
  4468ac:	48 8d 6c 24 78 	leaq	120(%rsp), %rbp
  4468b1:	4c 89 74 24 68 	movq	%r14, 104(%rsp)
  4468b6:	4c 89 6c 24 70 	movq	%r13, 112(%rsp)
  4468bb:	64 4c 8b 2c 25 f8 ff ff ff 	movq	%fs:-8, %r13
  4468c4:	4d 8b 6d 30 	movq	48(%r13), %r13
  4468c8:	4d 8b ad d0 00 00 00 	movq	208(%r13), %r13
  4468cf:	4d 8b b5 90 12 00 00 	movq	4752(%r13), %r14
  4468d6:	4d 8d 76 10 	leaq	16(%r14), %r14
  4468da:	4d 89 b5 90 12 00 00 	movq	%r14, 4752(%r13)
  4468e1:	4d 3b b5 98 12 00 00 	cmpq	4760(%r13), %r14
  4468e8:	49 89 46 f0 	movq	%rax, -16(%r14)
  4468ec:	4c 8b 2f 	movq	(%rdi), %r13
  4468ef:	4d 89 6e f8 	movq	%r13, -8(%r14)
  4468f3:	74 1a 	je	26 <runtime.gcWriteBarrier+0x6f>
  4468f5:	4c 8b 74 24 68 	movq	104(%rsp), %r14
  4468fa:	4c 8b 6c 24 70 	movq	112(%rsp), %r13
  4468ff:	48 89 07 	movq	%rax, (%rdi)
  446902:	48 8b 6c 24 78 	movq	120(%rsp), %rbp
  446907:	48 81 c4 80 00 00 00 	addq	$128, %rsp
  44690e:	c3 	retq
  44690f:	48 89 3c 24 	movq	%rdi, (%rsp)
  446913:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  446918:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  44691d:	48 89 4c 24 18 	movq	%rcx, 24(%rsp)
  446922:	48 89 54 24 20 	movq	%rdx, 32(%rsp)
  446927:	48 89 74 24 28 	movq	%rsi, 40(%rsp)
  44692c:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  446931:	4c 89 44 24 38 	movq	%r8, 56(%rsp)
  446936:	4c 89 4c 24 40 	movq	%r9, 64(%rsp)
  44693b:	4c 89 54 24 48 	movq	%r10, 72(%rsp)
  446940:	4c 89 5c 24 50 	movq	%r11, 80(%rsp)
  446945:	4c 89 64 24 58 	movq	%r12, 88(%rsp)
  44694a:	4c 89 7c 24 60 	movq	%r15, 96(%rsp)
  44694f:	e8 9c 7b fd ff 	callq	-164964 <runtime.wbBufFlush>
  446954:	48 8b 3c 24 	movq	(%rsp), %rdi
  446958:	48 8b 44 24 08 	movq	8(%rsp), %rax
  44695d:	48 8b 5c 24 10 	movq	16(%rsp), %rbx
  446962:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  446967:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  44696c:	48 8b 74 24 28 	movq	40(%rsp), %rsi
  446971:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  446976:	4c 8b 44 24 38 	movq	56(%rsp), %r8
  44697b:	4c 8b 4c 24 40 	movq	64(%rsp), %r9
  446980:	4c 8b 54 24 48 	movq	72(%rsp), %r10
  446985:	4c 8b 5c 24 50 	movq	80(%rsp), %r11
  44698a:	4c 8b 64 24 58 	movq	88(%rsp), %r12
  44698f:	4c 8b 7c 24 60 	movq	96(%rsp), %r15
  446994:	e9 5c ff ff ff 	jmp	-164 <runtime.gcWriteBarrier+0x55>
  446999:	cc 	int3
  44699a:	cc 	int3
  44699b:	cc 	int3
  44699c:	cc 	int3
  44699d:	cc 	int3
  44699e:	cc 	int3
  44699f:	cc 	int3

runtime.duffzero:
  4469a0:	0f 11 07 	movups	%xmm0, (%rdi)
  4469a3:	0f 11 47 10 	movups	%xmm0, 16(%rdi)
  4469a7:	0f 11 47 20 	movups	%xmm0, 32(%rdi)
  4469ab:	0f 11 47 30 	movups	%xmm0, 48(%rdi)
  4469af:	48 8d 7f 40 	leaq	64(%rdi), %rdi
  4469b3:	0f 11 07 	movups	%xmm0, (%rdi)
  4469b6:	0f 11 47 10 	movups	%xmm0, 16(%rdi)
  4469ba:	0f 11 47 20 	movups	%xmm0, 32(%rdi)
  4469be:	0f 11 47 30 	movups	%xmm0, 48(%rdi)
  4469c2:	48 8d 7f 40 	leaq	64(%rdi), %rdi
  4469c6:	0f 11 07 	movups	%xmm0, (%rdi)
  4469c9:	0f 11 47 10 	movups	%xmm0, 16(%rdi)
  4469cd:	0f 11 47 20 	movups	%xmm0, 32(%rdi)
  4469d1:	0f 11 47 30 	movups	%xmm0, 48(%rdi)
  4469d5:	48 8d 7f 40 	leaq	64(%rdi), %rdi
  4469d9:	0f 11 07 	movups	%xmm0, (%rdi)
  4469dc:	0f 11 47 10 	movups	%xmm0, 16(%rdi)
  4469e0:	0f 11 47 20 	movups	%xmm0, 32(%rdi)
  4469e4:	0f 11 47 30 	movups	%xmm0, 48(%rdi)
  4469e8:	48 8d 7f 40 	leaq	64(%rdi), %rdi
  4469ec:	0f 11 07 	movups	%xmm0, (%rdi)
  4469ef:	0f 11 47 10 	movups	%xmm0, 16(%rdi)
  4469f3:	0f 11 47 20 	movups	%xmm0, 32(%rdi)
  4469f7:	0f 11 47 30 	movups	%xmm0, 48(%rdi)
  4469fb:	48 8d 7f 40 	leaq	64(%rdi), %rdi
  4469ff:	0f 11 07 	movups	%xmm0, (%rdi)
  446a02:	0f 11 47 10 	movups	%xmm0, 16(%rdi)
  446a06:	0f 11 47 20 	movups	%xmm0, 32(%rdi)
  446a0a:	0f 11 47 30 	movups	%xmm0, 48(%rdi)
  446a0e:	48 8d 7f 40 	leaq	64(%rdi), %rdi
  446a12:	0f 11 07 	movups	%xmm0, (%rdi)
  446a15:	0f 11 47 10 	movups	%xmm0, 16(%rdi)
  446a19:	0f 11 47 20 	movups	%xmm0, 32(%rdi)
  446a1d:	0f 11 47 30 	movups	%xmm0, 48(%rdi)
  446a21:	48 8d 7f 40 	leaq	64(%rdi), %rdi
  446a25:	0f 11 07 	movups	%xmm0, (%rdi)
  446a28:	0f 11 47 10 	movups	%xmm0, 16(%rdi)
  446a2c:	0f 11 47 20 	movups	%xmm0, 32(%rdi)
  446a30:	0f 11 47 30 	movups	%xmm0, 48(%rdi)
  446a34:	48 8d 7f 40 	leaq	64(%rdi), %rdi
  446a38:	0f 11 07 	movups	%xmm0, (%rdi)
  446a3b:	0f 11 47 10 	movups	%xmm0, 16(%rdi)
  446a3f:	0f 11 47 20 	movups	%xmm0, 32(%rdi)
  446a43:	0f 11 47 30 	movups	%xmm0, 48(%rdi)
  446a47:	48 8d 7f 40 	leaq	64(%rdi), %rdi
  446a4b:	0f 11 07 	movups	%xmm0, (%rdi)
  446a4e:	0f 11 47 10 	movups	%xmm0, 16(%rdi)
  446a52:	0f 11 47 20 	movups	%xmm0, 32(%rdi)
  446a56:	0f 11 47 30 	movups	%xmm0, 48(%rdi)
  446a5a:	48 8d 7f 40 	leaq	64(%rdi), %rdi
  446a5e:	0f 11 07 	movups	%xmm0, (%rdi)
  446a61:	0f 11 47 10 	movups	%xmm0, 16(%rdi)
  446a65:	0f 11 47 20 	movups	%xmm0, 32(%rdi)
  446a69:	0f 11 47 30 	movups	%xmm0, 48(%rdi)
  446a6d:	48 8d 7f 40 	leaq	64(%rdi), %rdi
  446a71:	0f 11 07 	movups	%xmm0, (%rdi)
  446a74:	0f 11 47 10 	movups	%xmm0, 16(%rdi)
  446a78:	0f 11 47 20 	movups	%xmm0, 32(%rdi)
  446a7c:	0f 11 47 30 	movups	%xmm0, 48(%rdi)
  446a80:	48 8d 7f 40 	leaq	64(%rdi), %rdi
  446a84:	0f 11 07 	movups	%xmm0, (%rdi)
  446a87:	0f 11 47 10 	movups	%xmm0, 16(%rdi)
  446a8b:	0f 11 47 20 	movups	%xmm0, 32(%rdi)
  446a8f:	0f 11 47 30 	movups	%xmm0, 48(%rdi)
  446a93:	48 8d 7f 40 	leaq	64(%rdi), %rdi
  446a97:	0f 11 07 	movups	%xmm0, (%rdi)
  446a9a:	0f 11 47 10 	movups	%xmm0, 16(%rdi)
  446a9e:	0f 11 47 20 	movups	%xmm0, 32(%rdi)
  446aa2:	0f 11 47 30 	movups	%xmm0, 48(%rdi)
  446aa6:	48 8d 7f 40 	leaq	64(%rdi), %rdi
  446aaa:	0f 11 07 	movups	%xmm0, (%rdi)
  446aad:	0f 11 47 10 	movups	%xmm0, 16(%rdi)
  446ab1:	0f 11 47 20 	movups	%xmm0, 32(%rdi)
  446ab5:	0f 11 47 30 	movups	%xmm0, 48(%rdi)
  446ab9:	48 8d 7f 40 	leaq	64(%rdi), %rdi
  446abd:	0f 11 07 	movups	%xmm0, (%rdi)
  446ac0:	0f 11 47 10 	movups	%xmm0, 16(%rdi)
  446ac4:	0f 11 47 20 	movups	%xmm0, 32(%rdi)
  446ac8:	0f 11 47 30 	movups	%xmm0, 48(%rdi)
  446acc:	48 8d 7f 40 	leaq	64(%rdi), %rdi
  446ad0:	c3 	retq
  446ad1:	cc 	int3
  446ad2:	cc 	int3
  446ad3:	cc 	int3
  446ad4:	cc 	int3
  446ad5:	cc 	int3
  446ad6:	cc 	int3
  446ad7:	cc 	int3
  446ad8:	cc 	int3
  446ad9:	cc 	int3
  446ada:	cc 	int3
  446adb:	cc 	int3
  446adc:	cc 	int3
  446add:	cc 	int3
  446ade:	cc 	int3
  446adf:	cc 	int3

runtime.duffcopy:
  446ae0:	0f 10 06 	movups	(%rsi), %xmm0
  446ae3:	48 83 c6 10 	addq	$16, %rsi
  446ae7:	0f 11 07 	movups	%xmm0, (%rdi)
  446aea:	48 83 c7 10 	addq	$16, %rdi
  446aee:	0f 10 06 	movups	(%rsi), %xmm0
  446af1:	48 83 c6 10 	addq	$16, %rsi
  446af5:	0f 11 07 	movups	%xmm0, (%rdi)
  446af8:	48 83 c7 10 	addq	$16, %rdi
  446afc:	0f 10 06 	movups	(%rsi), %xmm0
  446aff:	48 83 c6 10 	addq	$16, %rsi
  446b03:	0f 11 07 	movups	%xmm0, (%rdi)
  446b06:	48 83 c7 10 	addq	$16, %rdi
  446b0a:	0f 10 06 	movups	(%rsi), %xmm0
  446b0d:	48 83 c6 10 	addq	$16, %rsi
  446b11:	0f 11 07 	movups	%xmm0, (%rdi)
  446b14:	48 83 c7 10 	addq	$16, %rdi
  446b18:	0f 10 06 	movups	(%rsi), %xmm0
  446b1b:	48 83 c6 10 	addq	$16, %rsi
  446b1f:	0f 11 07 	movups	%xmm0, (%rdi)
  446b22:	48 83 c7 10 	addq	$16, %rdi
  446b26:	0f 10 06 	movups	(%rsi), %xmm0
  446b29:	48 83 c6 10 	addq	$16, %rsi
  446b2d:	0f 11 07 	movups	%xmm0, (%rdi)
  446b30:	48 83 c7 10 	addq	$16, %rdi
  446b34:	0f 10 06 	movups	(%rsi), %xmm0
  446b37:	48 83 c6 10 	addq	$16, %rsi
  446b3b:	0f 11 07 	movups	%xmm0, (%rdi)
  446b3e:	48 83 c7 10 	addq	$16, %rdi
  446b42:	0f 10 06 	movups	(%rsi), %xmm0
  446b45:	48 83 c6 10 	addq	$16, %rsi
  446b49:	0f 11 07 	movups	%xmm0, (%rdi)
  446b4c:	48 83 c7 10 	addq	$16, %rdi
  446b50:	0f 10 06 	movups	(%rsi), %xmm0
  446b53:	48 83 c6 10 	addq	$16, %rsi
  446b57:	0f 11 07 	movups	%xmm0, (%rdi)
  446b5a:	48 83 c7 10 	addq	$16, %rdi
  446b5e:	0f 10 06 	movups	(%rsi), %xmm0
  446b61:	48 83 c6 10 	addq	$16, %rsi
  446b65:	0f 11 07 	movups	%xmm0, (%rdi)
  446b68:	48 83 c7 10 	addq	$16, %rdi
  446b6c:	0f 10 06 	movups	(%rsi), %xmm0
  446b6f:	48 83 c6 10 	addq	$16, %rsi
  446b73:	0f 11 07 	movups	%xmm0, (%rdi)
  446b76:	48 83 c7 10 	addq	$16, %rdi
  446b7a:	0f 10 06 	movups	(%rsi), %xmm0
  446b7d:	48 83 c6 10 	addq	$16, %rsi
  446b81:	0f 11 07 	movups	%xmm0, (%rdi)
  446b84:	48 83 c7 10 	addq	$16, %rdi
  446b88:	0f 10 06 	movups	(%rsi), %xmm0
  446b8b:	48 83 c6 10 	addq	$16, %rsi
  446b8f:	0f 11 07 	movups	%xmm0, (%rdi)
  446b92:	48 83 c7 10 	addq	$16, %rdi
  446b96:	0f 10 06 	movups	(%rsi), %xmm0
  446b99:	48 83 c6 10 	addq	$16, %rsi
  446b9d:	0f 11 07 	movups	%xmm0, (%rdi)
  446ba0:	48 83 c7 10 	addq	$16, %rdi
  446ba4:	0f 10 06 	movups	(%rsi), %xmm0
  446ba7:	48 83 c6 10 	addq	$16, %rsi
  446bab:	0f 11 07 	movups	%xmm0, (%rdi)
  446bae:	48 83 c7 10 	addq	$16, %rdi
  446bb2:	0f 10 06 	movups	(%rsi), %xmm0
  446bb5:	48 83 c6 10 	addq	$16, %rsi
  446bb9:	0f 11 07 	movups	%xmm0, (%rdi)
  446bbc:	48 83 c7 10 	addq	$16, %rdi
  446bc0:	0f 10 06 	movups	(%rsi), %xmm0
  446bc3:	48 83 c6 10 	addq	$16, %rsi
  446bc7:	0f 11 07 	movups	%xmm0, (%rdi)
  446bca:	48 83 c7 10 	addq	$16, %rdi
  446bce:	0f 10 06 	movups	(%rsi), %xmm0
  446bd1:	48 83 c6 10 	addq	$16, %rsi
  446bd5:	0f 11 07 	movups	%xmm0, (%rdi)
  446bd8:	48 83 c7 10 	addq	$16, %rdi
  446bdc:	0f 10 06 	movups	(%rsi), %xmm0
  446bdf:	48 83 c6 10 	addq	$16, %rsi
  446be3:	0f 11 07 	movups	%xmm0, (%rdi)
  446be6:	48 83 c7 10 	addq	$16, %rdi
  446bea:	0f 10 06 	movups	(%rsi), %xmm0
  446bed:	48 83 c6 10 	addq	$16, %rsi
  446bf1:	0f 11 07 	movups	%xmm0, (%rdi)
  446bf4:	48 83 c7 10 	addq	$16, %rdi
  446bf8:	0f 10 06 	movups	(%rsi), %xmm0
  446bfb:	48 83 c6 10 	addq	$16, %rsi
  446bff:	0f 11 07 	movups	%xmm0, (%rdi)
  446c02:	48 83 c7 10 	addq	$16, %rdi
  446c06:	0f 10 06 	movups	(%rsi), %xmm0
  446c09:	48 83 c6 10 	addq	$16, %rsi
  446c0d:	0f 11 07 	movups	%xmm0, (%rdi)
  446c10:	48 83 c7 10 	addq	$16, %rdi
  446c14:	0f 10 06 	movups	(%rsi), %xmm0
  446c17:	48 83 c6 10 	addq	$16, %rsi
  446c1b:	0f 11 07 	movups	%xmm0, (%rdi)
  446c1e:	48 83 c7 10 	addq	$16, %rdi
  446c22:	0f 10 06 	movups	(%rsi), %xmm0
  446c25:	48 83 c6 10 	addq	$16, %rsi
  446c29:	0f 11 07 	movups	%xmm0, (%rdi)
  446c2c:	48 83 c7 10 	addq	$16, %rdi
  446c30:	0f 10 06 	movups	(%rsi), %xmm0
  446c33:	48 83 c6 10 	addq	$16, %rsi
  446c37:	0f 11 07 	movups	%xmm0, (%rdi)
  446c3a:	48 83 c7 10 	addq	$16, %rdi
  446c3e:	0f 10 06 	movups	(%rsi), %xmm0
  446c41:	48 83 c6 10 	addq	$16, %rsi
  446c45:	0f 11 07 	movups	%xmm0, (%rdi)
  446c48:	48 83 c7 10 	addq	$16, %rdi
  446c4c:	0f 10 06 	movups	(%rsi), %xmm0
  446c4f:	48 83 c6 10 	addq	$16, %rsi
  446c53:	0f 11 07 	movups	%xmm0, (%rdi)
  446c56:	48 83 c7 10 	addq	$16, %rdi
  446c5a:	0f 10 06 	movups	(%rsi), %xmm0
  446c5d:	48 83 c6 10 	addq	$16, %rsi
  446c61:	0f 11 07 	movups	%xmm0, (%rdi)
  446c64:	48 83 c7 10 	addq	$16, %rdi
  446c68:	0f 10 06 	movups	(%rsi), %xmm0
  446c6b:	48 83 c6 10 	addq	$16, %rsi
  446c6f:	0f 11 07 	movups	%xmm0, (%rdi)
  446c72:	48 83 c7 10 	addq	$16, %rdi
  446c76:	0f 10 06 	movups	(%rsi), %xmm0
  446c79:	48 83 c6 10 	addq	$16, %rsi
  446c7d:	0f 11 07 	movups	%xmm0, (%rdi)
  446c80:	48 83 c7 10 	addq	$16, %rdi
  446c84:	0f 10 06 	movups	(%rsi), %xmm0
  446c87:	48 83 c6 10 	addq	$16, %rsi
  446c8b:	0f 11 07 	movups	%xmm0, (%rdi)
  446c8e:	48 83 c7 10 	addq	$16, %rdi
  446c92:	0f 10 06 	movups	(%rsi), %xmm0
  446c95:	48 83 c6 10 	addq	$16, %rsi
  446c99:	0f 11 07 	movups	%xmm0, (%rdi)
  446c9c:	48 83 c7 10 	addq	$16, %rdi
  446ca0:	0f 10 06 	movups	(%rsi), %xmm0
  446ca3:	48 83 c6 10 	addq	$16, %rsi
  446ca7:	0f 11 07 	movups	%xmm0, (%rdi)
  446caa:	48 83 c7 10 	addq	$16, %rdi
  446cae:	0f 10 06 	movups	(%rsi), %xmm0
  446cb1:	48 83 c6 10 	addq	$16, %rsi
  446cb5:	0f 11 07 	movups	%xmm0, (%rdi)
  446cb8:	48 83 c7 10 	addq	$16, %rdi
  446cbc:	0f 10 06 	movups	(%rsi), %xmm0
  446cbf:	48 83 c6 10 	addq	$16, %rsi
  446cc3:	0f 11 07 	movups	%xmm0, (%rdi)
  446cc6:	48 83 c7 10 	addq	$16, %rdi
  446cca:	0f 10 06 	movups	(%rsi), %xmm0
  446ccd:	48 83 c6 10 	addq	$16, %rsi
  446cd1:	0f 11 07 	movups	%xmm0, (%rdi)
  446cd4:	48 83 c7 10 	addq	$16, %rdi
  446cd8:	0f 10 06 	movups	(%rsi), %xmm0
  446cdb:	48 83 c6 10 	addq	$16, %rsi
  446cdf:	0f 11 07 	movups	%xmm0, (%rdi)
  446ce2:	48 83 c7 10 	addq	$16, %rdi
  446ce6:	0f 10 06 	movups	(%rsi), %xmm0
  446ce9:	48 83 c6 10 	addq	$16, %rsi
  446ced:	0f 11 07 	movups	%xmm0, (%rdi)
  446cf0:	48 83 c7 10 	addq	$16, %rdi
  446cf4:	0f 10 06 	movups	(%rsi), %xmm0
  446cf7:	48 83 c6 10 	addq	$16, %rsi
  446cfb:	0f 11 07 	movups	%xmm0, (%rdi)
  446cfe:	48 83 c7 10 	addq	$16, %rdi
  446d02:	0f 10 06 	movups	(%rsi), %xmm0
  446d05:	48 83 c6 10 	addq	$16, %rsi
  446d09:	0f 11 07 	movups	%xmm0, (%rdi)
  446d0c:	48 83 c7 10 	addq	$16, %rdi
  446d10:	0f 10 06 	movups	(%rsi), %xmm0
  446d13:	48 83 c6 10 	addq	$16, %rsi
  446d17:	0f 11 07 	movups	%xmm0, (%rdi)
  446d1a:	48 83 c7 10 	addq	$16, %rdi
  446d1e:	0f 10 06 	movups	(%rsi), %xmm0
  446d21:	48 83 c6 10 	addq	$16, %rsi
  446d25:	0f 11 07 	movups	%xmm0, (%rdi)
  446d28:	48 83 c7 10 	addq	$16, %rdi
  446d2c:	0f 10 06 	movups	(%rsi), %xmm0
  446d2f:	48 83 c6 10 	addq	$16, %rsi
  446d33:	0f 11 07 	movups	%xmm0, (%rdi)
  446d36:	48 83 c7 10 	addq	$16, %rdi
  446d3a:	0f 10 06 	movups	(%rsi), %xmm0
  446d3d:	48 83 c6 10 	addq	$16, %rsi
  446d41:	0f 11 07 	movups	%xmm0, (%rdi)
  446d44:	48 83 c7 10 	addq	$16, %rdi
  446d48:	0f 10 06 	movups	(%rsi), %xmm0
  446d4b:	48 83 c6 10 	addq	$16, %rsi
  446d4f:	0f 11 07 	movups	%xmm0, (%rdi)
  446d52:	48 83 c7 10 	addq	$16, %rdi
  446d56:	0f 10 06 	movups	(%rsi), %xmm0
  446d59:	48 83 c6 10 	addq	$16, %rsi
  446d5d:	0f 11 07 	movups	%xmm0, (%rdi)
  446d60:	48 83 c7 10 	addq	$16, %rdi
  446d64:	0f 10 06 	movups	(%rsi), %xmm0
  446d67:	48 83 c6 10 	addq	$16, %rsi
  446d6b:	0f 11 07 	movups	%xmm0, (%rdi)
  446d6e:	48 83 c7 10 	addq	$16, %rdi
  446d72:	0f 10 06 	movups	(%rsi), %xmm0
  446d75:	48 83 c6 10 	addq	$16, %rsi
  446d79:	0f 11 07 	movups	%xmm0, (%rdi)
  446d7c:	48 83 c7 10 	addq	$16, %rdi
  446d80:	0f 10 06 	movups	(%rsi), %xmm0
  446d83:	48 83 c6 10 	addq	$16, %rsi
  446d87:	0f 11 07 	movups	%xmm0, (%rdi)
  446d8a:	48 83 c7 10 	addq	$16, %rdi
  446d8e:	0f 10 06 	movups	(%rsi), %xmm0
  446d91:	48 83 c6 10 	addq	$16, %rsi
  446d95:	0f 11 07 	movups	%xmm0, (%rdi)
  446d98:	48 83 c7 10 	addq	$16, %rdi
  446d9c:	0f 10 06 	movups	(%rsi), %xmm0
  446d9f:	48 83 c6 10 	addq	$16, %rsi
  446da3:	0f 11 07 	movups	%xmm0, (%rdi)
  446da6:	48 83 c7 10 	addq	$16, %rdi
  446daa:	0f 10 06 	movups	(%rsi), %xmm0
  446dad:	48 83 c6 10 	addq	$16, %rsi
  446db1:	0f 11 07 	movups	%xmm0, (%rdi)
  446db4:	48 83 c7 10 	addq	$16, %rdi
  446db8:	0f 10 06 	movups	(%rsi), %xmm0
  446dbb:	48 83 c6 10 	addq	$16, %rsi
  446dbf:	0f 11 07 	movups	%xmm0, (%rdi)
  446dc2:	48 83 c7 10 	addq	$16, %rdi
  446dc6:	0f 10 06 	movups	(%rsi), %xmm0
  446dc9:	48 83 c6 10 	addq	$16, %rsi
  446dcd:	0f 11 07 	movups	%xmm0, (%rdi)
  446dd0:	48 83 c7 10 	addq	$16, %rdi
  446dd4:	0f 10 06 	movups	(%rsi), %xmm0
  446dd7:	48 83 c6 10 	addq	$16, %rsi
  446ddb:	0f 11 07 	movups	%xmm0, (%rdi)
  446dde:	48 83 c7 10 	addq	$16, %rdi
  446de2:	0f 10 06 	movups	(%rsi), %xmm0
  446de5:	48 83 c6 10 	addq	$16, %rsi
  446de9:	0f 11 07 	movups	%xmm0, (%rdi)
  446dec:	48 83 c7 10 	addq	$16, %rdi
  446df0:	0f 10 06 	movups	(%rsi), %xmm0
  446df3:	48 83 c6 10 	addq	$16, %rsi
  446df7:	0f 11 07 	movups	%xmm0, (%rdi)
  446dfa:	48 83 c7 10 	addq	$16, %rdi
  446dfe:	0f 10 06 	movups	(%rsi), %xmm0
  446e01:	48 83 c6 10 	addq	$16, %rsi
  446e05:	0f 11 07 	movups	%xmm0, (%rdi)
  446e08:	48 83 c7 10 	addq	$16, %rdi
  446e0c:	0f 10 06 	movups	(%rsi), %xmm0
  446e0f:	48 83 c6 10 	addq	$16, %rsi
  446e13:	0f 11 07 	movups	%xmm0, (%rdi)
  446e16:	48 83 c7 10 	addq	$16, %rdi
  446e1a:	0f 10 06 	movups	(%rsi), %xmm0
  446e1d:	48 83 c6 10 	addq	$16, %rsi
  446e21:	0f 11 07 	movups	%xmm0, (%rdi)
  446e24:	48 83 c7 10 	addq	$16, %rdi
  446e28:	0f 10 06 	movups	(%rsi), %xmm0
  446e2b:	48 83 c6 10 	addq	$16, %rsi
  446e2f:	0f 11 07 	movups	%xmm0, (%rdi)
  446e32:	48 83 c7 10 	addq	$16, %rdi
  446e36:	0f 10 06 	movups	(%rsi), %xmm0
  446e39:	48 83 c6 10 	addq	$16, %rsi
  446e3d:	0f 11 07 	movups	%xmm0, (%rdi)
  446e40:	48 83 c7 10 	addq	$16, %rdi
  446e44:	0f 10 06 	movups	(%rsi), %xmm0
  446e47:	48 83 c6 10 	addq	$16, %rsi
  446e4b:	0f 11 07 	movups	%xmm0, (%rdi)
  446e4e:	48 83 c7 10 	addq	$16, %rdi
  446e52:	0f 10 06 	movups	(%rsi), %xmm0
  446e55:	48 83 c6 10 	addq	$16, %rsi
  446e59:	0f 11 07 	movups	%xmm0, (%rdi)
  446e5c:	48 83 c7 10 	addq	$16, %rdi
  446e60:	c3 	retq
  446e61:	cc 	int3
  446e62:	cc 	int3
  446e63:	cc 	int3
  446e64:	cc 	int3
  446e65:	cc 	int3
  446e66:	cc 	int3
  446e67:	cc 	int3
  446e68:	cc 	int3
  446e69:	cc 	int3
  446e6a:	cc 	int3
  446e6b:	cc 	int3
  446e6c:	cc 	int3
  446e6d:	cc 	int3
  446e6e:	cc 	int3
  446e6f:	cc 	int3

runtime.memclrNoHeapPointers:
  446e70:	48 8b 7c 24 08 	movq	8(%rsp), %rdi
  446e75:	48 8b 5c 24 10 	movq	16(%rsp), %rbx
  446e7a:	48 31 c0 	xorq	%rax, %rax
  446e7d:	48 85 db 	testq	%rbx, %rbx
  446e80:	0f 84 a8 01 00 00 	je	424 <runtime.memclrNoHeapPointers+0x1be>
  446e86:	48 83 fb 02 	cmpq	$2, %rbx
  446e8a:	0f 86 97 01 00 00 	jbe	407 <runtime.memclrNoHeapPointers+0x1b7>
  446e90:	48 83 fb 04 	cmpq	$4, %rbx
  446e94:	0f 86 95 01 00 00 	jbe	405 <runtime.memclrNoHeapPointers+0x1bf>
  446e9a:	48 83 fb 08 	cmpq	$8, %rbx
  446e9e:	0f 82 94 01 00 00 	jb	404 <runtime.memclrNoHeapPointers+0x1c8>
  446ea4:	0f 84 95 01 00 00 	je	405 <runtime.memclrNoHeapPointers+0x1cf>
  446eaa:	48 83 fb 10 	cmpq	$16, %rbx
  446eae:	0f 86 8f 01 00 00 	jbe	399 <runtime.memclrNoHeapPointers+0x1d3>
  446eb4:	66 0f ef c0 	pxor	%xmm0, %xmm0
  446eb8:	48 83 fb 20 	cmpq	$32, %rbx
  446ebc:	0f 86 8a 01 00 00 	jbe	394 <runtime.memclrNoHeapPointers+0x1dc>
  446ec2:	48 83 fb 40 	cmpq	$64, %rbx
  446ec6:	0f 86 8b 01 00 00 	jbe	395 <runtime.memclrNoHeapPointers+0x1e7>
  446ecc:	48 81 fb 80 00 00 00 	cmpq	$128, %rbx
  446ed3:	0f 86 94 01 00 00 	jbe	404 <runtime.memclrNoHeapPointers+0x1fd>
  446ed9:	48 81 fb 00 01 00 00 	cmpq	$256, %rbx
  446ee0:	0f 86 b3 01 00 00 	jbe	435 <runtime.memclrNoHeapPointers+0x229>
  446ee6:	80 3d c6 c9 07 00 01 	cmpb	$1, 510406(%rip)
  446eed:	0f 84 83 00 00 00 	je	131 <runtime.memclrNoHeapPointers+0x106>
  446ef3:	f3 0f 7f 07 	movdqu	%xmm0, (%rdi)
  446ef7:	f3 0f 7f 47 10 	movdqu	%xmm0, 16(%rdi)
  446efc:	f3 0f 7f 47 20 	movdqu	%xmm0, 32(%rdi)
  446f01:	f3 0f 7f 47 30 	movdqu	%xmm0, 48(%rdi)
  446f06:	f3 0f 7f 47 40 	movdqu	%xmm0, 64(%rdi)
  446f0b:	f3 0f 7f 47 50 	movdqu	%xmm0, 80(%rdi)
  446f10:	f3 0f 7f 47 60 	movdqu	%xmm0, 96(%rdi)
  446f15:	f3 0f 7f 47 70 	movdqu	%xmm0, 112(%rdi)
  446f1a:	f3 0f 7f 87 80 00 00 00 	movdqu	%xmm0, 128(%rdi)
  446f22:	f3 0f 7f 87 90 00 00 00 	movdqu	%xmm0, 144(%rdi)
  446f2a:	f3 0f 7f 87 a0 00 00 00 	movdqu	%xmm0, 160(%rdi)
  446f32:	f3 0f 7f 87 b0 00 00 00 	movdqu	%xmm0, 176(%rdi)
  446f3a:	f3 0f 7f 87 c0 00 00 00 	movdqu	%xmm0, 192(%rdi)
  446f42:	f3 0f 7f 87 d0 00 00 00 	movdqu	%xmm0, 208(%rdi)
  446f4a:	f3 0f 7f 87 e0 00 00 00 	movdqu	%xmm0, 224(%rdi)
  446f52:	f3 0f 7f 87 f0 00 00 00 	movdqu	%xmm0, 240(%rdi)
  446f5a:	48 81 eb 00 01 00 00 	subq	$256, %rbx
  446f61:	48 81 c7 00 01 00 00 	addq	$256, %rdi
  446f68:	48 81 fb 00 01 00 00 	cmpq	$256, %rbx
  446f6f:	73 82 	jae	-126 <runtime.memclrNoHeapPointers+0x83>
  446f71:	e9 07 ff ff ff 	jmp	-249 <runtime.memclrNoHeapPointers+0xd>
  446f76:	c5 fd ef c0 	vpxor	%ymm0, %ymm0, %ymm0
  446f7a:	48 81 fb 00 00 00 02 	cmpq	$33554432, %rbx
  446f81:	73 46 	jae	70 <runtime.memclrNoHeapPointers+0x159>
  446f83:	c5 fe 7f 07 	vmovdqu	%ymm0, (%rdi)
  446f87:	c5 fe 7f 47 20 	vmovdqu	%ymm0, 32(%rdi)
  446f8c:	c5 fe 7f 47 40 	vmovdqu	%ymm0, 64(%rdi)
  446f91:	c5 fe 7f 47 60 	vmovdqu	%ymm0, 96(%rdi)
  446f96:	48 81 eb 80 00 00 00 	subq	$128, %rbx
  446f9d:	48 81 c7 80 00 00 00 	addq	$128, %rdi
  446fa4:	48 81 fb 80 00 00 00 	cmpq	$128, %rbx
  446fab:	73 d6 	jae	-42 <runtime.memclrNoHeapPointers+0x113>
  446fad:	c5 fe 7f 44 1f e0 	vmovdqu	%ymm0, -32(%rdi,%rbx)
  446fb3:	c5 fe 7f 44 1f c0 	vmovdqu	%ymm0, -64(%rdi,%rbx)
  446fb9:	c5 fe 7f 44 1f a0 	vmovdqu	%ymm0, -96(%rdi,%rbx)
  446fbf:	c5 fe 7f 44 1f 80 	vmovdqu	%ymm0, -128(%rdi,%rbx)
  446fc5:	c5 f8 77 	vzeroupper
  446fc8:	c3 	retq
  446fc9:	c5 fe 7f 07 	vmovdqu	%ymm0, (%rdi)
  446fcd:	48 89 fe 	movq	%rdi, %rsi
  446fd0:	48 83 c7 20 	addq	$32, %rdi
  446fd4:	48 83 e7 e0 	andq	$-32, %rdi
  446fd8:	48 29 fe 	subq	%rdi, %rsi
  446fdb:	48 01 f3 	addq	%rsi, %rbx
  446fde:	c5 fd e7 07 	vmovntdq	%ymm0, (%rdi)
  446fe2:	c5 fd e7 47 20 	vmovntdq	%ymm0, 32(%rdi)
  446fe7:	c5 fd e7 47 40 	vmovntdq	%ymm0, 64(%rdi)
  446fec:	c5 fd e7 47 60 	vmovntdq	%ymm0, 96(%rdi)
  446ff1:	48 81 eb 80 00 00 00 	subq	$128, %rbx
  446ff8:	48 81 c7 80 00 00 00 	addq	$128, %rdi
  446fff:	48 81 fb 80 00 00 00 	cmpq	$128, %rbx
  447006:	73 d6 	jae	-42 <runtime.memclrNoHeapPointers+0x16e>
  447008:	0f ae f8 	sfence
  44700b:	c5 fe 7f 44 1f e0 	vmovdqu	%ymm0, -32(%rdi,%rbx)
  447011:	c5 fe 7f 44 1f c0 	vmovdqu	%ymm0, -64(%rdi,%rbx)
  447017:	c5 fe 7f 44 1f a0 	vmovdqu	%ymm0, -96(%rdi,%rbx)
  44701d:	c5 fe 7f 44 1f 80 	vmovdqu	%ymm0, -128(%rdi,%rbx)
  447023:	c5 f8 77 	vzeroupper
  447026:	c3 	retq
  447027:	88 07 	movb	%al, (%rdi)
  447029:	88 44 1f ff 	movb	%al, -1(%rdi,%rbx)
  44702d:	c3 	retq
  44702e:	c3 	retq
  44702f:	66 89 07 	movw	%ax, (%rdi)
  447032:	66 89 44 1f fe 	movw	%ax, -2(%rdi,%rbx)
  447037:	c3 	retq
  447038:	89 07 	movl	%eax, (%rdi)
  44703a:	89 44 1f fc 	movl	%eax, -4(%rdi,%rbx)
  44703e:	c3 	retq
  44703f:	48 89 07 	movq	%rax, (%rdi)
  447042:	c3 	retq
  447043:	48 89 07 	movq	%rax, (%rdi)
  447046:	48 89 44 1f f8 	movq	%rax, -8(%rdi,%rbx)
  44704b:	c3 	retq
  44704c:	f3 0f 7f 07 	movdqu	%xmm0, (%rdi)
  447050:	f3 0f 7f 44 1f f0 	movdqu	%xmm0, -16(%rdi,%rbx)
  447056:	c3 	retq
  447057:	f3 0f 7f 07 	movdqu	%xmm0, (%rdi)
  44705b:	f3 0f 7f 47 10 	movdqu	%xmm0, 16(%rdi)
  447060:	f3 0f 7f 44 1f e0 	movdqu	%xmm0, -32(%rdi,%rbx)
  447066:	f3 0f 7f 44 1f f0 	movdqu	%xmm0, -16(%rdi,%rbx)
  44706c:	c3 	retq
  44706d:	f3 0f 7f 07 	movdqu	%xmm0, (%rdi)
  447071:	f3 0f 7f 47 10 	movdqu	%xmm0, 16(%rdi)
  447076:	f3 0f 7f 47 20 	movdqu	%xmm0, 32(%rdi)
  44707b:	f3 0f 7f 47 30 	movdqu	%xmm0, 48(%rdi)
  447080:	f3 0f 7f 44 1f c0 	movdqu	%xmm0, -64(%rdi,%rbx)
  447086:	f3 0f 7f 44 1f d0 	movdqu	%xmm0, -48(%rdi,%rbx)
  44708c:	f3 0f 7f 44 1f e0 	movdqu	%xmm0, -32(%rdi,%rbx)
  447092:	f3 0f 7f 44 1f f0 	movdqu	%xmm0, -16(%rdi,%rbx)
  447098:	c3 	retq
  447099:	f3 0f 7f 07 	movdqu	%xmm0, (%rdi)
  44709d:	f3 0f 7f 47 10 	movdqu	%xmm0, 16(%rdi)
  4470a2:	f3 0f 7f 47 20 	movdqu	%xmm0, 32(%rdi)
  4470a7:	f3 0f 7f 47 30 	movdqu	%xmm0, 48(%rdi)
  4470ac:	f3 0f 7f 47 40 	movdqu	%xmm0, 64(%rdi)
  4470b1:	f3 0f 7f 47 50 	movdqu	%xmm0, 80(%rdi)
  4470b6:	f3 0f 7f 47 60 	movdqu	%xmm0, 96(%rdi)
  4470bb:	f3 0f 7f 47 70 	movdqu	%xmm0, 112(%rdi)
  4470c0:	f3 0f 7f 44 1f 80 	movdqu	%xmm0, -128(%rdi,%rbx)
  4470c6:	f3 0f 7f 44 1f 90 	movdqu	%xmm0, -112(%rdi,%rbx)
  4470cc:	f3 0f 7f 44 1f a0 	movdqu	%xmm0, -96(%rdi,%rbx)
  4470d2:	f3 0f 7f 44 1f b0 	movdqu	%xmm0, -80(%rdi,%rbx)
  4470d8:	f3 0f 7f 44 1f c0 	movdqu	%xmm0, -64(%rdi,%rbx)
  4470de:	f3 0f 7f 44 1f d0 	movdqu	%xmm0, -48(%rdi,%rbx)
  4470e4:	f3 0f 7f 44 1f e0 	movdqu	%xmm0, -32(%rdi,%rbx)
  4470ea:	f3 0f 7f 44 1f f0 	movdqu	%xmm0, -16(%rdi,%rbx)
  4470f0:	c3 	retq
  4470f1:	cc 	int3
  4470f2:	cc 	int3
  4470f3:	cc 	int3
  4470f4:	cc 	int3
  4470f5:	cc 	int3
  4470f6:	cc 	int3
  4470f7:	cc 	int3
  4470f8:	cc 	int3
  4470f9:	cc 	int3
  4470fa:	cc 	int3
  4470fb:	cc 	int3
  4470fc:	cc 	int3
  4470fd:	cc 	int3
  4470fe:	cc 	int3
  4470ff:	cc 	int3

runtime.memmove:
  447100:	48 8b 7c 24 08 	movq	8(%rsp), %rdi
  447105:	48 8b 74 24 10 	movq	16(%rsp), %rsi
  44710a:	48 8b 5c 24 18 	movq	24(%rsp), %rbx
  44710f:	48 85 db 	testq	%rbx, %rbx
  447112:	0f 84 f1 00 00 00 	je	241 <runtime.memmove+0x109>
  447118:	48 83 fb 02 	cmpq	$2, %rbx
  44711c:	0f 86 da 00 00 00 	jbe	218 <runtime.memmove+0xfc>
  447122:	48 83 fb 04 	cmpq	$4, %rbx
  447126:	0f 86 de 00 00 00 	jbe	222 <runtime.memmove+0x10a>
  44712c:	48 83 fb 08 	cmpq	$8, %rbx
  447130:	0f 82 ec 00 00 00 	jb	236 <runtime.memmove+0x122>
  447136:	0f 84 f3 00 00 00 	je	243 <runtime.memmove+0x12f>
  44713c:	48 83 fb 10 	cmpq	$16, %rbx
  447140:	0f 86 f0 00 00 00 	jbe	240 <runtime.memmove+0x136>
  447146:	48 83 fb 20 	cmpq	$32, %rbx
  44714a:	0f 86 f7 00 00 00 	jbe	247 <runtime.memmove+0x147>
  447150:	48 83 fb 40 	cmpq	$64, %rbx
  447154:	0f 86 02 01 00 00 	jbe	258 <runtime.memmove+0x15c>
  44715a:	48 81 fb 80 00 00 00 	cmpq	$128, %rbx
  447161:	0f 86 20 01 00 00 	jbe	288 <runtime.memmove+0x187>
  447167:	48 81 fb 00 01 00 00 	cmpq	$256, %rbx
  44716e:	0f 86 6a 01 00 00 	jbe	362 <runtime.memmove+0x1de>
  447174:	f6 05 42 c7 07 00 01 	testb	$1, 509762(%rip)
  44717b:	0f 85 21 03 00 00 	jne	801 <runtime.memmove+0x3a2>
  447181:	48 39 fe 	cmpq	%rdi, %rsi
  447184:	76 3a 	jbe	58 <runtime.memmove+0xc0>
  447186:	48 81 fb 00 08 00 00 	cmpq	$2048, %rbx
  44718d:	0f 86 0a 02 00 00 	jbe	522 <runtime.memmove+0x29d>
  447193:	80 3d 1c c7 07 00 01 	cmpb	$1, 509724(%rip)
  44719a:	75 11 	jne	17 <runtime.memmove+0xad>
  44719c:	89 f0 	movl	%esi, %eax
  44719e:	09 f8 	orl	%edi, %eax
  4471a0:	a9 07 00 00 00 	testl	$7, %eax
  4471a5:	74 06 	je	6 <runtime.memmove+0xad>
  4471a7:	48 89 d9 	movq	%rbx, %rcx
  4471aa:	f3 a4 	rep		movsb	(%rsi), %es:(%rdi)
  4471ac:	c3 	retq
  4471ad:	48 89 d9 	movq	%rbx, %rcx
  4471b0:	48 c1 e9 03 	shrq	$3, %rcx
  4471b4:	48 83 e3 07 	andq	$7, %rbx
  4471b8:	f3 48 a5 	rep		movsq	(%rsi), %es:(%rdi)
  4471bb:	e9 4f ff ff ff 	jmp	-177 <runtime.memmove+0xf>
  4471c0:	48 89 f1 	movq	%rsi, %rcx
  4471c3:	48 01 d9 	addq	%rbx, %rcx
  4471c6:	48 39 f9 	cmpq	%rdi, %rcx
  4471c9:	76 bb 	jbe	-69 <runtime.memmove+0x86>
  4471cb:	48 01 df 	addq	%rbx, %rdi
  4471ce:	48 01 de 	addq	%rbx, %rsi
  4471d1:	fd 	std
  4471d2:	48 89 d9 	movq	%rbx, %rcx
  4471d5:	48 c1 e9 03 	shrq	$3, %rcx
  4471d9:	48 83 e3 07 	andq	$7, %rbx
  4471dd:	48 83 ef 08 	subq	$8, %rdi
  4471e1:	48 83 ee 08 	subq	$8, %rsi
  4471e5:	f3 48 a5 	rep		movsq	(%rsi), %es:(%rdi)
  4471e8:	fc 	cld
  4471e9:	48 83 c7 08 	addq	$8, %rdi
  4471ed:	48 83 c6 08 	addq	$8, %rsi
  4471f1:	48 29 df 	subq	%rbx, %rdi
  4471f4:	48 29 de 	subq	%rbx, %rsi
  4471f7:	e9 13 ff ff ff 	jmp	-237 <runtime.memmove+0xf>
  4471fc:	8a 06 	movb	(%rsi), %al
  4471fe:	8a 4c 1e ff 	movb	-1(%rsi,%rbx), %cl
  447202:	88 07 	movb	%al, (%rdi)
  447204:	88 4c 1f ff 	movb	%cl, -1(%rdi,%rbx)
  447208:	c3 	retq
  447209:	c3 	retq
  44720a:	48 83 fb 04 	cmpq	$4, %rbx
  44720e:	72 05 	jb	5 <runtime.memmove+0x115>
  447210:	8b 06 	movl	(%rsi), %eax
  447212:	89 07 	movl	%eax, (%rdi)
  447214:	c3 	retq
  447215:	66 8b 06 	movw	(%rsi), %ax
  447218:	8a 4e 02 	movb	2(%rsi), %cl
  44721b:	66 89 07 	movw	%ax, (%rdi)
  44721e:	88 4f 02 	movb	%cl, 2(%rdi)
  447221:	c3 	retq
  447222:	8b 06 	movl	(%rsi), %eax
  447224:	8b 4c 1e fc 	movl	-4(%rsi,%rbx), %ecx
  447228:	89 07 	movl	%eax, (%rdi)
  44722a:	89 4c 1f fc 	movl	%ecx, -4(%rdi,%rbx)
  44722e:	c3 	retq
  44722f:	48 8b 06 	movq	(%rsi), %rax
  447232:	48 89 07 	movq	%rax, (%rdi)
  447235:	c3 	retq
  447236:	48 8b 06 	movq	(%rsi), %rax
  447239:	48 8b 4c 1e f8 	movq	-8(%rsi,%rbx), %rcx
  44723e:	48 89 07 	movq	%rax, (%rdi)
  447241:	48 89 4c 1f f8 	movq	%rcx, -8(%rdi,%rbx)
  447246:	c3 	retq
  447247:	f3 0f 6f 06 	movdqu	(%rsi), %xmm0
  44724b:	f3 0f 6f 4c 1e f0 	movdqu	-16(%rsi,%rbx), %xmm1
  447251:	f3 0f 7f 07 	movdqu	%xmm0, (%rdi)
  447255:	f3 0f 7f 4c 1f f0 	movdqu	%xmm1, -16(%rdi,%rbx)
  44725b:	c3 	retq
  44725c:	f3 0f 6f 06 	movdqu	(%rsi), %xmm0
  447260:	f3 0f 6f 4e 10 	movdqu	16(%rsi), %xmm1
  447265:	f3 0f 6f 54 1e e0 	movdqu	-32(%rsi,%rbx), %xmm2
  44726b:	f3 0f 6f 5c 1e f0 	movdqu	-16(%rsi,%rbx), %xmm3
  447271:	f3 0f 7f 07 	movdqu	%xmm0, (%rdi)
  447275:	f3 0f 7f 4f 10 	movdqu	%xmm1, 16(%rdi)
  44727a:	f3 0f 7f 54 1f e0 	movdqu	%xmm2, -32(%rdi,%rbx)
  447280:	f3 0f 7f 5c 1f f0 	movdqu	%xmm3, -16(%rdi,%rbx)
  447286:	c3 	retq
  447287:	f3 0f 6f 06 	movdqu	(%rsi), %xmm0
  44728b:	f3 0f 6f 4e 10 	movdqu	16(%rsi), %xmm1
  447290:	f3 0f 6f 56 20 	movdqu	32(%rsi), %xmm2
  447295:	f3 0f 6f 5e 30 	movdqu	48(%rsi), %xmm3
  44729a:	f3 0f 6f 64 1e c0 	movdqu	-64(%rsi,%rbx), %xmm4
  4472a0:	f3 0f 6f 6c 1e d0 	movdqu	-48(%rsi,%rbx), %xmm5
  4472a6:	f3 0f 6f 74 1e e0 	movdqu	-32(%rsi,%rbx), %xmm6
  4472ac:	f3 0f 6f 7c 1e f0 	movdqu	-16(%rsi,%rbx), %xmm7
  4472b2:	f3 0f 7f 07 	movdqu	%xmm0, (%rdi)
  4472b6:	f3 0f 7f 4f 10 	movdqu	%xmm1, 16(%rdi)
  4472bb:	f3 0f 7f 57 20 	movdqu	%xmm2, 32(%rdi)
  4472c0:	f3 0f 7f 5f 30 	movdqu	%xmm3, 48(%rdi)
  4472c5:	f3 0f 7f 64 1f c0 	movdqu	%xmm4, -64(%rdi,%rbx)
  4472cb:	f3 0f 7f 6c 1f d0 	movdqu	%xmm5, -48(%rdi,%rbx)
  4472d1:	f3 0f 7f 74 1f e0 	movdqu	%xmm6, -32(%rdi,%rbx)
  4472d7:	f3 0f 7f 7c 1f f0 	movdqu	%xmm7, -16(%rdi,%rbx)
  4472dd:	c3 	retq
  4472de:	f3 0f 6f 06 	movdqu	(%rsi), %xmm0
  4472e2:	f3 0f 6f 4e 10 	movdqu	16(%rsi), %xmm1
  4472e7:	f3 0f 6f 56 20 	movdqu	32(%rsi), %xmm2
  4472ec:	f3 0f 6f 5e 30 	movdqu	48(%rsi), %xmm3
  4472f1:	f3 0f 6f 66 40 	movdqu	64(%rsi), %xmm4
  4472f6:	f3 0f 6f 6e 50 	movdqu	80(%rsi), %xmm5
  4472fb:	f3 0f 6f 76 60 	movdqu	96(%rsi), %xmm6
  447300:	f3 0f 6f 7e 70 	movdqu	112(%rsi), %xmm7
  447305:	f3 44 0f 6f 44 1e 80 	movdqu	-128(%rsi,%rbx), %xmm8
  44730c:	f3 44 0f 6f 4c 1e 90 	movdqu	-112(%rsi,%rbx), %xmm9
  447313:	f3 44 0f 6f 54 1e a0 	movdqu	-96(%rsi,%rbx), %xmm10
  44731a:	f3 44 0f 6f 5c 1e b0 	movdqu	-80(%rsi,%rbx), %xmm11
  447321:	f3 44 0f 6f 64 1e c0 	movdqu	-64(%rsi,%rbx), %xmm12
  447328:	f3 44 0f 6f 6c 1e d0 	movdqu	-48(%rsi,%rbx), %xmm13
  44732f:	f3 44 0f 6f 74 1e e0 	movdqu	-32(%rsi,%rbx), %xmm14
  447336:	f3 44 0f 6f 7c 1e f0 	movdqu	-16(%rsi,%rbx), %xmm15
  44733d:	f3 0f 7f 07 	movdqu	%xmm0, (%rdi)
  447341:	f3 0f 7f 4f 10 	movdqu	%xmm1, 16(%rdi)
  447346:	f3 0f 7f 57 20 	movdqu	%xmm2, 32(%rdi)
  44734b:	f3 0f 7f 5f 30 	movdqu	%xmm3, 48(%rdi)
  447350:	f3 0f 7f 67 40 	movdqu	%xmm4, 64(%rdi)
  447355:	f3 0f 7f 6f 50 	movdqu	%xmm5, 80(%rdi)
  44735a:	f3 0f 7f 77 60 	movdqu	%xmm6, 96(%rdi)
  44735f:	f3 0f 7f 7f 70 	movdqu	%xmm7, 112(%rdi)
  447364:	f3 44 0f 7f 44 1f 80 	movdqu	%xmm8, -128(%rdi,%rbx)
  44736b:	f3 44 0f 7f 4c 1f 90 	movdqu	%xmm9, -112(%rdi,%rbx)
  447372:	f3 44 0f 7f 54 1f a0 	movdqu	%xmm10, -96(%rdi,%rbx)
  447379:	f3 44 0f 7f 5c 1f b0 	movdqu	%xmm11, -80(%rdi,%rbx)
  447380:	f3 44 0f 7f 64 1f c0 	movdqu	%xmm12, -64(%rdi,%rbx)
  447387:	f3 44 0f 7f 6c 1f d0 	movdqu	%xmm13, -48(%rdi,%rbx)
  44738e:	f3 44 0f 7f 74 1f e0 	movdqu	%xmm14, -32(%rdi,%rbx)
  447395:	f3 44 0f 7f 7c 1f f0 	movdqu	%xmm15, -16(%rdi,%rbx)
  44739c:	c3 	retq
  44739d:	48 81 eb 00 01 00 00 	subq	$256, %rbx
  4473a4:	f3 0f 6f 06 	movdqu	(%rsi), %xmm0
  4473a8:	f3 0f 6f 4e 10 	movdqu	16(%rsi), %xmm1
  4473ad:	f3 0f 6f 56 20 	movdqu	32(%rsi), %xmm2
  4473b2:	f3 0f 6f 5e 30 	movdqu	48(%rsi), %xmm3
  4473b7:	f3 0f 6f 66 40 	movdqu	64(%rsi), %xmm4
  4473bc:	f3 0f 6f 6e 50 	movdqu	80(%rsi), %xmm5
  4473c1:	f3 0f 6f 76 60 	movdqu	96(%rsi), %xmm6
  4473c6:	f3 0f 6f 7e 70 	movdqu	112(%rsi), %xmm7
  4473cb:	f3 44 0f 6f 86 80 00 00 00 	movdqu	128(%rsi), %xmm8
  4473d4:	f3 44 0f 6f 8e 90 00 00 00 	movdqu	144(%rsi), %xmm9
  4473dd:	f3 44 0f 6f 96 a0 00 00 00 	movdqu	160(%rsi), %xmm10
  4473e6:	f3 44 0f 6f 9e b0 00 00 00 	movdqu	176(%rsi), %xmm11
  4473ef:	f3 44 0f 6f a6 c0 00 00 00 	movdqu	192(%rsi), %xmm12
  4473f8:	f3 44 0f 6f ae d0 00 00 00 	movdqu	208(%rsi), %xmm13
  447401:	f3 44 0f 6f b6 e0 00 00 00 	movdqu	224(%rsi), %xmm14
  44740a:	f3 44 0f 6f be f0 00 00 00 	movdqu	240(%rsi), %xmm15
  447413:	f3 0f 7f 07 	movdqu	%xmm0, (%rdi)
  447417:	f3 0f 7f 4f 10 	movdqu	%xmm1, 16(%rdi)
  44741c:	f3 0f 7f 57 20 	movdqu	%xmm2, 32(%rdi)
  447421:	f3 0f 7f 5f 30 	movdqu	%xmm3, 48(%rdi)
  447426:	f3 0f 7f 67 40 	movdqu	%xmm4, 64(%rdi)
  44742b:	f3 0f 7f 6f 50 	movdqu	%xmm5, 80(%rdi)
  447430:	f3 0f 7f 77 60 	movdqu	%xmm6, 96(%rdi)
  447435:	f3 0f 7f 7f 70 	movdqu	%xmm7, 112(%rdi)
  44743a:	f3 44 0f 7f 87 80 00 00 00 	movdqu	%xmm8, 128(%rdi)
  447443:	f3 44 0f 7f 8f 90 00 00 00 	movdqu	%xmm9, 144(%rdi)
  44744c:	f3 44 0f 7f 97 a0 00 00 00 	movdqu	%xmm10, 160(%rdi)
  447455:	f3 44 0f 7f 9f b0 00 00 00 	movdqu	%xmm11, 176(%rdi)
  44745e:	f3 44 0f 7f a7 c0 00 00 00 	movdqu	%xmm12, 192(%rdi)
  447467:	f3 44 0f 7f af d0 00 00 00 	movdqu	%xmm13, 208(%rdi)
  447470:	f3 44 0f 7f b7 e0 00 00 00 	movdqu	%xmm14, 224(%rdi)
  447479:	f3 44 0f 7f bf f0 00 00 00 	movdqu	%xmm15, 240(%rdi)
  447482:	48 81 fb 00 01 00 00 	cmpq	$256, %rbx
  447489:	48 8d b6 00 01 00 00 	leaq	256(%rsi), %rsi
  447490:	48 8d bf 00 01 00 00 	leaq	256(%rdi), %rdi
  447497:	0f 8d 00 ff ff ff 	jge	-256 <runtime.memmove+0x29d>
  44749d:	e9 6d fc ff ff 	jmp	-915 <runtime.memmove+0xf>
  4474a2:	48 89 f9 	movq	%rdi, %rcx
  4474a5:	48 29 f1 	subq	%rsi, %rcx
  4474a8:	48 39 d9 	cmpq	%rbx, %rcx
  4474ab:	0f 82 ac 01 00 00 	jb	428 <runtime.memmove+0x55d>
  4474b1:	48 81 fb 00 00 10 00 	cmpq	$1048576, %rbx
  4474b8:	0f 83 c3 00 00 00 	jae	195 <runtime.memmove+0x481>
  4474be:	48 8d 0c 1e 	leaq	(%rsi,%rbx), %rcx
  4474c2:	49 89 fa 	movq	%rdi, %r10
  4474c5:	f3 0f 6f 69 80 	movdqu	-128(%rcx), %xmm5
  4474ca:	f3 0f 6f 71 90 	movdqu	-112(%rcx), %xmm6
  4474cf:	48 c7 c0 80 00 00 00 	movq	$128, %rax
  4474d6:	48 83 e7 e0 	andq	$-32, %rdi
  4474da:	48 83 c7 20 	addq	$32, %rdi
  4474de:	f3 0f 6f 79 a0 	movdqu	-96(%rcx), %xmm7
  4474e3:	f3 44 0f 6f 41 b0 	movdqu	-80(%rcx), %xmm8
  4474e9:	49 89 fb 	movq	%rdi, %r11
  4474ec:	4d 29 d3 	subq	%r10, %r11
  4474ef:	f3 44 0f 6f 49 c0 	movdqu	-64(%rcx), %xmm9
  4474f5:	f3 44 0f 6f 51 d0 	movdqu	-48(%rcx), %xmm10
  4474fb:	4c 29 db 	subq	%r11, %rbx
  4474fe:	f3 44 0f 6f 59 e0 	movdqu	-32(%rcx), %xmm11
  447504:	f3 44 0f 6f 61 f0 	movdqu	-16(%rcx), %xmm12
  44750a:	c5 fe 6f 26 	vmovdqu	(%rsi), %ymm4
  44750e:	4c 01 de 	addq	%r11, %rsi
  447511:	48 29 c3 	subq	%rax, %rbx
  447514:	c5 fe 6f 06 	vmovdqu	(%rsi), %ymm0
  447518:	c5 fe 6f 4e 20 	vmovdqu	32(%rsi), %ymm1
  44751d:	c5 fe 6f 56 40 	vmovdqu	64(%rsi), %ymm2
  447522:	c5 fe 6f 5e 60 	vmovdqu	96(%rsi), %ymm3
  447527:	48 01 c6 	addq	%rax, %rsi
  44752a:	c5 fd 7f 07 	vmovdqa	%ymm0, (%rdi)
  44752e:	c5 fd 7f 4f 20 	vmovdqa	%ymm1, 32(%rdi)
  447533:	c5 fd 7f 57 40 	vmovdqa	%ymm2, 64(%rdi)
  447538:	c5 fd 7f 5f 60 	vmovdqa	%ymm3, 96(%rdi)
  44753d:	48 01 c7 	addq	%rax, %rdi
  447540:	48 29 c3 	subq	%rax, %rbx
  447543:	77 cf 	ja	-49 <runtime.memmove+0x414>
  447545:	48 01 c3 	addq	%rax, %rbx
  447548:	48 01 fb 	addq	%rdi, %rbx
  44754b:	c4 c1 7e 7f 22 	vmovdqu	%ymm4, (%r10)
  447550:	c5 f8 77 	vzeroupper
  447553:	f3 0f 7f 6b 80 	movdqu	%xmm5, -128(%rbx)
  447558:	f3 0f 7f 73 90 	movdqu	%xmm6, -112(%rbx)
  44755d:	f3 0f 7f 7b a0 	movdqu	%xmm7, -96(%rbx)
  447562:	f3 44 0f 7f 43 b0 	movdqu	%xmm8, -80(%rbx)
  447568:	f3 44 0f 7f 4b c0 	movdqu	%xmm9, -64(%rbx)
  44756e:	f3 44 0f 7f 53 d0 	movdqu	%xmm10, -48(%rbx)
  447574:	f3 44 0f 7f 5b e0 	movdqu	%xmm11, -32(%rbx)
  44757a:	f3 44 0f 7f 63 f0 	movdqu	%xmm12, -16(%rbx)
  447580:	c3 	retq
  447581:	48 8d 0c 1e 	leaq	(%rsi,%rbx), %rcx
  447585:	f3 0f 6f 6c 1e 80 	movdqu	-128(%rsi,%rbx), %xmm5
  44758b:	f3 0f 6f 71 90 	movdqu	-112(%rcx), %xmm6
  447590:	f3 0f 6f 79 a0 	movdqu	-96(%rcx), %xmm7
  447595:	f3 44 0f 6f 41 b0 	movdqu	-80(%rcx), %xmm8
  44759b:	f3 44 0f 6f 49 c0 	movdqu	-64(%rcx), %xmm9
  4475a1:	f3 44 0f 6f 51 d0 	movdqu	-48(%rcx), %xmm10
  4475a7:	f3 44 0f 6f 59 e0 	movdqu	-32(%rcx), %xmm11
  4475ad:	f3 44 0f 6f 61 f0 	movdqu	-16(%rcx), %xmm12
  4475b3:	c5 fe 6f 26 	vmovdqu	(%rsi), %ymm4
  4475b7:	49 89 f8 	movq	%rdi, %r8
  4475ba:	48 83 e7 e0 	andq	$-32, %rdi
  4475be:	48 83 c7 20 	addq	$32, %rdi
  4475c2:	49 89 fa 	movq	%rdi, %r10
  4475c5:	4d 29 c2 	subq	%r8, %r10
  4475c8:	4c 29 d3 	subq	%r10, %rbx
  4475cb:	4c 01 d6 	addq	%r10, %rsi
  4475ce:	48 8d 0c 1f 	leaq	(%rdi,%rbx), %rcx
  4475d2:	48 81 eb 80 00 00 00 	subq	$128, %rbx
  4475d9:	0f 18 86 c0 01 00 00 	prefetchnta	448(%rsi)
  4475e0:	0f 18 86 80 02 00 00 	prefetchnta	640(%rsi)
  4475e7:	c5 fe 6f 06 	vmovdqu	(%rsi), %ymm0
  4475eb:	c5 fe 6f 4e 20 	vmovdqu	32(%rsi), %ymm1
  4475f0:	c5 fe 6f 56 40 	vmovdqu	64(%rsi), %ymm2
  4475f5:	c5 fe 6f 5e 60 	vmovdqu	96(%rsi), %ymm3
  4475fa:	48 81 c6 80 00 00 00 	addq	$128, %rsi
  447601:	c5 fd e7 07 	vmovntdq	%ymm0, (%rdi)
  447605:	c5 fd e7 4f 20 	vmovntdq	%ymm1, 32(%rdi)
  44760a:	c5 fd e7 57 40 	vmovntdq	%ymm2, 64(%rdi)
  44760f:	c5 fd e7 5f 60 	vmovntdq	%ymm3, 96(%rdi)
  447614:	48 81 c7 80 00 00 00 	addq	$128, %rdi
  44761b:	48 81 eb 80 00 00 00 	subq	$128, %rbx
  447622:	77 b5 	ja	-75 <runtime.memmove+0x4d9>
  447624:	0f ae f8 	sfence
  447627:	c4 c1 7e 7f 20 	vmovdqu	%ymm4, (%r8)
  44762c:	c5 f8 77 	vzeroupper
  44762f:	f3 0f 7f 69 80 	movdqu	%xmm5, -128(%rcx)
  447634:	f3 0f 7f 71 90 	movdqu	%xmm6, -112(%rcx)
  447639:	f3 0f 7f 79 a0 	movdqu	%xmm7, -96(%rcx)
  44763e:	f3 44 0f 7f 41 b0 	movdqu	%xmm8, -80(%rcx)
  447644:	f3 44 0f 7f 49 c0 	movdqu	%xmm9, -64(%rcx)
  44764a:	f3 44 0f 7f 51 d0 	movdqu	%xmm10, -48(%rcx)
  447650:	f3 44 0f 7f 59 e0 	movdqu	%xmm11, -32(%rcx)
  447656:	f3 44 0f 7f 61 f0 	movdqu	%xmm12, -16(%rcx)
  44765c:	c3 	retq
  44765d:	48 89 f8 	movq	%rdi, %rax
  447660:	f3 0f 6f 2e 	movdqu	(%rsi), %xmm5
  447664:	f3 0f 6f 76 10 	movdqu	16(%rsi), %xmm6
  447669:	48 01 df 	addq	%rbx, %rdi
  44766c:	f3 0f 6f 7e 20 	movdqu	32(%rsi), %xmm7
  447671:	f3 44 0f 6f 46 30 	movdqu	48(%rsi), %xmm8
  447677:	4c 8d 57 e0 	leaq	-32(%rdi), %r10
  44767b:	49 89 fb 	movq	%rdi, %r11
  44767e:	f3 44 0f 6f 4e 40 	movdqu	64(%rsi), %xmm9
  447684:	f3 44 0f 6f 56 50 	movdqu	80(%rsi), %xmm10
  44768a:	49 83 e3 1f 	andq	$31, %r11
  44768e:	f3 44 0f 6f 5e 60 	movdqu	96(%rsi), %xmm11
  447694:	f3 44 0f 6f 66 70 	movdqu	112(%rsi), %xmm12
  44769a:	4c 31 df 	xorq	%r11, %rdi
  44769d:	48 01 de 	addq	%rbx, %rsi
  4476a0:	c5 fe 6f 66 e0 	vmovdqu	-32(%rsi), %ymm4
  4476a5:	4c 29 de 	subq	%r11, %rsi
  4476a8:	4c 29 db 	subq	%r11, %rbx
  4476ab:	48 81 fb 00 00 10 00 	cmpq	$1048576, %rbx
  4476b2:	77 7b 	ja	123 <runtime.memmove+0x62f>
  4476b4:	48 81 eb 80 00 00 00 	subq	$128, %rbx
  4476bb:	c5 fe 6f 46 e0 	vmovdqu	-32(%rsi), %ymm0
  4476c0:	c5 fe 6f 4e c0 	vmovdqu	-64(%rsi), %ymm1
  4476c5:	c5 fe 6f 56 a0 	vmovdqu	-96(%rsi), %ymm2
  4476ca:	c5 fe 6f 5e 80 	vmovdqu	-128(%rsi), %ymm3
  4476cf:	48 81 ee 80 00 00 00 	subq	$128, %rsi
  4476d6:	c5 fd 7f 47 e0 	vmovdqa	%ymm0, -32(%rdi)
  4476db:	c5 fd 7f 4f c0 	vmovdqa	%ymm1, -64(%rdi)
  4476e0:	c5 fd 7f 57 a0 	vmovdqa	%ymm2, -96(%rdi)
  4476e5:	c5 fd 7f 5f 80 	vmovdqa	%ymm3, -128(%rdi)
  4476ea:	48 81 ef 80 00 00 00 	subq	$128, %rdi
  4476f1:	48 81 eb 80 00 00 00 	subq	$128, %rbx
  4476f8:	77 c1 	ja	-63 <runtime.memmove+0x5bb>
  4476fa:	c4 c1 7e 7f 22 	vmovdqu	%ymm4, (%r10)
  4476ff:	c5 f8 77 	vzeroupper
  447702:	f3 0f 7f 28 	movdqu	%xmm5, (%rax)
  447706:	f3 0f 7f 70 10 	movdqu	%xmm6, 16(%rax)
  44770b:	f3 0f 7f 78 20 	movdqu	%xmm7, 32(%rax)
  447710:	f3 44 0f 7f 40 30 	movdqu	%xmm8, 48(%rax)
  447716:	f3 44 0f 7f 48 40 	movdqu	%xmm9, 64(%rax)
  44771c:	f3 44 0f 7f 50 50 	movdqu	%xmm10, 80(%rax)
  447722:	f3 44 0f 7f 58 60 	movdqu	%xmm11, 96(%rax)
  447728:	f3 44 0f 7f 60 70 	movdqu	%xmm12, 112(%rax)
  44772e:	c3 	retq
  44772f:	48 81 eb 80 00 00 00 	subq	$128, %rbx
  447736:	0f 18 86 40 fe ff ff 	prefetchnta	-448(%rsi)
  44773d:	0f 18 86 80 fd ff ff 	prefetchnta	-640(%rsi)
  447744:	c5 fe 6f 46 e0 	vmovdqu	-32(%rsi), %ymm0
  447749:	c5 fe 6f 4e c0 	vmovdqu	-64(%rsi), %ymm1
  44774e:	c5 fe 6f 56 a0 	vmovdqu	-96(%rsi), %ymm2
  447753:	c5 fe 6f 5e 80 	vmovdqu	-128(%rsi), %ymm3
  447758:	48 81 ee 80 00 00 00 	subq	$128, %rsi
  44775f:	c5 fd e7 47 e0 	vmovntdq	%ymm0, -32(%rdi)
  447764:	c5 fd e7 4f c0 	vmovntdq	%ymm1, -64(%rdi)
  447769:	c5 fd e7 57 a0 	vmovntdq	%ymm2, -96(%rdi)
  44776e:	c5 fd e7 5f 80 	vmovntdq	%ymm3, -128(%rdi)
  447773:	48 81 ef 80 00 00 00 	subq	$128, %rdi
  44777a:	48 81 eb 80 00 00 00 	subq	$128, %rbx
  447781:	77 b3 	ja	-77 <runtime.memmove+0x636>
  447783:	0f ae f8 	sfence
  447786:	c4 c1 7e 7f 22 	vmovdqu	%ymm4, (%r10)
  44778b:	c5 f8 77 	vzeroupper
  44778e:	f3 0f 7f 28 	movdqu	%xmm5, (%rax)
  447792:	f3 0f 7f 70 10 	movdqu	%xmm6, 16(%rax)
  447797:	f3 0f 7f 78 20 	movdqu	%xmm7, 32(%rax)
  44779c:	f3 44 0f 7f 40 30 	movdqu	%xmm8, 48(%rax)
  4477a2:	f3 44 0f 7f 48 40 	movdqu	%xmm9, 64(%rax)
  4477a8:	f3 44 0f 7f 50 50 	movdqu	%xmm10, 80(%rax)
  4477ae:	f3 44 0f 7f 58 60 	movdqu	%xmm11, 96(%rax)
  4477b4:	f3 44 0f 7f 60 70 	movdqu	%xmm12, 112(%rax)
  4477ba:	c3 	retq
  4477bb:	cc 	int3
  4477bc:	cc 	int3
  4477bd:	cc 	int3
  4477be:	cc 	int3
  4477bf:	cc 	int3

_rt0_amd64_linux:
  4477c0:	e9 3b c9 ff ff 	jmp	-14021 <_rt0_amd64>
  4477c5:	cc 	int3
  4477c6:	cc 	int3
  4477c7:	cc 	int3
  4477c8:	cc 	int3
  4477c9:	cc 	int3
  4477ca:	cc 	int3
  4477cb:	cc 	int3
  4477cc:	cc 	int3
  4477cd:	cc 	int3
  4477ce:	cc 	int3
  4477cf:	cc 	int3

runtime.exit:
  4477d0:	8b 7c 24 08 	movl	8(%rsp), %edi
  4477d4:	b8 e7 00 00 00 	movl	$231, %eax
  4477d9:	0f 05 	syscall
  4477db:	c3 	retq
  4477dc:	cc 	int3
  4477dd:	cc 	int3
  4477de:	cc 	int3
  4477df:	cc 	int3

runtime.exitThread:
  4477e0:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4477e5:	c7 00 00 00 00 00 	movl	$0, (%rax)
  4477eb:	bf 00 00 00 00 	movl	$0, %edi
  4477f0:	b8 3c 00 00 00 	movl	$60, %eax
  4477f5:	0f 05 	syscall
  4477f7:	cd 03 	int	$3
  4477f9:	eb fe 	jmp	-2 <runtime.exitThread+0x19>
  4477fb:	cc 	int3
  4477fc:	cc 	int3
  4477fd:	cc 	int3
  4477fe:	cc 	int3
  4477ff:	cc 	int3

runtime.open:
  447800:	bf 9c ff ff ff 	movl	$4294967196, %edi
  447805:	48 8b 74 24 08 	movq	8(%rsp), %rsi
  44780a:	8b 54 24 10 	movl	16(%rsp), %edx
  44780e:	44 8b 54 24 14 	movl	20(%rsp), %r10d
  447813:	b8 01 01 00 00 	movl	$257, %eax
  447818:	0f 05 	syscall
  44781a:	48 3d 01 f0 ff ff 	cmpq	$-4095, %rax
  447820:	76 05 	jbe	5 <runtime.open+0x27>
  447822:	b8 ff ff ff ff 	movl	$4294967295, %eax
  447827:	89 44 24 18 	movl	%eax, 24(%rsp)
  44782b:	c3 	retq
  44782c:	cc 	int3
  44782d:	cc 	int3
  44782e:	cc 	int3
  44782f:	cc 	int3

runtime.closefd:
  447830:	8b 7c 24 08 	movl	8(%rsp), %edi
  447834:	b8 03 00 00 00 	movl	$3, %eax
  447839:	0f 05 	syscall
  44783b:	48 3d 01 f0 ff ff 	cmpq	$-4095, %rax
  447841:	76 05 	jbe	5 <runtime.closefd+0x18>
  447843:	b8 ff ff ff ff 	movl	$4294967295, %eax
  447848:	89 44 24 10 	movl	%eax, 16(%rsp)
  44784c:	c3 	retq
  44784d:	cc 	int3
  44784e:	cc 	int3
  44784f:	cc 	int3

runtime.write:
  447850:	48 8b 7c 24 08 	movq	8(%rsp), %rdi
  447855:	48 8b 74 24 10 	movq	16(%rsp), %rsi
  44785a:	8b 54 24 18 	movl	24(%rsp), %edx
  44785e:	b8 01 00 00 00 	movl	$1, %eax
  447863:	0f 05 	syscall
  447865:	48 3d 01 f0 ff ff 	cmpq	$-4095, %rax
  44786b:	76 05 	jbe	5 <runtime.write+0x22>
  44786d:	b8 ff ff ff ff 	movl	$4294967295, %eax
  447872:	89 44 24 20 	movl	%eax, 32(%rsp)
  447876:	c3 	retq
  447877:	cc 	int3
  447878:	cc 	int3
  447879:	cc 	int3
  44787a:	cc 	int3
  44787b:	cc 	int3
  44787c:	cc 	int3
  44787d:	cc 	int3
  44787e:	cc 	int3
  44787f:	cc 	int3

runtime.read:
  447880:	8b 7c 24 08 	movl	8(%rsp), %edi
  447884:	48 8b 74 24 10 	movq	16(%rsp), %rsi
  447889:	8b 54 24 18 	movl	24(%rsp), %edx
  44788d:	b8 00 00 00 00 	movl	$0, %eax
  447892:	0f 05 	syscall
  447894:	48 3d 01 f0 ff ff 	cmpq	$-4095, %rax
  44789a:	76 05 	jbe	5 <runtime.read+0x21>
  44789c:	b8 ff ff ff ff 	movl	$4294967295, %eax
  4478a1:	89 44 24 20 	movl	%eax, 32(%rsp)
  4478a5:	c3 	retq
  4478a6:	cc 	int3
  4478a7:	cc 	int3
  4478a8:	cc 	int3
  4478a9:	cc 	int3
  4478aa:	cc 	int3
  4478ab:	cc 	int3
  4478ac:	cc 	int3
  4478ad:	cc 	int3
  4478ae:	cc 	int3
  4478af:	cc 	int3

runtime.usleep:
  4478b0:	48 83 ec 18 	subq	$24, %rsp
  4478b4:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  4478b9:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  4478be:	ba 00 00 00 00 	movl	$0, %edx
  4478c3:	8b 44 24 20 	movl	32(%rsp), %eax
  4478c7:	b9 40 42 0f 00 	movl	$1000000, %ecx
  4478cc:	f7 f1 	divl	%ecx
  4478ce:	48 89 04 24 	movq	%rax, (%rsp)
  4478d2:	b8 e8 03 00 00 	movl	$1000, %eax
  4478d7:	f7 e2 	mull	%edx
  4478d9:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4478de:	bf 00 00 00 00 	movl	$0, %edi
  4478e3:	be 00 00 00 00 	movl	$0, %esi
  4478e8:	ba 00 00 00 00 	movl	$0, %edx
  4478ed:	41 ba 00 00 00 00 	movl	$0, %r10d
  4478f3:	49 89 e0 	movq	%rsp, %r8
  4478f6:	41 b9 00 00 00 00 	movl	$0, %r9d
  4478fc:	b8 0e 01 00 00 	movl	$270, %eax
  447901:	0f 05 	syscall
  447903:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  447908:	48 83 c4 18 	addq	$24, %rsp
  44790c:	c3 	retq
  44790d:	cc 	int3
  44790e:	cc 	int3
  44790f:	cc 	int3

runtime.gettid:
  447910:	b8 ba 00 00 00 	movl	$186, %eax
  447915:	0f 05 	syscall
  447917:	89 44 24 08 	movl	%eax, 8(%rsp)
  44791b:	c3 	retq
  44791c:	cc 	int3
  44791d:	cc 	int3
  44791e:	cc 	int3
  44791f:	cc 	int3

runtime.raise:
  447920:	b8 ba 00 00 00 	movl	$186, %eax
  447925:	0f 05 	syscall
  447927:	89 c7 	movl	%eax, %edi
  447929:	8b 74 24 08 	movl	8(%rsp), %esi
  44792d:	b8 c8 00 00 00 	movl	$200, %eax
  447932:	0f 05 	syscall
  447934:	c3 	retq
  447935:	cc 	int3
  447936:	cc 	int3
  447937:	cc 	int3
  447938:	cc 	int3
  447939:	cc 	int3
  44793a:	cc 	int3
  44793b:	cc 	int3
  44793c:	cc 	int3
  44793d:	cc 	int3
  44793e:	cc 	int3
  44793f:	cc 	int3

runtime.raiseproc:
  447940:	b8 27 00 00 00 	movl	$39, %eax
  447945:	0f 05 	syscall
  447947:	89 c7 	movl	%eax, %edi
  447949:	8b 74 24 08 	movl	8(%rsp), %esi
  44794d:	b8 3e 00 00 00 	movl	$62, %eax
  447952:	0f 05 	syscall
  447954:	c3 	retq
  447955:	cc 	int3
  447956:	cc 	int3
  447957:	cc 	int3
  447958:	cc 	int3
  447959:	cc 	int3
  44795a:	cc 	int3
  44795b:	cc 	int3
  44795c:	cc 	int3
  44795d:	cc 	int3
  44795e:	cc 	int3
  44795f:	cc 	int3

runtime.setitimer:
  447960:	8b 7c 24 08 	movl	8(%rsp), %edi
  447964:	48 8b 74 24 10 	movq	16(%rsp), %rsi
  447969:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  44796e:	b8 26 00 00 00 	movl	$38, %eax
  447973:	0f 05 	syscall
  447975:	c3 	retq
  447976:	cc 	int3
  447977:	cc 	int3
  447978:	cc 	int3
  447979:	cc 	int3
  44797a:	cc 	int3
  44797b:	cc 	int3
  44797c:	cc 	int3
  44797d:	cc 	int3
  44797e:	cc 	int3
  44797f:	cc 	int3

runtime.mincore:
  447980:	48 8b 7c 24 08 	movq	8(%rsp), %rdi
  447985:	48 8b 74 24 10 	movq	16(%rsp), %rsi
  44798a:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  44798f:	b8 1b 00 00 00 	movl	$27, %eax
  447994:	0f 05 	syscall
  447996:	89 44 24 20 	movl	%eax, 32(%rsp)
  44799a:	c3 	retq
  44799b:	cc 	int3
  44799c:	cc 	int3
  44799d:	cc 	int3
  44799e:	cc 	int3
  44799f:	cc 	int3

runtime.walltime:
  4479a0:	48 89 e5 	movq	%rsp, %rbp
  4479a3:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  4479ac:	48 8b 48 30 	movq	48(%rax), %rcx
  4479b0:	48 8b 91 c0 00 00 00 	movq	192(%rcx), %rdx
  4479b7:	48 39 d0 	cmpq	%rdx, %rax
  4479ba:	75 07 	jne	7 <runtime.walltime+0x23>
  4479bc:	48 8b 11 	movq	(%rcx), %rdx
  4479bf:	48 8b 62 38 	movq	56(%rdx), %rsp
  4479c3:	48 83 ec 10 	subq	$16, %rsp
  4479c7:	48 83 e4 f0 	andq	$-16, %rsp
  4479cb:	48 8b 05 36 bf 07 00 	movq	507702(%rip), %rax
  4479d2:	48 83 f8 00 	cmpq	$0, %rax
  4479d6:	74 21 	je	33 <runtime.walltime+0x59>
  4479d8:	bf 00 00 00 00 	movl	$0, %edi
  4479dd:	48 8d 34 24 	leaq	(%rsp), %rsi
  4479e1:	ff d0 	callq	*%rax
  4479e3:	48 8b 04 24 	movq	(%rsp), %rax
  4479e7:	48 8b 54 24 08 	movq	8(%rsp), %rdx
  4479ec:	48 89 ec 	movq	%rbp, %rsp
  4479ef:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4479f4:	89 54 24 10 	movl	%edx, 16(%rsp)
  4479f8:	c3 	retq
  4479f9:	48 8d 3c 24 	leaq	(%rsp), %rdi
  4479fd:	48 c7 c6 00 00 00 00 	movq	$0, %rsi
  447a04:	48 8b 05 15 d6 05 00 	movq	382485(%rip), %rax
  447a0b:	ff d0 	callq	*%rax
  447a0d:	48 8b 04 24 	movq	(%rsp), %rax
  447a11:	8b 54 24 08 	movl	8(%rsp), %edx
  447a15:	48 69 d2 e8 03 00 00 	imulq	$1000, %rdx, %rdx
  447a1c:	48 89 ec 	movq	%rbp, %rsp
  447a1f:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  447a24:	89 54 24 10 	movl	%edx, 16(%rsp)
  447a28:	c3 	retq
  447a29:	cc 	int3
  447a2a:	cc 	int3
  447a2b:	cc 	int3
  447a2c:	cc 	int3
  447a2d:	cc 	int3
  447a2e:	cc 	int3
  447a2f:	cc 	int3

runtime.nanotime:
  447a30:	48 89 e5 	movq	%rsp, %rbp
  447a33:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  447a3c:	48 8b 48 30 	movq	48(%rax), %rcx
  447a40:	48 8b 91 c0 00 00 00 	movq	192(%rcx), %rdx
  447a47:	48 39 d0 	cmpq	%rdx, %rax
  447a4a:	75 07 	jne	7 <runtime.nanotime+0x23>
  447a4c:	48 8b 11 	movq	(%rcx), %rdx
  447a4f:	48 8b 62 38 	movq	56(%rdx), %rsp
  447a53:	48 83 ec 10 	subq	$16, %rsp
  447a57:	48 83 e4 f0 	andq	$-16, %rsp
  447a5b:	48 8b 05 a6 be 07 00 	movq	507558(%rip), %rax
  447a62:	48 83 f8 00 	cmpq	$0, %rax
  447a66:	74 27 	je	39 <runtime.nanotime+0x5f>
  447a68:	bf 01 00 00 00 	movl	$1, %edi
  447a6d:	48 8d 34 24 	leaq	(%rsp), %rsi
  447a71:	ff d0 	callq	*%rax
  447a73:	48 8b 04 24 	movq	(%rsp), %rax
  447a77:	48 8b 54 24 08 	movq	8(%rsp), %rdx
  447a7c:	48 89 ec 	movq	%rbp, %rsp
  447a7f:	48 69 c0 00 ca 9a 3b 	imulq	$1000000000, %rax, %rax
  447a86:	48 01 d0 	addq	%rdx, %rax
  447a89:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  447a8e:	c3 	retq
  447a8f:	48 8d 3c 24 	leaq	(%rsp), %rdi
  447a93:	48 c7 c6 00 00 00 00 	movq	$0, %rsi
  447a9a:	48 8b 05 7f d5 05 00 	movq	382335(%rip), %rax
  447aa1:	ff d0 	callq	*%rax
  447aa3:	48 8b 04 24 	movq	(%rsp), %rax
  447aa7:	8b 54 24 08 	movl	8(%rsp), %edx
  447aab:	48 89 ec 	movq	%rbp, %rsp
  447aae:	48 69 d2 e8 03 00 00 	imulq	$1000, %rdx, %rdx
  447ab5:	48 69 c0 00 ca 9a 3b 	imulq	$1000000000, %rax, %rax
  447abc:	48 01 d0 	addq	%rdx, %rax
  447abf:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  447ac4:	c3 	retq
  447ac5:	cc 	int3
  447ac6:	cc 	int3
  447ac7:	cc 	int3
  447ac8:	cc 	int3
  447ac9:	cc 	int3
  447aca:	cc 	int3
  447acb:	cc 	int3
  447acc:	cc 	int3
  447acd:	cc 	int3
  447ace:	cc 	int3
  447acf:	cc 	int3

runtime.rtsigprocmask:
  447ad0:	8b 7c 24 08 	movl	8(%rsp), %edi
  447ad4:	48 8b 74 24 10 	movq	16(%rsp), %rsi
  447ad9:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  447ade:	44 8b 54 24 20 	movl	32(%rsp), %r10d
  447ae3:	b8 0e 00 00 00 	movl	$14, %eax
  447ae8:	0f 05 	syscall
  447aea:	48 3d 01 f0 ff ff 	cmpq	$-4095, %rax
  447af0:	76 0b 	jbe	11 <runtime.rtsigprocmask+0x2d>
  447af2:	c7 04 25 f1 00 00 00 f1 00 00 00 	movl	$241, 241
  447afd:	c3 	retq
  447afe:	cc 	int3
  447aff:	cc 	int3

runtime.sysSigaction:
  447b00:	48 8b 7c 24 08 	movq	8(%rsp), %rdi
  447b05:	48 8b 74 24 10 	movq	16(%rsp), %rsi
  447b0a:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  447b0f:	4c 8b 54 24 20 	movq	32(%rsp), %r10
  447b14:	b8 0d 00 00 00 	movl	$13, %eax
  447b19:	0f 05 	syscall
  447b1b:	89 44 24 28 	movl	%eax, 40(%rsp)
  447b1f:	c3 	retq

runtime.callCgoSigaction:
  447b20:	48 83 ec 18 	subq	$24, %rsp
  447b24:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  447b29:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  447b2e:	48 8b 7c 24 20 	movq	32(%rsp), %rdi
  447b33:	48 8b 74 24 28 	movq	40(%rsp), %rsi
  447b38:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  447b3d:	48 8b 05 a4 fa 05 00 	movq	391844(%rip), %rax
  447b44:	48 89 e3 	movq	%rsp, %rbx
  447b47:	48 83 e4 f0 	andq	$-16, %rsp
  447b4b:	ff d0 	callq	*%rax
  447b4d:	48 89 dc 	movq	%rbx, %rsp
  447b50:	89 44 24 38 	movl	%eax, 56(%rsp)
  447b54:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  447b59:	48 83 c4 18 	addq	$24, %rsp
  447b5d:	c3 	retq
  447b5e:	cc 	int3
  447b5f:	cc 	int3

runtime.sigfwd:
  447b60:	48 8b 44 24 08 	movq	8(%rsp), %rax
  447b65:	8b 7c 24 10 	movl	16(%rsp), %edi
  447b69:	48 8b 74 24 18 	movq	24(%rsp), %rsi
  447b6e:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  447b73:	55 	pushq	%rbp
  447b74:	48 89 e5 	movq	%rsp, %rbp
  447b77:	48 83 e4 f0 	andq	$-16, %rsp
  447b7b:	ff d0 	callq	*%rax
  447b7d:	48 89 ec 	movq	%rbp, %rsp
  447b80:	5d 	popq	%rbp
  447b81:	c3 	retq
  447b82:	cc 	int3
  447b83:	cc 	int3
  447b84:	cc 	int3
  447b85:	cc 	int3
  447b86:	cc 	int3
  447b87:	cc 	int3
  447b88:	cc 	int3
  447b89:	cc 	int3
  447b8a:	cc 	int3
  447b8b:	cc 	int3
  447b8c:	cc 	int3
  447b8d:	cc 	int3
  447b8e:	cc 	int3
  447b8f:	cc 	int3

runtime.sigtramp:
  447b90:	48 83 ec 50 	subq	$80, %rsp
  447b94:	48 89 6c 24 48 	movq	%rbp, 72(%rsp)
  447b99:	48 8d 6c 24 48 	leaq	72(%rsp), %rbp
  447b9e:	48 89 5c 24 40 	movq	%rbx, 64(%rsp)
  447ba3:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  447ba8:	4c 89 64 24 30 	movq	%r12, 48(%rsp)
  447bad:	4c 89 6c 24 28 	movq	%r13, 40(%rsp)
  447bb2:	4c 89 74 24 20 	movq	%r14, 32(%rsp)
  447bb7:	4c 89 7c 24 18 	movq	%r15, 24(%rsp)
  447bbc:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  447bc1:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  447bc6:	48 89 3c 24 	movq	%rdi, (%rsp)
  447bca:	48 8d 05 8f a7 fe ff 	leaq	-88177(%rip), %rax
  447bd1:	ff d0 	callq	*%rax
  447bd3:	4c 8b 7c 24 18 	movq	24(%rsp), %r15
  447bd8:	4c 8b 74 24 20 	movq	32(%rsp), %r14
  447bdd:	4c 8b 6c 24 28 	movq	40(%rsp), %r13
  447be2:	4c 8b 64 24 30 	movq	48(%rsp), %r12
  447be7:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  447bec:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  447bf1:	48 8b 6c 24 48 	movq	72(%rsp), %rbp
  447bf6:	48 83 c4 50 	addq	$80, %rsp
  447bfa:	c3 	retq
  447bfb:	cc 	int3
  447bfc:	cc 	int3
  447bfd:	cc 	int3
  447bfe:	cc 	int3
  447bff:	cc 	int3

runtime.cgoSigtramp:
  447c00:	48 8b 05 39 fa 05 00 	movq	391737(%rip), %rax
  447c07:	48 85 c0 	testq	%rax, %rax
  447c0a:	74 6f 	je	111 <runtime.cgoSigtramp+0x7b>
  447c0c:	48 8b 05 ad f9 05 00 	movq	391597(%rip), %rax
  447c13:	48 85 c0 	testq	%rax, %rax
  447c16:	74 63 	je	99 <runtime.cgoSigtramp+0x7b>
  447c18:	64 48 8b 04 25 f8 ff ff ff 	movq	%fs:-8, %rax
  447c21:	48 85 c0 	testq	%rax, %rax
  447c24:	74 5a 	je	90 <runtime.cgoSigtramp+0x80>
  447c26:	48 8b 40 30 	movq	48(%rax), %rax
  447c2a:	48 85 c0 	testq	%rax, %rax
  447c2d:	74 4c 	je	76 <runtime.cgoSigtramp+0x7b>
  447c2f:	8b 88 38 01 00 00 	movl	312(%rax), %ecx
  447c35:	85 c9 	testl	%ecx, %ecx
  447c37:	74 42 	je	66 <runtime.cgoSigtramp+0x7b>
  447c39:	48 8b 88 c0 00 00 00 	movq	192(%rax), %rcx
  447c40:	48 85 c9 	testq	%rcx, %rcx
  447c43:	74 36 	je	54 <runtime.cgoSigtramp+0x7b>
  447c45:	48 8b 49 70 	movq	112(%rcx), %rcx
  447c49:	48 85 c9 	testq	%rcx, %rcx
  447c4c:	74 2d 	je	45 <runtime.cgoSigtramp+0x7b>
  447c4e:	4c 8b 80 40 01 00 00 	movq	320(%rax), %r8
  447c55:	4d 85 c0 	testq	%r8, %r8
  447c58:	74 21 	je	33 <runtime.cgoSigtramp+0x7b>
  447c5a:	8b 88 3c 01 00 00 	movl	316(%rax), %ecx
  447c60:	85 c9 	testl	%ecx, %ecx
  447c62:	75 17 	jne	23 <runtime.cgoSigtramp+0x7b>
  447c64:	48 8b 0d d5 f9 05 00 	movq	391637(%rip), %rcx
  447c6b:	4c 8d 0d 1e ff ff ff 	leaq	-226(%rip), %r9
  447c72:	48 8b 05 47 f9 05 00 	movq	391495(%rip), %rax
  447c79:	ff e0 	jmpq	*%rax
  447c7b:	e9 10 ff ff ff 	jmp	-240 <runtime.sigtramp>
  447c80:	83 ff 1b 	cmpl	$27, %edi
  447c83:	75 f6 	jne	-10 <runtime.cgoSigtramp+0x7b>
  447c85:	b8 00 00 00 00 	movl	$0, %eax
  447c8a:	b9 01 00 00 00 	movl	$1, %ecx
  447c8f:	4c 8d 1d 6a bc 07 00 	leaq	506986(%rip), %r11
  447c96:	f0 	lock
  447c97:	41 0f b1 0b 	cmpxchgl	%ecx, (%r11)
  447c9b:	75 de 	jne	-34 <runtime.cgoSigtramp+0x7b>
  447c9d:	48 8b 0d 9c f9 05 00 	movq	391580(%rip), %rcx
  447ca4:	4c 8d 05 15 c0 07 00 	leaq	507925(%rip), %r8
  447cab:	4c 8d 0d 1e 37 fe ff 	leaq	-116962(%rip), %r9
  447cb2:	48 8b 05 07 f9 05 00 	movq	391431(%rip), %rax
  447cb9:	ff e0 	jmpq	*%rax
  447cbb:	cc 	int3
  447cbc:	cc 	int3
  447cbd:	cc 	int3
  447cbe:	cc 	int3
  447cbf:	cc 	int3

runtime.sigreturn:
  447cc0:	48 c7 c0 0f 00 00 00 	movq	$15, %rax
  447cc7:	0f 05 	syscall
  447cc9:	cd 03 	int	$3
  447ccb:	cc 	int3
  447ccc:	cc 	int3
  447ccd:	cc 	int3
  447cce:	cc 	int3
  447ccf:	cc 	int3

runtime.sysMmap:
  447cd0:	48 8b 7c 24 08 	movq	8(%rsp), %rdi
  447cd5:	48 8b 74 24 10 	movq	16(%rsp), %rsi
  447cda:	8b 54 24 18 	movl	24(%rsp), %edx
  447cde:	44 8b 54 24 1c 	movl	28(%rsp), %r10d
  447ce3:	44 8b 44 24 20 	movl	32(%rsp), %r8d
  447ce8:	44 8b 4c 24 24 	movl	36(%rsp), %r9d
  447ced:	b8 09 00 00 00 	movl	$9, %eax
  447cf2:	0f 05 	syscall
  447cf4:	48 3d 01 f0 ff ff 	cmpq	$-4095, %rax
  447cfa:	76 15 	jbe	21 <runtime.sysMmap+0x41>
  447cfc:	48 f7 d0 	notq	%rax
  447cff:	48 ff c0 	incq	%rax
  447d02:	48 c7 44 24 28 00 00 00 00 	movq	$0, 40(%rsp)
  447d0b:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  447d10:	c3 	retq
  447d11:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  447d16:	48 c7 44 24 30 00 00 00 00 	movq	$0, 48(%rsp)
  447d1f:	c3 	retq

runtime.callCgoMmap:
  447d20:	48 83 ec 18 	subq	$24, %rsp
  447d24:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  447d29:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  447d2e:	48 8b 7c 24 20 	movq	32(%rsp), %rdi
  447d33:	48 8b 74 24 28 	movq	40(%rsp), %rsi
  447d38:	8b 54 24 30 	movl	48(%rsp), %edx
  447d3c:	8b 4c 24 34 	movl	52(%rsp), %ecx
  447d40:	44 8b 44 24 38 	movl	56(%rsp), %r8d
  447d45:	44 8b 4c 24 3c 	movl	60(%rsp), %r9d
  447d4a:	48 8b 05 7f f8 05 00 	movq	391295(%rip), %rax
  447d51:	48 89 e3 	movq	%rsp, %rbx
  447d54:	48 83 e4 f0 	andq	$-16, %rsp
  447d58:	48 89 1c 24 	movq	%rbx, (%rsp)
  447d5c:	ff d0 	callq	*%rax
  447d5e:	48 8b 24 24 	movq	(%rsp), %rsp
  447d62:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  447d67:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  447d6c:	48 83 c4 18 	addq	$24, %rsp
  447d70:	c3 	retq
  447d71:	cc 	int3
  447d72:	cc 	int3
  447d73:	cc 	int3
  447d74:	cc 	int3
  447d75:	cc 	int3
  447d76:	cc 	int3
  447d77:	cc 	int3
  447d78:	cc 	int3
  447d79:	cc 	int3
  447d7a:	cc 	int3
  447d7b:	cc 	int3
  447d7c:	cc 	int3
  447d7d:	cc 	int3
  447d7e:	cc 	int3
  447d7f:	cc 	int3

runtime.sysMunmap:
  447d80:	48 8b 7c 24 08 	movq	8(%rsp), %rdi
  447d85:	48 8b 74 24 10 	movq	16(%rsp), %rsi
  447d8a:	48 c7 c0 0b 00 00 00 	movq	$11, %rax
  447d91:	0f 05 	syscall
  447d93:	48 3d 01 f0 ff ff 	cmpq	$-4095, %rax
  447d99:	76 0b 	jbe	11 <runtime.sysMunmap+0x26>
  447d9b:	c7 04 25 f1 00 00 00 f1 00 00 00 	movl	$241, 241
  447da6:	c3 	retq
  447da7:	cc 	int3
  447da8:	cc 	int3
  447da9:	cc 	int3
  447daa:	cc 	int3
  447dab:	cc 	int3
  447dac:	cc 	int3
  447dad:	cc 	int3
  447dae:	cc 	int3
  447daf:	cc 	int3

runtime.callCgoMunmap:
  447db0:	48 83 ec 18 	subq	$24, %rsp
  447db4:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  447db9:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  447dbe:	48 8b 7c 24 20 	movq	32(%rsp), %rdi
  447dc3:	48 8b 74 24 28 	movq	40(%rsp), %rsi
  447dc8:	48 8b 05 09 f8 05 00 	movq	391177(%rip), %rax
  447dcf:	48 89 e3 	movq	%rsp, %rbx
  447dd2:	48 83 e4 f0 	andq	$-16, %rsp
  447dd6:	48 89 1c 24 	movq	%rbx, (%rsp)
  447dda:	ff d0 	callq	*%rax
  447ddc:	48 8b 24 24 	movq	(%rsp), %rsp
  447de0:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  447de5:	48 83 c4 18 	addq	$24, %rsp
  447de9:	c3 	retq
  447dea:	cc 	int3
  447deb:	cc 	int3
  447dec:	cc 	int3
  447ded:	cc 	int3
  447dee:	cc 	int3
  447def:	cc 	int3

runtime.madvise:
  447df0:	48 8b 7c 24 08 	movq	8(%rsp), %rdi
  447df5:	48 8b 74 24 10 	movq	16(%rsp), %rsi
  447dfa:	8b 54 24 18 	movl	24(%rsp), %edx
  447dfe:	48 c7 c0 1c 00 00 00 	movq	$28, %rax
  447e05:	0f 05 	syscall
  447e07:	c3 	retq
  447e08:	cc 	int3
  447e09:	cc 	int3
  447e0a:	cc 	int3
  447e0b:	cc 	int3
  447e0c:	cc 	int3
  447e0d:	cc 	int3
  447e0e:	cc 	int3
  447e0f:	cc 	int3

runtime.futex:
  447e10:	48 8b 7c 24 08 	movq	8(%rsp), %rdi
  447e15:	8b 74 24 10 	movl	16(%rsp), %esi
  447e19:	8b 54 24 14 	movl	20(%rsp), %edx
  447e1d:	4c 8b 54 24 18 	movq	24(%rsp), %r10
  447e22:	4c 8b 44 24 20 	movq	32(%rsp), %r8
  447e27:	44 8b 4c 24 28 	movl	40(%rsp), %r9d
  447e2c:	b8 ca 00 00 00 	movl	$202, %eax
  447e31:	0f 05 	syscall
  447e33:	89 44 24 30 	movl	%eax, 48(%rsp)
  447e37:	c3 	retq
  447e38:	cc 	int3
  447e39:	cc 	int3
  447e3a:	cc 	int3
  447e3b:	cc 	int3
  447e3c:	cc 	int3
  447e3d:	cc 	int3
  447e3e:	cc 	int3
  447e3f:	cc 	int3

runtime.clone:
  447e40:	8b 7c 24 08 	movl	8(%rsp), %edi
  447e44:	48 8b 74 24 10 	movq	16(%rsp), %rsi
  447e49:	48 c7 c2 00 00 00 00 	movq	$0, %rdx
  447e50:	49 c7 c2 00 00 00 00 	movq	$0, %r10
  447e57:	4c 8b 44 24 18 	movq	24(%rsp), %r8
  447e5c:	4c 8b 4c 24 20 	movq	32(%rsp), %r9
  447e61:	4c 8b 64 24 28 	movq	40(%rsp), %r12
  447e66:	b8 38 00 00 00 	movl	$56, %eax
  447e6b:	0f 05 	syscall
  447e6d:	48 83 f8 00 	cmpq	$0, %rax
  447e71:	74 05 	je	5 <runtime.clone+0x38>
  447e73:	89 44 24 30 	movl	%eax, 48(%rsp)
  447e77:	c3 	retq
  447e78:	48 89 f4 	movq	%rsi, %rsp
  447e7b:	49 83 f8 00 	cmpq	$0, %r8
  447e7f:	74 2f 	je	47 <runtime.clone+0x70>
  447e81:	49 83 f9 00 	cmpq	$0, %r9
  447e85:	74 29 	je	41 <runtime.clone+0x70>
  447e87:	b8 ba 00 00 00 	movl	$186, %eax
  447e8c:	0f 05 	syscall
  447e8e:	49 89 40 48 	movq	%rax, 72(%r8)
  447e92:	49 8d b8 88 00 00 00 	leaq	136(%r8), %rdi
  447e99:	e8 62 00 00 00 	callq	98 <runtime.settls>
  447e9e:	4d 89 41 30 	movq	%r8, 48(%r9)
  447ea2:	64 4c 89 0c 25 f8 ff ff ff 	movq	%r9, %fs:-8
  447eab:	e8 20 de ff ff 	callq	-8672 <runtime.stackcheck>
  447eb0:	41 ff d4 	callq	*%r12
  447eb3:	bf 6f 00 00 00 	movl	$111, %edi
  447eb8:	b8 3c 00 00 00 	movl	$60, %eax
  447ebd:	0f 05 	syscall
  447ebf:	eb f2 	jmp	-14 <runtime.clone+0x73>
  447ec1:	cc 	int3
  447ec2:	cc 	int3
  447ec3:	cc 	int3
  447ec4:	cc 	int3
  447ec5:	cc 	int3
  447ec6:	cc 	int3
  447ec7:	cc 	int3
  447ec8:	cc 	int3
  447ec9:	cc 	int3
  447eca:	cc 	int3
  447ecb:	cc 	int3
  447ecc:	cc 	int3
  447ecd:	cc 	int3
  447ece:	cc 	int3
  447ecf:	cc 	int3

runtime.sigaltstack:
  447ed0:	48 8b 7c 24 08 	movq	8(%rsp), %rdi
  447ed5:	48 8b 74 24 10 	movq	16(%rsp), %rsi
  447eda:	48 c7 c0 83 00 00 00 	movq	$131, %rax
  447ee1:	0f 05 	syscall
  447ee3:	48 3d 01 f0 ff ff 	cmpq	$-4095, %rax
  447ee9:	76 0b 	jbe	11 <runtime.sigaltstack+0x26>
  447eeb:	c7 04 25 f1 00 00 00 f1 00 00 00 	movl	$241, 241
  447ef6:	c3 	retq
  447ef7:	cc 	int3
  447ef8:	cc 	int3
  447ef9:	cc 	int3
  447efa:	cc 	int3
  447efb:	cc 	int3
  447efc:	cc 	int3
  447efd:	cc 	int3
  447efe:	cc 	int3
  447eff:	cc 	int3

runtime.settls:
  447f00:	48 83 ec 28 	subq	$40, %rsp
  447f04:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  447f09:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  447f0e:	48 83 c7 08 	addq	$8, %rdi
  447f12:	48 89 fe 	movq	%rdi, %rsi
  447f15:	48 c7 c7 02 10 00 00 	movq	$4098, %rdi
  447f1c:	48 c7 c0 9e 00 00 00 	movq	$158, %rax
  447f23:	0f 05 	syscall
  447f25:	48 3d 01 f0 ff ff 	cmpq	$-4095, %rax
  447f2b:	76 0b 	jbe	11 <runtime.settls+0x38>
  447f2d:	c7 04 25 f1 00 00 00 f1 00 00 00 	movl	$241, 241
  447f38:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  447f3d:	48 83 c4 28 	addq	$40, %rsp
  447f41:	c3 	retq
  447f42:	cc 	int3
  447f43:	cc 	int3
  447f44:	cc 	int3
  447f45:	cc 	int3
  447f46:	cc 	int3
  447f47:	cc 	int3
  447f48:	cc 	int3
  447f49:	cc 	int3
  447f4a:	cc 	int3
  447f4b:	cc 	int3
  447f4c:	cc 	int3
  447f4d:	cc 	int3
  447f4e:	cc 	int3
  447f4f:	cc 	int3

runtime.osyield:
  447f50:	b8 18 00 00 00 	movl	$24, %eax
  447f55:	0f 05 	syscall
  447f57:	c3 	retq
  447f58:	cc 	int3
  447f59:	cc 	int3
  447f5a:	cc 	int3
  447f5b:	cc 	int3
  447f5c:	cc 	int3
  447f5d:	cc 	int3
  447f5e:	cc 	int3
  447f5f:	cc 	int3

runtime.sched_getaffinity:
  447f60:	48 8b 7c 24 08 	movq	8(%rsp), %rdi
  447f65:	48 8b 74 24 10 	movq	16(%rsp), %rsi
  447f6a:	48 8b 54 24 18 	movq	24(%rsp), %rdx
  447f6f:	b8 cc 00 00 00 	movl	$204, %eax
  447f74:	0f 05 	syscall
  447f76:	89 44 24 20 	movl	%eax, 32(%rsp)
  447f7a:	c3 	retq
  447f7b:	cc 	int3
  447f7c:	cc 	int3
  447f7d:	cc 	int3
  447f7e:	cc 	int3
  447f7f:	cc 	int3

runtime.epollwait:
  447f80:	8b 7c 24 08 	movl	8(%rsp), %edi
  447f84:	48 8b 74 24 10 	movq	16(%rsp), %rsi
  447f89:	8b 54 24 18 	movl	24(%rsp), %edx
  447f8d:	44 8b 54 24 1c 	movl	28(%rsp), %r10d
  447f92:	49 c7 c0 00 00 00 00 	movq	$0, %r8
  447f99:	b8 19 01 00 00 	movl	$281, %eax
  447f9e:	0f 05 	syscall
  447fa0:	89 44 24 20 	movl	%eax, 32(%rsp)
  447fa4:	c3 	retq
  447fa5:	cc 	int3
  447fa6:	cc 	int3
  447fa7:	cc 	int3
  447fa8:	cc 	int3
  447fa9:	cc 	int3
  447faa:	cc 	int3
  447fab:	cc 	int3
  447fac:	cc 	int3
  447fad:	cc 	int3
  447fae:	cc 	int3
  447faf:	cc 	int3

runtime.sbrk0:
  447fb0:	48 c7 c7 00 00 00 00 	movq	$0, %rdi
  447fb7:	b8 0c 00 00 00 	movl	$12, %eax
  447fbc:	0f 05 	syscall
  447fbe:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  447fc3:	c3 	retq
  447fc4:	cc 	int3
  447fc5:	cc 	int3
  447fc6:	cc 	int3
  447fc7:	cc 	int3
  447fc8:	cc 	int3
  447fc9:	cc 	int3
  447fca:	cc 	int3
  447fcb:	cc 	int3
  447fcc:	cc 	int3
  447fcd:	cc 	int3
  447fce:	cc 	int3
  447fcf:	cc 	int3

runtime.(*itabTableType).(runtime.add)-fm:
  447fd0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  447fd9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  447fdd:	76 2f 	jbe	47 <runtime.(*itabTableType).(runtime.add)-fm+0x3e>
  447fdf:	48 83 ec 18 	subq	$24, %rsp
  447fe3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  447fe8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  447fed:	48 8b 42 08 	movq	8(%rdx), %rax
  447ff1:	48 89 04 24 	movq	%rax, (%rsp)
  447ff5:	48 8b 44 24 20 	movq	32(%rsp), %rax
  447ffa:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  447fff:	e8 0c 0a fc ff 	callq	-259572 <runtime.(*itabTableType).add>
  448004:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  448009:	48 83 c4 18 	addq	$24, %rsp
  44800d:	c3 	retq
  44800e:	e8 bd c4 ff ff 	callq	-15171 <runtime.morestack>
  448013:	eb bb 	jmp	-69 <runtime.(*itabTableType).(runtime.add)-fm>
  448015:	cc 	int3
  448016:	cc 	int3
  448017:	cc 	int3
  448018:	cc 	int3
  448019:	cc 	int3
  44801a:	cc 	int3
  44801b:	cc 	int3
  44801c:	cc 	int3
  44801d:	cc 	int3
  44801e:	cc 	int3
  44801f:	cc 	int3

type..hash.runtime.uncommontype:
  448020:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  448029:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44802d:	76 68 	jbe	104 <type..hash.runtime.uncommontype+0x77>
  44802f:	48 83 ec 28 	subq	$40, %rsp
  448033:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  448038:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44803d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  448042:	48 89 04 24 	movq	%rax, (%rsp)
  448046:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44804b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  448050:	48 c7 44 24 10 06 00 00 00 	movq	$6, 16(%rsp)
  448059:	e8 b2 da fb ff 	callq	-271694 <runtime.memhash>
  44805e:	48 8b 44 24 18 	movq	24(%rsp), %rax
  448063:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  448068:	48 83 c1 08 	addq	$8, %rcx
  44806c:	48 89 0c 24 	movq	%rcx, (%rsp)
  448070:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  448075:	48 c7 44 24 10 04 00 00 00 	movq	$4, 16(%rsp)
  44807e:	e8 8d da fb ff 	callq	-271731 <runtime.memhash>
  448083:	48 8b 44 24 18 	movq	24(%rsp), %rax
  448088:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  44808d:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  448092:	48 83 c4 28 	addq	$40, %rsp
  448096:	c3 	retq
  448097:	e8 d4 c4 ff ff 	callq	-15148 <runtime.morestack_noctxt>
  44809c:	eb 82 	jmp	-126 <type..hash.runtime.uncommontype>
  44809e:	cc 	int3
  44809f:	cc 	int3

type..eq.runtime.uncommontype:
  4480a0:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4480a5:	8b 08 	movl	(%rax), %ecx
  4480a7:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  4480ac:	8b 1a 	movl	(%rdx), %ebx
  4480ae:	39 d9 	cmpl	%ebx, %ecx
  4480b0:	75 21 	jne	33 <type..eq.runtime.uncommontype+0x33>
  4480b2:	0f b7 48 04 	movzwl	4(%rax), %ecx
  4480b6:	0f b7 5a 04 	movzwl	4(%rdx), %ebx
  4480ba:	66 39 d9 	cmpw	%bx, %cx
  4480bd:	75 10 	jne	16 <type..eq.runtime.uncommontype+0x2f>
  4480bf:	8b 40 08 	movl	8(%rax), %eax
  4480c2:	8b 4a 08 	movl	8(%rdx), %ecx
  4480c5:	39 c8 	cmpl	%ecx, %eax
  4480c7:	0f 94 c0 	sete	%al
  4480ca:	88 44 24 18 	movb	%al, 24(%rsp)
  4480ce:	c3 	retq
  4480cf:	31 c0 	xorl	%eax, %eax
  4480d1:	eb f7 	jmp	-9 <type..eq.runtime.uncommontype+0x2a>
  4480d3:	31 c0 	xorl	%eax, %eax
  4480d5:	eb f3 	jmp	-13 <type..eq.runtime.uncommontype+0x2a>
  4480d7:	cc 	int3
  4480d8:	cc 	int3
  4480d9:	cc 	int3
  4480da:	cc 	int3
  4480db:	cc 	int3
  4480dc:	cc 	int3
  4480dd:	cc 	int3
  4480de:	cc 	int3
  4480df:	cc 	int3

type..hash.runtime.itab:
  4480e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4480e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4480ed:	76 68 	jbe	104 <type..hash.runtime.itab+0x77>
  4480ef:	48 83 ec 28 	subq	$40, %rsp
  4480f3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  4480f8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  4480fd:	48 8b 44 24 30 	movq	48(%rsp), %rax
  448102:	48 89 04 24 	movq	%rax, (%rsp)
  448106:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44810b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  448110:	48 c7 44 24 10 14 00 00 00 	movq	$20, 16(%rsp)
  448119:	e8 f2 d9 fb ff 	callq	-271886 <runtime.memhash>
  44811e:	48 8b 44 24 18 	movq	24(%rsp), %rax
  448123:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  448128:	48 83 c1 18 	addq	$24, %rcx
  44812c:	48 89 0c 24 	movq	%rcx, (%rsp)
  448130:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  448135:	48 c7 44 24 10 08 00 00 00 	movq	$8, 16(%rsp)
  44813e:	e8 cd d9 fb ff 	callq	-271923 <runtime.memhash>
  448143:	48 8b 44 24 18 	movq	24(%rsp), %rax
  448148:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  44814d:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  448152:	48 83 c4 28 	addq	$40, %rsp
  448156:	c3 	retq
  448157:	e8 14 c4 ff ff 	callq	-15340 <runtime.morestack_noctxt>
  44815c:	eb 82 	jmp	-126 <type..hash.runtime.itab>
  44815e:	cc 	int3
  44815f:	cc 	int3

type..eq.runtime.itab:
  448160:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  448169:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44816d:	76 62 	jbe	98 <type..eq.runtime.itab+0x71>
  44816f:	48 83 ec 28 	subq	$40, %rsp
  448173:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  448178:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44817d:	48 8b 44 24 38 	movq	56(%rsp), %rax
  448182:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  448187:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44818c:	48 89 0c 24 	movq	%rcx, (%rsp)
  448190:	48 c7 44 24 10 14 00 00 00 	movq	$20, 16(%rsp)
  448199:	e8 a2 e1 ff ff 	callq	-7774 <runtime.memequal>
  44819e:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  4481a3:	84 c0 	testb	%al, %al
  4481a5:	74 26 	je	38 <type..eq.runtime.itab+0x6d>
  4481a7:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4481ac:	48 8b 40 18 	movq	24(%rax), %rax
  4481b0:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4481b5:	48 8b 49 18 	movq	24(%rcx), %rcx
  4481b9:	48 39 c1 	cmpq	%rax, %rcx
  4481bc:	0f 94 c0 	sete	%al
  4481bf:	88 44 24 40 	movb	%al, 64(%rsp)
  4481c3:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4481c8:	48 83 c4 28 	addq	$40, %rsp
  4481cc:	c3 	retq
  4481cd:	31 c0 	xorl	%eax, %eax
  4481cf:	eb ee 	jmp	-18 <type..eq.runtime.itab+0x5f>
  4481d1:	e8 9a c3 ff ff 	callq	-15462 <runtime.morestack_noctxt>
  4481d6:	eb 88 	jmp	-120 <type..eq.runtime.itab>
  4481d8:	cc 	int3
  4481d9:	cc 	int3
  4481da:	cc 	int3
  4481db:	cc 	int3
  4481dc:	cc 	int3
  4481dd:	cc 	int3
  4481de:	cc 	int3
  4481df:	cc 	int3

type..hash.runtime.modulehash:
  4481e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4481e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4481ed:	76 7b 	jbe	123 <type..hash.runtime.modulehash+0x8a>
  4481ef:	48 83 ec 28 	subq	$40, %rsp
  4481f3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  4481f8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  4481fd:	48 8b 44 24 30 	movq	48(%rsp), %rax
  448202:	48 89 04 24 	movq	%rax, (%rsp)
  448206:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44820b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  448210:	e8 6b 8f fb ff 	callq	-290965 <runtime.strhash>
  448215:	48 8b 44 24 10 	movq	16(%rsp), %rax
  44821a:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44821f:	48 8d 51 10 	leaq	16(%rcx), %rdx
  448223:	48 89 14 24 	movq	%rdx, (%rsp)
  448227:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44822c:	e8 4f 8f fb ff 	callq	-290993 <runtime.strhash>
  448231:	48 8b 44 24 10 	movq	16(%rsp), %rax
  448236:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44823b:	48 83 c1 20 	addq	$32, %rcx
  44823f:	48 89 0c 24 	movq	%rcx, (%rsp)
  448243:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  448248:	48 c7 44 24 10 08 00 00 00 	movq	$8, 16(%rsp)
  448251:	e8 ba d8 fb ff 	callq	-272198 <runtime.memhash>
  448256:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44825b:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  448260:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  448265:	48 83 c4 28 	addq	$40, %rsp
  448269:	c3 	retq
  44826a:	e8 01 c3 ff ff 	callq	-15615 <runtime.morestack_noctxt>
  44826f:	e9 6c ff ff ff 	jmp	-148 <type..hash.runtime.modulehash>
  448274:	cc 	int3
  448275:	cc 	int3
  448276:	cc 	int3
  448277:	cc 	int3
  448278:	cc 	int3
  448279:	cc 	int3
  44827a:	cc 	int3
  44827b:	cc 	int3
  44827c:	cc 	int3
  44827d:	cc 	int3
  44827e:	cc 	int3
  44827f:	cc 	int3

type..eq.runtime.modulehash:
  448280:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  448289:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44828d:	0f 86 bb 00 00 00 	jbe	187 <type..eq.runtime.modulehash+0xce>
  448293:	48 83 ec 28 	subq	$40, %rsp
  448297:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44829c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  4482a1:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4482a6:	48 8b 48 08 	movq	8(%rax), %rcx
  4482aa:	48 8b 10 	movq	(%rax), %rdx
  4482ad:	48 8b 5c 24 38 	movq	56(%rsp), %rbx
  4482b2:	48 8b 73 08 	movq	8(%rbx), %rsi
  4482b6:	48 8b 3b 	movq	(%rbx), %rdi
  4482b9:	48 39 ce 	cmpq	%rcx, %rsi
  4482bc:	74 69 	je	105 <type..eq.runtime.modulehash+0xa7>
  4482be:	31 c9 	xorl	%ecx, %ecx
  4482c0:	84 c9 	testb	%cl, %cl
  4482c2:	74 5f 	je	95 <type..eq.runtime.modulehash+0xa3>
  4482c4:	48 8b 48 18 	movq	24(%rax), %rcx
  4482c8:	48 8b 50 10 	movq	16(%rax), %rdx
  4482cc:	48 8b 73 18 	movq	24(%rbx), %rsi
  4482d0:	48 8b 7b 10 	movq	16(%rbx), %rdi
  4482d4:	48 39 f1 	cmpq	%rsi, %rcx
  4482d7:	74 26 	je	38 <type..eq.runtime.modulehash+0x7f>
  4482d9:	31 c9 	xorl	%ecx, %ecx
  4482db:	84 c9 	testb	%cl, %cl
  4482dd:	74 1c 	je	28 <type..eq.runtime.modulehash+0x7b>
  4482df:	48 8b 40 20 	movq	32(%rax), %rax
  4482e3:	48 8b 4b 20 	movq	32(%rbx), %rcx
  4482e7:	48 39 c8 	cmpq	%rcx, %rax
  4482ea:	0f 94 c0 	sete	%al
  4482ed:	88 44 24 40 	movb	%al, 64(%rsp)
  4482f1:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4482f6:	48 83 c4 28 	addq	$40, %rsp
  4482fa:	c3 	retq
  4482fb:	31 c0 	xorl	%eax, %eax
  4482fd:	eb ee 	jmp	-18 <type..eq.runtime.modulehash+0x6d>
  4482ff:	48 89 14 24 	movq	%rdx, (%rsp)
  448303:	48 89 7c 24 08 	movq	%rdi, 8(%rsp)
  448308:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  44830d:	e8 2e e0 ff ff 	callq	-8146 <runtime.memequal>
  448312:	0f b6 4c 24 18 	movzbl	24(%rsp), %ecx
  448317:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44831c:	48 8b 5c 24 38 	movq	56(%rsp), %rbx
  448321:	eb b8 	jmp	-72 <type..eq.runtime.modulehash+0x5b>
  448323:	31 c9 	xorl	%ecx, %ecx
  448325:	eb b4 	jmp	-76 <type..eq.runtime.modulehash+0x5b>
  448327:	48 89 14 24 	movq	%rdx, (%rsp)
  44832b:	48 89 7c 24 08 	movq	%rdi, 8(%rsp)
  448330:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  448335:	e8 06 e0 ff ff 	callq	-8186 <runtime.memequal>
  44833a:	0f b6 4c 24 18 	movzbl	24(%rsp), %ecx
  44833f:	48 8b 44 24 30 	movq	48(%rsp), %rax
  448344:	48 8b 5c 24 38 	movq	56(%rsp), %rbx
  448349:	e9 72 ff ff ff 	jmp	-142 <type..eq.runtime.modulehash+0x40>
  44834e:	e8 1d c2 ff ff 	callq	-15843 <runtime.morestack_noctxt>
  448353:	e9 28 ff ff ff 	jmp	-216 <type..eq.runtime.modulehash>
  448358:	cc 	int3
  448359:	cc 	int3
  44835a:	cc 	int3
  44835b:	cc 	int3
  44835c:	cc 	int3
  44835d:	cc 	int3
  44835e:	cc 	int3
  44835f:	cc 	int3

type..hash.runtime.bitvector:
  448360:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  448369:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44836d:	76 68 	jbe	104 <type..hash.runtime.bitvector+0x77>
  44836f:	48 83 ec 28 	subq	$40, %rsp
  448373:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  448378:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44837d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  448382:	48 89 04 24 	movq	%rax, (%rsp)
  448386:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44838b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  448390:	48 c7 44 24 10 04 00 00 00 	movq	$4, 16(%rsp)
  448399:	e8 72 d7 fb ff 	callq	-272526 <runtime.memhash>
  44839e:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4483a3:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4483a8:	48 83 c1 08 	addq	$8, %rcx
  4483ac:	48 89 0c 24 	movq	%rcx, (%rsp)
  4483b0:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4483b5:	48 c7 44 24 10 08 00 00 00 	movq	$8, 16(%rsp)
  4483be:	e8 4d d7 fb ff 	callq	-272563 <runtime.memhash>
  4483c3:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4483c8:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  4483cd:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4483d2:	48 83 c4 28 	addq	$40, %rsp
  4483d6:	c3 	retq
  4483d7:	e8 94 c1 ff ff 	callq	-15980 <runtime.morestack_noctxt>
  4483dc:	eb 82 	jmp	-126 <type..hash.runtime.bitvector>
  4483de:	cc 	int3
  4483df:	cc 	int3

type..eq.runtime.bitvector:
  4483e0:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4483e5:	8b 08 	movl	(%rax), %ecx
  4483e7:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  4483ec:	8b 1a 	movl	(%rdx), %ebx
  4483ee:	39 d9 	cmpl	%ebx, %ecx
  4483f0:	75 13 	jne	19 <type..eq.runtime.bitvector+0x25>
  4483f2:	48 8b 40 08 	movq	8(%rax), %rax
  4483f6:	48 8b 4a 08 	movq	8(%rdx), %rcx
  4483fa:	48 39 c8 	cmpq	%rcx, %rax
  4483fd:	0f 94 c0 	sete	%al
  448400:	88 44 24 18 	movb	%al, 24(%rsp)
  448404:	c3 	retq
  448405:	31 c0 	xorl	%eax, %eax
  448407:	eb f7 	jmp	-9 <type..eq.runtime.bitvector+0x20>
  448409:	cc 	int3
  44840a:	cc 	int3
  44840b:	cc 	int3
  44840c:	cc 	int3
  44840d:	cc 	int3
  44840e:	cc 	int3
  44840f:	cc 	int3

type..hash.struct { Size uint32; Mallocs uint64; Frees uint64 }:
  448410:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  448419:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44841d:	76 68 	jbe	104 <type..hash.struct { Size uint32; Mallocs uint64; Frees uint64 }+0x77>
  44841f:	48 83 ec 28 	subq	$40, %rsp
  448423:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  448428:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44842d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  448432:	48 89 04 24 	movq	%rax, (%rsp)
  448436:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44843b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  448440:	48 c7 44 24 10 04 00 00 00 	movq	$4, 16(%rsp)
  448449:	e8 c2 d6 fb ff 	callq	-272702 <runtime.memhash>
  44844e:	48 8b 44 24 18 	movq	24(%rsp), %rax
  448453:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  448458:	48 83 c1 08 	addq	$8, %rcx
  44845c:	48 89 0c 24 	movq	%rcx, (%rsp)
  448460:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  448465:	48 c7 44 24 10 10 00 00 00 	movq	$16, 16(%rsp)
  44846e:	e8 9d d6 fb ff 	callq	-272739 <runtime.memhash>
  448473:	48 8b 44 24 18 	movq	24(%rsp), %rax
  448478:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  44847d:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  448482:	48 83 c4 28 	addq	$40, %rsp
  448486:	c3 	retq
  448487:	e8 e4 c0 ff ff 	callq	-16156 <runtime.morestack_noctxt>
  44848c:	eb 82 	jmp	-126 <type..hash.struct { Size uint32; Mallocs uint64; Frees uint64 }>
  44848e:	cc 	int3
  44848f:	cc 	int3

type..eq.struct { Size uint32; Mallocs uint64; Frees uint64 }:
  448490:	48 8b 44 24 08 	movq	8(%rsp), %rax
  448495:	8b 08 	movl	(%rax), %ecx
  448497:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  44849c:	8b 1a 	movl	(%rdx), %ebx
  44849e:	39 d9 	cmpl	%ebx, %ecx
  4484a0:	75 24 	jne	36 <type..eq.struct { Size uint32; Mallocs uint64; Frees uint64 }+0x36>
  4484a2:	48 8b 48 08 	movq	8(%rax), %rcx
  4484a6:	48 8b 5a 08 	movq	8(%rdx), %rbx
  4484aa:	48 39 d9 	cmpq	%rbx, %rcx
  4484ad:	75 13 	jne	19 <type..eq.struct { Size uint32; Mallocs uint64; Frees uint64 }+0x32>
  4484af:	48 8b 40 10 	movq	16(%rax), %rax
  4484b3:	48 8b 4a 10 	movq	16(%rdx), %rcx
  4484b7:	48 39 c1 	cmpq	%rax, %rcx
  4484ba:	0f 94 c0 	sete	%al
  4484bd:	88 44 24 18 	movb	%al, 24(%rsp)
  4484c1:	c3 	retq
  4484c2:	31 c0 	xorl	%eax, %eax
  4484c4:	eb f7 	jmp	-9 <type..eq.struct { Size uint32; Mallocs uint64; Frees uint64 }+0x2d>
  4484c6:	31 c0 	xorl	%eax, %eax
  4484c8:	eb f3 	jmp	-13 <type..eq.struct { Size uint32; Mallocs uint64; Frees uint64 }+0x2d>
  4484ca:	cc 	int3
  4484cb:	cc 	int3
  4484cc:	cc 	int3
  4484cd:	cc 	int3
  4484ce:	cc 	int3
  4484cf:	cc 	int3

type..hash.[61]struct { Size uint32; Mallocs uint64; Frees uint64 }:
  4484d0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4484d9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4484dd:	76 59 	jbe	89 <type..hash.[61]struct { Size uint32; Mallocs uint64; Frees uint64 }+0x68>
  4484df:	48 83 ec 28 	subq	$40, %rsp
  4484e3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  4484e8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  4484ed:	31 c0 	xorl	%eax, %eax
  4484ef:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  4484f4:	eb 2d 	jmp	45 <type..hash.[61]struct { Size uint32; Mallocs uint64; Frees uint64 }+0x53>
  4484f6:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  4484fb:	48 8d 14 40 	leaq	(%rax,%rax,2), %rdx
  4484ff:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  448504:	48 8d 14 d3 	leaq	(%rbx,%rdx,8), %rdx
  448508:	48 89 14 24 	movq	%rdx, (%rsp)
  44850c:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  448511:	e8 fa fe ff ff 	callq	-262 <type..hash.struct { Size uint32; Mallocs uint64; Frees uint64 }>
  448516:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  44851b:	48 8b 44 24 18 	movq	24(%rsp), %rax
  448520:	48 ff c0 	incq	%rax
  448523:	48 83 f8 3d 	cmpq	$61, %rax
  448527:	7c cd 	jl	-51 <type..hash.[61]struct { Size uint32; Mallocs uint64; Frees uint64 }+0x26>
  448529:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  44852e:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  448533:	48 83 c4 28 	addq	$40, %rsp
  448537:	c3 	retq
  448538:	e8 33 c0 ff ff 	callq	-16333 <runtime.morestack_noctxt>
  44853d:	eb 91 	jmp	-111 <type..hash.[61]struct { Size uint32; Mallocs uint64; Frees uint64 }>
  44853f:	cc 	int3

type..eq.[61]struct { Size uint32; Mallocs uint64; Frees uint64 }:
  448540:	48 8b 44 24 10 	movq	16(%rsp), %rax
  448545:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  44854a:	31 d2 	xorl	%edx, %edx
  44854c:	eb 03 	jmp	3 <type..eq.[61]struct { Size uint32; Mallocs uint64; Frees uint64 }+0x11>
  44854e:	48 ff c2 	incq	%rdx
  448551:	48 83 fa 3d 	cmpq	$61, %rdx
  448555:	7d 32 	jge	50 <type..eq.[61]struct { Size uint32; Mallocs uint64; Frees uint64 }+0x49>
  448557:	48 8d 1c 52 	leaq	(%rdx,%rdx,2), %rbx
  44855b:	8b 34 d9 	movl	(%rcx,%rbx,8), %esi
  44855e:	8b 3c d8 	movl	(%rax,%rbx,8), %edi
  448561:	39 fe 	cmpl	%edi, %esi
  448563:	75 1e 	jne	30 <type..eq.[61]struct { Size uint32; Mallocs uint64; Frees uint64 }+0x43>
  448565:	48 8b 74 d9 08 	movq	8(%rcx,%rbx,8), %rsi
  44856a:	48 8b 7c d8 08 	movq	8(%rax,%rbx,8), %rdi
  44856f:	48 39 fe 	cmpq	%rdi, %rsi
  448572:	75 0f 	jne	15 <type..eq.[61]struct { Size uint32; Mallocs uint64; Frees uint64 }+0x43>
  448574:	48 8b 74 d9 10 	movq	16(%rcx,%rbx,8), %rsi
  448579:	48 8b 5c d8 10 	movq	16(%rax,%rbx,8), %rbx
  44857e:	48 39 f3 	cmpq	%rsi, %rbx
  448581:	74 cb 	je	-53 <type..eq.[61]struct { Size uint32; Mallocs uint64; Frees uint64 }+0xe>
  448583:	c6 44 24 18 00 	movb	$0, 24(%rsp)
  448588:	c3 	retq
  448589:	c6 44 24 18 01 	movb	$1, 24(%rsp)
  44858e:	c3 	retq
  44858f:	cc 	int3

type..hash.runtime.MemStats:
  448590:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  448599:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44859d:	0f 86 a9 00 00 00 	jbe	169 <type..hash.runtime.MemStats+0xbc>
  4485a3:	48 83 ec 28 	subq	$40, %rsp
  4485a7:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  4485ac:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  4485b1:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4485b6:	48 89 04 24 	movq	%rax, (%rsp)
  4485ba:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  4485bf:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4485c4:	48 c7 44 24 10 c8 10 00 00 	movq	$4296, 16(%rsp)
  4485cd:	e8 3e d5 fb ff 	callq	-273090 <runtime.memhash>
  4485d2:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4485d7:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4485dc:	48 8d 91 c8 10 00 00 	leaq	4296(%rcx), %rdx
  4485e3:	48 89 14 24 	movq	%rdx, (%rsp)
  4485e7:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4485ec:	e8 0f 8d fb ff 	callq	-291569 <runtime.f64hash>
  4485f1:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4485f6:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4485fb:	48 8d 91 d0 10 00 00 	leaq	4304(%rcx), %rdx
  448602:	48 89 14 24 	movq	%rdx, (%rsp)
  448606:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44860b:	48 c7 44 24 10 02 00 00 00 	movq	$2, 16(%rsp)
  448614:	e8 f7 d4 fb ff 	callq	-273161 <runtime.memhash>
  448619:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44861e:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  448623:	48 81 c1 d8 10 00 00 	addq	$4312, %rcx
  44862a:	48 89 0c 24 	movq	%rcx, (%rsp)
  44862e:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  448633:	e8 98 fe ff ff 	callq	-360 <type..hash.[61]struct { Size uint32; Mallocs uint64; Frees uint64 }>
  448638:	48 8b 44 24 10 	movq	16(%rsp), %rax
  44863d:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  448642:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  448647:	48 83 c4 28 	addq	$40, %rsp
  44864b:	c3 	retq
  44864c:	e8 1f bf ff ff 	callq	-16609 <runtime.morestack_noctxt>
  448651:	e9 3a ff ff ff 	jmp	-198 <type..hash.runtime.MemStats>
  448656:	cc 	int3
  448657:	cc 	int3
  448658:	cc 	int3
  448659:	cc 	int3
  44865a:	cc 	int3
  44865b:	cc 	int3
  44865c:	cc 	int3
  44865d:	cc 	int3
  44865e:	cc 	int3
  44865f:	cc 	int3

type..eq.runtime.MemStats:
  448660:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  448669:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44866d:	0f 86 c0 00 00 00 	jbe	192 <type..eq.runtime.MemStats+0xd3>
  448673:	48 83 ec 28 	subq	$40, %rsp
  448677:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44867c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  448681:	48 8b 44 24 38 	movq	56(%rsp), %rax
  448686:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44868b:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  448690:	48 89 0c 24 	movq	%rcx, (%rsp)
  448694:	48 c7 44 24 10 c8 10 00 00 	movq	$4296, 16(%rsp)
  44869d:	e8 9e dc ff ff 	callq	-9058 <runtime.memequal>
  4486a2:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  4486a7:	84 c0 	testb	%al, %al
  4486a9:	0f 84 80 00 00 00 	je	128 <type..eq.runtime.MemStats+0xcf>
  4486af:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4486b4:	f2 0f 10 80 c8 10 00 00 	movsd	4296(%rax), %xmm0
  4486bc:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  4486c1:	f2 0f 10 89 c8 10 00 00 	movsd	4296(%rcx), %xmm1
  4486c9:	66 0f 2e c1 	ucomisd	%xmm1, %xmm0
  4486cd:	75 5c 	jne	92 <type..eq.runtime.MemStats+0xcb>
  4486cf:	7a 5a 	jp	90 <type..eq.runtime.MemStats+0xcb>
  4486d1:	0f b6 90 d0 10 00 00 	movzbl	4304(%rax), %edx
  4486d8:	0f b6 99 d0 10 00 00 	movzbl	4304(%rcx), %ebx
  4486df:	38 da 	cmpb	%bl, %dl
  4486e1:	75 44 	jne	68 <type..eq.runtime.MemStats+0xc7>
  4486e3:	0f b6 90 d1 10 00 00 	movzbl	4305(%rax), %edx
  4486ea:	0f b6 99 d1 10 00 00 	movzbl	4305(%rcx), %ebx
  4486f1:	38 da 	cmpb	%bl, %dl
  4486f3:	74 10 	je	16 <type..eq.runtime.MemStats+0xa5>
  4486f5:	31 c0 	xorl	%eax, %eax
  4486f7:	88 44 24 40 	movb	%al, 64(%rsp)
  4486fb:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  448700:	48 83 c4 28 	addq	$40, %rsp
  448704:	c3 	retq
  448705:	48 05 d8 10 00 00 	addq	$4312, %rax
  44870b:	48 89 04 24 	movq	%rax, (%rsp)
  44870f:	48 8d 81 d8 10 00 00 	leaq	4312(%rcx), %rax
  448716:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44871b:	e8 20 fe ff ff 	callq	-480 <type..eq.[61]struct { Size uint32; Mallocs uint64; Frees uint64 }>
  448720:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  448725:	eb d0 	jmp	-48 <type..eq.runtime.MemStats+0x97>
  448727:	31 c0 	xorl	%eax, %eax
  448729:	eb cc 	jmp	-52 <type..eq.runtime.MemStats+0x97>
  44872b:	31 c0 	xorl	%eax, %eax
  44872d:	eb c8 	jmp	-56 <type..eq.runtime.MemStats+0x97>
  44872f:	31 c0 	xorl	%eax, %eax
  448731:	eb c4 	jmp	-60 <type..eq.runtime.MemStats+0x97>
  448733:	e8 38 be ff ff 	callq	-16840 <runtime.morestack_noctxt>
  448738:	e9 23 ff ff ff 	jmp	-221 <type..eq.runtime.MemStats>
  44873d:	cc 	int3
  44873e:	cc 	int3
  44873f:	cc 	int3

type..hash.runtime.TypeAssertionError:
  448740:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  448749:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44874d:	0f 86 8e 00 00 00 	jbe	142 <type..hash.runtime.TypeAssertionError+0xa1>
  448753:	48 83 ec 20 	subq	$32, %rsp
  448757:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  44875c:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  448761:	48 8b 44 24 28 	movq	40(%rsp), %rax
  448766:	48 89 04 24 	movq	%rax, (%rsp)
  44876a:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44876f:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  448774:	e8 07 8a fb ff 	callq	-292345 <runtime.strhash>
  448779:	48 8b 44 24 10 	movq	16(%rsp), %rax
  44877e:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  448783:	48 8d 51 10 	leaq	16(%rcx), %rdx
  448787:	48 89 14 24 	movq	%rdx, (%rsp)
  44878b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  448790:	e8 eb 89 fb ff 	callq	-292373 <runtime.strhash>
  448795:	48 8b 44 24 10 	movq	16(%rsp), %rax
  44879a:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  44879f:	48 8d 51 20 	leaq	32(%rcx), %rdx
  4487a3:	48 89 14 24 	movq	%rdx, (%rsp)
  4487a7:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4487ac:	e8 cf 89 fb ff 	callq	-292401 <runtime.strhash>
  4487b1:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4487b6:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  4487bb:	48 83 c1 30 	addq	$48, %rcx
  4487bf:	48 89 0c 24 	movq	%rcx, (%rsp)
  4487c3:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4487c8:	e8 b3 89 fb ff 	callq	-292429 <runtime.strhash>
  4487cd:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4487d2:	48 89 44 24 38 	movq	%rax, 56(%rsp)
  4487d7:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  4487dc:	48 83 c4 20 	addq	$32, %rsp
  4487e0:	c3 	retq
  4487e1:	e8 8a bd ff ff 	callq	-17014 <runtime.morestack_noctxt>
  4487e6:	e9 55 ff ff ff 	jmp	-171 <type..hash.runtime.TypeAssertionError>
  4487eb:	cc 	int3
  4487ec:	cc 	int3
  4487ed:	cc 	int3
  4487ee:	cc 	int3
  4487ef:	cc 	int3

type..eq.runtime.TypeAssertionError:
  4487f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4487f9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4487fd:	0f 86 37 01 00 00 	jbe	311 <type..eq.runtime.TypeAssertionError+0x14a>
  448803:	48 83 ec 28 	subq	$40, %rsp
  448807:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44880c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  448811:	48 8b 44 24 38 	movq	56(%rsp), %rax
  448816:	48 8b 48 08 	movq	8(%rax), %rcx
  44881a:	48 8b 10 	movq	(%rax), %rdx
  44881d:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  448822:	48 8b 73 08 	movq	8(%rbx), %rsi
  448826:	48 8b 3b 	movq	(%rbx), %rdi
  448829:	48 39 f1 	cmpq	%rsi, %rcx
  44882c:	0f 84 e1 00 00 00 	je	225 <type..eq.runtime.TypeAssertionError+0x123>
  448832:	31 c9 	xorl	%ecx, %ecx
  448834:	84 c9 	testb	%cl, %cl
  448836:	0f 84 d0 00 00 00 	je	208 <type..eq.runtime.TypeAssertionError+0x11c>
  44883c:	48 8b 48 18 	movq	24(%rax), %rcx
  448840:	48 8b 53 18 	movq	24(%rbx), %rdx
  448844:	48 8b 73 10 	movq	16(%rbx), %rsi
  448848:	48 8b 78 10 	movq	16(%rax), %rdi
  44884c:	48 39 d1 	cmpq	%rdx, %rcx
  44884f:	0f 84 90 00 00 00 	je	144 <type..eq.runtime.TypeAssertionError+0xf5>
  448855:	31 c9 	xorl	%ecx, %ecx
  448857:	84 c9 	testb	%cl, %cl
  448859:	0f 84 82 00 00 00 	je	130 <type..eq.runtime.TypeAssertionError+0xf1>
  44885f:	48 8b 48 28 	movq	40(%rax), %rcx
  448863:	48 8b 53 28 	movq	40(%rbx), %rdx
  448867:	48 8b 73 20 	movq	32(%rbx), %rsi
  44886b:	48 8b 78 20 	movq	32(%rax), %rdi
  44886f:	48 39 d1 	cmpq	%rdx, %rcx
  448872:	74 49 	je	73 <type..eq.runtime.TypeAssertionError+0xcd>
  448874:	31 c9 	xorl	%ecx, %ecx
  448876:	84 c9 	testb	%cl, %cl
  448878:	74 3f 	je	63 <type..eq.runtime.TypeAssertionError+0xc9>
  44887a:	48 8b 4b 38 	movq	56(%rbx), %rcx
  44887e:	48 8b 53 30 	movq	48(%rbx), %rdx
  448882:	48 8b 58 38 	movq	56(%rax), %rbx
  448886:	48 8b 40 30 	movq	48(%rax), %rax
  44888a:	48 39 d9 	cmpq	%rbx, %rcx
  44888d:	74 10 	je	16 <type..eq.runtime.TypeAssertionError+0xaf>
  44888f:	31 c0 	xorl	%eax, %eax
  448891:	88 44 24 40 	movb	%al, 64(%rsp)
  448895:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44889a:	48 83 c4 28 	addq	$40, %rsp
  44889e:	c3 	retq
  44889f:	48 89 14 24 	movq	%rdx, (%rsp)
  4488a3:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4488a8:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  4488ad:	e8 8e da ff ff 	callq	-9586 <runtime.memequal>
  4488b2:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  4488b7:	eb d8 	jmp	-40 <type..eq.runtime.TypeAssertionError+0xa1>
  4488b9:	31 c0 	xorl	%eax, %eax
  4488bb:	eb d4 	jmp	-44 <type..eq.runtime.TypeAssertionError+0xa1>
  4488bd:	48 89 34 24 	movq	%rsi, (%rsp)
  4488c1:	48 89 7c 24 08 	movq	%rdi, 8(%rsp)
  4488c6:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  4488cb:	e8 70 da ff ff 	callq	-9616 <runtime.memequal>
  4488d0:	0f b6 4c 24 18 	movzbl	24(%rsp), %ecx
  4488d5:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4488da:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  4488df:	eb 95 	jmp	-107 <type..eq.runtime.TypeAssertionError+0x86>
  4488e1:	31 c9 	xorl	%ecx, %ecx
  4488e3:	eb 91 	jmp	-111 <type..eq.runtime.TypeAssertionError+0x86>
  4488e5:	48 89 34 24 	movq	%rsi, (%rsp)
  4488e9:	48 89 7c 24 08 	movq	%rdi, 8(%rsp)
  4488ee:	48 89 54 24 10 	movq	%rdx, 16(%rsp)
  4488f3:	e8 48 da ff ff 	callq	-9656 <runtime.memequal>
  4488f8:	0f b6 4c 24 18 	movzbl	24(%rsp), %ecx
  4488fd:	48 8b 44 24 38 	movq	56(%rsp), %rax
  448902:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  448907:	e9 4b ff ff ff 	jmp	-181 <type..eq.runtime.TypeAssertionError+0x67>
  44890c:	31 c9 	xorl	%ecx, %ecx
  44890e:	e9 44 ff ff ff 	jmp	-188 <type..eq.runtime.TypeAssertionError+0x67>
  448913:	48 89 3c 24 	movq	%rdi, (%rsp)
  448917:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  44891c:	48 89 74 24 10 	movq	%rsi, 16(%rsp)
  448921:	e8 1a da ff ff 	callq	-9702 <runtime.memequal>
  448926:	0f b6 4c 24 18 	movzbl	24(%rsp), %ecx
  44892b:	48 8b 44 24 38 	movq	56(%rsp), %rax
  448930:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  448935:	e9 fa fe ff ff 	jmp	-262 <type..eq.runtime.TypeAssertionError+0x44>
  44893a:	e8 31 bc ff ff 	callq	-17359 <runtime.morestack_noctxt>
  44893f:	e9 ac fe ff ff 	jmp	-340 <type..eq.runtime.TypeAssertionError>
  448944:	cc 	int3
  448945:	cc 	int3
  448946:	cc 	int3
  448947:	cc 	int3
  448948:	cc 	int3
  448949:	cc 	int3
  44894a:	cc 	int3
  44894b:	cc 	int3
  44894c:	cc 	int3
  44894d:	cc 	int3
  44894e:	cc 	int3
  44894f:	cc 	int3

type..hash.runtime._panic:
  448950:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  448959:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44895d:	0f 86 84 00 00 00 	jbe	132 <type..hash.runtime._panic+0x97>
  448963:	48 83 ec 28 	subq	$40, %rsp
  448967:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44896c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  448971:	48 8b 44 24 30 	movq	48(%rsp), %rax
  448976:	48 89 04 24 	movq	%rax, (%rsp)
  44897a:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44897f:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  448984:	48 c7 44 24 10 08 00 00 00 	movq	$8, 16(%rsp)
  44898d:	e8 7e d1 fb ff 	callq	-274050 <runtime.memhash>
  448992:	48 8b 44 24 18 	movq	24(%rsp), %rax
  448997:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44899c:	48 8d 51 08 	leaq	8(%rcx), %rdx
  4489a0:	48 89 14 24 	movq	%rdx, (%rsp)
  4489a4:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4489a9:	e8 d2 8c fb ff 	callq	-291630 <runtime.nilinterhash>
  4489ae:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4489b3:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4489b8:	48 83 c1 18 	addq	$24, %rcx
  4489bc:	48 89 0c 24 	movq	%rcx, (%rsp)
  4489c0:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4489c5:	48 c7 44 24 10 0a 00 00 00 	movq	$10, 16(%rsp)
  4489ce:	e8 3d d1 fb ff 	callq	-274115 <runtime.memhash>
  4489d3:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4489d8:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  4489dd:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4489e2:	48 83 c4 28 	addq	$40, %rsp
  4489e6:	c3 	retq
  4489e7:	e8 84 bb ff ff 	callq	-17532 <runtime.morestack_noctxt>
  4489ec:	e9 5f ff ff ff 	jmp	-161 <type..hash.runtime._panic>
  4489f1:	cc 	int3
  4489f2:	cc 	int3
  4489f3:	cc 	int3
  4489f4:	cc 	int3
  4489f5:	cc 	int3
  4489f6:	cc 	int3
  4489f7:	cc 	int3
  4489f8:	cc 	int3
  4489f9:	cc 	int3
  4489fa:	cc 	int3
  4489fb:	cc 	int3
  4489fc:	cc 	int3
  4489fd:	cc 	int3
  4489fe:	cc 	int3
  4489ff:	cc 	int3

type..eq.runtime._panic:
  448a00:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  448a09:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  448a0d:	0f 86 9c 00 00 00 	jbe	156 <type..eq.runtime._panic+0xaf>
  448a13:	48 83 ec 28 	subq	$40, %rsp
  448a17:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  448a1c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  448a21:	48 8b 44 24 30 	movq	48(%rsp), %rax
  448a26:	48 8b 08 	movq	(%rax), %rcx
  448a29:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  448a2e:	48 8b 1a 	movq	(%rdx), %rbx
  448a31:	48 39 d9 	cmpq	%rbx, %rcx
  448a34:	75 75 	jne	117 <type..eq.runtime._panic+0xab>
  448a36:	48 8b 4a 10 	movq	16(%rdx), %rcx
  448a3a:	48 8b 5a 08 	movq	8(%rdx), %rbx
  448a3e:	48 8b 70 10 	movq	16(%rax), %rsi
  448a42:	48 8b 78 08 	movq	8(%rax), %rdi
  448a46:	48 39 df 	cmpq	%rbx, %rdi
  448a49:	74 3c 	je	60 <type..eq.runtime._panic+0x87>
  448a4b:	31 c9 	xorl	%ecx, %ecx
  448a4d:	84 c9 	testb	%cl, %cl
  448a4f:	75 10 	jne	16 <type..eq.runtime._panic+0x61>
  448a51:	31 c0 	xorl	%eax, %eax
  448a53:	88 44 24 40 	movb	%al, 64(%rsp)
  448a57:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  448a5c:	48 83 c4 28 	addq	$40, %rsp
  448a60:	c3 	retq
  448a61:	48 8d 4a 18 	leaq	24(%rdx), %rcx
  448a65:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  448a6a:	48 83 c0 18 	addq	$24, %rax
  448a6e:	48 89 04 24 	movq	%rax, (%rsp)
  448a72:	48 c7 44 24 10 0a 00 00 00 	movq	$10, 16(%rsp)
  448a7b:	e8 c0 d8 ff ff 	callq	-10048 <runtime.memequal>
  448a80:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  448a85:	eb cc 	jmp	-52 <type..eq.runtime._panic+0x53>
  448a87:	48 89 3c 24 	movq	%rdi, (%rsp)
  448a8b:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  448a90:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  448a95:	e8 56 90 fb ff 	callq	-290730 <runtime.efaceeq>
  448a9a:	0f b6 4c 24 18 	movzbl	24(%rsp), %ecx
  448a9f:	48 8b 44 24 30 	movq	48(%rsp), %rax
  448aa4:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  448aa9:	eb a2 	jmp	-94 <type..eq.runtime._panic+0x4d>
  448aab:	31 c9 	xorl	%ecx, %ecx
  448aad:	eb 9e 	jmp	-98 <type..eq.runtime._panic+0x4d>
  448aaf:	e8 bc ba ff ff 	callq	-17732 <runtime.morestack_noctxt>
  448ab4:	e9 47 ff ff ff 	jmp	-185 <type..eq.runtime._panic>
  448ab9:	cc 	int3
  448aba:	cc 	int3
  448abb:	cc 	int3
  448abc:	cc 	int3
  448abd:	cc 	int3
  448abe:	cc 	int3
  448abf:	cc 	int3

type..hash.runtime._defer:
  448ac0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  448ac9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  448acd:	76 68 	jbe	104 <type..hash.runtime._defer+0x77>
  448acf:	48 83 ec 28 	subq	$40, %rsp
  448ad3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  448ad8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  448add:	48 8b 44 24 30 	movq	48(%rsp), %rax
  448ae2:	48 89 04 24 	movq	%rax, (%rsp)
  448ae6:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  448aeb:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  448af0:	48 c7 44 24 10 05 00 00 00 	movq	$5, 16(%rsp)
  448af9:	e8 12 d0 fb ff 	callq	-274414 <runtime.memhash>
  448afe:	48 8b 44 24 18 	movq	24(%rsp), %rax
  448b03:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  448b08:	48 83 c1 08 	addq	$8, %rcx
  448b0c:	48 89 0c 24 	movq	%rcx, (%rsp)
  448b10:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  448b15:	48 c7 44 24 10 28 00 00 00 	movq	$40, 16(%rsp)
  448b1e:	e8 ed cf fb ff 	callq	-274451 <runtime.memhash>
  448b23:	48 8b 44 24 18 	movq	24(%rsp), %rax
  448b28:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  448b2d:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  448b32:	48 83 c4 28 	addq	$40, %rsp
  448b36:	c3 	retq
  448b37:	e8 34 ba ff ff 	callq	-17868 <runtime.morestack_noctxt>
  448b3c:	eb 82 	jmp	-126 <type..hash.runtime._defer>
  448b3e:	cc 	int3
  448b3f:	cc 	int3

type..eq.runtime._defer:
  448b40:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  448b49:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  448b4d:	76 66 	jbe	102 <type..eq.runtime._defer+0x75>
  448b4f:	48 83 ec 28 	subq	$40, %rsp
  448b53:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  448b58:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  448b5d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  448b62:	8b 08 	movl	(%rax), %ecx
  448b64:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  448b69:	8b 1a 	movl	(%rdx), %ebx
  448b6b:	39 d9 	cmpl	%ebx, %ecx
  448b6d:	75 42 	jne	66 <type..eq.runtime._defer+0x71>
  448b6f:	0f b6 48 04 	movzbl	4(%rax), %ecx
  448b73:	0f b6 5a 04 	movzbl	4(%rdx), %ebx
  448b77:	38 d9 	cmpb	%bl, %cl
  448b79:	74 10 	je	16 <type..eq.runtime._defer+0x4b>
  448b7b:	31 c0 	xorl	%eax, %eax
  448b7d:	88 44 24 40 	movb	%al, 64(%rsp)
  448b81:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  448b86:	48 83 c4 28 	addq	$40, %rsp
  448b8a:	c3 	retq
  448b8b:	48 8d 4a 08 	leaq	8(%rdx), %rcx
  448b8f:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  448b94:	48 83 c0 08 	addq	$8, %rax
  448b98:	48 89 04 24 	movq	%rax, (%rsp)
  448b9c:	48 c7 44 24 10 28 00 00 00 	movq	$40, 16(%rsp)
  448ba5:	e8 96 d7 ff ff 	callq	-10346 <runtime.memequal>
  448baa:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  448baf:	eb cc 	jmp	-52 <type..eq.runtime._defer+0x3d>
  448bb1:	31 c0 	xorl	%eax, %eax
  448bb3:	eb c8 	jmp	-56 <type..eq.runtime._defer+0x3d>
  448bb5:	e8 b6 b9 ff ff 	callq	-17994 <runtime.morestack_noctxt>
  448bba:	eb 84 	jmp	-124 <type..eq.runtime._defer>
  448bbc:	cc 	int3
  448bbd:	cc 	int3
  448bbe:	cc 	int3
  448bbf:	cc 	int3

type..hash.runtime.sysmontick:
  448bc0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  448bc9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  448bcd:	0f 86 8d 00 00 00 	jbe	141 <type..hash.runtime.sysmontick+0xa0>
  448bd3:	48 83 ec 28 	subq	$40, %rsp
  448bd7:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  448bdc:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  448be1:	48 8b 44 24 30 	movq	48(%rsp), %rax
  448be6:	48 89 04 24 	movq	%rax, (%rsp)
  448bea:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  448bef:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  448bf4:	48 c7 44 24 10 04 00 00 00 	movq	$4, 16(%rsp)
  448bfd:	e8 0e cf fb ff 	callq	-274674 <runtime.memhash>
  448c02:	48 8b 44 24 18 	movq	24(%rsp), %rax
  448c07:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  448c0c:	48 8d 51 08 	leaq	8(%rcx), %rdx
  448c10:	48 89 14 24 	movq	%rdx, (%rsp)
  448c14:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  448c19:	48 c7 44 24 10 0c 00 00 00 	movq	$12, 16(%rsp)
  448c22:	e8 e9 ce fb ff 	callq	-274711 <runtime.memhash>
  448c27:	48 8b 44 24 18 	movq	24(%rsp), %rax
  448c2c:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  448c31:	48 83 c1 18 	addq	$24, %rcx
  448c35:	48 89 0c 24 	movq	%rcx, (%rsp)
  448c39:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  448c3e:	48 c7 44 24 10 08 00 00 00 	movq	$8, 16(%rsp)
  448c47:	e8 c4 ce fb ff 	callq	-274748 <runtime.memhash>
  448c4c:	48 8b 44 24 18 	movq	24(%rsp), %rax
  448c51:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  448c56:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  448c5b:	48 83 c4 28 	addq	$40, %rsp
  448c5f:	c3 	retq
  448c60:	e8 0b b9 ff ff 	callq	-18165 <runtime.morestack_noctxt>
  448c65:	e9 56 ff ff ff 	jmp	-170 <type..hash.runtime.sysmontick>
  448c6a:	cc 	int3
  448c6b:	cc 	int3
  448c6c:	cc 	int3
  448c6d:	cc 	int3
  448c6e:	cc 	int3
  448c6f:	cc 	int3

type..eq.runtime.sysmontick:
  448c70:	48 8b 44 24 08 	movq	8(%rsp), %rax
  448c75:	8b 08 	movl	(%rax), %ecx
  448c77:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  448c7c:	8b 1a 	movl	(%rdx), %ebx
  448c7e:	39 d9 	cmpl	%ebx, %ecx
  448c80:	75 32 	jne	50 <type..eq.runtime.sysmontick+0x44>
  448c82:	48 8b 48 08 	movq	8(%rax), %rcx
  448c86:	48 8b 5a 08 	movq	8(%rdx), %rbx
  448c8a:	48 39 cb 	cmpq	%rcx, %rbx
  448c8d:	75 21 	jne	33 <type..eq.runtime.sysmontick+0x40>
  448c8f:	8b 48 10 	movl	16(%rax), %ecx
  448c92:	8b 5a 10 	movl	16(%rdx), %ebx
  448c95:	39 d9 	cmpl	%ebx, %ecx
  448c97:	75 13 	jne	19 <type..eq.runtime.sysmontick+0x3c>
  448c99:	48 8b 40 18 	movq	24(%rax), %rax
  448c9d:	48 8b 4a 18 	movq	24(%rdx), %rcx
  448ca1:	48 39 c1 	cmpq	%rax, %rcx
  448ca4:	0f 94 c0 	sete	%al
  448ca7:	88 44 24 18 	movb	%al, 24(%rsp)
  448cab:	c3 	retq
  448cac:	31 c0 	xorl	%eax, %eax
  448cae:	eb f7 	jmp	-9 <type..eq.runtime.sysmontick+0x37>
  448cb0:	31 c0 	xorl	%eax, %eax
  448cb2:	eb f3 	jmp	-13 <type..eq.runtime.sysmontick+0x37>
  448cb4:	31 c0 	xorl	%eax, %eax
  448cb6:	eb ef 	jmp	-17 <type..eq.runtime.sysmontick+0x37>
  448cb8:	cc 	int3
  448cb9:	cc 	int3
  448cba:	cc 	int3
  448cbb:	cc 	int3
  448cbc:	cc 	int3
  448cbd:	cc 	int3
  448cbe:	cc 	int3
  448cbf:	cc 	int3

type..hash.runtime.special:
  448cc0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  448cc9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  448ccd:	76 43 	jbe	67 <type..hash.runtime.special+0x52>
  448ccf:	48 83 ec 28 	subq	$40, %rsp
  448cd3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  448cd8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  448cdd:	48 8b 44 24 30 	movq	48(%rsp), %rax
  448ce2:	48 89 04 24 	movq	%rax, (%rsp)
  448ce6:	48 8b 44 24 38 	movq	56(%rsp), %rax
  448ceb:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  448cf0:	48 c7 44 24 10 0b 00 00 00 	movq	$11, 16(%rsp)
  448cf9:	e8 12 ce fb ff 	callq	-274926 <runtime.memhash>
  448cfe:	48 8b 44 24 18 	movq	24(%rsp), %rax
  448d03:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  448d08:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  448d0d:	48 83 c4 28 	addq	$40, %rsp
  448d11:	c3 	retq
  448d12:	e8 59 b8 ff ff 	callq	-18343 <runtime.morestack_noctxt>
  448d17:	eb a7 	jmp	-89 <type..hash.runtime.special>
  448d19:	cc 	int3
  448d1a:	cc 	int3
  448d1b:	cc 	int3
  448d1c:	cc 	int3
  448d1d:	cc 	int3
  448d1e:	cc 	int3
  448d1f:	cc 	int3

type..eq.runtime.special:
  448d20:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  448d29:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  448d2d:	76 42 	jbe	66 <type..eq.runtime.special+0x51>
  448d2f:	48 83 ec 28 	subq	$40, %rsp
  448d33:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  448d38:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  448d3d:	48 8b 44 24 38 	movq	56(%rsp), %rax
  448d42:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  448d47:	48 8b 44 24 30 	movq	48(%rsp), %rax
  448d4c:	48 89 04 24 	movq	%rax, (%rsp)
  448d50:	48 c7 44 24 10 0b 00 00 00 	movq	$11, 16(%rsp)
  448d59:	e8 e2 d5 ff ff 	callq	-10782 <runtime.memequal>
  448d5e:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  448d63:	88 44 24 40 	movb	%al, 64(%rsp)
  448d67:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  448d6c:	48 83 c4 28 	addq	$40, %rsp
  448d70:	c3 	retq
  448d71:	e8 fa b7 ff ff 	callq	-18438 <runtime.morestack_noctxt>
  448d76:	eb a8 	jmp	-88 <type..eq.runtime.special>
  448d78:	cc 	int3
  448d79:	cc 	int3
  448d7a:	cc 	int3
  448d7b:	cc 	int3
  448d7c:	cc 	int3
  448d7d:	cc 	int3
  448d7e:	cc 	int3
  448d7f:	cc 	int3

type..hash.runtime.markBits:
  448d80:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  448d89:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  448d8d:	76 68 	jbe	104 <type..hash.runtime.markBits+0x77>
  448d8f:	48 83 ec 28 	subq	$40, %rsp
  448d93:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  448d98:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  448d9d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  448da2:	48 89 04 24 	movq	%rax, (%rsp)
  448da6:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  448dab:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  448db0:	48 c7 44 24 10 09 00 00 00 	movq	$9, 16(%rsp)
  448db9:	e8 52 cd fb ff 	callq	-275118 <runtime.memhash>
  448dbe:	48 8b 44 24 18 	movq	24(%rsp), %rax
  448dc3:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  448dc8:	48 83 c1 10 	addq	$16, %rcx
  448dcc:	48 89 0c 24 	movq	%rcx, (%rsp)
  448dd0:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  448dd5:	48 c7 44 24 10 08 00 00 00 	movq	$8, 16(%rsp)
  448dde:	e8 2d cd fb ff 	callq	-275155 <runtime.memhash>
  448de3:	48 8b 44 24 18 	movq	24(%rsp), %rax
  448de8:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  448ded:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  448df2:	48 83 c4 28 	addq	$40, %rsp
  448df6:	c3 	retq
  448df7:	e8 74 b7 ff ff 	callq	-18572 <runtime.morestack_noctxt>
  448dfc:	eb 82 	jmp	-126 <type..hash.runtime.markBits>
  448dfe:	cc 	int3
  448dff:	cc 	int3

type..eq.runtime.markBits:
  448e00:	48 8b 44 24 08 	movq	8(%rsp), %rax
  448e05:	48 8b 08 	movq	(%rax), %rcx
  448e08:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  448e0d:	48 8b 1a 	movq	(%rdx), %rbx
  448e10:	48 39 d9 	cmpq	%rbx, %rcx
  448e13:	75 23 	jne	35 <type..eq.runtime.markBits+0x38>
  448e15:	0f b6 48 08 	movzbl	8(%rax), %ecx
  448e19:	0f b6 5a 08 	movzbl	8(%rdx), %ebx
  448e1d:	38 d9 	cmpb	%bl, %cl
  448e1f:	75 13 	jne	19 <type..eq.runtime.markBits+0x34>
  448e21:	48 8b 40 10 	movq	16(%rax), %rax
  448e25:	48 8b 4a 10 	movq	16(%rdx), %rcx
  448e29:	48 39 c8 	cmpq	%rcx, %rax
  448e2c:	0f 94 c0 	sete	%al
  448e2f:	88 44 24 18 	movb	%al, 24(%rsp)
  448e33:	c3 	retq
  448e34:	31 c0 	xorl	%eax, %eax
  448e36:	eb f7 	jmp	-9 <type..eq.runtime.markBits+0x2f>
  448e38:	31 c0 	xorl	%eax, %eax
  448e3a:	eb f3 	jmp	-13 <type..eq.runtime.markBits+0x2f>
  448e3c:	cc 	int3
  448e3d:	cc 	int3
  448e3e:	cc 	int3
  448e3f:	cc 	int3

type..hash.runtime.mcache:
  448e40:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  448e49:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  448e4d:	76 68 	jbe	104 <type..hash.runtime.mcache+0x77>
  448e4f:	48 83 ec 28 	subq	$40, %rsp
  448e53:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  448e58:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  448e5d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  448e62:	48 89 04 24 	movq	%rax, (%rsp)
  448e66:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  448e6b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  448e70:	48 c7 44 24 10 04 00 00 00 	movq	$4, 16(%rsp)
  448e79:	e8 92 cc fb ff 	callq	-275310 <runtime.memhash>
  448e7e:	48 8b 44 24 18 	movq	24(%rsp), %rax
  448e83:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  448e88:	48 83 c1 08 	addq	$8, %rcx
  448e8c:	48 89 0c 24 	movq	%rcx, (%rsp)
  448e90:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  448e95:	48 c7 44 24 10 c0 06 00 00 	movq	$1728, 16(%rsp)
  448e9e:	e8 6d cc fb ff 	callq	-275347 <runtime.memhash>
  448ea3:	48 8b 44 24 18 	movq	24(%rsp), %rax
  448ea8:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  448ead:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  448eb2:	48 83 c4 28 	addq	$40, %rsp
  448eb6:	c3 	retq
  448eb7:	e8 b4 b6 ff ff 	callq	-18764 <runtime.morestack_noctxt>
  448ebc:	eb 82 	jmp	-126 <type..hash.runtime.mcache>
  448ebe:	cc 	int3
  448ebf:	cc 	int3

type..eq.runtime.mcache:
  448ec0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  448ec9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  448ecd:	76 56 	jbe	86 <type..eq.runtime.mcache+0x65>
  448ecf:	48 83 ec 28 	subq	$40, %rsp
  448ed3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  448ed8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  448edd:	48 8b 44 24 30 	movq	48(%rsp), %rax
  448ee2:	8b 08 	movl	(%rax), %ecx
  448ee4:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  448ee9:	8b 1a 	movl	(%rdx), %ebx
  448eeb:	39 d9 	cmpl	%ebx, %ecx
  448eed:	74 10 	je	16 <type..eq.runtime.mcache+0x3f>
  448eef:	31 c0 	xorl	%eax, %eax
  448ef1:	88 44 24 40 	movb	%al, 64(%rsp)
  448ef5:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  448efa:	48 83 c4 28 	addq	$40, %rsp
  448efe:	c3 	retq
  448eff:	48 8d 4a 08 	leaq	8(%rdx), %rcx
  448f03:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  448f08:	48 83 c0 08 	addq	$8, %rax
  448f0c:	48 89 04 24 	movq	%rax, (%rsp)
  448f10:	48 c7 44 24 10 c0 06 00 00 	movq	$1728, 16(%rsp)
  448f19:	e8 22 d4 ff ff 	callq	-11230 <runtime.memequal>
  448f1e:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  448f23:	eb cc 	jmp	-52 <type..eq.runtime.mcache+0x31>
  448f25:	e8 46 b6 ff ff 	callq	-18874 <runtime.morestack_noctxt>
  448f2a:	eb 94 	jmp	-108 <type..eq.runtime.mcache>
  448f2c:	cc 	int3
  448f2d:	cc 	int3
  448f2e:	cc 	int3
  448f2f:	cc 	int3

type..hash.runtime.hchan:
  448f30:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  448f39:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  448f3d:	76 68 	jbe	104 <type..hash.runtime.hchan+0x77>
  448f3f:	48 83 ec 28 	subq	$40, %rsp
  448f43:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  448f48:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  448f4d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  448f52:	48 89 04 24 	movq	%rax, (%rsp)
  448f56:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  448f5b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  448f60:	48 c7 44 24 10 1a 00 00 00 	movq	$26, 16(%rsp)
  448f69:	e8 a2 cb fb ff 	callq	-275550 <runtime.memhash>
  448f6e:	48 8b 44 24 18 	movq	24(%rsp), %rax
  448f73:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  448f78:	48 83 c1 1c 	addq	$28, %rcx
  448f7c:	48 89 0c 24 	movq	%rcx, (%rsp)
  448f80:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  448f85:	48 c7 44 24 10 44 00 00 00 	movq	$68, 16(%rsp)
  448f8e:	e8 7d cb fb ff 	callq	-275587 <runtime.memhash>
  448f93:	48 8b 44 24 18 	movq	24(%rsp), %rax
  448f98:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  448f9d:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  448fa2:	48 83 c4 28 	addq	$40, %rsp
  448fa6:	c3 	retq
  448fa7:	e8 c4 b5 ff ff 	callq	-19004 <runtime.morestack_noctxt>
  448fac:	eb 82 	jmp	-126 <type..hash.runtime.hchan>
  448fae:	cc 	int3
  448faf:	cc 	int3

type..eq.runtime.hchan:
  448fb0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  448fb9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  448fbd:	76 78 	jbe	120 <type..eq.runtime.hchan+0x87>
  448fbf:	48 83 ec 28 	subq	$40, %rsp
  448fc3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  448fc8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  448fcd:	48 8b 44 24 38 	movq	56(%rsp), %rax
  448fd2:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  448fd7:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  448fdc:	48 89 0c 24 	movq	%rcx, (%rsp)
  448fe0:	48 c7 44 24 10 1a 00 00 00 	movq	$26, 16(%rsp)
  448fe9:	e8 52 d3 ff ff 	callq	-11438 <runtime.memequal>
  448fee:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  448ff3:	84 c0 	testb	%al, %al
  448ff5:	75 10 	jne	16 <type..eq.runtime.hchan+0x57>
  448ff7:	31 c0 	xorl	%eax, %eax
  448ff9:	88 44 24 40 	movb	%al, 64(%rsp)
  448ffd:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  449002:	48 83 c4 28 	addq	$40, %rsp
  449006:	c3 	retq
  449007:	48 8b 44 24 38 	movq	56(%rsp), %rax
  44900c:	48 83 c0 1c 	addq	$28, %rax
  449010:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  449015:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44901a:	48 83 c0 1c 	addq	$28, %rax
  44901e:	48 89 04 24 	movq	%rax, (%rsp)
  449022:	48 c7 44 24 10 44 00 00 00 	movq	$68, 16(%rsp)
  44902b:	e8 10 d3 ff ff 	callq	-11504 <runtime.memequal>
  449030:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  449035:	eb c2 	jmp	-62 <type..eq.runtime.hchan+0x49>
  449037:	e8 34 b5 ff ff 	callq	-19148 <runtime.morestack_noctxt>
  44903c:	e9 6f ff ff ff 	jmp	-145 <type..eq.runtime.hchan>
  449041:	cc 	int3
  449042:	cc 	int3
  449043:	cc 	int3
  449044:	cc 	int3
  449045:	cc 	int3
  449046:	cc 	int3
  449047:	cc 	int3
  449048:	cc 	int3
  449049:	cc 	int3
  44904a:	cc 	int3
  44904b:	cc 	int3
  44904c:	cc 	int3
  44904d:	cc 	int3
  44904e:	cc 	int3
  44904f:	cc 	int3

type..hash.runtime.sudog:
  449050:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  449059:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44905d:	0f 86 8d 00 00 00 	jbe	141 <type..hash.runtime.sudog+0xa0>
  449063:	48 83 ec 28 	subq	$40, %rsp
  449067:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44906c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  449071:	48 8b 44 24 30 	movq	48(%rsp), %rax
  449076:	48 89 04 24 	movq	%rax, (%rsp)
  44907a:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44907f:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  449084:	48 c7 44 24 10 09 00 00 00 	movq	$9, 16(%rsp)
  44908d:	e8 7e ca fb ff 	callq	-275842 <runtime.memhash>
  449092:	48 8b 44 24 18 	movq	24(%rsp), %rax
  449097:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44909c:	48 8d 51 10 	leaq	16(%rcx), %rdx
  4490a0:	48 89 14 24 	movq	%rdx, (%rsp)
  4490a4:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4490a9:	48 c7 44 24 10 2c 00 00 00 	movq	$44, 16(%rsp)
  4490b2:	e8 59 ca fb ff 	callq	-275879 <runtime.memhash>
  4490b7:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4490bc:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4490c1:	48 83 c1 40 	addq	$64, %rcx
  4490c5:	48 89 0c 24 	movq	%rcx, (%rsp)
  4490c9:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4490ce:	48 c7 44 24 10 20 00 00 00 	movq	$32, 16(%rsp)
  4490d7:	e8 34 ca fb ff 	callq	-275916 <runtime.memhash>
  4490dc:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4490e1:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  4490e6:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4490eb:	48 83 c4 28 	addq	$40, %rsp
  4490ef:	c3 	retq
  4490f0:	e8 7b b4 ff ff 	callq	-19333 <runtime.morestack_noctxt>
  4490f5:	e9 56 ff ff ff 	jmp	-170 <type..hash.runtime.sudog>
  4490fa:	cc 	int3
  4490fb:	cc 	int3
  4490fc:	cc 	int3
  4490fd:	cc 	int3
  4490fe:	cc 	int3
  4490ff:	cc 	int3

type..eq.runtime.sudog:
  449100:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  449109:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44910d:	0f 86 9f 00 00 00 	jbe	159 <type..eq.runtime.sudog+0xb2>
  449113:	48 83 ec 28 	subq	$40, %rsp
  449117:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44911c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  449121:	48 8b 44 24 30 	movq	48(%rsp), %rax
  449126:	48 8b 08 	movq	(%rax), %rcx
  449129:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  44912e:	48 8b 1a 	movq	(%rdx), %rbx
  449131:	48 39 d9 	cmpq	%rbx, %rcx
  449134:	75 78 	jne	120 <type..eq.runtime.sudog+0xae>
  449136:	0f b6 48 08 	movzbl	8(%rax), %ecx
  44913a:	0f b6 5a 08 	movzbl	8(%rdx), %ebx
  44913e:	38 d9 	cmpb	%bl, %cl
  449140:	74 3c 	je	60 <type..eq.runtime.sudog+0x7e>
  449142:	31 c9 	xorl	%ecx, %ecx
  449144:	84 c9 	testb	%cl, %cl
  449146:	75 10 	jne	16 <type..eq.runtime.sudog+0x58>
  449148:	31 c0 	xorl	%eax, %eax
  44914a:	88 44 24 40 	movb	%al, 64(%rsp)
  44914e:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  449153:	48 83 c4 28 	addq	$40, %rsp
  449157:	c3 	retq
  449158:	48 8d 4a 40 	leaq	64(%rdx), %rcx
  44915c:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  449161:	48 83 c0 40 	addq	$64, %rax
  449165:	48 89 04 24 	movq	%rax, (%rsp)
  449169:	48 c7 44 24 10 20 00 00 00 	movq	$32, 16(%rsp)
  449172:	e8 c9 d1 ff ff 	callq	-11831 <runtime.memequal>
  449177:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44917c:	eb cc 	jmp	-52 <type..eq.runtime.sudog+0x4a>
  44917e:	48 8d 4a 10 	leaq	16(%rdx), %rcx
  449182:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  449187:	48 8d 48 10 	leaq	16(%rax), %rcx
  44918b:	48 89 0c 24 	movq	%rcx, (%rsp)
  44918f:	48 c7 44 24 10 2c 00 00 00 	movq	$44, 16(%rsp)
  449198:	e8 a3 d1 ff ff 	callq	-11869 <runtime.memequal>
  44919d:	0f b6 4c 24 18 	movzbl	24(%rsp), %ecx
  4491a2:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4491a7:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  4491ac:	eb 96 	jmp	-106 <type..eq.runtime.sudog+0x44>
  4491ae:	31 c9 	xorl	%ecx, %ecx
  4491b0:	eb 92 	jmp	-110 <type..eq.runtime.sudog+0x44>
  4491b2:	e8 b9 b3 ff ff 	callq	-19527 <runtime.morestack_noctxt>
  4491b7:	e9 44 ff ff ff 	jmp	-188 <type..eq.runtime.sudog>
  4491bc:	cc 	int3
  4491bd:	cc 	int3
  4491be:	cc 	int3
  4491bf:	cc 	int3

type..hash.runtime.cpuProfile:
  4491c0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4491c9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4491cd:	76 68 	jbe	104 <type..hash.runtime.cpuProfile+0x77>
  4491cf:	48 83 ec 28 	subq	$40, %rsp
  4491d3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  4491d8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  4491dd:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4491e2:	48 89 04 24 	movq	%rax, (%rsp)
  4491e6:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  4491eb:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4491f0:	48 c7 44 24 10 09 00 00 00 	movq	$9, 16(%rsp)
  4491f9:	e8 12 c9 fb ff 	callq	-276206 <runtime.memhash>
  4491fe:	48 8b 44 24 18 	movq	24(%rsp), %rax
  449203:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  449208:	48 83 c1 10 	addq	$16, %rcx
  44920c:	48 89 0c 24 	movq	%rcx, (%rsp)
  449210:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  449215:	48 c7 44 24 10 58 1f 00 00 	movq	$8024, 16(%rsp)
  44921e:	e8 ed c8 fb ff 	callq	-276243 <runtime.memhash>
  449223:	48 8b 44 24 18 	movq	24(%rsp), %rax
  449228:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  44922d:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  449232:	48 83 c4 28 	addq	$40, %rsp
  449236:	c3 	retq
  449237:	e8 34 b3 ff ff 	callq	-19660 <runtime.morestack_noctxt>
  44923c:	eb 82 	jmp	-126 <type..hash.runtime.cpuProfile>
  44923e:	cc 	int3
  44923f:	cc 	int3

type..eq.runtime.cpuProfile:
  449240:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  449249:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44924d:	76 69 	jbe	105 <type..eq.runtime.cpuProfile+0x78>
  44924f:	48 83 ec 28 	subq	$40, %rsp
  449253:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  449258:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44925d:	48 8b 44 24 38 	movq	56(%rsp), %rax
  449262:	48 8b 08 	movq	(%rax), %rcx
  449265:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  44926a:	48 8b 1a 	movq	(%rdx), %rbx
  44926d:	48 39 cb 	cmpq	%rcx, %rbx
  449270:	75 42 	jne	66 <type..eq.runtime.cpuProfile+0x74>
  449272:	0f b6 4a 08 	movzbl	8(%rdx), %ecx
  449276:	0f b6 58 08 	movzbl	8(%rax), %ebx
  44927a:	38 d9 	cmpb	%bl, %cl
  44927c:	74 10 	je	16 <type..eq.runtime.cpuProfile+0x4e>
  44927e:	31 c0 	xorl	%eax, %eax
  449280:	88 44 24 40 	movb	%al, 64(%rsp)
  449284:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  449289:	48 83 c4 28 	addq	$40, %rsp
  44928d:	c3 	retq
  44928e:	48 83 c0 10 	addq	$16, %rax
  449292:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  449297:	48 8d 42 10 	leaq	16(%rdx), %rax
  44929b:	48 89 04 24 	movq	%rax, (%rsp)
  44929f:	48 c7 44 24 10 58 1f 00 00 	movq	$8024, 16(%rsp)
  4492a8:	e8 93 d0 ff ff 	callq	-12141 <runtime.memequal>
  4492ad:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  4492b2:	eb cc 	jmp	-52 <type..eq.runtime.cpuProfile+0x40>
  4492b4:	31 c0 	xorl	%eax, %eax
  4492b6:	eb c8 	jmp	-56 <type..eq.runtime.cpuProfile+0x40>
  4492b8:	e8 b3 b2 ff ff 	callq	-19789 <runtime.morestack_noctxt>
  4492bd:	eb 81 	jmp	-127 <type..eq.runtime.cpuProfile>
  4492bf:	cc 	int3

type..hash.runtime.dbgVar:
  4492c0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4492c9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4492cd:	76 5f 	jbe	95 <type..hash.runtime.dbgVar+0x6e>
  4492cf:	48 83 ec 28 	subq	$40, %rsp
  4492d3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  4492d8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  4492dd:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4492e2:	48 89 04 24 	movq	%rax, (%rsp)
  4492e6:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  4492eb:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4492f0:	e8 8b 7e fb ff 	callq	-295285 <runtime.strhash>
  4492f5:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4492fa:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4492ff:	48 83 c1 10 	addq	$16, %rcx
  449303:	48 89 0c 24 	movq	%rcx, (%rsp)
  449307:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44930c:	48 c7 44 24 10 08 00 00 00 	movq	$8, 16(%rsp)
  449315:	e8 f6 c7 fb ff 	callq	-276490 <runtime.memhash>
  44931a:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44931f:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  449324:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  449329:	48 83 c4 28 	addq	$40, %rsp
  44932d:	c3 	retq
  44932e:	e8 3d b2 ff ff 	callq	-19907 <runtime.morestack_noctxt>
  449333:	eb 8b 	jmp	-117 <type..hash.runtime.dbgVar>
  449335:	cc 	int3
  449336:	cc 	int3
  449337:	cc 	int3
  449338:	cc 	int3
  449339:	cc 	int3
  44933a:	cc 	int3
  44933b:	cc 	int3
  44933c:	cc 	int3
  44933d:	cc 	int3
  44933e:	cc 	int3
  44933f:	cc 	int3

type..eq.runtime.dbgVar:
  449340:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  449349:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44934d:	76 75 	jbe	117 <type..eq.runtime.dbgVar+0x84>
  44934f:	48 83 ec 28 	subq	$40, %rsp
  449353:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  449358:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44935d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  449362:	48 8b 48 08 	movq	8(%rax), %rcx
  449366:	48 8b 10 	movq	(%rax), %rdx
  449369:	48 8b 5c 24 38 	movq	56(%rsp), %rbx
  44936e:	48 8b 73 08 	movq	8(%rbx), %rsi
  449372:	48 8b 3b 	movq	(%rbx), %rdi
  449375:	48 39 f1 	cmpq	%rsi, %rcx
  449378:	74 26 	je	38 <type..eq.runtime.dbgVar+0x60>
  44937a:	31 c9 	xorl	%ecx, %ecx
  44937c:	84 c9 	testb	%cl, %cl
  44937e:	74 1c 	je	28 <type..eq.runtime.dbgVar+0x5c>
  449380:	48 8b 40 10 	movq	16(%rax), %rax
  449384:	48 8b 4b 10 	movq	16(%rbx), %rcx
  449388:	48 39 c8 	cmpq	%rcx, %rax
  44938b:	0f 94 c0 	sete	%al
  44938e:	88 44 24 40 	movb	%al, 64(%rsp)
  449392:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  449397:	48 83 c4 28 	addq	$40, %rsp
  44939b:	c3 	retq
  44939c:	31 c0 	xorl	%eax, %eax
  44939e:	eb ee 	jmp	-18 <type..eq.runtime.dbgVar+0x4e>
  4493a0:	48 89 14 24 	movq	%rdx, (%rsp)
  4493a4:	48 89 7c 24 08 	movq	%rdi, 8(%rsp)
  4493a9:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  4493ae:	e8 8d cf ff ff 	callq	-12403 <runtime.memequal>
  4493b3:	0f b6 4c 24 18 	movzbl	24(%rsp), %ecx
  4493b8:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4493bd:	48 8b 5c 24 38 	movq	56(%rsp), %rbx
  4493c2:	eb b8 	jmp	-72 <type..eq.runtime.dbgVar+0x3c>
  4493c4:	e8 a7 b1 ff ff 	callq	-20057 <runtime.morestack_noctxt>
  4493c9:	e9 72 ff ff ff 	jmp	-142 <type..eq.runtime.dbgVar>
  4493ce:	cc 	int3
  4493cf:	cc 	int3

runtime.(*errorString).Error:
  4493d0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4493d9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4493dd:	76 79 	jbe	121 <runtime.(*errorString).Error+0x88>
  4493df:	48 83 ec 40 	subq	$64, %rsp
  4493e3:	48 89 6c 24 38 	movq	%rbp, 56(%rsp)
  4493e8:	48 8d 6c 24 38 	leaq	56(%rsp), %rbp
  4493ed:	48 8b 59 20 	movq	32(%rcx), %rbx
  4493f1:	48 85 db 	testq	%rbx, %rbx
  4493f4:	75 6c 	jne	108 <runtime.(*errorString).Error+0x92>
  4493f6:	48 8b 44 24 48 	movq	72(%rsp), %rax
  4493fb:	48 85 c0 	testq	%rax, %rax
  4493fe:	74 51 	je	81 <runtime.(*errorString).Error+0x81>
  449400:	48 8b 48 08 	movq	8(%rax), %rcx
  449404:	48 8b 00 	movq	(%rax), %rax
  449407:	48 c7 04 24 00 00 00 00 	movq	$0, (%rsp)
  44940f:	48 8d 15 91 15 02 00 	leaq	136593(%rip), %rdx
  449416:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  44941b:	48 c7 44 24 10 0f 00 00 00 	movq	$15, 16(%rsp)
  449424:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  449429:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  44942e:	e8 ad db fe ff 	callq	-74835 <runtime.concatstring2>
  449433:	48 8b 44 24 28 	movq	40(%rsp), %rax
  449438:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44943d:	48 89 44 24 50 	movq	%rax, 80(%rsp)
  449442:	48 89 4c 24 58 	movq	%rcx, 88(%rsp)
  449447:	48 8b 6c 24 38 	movq	56(%rsp), %rbp
  44944c:	48 83 c4 40 	addq	$64, %rsp
  449450:	c3 	retq
  449451:	e8 9a c2 fb ff 	callq	-277862 <runtime.panicwrap>
  449456:	0f 0b 	ud2
  449458:	e8 13 b1 ff ff 	callq	-20205 <runtime.morestack_noctxt>
  44945d:	e9 6e ff ff ff 	jmp	-146 <runtime.(*errorString).Error>
  449462:	48 8d 7c 24 48 	leaq	72(%rsp), %rdi
  449467:	48 39 3b 	cmpq	%rdi, (%rbx)
  44946a:	75 8a 	jne	-118 <runtime.(*errorString).Error+0x26>
  44946c:	48 89 23 	movq	%rsp, (%rbx)
  44946f:	eb 85 	jmp	-123 <runtime.(*errorString).Error+0x26>
  449471:	cc 	int3
  449472:	cc 	int3
  449473:	cc 	int3
  449474:	cc 	int3
  449475:	cc 	int3
  449476:	cc 	int3
  449477:	cc 	int3
  449478:	cc 	int3
  449479:	cc 	int3
  44947a:	cc 	int3
  44947b:	cc 	int3
  44947c:	cc 	int3
  44947d:	cc 	int3
  44947e:	cc 	int3
  44947f:	cc 	int3

type..hash.runtime.finblock:
  449480:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  449489:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44948d:	76 68 	jbe	104 <type..hash.runtime.finblock+0x77>
  44948f:	48 83 ec 28 	subq	$40, %rsp
  449493:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  449498:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44949d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4494a2:	48 89 04 24 	movq	%rax, (%rsp)
  4494a6:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  4494ab:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  4494b0:	48 c7 44 24 10 14 00 00 00 	movq	$20, 16(%rsp)
  4494b9:	e8 52 c6 fb ff 	callq	-276910 <runtime.memhash>
  4494be:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4494c3:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4494c8:	48 83 c1 18 	addq	$24, %rcx
  4494cc:	48 89 0c 24 	movq	%rcx, (%rsp)
  4494d0:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4494d5:	48 c7 44 24 10 c8 0f 00 00 	movq	$4040, 16(%rsp)
  4494de:	e8 2d c6 fb ff 	callq	-276947 <runtime.memhash>
  4494e3:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4494e8:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  4494ed:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4494f2:	48 83 c4 28 	addq	$40, %rsp
  4494f6:	c3 	retq
  4494f7:	e8 74 b0 ff ff 	callq	-20364 <runtime.morestack_noctxt>
  4494fc:	eb 82 	jmp	-126 <type..hash.runtime.finblock>
  4494fe:	cc 	int3
  4494ff:	cc 	int3

type..eq.runtime.finblock:
  449500:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  449509:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44950d:	76 78 	jbe	120 <type..eq.runtime.finblock+0x87>
  44950f:	48 83 ec 28 	subq	$40, %rsp
  449513:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  449518:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44951d:	48 8b 44 24 38 	movq	56(%rsp), %rax
  449522:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  449527:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44952c:	48 89 0c 24 	movq	%rcx, (%rsp)
  449530:	48 c7 44 24 10 14 00 00 00 	movq	$20, 16(%rsp)
  449539:	e8 02 ce ff ff 	callq	-12798 <runtime.memequal>
  44953e:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  449543:	84 c0 	testb	%al, %al
  449545:	75 10 	jne	16 <type..eq.runtime.finblock+0x57>
  449547:	31 c0 	xorl	%eax, %eax
  449549:	88 44 24 40 	movb	%al, 64(%rsp)
  44954d:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  449552:	48 83 c4 28 	addq	$40, %rsp
  449556:	c3 	retq
  449557:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44955c:	48 83 c0 18 	addq	$24, %rax
  449560:	48 89 04 24 	movq	%rax, (%rsp)
  449564:	48 8b 44 24 38 	movq	56(%rsp), %rax
  449569:	48 83 c0 18 	addq	$24, %rax
  44956d:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  449572:	48 c7 44 24 10 c8 0f 00 00 	movq	$4040, 16(%rsp)
  44957b:	e8 c0 cd ff ff 	callq	-12864 <runtime.memequal>
  449580:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  449585:	eb c2 	jmp	-62 <type..eq.runtime.finblock+0x49>
  449587:	e8 e4 af ff ff 	callq	-20508 <runtime.morestack_noctxt>
  44958c:	e9 6f ff ff ff 	jmp	-145 <type..eq.runtime.finblock>
  449591:	cc 	int3
  449592:	cc 	int3
  449593:	cc 	int3
  449594:	cc 	int3
  449595:	cc 	int3
  449596:	cc 	int3
  449597:	cc 	int3
  449598:	cc 	int3
  449599:	cc 	int3
  44959a:	cc 	int3
  44959b:	cc 	int3
  44959c:	cc 	int3
  44959d:	cc 	int3
  44959e:	cc 	int3
  44959f:	cc 	int3

type..hash.runtime.forcegcstate:
  4495a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4495a9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4495ad:	76 43 	jbe	67 <type..hash.runtime.forcegcstate+0x52>
  4495af:	48 83 ec 28 	subq	$40, %rsp
  4495b3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  4495b8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  4495bd:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4495c2:	48 89 04 24 	movq	%rax, (%rsp)
  4495c6:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4495cb:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4495d0:	48 c7 44 24 10 14 00 00 00 	movq	$20, 16(%rsp)
  4495d9:	e8 32 c5 fb ff 	callq	-277198 <runtime.memhash>
  4495de:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4495e3:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  4495e8:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4495ed:	48 83 c4 28 	addq	$40, %rsp
  4495f1:	c3 	retq
  4495f2:	e8 79 af ff ff 	callq	-20615 <runtime.morestack_noctxt>
  4495f7:	eb a7 	jmp	-89 <type..hash.runtime.forcegcstate>
  4495f9:	cc 	int3
  4495fa:	cc 	int3
  4495fb:	cc 	int3
  4495fc:	cc 	int3
  4495fd:	cc 	int3
  4495fe:	cc 	int3
  4495ff:	cc 	int3

type..eq.runtime.forcegcstate:
  449600:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  449609:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44960d:	76 42 	jbe	66 <type..eq.runtime.forcegcstate+0x51>
  44960f:	48 83 ec 28 	subq	$40, %rsp
  449613:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  449618:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44961d:	48 8b 44 24 38 	movq	56(%rsp), %rax
  449622:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  449627:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44962c:	48 89 04 24 	movq	%rax, (%rsp)
  449630:	48 c7 44 24 10 14 00 00 00 	movq	$20, 16(%rsp)
  449639:	e8 02 cd ff ff 	callq	-13054 <runtime.memequal>
  44963e:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  449643:	88 44 24 40 	movb	%al, 64(%rsp)
  449647:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44964c:	48 83 c4 28 	addq	$40, %rsp
  449650:	c3 	retq
  449651:	e8 1a af ff ff 	callq	-20710 <runtime.morestack_noctxt>
  449656:	eb a8 	jmp	-88 <type..eq.runtime.forcegcstate>
  449658:	cc 	int3
  449659:	cc 	int3
  44965a:	cc 	int3
  44965b:	cc 	int3
  44965c:	cc 	int3
  44965d:	cc 	int3
  44965e:	cc 	int3
  44965f:	cc 	int3

type..hash.runtime.gcControllerState:
  449660:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  449669:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44966d:	0f 86 97 00 00 00 	jbe	151 <type..hash.runtime.gcControllerState+0xaa>
  449673:	48 83 ec 28 	subq	$40, %rsp
  449677:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44967c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  449681:	48 8b 44 24 30 	movq	48(%rsp), %rax
  449686:	48 89 04 24 	movq	%rax, (%rsp)
  44968a:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44968f:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  449694:	48 c7 44 24 10 40 00 00 00 	movq	$64, 16(%rsp)
  44969d:	e8 6e c4 fb ff 	callq	-277394 <runtime.memhash>
  4496a2:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4496a7:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4496ac:	48 8d 51 40 	leaq	64(%rcx), %rdx
  4496b0:	48 89 14 24 	movq	%rdx, (%rsp)
  4496b4:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4496b9:	e8 42 7c fb ff 	callq	-295870 <runtime.f64hash>
  4496be:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4496c3:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4496c8:	48 8d 51 48 	leaq	72(%rcx), %rdx
  4496cc:	48 89 14 24 	movq	%rdx, (%rsp)
  4496d0:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4496d5:	e8 26 7c fb ff 	callq	-295898 <runtime.f64hash>
  4496da:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4496df:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  4496e4:	48 83 c1 50 	addq	$80, %rcx
  4496e8:	48 89 0c 24 	movq	%rcx, (%rsp)
  4496ec:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4496f1:	e8 0a 7c fb ff 	callq	-295926 <runtime.f64hash>
  4496f6:	48 8b 44 24 10 	movq	16(%rsp), %rax
  4496fb:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  449700:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  449705:	48 83 c4 28 	addq	$40, %rsp
  449709:	c3 	retq
  44970a:	e8 61 ae ff ff 	callq	-20895 <runtime.morestack_noctxt>
  44970f:	e9 4c ff ff ff 	jmp	-180 <type..hash.runtime.gcControllerState>
  449714:	cc 	int3
  449715:	cc 	int3
  449716:	cc 	int3
  449717:	cc 	int3
  449718:	cc 	int3
  449719:	cc 	int3
  44971a:	cc 	int3
  44971b:	cc 	int3
  44971c:	cc 	int3
  44971d:	cc 	int3
  44971e:	cc 	int3
  44971f:	cc 	int3

type..eq.runtime.gcControllerState:
  449720:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  449729:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44972d:	0f 86 96 00 00 00 	jbe	150 <type..eq.runtime.gcControllerState+0xa9>
  449733:	48 83 ec 28 	subq	$40, %rsp
  449737:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44973c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  449741:	48 8b 44 24 38 	movq	56(%rsp), %rax
  449746:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44974b:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  449750:	48 89 0c 24 	movq	%rcx, (%rsp)
  449754:	48 c7 44 24 10 40 00 00 00 	movq	$64, 16(%rsp)
  44975d:	e8 de cb ff ff 	callq	-13346 <runtime.memequal>
  449762:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  449767:	84 c0 	testb	%al, %al
  449769:	74 5a 	je	90 <type..eq.runtime.gcControllerState+0xa5>
  44976b:	48 8b 44 24 30 	movq	48(%rsp), %rax
  449770:	f2 0f 10 40 40 	movsd	64(%rax), %xmm0
  449775:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44977a:	f2 0f 10 49 40 	movsd	64(%rcx), %xmm1
  44977f:	66 0f 2e c1 	ucomisd	%xmm1, %xmm0
  449783:	75 3c 	jne	60 <type..eq.runtime.gcControllerState+0xa1>
  449785:	7a 3a 	jp	58 <type..eq.runtime.gcControllerState+0xa1>
  449787:	f2 0f 10 40 48 	movsd	72(%rax), %xmm0
  44978c:	f2 0f 10 49 48 	movsd	72(%rcx), %xmm1
  449791:	66 0f 2e c1 	ucomisd	%xmm1, %xmm0
  449795:	75 26 	jne	38 <type..eq.runtime.gcControllerState+0x9d>
  449797:	7a 24 	jp	36 <type..eq.runtime.gcControllerState+0x9d>
  449799:	f2 0f 10 40 50 	movsd	80(%rax), %xmm0
  44979e:	f2 0f 10 49 50 	movsd	80(%rcx), %xmm1
  4497a3:	66 0f 2e c8 	ucomisd	%xmm0, %xmm1
  4497a7:	0f 94 c1 	sete	%cl
  4497aa:	0f 9b c0 	setnp	%al
  4497ad:	21 c1 	andl	%eax, %ecx
  4497af:	88 4c 24 40 	movb	%cl, 64(%rsp)
  4497b3:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4497b8:	48 83 c4 28 	addq	$40, %rsp
  4497bc:	c3 	retq
  4497bd:	31 c9 	xorl	%ecx, %ecx
  4497bf:	eb ee 	jmp	-18 <type..eq.runtime.gcControllerState+0x8f>
  4497c1:	31 c9 	xorl	%ecx, %ecx
  4497c3:	eb ea 	jmp	-22 <type..eq.runtime.gcControllerState+0x8f>
  4497c5:	31 c9 	xorl	%ecx, %ecx
  4497c7:	eb e6 	jmp	-26 <type..eq.runtime.gcControllerState+0x8f>
  4497c9:	e8 a2 ad ff ff 	callq	-21086 <runtime.morestack_noctxt>
  4497ce:	e9 4d ff ff ff 	jmp	-179 <type..eq.runtime.gcControllerState>
  4497d3:	cc 	int3
  4497d4:	cc 	int3
  4497d5:	cc 	int3
  4497d6:	cc 	int3
  4497d7:	cc 	int3
  4497d8:	cc 	int3
  4497d9:	cc 	int3
  4497da:	cc 	int3
  4497db:	cc 	int3
  4497dc:	cc 	int3
  4497dd:	cc 	int3
  4497de:	cc 	int3
  4497df:	cc 	int3

type..hash.runtime.gcSweepBuf:
  4497e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4497e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4497ed:	76 43 	jbe	67 <type..hash.runtime.gcSweepBuf+0x52>
  4497ef:	48 83 ec 28 	subq	$40, %rsp
  4497f3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  4497f8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  4497fd:	48 8b 44 24 30 	movq	48(%rsp), %rax
  449802:	48 89 04 24 	movq	%rax, (%rsp)
  449806:	48 8b 44 24 38 	movq	56(%rsp), %rax
  44980b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  449810:	48 c7 44 24 10 24 00 00 00 	movq	$36, 16(%rsp)
  449819:	e8 f2 c2 fb ff 	callq	-277774 <runtime.memhash>
  44981e:	48 8b 44 24 18 	movq	24(%rsp), %rax
  449823:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  449828:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44982d:	48 83 c4 28 	addq	$40, %rsp
  449831:	c3 	retq
  449832:	e8 39 ad ff ff 	callq	-21191 <runtime.morestack_noctxt>
  449837:	eb a7 	jmp	-89 <type..hash.runtime.gcSweepBuf>
  449839:	cc 	int3
  44983a:	cc 	int3
  44983b:	cc 	int3
  44983c:	cc 	int3
  44983d:	cc 	int3
  44983e:	cc 	int3
  44983f:	cc 	int3

type..eq.runtime.gcSweepBuf:
  449840:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  449849:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44984d:	76 42 	jbe	66 <type..eq.runtime.gcSweepBuf+0x51>
  44984f:	48 83 ec 28 	subq	$40, %rsp
  449853:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  449858:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44985d:	48 8b 44 24 38 	movq	56(%rsp), %rax
  449862:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  449867:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44986c:	48 89 04 24 	movq	%rax, (%rsp)
  449870:	48 c7 44 24 10 24 00 00 00 	movq	$36, 16(%rsp)
  449879:	e8 c2 ca ff ff 	callq	-13630 <runtime.memequal>
  44987e:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  449883:	88 44 24 40 	movb	%al, 64(%rsp)
  449887:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44988c:	48 83 c4 28 	addq	$40, %rsp
  449890:	c3 	retq
  449891:	e8 da ac ff ff 	callq	-21286 <runtime.morestack_noctxt>
  449896:	eb a8 	jmp	-88 <type..eq.runtime.gcSweepBuf>
  449898:	cc 	int3
  449899:	cc 	int3
  44989a:	cc 	int3
  44989b:	cc 	int3
  44989c:	cc 	int3
  44989d:	cc 	int3
  44989e:	cc 	int3
  44989f:	cc 	int3

type..hash.runtime.gcTrigger:
  4498a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4498a9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4498ad:	76 43 	jbe	67 <type..hash.runtime.gcTrigger+0x52>
  4498af:	48 83 ec 28 	subq	$40, %rsp
  4498b3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  4498b8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  4498bd:	48 8b 44 24 30 	movq	48(%rsp), %rax
  4498c2:	48 89 04 24 	movq	%rax, (%rsp)
  4498c6:	48 8b 44 24 38 	movq	56(%rsp), %rax
  4498cb:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  4498d0:	48 c7 44 24 10 14 00 00 00 	movq	$20, 16(%rsp)
  4498d9:	e8 32 c2 fb ff 	callq	-277966 <runtime.memhash>
  4498de:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4498e3:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  4498e8:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4498ed:	48 83 c4 28 	addq	$40, %rsp
  4498f1:	c3 	retq
  4498f2:	e8 79 ac ff ff 	callq	-21383 <runtime.morestack_noctxt>
  4498f7:	eb a7 	jmp	-89 <type..hash.runtime.gcTrigger>
  4498f9:	cc 	int3
  4498fa:	cc 	int3
  4498fb:	cc 	int3
  4498fc:	cc 	int3
  4498fd:	cc 	int3
  4498fe:	cc 	int3
  4498ff:	cc 	int3

type..eq.runtime.gcTrigger:
  449900:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  449909:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44990d:	76 42 	jbe	66 <type..eq.runtime.gcTrigger+0x51>
  44990f:	48 83 ec 28 	subq	$40, %rsp
  449913:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  449918:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44991d:	48 8b 44 24 38 	movq	56(%rsp), %rax
  449922:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  449927:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44992c:	48 89 04 24 	movq	%rax, (%rsp)
  449930:	48 c7 44 24 10 14 00 00 00 	movq	$20, 16(%rsp)
  449939:	e8 02 ca ff ff 	callq	-13822 <runtime.memequal>
  44993e:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  449943:	88 44 24 40 	movb	%al, 64(%rsp)
  449947:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44994c:	48 83 c4 28 	addq	$40, %rsp
  449950:	c3 	retq
  449951:	e8 1a ac ff ff 	callq	-21478 <runtime.morestack_noctxt>
  449956:	eb a8 	jmp	-88 <type..eq.runtime.gcTrigger>
  449958:	cc 	int3
  449959:	cc 	int3
  44995a:	cc 	int3
  44995b:	cc 	int3
  44995c:	cc 	int3
  44995d:	cc 	int3
  44995e:	cc 	int3
  44995f:	cc 	int3

type..hash.runtime.heapBits:
  449960:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  449969:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44996d:	76 43 	jbe	67 <type..hash.runtime.heapBits+0x52>
  44996f:	48 83 ec 28 	subq	$40, %rsp
  449973:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  449978:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44997d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  449982:	48 89 04 24 	movq	%rax, (%rsp)
  449986:	48 8b 44 24 38 	movq	56(%rsp), %rax
  44998b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  449990:	48 c7 44 24 10 0c 00 00 00 	movq	$12, 16(%rsp)
  449999:	e8 72 c1 fb ff 	callq	-278158 <runtime.memhash>
  44999e:	48 8b 44 24 18 	movq	24(%rsp), %rax
  4499a3:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  4499a8:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  4499ad:	48 83 c4 28 	addq	$40, %rsp
  4499b1:	c3 	retq
  4499b2:	e8 b9 ab ff ff 	callq	-21575 <runtime.morestack_noctxt>
  4499b7:	eb a7 	jmp	-89 <type..hash.runtime.heapBits>
  4499b9:	cc 	int3
  4499ba:	cc 	int3
  4499bb:	cc 	int3
  4499bc:	cc 	int3
  4499bd:	cc 	int3
  4499be:	cc 	int3
  4499bf:	cc 	int3

type..eq.runtime.heapBits:
  4499c0:	48 8b 44 24 08 	movq	8(%rsp), %rax
  4499c5:	48 8b 08 	movq	(%rax), %rcx
  4499c8:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  4499cd:	48 8b 1a 	movq	(%rdx), %rbx
  4499d0:	48 39 d9 	cmpq	%rbx, %rcx
  4499d3:	75 10 	jne	16 <type..eq.runtime.heapBits+0x25>
  4499d5:	8b 40 08 	movl	8(%rax), %eax
  4499d8:	8b 4a 08 	movl	8(%rdx), %ecx
  4499db:	39 c8 	cmpl	%ecx, %eax
  4499dd:	0f 94 c0 	sete	%al
  4499e0:	88 44 24 18 	movb	%al, 24(%rsp)
  4499e4:	c3 	retq
  4499e5:	31 c0 	xorl	%eax, %eax
  4499e7:	eb f7 	jmp	-9 <type..eq.runtime.heapBits+0x20>
  4499e9:	cc 	int3
  4499ea:	cc 	int3
  4499eb:	cc 	int3
  4499ec:	cc 	int3
  4499ed:	cc 	int3
  4499ee:	cc 	int3
  4499ef:	cc 	int3

type..hash.runtime.treapNode:
  4499f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  4499f9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  4499fd:	76 43 	jbe	67 <type..hash.runtime.treapNode+0x52>
  4499ff:	48 83 ec 28 	subq	$40, %rsp
  449a03:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  449a08:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  449a0d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  449a12:	48 89 04 24 	movq	%rax, (%rsp)
  449a16:	48 8b 44 24 38 	movq	56(%rsp), %rax
  449a1b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  449a20:	48 c7 44 24 10 2c 00 00 00 	movq	$44, 16(%rsp)
  449a29:	e8 e2 c0 fb ff 	callq	-278302 <runtime.memhash>
  449a2e:	48 8b 44 24 18 	movq	24(%rsp), %rax
  449a33:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  449a38:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  449a3d:	48 83 c4 28 	addq	$40, %rsp
  449a41:	c3 	retq
  449a42:	e8 29 ab ff ff 	callq	-21719 <runtime.morestack_noctxt>
  449a47:	eb a7 	jmp	-89 <type..hash.runtime.treapNode>
  449a49:	cc 	int3
  449a4a:	cc 	int3
  449a4b:	cc 	int3
  449a4c:	cc 	int3
  449a4d:	cc 	int3
  449a4e:	cc 	int3
  449a4f:	cc 	int3

type..eq.runtime.treapNode:
  449a50:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  449a59:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  449a5d:	76 42 	jbe	66 <type..eq.runtime.treapNode+0x51>
  449a5f:	48 83 ec 28 	subq	$40, %rsp
  449a63:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  449a68:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  449a6d:	48 8b 44 24 38 	movq	56(%rsp), %rax
  449a72:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  449a77:	48 8b 44 24 30 	movq	48(%rsp), %rax
  449a7c:	48 89 04 24 	movq	%rax, (%rsp)
  449a80:	48 c7 44 24 10 2c 00 00 00 	movq	$44, 16(%rsp)
  449a89:	e8 b2 c8 ff ff 	callq	-14158 <runtime.memequal>
  449a8e:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  449a93:	88 44 24 40 	movb	%al, 64(%rsp)
  449a97:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  449a9c:	48 83 c4 28 	addq	$40, %rsp
  449aa0:	c3 	retq
  449aa1:	e8 ca aa ff ff 	callq	-21814 <runtime.morestack_noctxt>
  449aa6:	eb a8 	jmp	-88 <type..eq.runtime.treapNode>
  449aa8:	cc 	int3
  449aa9:	cc 	int3
  449aaa:	cc 	int3
  449aab:	cc 	int3
  449aac:	cc 	int3
  449aad:	cc 	int3
  449aae:	cc 	int3
  449aaf:	cc 	int3

type..hash.runtime.mcentral:
  449ab0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  449ab9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  449abd:	76 68 	jbe	104 <type..hash.runtime.mcentral+0x77>
  449abf:	48 83 ec 28 	subq	$40, %rsp
  449ac3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  449ac8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  449acd:	48 8b 44 24 30 	movq	48(%rsp), %rax
  449ad2:	48 89 04 24 	movq	%rax, (%rsp)
  449ad6:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  449adb:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  449ae0:	48 c7 44 24 10 09 00 00 00 	movq	$9, 16(%rsp)
  449ae9:	e8 22 c0 fb ff 	callq	-278494 <runtime.memhash>
  449aee:	48 8b 44 24 18 	movq	24(%rsp), %rax
  449af3:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  449af8:	48 83 c1 10 	addq	$16, %rcx
  449afc:	48 89 0c 24 	movq	%rcx, (%rsp)
  449b00:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  449b05:	48 c7 44 24 10 28 00 00 00 	movq	$40, 16(%rsp)
  449b0e:	e8 fd bf fb ff 	callq	-278531 <runtime.memhash>
  449b13:	48 8b 44 24 18 	movq	24(%rsp), %rax
  449b18:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  449b1d:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  449b22:	48 83 c4 28 	addq	$40, %rsp
  449b26:	c3 	retq
  449b27:	e8 44 aa ff ff 	callq	-21948 <runtime.morestack_noctxt>
  449b2c:	eb 82 	jmp	-126 <type..hash.runtime.mcentral>
  449b2e:	cc 	int3
  449b2f:	cc 	int3

type..eq.runtime.mcentral:
  449b30:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  449b39:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  449b3d:	76 69 	jbe	105 <type..eq.runtime.mcentral+0x78>
  449b3f:	48 83 ec 28 	subq	$40, %rsp
  449b43:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  449b48:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  449b4d:	48 8b 44 24 38 	movq	56(%rsp), %rax
  449b52:	48 8b 08 	movq	(%rax), %rcx
  449b55:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  449b5a:	48 8b 1a 	movq	(%rdx), %rbx
  449b5d:	48 39 cb 	cmpq	%rcx, %rbx
  449b60:	75 42 	jne	66 <type..eq.runtime.mcentral+0x74>
  449b62:	0f b6 4a 08 	movzbl	8(%rdx), %ecx
  449b66:	0f b6 58 08 	movzbl	8(%rax), %ebx
  449b6a:	38 d9 	cmpb	%bl, %cl
  449b6c:	74 10 	je	16 <type..eq.runtime.mcentral+0x4e>
  449b6e:	31 c0 	xorl	%eax, %eax
  449b70:	88 44 24 40 	movb	%al, 64(%rsp)
  449b74:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  449b79:	48 83 c4 28 	addq	$40, %rsp
  449b7d:	c3 	retq
  449b7e:	48 83 c0 10 	addq	$16, %rax
  449b82:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  449b87:	48 8d 42 10 	leaq	16(%rdx), %rax
  449b8b:	48 89 04 24 	movq	%rax, (%rsp)
  449b8f:	48 c7 44 24 10 28 00 00 00 	movq	$40, 16(%rsp)
  449b98:	e8 a3 c7 ff ff 	callq	-14429 <runtime.memequal>
  449b9d:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  449ba2:	eb cc 	jmp	-52 <type..eq.runtime.mcentral+0x40>
  449ba4:	31 c0 	xorl	%eax, %eax
  449ba6:	eb c8 	jmp	-56 <type..eq.runtime.mcentral+0x40>
  449ba8:	e8 c3 a9 ff ff 	callq	-22077 <runtime.morestack_noctxt>
  449bad:	eb 81 	jmp	-127 <type..eq.runtime.mcentral>
  449baf:	cc 	int3

type..hash.[2]runtime.gcSweepBuf:
  449bb0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  449bb9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  449bbd:	76 59 	jbe	89 <type..hash.[2]runtime.gcSweepBuf+0x68>
  449bbf:	48 83 ec 28 	subq	$40, %rsp
  449bc3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  449bc8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  449bcd:	31 c0 	xorl	%eax, %eax
  449bcf:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  449bd4:	eb 2d 	jmp	45 <type..hash.[2]runtime.gcSweepBuf+0x53>
  449bd6:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  449bdb:	48 8d 14 80 	leaq	(%rax,%rax,4), %rdx
  449bdf:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  449be4:	48 8d 14 d3 	leaq	(%rbx,%rdx,8), %rdx
  449be8:	48 89 14 24 	movq	%rdx, (%rsp)
  449bec:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  449bf1:	e8 ea fb ff ff 	callq	-1046 <type..hash.runtime.gcSweepBuf>
  449bf6:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  449bfb:	48 8b 44 24 18 	movq	24(%rsp), %rax
  449c00:	48 ff c0 	incq	%rax
  449c03:	48 83 f8 02 	cmpq	$2, %rax
  449c07:	7c cd 	jl	-51 <type..hash.[2]runtime.gcSweepBuf+0x26>
  449c09:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  449c0e:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  449c13:	48 83 c4 28 	addq	$40, %rsp
  449c17:	c3 	retq
  449c18:	e8 53 a9 ff ff 	callq	-22189 <runtime.morestack_noctxt>
  449c1d:	eb 91 	jmp	-111 <type..hash.[2]runtime.gcSweepBuf>
  449c1f:	cc 	int3

type..eq.[2]runtime.gcSweepBuf:
  449c20:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  449c29:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  449c2d:	76 71 	jbe	113 <type..eq.[2]runtime.gcSweepBuf+0x80>
  449c2f:	48 83 ec 28 	subq	$40, %rsp
  449c33:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  449c38:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  449c3d:	31 c0 	xorl	%eax, %eax
  449c3f:	eb 09 	jmp	9 <type..eq.[2]runtime.gcSweepBuf+0x2a>
  449c41:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  449c46:	48 8d 41 01 	leaq	1(%rcx), %rax
  449c4a:	48 83 f8 02 	cmpq	$2, %rax
  449c4e:	7d 41 	jge	65 <type..eq.[2]runtime.gcSweepBuf+0x71>
  449c50:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  449c55:	48 8d 0c 80 	leaq	(%rax,%rax,4), %rcx
  449c59:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  449c5e:	48 8d 1c ca 	leaq	(%rdx,%rcx,8), %rbx
  449c62:	48 89 1c 24 	movq	%rbx, (%rsp)
  449c66:	48 8b 5c 24 38 	movq	56(%rsp), %rbx
  449c6b:	48 8d 0c cb 	leaq	(%rbx,%rcx,8), %rcx
  449c6f:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  449c74:	e8 c7 fb ff ff 	callq	-1081 <type..eq.runtime.gcSweepBuf>
  449c79:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  449c7e:	84 c0 	testb	%al, %al
  449c80:	75 bf 	jne	-65 <type..eq.[2]runtime.gcSweepBuf+0x21>
  449c82:	c6 44 24 40 00 	movb	$0, 64(%rsp)
  449c87:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  449c8c:	48 83 c4 28 	addq	$40, %rsp
  449c90:	c3 	retq
  449c91:	c6 44 24 40 01 	movb	$1, 64(%rsp)
  449c96:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  449c9b:	48 83 c4 28 	addq	$40, %rsp
  449c9f:	c3 	retq
  449ca0:	e8 cb a8 ff ff 	callq	-22325 <runtime.morestack_noctxt>
  449ca5:	e9 76 ff ff ff 	jmp	-138 <type..eq.[2]runtime.gcSweepBuf>
  449caa:	cc 	int3
  449cab:	cc 	int3
  449cac:	cc 	int3
  449cad:	cc 	int3
  449cae:	cc 	int3
  449caf:	cc 	int3

type..hash.struct { runtime.mcentral runtime.mcentral; runtime.pad [8]uint8 }:
  449cb0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  449cb9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  449cbd:	76 5f 	jbe	95 <type..hash.struct { runtime.mcentral runtime.mcentral; runtime.pad [8]uint8 }+0x6e>
  449cbf:	48 83 ec 28 	subq	$40, %rsp
  449cc3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  449cc8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  449ccd:	48 8b 44 24 30 	movq	48(%rsp), %rax
  449cd2:	48 89 04 24 	movq	%rax, (%rsp)
  449cd6:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  449cdb:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  449ce0:	e8 cb fd ff ff 	callq	-565 <type..hash.runtime.mcentral>
  449ce5:	48 8b 44 24 10 	movq	16(%rsp), %rax
  449cea:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  449cef:	48 83 c1 38 	addq	$56, %rcx
  449cf3:	48 89 0c 24 	movq	%rcx, (%rsp)
  449cf7:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  449cfc:	48 c7 44 24 10 08 00 00 00 	movq	$8, 16(%rsp)
  449d05:	e8 06 be fb ff 	callq	-279034 <runtime.memhash>
  449d0a:	48 8b 44 24 18 	movq	24(%rsp), %rax
  449d0f:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  449d14:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  449d19:	48 83 c4 28 	addq	$40, %rsp
  449d1d:	c3 	retq
  449d1e:	e8 4d a8 ff ff 	callq	-22451 <runtime.morestack_noctxt>
  449d23:	eb 8b 	jmp	-117 <type..hash.struct { runtime.mcentral runtime.mcentral; runtime.pad [8]uint8 }>
  449d25:	cc 	int3
  449d26:	cc 	int3
  449d27:	cc 	int3
  449d28:	cc 	int3
  449d29:	cc 	int3
  449d2a:	cc 	int3
  449d2b:	cc 	int3
  449d2c:	cc 	int3
  449d2d:	cc 	int3
  449d2e:	cc 	int3
  449d2f:	cc 	int3

type..eq.struct { runtime.mcentral runtime.mcentral; runtime.pad [8]uint8 }:
  449d30:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  449d39:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  449d3d:	76 59 	jbe	89 <type..eq.struct { runtime.mcentral runtime.mcentral; runtime.pad [8]uint8 }+0x68>
  449d3f:	48 83 ec 20 	subq	$32, %rsp
  449d43:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  449d48:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  449d4d:	48 8b 44 24 28 	movq	40(%rsp), %rax
  449d52:	48 89 04 24 	movq	%rax, (%rsp)
  449d56:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  449d5b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  449d60:	e8 cb fd ff ff 	callq	-565 <type..eq.runtime.mcentral>
  449d65:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  449d6a:	84 c0 	testb	%al, %al
  449d6c:	74 26 	je	38 <type..eq.struct { runtime.mcentral runtime.mcentral; runtime.pad [8]uint8 }+0x64>
  449d6e:	48 8b 44 24 28 	movq	40(%rsp), %rax
  449d73:	48 8b 40 38 	movq	56(%rax), %rax
  449d77:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  449d7c:	48 8b 49 38 	movq	56(%rcx), %rcx
  449d80:	48 39 c8 	cmpq	%rcx, %rax
  449d83:	0f 94 c0 	sete	%al
  449d86:	88 44 24 38 	movb	%al, 56(%rsp)
  449d8a:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  449d8f:	48 83 c4 20 	addq	$32, %rsp
  449d93:	c3 	retq
  449d94:	31 c0 	xorl	%eax, %eax
  449d96:	eb ee 	jmp	-18 <type..eq.struct { runtime.mcentral runtime.mcentral; runtime.pad [8]uint8 }+0x56>
  449d98:	e8 d3 a7 ff ff 	callq	-22573 <runtime.morestack_noctxt>
  449d9d:	eb 91 	jmp	-111 <type..eq.struct { runtime.mcentral runtime.mcentral; runtime.pad [8]uint8 }>
  449d9f:	cc 	int3

type..hash.[134]struct { runtime.mcentral runtime.mcentral; runtime.pad [8]uint8 }:
  449da0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  449da9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  449dad:	76 5a 	jbe	90 <type..hash.[134]struct { runtime.mcentral runtime.mcentral; runtime.pad [8]uint8 }+0x69>
  449daf:	48 83 ec 28 	subq	$40, %rsp
  449db3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  449db8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  449dbd:	31 c0 	xorl	%eax, %eax
  449dbf:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  449dc4:	eb 2c 	jmp	44 <type..hash.[134]struct { runtime.mcentral runtime.mcentral; runtime.pad [8]uint8 }+0x52>
  449dc6:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  449dcb:	48 c1 e0 06 	shlq	$6, %rax
  449dcf:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  449dd4:	48 01 d8 	addq	%rbx, %rax
  449dd7:	48 89 04 24 	movq	%rax, (%rsp)
  449ddb:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  449de0:	e8 cb fe ff ff 	callq	-309 <type..hash.struct { runtime.mcentral runtime.mcentral; runtime.pad [8]uint8 }>
  449de5:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  449dea:	48 8b 44 24 18 	movq	24(%rsp), %rax
  449def:	48 ff c0 	incq	%rax
  449df2:	48 3d 86 00 00 00 	cmpq	$134, %rax
  449df8:	7c cc 	jl	-52 <type..hash.[134]struct { runtime.mcentral runtime.mcentral; runtime.pad [8]uint8 }+0x26>
  449dfa:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  449dff:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  449e04:	48 83 c4 28 	addq	$40, %rsp
  449e08:	c3 	retq
  449e09:	e8 62 a7 ff ff 	callq	-22686 <runtime.morestack_noctxt>
  449e0e:	eb 90 	jmp	-112 <type..hash.[134]struct { runtime.mcentral runtime.mcentral; runtime.pad [8]uint8 }>

type..eq.[134]struct { runtime.mcentral runtime.mcentral; runtime.pad [8]uint8 }:
  449e10:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  449e19:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  449e1d:	0f 86 98 00 00 00 	jbe	152 <type..eq.[134]struct { runtime.mcentral runtime.mcentral; runtime.pad [8]uint8 }+0xab>
  449e23:	48 83 ec 30 	subq	$48, %rsp
  449e27:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  449e2c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  449e31:	31 c0 	xorl	%eax, %eax
  449e33:	eb 0b 	jmp	11 <type..eq.[134]struct { runtime.mcentral runtime.mcentral; runtime.pad [8]uint8 }+0x30>
  449e35:	48 8b 4c 24 18 	movq	24(%rsp), %rcx
  449e3a:	48 ff c1 	incq	%rcx
  449e3d:	48 89 c8 	movq	%rcx, %rax
  449e40:	48 3d 86 00 00 00 	cmpq	$134, %rax
  449e46:	7d 64 	jge	100 <type..eq.[134]struct { runtime.mcentral runtime.mcentral; runtime.pad [8]uint8 }+0x9c>
  449e48:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  449e4d:	48 c1 e0 06 	shlq	$6, %rax
  449e51:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  449e56:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  449e5b:	48 8d 1c 10 	leaq	(%rax,%rdx), %rbx
  449e5f:	48 89 1c 24 	movq	%rbx, (%rsp)
  449e63:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  449e68:	48 8d 34 18 	leaq	(%rax,%rbx), %rsi
  449e6c:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  449e71:	e8 ba fc ff ff 	callq	-838 <type..eq.runtime.mcentral>
  449e76:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  449e7b:	84 c0 	testb	%al, %al
  449e7d:	74 1e 	je	30 <type..eq.[134]struct { runtime.mcentral runtime.mcentral; runtime.pad [8]uint8 }+0x8d>
  449e7f:	48 8b 44 24 38 	movq	56(%rsp), %rax
  449e84:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  449e89:	48 8b 54 01 38 	movq	56(%rcx,%rax), %rdx
  449e8e:	48 8b 5c 24 40 	movq	64(%rsp), %rbx
  449e93:	48 8b 4c 19 38 	movq	56(%rcx,%rbx), %rcx
  449e98:	48 39 ca 	cmpq	%rcx, %rdx
  449e9b:	74 98 	je	-104 <type..eq.[134]struct { runtime.mcentral runtime.mcentral; runtime.pad [8]uint8 }+0x25>
  449e9d:	c6 44 24 48 00 	movb	$0, 72(%rsp)
  449ea2:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  449ea7:	48 83 c4 30 	addq	$48, %rsp
  449eab:	c3 	retq
  449eac:	c6 44 24 48 01 	movb	$1, 72(%rsp)
  449eb1:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  449eb6:	48 83 c4 30 	addq	$48, %rsp
  449eba:	c3 	retq
  449ebb:	e8 b0 a6 ff ff 	callq	-22864 <runtime.morestack_noctxt>
  449ec0:	e9 4b ff ff ff 	jmp	-181 <type..eq.[134]struct { runtime.mcentral runtime.mcentral; runtime.pad [8]uint8 }>
  449ec5:	cc 	int3
  449ec6:	cc 	int3
  449ec7:	cc 	int3
  449ec8:	cc 	int3
  449ec9:	cc 	int3
  449eca:	cc 	int3
  449ecb:	cc 	int3
  449ecc:	cc 	int3
  449ecd:	cc 	int3
  449ece:	cc 	int3
  449ecf:	cc 	int3

type..hash.runtime.specialfinalizer:
  449ed0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  449ed9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  449edd:	76 5f 	jbe	95 <type..hash.runtime.specialfinalizer+0x6e>
  449edf:	48 83 ec 28 	subq	$40, %rsp
  449ee3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  449ee8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  449eed:	48 8b 44 24 30 	movq	48(%rsp), %rax
  449ef2:	48 89 04 24 	movq	%rax, (%rsp)
  449ef6:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  449efb:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  449f00:	e8 bb ed ff ff 	callq	-4677 <type..hash.runtime.special>
  449f05:	48 8b 44 24 10 	movq	16(%rsp), %rax
  449f0a:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  449f0f:	48 83 c1 10 	addq	$16, %rcx
  449f13:	48 89 0c 24 	movq	%rcx, (%rsp)
  449f17:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  449f1c:	48 c7 44 24 10 20 00 00 00 	movq	$32, 16(%rsp)
  449f25:	e8 e6 bb fb ff 	callq	-279578 <runtime.memhash>
  449f2a:	48 8b 44 24 18 	movq	24(%rsp), %rax
  449f2f:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  449f34:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  449f39:	48 83 c4 28 	addq	$40, %rsp
  449f3d:	c3 	retq
  449f3e:	e8 2d a6 ff ff 	callq	-22995 <runtime.morestack_noctxt>
  449f43:	eb 8b 	jmp	-117 <type..hash.runtime.specialfinalizer>
  449f45:	cc 	int3
  449f46:	cc 	int3
  449f47:	cc 	int3
  449f48:	cc 	int3
  449f49:	cc 	int3
  449f4a:	cc 	int3
  449f4b:	cc 	int3
  449f4c:	cc 	int3
  449f4d:	cc 	int3
  449f4e:	cc 	int3
  449f4f:	cc 	int3

type..eq.runtime.specialfinalizer:
  449f50:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  449f59:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  449f5d:	76 7a 	jbe	122 <type..eq.runtime.specialfinalizer+0x89>
  449f5f:	48 83 ec 28 	subq	$40, %rsp
  449f63:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  449f68:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  449f6d:	48 8b 44 24 38 	movq	56(%rsp), %rax
  449f72:	48 8b 08 	movq	(%rax), %rcx
  449f75:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  449f7a:	48 8b 1a 	movq	(%rdx), %rbx
  449f7d:	48 39 cb 	cmpq	%rcx, %rbx
  449f80:	75 53 	jne	83 <type..eq.runtime.specialfinalizer+0x85>
  449f82:	0f b7 4a 08 	movzwl	8(%rdx), %ecx
  449f86:	0f b7 58 08 	movzwl	8(%rax), %ebx
  449f8a:	66 39 d9 	cmpw	%bx, %cx
  449f8d:	75 42 	jne	66 <type..eq.runtime.specialfinalizer+0x81>
  449f8f:	0f b6 4a 0a 	movzbl	10(%rdx), %ecx
  449f93:	0f b6 58 0a 	movzbl	10(%rax), %ebx
  449f97:	38 d9 	cmpb	%bl, %cl
  449f99:	74 10 	je	16 <type..eq.runtime.specialfinalizer+0x5b>
  449f9b:	31 c0 	xorl	%eax, %eax
  449f9d:	88 44 24 40 	movb	%al, 64(%rsp)
  449fa1:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  449fa6:	48 83 c4 28 	addq	$40, %rsp
  449faa:	c3 	retq
  449fab:	48 83 c0 10 	addq	$16, %rax
  449faf:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  449fb4:	48 8d 42 10 	leaq	16(%rdx), %rax
  449fb8:	48 89 04 24 	movq	%rax, (%rsp)
  449fbc:	48 c7 44 24 10 20 00 00 00 	movq	$32, 16(%rsp)
  449fc5:	e8 76 c3 ff ff 	callq	-15498 <runtime.memequal>
  449fca:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  449fcf:	eb cc 	jmp	-52 <type..eq.runtime.specialfinalizer+0x4d>
  449fd1:	31 c0 	xorl	%eax, %eax
  449fd3:	eb c8 	jmp	-56 <type..eq.runtime.specialfinalizer+0x4d>
  449fd5:	31 c0 	xorl	%eax, %eax
  449fd7:	eb c4 	jmp	-60 <type..eq.runtime.specialfinalizer+0x4d>
  449fd9:	e8 92 a5 ff ff 	callq	-23150 <runtime.morestack_noctxt>
  449fde:	e9 6d ff ff ff 	jmp	-147 <type..eq.runtime.specialfinalizer>
  449fe3:	cc 	int3
  449fe4:	cc 	int3
  449fe5:	cc 	int3
  449fe6:	cc 	int3
  449fe7:	cc 	int3
  449fe8:	cc 	int3
  449fe9:	cc 	int3
  449fea:	cc 	int3
  449feb:	cc 	int3
  449fec:	cc 	int3
  449fed:	cc 	int3
  449fee:	cc 	int3
  449fef:	cc 	int3

type..hash.struct { runtime.size uint32; runtime.nmalloc uint64; runtime.nfree uint64 }:
  449ff0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  449ff9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  449ffd:	76 68 	jbe	104 <type..hash.struct { runtime.size uint32; runtime.nmalloc uint64; runtime.nfree uint64 }+0x77>
  449fff:	48 83 ec 28 	subq	$40, %rsp
  44a003:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44a008:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44a00d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44a012:	48 89 04 24 	movq	%rax, (%rsp)
  44a016:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44a01b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44a020:	48 c7 44 24 10 04 00 00 00 	movq	$4, 16(%rsp)
  44a029:	e8 e2 ba fb ff 	callq	-279838 <runtime.memhash>
  44a02e:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44a033:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44a038:	48 83 c1 08 	addq	$8, %rcx
  44a03c:	48 89 0c 24 	movq	%rcx, (%rsp)
  44a040:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44a045:	48 c7 44 24 10 10 00 00 00 	movq	$16, 16(%rsp)
  44a04e:	e8 bd ba fb ff 	callq	-279875 <runtime.memhash>
  44a053:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44a058:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  44a05d:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44a062:	48 83 c4 28 	addq	$40, %rsp
  44a066:	c3 	retq
  44a067:	e8 04 a5 ff ff 	callq	-23292 <runtime.morestack_noctxt>
  44a06c:	eb 82 	jmp	-126 <type..hash.struct { runtime.size uint32; runtime.nmalloc uint64; runtime.nfree uint64 }>
  44a06e:	cc 	int3
  44a06f:	cc 	int3

type..eq.struct { runtime.size uint32; runtime.nmalloc uint64; runtime.nfree uint64 }:
  44a070:	48 8b 44 24 08 	movq	8(%rsp), %rax
  44a075:	8b 08 	movl	(%rax), %ecx
  44a077:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  44a07c:	8b 1a 	movl	(%rdx), %ebx
  44a07e:	39 d9 	cmpl	%ebx, %ecx
  44a080:	75 24 	jne	36 <type..eq.struct { runtime.size uint32; runtime.nmalloc uint64; runtime.nfree uint64 }+0x36>
  44a082:	48 8b 48 08 	movq	8(%rax), %rcx
  44a086:	48 8b 5a 08 	movq	8(%rdx), %rbx
  44a08a:	48 39 d9 	cmpq	%rbx, %rcx
  44a08d:	75 13 	jne	19 <type..eq.struct { runtime.size uint32; runtime.nmalloc uint64; runtime.nfree uint64 }+0x32>
  44a08f:	48 8b 40 10 	movq	16(%rax), %rax
  44a093:	48 8b 4a 10 	movq	16(%rdx), %rcx
  44a097:	48 39 c1 	cmpq	%rax, %rcx
  44a09a:	0f 94 c0 	sete	%al
  44a09d:	88 44 24 18 	movb	%al, 24(%rsp)
  44a0a1:	c3 	retq
  44a0a2:	31 c0 	xorl	%eax, %eax
  44a0a4:	eb f7 	jmp	-9 <type..eq.struct { runtime.size uint32; runtime.nmalloc uint64; runtime.nfree uint64 }+0x2d>
  44a0a6:	31 c0 	xorl	%eax, %eax
  44a0a8:	eb f3 	jmp	-13 <type..eq.struct { runtime.size uint32; runtime.nmalloc uint64; runtime.nfree uint64 }+0x2d>
  44a0aa:	cc 	int3
  44a0ab:	cc 	int3
  44a0ac:	cc 	int3
  44a0ad:	cc 	int3
  44a0ae:	cc 	int3
  44a0af:	cc 	int3

type..hash.[67]struct { runtime.size uint32; runtime.nmalloc uint64; runtime.nfree uint64 }:
  44a0b0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44a0b9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44a0bd:	76 59 	jbe	89 <type..hash.[67]struct { runtime.size uint32; runtime.nmalloc uint64; runtime.nfree uint64 }+0x68>
  44a0bf:	48 83 ec 28 	subq	$40, %rsp
  44a0c3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44a0c8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44a0cd:	31 c0 	xorl	%eax, %eax
  44a0cf:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44a0d4:	eb 2d 	jmp	45 <type..hash.[67]struct { runtime.size uint32; runtime.nmalloc uint64; runtime.nfree uint64 }+0x53>
  44a0d6:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  44a0db:	48 8d 14 40 	leaq	(%rax,%rax,2), %rdx
  44a0df:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  44a0e4:	48 8d 14 d3 	leaq	(%rbx,%rdx,8), %rdx
  44a0e8:	48 89 14 24 	movq	%rdx, (%rsp)
  44a0ec:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44a0f1:	e8 fa fe ff ff 	callq	-262 <type..hash.struct { runtime.size uint32; runtime.nmalloc uint64; runtime.nfree uint64 }>
  44a0f6:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  44a0fb:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44a100:	48 ff c0 	incq	%rax
  44a103:	48 83 f8 43 	cmpq	$67, %rax
  44a107:	7c cd 	jl	-51 <type..hash.[67]struct { runtime.size uint32; runtime.nmalloc uint64; runtime.nfree uint64 }+0x26>
  44a109:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  44a10e:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44a113:	48 83 c4 28 	addq	$40, %rsp
  44a117:	c3 	retq
  44a118:	e8 53 a4 ff ff 	callq	-23469 <runtime.morestack_noctxt>
  44a11d:	eb 91 	jmp	-111 <type..hash.[67]struct { runtime.size uint32; runtime.nmalloc uint64; runtime.nfree uint64 }>
  44a11f:	cc 	int3

type..eq.[67]struct { runtime.size uint32; runtime.nmalloc uint64; runtime.nfree uint64 }:
  44a120:	48 8b 44 24 10 	movq	16(%rsp), %rax
  44a125:	48 8b 4c 24 08 	movq	8(%rsp), %rcx
  44a12a:	31 d2 	xorl	%edx, %edx
  44a12c:	eb 03 	jmp	3 <type..eq.[67]struct { runtime.size uint32; runtime.nmalloc uint64; runtime.nfree uint64 }+0x11>
  44a12e:	48 ff c2 	incq	%rdx
  44a131:	48 83 fa 43 	cmpq	$67, %rdx
  44a135:	7d 32 	jge	50 <type..eq.[67]struct { runtime.size uint32; runtime.nmalloc uint64; runtime.nfree uint64 }+0x49>
  44a137:	48 8d 1c 52 	leaq	(%rdx,%rdx,2), %rbx
  44a13b:	8b 34 d9 	movl	(%rcx,%rbx,8), %esi
  44a13e:	8b 3c d8 	movl	(%rax,%rbx,8), %edi
  44a141:	39 fe 	cmpl	%edi, %esi
  44a143:	75 1e 	jne	30 <type..eq.[67]struct { runtime.size uint32; runtime.nmalloc uint64; runtime.nfree uint64 }+0x43>
  44a145:	48 8b 74 d9 08 	movq	8(%rcx,%rbx,8), %rsi
  44a14a:	48 8b 7c d8 08 	movq	8(%rax,%rbx,8), %rdi
  44a14f:	48 39 fe 	cmpq	%rdi, %rsi
  44a152:	75 0f 	jne	15 <type..eq.[67]struct { runtime.size uint32; runtime.nmalloc uint64; runtime.nfree uint64 }+0x43>
  44a154:	48 8b 74 d9 10 	movq	16(%rcx,%rbx,8), %rsi
  44a159:	48 8b 5c d8 10 	movq	16(%rax,%rbx,8), %rbx
  44a15e:	48 39 f3 	cmpq	%rsi, %rbx
  44a161:	74 cb 	je	-53 <type..eq.[67]struct { runtime.size uint32; runtime.nmalloc uint64; runtime.nfree uint64 }+0xe>
  44a163:	c6 44 24 18 00 	movb	$0, 24(%rsp)
  44a168:	c3 	retq
  44a169:	c6 44 24 18 01 	movb	$1, 24(%rsp)
  44a16e:	c3 	retq
  44a16f:	cc 	int3

type..hash.runtime.mstats:
  44a170:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44a179:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44a17d:	0f 86 18 01 00 00 	jbe	280 <type..hash.runtime.mstats+0x12b>
  44a183:	48 83 ec 28 	subq	$40, %rsp
  44a187:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44a18c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44a191:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44a196:	48 89 04 24 	movq	%rax, (%rsp)
  44a19a:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44a19f:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44a1a4:	48 c7 44 24 10 c8 10 00 00 	movq	$4296, 16(%rsp)
  44a1ad:	e8 5e b9 fb ff 	callq	-280226 <runtime.memhash>
  44a1b2:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44a1b7:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44a1bc:	48 8d 91 c8 10 00 00 	leaq	4296(%rcx), %rdx
  44a1c3:	48 89 14 24 	movq	%rdx, (%rsp)
  44a1c7:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44a1cc:	e8 2f 71 fb ff 	callq	-298705 <runtime.f64hash>
  44a1d1:	48 8b 44 24 10 	movq	16(%rsp), %rax
  44a1d6:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44a1db:	48 8d 91 d0 10 00 00 	leaq	4304(%rcx), %rdx
  44a1e2:	48 89 14 24 	movq	%rdx, (%rsp)
  44a1e6:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44a1eb:	48 c7 44 24 10 02 00 00 00 	movq	$2, 16(%rsp)
  44a1f4:	e8 17 b9 fb ff 	callq	-280297 <runtime.memhash>
  44a1f9:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44a1fe:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44a203:	48 8d 91 d8 10 00 00 	leaq	4312(%rcx), %rdx
  44a20a:	48 89 14 24 	movq	%rdx, (%rsp)
  44a20e:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44a213:	e8 98 fe ff ff 	callq	-360 <type..hash.[67]struct { runtime.size uint32; runtime.nmalloc uint64; runtime.nfree uint64 }>
  44a218:	48 8b 44 24 10 	movq	16(%rsp), %rax
  44a21d:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44a222:	48 8d 91 20 17 00 00 	leaq	5920(%rcx), %rdx
  44a229:	48 89 14 24 	movq	%rdx, (%rsp)
  44a22d:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44a232:	48 c7 44 24 10 10 00 00 00 	movq	$16, 16(%rsp)
  44a23b:	e8 d0 b8 fb ff 	callq	-280368 <runtime.memhash>
  44a240:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44a245:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44a24a:	48 8d 91 30 17 00 00 	leaq	5936(%rcx), %rdx
  44a251:	48 89 14 24 	movq	%rdx, (%rsp)
  44a255:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44a25a:	e8 a1 70 fb ff 	callq	-298847 <runtime.f64hash>
  44a25f:	48 8b 44 24 10 	movq	16(%rsp), %rax
  44a264:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44a269:	48 81 c1 38 17 00 00 	addq	$5944, %rcx
  44a270:	48 89 0c 24 	movq	%rcx, (%rsp)
  44a274:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44a279:	48 c7 44 24 10 20 00 00 00 	movq	$32, 16(%rsp)
  44a282:	e8 89 b8 fb ff 	callq	-280439 <runtime.memhash>
  44a287:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44a28c:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  44a291:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44a296:	48 83 c4 28 	addq	$40, %rsp
  44a29a:	c3 	retq
  44a29b:	e8 d0 a2 ff ff 	callq	-23856 <runtime.morestack_noctxt>
  44a2a0:	e9 cb fe ff ff 	jmp	-309 <type..hash.runtime.mstats>
  44a2a5:	cc 	int3
  44a2a6:	cc 	int3
  44a2a7:	cc 	int3
  44a2a8:	cc 	int3
  44a2a9:	cc 	int3
  44a2aa:	cc 	int3
  44a2ab:	cc 	int3
  44a2ac:	cc 	int3
  44a2ad:	cc 	int3
  44a2ae:	cc 	int3
  44a2af:	cc 	int3

type..eq.runtime.mstats:
  44a2b0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44a2b9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44a2bd:	0f 86 70 01 00 00 	jbe	368 <type..eq.runtime.mstats+0x183>
  44a2c3:	48 83 ec 28 	subq	$40, %rsp
  44a2c7:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44a2cc:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44a2d1:	48 8b 44 24 38 	movq	56(%rsp), %rax
  44a2d6:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44a2db:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44a2e0:	48 89 0c 24 	movq	%rcx, (%rsp)
  44a2e4:	48 c7 44 24 10 c8 10 00 00 	movq	$4296, 16(%rsp)
  44a2ed:	e8 4e c0 ff ff 	callq	-16306 <runtime.memequal>
  44a2f2:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44a2f7:	84 c0 	testb	%al, %al
  44a2f9:	0f 84 23 01 00 00 	je	291 <type..eq.runtime.mstats+0x172>
  44a2ff:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44a304:	f2 0f 10 80 c8 10 00 00 	movsd	4296(%rax), %xmm0
  44a30c:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44a311:	f2 0f 10 89 c8 10 00 00 	movsd	4296(%rcx), %xmm1
  44a319:	66 0f 2e c8 	ucomisd	%xmm0, %xmm1
  44a31d:	0f 85 f8 00 00 00 	jne	248 <type..eq.runtime.mstats+0x16b>
  44a323:	0f 8a f2 00 00 00 	jp	242 <type..eq.runtime.mstats+0x16b>
  44a329:	0f b6 90 d0 10 00 00 	movzbl	4304(%rax), %edx
  44a330:	0f b6 99 d0 10 00 00 	movzbl	4304(%rcx), %ebx
  44a337:	38 d3 	cmpb	%dl, %bl
  44a339:	0f 85 d5 00 00 00 	jne	213 <type..eq.runtime.mstats+0x164>
  44a33f:	0f b6 90 d1 10 00 00 	movzbl	4305(%rax), %edx
  44a346:	0f b6 99 d1 10 00 00 	movzbl	4305(%rcx), %ebx
  44a34d:	38 d3 	cmpb	%dl, %bl
  44a34f:	0f 84 8f 00 00 00 	je	143 <type..eq.runtime.mstats+0x134>
  44a355:	31 d2 	xorl	%edx, %edx
  44a357:	84 d2 	testb	%dl, %dl
  44a359:	0f 84 81 00 00 00 	je	129 <type..eq.runtime.mstats+0x130>
  44a35f:	48 8b 90 20 17 00 00 	movq	5920(%rax), %rdx
  44a366:	48 8b 99 20 17 00 00 	movq	5920(%rcx), %rbx
  44a36d:	48 39 da 	cmpq	%rbx, %rdx
  44a370:	75 6a 	jne	106 <type..eq.runtime.mstats+0x12c>
  44a372:	48 8b 90 28 17 00 00 	movq	5928(%rax), %rdx
  44a379:	48 8b 99 28 17 00 00 	movq	5928(%rcx), %rbx
  44a380:	48 39 da 	cmpq	%rbx, %rdx
  44a383:	75 53 	jne	83 <type..eq.runtime.mstats+0x128>
  44a385:	f2 0f 10 80 30 17 00 00 	movsd	5936(%rax), %xmm0
  44a38d:	f2 0f 10 89 30 17 00 00 	movsd	5936(%rcx), %xmm1
  44a395:	66 0f 2e c8 	ucomisd	%xmm0, %xmm1
  44a399:	75 02 	jne	2 <type..eq.runtime.mstats+0xed>
  44a39b:	7b 10 	jnp	16 <type..eq.runtime.mstats+0xfd>
  44a39d:	31 c0 	xorl	%eax, %eax
  44a39f:	88 44 24 40 	movb	%al, 64(%rsp)
  44a3a3:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44a3a8:	48 83 c4 28 	addq	$40, %rsp
  44a3ac:	c3 	retq
  44a3ad:	48 81 c1 38 17 00 00 	addq	$5944, %rcx
  44a3b4:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44a3b9:	48 05 38 17 00 00 	addq	$5944, %rax
  44a3bf:	48 89 04 24 	movq	%rax, (%rsp)
  44a3c3:	48 c7 44 24 10 20 00 00 00 	movq	$32, 16(%rsp)
  44a3cc:	e8 6f bf ff ff 	callq	-16529 <runtime.memequal>
  44a3d1:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44a3d6:	eb c7 	jmp	-57 <type..eq.runtime.mstats+0xef>
  44a3d8:	31 c0 	xorl	%eax, %eax
  44a3da:	eb c3 	jmp	-61 <type..eq.runtime.mstats+0xef>
  44a3dc:	31 c0 	xorl	%eax, %eax
  44a3de:	eb bf 	jmp	-65 <type..eq.runtime.mstats+0xef>
  44a3e0:	31 c0 	xorl	%eax, %eax
  44a3e2:	eb bb 	jmp	-69 <type..eq.runtime.mstats+0xef>
  44a3e4:	48 8d 90 d8 10 00 00 	leaq	4312(%rax), %rdx
  44a3eb:	48 89 14 24 	movq	%rdx, (%rsp)
  44a3ef:	48 8d 91 d8 10 00 00 	leaq	4312(%rcx), %rdx
  44a3f6:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  44a3fb:	e8 20 fd ff ff 	callq	-736 <type..eq.[67]struct { runtime.size uint32; runtime.nmalloc uint64; runtime.nfree uint64 }>
  44a400:	0f b6 54 24 10 	movzbl	16(%rsp), %edx
  44a405:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44a40a:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44a40f:	e9 43 ff ff ff 	jmp	-189 <type..eq.runtime.mstats+0xa7>
  44a414:	31 d2 	xorl	%edx, %edx
  44a416:	e9 3c ff ff ff 	jmp	-196 <type..eq.runtime.mstats+0xa7>
  44a41b:	31 d2 	xorl	%edx, %edx
  44a41d:	e9 35 ff ff ff 	jmp	-203 <type..eq.runtime.mstats+0xa7>
  44a422:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44a427:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44a42c:	31 d2 	xorl	%edx, %edx
  44a42e:	e9 24 ff ff ff 	jmp	-220 <type..eq.runtime.mstats+0xa7>
  44a433:	e8 38 a1 ff ff 	callq	-24264 <runtime.morestack_noctxt>
  44a438:	e9 73 fe ff ff 	jmp	-397 <type..eq.runtime.mstats>
  44a43d:	cc 	int3
  44a43e:	cc 	int3
  44a43f:	cc 	int3

runtime.(*plainError).Error:
  44a440:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44a449:	48 83 ec 08 	subq	$8, %rsp
  44a44d:	48 89 2c 24 	movq	%rbp, (%rsp)
  44a451:	48 8d 2c 24 	leaq	(%rsp), %rbp
  44a455:	48 8b 59 20 	movq	32(%rcx), %rbx
  44a459:	48 85 db 	testq	%rbx, %rbx
  44a45c:	75 2b 	jne	43 <runtime.(*plainError).Error+0x49>
  44a45e:	48 8b 44 24 10 	movq	16(%rsp), %rax
  44a463:	48 85 c0 	testq	%rax, %rax
  44a466:	74 1a 	je	26 <runtime.(*plainError).Error+0x42>
  44a468:	48 8b 48 08 	movq	8(%rax), %rcx
  44a46c:	48 8b 00 	movq	(%rax), %rax
  44a46f:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  44a474:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  44a479:	48 8b 2c 24 	movq	(%rsp), %rbp
  44a47d:	48 83 c4 08 	addq	$8, %rsp
  44a481:	c3 	retq
  44a482:	e8 69 b2 fb ff 	callq	-282007 <runtime.panicwrap>
  44a487:	0f 0b 	ud2
  44a489:	48 8d 7c 24 10 	leaq	16(%rsp), %rdi
  44a48e:	48 39 3b 	cmpq	%rdi, (%rbx)
  44a491:	75 cb 	jne	-53 <runtime.(*plainError).Error+0x1e>
  44a493:	48 89 23 	movq	%rsp, (%rbx)
  44a496:	eb c6 	jmp	-58 <runtime.(*plainError).Error+0x1e>
  44a498:	cc 	int3
  44a499:	cc 	int3
  44a49a:	cc 	int3
  44a49b:	cc 	int3
  44a49c:	cc 	int3
  44a49d:	cc 	int3
  44a49e:	cc 	int3
  44a49f:	cc 	int3

type..hash.runtime.rwmutex:
  44a4a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44a4a9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44a4ad:	76 68 	jbe	104 <type..hash.runtime.rwmutex+0x77>
  44a4af:	48 83 ec 28 	subq	$40, %rsp
  44a4b3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44a4b8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44a4bd:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44a4c2:	48 89 04 24 	movq	%rax, (%rsp)
  44a4c6:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44a4cb:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44a4d0:	48 c7 44 24 10 14 00 00 00 	movq	$20, 16(%rsp)
  44a4d9:	e8 32 b6 fb ff 	callq	-281038 <runtime.memhash>
  44a4de:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44a4e3:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44a4e8:	48 83 c1 18 	addq	$24, %rcx
  44a4ec:	48 89 0c 24 	movq	%rcx, (%rsp)
  44a4f0:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44a4f5:	48 c7 44 24 10 18 00 00 00 	movq	$24, 16(%rsp)
  44a4fe:	e8 0d b6 fb ff 	callq	-281075 <runtime.memhash>
  44a503:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44a508:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  44a50d:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44a512:	48 83 c4 28 	addq	$40, %rsp
  44a516:	c3 	retq
  44a517:	e8 54 a0 ff ff 	callq	-24492 <runtime.morestack_noctxt>
  44a51c:	eb 82 	jmp	-126 <type..hash.runtime.rwmutex>
  44a51e:	cc 	int3
  44a51f:	cc 	int3

type..eq.runtime.rwmutex:
  44a520:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44a529:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44a52d:	76 78 	jbe	120 <type..eq.runtime.rwmutex+0x87>
  44a52f:	48 83 ec 28 	subq	$40, %rsp
  44a533:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44a538:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44a53d:	48 8b 44 24 38 	movq	56(%rsp), %rax
  44a542:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44a547:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44a54c:	48 89 0c 24 	movq	%rcx, (%rsp)
  44a550:	48 c7 44 24 10 14 00 00 00 	movq	$20, 16(%rsp)
  44a559:	e8 e2 bd ff ff 	callq	-16926 <runtime.memequal>
  44a55e:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44a563:	84 c0 	testb	%al, %al
  44a565:	75 10 	jne	16 <type..eq.runtime.rwmutex+0x57>
  44a567:	31 c0 	xorl	%eax, %eax
  44a569:	88 44 24 40 	movb	%al, 64(%rsp)
  44a56d:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44a572:	48 83 c4 28 	addq	$40, %rsp
  44a576:	c3 	retq
  44a577:	48 8b 44 24 38 	movq	56(%rsp), %rax
  44a57c:	48 83 c0 18 	addq	$24, %rax
  44a580:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44a585:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44a58a:	48 83 c0 18 	addq	$24, %rax
  44a58e:	48 89 04 24 	movq	%rax, (%rsp)
  44a592:	48 c7 44 24 10 18 00 00 00 	movq	$24, 16(%rsp)
  44a59b:	e8 a0 bd ff ff 	callq	-16992 <runtime.memequal>
  44a5a0:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44a5a5:	eb c2 	jmp	-62 <type..eq.runtime.rwmutex+0x49>
  44a5a7:	e8 c4 9f ff ff 	callq	-24636 <runtime.morestack_noctxt>
  44a5ac:	e9 6f ff ff ff 	jmp	-145 <type..eq.runtime.rwmutex>
  44a5b1:	cc 	int3
  44a5b2:	cc 	int3
  44a5b3:	cc 	int3
  44a5b4:	cc 	int3
  44a5b5:	cc 	int3
  44a5b6:	cc 	int3
  44a5b7:	cc 	int3
  44a5b8:	cc 	int3
  44a5b9:	cc 	int3
  44a5ba:	cc 	int3
  44a5bb:	cc 	int3
  44a5bc:	cc 	int3
  44a5bd:	cc 	int3
  44a5be:	cc 	int3
  44a5bf:	cc 	int3

type..hash.runtime.semaRoot:
  44a5c0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44a5c9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44a5cd:	76 43 	jbe	67 <type..hash.runtime.semaRoot+0x52>
  44a5cf:	48 83 ec 28 	subq	$40, %rsp
  44a5d3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44a5d8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44a5dd:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44a5e2:	48 89 04 24 	movq	%rax, (%rsp)
  44a5e6:	48 8b 44 24 38 	movq	56(%rsp), %rax
  44a5eb:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44a5f0:	48 c7 44 24 10 14 00 00 00 	movq	$20, 16(%rsp)
  44a5f9:	e8 12 b5 fb ff 	callq	-281326 <runtime.memhash>
  44a5fe:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44a603:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  44a608:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44a60d:	48 83 c4 28 	addq	$40, %rsp
  44a611:	c3 	retq
  44a612:	e8 59 9f ff ff 	callq	-24743 <runtime.morestack_noctxt>
  44a617:	eb a7 	jmp	-89 <type..hash.runtime.semaRoot>
  44a619:	cc 	int3
  44a61a:	cc 	int3
  44a61b:	cc 	int3
  44a61c:	cc 	int3
  44a61d:	cc 	int3
  44a61e:	cc 	int3
  44a61f:	cc 	int3

type..eq.runtime.semaRoot:
  44a620:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44a629:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44a62d:	76 42 	jbe	66 <type..eq.runtime.semaRoot+0x51>
  44a62f:	48 83 ec 28 	subq	$40, %rsp
  44a633:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44a638:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44a63d:	48 8b 44 24 38 	movq	56(%rsp), %rax
  44a642:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44a647:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44a64c:	48 89 04 24 	movq	%rax, (%rsp)
  44a650:	48 c7 44 24 10 14 00 00 00 	movq	$20, 16(%rsp)
  44a659:	e8 e2 bc ff ff 	callq	-17182 <runtime.memequal>
  44a65e:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44a663:	88 44 24 40 	movb	%al, 64(%rsp)
  44a667:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44a66c:	48 83 c4 28 	addq	$40, %rsp
  44a670:	c3 	retq
  44a671:	e8 fa 9e ff ff 	callq	-24838 <runtime.morestack_noctxt>
  44a676:	eb a8 	jmp	-88 <type..eq.runtime.semaRoot>
  44a678:	cc 	int3
  44a679:	cc 	int3
  44a67a:	cc 	int3
  44a67b:	cc 	int3
  44a67c:	cc 	int3
  44a67d:	cc 	int3
  44a67e:	cc 	int3
  44a67f:	cc 	int3

type..hash.runtime.sigTabT:
  44a680:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44a689:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44a68d:	76 5f 	jbe	95 <type..hash.runtime.sigTabT+0x6e>
  44a68f:	48 83 ec 28 	subq	$40, %rsp
  44a693:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44a698:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44a69d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44a6a2:	48 89 04 24 	movq	%rax, (%rsp)
  44a6a6:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44a6ab:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44a6b0:	48 c7 44 24 10 04 00 00 00 	movq	$4, 16(%rsp)
  44a6b9:	e8 52 b4 fb ff 	callq	-281518 <runtime.memhash>
  44a6be:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44a6c3:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44a6c8:	48 83 c1 08 	addq	$8, %rcx
  44a6cc:	48 89 0c 24 	movq	%rcx, (%rsp)
  44a6d0:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44a6d5:	e8 a6 6a fb ff 	callq	-300378 <runtime.strhash>
  44a6da:	48 8b 44 24 10 	movq	16(%rsp), %rax
  44a6df:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  44a6e4:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44a6e9:	48 83 c4 28 	addq	$40, %rsp
  44a6ed:	c3 	retq
  44a6ee:	e8 7d 9e ff ff 	callq	-24963 <runtime.morestack_noctxt>
  44a6f3:	eb 8b 	jmp	-117 <type..hash.runtime.sigTabT>
  44a6f5:	cc 	int3
  44a6f6:	cc 	int3
  44a6f7:	cc 	int3
  44a6f8:	cc 	int3
  44a6f9:	cc 	int3
  44a6fa:	cc 	int3
  44a6fb:	cc 	int3
  44a6fc:	cc 	int3
  44a6fd:	cc 	int3
  44a6fe:	cc 	int3
  44a6ff:	cc 	int3

type..eq.runtime.sigTabT:
  44a700:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44a709:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44a70d:	76 63 	jbe	99 <type..eq.runtime.sigTabT+0x72>
  44a70f:	48 83 ec 28 	subq	$40, %rsp
  44a713:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44a718:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44a71d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44a722:	8b 08 	movl	(%rax), %ecx
  44a724:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  44a729:	8b 1a 	movl	(%rdx), %ebx
  44a72b:	39 d9 	cmpl	%ebx, %ecx
  44a72d:	75 3f 	jne	63 <type..eq.runtime.sigTabT+0x6e>
  44a72f:	48 8b 4a 10 	movq	16(%rdx), %rcx
  44a733:	48 8b 52 08 	movq	8(%rdx), %rdx
  44a737:	48 8b 58 10 	movq	16(%rax), %rbx
  44a73b:	48 8b 40 08 	movq	8(%rax), %rax
  44a73f:	48 39 cb 	cmpq	%rcx, %rbx
  44a742:	74 10 	je	16 <type..eq.runtime.sigTabT+0x54>
  44a744:	31 c0 	xorl	%eax, %eax
  44a746:	88 44 24 40 	movb	%al, 64(%rsp)
  44a74a:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44a74f:	48 83 c4 28 	addq	$40, %rsp
  44a753:	c3 	retq
  44a754:	48 89 04 24 	movq	%rax, (%rsp)
  44a758:	48 89 54 24 08 	movq	%rdx, 8(%rsp)
  44a75d:	48 89 5c 24 10 	movq	%rbx, 16(%rsp)
  44a762:	e8 d9 bb ff ff 	callq	-17447 <runtime.memequal>
  44a767:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44a76c:	eb d8 	jmp	-40 <type..eq.runtime.sigTabT+0x46>
  44a76e:	31 c0 	xorl	%eax, %eax
  44a770:	eb d4 	jmp	-44 <type..eq.runtime.sigTabT+0x46>
  44a772:	e8 f9 9d ff ff 	callq	-25095 <runtime.morestack_noctxt>
  44a777:	eb 87 	jmp	-121 <type..eq.runtime.sigTabT>
  44a779:	cc 	int3
  44a77a:	cc 	int3
  44a77b:	cc 	int3
  44a77c:	cc 	int3
  44a77d:	cc 	int3
  44a77e:	cc 	int3
  44a77f:	cc 	int3

type..hash.runtime.siginfo:
  44a780:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44a789:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44a78d:	76 68 	jbe	104 <type..hash.runtime.siginfo+0x77>
  44a78f:	48 83 ec 28 	subq	$40, %rsp
  44a793:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44a798:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44a79d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44a7a2:	48 89 04 24 	movq	%rax, (%rsp)
  44a7a6:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44a7ab:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44a7b0:	48 c7 44 24 10 0c 00 00 00 	movq	$12, 16(%rsp)
  44a7b9:	e8 52 b3 fb ff 	callq	-281774 <runtime.memhash>
  44a7be:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44a7c3:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44a7c8:	48 83 c1 10 	addq	$16, %rcx
  44a7cc:	48 89 0c 24 	movq	%rcx, (%rsp)
  44a7d0:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44a7d5:	48 c7 44 24 10 08 00 00 00 	movq	$8, 16(%rsp)
  44a7de:	e8 2d b3 fb ff 	callq	-281811 <runtime.memhash>
  44a7e3:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44a7e8:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  44a7ed:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44a7f2:	48 83 c4 28 	addq	$40, %rsp
  44a7f6:	c3 	retq
  44a7f7:	e8 74 9d ff ff 	callq	-25228 <runtime.morestack_noctxt>
  44a7fc:	eb 82 	jmp	-126 <type..hash.runtime.siginfo>
  44a7fe:	cc 	int3
  44a7ff:	cc 	int3

type..eq.runtime.siginfo:
  44a800:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44a809:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44a80d:	76 62 	jbe	98 <type..eq.runtime.siginfo+0x71>
  44a80f:	48 83 ec 28 	subq	$40, %rsp
  44a813:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44a818:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44a81d:	48 8b 44 24 38 	movq	56(%rsp), %rax
  44a822:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44a827:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44a82c:	48 89 0c 24 	movq	%rcx, (%rsp)
  44a830:	48 c7 44 24 10 0c 00 00 00 	movq	$12, 16(%rsp)
  44a839:	e8 02 bb ff ff 	callq	-17662 <runtime.memequal>
  44a83e:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44a843:	84 c0 	testb	%al, %al
  44a845:	74 26 	je	38 <type..eq.runtime.siginfo+0x6d>
  44a847:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44a84c:	48 8b 40 10 	movq	16(%rax), %rax
  44a850:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44a855:	48 8b 49 10 	movq	16(%rcx), %rcx
  44a859:	48 39 c8 	cmpq	%rcx, %rax
  44a85c:	0f 94 c0 	sete	%al
  44a85f:	88 44 24 40 	movb	%al, 64(%rsp)
  44a863:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44a868:	48 83 c4 28 	addq	$40, %rsp
  44a86c:	c3 	retq
  44a86d:	31 c0 	xorl	%eax, %eax
  44a86f:	eb ee 	jmp	-18 <type..eq.runtime.siginfo+0x5f>
  44a871:	e8 fa 9c ff ff 	callq	-25350 <runtime.morestack_noctxt>
  44a876:	eb 88 	jmp	-120 <type..eq.runtime.siginfo>
  44a878:	cc 	int3
  44a879:	cc 	int3
  44a87a:	cc 	int3
  44a87b:	cc 	int3
  44a87c:	cc 	int3
  44a87d:	cc 	int3
  44a87e:	cc 	int3
  44a87f:	cc 	int3

type..hash.runtime.stackmap:
  44a880:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44a889:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44a88d:	76 43 	jbe	67 <type..hash.runtime.stackmap+0x52>
  44a88f:	48 83 ec 28 	subq	$40, %rsp
  44a893:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44a898:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44a89d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44a8a2:	48 89 04 24 	movq	%rax, (%rsp)
  44a8a6:	48 8b 44 24 38 	movq	56(%rsp), %rax
  44a8ab:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44a8b0:	48 c7 44 24 10 09 00 00 00 	movq	$9, 16(%rsp)
  44a8b9:	e8 52 b2 fb ff 	callq	-282030 <runtime.memhash>
  44a8be:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44a8c3:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  44a8c8:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44a8cd:	48 83 c4 28 	addq	$40, %rsp
  44a8d1:	c3 	retq
  44a8d2:	e8 99 9c ff ff 	callq	-25447 <runtime.morestack_noctxt>
  44a8d7:	eb a7 	jmp	-89 <type..hash.runtime.stackmap>
  44a8d9:	cc 	int3
  44a8da:	cc 	int3
  44a8db:	cc 	int3
  44a8dc:	cc 	int3
  44a8dd:	cc 	int3
  44a8de:	cc 	int3
  44a8df:	cc 	int3

type..eq.runtime.stackmap:
  44a8e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44a8e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44a8ed:	76 42 	jbe	66 <type..eq.runtime.stackmap+0x51>
  44a8ef:	48 83 ec 28 	subq	$40, %rsp
  44a8f3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44a8f8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44a8fd:	48 8b 44 24 38 	movq	56(%rsp), %rax
  44a902:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44a907:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44a90c:	48 89 04 24 	movq	%rax, (%rsp)
  44a910:	48 c7 44 24 10 09 00 00 00 	movq	$9, 16(%rsp)
  44a919:	e8 22 ba ff ff 	callq	-17886 <runtime.memequal>
  44a91e:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44a923:	88 44 24 40 	movb	%al, 64(%rsp)
  44a927:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44a92c:	48 83 c4 28 	addq	$40, %rsp
  44a930:	c3 	retq
  44a931:	e8 3a 9c ff ff 	callq	-25542 <runtime.morestack_noctxt>
  44a936:	eb a8 	jmp	-88 <type..eq.runtime.stackmap>
  44a938:	cc 	int3
  44a939:	cc 	int3
  44a93a:	cc 	int3
  44a93b:	cc 	int3
  44a93c:	cc 	int3
  44a93d:	cc 	int3
  44a93e:	cc 	int3
  44a93f:	cc 	int3

type..hash.runtime.sweepdata:
  44a940:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44a949:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44a94d:	76 68 	jbe	104 <type..hash.runtime.sweepdata+0x77>
  44a94f:	48 83 ec 28 	subq	$40, %rsp
  44a953:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44a958:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44a95d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44a962:	48 89 04 24 	movq	%rax, (%rsp)
  44a966:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44a96b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44a970:	48 c7 44 24 10 12 00 00 00 	movq	$18, 16(%rsp)
  44a979:	e8 92 b1 fb ff 	callq	-282222 <runtime.memhash>
  44a97e:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44a983:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44a988:	48 83 c1 14 	addq	$20, %rcx
  44a98c:	48 89 0c 24 	movq	%rcx, (%rsp)
  44a990:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44a995:	48 c7 44 24 10 08 00 00 00 	movq	$8, 16(%rsp)
  44a99e:	e8 6d b1 fb ff 	callq	-282259 <runtime.memhash>
  44a9a3:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44a9a8:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  44a9ad:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44a9b2:	48 83 c4 28 	addq	$40, %rsp
  44a9b6:	c3 	retq
  44a9b7:	e8 b4 9b ff ff 	callq	-25676 <runtime.morestack_noctxt>
  44a9bc:	eb 82 	jmp	-126 <type..hash.runtime.sweepdata>
  44a9be:	cc 	int3
  44a9bf:	cc 	int3

type..eq.runtime.sweepdata:
  44a9c0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44a9c9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44a9cd:	76 6d 	jbe	109 <type..eq.runtime.sweepdata+0x7c>
  44a9cf:	48 83 ec 28 	subq	$40, %rsp
  44a9d3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44a9d8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44a9dd:	48 8b 44 24 38 	movq	56(%rsp), %rax
  44a9e2:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44a9e7:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44a9ec:	48 89 0c 24 	movq	%rcx, (%rsp)
  44a9f0:	48 c7 44 24 10 12 00 00 00 	movq	$18, 16(%rsp)
  44a9f9:	e8 42 b9 ff ff 	callq	-18110 <runtime.memequal>
  44a9fe:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44aa03:	84 c0 	testb	%al, %al
  44aa05:	74 31 	je	49 <type..eq.runtime.sweepdata+0x78>
  44aa07:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44aa0c:	8b 48 14 	movl	20(%rax), %ecx
  44aa0f:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  44aa14:	8b 5a 14 	movl	20(%rdx), %ebx
  44aa17:	39 d9 	cmpl	%ebx, %ecx
  44aa19:	75 19 	jne	25 <type..eq.runtime.sweepdata+0x74>
  44aa1b:	8b 40 18 	movl	24(%rax), %eax
  44aa1e:	8b 4a 18 	movl	24(%rdx), %ecx
  44aa21:	39 c1 	cmpl	%eax, %ecx
  44aa23:	0f 94 c0 	sete	%al
  44aa26:	88 44 24 40 	movb	%al, 64(%rsp)
  44aa2a:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44aa2f:	48 83 c4 28 	addq	$40, %rsp
  44aa33:	c3 	retq
  44aa34:	31 c0 	xorl	%eax, %eax
  44aa36:	eb ee 	jmp	-18 <type..eq.runtime.sweepdata+0x66>
  44aa38:	31 c0 	xorl	%eax, %eax
  44aa3a:	eb ea 	jmp	-22 <type..eq.runtime.sweepdata+0x66>
  44aa3c:	e8 2f 9b ff ff 	callq	-25809 <runtime.morestack_noctxt>
  44aa41:	e9 7a ff ff ff 	jmp	-134 <type..eq.runtime.sweepdata>
  44aa46:	cc 	int3
  44aa47:	cc 	int3
  44aa48:	cc 	int3
  44aa49:	cc 	int3
  44aa4a:	cc 	int3
  44aa4b:	cc 	int3
  44aa4c:	cc 	int3
  44aa4d:	cc 	int3
  44aa4e:	cc 	int3
  44aa4f:	cc 	int3

type..hash.runtime.symbol_key:
  44aa50:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44aa59:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44aa5d:	76 5f 	jbe	95 <type..hash.runtime.symbol_key+0x6e>
  44aa5f:	48 83 ec 28 	subq	$40, %rsp
  44aa63:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44aa68:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44aa6d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44aa72:	48 89 04 24 	movq	%rax, (%rsp)
  44aa76:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44aa7b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44aa80:	e8 fb 66 fb ff 	callq	-301317 <runtime.strhash>
  44aa85:	48 8b 44 24 10 	movq	16(%rsp), %rax
  44aa8a:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44aa8f:	48 83 c1 10 	addq	$16, %rcx
  44aa93:	48 89 0c 24 	movq	%rcx, (%rsp)
  44aa97:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44aa9c:	48 c7 44 24 10 10 00 00 00 	movq	$16, 16(%rsp)
  44aaa5:	e8 66 b0 fb ff 	callq	-282522 <runtime.memhash>
  44aaaa:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44aaaf:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  44aab4:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44aab9:	48 83 c4 28 	addq	$40, %rsp
  44aabd:	c3 	retq
  44aabe:	e8 ad 9a ff ff 	callq	-25939 <runtime.morestack_noctxt>
  44aac3:	eb 8b 	jmp	-117 <type..hash.runtime.symbol_key>
  44aac5:	cc 	int3
  44aac6:	cc 	int3
  44aac7:	cc 	int3
  44aac8:	cc 	int3
  44aac9:	cc 	int3
  44aaca:	cc 	int3
  44aacb:	cc 	int3
  44aacc:	cc 	int3
  44aacd:	cc 	int3
  44aace:	cc 	int3
  44aacf:	cc 	int3

type..eq.runtime.symbol_key:
  44aad0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44aad9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44aadd:	0f 86 82 00 00 00 	jbe	130 <type..eq.runtime.symbol_key+0x95>
  44aae3:	48 83 ec 28 	subq	$40, %rsp
  44aae7:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44aaec:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44aaf1:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44aaf6:	48 8b 48 08 	movq	8(%rax), %rcx
  44aafa:	48 8b 10 	movq	(%rax), %rdx
  44aafd:	48 8b 5c 24 38 	movq	56(%rsp), %rbx
  44ab02:	48 8b 73 08 	movq	8(%rbx), %rsi
  44ab06:	48 8b 3b 	movq	(%rbx), %rdi
  44ab09:	48 39 f1 	cmpq	%rsi, %rcx
  44ab0c:	74 33 	je	51 <type..eq.runtime.symbol_key+0x71>
  44ab0e:	31 c9 	xorl	%ecx, %ecx
  44ab10:	84 c9 	testb	%cl, %cl
  44ab12:	75 10 	jne	16 <type..eq.runtime.symbol_key+0x54>
  44ab14:	31 c0 	xorl	%eax, %eax
  44ab16:	88 44 24 40 	movb	%al, 64(%rsp)
  44ab1a:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44ab1f:	48 83 c4 28 	addq	$40, %rsp
  44ab23:	c3 	retq
  44ab24:	48 8d 4b 10 	leaq	16(%rbx), %rcx
  44ab28:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44ab2d:	48 83 c0 10 	addq	$16, %rax
  44ab31:	48 89 04 24 	movq	%rax, (%rsp)
  44ab35:	e8 56 6d fb ff 	callq	-299690 <runtime.memequal128>
  44ab3a:	0f b6 44 24 10 	movzbl	16(%rsp), %eax
  44ab3f:	eb d5 	jmp	-43 <type..eq.runtime.symbol_key+0x46>
  44ab41:	48 89 14 24 	movq	%rdx, (%rsp)
  44ab45:	48 89 7c 24 08 	movq	%rdi, 8(%rsp)
  44ab4a:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  44ab4f:	e8 ec b7 ff ff 	callq	-18452 <runtime.memequal>
  44ab54:	0f b6 4c 24 18 	movzbl	24(%rsp), %ecx
  44ab59:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44ab5e:	48 8b 5c 24 38 	movq	56(%rsp), %rbx
  44ab63:	eb ab 	jmp	-85 <type..eq.runtime.symbol_key+0x40>
  44ab65:	e8 06 9a ff ff 	callq	-26106 <runtime.morestack_noctxt>
  44ab6a:	e9 61 ff ff ff 	jmp	-159 <type..eq.runtime.symbol_key>
  44ab6f:	cc 	int3

type..hash.runtime.traceStack:
  44ab70:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44ab79:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44ab7d:	76 68 	jbe	104 <type..hash.runtime.traceStack+0x77>
  44ab7f:	48 83 ec 28 	subq	$40, %rsp
  44ab83:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44ab88:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44ab8d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44ab92:	48 89 04 24 	movq	%rax, (%rsp)
  44ab96:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44ab9b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44aba0:	48 c7 44 24 10 14 00 00 00 	movq	$20, 16(%rsp)
  44aba9:	e8 62 af fb ff 	callq	-282782 <runtime.memhash>
  44abae:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44abb3:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44abb8:	48 83 c1 18 	addq	$24, %rcx
  44abbc:	48 89 0c 24 	movq	%rcx, (%rsp)
  44abc0:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44abc5:	48 c7 44 24 10 08 00 00 00 	movq	$8, 16(%rsp)
  44abce:	e8 3d af fb ff 	callq	-282819 <runtime.memhash>
  44abd3:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44abd8:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  44abdd:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44abe2:	48 83 c4 28 	addq	$40, %rsp
  44abe6:	c3 	retq
  44abe7:	e8 84 99 ff ff 	callq	-26236 <runtime.morestack_noctxt>
  44abec:	eb 82 	jmp	-126 <type..hash.runtime.traceStack>
  44abee:	cc 	int3
  44abef:	cc 	int3

type..eq.runtime.traceStack:
  44abf0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44abf9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44abfd:	76 6a 	jbe	106 <type..eq.runtime.traceStack+0x79>
  44abff:	48 83 ec 28 	subq	$40, %rsp
  44ac03:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44ac08:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44ac0d:	48 8b 44 24 38 	movq	56(%rsp), %rax
  44ac12:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44ac17:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44ac1c:	48 89 0c 24 	movq	%rcx, (%rsp)
  44ac20:	48 c7 44 24 10 14 00 00 00 	movq	$20, 16(%rsp)
  44ac29:	e8 12 b7 ff ff 	callq	-18670 <runtime.memequal>
  44ac2e:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44ac33:	84 c0 	testb	%al, %al
  44ac35:	74 2e 	je	46 <type..eq.runtime.traceStack+0x75>
  44ac37:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44ac3c:	48 8b 40 18 	movq	24(%rax), %rax
  44ac40:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44ac45:	48 8b 49 18 	movq	24(%rcx), %rcx
  44ac49:	48 39 c8 	cmpq	%rcx, %rax
  44ac4c:	75 13 	jne	19 <type..eq.runtime.traceStack+0x71>
  44ac4e:	b8 01 00 00 00 	movl	$1, %eax
  44ac53:	88 44 24 40 	movb	%al, 64(%rsp)
  44ac57:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44ac5c:	48 83 c4 28 	addq	$40, %rsp
  44ac60:	c3 	retq
  44ac61:	31 c0 	xorl	%eax, %eax
  44ac63:	eb ee 	jmp	-18 <type..eq.runtime.traceStack+0x63>
  44ac65:	31 c0 	xorl	%eax, %eax
  44ac67:	eb ea 	jmp	-22 <type..eq.runtime.traceStack+0x63>
  44ac69:	e8 02 99 ff ff 	callq	-26366 <runtime.morestack_noctxt>
  44ac6e:	eb 80 	jmp	-128 <type..eq.runtime.traceStack>

type..hash.runtime.traceStackTable:
  44ac70:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44ac79:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44ac7d:	76 68 	jbe	104 <type..hash.runtime.traceStackTable+0x77>
  44ac7f:	48 83 ec 28 	subq	$40, %rsp
  44ac83:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44ac88:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44ac8d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44ac92:	48 89 04 24 	movq	%rax, (%rsp)
  44ac96:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44ac9b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44aca0:	48 c7 44 24 10 0c 00 00 00 	movq	$12, 16(%rsp)
  44aca9:	e8 62 ae fb ff 	callq	-283038 <runtime.memhash>
  44acae:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44acb3:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44acb8:	48 83 c1 10 	addq	$16, %rcx
  44acbc:	48 89 0c 24 	movq	%rcx, (%rsp)
  44acc0:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44acc5:	48 c7 44 24 10 10 00 01 00 	movq	$65552, 16(%rsp)
  44acce:	e8 3d ae fb ff 	callq	-283075 <runtime.memhash>
  44acd3:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44acd8:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  44acdd:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44ace2:	48 83 c4 28 	addq	$40, %rsp
  44ace6:	c3 	retq
  44ace7:	e8 84 98 ff ff 	callq	-26492 <runtime.morestack_noctxt>
  44acec:	eb 82 	jmp	-126 <type..hash.runtime.traceStackTable>
  44acee:	cc 	int3
  44acef:	cc 	int3

type..eq.runtime.traceStackTable:
  44acf0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44acf9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44acfd:	0f 86 8e 00 00 00 	jbe	142 <type..eq.runtime.traceStackTable+0xa1>
  44ad03:	48 83 ec 28 	subq	$40, %rsp
  44ad07:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44ad0c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44ad11:	48 8b 44 24 38 	movq	56(%rsp), %rax
  44ad16:	48 8b 08 	movq	(%rax), %rcx
  44ad19:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  44ad1e:	48 8b 1a 	movq	(%rdx), %rbx
  44ad21:	48 39 cb 	cmpq	%rcx, %rbx
  44ad24:	75 67 	jne	103 <type..eq.runtime.traceStackTable+0x9d>
  44ad26:	8b 4a 08 	movl	8(%rdx), %ecx
  44ad29:	8b 58 08 	movl	8(%rax), %ebx
  44ad2c:	39 d9 	cmpl	%ebx, %ecx
  44ad2e:	75 59 	jne	89 <type..eq.runtime.traceStackTable+0x99>
  44ad30:	48 8b 48 10 	movq	16(%rax), %rcx
  44ad34:	48 8b 5a 10 	movq	16(%rdx), %rbx
  44ad38:	48 39 cb 	cmpq	%rcx, %rbx
  44ad3b:	75 48 	jne	72 <type..eq.runtime.traceStackTable+0x95>
  44ad3d:	48 8b 48 18 	movq	24(%rax), %rcx
  44ad41:	48 8b 5a 18 	movq	24(%rdx), %rbx
  44ad45:	48 39 cb 	cmpq	%rcx, %rbx
  44ad48:	0f 94 c1 	sete	%cl
  44ad4b:	84 c9 	testb	%cl, %cl
  44ad4d:	75 10 	jne	16 <type..eq.runtime.traceStackTable+0x6f>
  44ad4f:	31 c0 	xorl	%eax, %eax
  44ad51:	88 44 24 40 	movb	%al, 64(%rsp)
  44ad55:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44ad5a:	48 83 c4 28 	addq	$40, %rsp
  44ad5e:	c3 	retq
  44ad5f:	48 8d 4a 20 	leaq	32(%rdx), %rcx
  44ad63:	48 89 0c 24 	movq	%rcx, (%rsp)
  44ad67:	48 83 c0 20 	addq	$32, %rax
  44ad6b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44ad70:	48 c7 44 24 10 00 00 01 00 	movq	$65536, 16(%rsp)
  44ad79:	e8 c2 b5 ff ff 	callq	-19006 <runtime.memequal>
  44ad7e:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44ad83:	eb cc 	jmp	-52 <type..eq.runtime.traceStackTable+0x61>
  44ad85:	31 c9 	xorl	%ecx, %ecx
  44ad87:	eb c2 	jmp	-62 <type..eq.runtime.traceStackTable+0x5b>
  44ad89:	31 c0 	xorl	%eax, %eax
  44ad8b:	eb c4 	jmp	-60 <type..eq.runtime.traceStackTable+0x61>
  44ad8d:	31 c0 	xorl	%eax, %eax
  44ad8f:	eb c0 	jmp	-64 <type..eq.runtime.traceStackTable+0x61>
  44ad91:	e8 da 97 ff ff 	callq	-26662 <runtime.morestack_noctxt>
  44ad96:	e9 55 ff ff ff 	jmp	-171 <type..eq.runtime.traceStackTable>
  44ad9b:	cc 	int3
  44ad9c:	cc 	int3
  44ad9d:	cc 	int3
  44ad9e:	cc 	int3
  44ad9f:	cc 	int3

type..hash.runtime.version_key:
  44ada0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44ada9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44adad:	76 5f 	jbe	95 <type..hash.runtime.version_key+0x6e>
  44adaf:	48 83 ec 28 	subq	$40, %rsp
  44adb3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44adb8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44adbd:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44adc2:	48 89 04 24 	movq	%rax, (%rsp)
  44adc6:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44adcb:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44add0:	e8 ab 63 fb ff 	callq	-302165 <runtime.strhash>
  44add5:	48 8b 44 24 10 	movq	16(%rsp), %rax
  44adda:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44addf:	48 83 c1 10 	addq	$16, %rcx
  44ade3:	48 89 0c 24 	movq	%rcx, (%rsp)
  44ade7:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44adec:	48 c7 44 24 10 04 00 00 00 	movq	$4, 16(%rsp)
  44adf5:	e8 16 ad fb ff 	callq	-283370 <runtime.memhash>
  44adfa:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44adff:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  44ae04:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44ae09:	48 83 c4 28 	addq	$40, %rsp
  44ae0d:	c3 	retq
  44ae0e:	e8 5d 97 ff ff 	callq	-26787 <runtime.morestack_noctxt>
  44ae13:	eb 8b 	jmp	-117 <type..hash.runtime.version_key>
  44ae15:	cc 	int3
  44ae16:	cc 	int3
  44ae17:	cc 	int3
  44ae18:	cc 	int3
  44ae19:	cc 	int3
  44ae1a:	cc 	int3
  44ae1b:	cc 	int3
  44ae1c:	cc 	int3
  44ae1d:	cc 	int3
  44ae1e:	cc 	int3
  44ae1f:	cc 	int3

type..eq.runtime.version_key:
  44ae20:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44ae29:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44ae2d:	76 72 	jbe	114 <type..eq.runtime.version_key+0x81>
  44ae2f:	48 83 ec 28 	subq	$40, %rsp
  44ae33:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44ae38:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44ae3d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44ae42:	48 8b 48 08 	movq	8(%rax), %rcx
  44ae46:	48 8b 10 	movq	(%rax), %rdx
  44ae49:	48 8b 5c 24 38 	movq	56(%rsp), %rbx
  44ae4e:	48 8b 73 08 	movq	8(%rbx), %rsi
  44ae52:	48 8b 3b 	movq	(%rbx), %rdi
  44ae55:	48 39 f1 	cmpq	%rsi, %rcx
  44ae58:	74 23 	je	35 <type..eq.runtime.version_key+0x5d>
  44ae5a:	31 c9 	xorl	%ecx, %ecx
  44ae5c:	84 c9 	testb	%cl, %cl
  44ae5e:	74 19 	je	25 <type..eq.runtime.version_key+0x59>
  44ae60:	8b 40 10 	movl	16(%rax), %eax
  44ae63:	8b 4b 10 	movl	16(%rbx), %ecx
  44ae66:	39 c8 	cmpl	%ecx, %eax
  44ae68:	0f 94 c0 	sete	%al
  44ae6b:	88 44 24 40 	movb	%al, 64(%rsp)
  44ae6f:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44ae74:	48 83 c4 28 	addq	$40, %rsp
  44ae78:	c3 	retq
  44ae79:	31 c0 	xorl	%eax, %eax
  44ae7b:	eb ee 	jmp	-18 <type..eq.runtime.version_key+0x4b>
  44ae7d:	48 89 14 24 	movq	%rdx, (%rsp)
  44ae81:	48 89 7c 24 08 	movq	%rdi, 8(%rsp)
  44ae86:	48 89 4c 24 10 	movq	%rcx, 16(%rsp)
  44ae8b:	e8 b0 b4 ff ff 	callq	-19280 <runtime.memequal>
  44ae90:	0f b6 4c 24 18 	movzbl	24(%rsp), %ecx
  44ae95:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44ae9a:	48 8b 5c 24 38 	movq	56(%rsp), %rbx
  44ae9f:	eb bb 	jmp	-69 <type..eq.runtime.version_key+0x3c>
  44aea1:	e8 ca 96 ff ff 	callq	-26934 <runtime.morestack_noctxt>
  44aea6:	e9 75 ff ff ff 	jmp	-139 <type..eq.runtime.version_key>
  44aeab:	cc 	int3
  44aeac:	cc 	int3
  44aead:	cc 	int3
  44aeae:	cc 	int3
  44aeaf:	cc 	int3

type..hash.[14]runtime.dbgVar:
  44aeb0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44aeb9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44aebd:	76 59 	jbe	89 <type..hash.[14]runtime.dbgVar+0x68>
  44aebf:	48 83 ec 28 	subq	$40, %rsp
  44aec3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44aec8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44aecd:	31 c0 	xorl	%eax, %eax
  44aecf:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44aed4:	eb 2d 	jmp	45 <type..hash.[14]runtime.dbgVar+0x53>
  44aed6:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  44aedb:	48 8d 14 40 	leaq	(%rax,%rax,2), %rdx
  44aedf:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  44aee4:	48 8d 14 d3 	leaq	(%rbx,%rdx,8), %rdx
  44aee8:	48 89 14 24 	movq	%rdx, (%rsp)
  44aeec:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44aef1:	e8 ca e3 ff ff 	callq	-7222 <type..hash.runtime.dbgVar>
  44aef6:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  44aefb:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44af00:	48 ff c0 	incq	%rax
  44af03:	48 83 f8 0e 	cmpq	$14, %rax
  44af07:	7c cd 	jl	-51 <type..hash.[14]runtime.dbgVar+0x26>
  44af09:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  44af0e:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44af13:	48 83 c4 28 	addq	$40, %rsp
  44af17:	c3 	retq
  44af18:	e8 53 96 ff ff 	callq	-27053 <runtime.morestack_noctxt>
  44af1d:	eb 91 	jmp	-111 <type..hash.[14]runtime.dbgVar>
  44af1f:	cc 	int3

type..eq.[14]runtime.dbgVar:
  44af20:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44af29:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44af2d:	0f 86 a8 00 00 00 	jbe	168 <type..eq.[14]runtime.dbgVar+0xbb>
  44af33:	48 83 ec 38 	subq	$56, %rsp
  44af37:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  44af3c:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  44af41:	31 c0 	xorl	%eax, %eax
  44af43:	eb 09 	jmp	9 <type..eq.[14]runtime.dbgVar+0x2e>
  44af45:	48 8b 54 24 20 	movq	32(%rsp), %rdx
  44af4a:	48 8d 42 01 	leaq	1(%rdx), %rax
  44af4e:	48 83 f8 0e 	cmpq	$14, %rax
  44af52:	7d 78 	jge	120 <type..eq.[14]runtime.dbgVar+0xac>
  44af54:	48 8d 0c 40 	leaq	(%rax,%rax,2), %rcx
  44af58:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  44af5d:	48 8b 1c ca 	movq	(%rdx,%rcx,8), %rbx
  44af61:	48 8b 74 ca 08 	movq	8(%rdx,%rcx,8), %rsi
  44af66:	48 8b 7c 24 48 	movq	72(%rsp), %rdi
  44af6b:	4c 8b 04 cf 	movq	(%rdi,%rcx,8), %r8
  44af6f:	4c 8b 4c cf 08 	movq	8(%rdi,%rcx,8), %r9
  44af74:	4c 39 ce 	cmpq	%r9, %rsi
  44af77:	75 44 	jne	68 <type..eq.[14]runtime.dbgVar+0x9d>
  44af79:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  44af7e:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  44af83:	48 89 1c 24 	movq	%rbx, (%rsp)
  44af87:	4c 89 44 24 08 	movq	%r8, 8(%rsp)
  44af8c:	48 89 74 24 10 	movq	%rsi, 16(%rsp)
  44af91:	e8 aa b3 ff ff 	callq	-19542 <runtime.memequal>
  44af96:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44af9b:	84 c0 	testb	%al, %al
  44af9d:	74 1e 	je	30 <type..eq.[14]runtime.dbgVar+0x9d>
  44af9f:	48 8b 44 24 28 	movq	40(%rsp), %rax
  44afa4:	48 8b 4c 24 40 	movq	64(%rsp), %rcx
  44afa9:	48 8b 54 c1 10 	movq	16(%rcx,%rax,8), %rdx
  44afae:	48 8b 5c 24 48 	movq	72(%rsp), %rbx
  44afb3:	48 8b 44 c3 10 	movq	16(%rbx,%rax,8), %rax
  44afb8:	48 39 c2 	cmpq	%rax, %rdx
  44afbb:	74 88 	je	-120 <type..eq.[14]runtime.dbgVar+0x25>
  44afbd:	c6 44 24 50 00 	movb	$0, 80(%rsp)
  44afc2:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  44afc7:	48 83 c4 38 	addq	$56, %rsp
  44afcb:	c3 	retq
  44afcc:	c6 44 24 50 01 	movb	$1, 80(%rsp)
  44afd1:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  44afd6:	48 83 c4 38 	addq	$56, %rsp
  44afda:	c3 	retq
  44afdb:	e8 90 95 ff ff 	callq	-27248 <runtime.morestack_noctxt>
  44afe0:	e9 3b ff ff ff 	jmp	-197 <type..eq.[14]runtime.dbgVar>
  44afe5:	cc 	int3
  44afe6:	cc 	int3
  44afe7:	cc 	int3
  44afe8:	cc 	int3
  44afe9:	cc 	int3
  44afea:	cc 	int3
  44afeb:	cc 	int3
  44afec:	cc 	int3
  44afed:	cc 	int3
  44afee:	cc 	int3
  44afef:	cc 	int3

type..hash.struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }:
  44aff0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44aff9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44affd:	76 5f 	jbe	95 <type..hash.struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }+0x6e>
  44afff:	48 83 ec 28 	subq	$40, %rsp
  44b003:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44b008:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44b00d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44b012:	48 89 04 24 	movq	%rax, (%rsp)
  44b016:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44b01b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44b020:	e8 9b f5 ff ff 	callq	-2661 <type..hash.runtime.semaRoot>
  44b025:	48 8b 44 24 10 	movq	16(%rsp), %rax
  44b02a:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44b02f:	48 83 c1 18 	addq	$24, %rcx
  44b033:	48 89 0c 24 	movq	%rcx, (%rsp)
  44b037:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44b03c:	48 c7 44 24 10 28 00 00 00 	movq	$40, 16(%rsp)
  44b045:	e8 c6 aa fb ff 	callq	-283962 <runtime.memhash>
  44b04a:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44b04f:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  44b054:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44b059:	48 83 c4 28 	addq	$40, %rsp
  44b05d:	c3 	retq
  44b05e:	e8 0d 95 ff ff 	callq	-27379 <runtime.morestack_noctxt>
  44b063:	eb 8b 	jmp	-117 <type..hash.struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }>
  44b065:	cc 	int3
  44b066:	cc 	int3
  44b067:	cc 	int3
  44b068:	cc 	int3
  44b069:	cc 	int3
  44b06a:	cc 	int3
  44b06b:	cc 	int3
  44b06c:	cc 	int3
  44b06d:	cc 	int3
  44b06e:	cc 	int3
  44b06f:	cc 	int3

type..eq.struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }:
  44b070:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44b079:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44b07d:	76 78 	jbe	120 <type..eq.struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }+0x87>
  44b07f:	48 83 ec 28 	subq	$40, %rsp
  44b083:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44b088:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44b08d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44b092:	48 8b 08 	movq	(%rax), %rcx
  44b095:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  44b09a:	48 8b 1a 	movq	(%rdx), %rbx
  44b09d:	48 39 d9 	cmpq	%rbx, %rcx
  44b0a0:	75 51 	jne	81 <type..eq.struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }+0x83>
  44b0a2:	48 8b 48 08 	movq	8(%rax), %rcx
  44b0a6:	48 8b 5a 08 	movq	8(%rdx), %rbx
  44b0aa:	48 39 d9 	cmpq	%rbx, %rcx
  44b0ad:	75 40 	jne	64 <type..eq.struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }+0x7f>
  44b0af:	8b 48 10 	movl	16(%rax), %ecx
  44b0b2:	8b 5a 10 	movl	16(%rdx), %ebx
  44b0b5:	39 d9 	cmpl	%ebx, %ecx
  44b0b7:	74 10 	je	16 <type..eq.struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }+0x59>
  44b0b9:	31 c0 	xorl	%eax, %eax
  44b0bb:	88 44 24 40 	movb	%al, 64(%rsp)
  44b0bf:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44b0c4:	48 83 c4 28 	addq	$40, %rsp
  44b0c8:	c3 	retq
  44b0c9:	48 83 c0 18 	addq	$24, %rax
  44b0cd:	48 89 04 24 	movq	%rax, (%rsp)
  44b0d1:	48 8d 42 18 	leaq	24(%rdx), %rax
  44b0d5:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44b0da:	48 c7 44 24 10 28 00 00 00 	movq	$40, 16(%rsp)
  44b0e3:	e8 58 b2 ff ff 	callq	-19880 <runtime.memequal>
  44b0e8:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44b0ed:	eb cc 	jmp	-52 <type..eq.struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }+0x4b>
  44b0ef:	31 c0 	xorl	%eax, %eax
  44b0f1:	eb c8 	jmp	-56 <type..eq.struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }+0x4b>
  44b0f3:	31 c0 	xorl	%eax, %eax
  44b0f5:	eb c4 	jmp	-60 <type..eq.struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }+0x4b>
  44b0f7:	e8 74 94 ff ff 	callq	-27532 <runtime.morestack_noctxt>
  44b0fc:	e9 6f ff ff ff 	jmp	-145 <type..eq.struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }>
  44b101:	cc 	int3
  44b102:	cc 	int3
  44b103:	cc 	int3
  44b104:	cc 	int3
  44b105:	cc 	int3
  44b106:	cc 	int3
  44b107:	cc 	int3
  44b108:	cc 	int3
  44b109:	cc 	int3
  44b10a:	cc 	int3
  44b10b:	cc 	int3
  44b10c:	cc 	int3
  44b10d:	cc 	int3
  44b10e:	cc 	int3
  44b10f:	cc 	int3

type..hash.[251]struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }:
  44b110:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44b119:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44b11d:	76 5a 	jbe	90 <type..hash.[251]struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }+0x69>
  44b11f:	48 83 ec 28 	subq	$40, %rsp
  44b123:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44b128:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44b12d:	31 c0 	xorl	%eax, %eax
  44b12f:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44b134:	eb 2c 	jmp	44 <type..hash.[251]struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }+0x52>
  44b136:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  44b13b:	48 c1 e0 06 	shlq	$6, %rax
  44b13f:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  44b144:	48 01 d8 	addq	%rbx, %rax
  44b147:	48 89 04 24 	movq	%rax, (%rsp)
  44b14b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44b150:	e8 9b fe ff ff 	callq	-357 <type..hash.struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }>
  44b155:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  44b15a:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44b15f:	48 ff c0 	incq	%rax
  44b162:	48 3d fb 00 00 00 	cmpq	$251, %rax
  44b168:	7c cc 	jl	-52 <type..hash.[251]struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }+0x26>
  44b16a:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  44b16f:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44b174:	48 83 c4 28 	addq	$40, %rsp
  44b178:	c3 	retq
  44b179:	e8 f2 93 ff ff 	callq	-27662 <runtime.morestack_noctxt>
  44b17e:	eb 90 	jmp	-112 <type..hash.[251]struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }>

type..eq.[251]struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }:
  44b180:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44b189:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44b18d:	0f 86 a9 00 00 00 	jbe	169 <type..eq.[251]struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }+0xbc>
  44b193:	48 83 ec 30 	subq	$48, %rsp
  44b197:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  44b19c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  44b1a1:	31 c0 	xorl	%eax, %eax
  44b1a3:	eb 09 	jmp	9 <type..eq.[251]struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }+0x2e>
  44b1a5:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  44b1aa:	48 8d 41 01 	leaq	1(%rcx), %rax
  44b1ae:	48 3d fb 00 00 00 	cmpq	$251, %rax
  44b1b4:	7d 77 	jge	119 <type..eq.[251]struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }+0xad>
  44b1b6:	48 89 c1 	movq	%rax, %rcx
  44b1b9:	48 c1 e0 06 	shlq	$6, %rax
  44b1bd:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  44b1c2:	48 8b 1c 10 	movq	(%rax,%rdx), %rbx
  44b1c6:	48 8b 74 24 40 	movq	64(%rsp), %rsi
  44b1cb:	48 8b 3c 30 	movq	(%rax,%rsi), %rdi
  44b1cf:	48 39 fb 	cmpq	%rdi, %rbx
  44b1d2:	75 4a 	jne	74 <type..eq.[251]struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }+0x9e>
  44b1d4:	48 8b 5c 10 08 	movq	8(%rax,%rdx), %rbx
  44b1d9:	48 8b 7c 30 08 	movq	8(%rax,%rsi), %rdi
  44b1de:	48 39 fb 	cmpq	%rdi, %rbx
  44b1e1:	75 3b 	jne	59 <type..eq.[251]struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }+0x9e>
  44b1e3:	8b 5c 10 10 	movl	16(%rax,%rdx), %ebx
  44b1e7:	8b 7c 30 10 	movl	16(%rax,%rsi), %edi
  44b1eb:	39 fb 	cmpl	%edi, %ebx
  44b1ed:	75 2f 	jne	47 <type..eq.[251]struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }+0x9e>
  44b1ef:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  44b1f4:	48 8d 4c 10 18 	leaq	24(%rax,%rdx), %rcx
  44b1f9:	48 89 0c 24 	movq	%rcx, (%rsp)
  44b1fd:	48 8d 44 30 18 	leaq	24(%rax,%rsi), %rax
  44b202:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44b207:	48 c7 44 24 10 28 00 00 00 	movq	$40, 16(%rsp)
  44b210:	e8 2b b1 ff ff 	callq	-20181 <runtime.memequal>
  44b215:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44b21a:	84 c0 	testb	%al, %al
  44b21c:	75 87 	jne	-121 <type..eq.[251]struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }+0x25>
  44b21e:	c6 44 24 48 00 	movb	$0, 72(%rsp)
  44b223:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  44b228:	48 83 c4 30 	addq	$48, %rsp
  44b22c:	c3 	retq
  44b22d:	c6 44 24 48 01 	movb	$1, 72(%rsp)
  44b232:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  44b237:	48 83 c4 30 	addq	$48, %rsp
  44b23b:	c3 	retq
  44b23c:	e8 2f 93 ff ff 	callq	-27857 <runtime.morestack_noctxt>
  44b241:	e9 3a ff ff ff 	jmp	-198 <type..eq.[251]struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }>
  44b246:	cc 	int3
  44b247:	cc 	int3
  44b248:	cc 	int3
  44b249:	cc 	int3
  44b24a:	cc 	int3
  44b24b:	cc 	int3
  44b24c:	cc 	int3
  44b24d:	cc 	int3
  44b24e:	cc 	int3
  44b24f:	cc 	int3

type..hash.[2]string:
  44b250:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44b259:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44b25d:	76 58 	jbe	88 <type..hash.[2]string+0x67>
  44b25f:	48 83 ec 28 	subq	$40, %rsp
  44b263:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44b268:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44b26d:	31 c0 	xorl	%eax, %eax
  44b26f:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44b274:	eb 2c 	jmp	44 <type..hash.[2]string+0x52>
  44b276:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  44b27b:	48 c1 e0 04 	shlq	$4, %rax
  44b27f:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  44b284:	48 01 d8 	addq	%rbx, %rax
  44b287:	48 89 04 24 	movq	%rax, (%rsp)
  44b28b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44b290:	e8 eb 5e fb ff 	callq	-303381 <runtime.strhash>
  44b295:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  44b29a:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44b29f:	48 ff c0 	incq	%rax
  44b2a2:	48 83 f8 02 	cmpq	$2, %rax
  44b2a6:	7c ce 	jl	-50 <type..hash.[2]string+0x26>
  44b2a8:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  44b2ad:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44b2b2:	48 83 c4 28 	addq	$40, %rsp
  44b2b6:	c3 	retq
  44b2b7:	e8 b4 92 ff ff 	callq	-27980 <runtime.morestack_noctxt>
  44b2bc:	eb 92 	jmp	-110 <type..hash.[2]string>
  44b2be:	cc 	int3
  44b2bf:	cc 	int3

type..eq.[2]string:
  44b2c0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44b2c9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44b2cd:	0f 86 88 00 00 00 	jbe	136 <type..eq.[2]string+0x9b>
  44b2d3:	48 83 ec 30 	subq	$48, %rsp
  44b2d7:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  44b2dc:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  44b2e1:	31 c0 	xorl	%eax, %eax
  44b2e3:	eb 09 	jmp	9 <type..eq.[2]string+0x2e>
  44b2e5:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  44b2ea:	48 8d 41 01 	leaq	1(%rcx), %rax
  44b2ee:	48 83 f8 02 	cmpq	$2, %rax
  44b2f2:	7d 58 	jge	88 <type..eq.[2]string+0x8c>
  44b2f4:	48 89 c1 	movq	%rax, %rcx
  44b2f7:	48 c1 e0 04 	shlq	$4, %rax
  44b2fb:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  44b300:	48 8b 5c 10 08 	movq	8(%rax,%rdx), %rbx
  44b305:	48 8b 34 10 	movq	(%rax,%rdx), %rsi
  44b309:	48 8b 7c 24 38 	movq	56(%rsp), %rdi
  44b30e:	4c 8b 04 38 	movq	(%rax,%rdi), %r8
  44b312:	48 8b 44 38 08 	movq	8(%rax,%rdi), %rax
  44b317:	48 39 d8 	cmpq	%rbx, %rax
  44b31a:	75 21 	jne	33 <type..eq.[2]string+0x7d>
  44b31c:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  44b321:	4c 89 04 24 	movq	%r8, (%rsp)
  44b325:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  44b32a:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  44b32f:	e8 0c b0 ff ff 	callq	-20468 <runtime.memequal>
  44b334:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44b339:	84 c0 	testb	%al, %al
  44b33b:	75 a8 	jne	-88 <type..eq.[2]string+0x25>
  44b33d:	c6 44 24 48 00 	movb	$0, 72(%rsp)
  44b342:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  44b347:	48 83 c4 30 	addq	$48, %rsp
  44b34b:	c3 	retq
  44b34c:	c6 44 24 48 01 	movb	$1, 72(%rsp)
  44b351:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  44b356:	48 83 c4 30 	addq	$48, %rsp
  44b35a:	c3 	retq
  44b35b:	e8 10 92 ff ff 	callq	-28144 <runtime.morestack_noctxt>
  44b360:	e9 5b ff ff ff 	jmp	-165 <type..eq.[2]string>
  44b365:	cc 	int3
  44b366:	cc 	int3
  44b367:	cc 	int3
  44b368:	cc 	int3
  44b369:	cc 	int3
  44b36a:	cc 	int3
  44b36b:	cc 	int3
  44b36c:	cc 	int3
  44b36d:	cc 	int3
  44b36e:	cc 	int3
  44b36f:	cc 	int3

type..hash.[33]float64:
  44b370:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44b379:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44b37d:	76 55 	jbe	85 <type..hash.[33]float64+0x64>
  44b37f:	48 83 ec 28 	subq	$40, %rsp
  44b383:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44b388:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44b38d:	31 c0 	xorl	%eax, %eax
  44b38f:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44b394:	eb 29 	jmp	41 <type..hash.[33]float64+0x4f>
  44b396:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  44b39b:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  44b3a0:	48 8d 1c c2 	leaq	(%rdx,%rax,8), %rbx
  44b3a4:	48 89 1c 24 	movq	%rbx, (%rsp)
  44b3a8:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44b3ad:	e8 4e 5f fb ff 	callq	-303282 <runtime.f64hash>
  44b3b2:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  44b3b7:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44b3bc:	48 ff c0 	incq	%rax
  44b3bf:	48 83 f8 21 	cmpq	$33, %rax
  44b3c3:	7c d1 	jl	-47 <type..hash.[33]float64+0x26>
  44b3c5:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  44b3ca:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44b3cf:	48 83 c4 28 	addq	$40, %rsp
  44b3d3:	c3 	retq
  44b3d4:	e8 97 91 ff ff 	callq	-28265 <runtime.morestack_noctxt>
  44b3d9:	eb 95 	jmp	-107 <type..hash.[33]float64>
  44b3db:	cc 	int3
  44b3dc:	cc 	int3
  44b3dd:	cc 	int3
  44b3de:	cc 	int3
  44b3df:	cc 	int3

type..eq.[33]float64:
  44b3e0:	48 8b 44 24 08 	movq	8(%rsp), %rax
  44b3e5:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  44b3ea:	31 d2 	xorl	%edx, %edx
  44b3ec:	eb 03 	jmp	3 <type..eq.[33]float64+0x11>
  44b3ee:	48 ff c2 	incq	%rdx
  44b3f1:	48 83 fa 21 	cmpq	$33, %rdx
  44b3f5:	7d 18 	jge	24 <type..eq.[33]float64+0x2f>
  44b3f7:	f2 0f 10 04 d0 	movsd	(%rax,%rdx,8), %xmm0
  44b3fc:	f2 0f 10 0c d1 	movsd	(%rcx,%rdx,8), %xmm1
  44b401:	66 0f 2e c1 	ucomisd	%xmm1, %xmm0
  44b405:	75 02 	jne	2 <type..eq.[33]float64+0x29>
  44b407:	7b e5 	jnp	-27 <type..eq.[33]float64+0xe>
  44b409:	c6 44 24 18 00 	movb	$0, 24(%rsp)
  44b40e:	c3 	retq
  44b40f:	c6 44 24 18 01 	movb	$1, 24(%rsp)
  44b414:	c3 	retq
  44b415:	cc 	int3
  44b416:	cc 	int3
  44b417:	cc 	int3
  44b418:	cc 	int3
  44b419:	cc 	int3
  44b41a:	cc 	int3
  44b41b:	cc 	int3
  44b41c:	cc 	int3
  44b41d:	cc 	int3
  44b41e:	cc 	int3
  44b41f:	cc 	int3

type..hash.[3]runtime.symbol_key:
  44b420:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44b429:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44b42d:	76 58 	jbe	88 <type..hash.[3]runtime.symbol_key+0x67>
  44b42f:	48 83 ec 28 	subq	$40, %rsp
  44b433:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44b438:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44b43d:	31 c0 	xorl	%eax, %eax
  44b43f:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44b444:	eb 2c 	jmp	44 <type..hash.[3]runtime.symbol_key+0x52>
  44b446:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  44b44b:	48 c1 e0 05 	shlq	$5, %rax
  44b44f:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  44b454:	48 01 d8 	addq	%rbx, %rax
  44b457:	48 89 04 24 	movq	%rax, (%rsp)
  44b45b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44b460:	e8 eb f5 ff ff 	callq	-2581 <type..hash.runtime.symbol_key>
  44b465:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  44b46a:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44b46f:	48 ff c0 	incq	%rax
  44b472:	48 83 f8 03 	cmpq	$3, %rax
  44b476:	7c ce 	jl	-50 <type..hash.[3]runtime.symbol_key+0x26>
  44b478:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  44b47d:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44b482:	48 83 c4 28 	addq	$40, %rsp
  44b486:	c3 	retq
  44b487:	e8 e4 90 ff ff 	callq	-28444 <runtime.morestack_noctxt>
  44b48c:	eb 92 	jmp	-110 <type..hash.[3]runtime.symbol_key>
  44b48e:	cc 	int3
  44b48f:	cc 	int3

type..eq.[3]runtime.symbol_key:
  44b490:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44b499:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44b49d:	0f 86 cd 00 00 00 	jbe	205 <type..eq.[3]runtime.symbol_key+0xe0>
  44b4a3:	48 83 ec 38 	subq	$56, %rsp
  44b4a7:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  44b4ac:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  44b4b1:	31 c0 	xorl	%eax, %eax
  44b4b3:	eb 0b 	jmp	11 <type..eq.[3]runtime.symbol_key+0x30>
  44b4b5:	48 8b 4c 24 28 	movq	40(%rsp), %rcx
  44b4ba:	48 ff c1 	incq	%rcx
  44b4bd:	48 89 c8 	movq	%rcx, %rax
  44b4c0:	48 83 f8 03 	cmpq	$3, %rax
  44b4c4:	0f 8d 97 00 00 00 	jge	151 <type..eq.[3]runtime.symbol_key+0xd1>
  44b4ca:	48 89 c1 	movq	%rax, %rcx
  44b4cd:	48 c1 e0 05 	shlq	$5, %rax
  44b4d1:	48 8b 54 24 48 	movq	72(%rsp), %rdx
  44b4d6:	48 8b 5c 10 08 	movq	8(%rax,%rdx), %rbx
  44b4db:	48 8b 34 10 	movq	(%rax,%rdx), %rsi
  44b4df:	48 8b 7c 24 40 	movq	64(%rsp), %rdi
  44b4e4:	4c 8b 44 38 08 	movq	8(%rax,%rdi), %r8
  44b4e9:	4c 8b 0c 38 	movq	(%rax,%rdi), %r9
  44b4ed:	49 39 d8 	cmpq	%rbx, %r8
  44b4f0:	75 60 	jne	96 <type..eq.[3]runtime.symbol_key+0xc2>
  44b4f2:	48 89 4c 24 28 	movq	%rcx, 40(%rsp)
  44b4f7:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  44b4fc:	4c 89 0c 24 	movq	%r9, (%rsp)
  44b500:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  44b505:	4c 89 44 24 10 	movq	%r8, 16(%rsp)
  44b50a:	e8 31 ae ff ff 	callq	-20943 <runtime.memequal>
  44b50f:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44b514:	84 c0 	testb	%al, %al
  44b516:	74 3a 	je	58 <type..eq.[3]runtime.symbol_key+0xc2>
  44b518:	48 8b 44 24 40 	movq	64(%rsp), %rax
  44b51d:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  44b522:	8b 54 01 10 	movl	16(%rcx,%rax), %edx
  44b526:	48 8b 5c 24 48 	movq	72(%rsp), %rbx
  44b52b:	8b 74 19 10 	movl	16(%rcx,%rbx), %esi
  44b52f:	39 d6 	cmpl	%edx, %esi
  44b531:	75 1f 	jne	31 <type..eq.[3]runtime.symbol_key+0xc2>
  44b533:	8b 54 01 14 	movl	20(%rcx,%rax), %edx
  44b537:	8b 74 19 14 	movl	20(%rcx,%rbx), %esi
  44b53b:	39 f2 	cmpl	%esi, %edx
  44b53d:	75 13 	jne	19 <type..eq.[3]runtime.symbol_key+0xc2>
  44b53f:	48 8b 54 01 18 	movq	24(%rcx,%rax), %rdx
  44b544:	48 8b 4c 19 18 	movq	24(%rcx,%rbx), %rcx
  44b549:	48 39 ca 	cmpq	%rcx, %rdx
  44b54c:	0f 84 63 ff ff ff 	je	-157 <type..eq.[3]runtime.symbol_key+0x25>
  44b552:	c6 44 24 50 00 	movb	$0, 80(%rsp)
  44b557:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  44b55c:	48 83 c4 38 	addq	$56, %rsp
  44b560:	c3 	retq
  44b561:	c6 44 24 50 01 	movb	$1, 80(%rsp)
  44b566:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  44b56b:	48 83 c4 38 	addq	$56, %rsp
  44b56f:	c3 	retq
  44b570:	e8 fb 8f ff ff 	callq	-28677 <runtime.morestack_noctxt>
  44b575:	e9 16 ff ff ff 	jmp	-234 <type..eq.[3]runtime.symbol_key>
  44b57a:	cc 	int3
  44b57b:	cc 	int3
  44b57c:	cc 	int3
  44b57d:	cc 	int3
  44b57e:	cc 	int3
  44b57f:	cc 	int3

type..hash.[4]string:
  44b580:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44b589:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44b58d:	76 58 	jbe	88 <type..hash.[4]string+0x67>
  44b58f:	48 83 ec 28 	subq	$40, %rsp
  44b593:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44b598:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44b59d:	31 c0 	xorl	%eax, %eax
  44b59f:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44b5a4:	eb 2c 	jmp	44 <type..hash.[4]string+0x52>
  44b5a6:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  44b5ab:	48 c1 e0 04 	shlq	$4, %rax
  44b5af:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  44b5b4:	48 01 d8 	addq	%rbx, %rax
  44b5b7:	48 89 04 24 	movq	%rax, (%rsp)
  44b5bb:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44b5c0:	e8 bb 5b fb ff 	callq	-304197 <runtime.strhash>
  44b5c5:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  44b5ca:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44b5cf:	48 ff c0 	incq	%rax
  44b5d2:	48 83 f8 04 	cmpq	$4, %rax
  44b5d6:	7c ce 	jl	-50 <type..hash.[4]string+0x26>
  44b5d8:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  44b5dd:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44b5e2:	48 83 c4 28 	addq	$40, %rsp
  44b5e6:	c3 	retq
  44b5e7:	e8 84 8f ff ff 	callq	-28796 <runtime.morestack_noctxt>
  44b5ec:	eb 92 	jmp	-110 <type..hash.[4]string>
  44b5ee:	cc 	int3
  44b5ef:	cc 	int3

type..eq.[4]string:
  44b5f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44b5f9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44b5fd:	0f 86 88 00 00 00 	jbe	136 <type..eq.[4]string+0x9b>
  44b603:	48 83 ec 30 	subq	$48, %rsp
  44b607:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  44b60c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  44b611:	31 c0 	xorl	%eax, %eax
  44b613:	eb 09 	jmp	9 <type..eq.[4]string+0x2e>
  44b615:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  44b61a:	48 8d 41 01 	leaq	1(%rcx), %rax
  44b61e:	48 83 f8 04 	cmpq	$4, %rax
  44b622:	7d 58 	jge	88 <type..eq.[4]string+0x8c>
  44b624:	48 89 c1 	movq	%rax, %rcx
  44b627:	48 c1 e0 04 	shlq	$4, %rax
  44b62b:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  44b630:	48 8b 5c 10 08 	movq	8(%rax,%rdx), %rbx
  44b635:	48 8b 34 10 	movq	(%rax,%rdx), %rsi
  44b639:	48 8b 7c 24 38 	movq	56(%rsp), %rdi
  44b63e:	4c 8b 04 38 	movq	(%rax,%rdi), %r8
  44b642:	48 8b 44 38 08 	movq	8(%rax,%rdi), %rax
  44b647:	48 39 d8 	cmpq	%rbx, %rax
  44b64a:	75 21 	jne	33 <type..eq.[4]string+0x7d>
  44b64c:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  44b651:	4c 89 04 24 	movq	%r8, (%rsp)
  44b655:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  44b65a:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  44b65f:	e8 dc ac ff ff 	callq	-21284 <runtime.memequal>
  44b664:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44b669:	84 c0 	testb	%al, %al
  44b66b:	75 a8 	jne	-88 <type..eq.[4]string+0x25>
  44b66d:	c6 44 24 48 00 	movb	$0, 72(%rsp)
  44b672:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  44b677:	48 83 c4 30 	addq	$48, %rsp
  44b67b:	c3 	retq
  44b67c:	c6 44 24 48 01 	movb	$1, 72(%rsp)
  44b681:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  44b686:	48 83 c4 30 	addq	$48, %rsp
  44b68a:	c3 	retq
  44b68b:	e8 e0 8e ff ff 	callq	-28960 <runtime.morestack_noctxt>
  44b690:	e9 5b ff ff ff 	jmp	-165 <type..eq.[4]string>
  44b695:	cc 	int3
  44b696:	cc 	int3
  44b697:	cc 	int3
  44b698:	cc 	int3
  44b699:	cc 	int3
  44b69a:	cc 	int3
  44b69b:	cc 	int3
  44b69c:	cc 	int3
  44b69d:	cc 	int3
  44b69e:	cc 	int3
  44b69f:	cc 	int3

type..hash.[65]runtime.sigTabT:
  44b6a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44b6a9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44b6ad:	76 59 	jbe	89 <type..hash.[65]runtime.sigTabT+0x68>
  44b6af:	48 83 ec 28 	subq	$40, %rsp
  44b6b3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44b6b8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44b6bd:	31 c0 	xorl	%eax, %eax
  44b6bf:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44b6c4:	eb 2d 	jmp	45 <type..hash.[65]runtime.sigTabT+0x53>
  44b6c6:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  44b6cb:	48 8d 14 40 	leaq	(%rax,%rax,2), %rdx
  44b6cf:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  44b6d4:	48 8d 14 d3 	leaq	(%rbx,%rdx,8), %rdx
  44b6d8:	48 89 14 24 	movq	%rdx, (%rsp)
  44b6dc:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44b6e1:	e8 9a ef ff ff 	callq	-4198 <type..hash.runtime.sigTabT>
  44b6e6:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  44b6eb:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44b6f0:	48 ff c0 	incq	%rax
  44b6f3:	48 83 f8 41 	cmpq	$65, %rax
  44b6f7:	7c cd 	jl	-51 <type..hash.[65]runtime.sigTabT+0x26>
  44b6f9:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  44b6fe:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44b703:	48 83 c4 28 	addq	$40, %rsp
  44b707:	c3 	retq
  44b708:	e8 63 8e ff ff 	callq	-29085 <runtime.morestack_noctxt>
  44b70d:	eb 91 	jmp	-111 <type..hash.[65]runtime.sigTabT>
  44b70f:	cc 	int3

type..eq.[65]runtime.sigTabT:
  44b710:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44b719:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44b71d:	0f 86 91 00 00 00 	jbe	145 <type..eq.[65]runtime.sigTabT+0xa4>
  44b723:	48 83 ec 30 	subq	$48, %rsp
  44b727:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  44b72c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  44b731:	31 c0 	xorl	%eax, %eax
  44b733:	eb 09 	jmp	9 <type..eq.[65]runtime.sigTabT+0x2e>
  44b735:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  44b73a:	48 8d 41 01 	leaq	1(%rcx), %rax
  44b73e:	48 83 f8 41 	cmpq	$65, %rax
  44b742:	7d 61 	jge	97 <type..eq.[65]runtime.sigTabT+0x95>
  44b744:	48 8d 0c 40 	leaq	(%rax,%rax,2), %rcx
  44b748:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  44b74d:	8b 1c ca 	movl	(%rdx,%rcx,8), %ebx
  44b750:	48 8b 74 24 38 	movq	56(%rsp), %rsi
  44b755:	8b 3c ce 	movl	(%rsi,%rcx,8), %edi
  44b758:	39 df 	cmpl	%ebx, %edi
  44b75a:	75 3a 	jne	58 <type..eq.[65]runtime.sigTabT+0x86>
  44b75c:	48 8b 5c ce 08 	movq	8(%rsi,%rcx,8), %rbx
  44b761:	48 8b 7c ce 10 	movq	16(%rsi,%rcx,8), %rdi
  44b766:	4c 8b 44 ca 08 	movq	8(%rdx,%rcx,8), %r8
  44b76b:	48 8b 4c ca 10 	movq	16(%rdx,%rcx,8), %rcx
  44b770:	48 39 cf 	cmpq	%rcx, %rdi
  44b773:	75 21 	jne	33 <type..eq.[65]runtime.sigTabT+0x86>
  44b775:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  44b77a:	48 89 1c 24 	movq	%rbx, (%rsp)
  44b77e:	4c 89 44 24 08 	movq	%r8, 8(%rsp)
  44b783:	48 89 7c 24 10 	movq	%rdi, 16(%rsp)
  44b788:	e8 b3 ab ff ff 	callq	-21581 <runtime.memequal>
  44b78d:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44b792:	84 c0 	testb	%al, %al
  44b794:	75 9f 	jne	-97 <type..eq.[65]runtime.sigTabT+0x25>
  44b796:	c6 44 24 48 00 	movb	$0, 72(%rsp)
  44b79b:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  44b7a0:	48 83 c4 30 	addq	$48, %rsp
  44b7a4:	c3 	retq
  44b7a5:	c6 44 24 48 01 	movb	$1, 72(%rsp)
  44b7aa:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  44b7af:	48 83 c4 30 	addq	$48, %rsp
  44b7b3:	c3 	retq
  44b7b4:	e8 b7 8d ff ff 	callq	-29257 <runtime.morestack_noctxt>
  44b7b9:	e9 52 ff ff ff 	jmp	-174 <type..eq.[65]runtime.sigTabT>
  44b7be:	cc 	int3
  44b7bf:	cc 	int3

type..hash.[6]string:
  44b7c0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44b7c9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44b7cd:	76 58 	jbe	88 <type..hash.[6]string+0x67>
  44b7cf:	48 83 ec 28 	subq	$40, %rsp
  44b7d3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44b7d8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44b7dd:	31 c0 	xorl	%eax, %eax
  44b7df:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44b7e4:	eb 2c 	jmp	44 <type..hash.[6]string+0x52>
  44b7e6:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  44b7eb:	48 c1 e0 04 	shlq	$4, %rax
  44b7ef:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  44b7f4:	48 01 d8 	addq	%rbx, %rax
  44b7f7:	48 89 04 24 	movq	%rax, (%rsp)
  44b7fb:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44b800:	e8 7b 59 fb ff 	callq	-304773 <runtime.strhash>
  44b805:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  44b80a:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44b80f:	48 ff c0 	incq	%rax
  44b812:	48 83 f8 06 	cmpq	$6, %rax
  44b816:	7c ce 	jl	-50 <type..hash.[6]string+0x26>
  44b818:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  44b81d:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44b822:	48 83 c4 28 	addq	$40, %rsp
  44b826:	c3 	retq
  44b827:	e8 44 8d ff ff 	callq	-29372 <runtime.morestack_noctxt>
  44b82c:	eb 92 	jmp	-110 <type..hash.[6]string>
  44b82e:	cc 	int3
  44b82f:	cc 	int3

type..eq.[6]string:
  44b830:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44b839:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44b83d:	0f 86 88 00 00 00 	jbe	136 <type..eq.[6]string+0x9b>
  44b843:	48 83 ec 30 	subq	$48, %rsp
  44b847:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  44b84c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  44b851:	31 c0 	xorl	%eax, %eax
  44b853:	eb 09 	jmp	9 <type..eq.[6]string+0x2e>
  44b855:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  44b85a:	48 8d 41 01 	leaq	1(%rcx), %rax
  44b85e:	48 83 f8 06 	cmpq	$6, %rax
  44b862:	7d 58 	jge	88 <type..eq.[6]string+0x8c>
  44b864:	48 89 c1 	movq	%rax, %rcx
  44b867:	48 c1 e0 04 	shlq	$4, %rax
  44b86b:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  44b870:	48 8b 5c 10 08 	movq	8(%rax,%rdx), %rbx
  44b875:	48 8b 34 10 	movq	(%rax,%rdx), %rsi
  44b879:	48 8b 7c 24 38 	movq	56(%rsp), %rdi
  44b87e:	4c 8b 04 38 	movq	(%rax,%rdi), %r8
  44b882:	48 8b 44 38 08 	movq	8(%rax,%rdi), %rax
  44b887:	48 39 d8 	cmpq	%rbx, %rax
  44b88a:	75 21 	jne	33 <type..eq.[6]string+0x7d>
  44b88c:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  44b891:	4c 89 04 24 	movq	%r8, (%rsp)
  44b895:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  44b89a:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  44b89f:	e8 9c aa ff ff 	callq	-21860 <runtime.memequal>
  44b8a4:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44b8a9:	84 c0 	testb	%al, %al
  44b8ab:	75 a8 	jne	-88 <type..eq.[6]string+0x25>
  44b8ad:	c6 44 24 48 00 	movb	$0, 72(%rsp)
  44b8b2:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  44b8b7:	48 83 c4 30 	addq	$48, %rsp
  44b8bb:	c3 	retq
  44b8bc:	c6 44 24 48 01 	movb	$1, 72(%rsp)
  44b8c1:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  44b8c6:	48 83 c4 30 	addq	$48, %rsp
  44b8ca:	c3 	retq
  44b8cb:	e8 a0 8c ff ff 	callq	-29536 <runtime.morestack_noctxt>
  44b8d0:	e9 5b ff ff ff 	jmp	-165 <type..eq.[6]string>
  44b8d5:	cc 	int3
  44b8d6:	cc 	int3
  44b8d7:	cc 	int3
  44b8d8:	cc 	int3
  44b8d9:	cc 	int3
  44b8da:	cc 	int3
  44b8db:	cc 	int3
  44b8dc:	cc 	int3
  44b8dd:	cc 	int3
  44b8de:	cc 	int3
  44b8df:	cc 	int3

type..hash.[9]string:
  44b8e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44b8e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44b8ed:	76 58 	jbe	88 <type..hash.[9]string+0x67>
  44b8ef:	48 83 ec 28 	subq	$40, %rsp
  44b8f3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44b8f8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44b8fd:	31 c0 	xorl	%eax, %eax
  44b8ff:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44b904:	eb 2c 	jmp	44 <type..hash.[9]string+0x52>
  44b906:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  44b90b:	48 c1 e0 04 	shlq	$4, %rax
  44b90f:	48 8b 5c 24 30 	movq	48(%rsp), %rbx
  44b914:	48 01 d8 	addq	%rbx, %rax
  44b917:	48 89 04 24 	movq	%rax, (%rsp)
  44b91b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44b920:	e8 5b 58 fb ff 	callq	-305061 <runtime.strhash>
  44b925:	48 8b 4c 24 10 	movq	16(%rsp), %rcx
  44b92a:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44b92f:	48 ff c0 	incq	%rax
  44b932:	48 83 f8 09 	cmpq	$9, %rax
  44b936:	7c ce 	jl	-50 <type..hash.[9]string+0x26>
  44b938:	48 89 4c 24 40 	movq	%rcx, 64(%rsp)
  44b93d:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44b942:	48 83 c4 28 	addq	$40, %rsp
  44b946:	c3 	retq
  44b947:	e8 24 8c ff ff 	callq	-29660 <runtime.morestack_noctxt>
  44b94c:	eb 92 	jmp	-110 <type..hash.[9]string>
  44b94e:	cc 	int3
  44b94f:	cc 	int3

type..eq.[9]string:
  44b950:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44b959:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44b95d:	0f 86 88 00 00 00 	jbe	136 <type..eq.[9]string+0x9b>
  44b963:	48 83 ec 30 	subq	$48, %rsp
  44b967:	48 89 6c 24 28 	movq	%rbp, 40(%rsp)
  44b96c:	48 8d 6c 24 28 	leaq	40(%rsp), %rbp
  44b971:	31 c0 	xorl	%eax, %eax
  44b973:	eb 09 	jmp	9 <type..eq.[9]string+0x2e>
  44b975:	48 8b 4c 24 20 	movq	32(%rsp), %rcx
  44b97a:	48 8d 41 01 	leaq	1(%rcx), %rax
  44b97e:	48 83 f8 09 	cmpq	$9, %rax
  44b982:	7d 58 	jge	88 <type..eq.[9]string+0x8c>
  44b984:	48 89 c1 	movq	%rax, %rcx
  44b987:	48 c1 e0 04 	shlq	$4, %rax
  44b98b:	48 8b 54 24 40 	movq	64(%rsp), %rdx
  44b990:	48 8b 5c 10 08 	movq	8(%rax,%rdx), %rbx
  44b995:	48 8b 34 10 	movq	(%rax,%rdx), %rsi
  44b999:	48 8b 7c 24 38 	movq	56(%rsp), %rdi
  44b99e:	4c 8b 04 38 	movq	(%rax,%rdi), %r8
  44b9a2:	48 8b 44 38 08 	movq	8(%rax,%rdi), %rax
  44b9a7:	48 39 d8 	cmpq	%rbx, %rax
  44b9aa:	75 21 	jne	33 <type..eq.[9]string+0x7d>
  44b9ac:	48 89 4c 24 20 	movq	%rcx, 32(%rsp)
  44b9b1:	4c 89 04 24 	movq	%r8, (%rsp)
  44b9b5:	48 89 74 24 08 	movq	%rsi, 8(%rsp)
  44b9ba:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  44b9bf:	e8 7c a9 ff ff 	callq	-22148 <runtime.memequal>
  44b9c4:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44b9c9:	84 c0 	testb	%al, %al
  44b9cb:	75 a8 	jne	-88 <type..eq.[9]string+0x25>
  44b9cd:	c6 44 24 48 00 	movb	$0, 72(%rsp)
  44b9d2:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  44b9d7:	48 83 c4 30 	addq	$48, %rsp
  44b9db:	c3 	retq
  44b9dc:	c6 44 24 48 01 	movb	$1, 72(%rsp)
  44b9e1:	48 8b 6c 24 28 	movq	40(%rsp), %rbp
  44b9e6:	48 83 c4 30 	addq	$48, %rsp
  44b9ea:	c3 	retq
  44b9eb:	e8 80 8b ff ff 	callq	-29824 <runtime.morestack_noctxt>
  44b9f0:	e9 5b ff ff ff 	jmp	-165 <type..eq.[9]string>
  44b9f5:	cc 	int3
  44b9f6:	cc 	int3
  44b9f7:	cc 	int3
  44b9f8:	cc 	int3
  44b9f9:	cc 	int3
  44b9fa:	cc 	int3
  44b9fb:	cc 	int3
  44b9fc:	cc 	int3
  44b9fd:	cc 	int3
  44b9fe:	cc 	int3
  44b9ff:	cc 	int3

type..hash.struct { runtime.cycle uint32; runtime.flushed bool }:
  44ba00:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44ba09:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44ba0d:	76 43 	jbe	67 <type..hash.struct { runtime.cycle uint32; runtime.flushed bool }+0x52>
  44ba0f:	48 83 ec 28 	subq	$40, %rsp
  44ba13:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44ba18:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44ba1d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44ba22:	48 89 04 24 	movq	%rax, (%rsp)
  44ba26:	48 8b 44 24 38 	movq	56(%rsp), %rax
  44ba2b:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44ba30:	48 c7 44 24 10 05 00 00 00 	movq	$5, 16(%rsp)
  44ba39:	e8 d2 a0 fb ff 	callq	-286510 <runtime.memhash>
  44ba3e:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44ba43:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  44ba48:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44ba4d:	48 83 c4 28 	addq	$40, %rsp
  44ba51:	c3 	retq
  44ba52:	e8 19 8b ff ff 	callq	-29927 <runtime.morestack_noctxt>
  44ba57:	eb a7 	jmp	-89 <type..hash.struct { runtime.cycle uint32; runtime.flushed bool }>
  44ba59:	cc 	int3
  44ba5a:	cc 	int3
  44ba5b:	cc 	int3
  44ba5c:	cc 	int3
  44ba5d:	cc 	int3
  44ba5e:	cc 	int3
  44ba5f:	cc 	int3

type..eq.struct { runtime.cycle uint32; runtime.flushed bool }:
  44ba60:	48 8b 44 24 08 	movq	8(%rsp), %rax
  44ba65:	8b 08 	movl	(%rax), %ecx
  44ba67:	48 8b 54 24 10 	movq	16(%rsp), %rdx
  44ba6c:	8b 1a 	movl	(%rdx), %ebx
  44ba6e:	39 d9 	cmpl	%ebx, %ecx
  44ba70:	75 12 	jne	18 <type..eq.struct { runtime.cycle uint32; runtime.flushed bool }+0x24>
  44ba72:	0f b6 40 04 	movzbl	4(%rax), %eax
  44ba76:	0f b6 4a 04 	movzbl	4(%rdx), %ecx
  44ba7a:	38 c8 	cmpb	%cl, %al
  44ba7c:	0f 94 c0 	sete	%al
  44ba7f:	88 44 24 18 	movb	%al, 24(%rsp)
  44ba83:	c3 	retq
  44ba84:	31 c0 	xorl	%eax, %eax
  44ba86:	eb f7 	jmp	-9 <type..eq.struct { runtime.cycle uint32; runtime.flushed bool }+0x1f>
  44ba88:	cc 	int3
  44ba89:	cc 	int3
  44ba8a:	cc 	int3
  44ba8b:	cc 	int3
  44ba8c:	cc 	int3
  44ba8d:	cc 	int3
  44ba8e:	cc 	int3
  44ba8f:	cc 	int3

type..hash.struct { runtime.enabled bool; runtime.pad [3]uint8; runtime.needed bool; runtime.cgo bool; runtime.alignme uint64 }:
  44ba90:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44ba99:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44ba9d:	76 68 	jbe	104 <type..hash.struct { runtime.enabled bool; runtime.pad [3]uint8; runtime.needed bool; runtime.cgo bool; runtime.alignme uint64 }+0x77>
  44ba9f:	48 83 ec 28 	subq	$40, %rsp
  44baa3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44baa8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44baad:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44bab2:	48 89 04 24 	movq	%rax, (%rsp)
  44bab6:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44babb:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44bac0:	48 c7 44 24 10 06 00 00 00 	movq	$6, 16(%rsp)
  44bac9:	e8 42 a0 fb ff 	callq	-286654 <runtime.memhash>
  44bace:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44bad3:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44bad8:	48 83 c1 08 	addq	$8, %rcx
  44badc:	48 89 0c 24 	movq	%rcx, (%rsp)
  44bae0:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44bae5:	48 c7 44 24 10 08 00 00 00 	movq	$8, 16(%rsp)
  44baee:	e8 1d a0 fb ff 	callq	-286691 <runtime.memhash>
  44baf3:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44baf8:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  44bafd:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44bb02:	48 83 c4 28 	addq	$40, %rsp
  44bb06:	c3 	retq
  44bb07:	e8 64 8a ff ff 	callq	-30108 <runtime.morestack_noctxt>
  44bb0c:	eb 82 	jmp	-126 <type..hash.struct { runtime.enabled bool; runtime.pad [3]uint8; runtime.needed bool; runtime.cgo bool; runtime.alignme uint64 }>
  44bb0e:	cc 	int3
  44bb0f:	cc 	int3

type..eq.struct { runtime.enabled bool; runtime.pad [3]uint8; runtime.needed bool; runtime.cgo bool; runtime.alignme uint64 }:
  44bb10:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44bb19:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44bb1d:	76 62 	jbe	98 <type..eq.struct { runtime.enabled bool; runtime.pad [3]uint8; runtime.needed bool; runtime.cgo bool; runtime.alignme uint64 }+0x71>
  44bb1f:	48 83 ec 28 	subq	$40, %rsp
  44bb23:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44bb28:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44bb2d:	48 8b 44 24 38 	movq	56(%rsp), %rax
  44bb32:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44bb37:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44bb3c:	48 89 0c 24 	movq	%rcx, (%rsp)
  44bb40:	48 c7 44 24 10 06 00 00 00 	movq	$6, 16(%rsp)
  44bb49:	e8 f2 a7 ff ff 	callq	-22542 <runtime.memequal>
  44bb4e:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44bb53:	84 c0 	testb	%al, %al
  44bb55:	74 26 	je	38 <type..eq.struct { runtime.enabled bool; runtime.pad [3]uint8; runtime.needed bool; runtime.cgo bool; runtime.alignme uint64 }+0x6d>
  44bb57:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44bb5c:	48 8b 40 08 	movq	8(%rax), %rax
  44bb60:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44bb65:	48 8b 49 08 	movq	8(%rcx), %rcx
  44bb69:	48 39 c8 	cmpq	%rcx, %rax
  44bb6c:	0f 94 c0 	sete	%al
  44bb6f:	88 44 24 40 	movb	%al, 64(%rsp)
  44bb73:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44bb78:	48 83 c4 28 	addq	$40, %rsp
  44bb7c:	c3 	retq
  44bb7d:	31 c0 	xorl	%eax, %eax
  44bb7f:	eb ee 	jmp	-18 <type..eq.struct { runtime.enabled bool; runtime.pad [3]uint8; runtime.needed bool; runtime.cgo bool; runtime.alignme uint64 }+0x5f>
  44bb81:	e8 ea 89 ff ff 	callq	-30230 <runtime.morestack_noctxt>
  44bb86:	eb 88 	jmp	-120 <type..eq.struct { runtime.enabled bool; runtime.pad [3]uint8; runtime.needed bool; runtime.cgo bool; runtime.alignme uint64 }>
  44bb88:	cc 	int3
  44bb89:	cc 	int3
  44bb8a:	cc 	int3
  44bb8b:	cc 	int3
  44bb8c:	cc 	int3
  44bb8d:	cc 	int3
  44bb8e:	cc 	int3
  44bb8f:	cc 	int3

type..hash.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }:
  44bb90:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44bb99:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44bb9d:	0f 86 83 01 00 00 	jbe	387 <type..hash.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }+0x196>
  44bba3:	48 83 ec 28 	subq	$40, %rsp
  44bba7:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44bbac:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44bbb1:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44bbb6:	48 89 04 24 	movq	%rax, (%rsp)
  44bbba:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44bbbf:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44bbc4:	48 c7 44 24 10 78 00 00 00 	movq	$120, 16(%rsp)
  44bbcd:	e8 3e 9f fb ff 	callq	-286914 <runtime.memhash>
  44bbd2:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44bbd7:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44bbdc:	48 8d 91 80 00 00 00 	leaq	128(%rcx), %rdx
  44bbe3:	48 89 14 24 	movq	%rdx, (%rsp)
  44bbe7:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44bbec:	48 c7 44 24 10 14 00 00 00 	movq	$20, 16(%rsp)
  44bbf5:	e8 16 9f fb ff 	callq	-286954 <runtime.memhash>
  44bbfa:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44bbff:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44bc04:	48 8d 91 98 00 00 00 	leaq	152(%rcx), %rdx
  44bc0b:	48 89 14 24 	movq	%rdx, (%rsp)
  44bc0f:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44bc14:	48 c7 44 24 10 19 00 00 00 	movq	$25, 16(%rsp)
  44bc1d:	e8 ee 9e fb ff 	callq	-286994 <runtime.memhash>
  44bc22:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44bc27:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44bc2c:	48 8d 91 b8 00 00 00 	leaq	184(%rcx), %rdx
  44bc33:	48 89 14 24 	movq	%rdx, (%rsp)
  44bc37:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44bc3c:	48 c7 44 24 10 29 00 00 00 	movq	$41, 16(%rsp)
  44bc45:	e8 c6 9e fb ff 	callq	-287034 <runtime.memhash>
  44bc4a:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44bc4f:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44bc54:	48 8d 91 e4 00 00 00 	leaq	228(%rcx), %rdx
  44bc5b:	48 89 14 24 	movq	%rdx, (%rsp)
  44bc5f:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44bc64:	48 c7 44 24 10 08 00 00 00 	movq	$8, 16(%rsp)
  44bc6d:	e8 9e 9e fb ff 	callq	-287074 <runtime.memhash>
  44bc72:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44bc77:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44bc7c:	48 8d 91 f0 00 00 00 	leaq	240(%rcx), %rdx
  44bc83:	48 89 14 24 	movq	%rdx, (%rsp)
  44bc87:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44bc8c:	48 c7 44 24 10 0c 00 00 00 	movq	$12, 16(%rsp)
  44bc95:	e8 76 9e fb ff 	callq	-287114 <runtime.memhash>
  44bc9a:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44bc9f:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44bca4:	48 8d 91 00 01 00 00 	leaq	256(%rcx), %rdx
  44bcab:	48 89 14 24 	movq	%rdx, (%rsp)
  44bcaf:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44bcb4:	48 c7 44 24 10 09 00 00 00 	movq	$9, 16(%rsp)
  44bcbd:	e8 4e 9e fb ff 	callq	-287154 <runtime.memhash>
  44bcc2:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44bcc7:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44bccc:	48 8d 91 10 01 00 00 	leaq	272(%rcx), %rdx
  44bcd3:	48 89 14 24 	movq	%rdx, (%rsp)
  44bcd7:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44bcdc:	48 c7 44 24 10 44 00 00 00 	movq	$68, 16(%rsp)
  44bce5:	e8 26 9e fb ff 	callq	-287194 <runtime.memhash>
  44bcea:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44bcef:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44bcf4:	48 81 c1 58 01 00 00 	addq	$344, %rcx
  44bcfb:	48 89 0c 24 	movq	%rcx, (%rsp)
  44bcff:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44bd04:	48 c7 44 24 10 50 00 00 00 	movq	$80, 16(%rsp)
  44bd0d:	e8 fe 9d fb ff 	callq	-287234 <runtime.memhash>
  44bd12:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44bd17:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  44bd1c:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44bd21:	48 83 c4 28 	addq	$40, %rsp
  44bd25:	c3 	retq
  44bd26:	e8 45 88 ff ff 	callq	-30651 <runtime.morestack_noctxt>
  44bd2b:	e9 60 fe ff ff 	jmp	-416 <type..hash.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }>

type..eq.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }:
  44bd30:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44bd39:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44bd3d:	0f 86 30 02 00 00 	jbe	560 <type..eq.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }+0x243>
  44bd43:	48 83 ec 28 	subq	$40, %rsp
  44bd47:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44bd4c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44bd51:	48 8b 44 24 38 	movq	56(%rsp), %rax
  44bd56:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44bd5b:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44bd60:	48 89 0c 24 	movq	%rcx, (%rsp)
  44bd64:	48 c7 44 24 10 78 00 00 00 	movq	$120, 16(%rsp)
  44bd6d:	e8 ce a5 ff ff 	callq	-23090 <runtime.memequal>
  44bd72:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44bd77:	84 c0 	testb	%al, %al
  44bd79:	0f 85 bb 01 00 00 	jne	443 <type..eq.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }+0x20a>
  44bd7f:	31 c0 	xorl	%eax, %eax
  44bd81:	84 c0 	testb	%al, %al
  44bd83:	0f 85 78 01 00 00 	jne	376 <type..eq.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }+0x1d1>
  44bd89:	31 c0 	xorl	%eax, %eax
  44bd8b:	84 c0 	testb	%al, %al
  44bd8d:	0f 85 35 01 00 00 	jne	309 <type..eq.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }+0x198>
  44bd93:	31 c0 	xorl	%eax, %eax
  44bd95:	84 c0 	testb	%al, %al
  44bd97:	0f 84 1a 01 00 00 	je	282 <type..eq.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }+0x187>
  44bd9d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44bda2:	8b 88 e4 00 00 00 	movl	228(%rax), %ecx
  44bda8:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  44bdad:	8b 9a e4 00 00 00 	movl	228(%rdx), %ebx
  44bdb3:	39 cb 	cmpl	%ecx, %ebx
  44bdb5:	0f 85 f5 00 00 00 	jne	245 <type..eq.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }+0x180>
  44bdbb:	8b 88 e8 00 00 00 	movl	232(%rax), %ecx
  44bdc1:	8b 9a e8 00 00 00 	movl	232(%rdx), %ebx
  44bdc7:	39 cb 	cmpl	%ecx, %ebx
  44bdc9:	0f 85 da 00 00 00 	jne	218 <type..eq.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }+0x179>
  44bdcf:	48 8b 8a f0 00 00 00 	movq	240(%rdx), %rcx
  44bdd6:	48 8b 98 f0 00 00 00 	movq	240(%rax), %rbx
  44bddd:	48 39 cb 	cmpq	%rcx, %rbx
  44bde0:	0f 85 bc 00 00 00 	jne	188 <type..eq.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }+0x172>
  44bde6:	8b 88 f8 00 00 00 	movl	248(%rax), %ecx
  44bdec:	8b 9a f8 00 00 00 	movl	248(%rdx), %ebx
  44bdf2:	39 cb 	cmpl	%ecx, %ebx
  44bdf4:	0f 85 a4 00 00 00 	jne	164 <type..eq.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }+0x16e>
  44bdfa:	48 8b 88 00 01 00 00 	movq	256(%rax), %rcx
  44be01:	48 8b 9a 00 01 00 00 	movq	256(%rdx), %rbx
  44be08:	48 39 d9 	cmpq	%rbx, %rcx
  44be0b:	0f 85 89 00 00 00 	jne	137 <type..eq.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }+0x16a>
  44be11:	0f b6 88 08 01 00 00 	movzbl	264(%rax), %ecx
  44be18:	0f b6 9a 08 01 00 00 	movzbl	264(%rdx), %ebx
  44be1f:	38 d9 	cmpb	%bl, %cl
  44be21:	74 41 	je	65 <type..eq.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }+0x134>
  44be23:	31 c9 	xorl	%ecx, %ecx
  44be25:	84 c9 	testb	%cl, %cl
  44be27:	75 10 	jne	16 <type..eq.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }+0x109>
  44be29:	31 c0 	xorl	%eax, %eax
  44be2b:	88 44 24 40 	movb	%al, 64(%rsp)
  44be2f:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44be34:	48 83 c4 28 	addq	$40, %rsp
  44be38:	c3 	retq
  44be39:	48 8d 8a 58 01 00 00 	leaq	344(%rdx), %rcx
  44be40:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44be45:	48 05 58 01 00 00 	addq	$344, %rax
  44be4b:	48 89 04 24 	movq	%rax, (%rsp)
  44be4f:	48 c7 44 24 10 50 00 00 00 	movq	$80, 16(%rsp)
  44be58:	e8 e3 a4 ff ff 	callq	-23325 <runtime.memequal>
  44be5d:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44be62:	eb c7 	jmp	-57 <type..eq.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }+0xfb>
  44be64:	48 8d 8a 10 01 00 00 	leaq	272(%rdx), %rcx
  44be6b:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44be70:	48 8d 88 10 01 00 00 	leaq	272(%rax), %rcx
  44be77:	48 89 0c 24 	movq	%rcx, (%rsp)
  44be7b:	48 c7 44 24 10 44 00 00 00 	movq	$68, 16(%rsp)
  44be84:	e8 b7 a4 ff ff 	callq	-23369 <runtime.memequal>
  44be89:	0f b6 4c 24 18 	movzbl	24(%rsp), %ecx
  44be8e:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44be93:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  44be98:	eb 8b 	jmp	-117 <type..eq.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }+0xf5>
  44be9a:	31 c9 	xorl	%ecx, %ecx
  44be9c:	eb 87 	jmp	-121 <type..eq.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }+0xf5>
  44be9e:	31 c9 	xorl	%ecx, %ecx
  44bea0:	eb 83 	jmp	-125 <type..eq.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }+0xf5>
  44bea2:	31 c9 	xorl	%ecx, %ecx
  44bea4:	e9 7c ff ff ff 	jmp	-132 <type..eq.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }+0xf5>
  44bea9:	31 c9 	xorl	%ecx, %ecx
  44beab:	e9 75 ff ff ff 	jmp	-139 <type..eq.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }+0xf5>
  44beb0:	31 c9 	xorl	%ecx, %ecx
  44beb2:	e9 6e ff ff ff 	jmp	-146 <type..eq.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }+0xf5>
  44beb7:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44bebc:	48 8b 54 24 38 	movq	56(%rsp), %rdx
  44bec1:	31 c9 	xorl	%ecx, %ecx
  44bec3:	e9 5d ff ff ff 	jmp	-163 <type..eq.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }+0xf5>
  44bec8:	48 8b 44 24 38 	movq	56(%rsp), %rax
  44becd:	48 8d 88 b8 00 00 00 	leaq	184(%rax), %rcx
  44bed4:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44bed9:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44bede:	48 8d 91 b8 00 00 00 	leaq	184(%rcx), %rdx
  44bee5:	48 89 14 24 	movq	%rdx, (%rsp)
  44bee9:	48 c7 44 24 10 29 00 00 00 	movq	$41, 16(%rsp)
  44bef2:	e8 49 a4 ff ff 	callq	-23479 <runtime.memequal>
  44bef7:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44befc:	e9 94 fe ff ff 	jmp	-364 <type..eq.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }+0x65>
  44bf01:	48 8b 44 24 38 	movq	56(%rsp), %rax
  44bf06:	48 8d 88 98 00 00 00 	leaq	152(%rax), %rcx
  44bf0d:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44bf12:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44bf17:	48 8d 91 98 00 00 00 	leaq	152(%rcx), %rdx
  44bf1e:	48 89 14 24 	movq	%rdx, (%rsp)
  44bf22:	48 c7 44 24 10 19 00 00 00 	movq	$25, 16(%rsp)
  44bf2b:	e8 10 a4 ff ff 	callq	-23536 <runtime.memequal>
  44bf30:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44bf35:	e9 51 fe ff ff 	jmp	-431 <type..eq.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }+0x5b>
  44bf3a:	48 8b 44 24 38 	movq	56(%rsp), %rax
  44bf3f:	48 8d 88 80 00 00 00 	leaq	128(%rax), %rcx
  44bf46:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44bf4b:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44bf50:	48 8d 91 80 00 00 00 	leaq	128(%rcx), %rdx
  44bf57:	48 89 14 24 	movq	%rdx, (%rsp)
  44bf5b:	48 c7 44 24 10 14 00 00 00 	movq	$20, 16(%rsp)
  44bf64:	e8 d7 a3 ff ff 	callq	-23593 <runtime.memequal>
  44bf69:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44bf6e:	e9 0e fe ff ff 	jmp	-498 <type..eq.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }+0x51>
  44bf73:	e8 f8 85 ff ff 	callq	-31240 <runtime.morestack_noctxt>
  44bf78:	e9 b3 fd ff ff 	jmp	-589 <type..eq.struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 [64]uint8; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; _ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }>
  44bf7d:	cc 	int3
  44bf7e:	cc 	int3
  44bf7f:	cc 	int3

type..hash.struct { runtime.lock runtime.mutex; runtime.newm runtime.muintptr; runtime.waiting bool; runtime.wake runtime.note; runtime.haveTemplateThread uint32 }:
  44bf80:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44bf89:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44bf8d:	76 68 	jbe	104 <type..hash.struct { runtime.lock runtime.mutex; runtime.newm runtime.muintptr; runtime.waiting bool; runtime.wake runtime.note; runtime.haveTemplateThread uint32 }+0x77>
  44bf8f:	48 83 ec 28 	subq	$40, %rsp
  44bf93:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44bf98:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44bf9d:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44bfa2:	48 89 04 24 	movq	%rax, (%rsp)
  44bfa6:	48 8b 4c 24 38 	movq	56(%rsp), %rcx
  44bfab:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44bfb0:	48 c7 44 24 10 11 00 00 00 	movq	$17, 16(%rsp)
  44bfb9:	e8 52 9b fb ff 	callq	-287918 <runtime.memhash>
  44bfbe:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44bfc3:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44bfc8:	48 83 c1 18 	addq	$24, %rcx
  44bfcc:	48 89 0c 24 	movq	%rcx, (%rsp)
  44bfd0:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44bfd5:	48 c7 44 24 10 0c 00 00 00 	movq	$12, 16(%rsp)
  44bfde:	e8 2d 9b fb ff 	callq	-287955 <runtime.memhash>
  44bfe3:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44bfe8:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  44bfed:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44bff2:	48 83 c4 28 	addq	$40, %rsp
  44bff6:	c3 	retq
  44bff7:	e8 74 85 ff ff 	callq	-31372 <runtime.morestack_noctxt>
  44bffc:	eb 82 	jmp	-126 <type..hash.struct { runtime.lock runtime.mutex; runtime.newm runtime.muintptr; runtime.waiting bool; runtime.wake runtime.note; runtime.haveTemplateThread uint32 }>
  44bffe:	cc 	int3
  44bfff:	cc 	int3

type..eq.struct { runtime.lock runtime.mutex; runtime.newm runtime.muintptr; runtime.waiting bool; runtime.wake runtime.note; runtime.haveTemplateThread uint32 }:
  44c000:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44c009:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44c00d:	76 70 	jbe	112 <type..eq.struct { runtime.lock runtime.mutex; runtime.newm runtime.muintptr; runtime.waiting bool; runtime.wake runtime.note; runtime.haveTemplateThread uint32 }+0x7f>
  44c00f:	48 83 ec 28 	subq	$40, %rsp
  44c013:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44c018:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44c01d:	48 8b 44 24 38 	movq	56(%rsp), %rax
  44c022:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44c027:	48 8b 4c 24 30 	movq	48(%rsp), %rcx
  44c02c:	48 89 0c 24 	movq	%rcx, (%rsp)
  44c030:	48 c7 44 24 10 11 00 00 00 	movq	$17, 16(%rsp)
  44c039:	e8 02 a3 ff ff 	callq	-23806 <runtime.memequal>
  44c03e:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44c043:	84 c0 	testb	%al, %al
  44c045:	74 34 	je	52 <type..eq.struct { runtime.lock runtime.mutex; runtime.newm runtime.muintptr; runtime.waiting bool; runtime.wake runtime.note; runtime.haveTemplateThread uint32 }+0x7b>
  44c047:	48 8b 44 24 38 	movq	56(%rsp), %rax
  44c04c:	48 8b 48 18 	movq	24(%rax), %rcx
  44c050:	48 8b 54 24 30 	movq	48(%rsp), %rdx
  44c055:	48 8b 5a 18 	movq	24(%rdx), %rbx
  44c059:	48 39 cb 	cmpq	%rcx, %rbx
  44c05c:	75 19 	jne	25 <type..eq.struct { runtime.lock runtime.mutex; runtime.newm runtime.muintptr; runtime.waiting bool; runtime.wake runtime.note; runtime.haveTemplateThread uint32 }+0x77>
  44c05e:	8b 4a 20 	movl	32(%rdx), %ecx
  44c061:	8b 40 20 	movl	32(%rax), %eax
  44c064:	39 c1 	cmpl	%eax, %ecx
  44c066:	0f 94 c0 	sete	%al
  44c069:	88 44 24 40 	movb	%al, 64(%rsp)
  44c06d:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44c072:	48 83 c4 28 	addq	$40, %rsp
  44c076:	c3 	retq
  44c077:	31 c0 	xorl	%eax, %eax
  44c079:	eb ee 	jmp	-18 <type..eq.struct { runtime.lock runtime.mutex; runtime.newm runtime.muintptr; runtime.waiting bool; runtime.wake runtime.note; runtime.haveTemplateThread uint32 }+0x69>
  44c07b:	31 c0 	xorl	%eax, %eax
  44c07d:	eb ea 	jmp	-22 <type..eq.struct { runtime.lock runtime.mutex; runtime.newm runtime.muintptr; runtime.waiting bool; runtime.wake runtime.note; runtime.haveTemplateThread uint32 }+0x69>
  44c07f:	e8 ec 84 ff ff 	callq	-31508 <runtime.morestack_noctxt>
  44c084:	e9 77 ff ff ff 	jmp	-137 <type..eq.struct { runtime.lock runtime.mutex; runtime.newm runtime.muintptr; runtime.waiting bool; runtime.wake runtime.note; runtime.haveTemplateThread uint32 }>
  44c089:	cc 	int3
  44c08a:	cc 	int3
  44c08b:	cc 	int3
  44c08c:	cc 	int3
  44c08d:	cc 	int3
  44c08e:	cc 	int3
  44c08f:	cc 	int3

type..hash.struct { runtime.note runtime.note; runtime.mask [3]uint32; runtime.wanted [3]uint32; runtime.ignored [3]uint32; runtime.recv [3]uint32; runtime.state uint32; runtime.delivering uint32; runtime.inuse bool }:
  44c090:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44c099:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44c09d:	76 43 	jbe	67 <type..hash.struct { runtime.note runtime.note; runtime.mask [3]uint32; runtime.wanted [3]uint32; runtime.ignored [3]uint32; runtime.recv [3]uint32; runtime.state uint32; runtime.delivering uint32; runtime.inuse bool }+0x52>
  44c09f:	48 83 ec 28 	subq	$40, %rsp
  44c0a3:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44c0a8:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44c0ad:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44c0b2:	48 89 04 24 	movq	%rax, (%rsp)
  44c0b6:	48 8b 44 24 38 	movq	56(%rsp), %rax
  44c0bb:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44c0c0:	48 c7 44 24 10 41 00 00 00 	movq	$65, 16(%rsp)
  44c0c9:	e8 42 9a fb ff 	callq	-288190 <runtime.memhash>
  44c0ce:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44c0d3:	48 89 44 24 40 	movq	%rax, 64(%rsp)
  44c0d8:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44c0dd:	48 83 c4 28 	addq	$40, %rsp
  44c0e1:	c3 	retq
  44c0e2:	e8 89 84 ff ff 	callq	-31607 <runtime.morestack_noctxt>
  44c0e7:	eb a7 	jmp	-89 <type..hash.struct { runtime.note runtime.note; runtime.mask [3]uint32; runtime.wanted [3]uint32; runtime.ignored [3]uint32; runtime.recv [3]uint32; runtime.state uint32; runtime.delivering uint32; runtime.inuse bool }>
  44c0e9:	cc 	int3
  44c0ea:	cc 	int3
  44c0eb:	cc 	int3
  44c0ec:	cc 	int3
  44c0ed:	cc 	int3
  44c0ee:	cc 	int3
  44c0ef:	cc 	int3

type..eq.struct { runtime.note runtime.note; runtime.mask [3]uint32; runtime.wanted [3]uint32; runtime.ignored [3]uint32; runtime.recv [3]uint32; runtime.state uint32; runtime.delivering uint32; runtime.inuse bool }:
  44c0f0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44c0f9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44c0fd:	76 42 	jbe	66 <type..eq.struct { runtime.note runtime.note; runtime.mask [3]uint32; runtime.wanted [3]uint32; runtime.ignored [3]uint32; runtime.recv [3]uint32; runtime.state uint32; runtime.delivering uint32; runtime.inuse bool }+0x51>
  44c0ff:	48 83 ec 28 	subq	$40, %rsp
  44c103:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44c108:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44c10d:	48 8b 44 24 38 	movq	56(%rsp), %rax
  44c112:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44c117:	48 8b 44 24 30 	movq	48(%rsp), %rax
  44c11c:	48 89 04 24 	movq	%rax, (%rsp)
  44c120:	48 c7 44 24 10 41 00 00 00 	movq	$65, 16(%rsp)
  44c129:	e8 12 a2 ff ff 	callq	-24046 <runtime.memequal>
  44c12e:	0f b6 44 24 18 	movzbl	24(%rsp), %eax
  44c133:	88 44 24 40 	movb	%al, 64(%rsp)
  44c137:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44c13c:	48 83 c4 28 	addq	$40, %rsp
  44c140:	c3 	retq
  44c141:	e8 2a 84 ff ff 	callq	-31702 <runtime.morestack_noctxt>
  44c146:	eb a8 	jmp	-88 <type..eq.struct { runtime.note runtime.note; runtime.mask [3]uint32; runtime.wanted [3]uint32; runtime.ignored [3]uint32; runtime.recv [3]uint32; runtime.state uint32; runtime.delivering uint32; runtime.inuse bool }>
  44c148:	cc 	int3
  44c149:	cc 	int3
  44c14a:	cc 	int3
  44c14b:	cc 	int3
  44c14c:	cc 	int3
  44c14d:	cc 	int3
  44c14e:	cc 	int3
  44c14f:	cc 	int3

main.det1:
  44c150:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44c159:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44c15d:	76 70 	jbe	112 <main.det1+0x7f>
  44c15f:	48 83 ec 28 	subq	$40, %rsp
  44c163:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44c168:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44c16d:	48 c7 44 24 30 00 00 00 00 	movq	$0, 48(%rsp)
  44c176:	48 c7 44 24 18 02 00 00 00 	movq	$2, 24(%rsp)
  44c17f:	48 8d 44 24 18 	leaq	24(%rsp), %rax
  44c184:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  44c189:	c7 04 24 08 00 00 00 	movl	$8, (%rsp)
  44c190:	48 8d 05 a9 1d 02 00 	leaq	138665(%rip), %rax
  44c197:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44c19c:	e8 7f 3b fd ff 	callq	-181377 <runtime.deferproc>
  44c1a1:	85 c0 	testl	%eax, %eax
  44c1a3:	75 1a 	jne	26 <main.det1+0x6f>
  44c1a5:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44c1aa:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  44c1af:	90 	nop
  44c1b0:	e8 4b 44 fd ff 	callq	-179125 <runtime.deferreturn>
  44c1b5:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44c1ba:	48 83 c4 28 	addq	$40, %rsp
  44c1be:	c3 	retq
  44c1bf:	90 	nop
  44c1c0:	e8 3b 44 fd ff 	callq	-179141 <runtime.deferreturn>
  44c1c5:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44c1ca:	48 83 c4 28 	addq	$40, %rsp
  44c1ce:	c3 	retq
  44c1cf:	e8 9c 83 ff ff 	callq	-31844 <runtime.morestack_noctxt>
  44c1d4:	e9 77 ff ff ff 	jmp	-137 <main.det1>
  44c1d9:	cc 	int3
  44c1da:	cc 	int3
  44c1db:	cc 	int3
  44c1dc:	cc 	int3
  44c1dd:	cc 	int3
  44c1de:	cc 	int3
  44c1df:	cc 	int3

main.det2:
  44c1e0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44c1e9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44c1ed:	0f 86 86 00 00 00 	jbe	134 <main.det2+0x99>
  44c1f3:	48 83 ec 28 	subq	$40, %rsp
  44c1f7:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44c1fc:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44c201:	48 c7 44 24 30 00 00 00 00 	movq	$0, 48(%rsp)
  44c20a:	48 8d 05 0f ac 00 00 	leaq	44047(%rip), %rax
  44c211:	48 89 04 24 	movq	%rax, (%rsp)
  44c215:	e8 06 ef fb ff 	callq	-266490 <runtime.newobject>
  44c21a:	48 8b 44 24 08 	movq	8(%rsp), %rax
  44c21f:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  44c224:	48 c7 00 02 00 00 00 	movq	$2, (%rax)
  44c22b:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  44c230:	c7 04 24 08 00 00 00 	movl	$8, (%rsp)
  44c237:	48 8d 0d 0a 1d 02 00 	leaq	138506(%rip), %rcx
  44c23e:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44c243:	e8 d8 3a fd ff 	callq	-181544 <runtime.deferproc>
  44c248:	85 c0 	testl	%eax, %eax
  44c24a:	75 1d 	jne	29 <main.det2+0x89>
  44c24c:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44c251:	48 8b 00 	movq	(%rax), %rax
  44c254:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  44c259:	90 	nop
  44c25a:	e8 a1 43 fd ff 	callq	-179295 <runtime.deferreturn>
  44c25f:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44c264:	48 83 c4 28 	addq	$40, %rsp
  44c268:	c3 	retq
  44c269:	90 	nop
  44c26a:	e8 91 43 fd ff 	callq	-179311 <runtime.deferreturn>
  44c26f:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44c274:	48 83 c4 28 	addq	$40, %rsp
  44c278:	c3 	retq
  44c279:	e8 f2 82 ff ff 	callq	-32014 <runtime.morestack_noctxt>
  44c27e:	e9 5d ff ff ff 	jmp	-163 <main.det2>
  44c283:	cc 	int3
  44c284:	cc 	int3
  44c285:	cc 	int3
  44c286:	cc 	int3
  44c287:	cc 	int3
  44c288:	cc 	int3
  44c289:	cc 	int3
  44c28a:	cc 	int3
  44c28b:	cc 	int3
  44c28c:	cc 	int3
  44c28d:	cc 	int3
  44c28e:	cc 	int3
  44c28f:	cc 	int3

main.det3:
  44c290:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44c299:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44c29d:	76 5d 	jbe	93 <main.det3+0x6c>
  44c29f:	48 83 ec 20 	subq	$32, %rsp
  44c2a3:	48 89 6c 24 18 	movq	%rbp, 24(%rsp)
  44c2a8:	48 8d 6c 24 18 	leaq	24(%rsp), %rbp
  44c2ad:	48 c7 44 24 28 02 00 00 00 	movq	$2, 40(%rsp)
  44c2b6:	48 8d 44 24 28 	leaq	40(%rsp), %rax
  44c2bb:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  44c2c0:	c7 04 24 08 00 00 00 	movl	$8, (%rsp)
  44c2c7:	48 8d 05 82 1c 02 00 	leaq	138370(%rip), %rax
  44c2ce:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44c2d3:	e8 48 3a fd ff 	callq	-181688 <runtime.deferproc>
  44c2d8:	85 c0 	testl	%eax, %eax
  44c2da:	75 10 	jne	16 <main.det3+0x5c>
  44c2dc:	90 	nop
  44c2dd:	e8 1e 43 fd ff 	callq	-179426 <runtime.deferreturn>
  44c2e2:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  44c2e7:	48 83 c4 20 	addq	$32, %rsp
  44c2eb:	c3 	retq
  44c2ec:	90 	nop
  44c2ed:	e8 0e 43 fd ff 	callq	-179442 <runtime.deferreturn>
  44c2f2:	48 8b 6c 24 18 	movq	24(%rsp), %rbp
  44c2f7:	48 83 c4 20 	addq	$32, %rsp
  44c2fb:	c3 	retq
  44c2fc:	e8 6f 82 ff ff 	callq	-32145 <runtime.morestack_noctxt>
  44c301:	eb 8d 	jmp	-115 <main.det3>
  44c303:	cc 	int3
  44c304:	cc 	int3
  44c305:	cc 	int3
  44c306:	cc 	int3
  44c307:	cc 	int3
  44c308:	cc 	int3
  44c309:	cc 	int3
  44c30a:	cc 	int3
  44c30b:	cc 	int3
  44c30c:	cc 	int3
  44c30d:	cc 	int3
  44c30e:	cc 	int3
  44c30f:	cc 	int3

main.det4:
  44c310:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44c319:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44c31d:	0f 86 83 00 00 00 	jbe	131 <main.det4+0x96>
  44c323:	48 83 ec 28 	subq	$40, %rsp
  44c327:	48 89 6c 24 20 	movq	%rbp, 32(%rsp)
  44c32c:	48 8d 6c 24 20 	leaq	32(%rsp), %rbp
  44c331:	48 c7 44 24 30 00 00 00 00 	movq	$0, 48(%rsp)
  44c33a:	48 8d 05 df aa 00 00 	leaq	43743(%rip), %rax
  44c341:	48 89 04 24 	movq	%rax, (%rsp)
  44c345:	e8 d6 ed fb ff 	callq	-266794 <runtime.newobject>
  44c34a:	48 8b 44 24 08 	movq	8(%rsp), %rax
  44c34f:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  44c354:	48 c7 00 02 00 00 00 	movq	$2, (%rax)
  44c35b:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  44c360:	c7 04 24 08 00 00 00 	movl	$8, (%rsp)
  44c367:	48 8d 0d ea 1b 02 00 	leaq	138218(%rip), %rcx
  44c36e:	48 89 4c 24 08 	movq	%rcx, 8(%rsp)
  44c373:	e8 a8 39 fd ff 	callq	-181848 <runtime.deferproc>
  44c378:	85 c0 	testl	%eax, %eax
  44c37a:	75 1a 	jne	26 <main.det4+0x86>
  44c37c:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44c381:	48 89 44 24 30 	movq	%rax, 48(%rsp)
  44c386:	90 	nop
  44c387:	e8 74 42 fd ff 	callq	-179596 <runtime.deferreturn>
  44c38c:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44c391:	48 83 c4 28 	addq	$40, %rsp
  44c395:	c3 	retq
  44c396:	90 	nop
  44c397:	e8 64 42 fd ff 	callq	-179612 <runtime.deferreturn>
  44c39c:	48 8b 6c 24 20 	movq	32(%rsp), %rbp
  44c3a1:	48 83 c4 28 	addq	$40, %rsp
  44c3a5:	c3 	retq
  44c3a6:	e8 c5 81 ff ff 	callq	-32315 <runtime.morestack_noctxt>
  44c3ab:	e9 60 ff ff ff 	jmp	-160 <main.det4>

main.main:
  44c3b0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44c3b9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44c3bd:	0f 86 d1 00 00 00 	jbe	209 <main.main+0xe4>
  44c3c3:	48 83 ec 38 	subq	$56, %rsp
  44c3c7:	48 89 6c 24 30 	movq	%rbp, 48(%rsp)
  44c3cc:	48 8d 6c 24 30 	leaq	48(%rsp), %rbp
  44c3d1:	e8 7a fd ff ff 	callq	-646 <main.det1>
  44c3d6:	48 8b 04 24 	movq	(%rsp), %rax
  44c3da:	48 89 44 24 18 	movq	%rax, 24(%rsp)
  44c3df:	e8 fc fd ff ff 	callq	-516 <main.det2>
  44c3e4:	48 8b 04 24 	movq	(%rsp), %rax
  44c3e8:	48 89 44 24 10 	movq	%rax, 16(%rsp)
  44c3ed:	e8 9e fe ff ff 	callq	-354 <main.det3>
  44c3f2:	48 8b 04 24 	movq	(%rsp), %rax
  44c3f6:	48 89 44 24 08 	movq	%rax, 8(%rsp)
  44c3fb:	e8 10 ff ff ff 	callq	-240 <main.det4>
  44c400:	48 8b 04 24 	movq	(%rsp), %rax
  44c404:	48 89 44 24 28 	movq	%rax, 40(%rsp)
  44c409:	e8 f2 56 fd ff 	callq	-174350 <runtime.printlock>
  44c40e:	48 8b 44 24 18 	movq	24(%rsp), %rax
  44c413:	48 89 04 24 	movq	%rax, (%rsp)
  44c417:	e8 64 5e fd ff 	callq	-172444 <runtime.printint>
  44c41c:	e8 6f 59 fd ff 	callq	-173713 <runtime.printnl>
  44c421:	e8 5a 57 fd ff 	callq	-174246 <runtime.printunlock>
  44c426:	e8 d5 56 fd ff 	callq	-174379 <runtime.printlock>
  44c42b:	48 8b 44 24 10 	movq	16(%rsp), %rax
  44c430:	48 89 04 24 	movq	%rax, (%rsp)
  44c434:	e8 47 5e fd ff 	callq	-172473 <runtime.printint>
  44c439:	e8 52 59 fd ff 	callq	-173742 <runtime.printnl>
  44c43e:	e8 3d 57 fd ff 	callq	-174275 <runtime.printunlock>
  44c443:	e8 b8 56 fd ff 	callq	-174408 <runtime.printlock>
  44c448:	48 8b 44 24 08 	movq	8(%rsp), %rax
  44c44d:	48 89 04 24 	movq	%rax, (%rsp)
  44c451:	e8 2a 5e fd ff 	callq	-172502 <runtime.printint>
  44c456:	e8 35 59 fd ff 	callq	-173771 <runtime.printnl>
  44c45b:	e8 20 57 fd ff 	callq	-174304 <runtime.printunlock>
  44c460:	48 8b 44 24 28 	movq	40(%rsp), %rax
  44c465:	48 8b 00 	movq	(%rax), %rax
  44c468:	48 89 44 24 20 	movq	%rax, 32(%rsp)
  44c46d:	e8 8e 56 fd ff 	callq	-174450 <runtime.printlock>
  44c472:	48 8b 44 24 20 	movq	32(%rsp), %rax
  44c477:	48 89 04 24 	movq	%rax, (%rsp)
  44c47b:	e8 00 5e fd ff 	callq	-172544 <runtime.printint>
  44c480:	e8 0b 59 fd ff 	callq	-173813 <runtime.printnl>
  44c485:	e8 f6 56 fd ff 	callq	-174346 <runtime.printunlock>
  44c48a:	48 8b 6c 24 30 	movq	48(%rsp), %rbp
  44c48f:	48 83 c4 38 	addq	$56, %rsp
  44c493:	c3 	retq
  44c494:	e8 d7 80 ff ff 	callq	-32553 <runtime.morestack_noctxt>
  44c499:	e9 12 ff ff ff 	jmp	-238 <main.main>
  44c49e:	cc 	int3
  44c49f:	cc 	int3

main.det1.func1:
  44c4a0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44c4a9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44c4ad:	76 47 	jbe	71 <main.det1.func1+0x56>
  44c4af:	48 83 ec 18 	subq	$24, %rsp
  44c4b3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  44c4b8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  44c4bd:	e8 3e 56 fd ff 	callq	-174530 <runtime.printlock>
  44c4c2:	48 8d 05 ea d8 01 00 	leaq	121066(%rip), %rax
  44c4c9:	48 89 04 24 	movq	%rax, (%rsp)
  44c4cd:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  44c4d6:	e8 65 5f fd ff 	callq	-172187 <runtime.printstring>
  44c4db:	e8 a0 56 fd ff 	callq	-174432 <runtime.printunlock>
  44c4e0:	48 8b 44 24 20 	movq	32(%rsp), %rax
  44c4e5:	48 c7 00 01 00 00 00 	movq	$1, (%rax)
  44c4ec:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  44c4f1:	48 83 c4 18 	addq	$24, %rsp
  44c4f5:	c3 	retq
  44c4f6:	e8 75 80 ff ff 	callq	-32651 <runtime.morestack_noctxt>
  44c4fb:	eb a3 	jmp	-93 <main.det1.func1>
  44c4fd:	cc 	int3
  44c4fe:	cc 	int3
  44c4ff:	cc 	int3

main.det2.func1:
  44c500:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44c509:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44c50d:	76 47 	jbe	71 <main.det2.func1+0x56>
  44c50f:	48 83 ec 18 	subq	$24, %rsp
  44c513:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  44c518:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  44c51d:	e8 de 55 fd ff 	callq	-174626 <runtime.printlock>
  44c522:	48 8d 05 8f d8 01 00 	leaq	120975(%rip), %rax
  44c529:	48 89 04 24 	movq	%rax, (%rsp)
  44c52d:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  44c536:	e8 05 5f fd ff 	callq	-172283 <runtime.printstring>
  44c53b:	e8 40 56 fd ff 	callq	-174528 <runtime.printunlock>
  44c540:	48 8b 44 24 20 	movq	32(%rsp), %rax
  44c545:	48 c7 00 01 00 00 00 	movq	$1, (%rax)
  44c54c:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  44c551:	48 83 c4 18 	addq	$24, %rsp
  44c555:	c3 	retq
  44c556:	e8 15 80 ff ff 	callq	-32747 <runtime.morestack_noctxt>
  44c55b:	eb a3 	jmp	-93 <main.det2.func1>
  44c55d:	cc 	int3
  44c55e:	cc 	int3
  44c55f:	cc 	int3

main.det3.func1:
  44c560:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44c569:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44c56d:	76 47 	jbe	71 <main.det3.func1+0x56>
  44c56f:	48 83 ec 18 	subq	$24, %rsp
  44c573:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  44c578:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  44c57d:	e8 7e 55 fd ff 	callq	-174722 <runtime.printlock>
  44c582:	48 8d 05 34 d8 01 00 	leaq	120884(%rip), %rax
  44c589:	48 89 04 24 	movq	%rax, (%rsp)
  44c58d:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  44c596:	e8 a5 5e fd ff 	callq	-172379 <runtime.printstring>
  44c59b:	e8 e0 55 fd ff 	callq	-174624 <runtime.printunlock>
  44c5a0:	48 8b 44 24 20 	movq	32(%rsp), %rax
  44c5a5:	48 c7 00 01 00 00 00 	movq	$1, (%rax)
  44c5ac:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  44c5b1:	48 83 c4 18 	addq	$24, %rsp
  44c5b5:	c3 	retq
  44c5b6:	e8 b5 7f ff ff 	callq	-32843 <runtime.morestack_noctxt>
  44c5bb:	eb a3 	jmp	-93 <main.det3.func1>
  44c5bd:	cc 	int3
  44c5be:	cc 	int3
  44c5bf:	cc 	int3

main.det4.func1:
  44c5c0:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44c5c9:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44c5cd:	76 47 	jbe	71 <main.det4.func1+0x56>
  44c5cf:	48 83 ec 18 	subq	$24, %rsp
  44c5d3:	48 89 6c 24 10 	movq	%rbp, 16(%rsp)
  44c5d8:	48 8d 6c 24 10 	leaq	16(%rsp), %rbp
  44c5dd:	e8 1e 55 fd ff 	callq	-174818 <runtime.printlock>
  44c5e2:	48 8d 05 d9 d7 01 00 	leaq	120793(%rip), %rax
  44c5e9:	48 89 04 24 	movq	%rax, (%rsp)
  44c5ed:	48 c7 44 24 08 05 00 00 00 	movq	$5, 8(%rsp)
  44c5f6:	e8 45 5e fd ff 	callq	-172475 <runtime.printstring>
  44c5fb:	e8 80 55 fd ff 	callq	-174720 <runtime.printunlock>
  44c600:	48 8b 44 24 20 	movq	32(%rsp), %rax
  44c605:	48 c7 00 01 00 00 00 	movq	$1, (%rax)
  44c60c:	48 8b 6c 24 10 	movq	16(%rsp), %rbp
  44c611:	48 83 c4 18 	addq	$24, %rsp
  44c615:	c3 	retq
  44c616:	e8 55 7f ff ff 	callq	-32939 <runtime.morestack_noctxt>
  44c61b:	eb a3 	jmp	-93 <main.det4.func1>
  44c61d:	cc 	int3
  44c61e:	cc 	int3
  44c61f:	cc 	int3

main.init:
  44c620:	64 48 8b 0c 25 f8 ff ff ff 	movq	%fs:-8, %rcx
  44c629:	48 3b 61 10 	cmpq	16(%rcx), %rsp
  44c62d:	76 39 	jbe	57 <main.init+0x48>
  44c62f:	48 83 ec 08 	subq	$8, %rsp
  44c633:	48 89 2c 24 	movq	%rbp, (%rsp)
  44c637:	48 8d 2c 24 	leaq	(%rsp), %rbp
  44c63b:	0f b6 05 5e 72 07 00 	movzbl	488030(%rip), %eax
  44c642:	3c 01 	cmpb	$1, %al
  44c644:	76 09 	jbe	9 <main.init+0x2f>
  44c646:	48 8b 2c 24 	movq	(%rsp), %rbp
  44c64a:	48 83 c4 08 	addq	$8, %rsp
  44c64e:	c3 	retq
  44c64f:	75 07 	jne	7 <main.init+0x38>
  44c651:	e8 8a 36 fd ff 	callq	-182646 <runtime.throwinit>
  44c656:	0f 0b 	ud2
  44c658:	c6 05 41 72 07 00 02 	movb	$2, 488001(%rip)
  44c65f:	48 8b 2c 24 	movq	(%rsp), %rbp
  44c663:	48 83 c4 08 	addq	$8, %rsp
  44c667:	c3 	retq
  44c668:	e8 03 7f ff ff 	callq	-33021 <runtime.morestack_noctxt>
  44c66d:	eb b1 	jmp	-79 <main.init>
