/*
Copyright 2019 The Lijiao Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/lijiaocn/workspace/studys/study-k8s-develop/code-generator/example-1/internal/apis/selfcrd/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SelfCRDLister helps list SelfCRDs.
type SelfCRDLister interface {
	// List lists all SelfCRDs in the indexer.
	List(selector labels.Selector) (ret []*v1.SelfCRD, err error)
	// SelfCRDs returns an object that can list and get SelfCRDs.
	SelfCRDs(namespace string) SelfCRDNamespaceLister
	SelfCRDListerExpansion
}

// selfCRDLister implements the SelfCRDLister interface.
type selfCRDLister struct {
	indexer cache.Indexer
}

// NewSelfCRDLister returns a new SelfCRDLister.
func NewSelfCRDLister(indexer cache.Indexer) SelfCRDLister {
	return &selfCRDLister{indexer: indexer}
}

// List lists all SelfCRDs in the indexer.
func (s *selfCRDLister) List(selector labels.Selector) (ret []*v1.SelfCRD, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.SelfCRD))
	})
	return ret, err
}

// SelfCRDs returns an object that can list and get SelfCRDs.
func (s *selfCRDLister) SelfCRDs(namespace string) SelfCRDNamespaceLister {
	return selfCRDNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SelfCRDNamespaceLister helps list and get SelfCRDs.
type SelfCRDNamespaceLister interface {
	// List lists all SelfCRDs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.SelfCRD, err error)
	// Get retrieves the SelfCRD from the indexer for a given namespace and name.
	Get(name string) (*v1.SelfCRD, error)
	SelfCRDNamespaceListerExpansion
}

// selfCRDNamespaceLister implements the SelfCRDNamespaceLister
// interface.
type selfCRDNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SelfCRDs in the indexer for a given namespace.
func (s selfCRDNamespaceLister) List(selector labels.Selector) (ret []*v1.SelfCRD, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.SelfCRD))
	})
	return ret, err
}

// Get retrieves the SelfCRD from the indexer for a given namespace and name.
func (s selfCRDNamespaceLister) Get(name string) (*v1.SelfCRD, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("selfcrd"), name)
	}
	return obj.(*v1.SelfCRD), nil
}
